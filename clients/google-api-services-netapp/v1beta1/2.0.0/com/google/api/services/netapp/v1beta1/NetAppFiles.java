/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.netapp.v1beta1;

/**
 * Service definition for NetAppFiles (v1beta1).
 *
 * <p>
 * Google Cloud NetApp Volumes is a fully-managed, cloud-based data storage service that provides advanced data management capabilities and highly scalable performance with global availability.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/netapp/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link NetAppFilesRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class NetAppFiles extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        (com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1))) ||
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION >= 2,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "2.0.0 of the NetApp API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://netapp.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://netapp.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public NetAppFiles(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  NetAppFiles(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code NetAppFiles netapp = new NetAppFiles(...);}
   *   {@code NetAppFiles.Projects.List request = netapp.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the Locations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code NetAppFiles netapp = new NetAppFiles(...);}
     *   {@code NetAppFiles.Locations.List request = netapp.locations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Locations locations() {
      return new Locations();
    }

    /**
     * The "locations" collection of methods.
     */
    public class Locations {

      /**
       * Gets information about a location.
       *
       * Create a request for the method "locations.get".
       *
       * This request holds the parameters needed by the netapp server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Resource name for the location.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Location> {

        private static final String REST_PATH = "v1beta1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

        /**
         * Gets information about a location.
         *
         * Create a request for the method "locations.get".
         *
         * This request holds the parameters needed by the the netapp server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Resource name for the location.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(NetAppFiles.this, "GET", REST_PATH, null, com.google.api.services.netapp.v1beta1.model.Location.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Resource name for the location. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Resource name for the location.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Resource name for the location. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists information about the supported locations for this service.
       *
       * Create a request for the method "locations.list".
       *
       * This request holds the parameters needed by the netapp server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param name The resource that owns the locations collection, if applicable.
       * @return the request
       */
      public List list(java.lang.String name) throws java.io.IOException {
        List result = new List(name);
        initialize(result);
        return result;
      }

      public class List extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.ListLocationsResponse> {

        private static final String REST_PATH = "v1beta1/{+name}/locations";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Lists information about the supported locations for this service.
         *
         * Create a request for the method "locations.list".
         *
         * This request holds the parameters needed by the the netapp server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The resource that owns the locations collection, if applicable.
         * @since 1.13
         */
        protected List(java.lang.String name) {
          super(NetAppFiles.this, "GET", REST_PATH, null, com.google.api.services.netapp.v1beta1.model.ListLocationsResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** The resource that owns the locations collection, if applicable. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The resource that owns the locations collection, if applicable.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The resource that owns the locations collection, if applicable. */
        public List setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * A filter to narrow down results to a preferred subset. The filtering language accepts
         * strings like `"displayName=tokyo"`, and is documented in more detail in
         * [AIP-160](https://google.aip.dev/160).
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** A filter to narrow down results to a preferred subset. The filtering language accepts strings like
       `"displayName=tokyo"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * A filter to narrow down results to a preferred subset. The filtering language accepts
         * strings like `"displayName=tokyo"`, and is documented in more detail in
         * [AIP-160](https://google.aip.dev/160).
         */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /** The maximum number of results to return. If not set, the service selects a default. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of results to return. If not set, the service selects a default.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The maximum number of results to return. If not set, the service selects a default. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token received from the `next_page_token` field in the response. Send that page
         * token to receive the subsequent page.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token received from the `next_page_token` field in the response. Send that page token to
       receive the subsequent page.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token received from the `next_page_token` field in the response. Send that page
         * token to receive the subsequent page.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the ActiveDirectories collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code NetAppFiles netapp = new NetAppFiles(...);}
       *   {@code NetAppFiles.ActiveDirectories.List request = netapp.activeDirectories().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public ActiveDirectories activeDirectories() {
        return new ActiveDirectories();
      }

      /**
       * The "activeDirectories" collection of methods.
       */
      public class ActiveDirectories {

        /**
         * CreateActiveDirectory Creates the active directory specified in the request.
         *
         * Create a request for the method "activeDirectories.create".
         *
         * This request holds the parameters needed by the netapp server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Value for parent.
         * @param content the {@link com.google.api.services.netapp.v1beta1.model.ActiveDirectory}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.netapp.v1beta1.model.ActiveDirectory content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Operation> {

          private static final String REST_PATH = "v1beta1/{+parent}/activeDirectories";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * CreateActiveDirectory Creates the active directory specified in the request.
           *
           * Create a request for the method "activeDirectories.create".
           *
           * This request holds the parameters needed by the the netapp server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Value for parent.
           * @param content the {@link com.google.api.services.netapp.v1beta1.model.ActiveDirectory}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.netapp.v1beta1.model.ActiveDirectory content) {
            super(NetAppFiles.this, "POST", REST_PATH, content, com.google.api.services.netapp.v1beta1.model.Operation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Value for parent. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Value for parent.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. Value for parent. */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Required. ID of the active directory to create. Must be unique within the parent
           * resource. Must contain only letters, numbers and hyphen, with the first character a
           * letter , the last a letter or a number, and a 63 character maximum.
           */
          @com.google.api.client.util.Key
          private java.lang.String activeDirectoryId;

          /** Required. ID of the active directory to create. Must be unique within the parent resource. Must
         contain only letters, numbers and hyphen, with the first character a letter , the last a letter or
         a number, and a 63 character maximum.
           */
          public java.lang.String getActiveDirectoryId() {
            return activeDirectoryId;
          }

          /**
           * Required. ID of the active directory to create. Must be unique within the parent
           * resource. Must contain only letters, numbers and hyphen, with the first character a
           * letter , the last a letter or a number, and a 63 character maximum.
           */
          public Create setActiveDirectoryId(java.lang.String activeDirectoryId) {
            this.activeDirectoryId = activeDirectoryId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Delete the active directory specified in the request.
         *
         * Create a request for the method "activeDirectories.delete".
         *
         * This request holds the parameters needed by the netapp server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the active directory.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Operation> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/activeDirectories/[^/]+$");

          /**
           * Delete the active directory specified in the request.
           *
           * Create a request for the method "activeDirectories.delete".
           *
           * This request holds the parameters needed by the the netapp server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the active directory.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(NetAppFiles.this, "DELETE", REST_PATH, null, com.google.api.services.netapp.v1beta1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/activeDirectories/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Name of the active directory. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the active directory.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. Name of the active directory. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/activeDirectories/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Describes a specified active directory.
         *
         * Create a request for the method "activeDirectories.get".
         *
         * This request holds the parameters needed by the netapp server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the active directory.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.ActiveDirectory> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/activeDirectories/[^/]+$");

          /**
           * Describes a specified active directory.
           *
           * Create a request for the method "activeDirectories.get".
           *
           * This request holds the parameters needed by the the netapp server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the active directory.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(NetAppFiles.this, "GET", REST_PATH, null, com.google.api.services.netapp.v1beta1.model.ActiveDirectory.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/activeDirectories/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Name of the active directory. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the active directory.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. Name of the active directory. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/activeDirectories/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists active directories.
         *
         * Create a request for the method "activeDirectories.list".
         *
         * This request holds the parameters needed by the netapp server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Parent value for ListActiveDirectoriesRequest
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.ListActiveDirectoriesResponse> {

          private static final String REST_PATH = "v1beta1/{+parent}/activeDirectories";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists active directories.
           *
           * Create a request for the method "activeDirectories.list".
           *
           * This request holds the parameters needed by the the netapp server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Parent value for ListActiveDirectoriesRequest
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(NetAppFiles.this, "GET", REST_PATH, null, com.google.api.services.netapp.v1beta1.model.ListActiveDirectoriesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Parent value for ListActiveDirectoriesRequest */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Parent value for ListActiveDirectoriesRequest
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. Parent value for ListActiveDirectoriesRequest */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Filtering results */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Filtering results
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** Filtering results */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** Hint for how to order the results */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Hint for how to order the results
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /** Hint for how to order the results */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /**
           * Requested page size. Server may return fewer items than requested. If unspecified, the
           * server will pick an appropriate default.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Requested page size. Server may return fewer items than requested. If unspecified, the server will
         pick an appropriate default.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Requested page size. Server may return fewer items than requested. If unspecified, the
           * server will pick an appropriate default.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** A token identifying a page of results the server should return. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** A token identifying a page of results the server should return.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** A token identifying a page of results the server should return. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Update the parameters of an active directories.
         *
         * Create a request for the method "activeDirectories.patch".
         *
         * This request holds the parameters needed by the netapp server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Identifier. The resource name of the active directory. Format:
         *        `projects/{project_number}/locations/{location_id}/activeDirectories/{active_directory_id}
         *        `.
         * @param content the {@link com.google.api.services.netapp.v1beta1.model.ActiveDirectory}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.netapp.v1beta1.model.ActiveDirectory content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Operation> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/activeDirectories/[^/]+$");

          /**
           * Update the parameters of an active directories.
           *
           * Create a request for the method "activeDirectories.patch".
           *
           * This request holds the parameters needed by the the netapp server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Identifier. The resource name of the active directory. Format:
         *        `projects/{project_number}/locations/{location_id}/activeDirectories/{active_directory_id}
         *        `.
           * @param content the {@link com.google.api.services.netapp.v1beta1.model.ActiveDirectory}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.netapp.v1beta1.model.ActiveDirectory content) {
            super(NetAppFiles.this, "PATCH", REST_PATH, content, com.google.api.services.netapp.v1beta1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/activeDirectories/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Identifier. The resource name of the active directory. Format: `projects/{project_numbe
           * r}/locations/{location_id}/activeDirectories/{active_directory_id}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Identifier. The resource name of the active directory. Format:
         `projects/{project_number}/locations/{location_id}/activeDirectories/{active_directory_id}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Identifier. The resource name of the active directory. Format: `projects/{project_numbe
           * r}/locations/{location_id}/activeDirectories/{active_directory_id}`.
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/activeDirectories/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Required. Field mask is used to specify the fields to be overwritten in the Active
           * Directory resource by the update. The fields specified in the update_mask are relative
           * to the resource, not the full request. A field will be overwritten if it is in the
           * mask. If the user does not provide a mask then all fields will be overwritten.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. Field mask is used to specify the fields to be overwritten in the Active Directory
         resource by the update. The fields specified in the update_mask are relative to the resource, not
         the full request. A field will be overwritten if it is in the mask. If the user does not provide a
         mask then all fields will be overwritten.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Required. Field mask is used to specify the fields to be overwritten in the Active
           * Directory resource by the update. The fields specified in the update_mask are relative
           * to the resource, not the full request. A field will be overwritten if it is in the
           * mask. If the user does not provide a mask then all fields will be overwritten.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the BackupPolicies collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code NetAppFiles netapp = new NetAppFiles(...);}
       *   {@code NetAppFiles.BackupPolicies.List request = netapp.backupPolicies().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public BackupPolicies backupPolicies() {
        return new BackupPolicies();
      }

      /**
       * The "backupPolicies" collection of methods.
       */
      public class BackupPolicies {

        /**
         * Creates new backup policy
         *
         * Create a request for the method "backupPolicies.create".
         *
         * This request holds the parameters needed by the netapp server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The location to create the backup policies of, in the format
         *        `projects/{project_id}/locations/{location}`
         * @param content the {@link com.google.api.services.netapp.v1beta1.model.BackupPolicy}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.netapp.v1beta1.model.BackupPolicy content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Operation> {

          private static final String REST_PATH = "v1beta1/{+parent}/backupPolicies";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates new backup policy
           *
           * Create a request for the method "backupPolicies.create".
           *
           * This request holds the parameters needed by the the netapp server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The location to create the backup policies of, in the format
         *        `projects/{project_id}/locations/{location}`
           * @param content the {@link com.google.api.services.netapp.v1beta1.model.BackupPolicy}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.netapp.v1beta1.model.BackupPolicy content) {
            super(NetAppFiles.this, "POST", REST_PATH, content, com.google.api.services.netapp.v1beta1.model.Operation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The location to create the backup policies of, in the format
           * `projects/{project_id}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The location to create the backup policies of, in the format
         `projects/{project_id}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The location to create the backup policies of, in the format
           * `projects/{project_id}/locations/{location}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Required. The ID to use for the backup policy. The ID must be unique within the
           * specified location. Must contain only letters, numbers and hyphen, with the first
           * character a letter, the last a letter or a number, and a 63 character maximum.
           */
          @com.google.api.client.util.Key
          private java.lang.String backupPolicyId;

          /** Required. The ID to use for the backup policy. The ID must be unique within the specified location.
         Must contain only letters, numbers and hyphen, with the first character a letter, the last a letter
         or a number, and a 63 character maximum.
           */
          public java.lang.String getBackupPolicyId() {
            return backupPolicyId;
          }

          /**
           * Required. The ID to use for the backup policy. The ID must be unique within the
           * specified location. Must contain only letters, numbers and hyphen, with the first
           * character a letter, the last a letter or a number, and a 63 character maximum.
           */
          public Create setBackupPolicyId(java.lang.String backupPolicyId) {
            this.backupPolicyId = backupPolicyId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Warning! This operation will permanently delete the backup policy.
         *
         * Create a request for the method "backupPolicies.delete".
         *
         * This request holds the parameters needed by the netapp server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The backup policy resource name, in the format
         *        `projects/{project_id}/locations/{location}/backupPolicies/{backup_policy_id}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Operation> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/backupPolicies/[^/]+$");

          /**
           * Warning! This operation will permanently delete the backup policy.
           *
           * Create a request for the method "backupPolicies.delete".
           *
           * This request holds the parameters needed by the the netapp server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The backup policy resource name, in the format
         *        `projects/{project_id}/locations/{location}/backupPolicies/{backup_policy_id}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(NetAppFiles.this, "DELETE", REST_PATH, null, com.google.api.services.netapp.v1beta1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/backupPolicies/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The backup policy resource name, in the format
           * `projects/{project_id}/locations/{location}/backupPolicies/{backup_policy_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The backup policy resource name, in the format
         `projects/{project_id}/locations/{location}/backupPolicies/{backup_policy_id}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The backup policy resource name, in the format
           * `projects/{project_id}/locations/{location}/backupPolicies/{backup_policy_id}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/backupPolicies/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Returns the description of the specified backup policy by backup_policy_id.
         *
         * Create a request for the method "backupPolicies.get".
         *
         * This request holds the parameters needed by the netapp server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The backupPolicy resource name, in the format
         *        `projects/{project_id}/locations/{location}/backupPolicies/{backup_policy_id}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.BackupPolicy> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/backupPolicies/[^/]+$");

          /**
           * Returns the description of the specified backup policy by backup_policy_id.
           *
           * Create a request for the method "backupPolicies.get".
           *
           * This request holds the parameters needed by the the netapp server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The backupPolicy resource name, in the format
         *        `projects/{project_id}/locations/{location}/backupPolicies/{backup_policy_id}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(NetAppFiles.this, "GET", REST_PATH, null, com.google.api.services.netapp.v1beta1.model.BackupPolicy.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/backupPolicies/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The backupPolicy resource name, in the format
           * `projects/{project_id}/locations/{location}/backupPolicies/{backup_policy_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The backupPolicy resource name, in the format
         `projects/{project_id}/locations/{location}/backupPolicies/{backup_policy_id}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The backupPolicy resource name, in the format
           * `projects/{project_id}/locations/{location}/backupPolicies/{backup_policy_id}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/backupPolicies/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Returns list of all available backup policies.
         *
         * Create a request for the method "backupPolicies.list".
         *
         * This request holds the parameters needed by the netapp server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Parent value for ListBackupPoliciesRequest
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.ListBackupPoliciesResponse> {

          private static final String REST_PATH = "v1beta1/{+parent}/backupPolicies";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Returns list of all available backup policies.
           *
           * Create a request for the method "backupPolicies.list".
           *
           * This request holds the parameters needed by the the netapp server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Parent value for ListBackupPoliciesRequest
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(NetAppFiles.this, "GET", REST_PATH, null, com.google.api.services.netapp.v1beta1.model.ListBackupPoliciesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Parent value for ListBackupPoliciesRequest */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Parent value for ListBackupPoliciesRequest
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. Parent value for ListBackupPoliciesRequest */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Filtering results */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Filtering results
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** Filtering results */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** Hint for how to order the results */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Hint for how to order the results
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /** Hint for how to order the results */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /**
           * Requested page size. Server may return fewer items than requested. If unspecified, the
           * server will pick an appropriate default.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Requested page size. Server may return fewer items than requested. If unspecified, the server will
         pick an appropriate default.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Requested page size. Server may return fewer items than requested. If unspecified, the
           * server will pick an appropriate default.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** A token identifying a page of results the server should return. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** A token identifying a page of results the server should return.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** A token identifying a page of results the server should return. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates settings of a specific backup policy.
         *
         * Create a request for the method "backupPolicies.patch".
         *
         * This request holds the parameters needed by the netapp server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Identifier. The resource name of the backup policy. Format:
         *        `projects/{project_id}/locations/{location}/backupPolicies/{backup_policy_id}`.
         * @param content the {@link com.google.api.services.netapp.v1beta1.model.BackupPolicy}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.netapp.v1beta1.model.BackupPolicy content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Operation> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/backupPolicies/[^/]+$");

          /**
           * Updates settings of a specific backup policy.
           *
           * Create a request for the method "backupPolicies.patch".
           *
           * This request holds the parameters needed by the the netapp server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Identifier. The resource name of the backup policy. Format:
         *        `projects/{project_id}/locations/{location}/backupPolicies/{backup_policy_id}`.
           * @param content the {@link com.google.api.services.netapp.v1beta1.model.BackupPolicy}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.netapp.v1beta1.model.BackupPolicy content) {
            super(NetAppFiles.this, "PATCH", REST_PATH, content, com.google.api.services.netapp.v1beta1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/backupPolicies/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Identifier. The resource name of the backup policy. Format:
           * `projects/{project_id}/locations/{location}/backupPolicies/{backup_policy_id}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Identifier. The resource name of the backup policy. Format:
         `projects/{project_id}/locations/{location}/backupPolicies/{backup_policy_id}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Identifier. The resource name of the backup policy. Format:
           * `projects/{project_id}/locations/{location}/backupPolicies/{backup_policy_id}`.
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/backupPolicies/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Required. Field mask is used to specify the fields to be overwritten in the Backup
           * Policy resource by the update. The fields specified in the update_mask are relative to
           * the resource, not the full request. A field will be overwritten if it is in the mask.
           * If the user does not provide a mask then all fields will be overwritten.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. Field mask is used to specify the fields to be overwritten in the Backup Policy resource
         by the update. The fields specified in the update_mask are relative to the resource, not the full
         request. A field will be overwritten if it is in the mask. If the user does not provide a mask then
         all fields will be overwritten.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Required. Field mask is used to specify the fields to be overwritten in the Backup
           * Policy resource by the update. The fields specified in the update_mask are relative to
           * the resource, not the full request. A field will be overwritten if it is in the mask.
           * If the user does not provide a mask then all fields will be overwritten.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the BackupVaults collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code NetAppFiles netapp = new NetAppFiles(...);}
       *   {@code NetAppFiles.BackupVaults.List request = netapp.backupVaults().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public BackupVaults backupVaults() {
        return new BackupVaults();
      }

      /**
       * The "backupVaults" collection of methods.
       */
      public class BackupVaults {

        /**
         * Creates new backup vault
         *
         * Create a request for the method "backupVaults.create".
         *
         * This request holds the parameters needed by the netapp server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The location to create the backup vaults, in the format
         *        `projects/{project_id}/locations/{location}`
         * @param content the {@link com.google.api.services.netapp.v1beta1.model.BackupVault}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.netapp.v1beta1.model.BackupVault content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Operation> {

          private static final String REST_PATH = "v1beta1/{+parent}/backupVaults";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates new backup vault
           *
           * Create a request for the method "backupVaults.create".
           *
           * This request holds the parameters needed by the the netapp server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The location to create the backup vaults, in the format
         *        `projects/{project_id}/locations/{location}`
           * @param content the {@link com.google.api.services.netapp.v1beta1.model.BackupVault}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.netapp.v1beta1.model.BackupVault content) {
            super(NetAppFiles.this, "POST", REST_PATH, content, com.google.api.services.netapp.v1beta1.model.Operation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The location to create the backup vaults, in the format
           * `projects/{project_id}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The location to create the backup vaults, in the format
         `projects/{project_id}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The location to create the backup vaults, in the format
           * `projects/{project_id}/locations/{location}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Required. The ID to use for the backupVault. The ID must be unique within the specified
           * location. Must contain only letters, numbers and hyphen, with the first character a
           * letter, the last a letter or a number, and a 63 character maximum.
           */
          @com.google.api.client.util.Key
          private java.lang.String backupVaultId;

          /** Required. The ID to use for the backupVault. The ID must be unique within the specified location.
         Must contain only letters, numbers and hyphen, with the first character a letter, the last a letter
         or a number, and a 63 character maximum.
           */
          public java.lang.String getBackupVaultId() {
            return backupVaultId;
          }

          /**
           * Required. The ID to use for the backupVault. The ID must be unique within the specified
           * location. Must contain only letters, numbers and hyphen, with the first character a
           * letter, the last a letter or a number, and a 63 character maximum.
           */
          public Create setBackupVaultId(java.lang.String backupVaultId) {
            this.backupVaultId = backupVaultId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Warning! This operation will permanently delete the backup vault.
         *
         * Create a request for the method "backupVaults.delete".
         *
         * This request holds the parameters needed by the netapp server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The backupVault resource name, in the format
         *        `projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Operation> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/backupVaults/[^/]+$");

          /**
           * Warning! This operation will permanently delete the backup vault.
           *
           * Create a request for the method "backupVaults.delete".
           *
           * This request holds the parameters needed by the the netapp server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The backupVault resource name, in the format
         *        `projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(NetAppFiles.this, "DELETE", REST_PATH, null, com.google.api.services.netapp.v1beta1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/backupVaults/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The backupVault resource name, in the format
           * `projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The backupVault resource name, in the format
         `projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The backupVault resource name, in the format
           * `projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/backupVaults/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Returns the description of the specified backup vault
         *
         * Create a request for the method "backupVaults.get".
         *
         * This request holds the parameters needed by the netapp server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The backupVault resource name, in the format
         *        `projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.BackupVault> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/backupVaults/[^/]+$");

          /**
           * Returns the description of the specified backup vault
           *
           * Create a request for the method "backupVaults.get".
           *
           * This request holds the parameters needed by the the netapp server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The backupVault resource name, in the format
         *        `projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(NetAppFiles.this, "GET", REST_PATH, null, com.google.api.services.netapp.v1beta1.model.BackupVault.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/backupVaults/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The backupVault resource name, in the format
           * `projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The backupVault resource name, in the format
         `projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The backupVault resource name, in the format
           * `projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/backupVaults/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Returns list of all available backup vaults.
         *
         * Create a request for the method "backupVaults.list".
         *
         * This request holds the parameters needed by the netapp server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The location for which to retrieve backupVault information, in the format
         *        `projects/{project_id}/locations/{location}`.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.ListBackupVaultsResponse> {

          private static final String REST_PATH = "v1beta1/{+parent}/backupVaults";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Returns list of all available backup vaults.
           *
           * Create a request for the method "backupVaults.list".
           *
           * This request holds the parameters needed by the the netapp server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The location for which to retrieve backupVault information, in the format
         *        `projects/{project_id}/locations/{location}`.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(NetAppFiles.this, "GET", REST_PATH, null, com.google.api.services.netapp.v1beta1.model.ListBackupVaultsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The location for which to retrieve backupVault information, in the format
           * `projects/{project_id}/locations/{location}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The location for which to retrieve backupVault information, in the format
         `projects/{project_id}/locations/{location}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The location for which to retrieve backupVault information, in the format
           * `projects/{project_id}/locations/{location}`.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** List filter. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** List filter.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** List filter. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** Sort results. Supported values are "name", "name desc" or "" (unsorted). */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Sort results. Supported values are "name", "name desc" or "" (unsorted).
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /** Sort results. Supported values are "name", "name desc" or "" (unsorted). */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /** The maximum number of items to return. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of items to return.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The maximum number of items to return. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * The next_page_token value to use if there are additional results to retrieve for this
           * list request.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The next_page_token value to use if there are additional results to retrieve for this list request.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * The next_page_token value to use if there are additional results to retrieve for this
           * list request.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates the settings of a specific backup vault.
         *
         * Create a request for the method "backupVaults.patch".
         *
         * This request holds the parameters needed by the netapp server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Identifier. The resource name of the backup vault. Format:
         *        `projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}`.
         * @param content the {@link com.google.api.services.netapp.v1beta1.model.BackupVault}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.netapp.v1beta1.model.BackupVault content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Operation> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/backupVaults/[^/]+$");

          /**
           * Updates the settings of a specific backup vault.
           *
           * Create a request for the method "backupVaults.patch".
           *
           * This request holds the parameters needed by the the netapp server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Identifier. The resource name of the backup vault. Format:
         *        `projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}`.
           * @param content the {@link com.google.api.services.netapp.v1beta1.model.BackupVault}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.netapp.v1beta1.model.BackupVault content) {
            super(NetAppFiles.this, "PATCH", REST_PATH, content, com.google.api.services.netapp.v1beta1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/backupVaults/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Identifier. The resource name of the backup vault. Format:
           * `projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Identifier. The resource name of the backup vault. Format:
         `projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Identifier. The resource name of the backup vault. Format:
           * `projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}`.
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/backupVaults/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Required. Field mask is used to specify the fields to be overwritten in the Backup
           * resource to be updated. The fields specified in the update_mask are relative to the
           * resource, not the full request. A field will be overwritten if it is in the mask. If
           * the user does not provide a mask then all fields will be overwritten.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. Field mask is used to specify the fields to be overwritten in the Backup resource to be
         updated. The fields specified in the update_mask are relative to the resource, not the full
         request. A field will be overwritten if it is in the mask. If the user does not provide a mask then
         all fields will be overwritten.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Required. Field mask is used to specify the fields to be overwritten in the Backup
           * resource to be updated. The fields specified in the update_mask are relative to the
           * resource, not the full request. A field will be overwritten if it is in the mask. If
           * the user does not provide a mask then all fields will be overwritten.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Backups collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code NetAppFiles netapp = new NetAppFiles(...);}
         *   {@code NetAppFiles.Backups.List request = netapp.backups().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Backups backups() {
          return new Backups();
        }

        /**
         * The "backups" collection of methods.
         */
        public class Backups {

          /**
           * Creates a backup from the volume specified in the request The backup can be created from the
           * given snapshot if specified in the request. If no snapshot specified, there'll be a new snapshot
           * taken to initiate the backup creation.
           *
           * Create a request for the method "backups.create".
           *
           * This request holds the parameters needed by the netapp server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The NetApp backupVault to create the backups of, in the format
           *        `projects/locations/backupVaults/{backup_vault_id}`
           * @param content the {@link com.google.api.services.netapp.v1beta1.model.Backup}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.netapp.v1beta1.model.Backup content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Operation> {

            private static final String REST_PATH = "v1beta1/{+parent}/backups";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/backupVaults/[^/]+$");

            /**
             * Creates a backup from the volume specified in the request The backup can be created from the
             * given snapshot if specified in the request. If no snapshot specified, there'll be a new
             * snapshot taken to initiate the backup creation.
             *
             * Create a request for the method "backups.create".
             *
             * This request holds the parameters needed by the the netapp server.  After setting any optional
             * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The NetApp backupVault to create the backups of, in the format
           *        `projects/locations/backupVaults/{backup_vault_id}`
             * @param content the {@link com.google.api.services.netapp.v1beta1.model.Backup}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.netapp.v1beta1.model.Backup content) {
              super(NetAppFiles.this, "POST", REST_PATH, content, com.google.api.services.netapp.v1beta1.model.Operation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/backupVaults/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The NetApp backupVault to create the backups of, in the format
             * `projects/locations/backupVaults/{backup_vault_id}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The NetApp backupVault to create the backups of, in the format
           `projects/locations/backupVaults/{backup_vault_id}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The NetApp backupVault to create the backups of, in the format
             * `projects/locations/backupVaults/{backup_vault_id}`
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/backupVaults/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Required. The ID to use for the backup. The ID must be unique within the specified
             * backupVault. Must contain only letters, numbers and hyphen, with the first character
             * a letter, the last a letter or a number, and a 63 character maximum.
             */
            @com.google.api.client.util.Key
            private java.lang.String backupId;

            /** Required. The ID to use for the backup. The ID must be unique within the specified backupVault.
           Must contain only letters, numbers and hyphen, with the first character a letter, the last a letter
           or a number, and a 63 character maximum.
             */
            public java.lang.String getBackupId() {
              return backupId;
            }

            /**
             * Required. The ID to use for the backup. The ID must be unique within the specified
             * backupVault. Must contain only letters, numbers and hyphen, with the first character
             * a letter, the last a letter or a number, and a 63 character maximum.
             */
            public Create setBackupId(java.lang.String backupId) {
              this.backupId = backupId;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Warning! This operation will permanently delete the backup.
           *
           * Create a request for the method "backups.delete".
           *
           * This request holds the parameters needed by the netapp server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The backup resource name, in the format
           *        `projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}/backups/{backup
           *        _id}`
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Operation> {

            private static final String REST_PATH = "v1beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/backupVaults/[^/]+/backups/[^/]+$");

            /**
             * Warning! This operation will permanently delete the backup.
             *
             * Create a request for the method "backups.delete".
             *
             * This request holds the parameters needed by the the netapp server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The backup resource name, in the format
           *        `projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}/backups/{backup
           *        _id}`
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(NetAppFiles.this, "DELETE", REST_PATH, null, com.google.api.services.netapp.v1beta1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/backupVaults/[^/]+/backups/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The backup resource name, in the format `projects/{project_id}/locations/{l
             * ocation}/backupVaults/{backup_vault_id}/backups/{backup_id}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The backup resource name, in the format
           `projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}/backups/{backup_id}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The backup resource name, in the format `projects/{project_id}/locations/{l
             * ocation}/backupVaults/{backup_vault_id}/backups/{backup_id}`
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/backupVaults/[^/]+/backups/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Returns the description of the specified backup
           *
           * Create a request for the method "backups.get".
           *
           * This request holds the parameters needed by the netapp server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The backup resource name, in the format
           *        `projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}/backups/{backup
           *        _id}`
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Backup> {

            private static final String REST_PATH = "v1beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/backupVaults/[^/]+/backups/[^/]+$");

            /**
             * Returns the description of the specified backup
             *
             * Create a request for the method "backups.get".
             *
             * This request holds the parameters needed by the the netapp server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
             * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The backup resource name, in the format
           *        `projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}/backups/{backup
           *        _id}`
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(NetAppFiles.this, "GET", REST_PATH, null, com.google.api.services.netapp.v1beta1.model.Backup.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/backupVaults/[^/]+/backups/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The backup resource name, in the format `projects/{project_id}/locations/{l
             * ocation}/backupVaults/{backup_vault_id}/backups/{backup_id}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The backup resource name, in the format
           `projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}/backups/{backup_id}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The backup resource name, in the format `projects/{project_id}/locations/{l
             * ocation}/backupVaults/{backup_vault_id}/backups/{backup_id}`
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/backupVaults/[^/]+/backups/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Returns descriptions of all backups for a backupVault.
           *
           * Create a request for the method "backups.list".
           *
           * This request holds the parameters needed by the netapp server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The backupVault for which to retrieve backup information, in the format
           *        `projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}`. To retrieve
           *        backup information for all locations, use "-" for the `{location}` value. To retrieve
           *        backup information for all backupVaults, use "-" for the `{backup_vault_id}` value. To
           *        retrieve backup information for a volume, use "-" for the `{backup_vault_id}` value and
           *        specify volume full name with the filter.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.ListBackupsResponse> {

            private static final String REST_PATH = "v1beta1/{+parent}/backups";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/backupVaults/[^/]+$");

            /**
             * Returns descriptions of all backups for a backupVault.
             *
             * Create a request for the method "backups.list".
             *
             * This request holds the parameters needed by the the netapp server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The backupVault for which to retrieve backup information, in the format
           *        `projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}`. To retrieve
           *        backup information for all locations, use "-" for the `{location}` value. To retrieve
           *        backup information for all backupVaults, use "-" for the `{backup_vault_id}` value. To
           *        retrieve backup information for a volume, use "-" for the `{backup_vault_id}` value and
           *        specify volume full name with the filter.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(NetAppFiles.this, "GET", REST_PATH, null, com.google.api.services.netapp.v1beta1.model.ListBackupsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/backupVaults/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The backupVault for which to retrieve backup information, in the format
             * `projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}`. To
             * retrieve backup information for all locations, use "-" for the `{location}` value. To
             * retrieve backup information for all backupVaults, use "-" for the `{backup_vault_id}`
             * value. To retrieve backup information for a volume, use "-" for the
             * `{backup_vault_id}` value and specify volume full name with the filter.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The backupVault for which to retrieve backup information, in the format
           `projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}`. To retrieve backup
           information for all locations, use "-" for the `{location}` value. To retrieve backup information
           for all backupVaults, use "-" for the `{backup_vault_id}` value. To retrieve backup information for
           a volume, use "-" for the `{backup_vault_id}` value and specify volume full name with the filter.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The backupVault for which to retrieve backup information, in the format
             * `projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}`. To
             * retrieve backup information for all locations, use "-" for the `{location}` value. To
             * retrieve backup information for all backupVaults, use "-" for the `{backup_vault_id}`
             * value. To retrieve backup information for a volume, use "-" for the
             * `{backup_vault_id}` value and specify volume full name with the filter.
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/backupVaults/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * The standard list filter. If specified, backups will be returned based on the
             * attribute name that matches the filter expression. If empty, then no backups are
             * filtered out. See https://google.aip.dev/160
             */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** The standard list filter. If specified, backups will be returned based on the attribute name that
           matches the filter expression. If empty, then no backups are filtered out. See
           https://google.aip.dev/160
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /**
             * The standard list filter. If specified, backups will be returned based on the
             * attribute name that matches the filter expression. If empty, then no backups are
             * filtered out. See https://google.aip.dev/160
             */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** Sort results. Supported values are "name", "name desc" or "" (unsorted). */
            @com.google.api.client.util.Key
            private java.lang.String orderBy;

            /** Sort results. Supported values are "name", "name desc" or "" (unsorted).
             */
            public java.lang.String getOrderBy() {
              return orderBy;
            }

            /** Sort results. Supported values are "name", "name desc" or "" (unsorted). */
            public List setOrderBy(java.lang.String orderBy) {
              this.orderBy = orderBy;
              return this;
            }

            /**
             * The maximum number of items to return. The service may return fewer than this value.
             * The maximum value is 1000; values above 1000 will be coerced to 1000.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The maximum number of items to return. The service may return fewer than this value. The maximum
           value is 1000; values above 1000 will be coerced to 1000.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * The maximum number of items to return. The service may return fewer than this value.
             * The maximum value is 1000; values above 1000 will be coerced to 1000.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * The next_page_token value to use if there are additional results to retrieve for this
             * list request.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The next_page_token value to use if there are additional results to retrieve for this list request.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * The next_page_token value to use if there are additional results to retrieve for this
             * list request.
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Update backup with full spec.
           *
           * Create a request for the method "backups.patch".
           *
           * This request holds the parameters needed by the netapp server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Identifier. The resource name of the backup. Format:
           *        `projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}/backups/{backup
           *        _id}`.
           * @param content the {@link com.google.api.services.netapp.v1beta1.model.Backup}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.netapp.v1beta1.model.Backup content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Operation> {

            private static final String REST_PATH = "v1beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/backupVaults/[^/]+/backups/[^/]+$");

            /**
             * Update backup with full spec.
             *
             * Create a request for the method "backups.patch".
             *
             * This request holds the parameters needed by the the netapp server.  After setting any optional
             * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Identifier. The resource name of the backup. Format:
           *        `projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}/backups/{backup
           *        _id}`.
             * @param content the {@link com.google.api.services.netapp.v1beta1.model.Backup}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.netapp.v1beta1.model.Backup content) {
              super(NetAppFiles.this, "PATCH", REST_PATH, content, com.google.api.services.netapp.v1beta1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/backupVaults/[^/]+/backups/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Identifier. The resource name of the backup. Format: `projects/{project_id}/locations
             * /{location}/backupVaults/{backup_vault_id}/backups/{backup_id}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Identifier. The resource name of the backup. Format:
           `projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}/backups/{backup_id}`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Identifier. The resource name of the backup. Format: `projects/{project_id}/locations
             * /{location}/backupVaults/{backup_vault_id}/backups/{backup_id}`.
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/backupVaults/[^/]+/backups/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Required. Field mask is used to specify the fields to be overwritten in the Backup
             * resource to be updated. The fields specified in the update_mask are relative to the
             * resource, not the full request. A field will be overwritten if it is in the mask. If
             * the user does not provide a mask then all fields will be overwritten.
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Required. Field mask is used to specify the fields to be overwritten in the Backup resource to be
           updated. The fields specified in the update_mask are relative to the resource, not the full
           request. A field will be overwritten if it is in the mask. If the user does not provide a mask then
           all fields will be overwritten.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * Required. Field mask is used to specify the fields to be overwritten in the Backup
             * resource to be updated. The fields specified in the update_mask are relative to the
             * resource, not the full request. A field will be overwritten if it is in the mask. If
             * the user does not provide a mask then all fields will be overwritten.
             */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the KmsConfigs collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code NetAppFiles netapp = new NetAppFiles(...);}
       *   {@code NetAppFiles.KmsConfigs.List request = netapp.kmsConfigs().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public KmsConfigs kmsConfigs() {
        return new KmsConfigs();
      }

      /**
       * The "kmsConfigs" collection of methods.
       */
      public class KmsConfigs {

        /**
         * Creates a new KMS config.
         *
         * Create a request for the method "kmsConfigs.create".
         *
         * This request holds the parameters needed by the netapp server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Value for parent.
         * @param content the {@link com.google.api.services.netapp.v1beta1.model.KmsConfig}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.netapp.v1beta1.model.KmsConfig content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Operation> {

          private static final String REST_PATH = "v1beta1/{+parent}/kmsConfigs";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a new KMS config.
           *
           * Create a request for the method "kmsConfigs.create".
           *
           * This request holds the parameters needed by the the netapp server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Value for parent.
           * @param content the {@link com.google.api.services.netapp.v1beta1.model.KmsConfig}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.netapp.v1beta1.model.KmsConfig content) {
            super(NetAppFiles.this, "POST", REST_PATH, content, com.google.api.services.netapp.v1beta1.model.Operation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Value for parent. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Value for parent.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. Value for parent. */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Required. Id of the requesting KmsConfig. Must be unique within the parent resource.
           * Must contain only letters, numbers and hyphen, with the first character a letter, the
           * last a letter or a number, and a 63 character maximum.
           */
          @com.google.api.client.util.Key
          private java.lang.String kmsConfigId;

          /** Required. Id of the requesting KmsConfig. Must be unique within the parent resource. Must contain
         only letters, numbers and hyphen, with the first character a letter, the last a letter or a number,
         and a 63 character maximum.
           */
          public java.lang.String getKmsConfigId() {
            return kmsConfigId;
          }

          /**
           * Required. Id of the requesting KmsConfig. Must be unique within the parent resource.
           * Must contain only letters, numbers and hyphen, with the first character a letter, the
           * last a letter or a number, and a 63 character maximum.
           */
          public Create setKmsConfigId(java.lang.String kmsConfigId) {
            this.kmsConfigId = kmsConfigId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Warning! This operation will permanently delete the Kms config.
         *
         * Create a request for the method "kmsConfigs.delete".
         *
         * This request holds the parameters needed by the netapp server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the KmsConfig.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Operation> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/kmsConfigs/[^/]+$");

          /**
           * Warning! This operation will permanently delete the Kms config.
           *
           * Create a request for the method "kmsConfigs.delete".
           *
           * This request holds the parameters needed by the the netapp server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the KmsConfig.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(NetAppFiles.this, "DELETE", REST_PATH, null, com.google.api.services.netapp.v1beta1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/kmsConfigs/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Name of the KmsConfig. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the KmsConfig.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. Name of the KmsConfig. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/kmsConfigs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Encrypt the existing volumes without CMEK encryption with the desired the KMS config for the
         * whole region.
         *
         * Create a request for the method "kmsConfigs.encrypt".
         *
         * This request holds the parameters needed by the netapp server.  After setting any optional
         * parameters, call the {@link Encrypt#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the KmsConfig.
         * @param content the {@link com.google.api.services.netapp.v1beta1.model.EncryptVolumesRequest}
         * @return the request
         */
        public Encrypt encrypt(java.lang.String name, com.google.api.services.netapp.v1beta1.model.EncryptVolumesRequest content) throws java.io.IOException {
          Encrypt result = new Encrypt(name, content);
          initialize(result);
          return result;
        }

        public class Encrypt extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Operation> {

          private static final String REST_PATH = "v1beta1/{+name}:encrypt";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/kmsConfigs/[^/]+$");

          /**
           * Encrypt the existing volumes without CMEK encryption with the desired the KMS config for the
           * whole region.
           *
           * Create a request for the method "kmsConfigs.encrypt".
           *
           * This request holds the parameters needed by the the netapp server.  After setting any optional
           * parameters, call the {@link Encrypt#execute()} method to invoke the remote operation. <p>
           * {@link
           * Encrypt#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the KmsConfig.
           * @param content the {@link com.google.api.services.netapp.v1beta1.model.EncryptVolumesRequest}
           * @since 1.13
           */
          protected Encrypt(java.lang.String name, com.google.api.services.netapp.v1beta1.model.EncryptVolumesRequest content) {
            super(NetAppFiles.this, "POST", REST_PATH, content, com.google.api.services.netapp.v1beta1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/kmsConfigs/[^/]+$");
            }
          }

          @Override
          public Encrypt set$Xgafv(java.lang.String $Xgafv) {
            return (Encrypt) super.set$Xgafv($Xgafv);
          }

          @Override
          public Encrypt setAccessToken(java.lang.String accessToken) {
            return (Encrypt) super.setAccessToken(accessToken);
          }

          @Override
          public Encrypt setAlt(java.lang.String alt) {
            return (Encrypt) super.setAlt(alt);
          }

          @Override
          public Encrypt setCallback(java.lang.String callback) {
            return (Encrypt) super.setCallback(callback);
          }

          @Override
          public Encrypt setFields(java.lang.String fields) {
            return (Encrypt) super.setFields(fields);
          }

          @Override
          public Encrypt setKey(java.lang.String key) {
            return (Encrypt) super.setKey(key);
          }

          @Override
          public Encrypt setOauthToken(java.lang.String oauthToken) {
            return (Encrypt) super.setOauthToken(oauthToken);
          }

          @Override
          public Encrypt setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Encrypt) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Encrypt setQuotaUser(java.lang.String quotaUser) {
            return (Encrypt) super.setQuotaUser(quotaUser);
          }

          @Override
          public Encrypt setUploadType(java.lang.String uploadType) {
            return (Encrypt) super.setUploadType(uploadType);
          }

          @Override
          public Encrypt setUploadProtocol(java.lang.String uploadProtocol) {
            return (Encrypt) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Name of the KmsConfig. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the KmsConfig.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. Name of the KmsConfig. */
          public Encrypt setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/kmsConfigs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Encrypt set(String parameterName, Object value) {
            return (Encrypt) super.set(parameterName, value);
          }
        }
        /**
         * Returns the description of the specified KMS config by kms_config_id.
         *
         * Create a request for the method "kmsConfigs.get".
         *
         * This request holds the parameters needed by the netapp server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the KmsConfig
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.KmsConfig> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/kmsConfigs/[^/]+$");

          /**
           * Returns the description of the specified KMS config by kms_config_id.
           *
           * Create a request for the method "kmsConfigs.get".
           *
           * This request holds the parameters needed by the the netapp server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the KmsConfig
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(NetAppFiles.this, "GET", REST_PATH, null, com.google.api.services.netapp.v1beta1.model.KmsConfig.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/kmsConfigs/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Name of the KmsConfig */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the KmsConfig
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. Name of the KmsConfig */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/kmsConfigs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Returns descriptions of all KMS configs owned by the caller.
         *
         * Create a request for the method "kmsConfigs.list".
         *
         * This request holds the parameters needed by the netapp server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Parent value
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.ListKmsConfigsResponse> {

          private static final String REST_PATH = "v1beta1/{+parent}/kmsConfigs";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Returns descriptions of all KMS configs owned by the caller.
           *
           * Create a request for the method "kmsConfigs.list".
           *
           * This request holds the parameters needed by the the netapp server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Parent value
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(NetAppFiles.this, "GET", REST_PATH, null, com.google.api.services.netapp.v1beta1.model.ListKmsConfigsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Parent value */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Parent value
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. Parent value */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** List filter. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** List filter.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** List filter. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** Sort results. Supported values are "name", "name desc" or "" (unsorted). */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Sort results. Supported values are "name", "name desc" or "" (unsorted).
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /** Sort results. Supported values are "name", "name desc" or "" (unsorted). */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /** The maximum number of items to return. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of items to return.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The maximum number of items to return. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * The next_page_token value to use if there are additional results to retrieve for this
           * list request.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The next_page_token value to use if there are additional results to retrieve for this list request.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * The next_page_token value to use if there are additional results to retrieve for this
           * list request.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates the Kms config properties with the full spec
         *
         * Create a request for the method "kmsConfigs.patch".
         *
         * This request holds the parameters needed by the netapp server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Identifier. Name of the KmsConfig.
         * @param content the {@link com.google.api.services.netapp.v1beta1.model.KmsConfig}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.netapp.v1beta1.model.KmsConfig content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Operation> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/kmsConfigs/[^/]+$");

          /**
           * Updates the Kms config properties with the full spec
           *
           * Create a request for the method "kmsConfigs.patch".
           *
           * This request holds the parameters needed by the the netapp server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Identifier. Name of the KmsConfig.
           * @param content the {@link com.google.api.services.netapp.v1beta1.model.KmsConfig}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.netapp.v1beta1.model.KmsConfig content) {
            super(NetAppFiles.this, "PATCH", REST_PATH, content, com.google.api.services.netapp.v1beta1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/kmsConfigs/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /** Identifier. Name of the KmsConfig. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Identifier. Name of the KmsConfig.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Identifier. Name of the KmsConfig. */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/kmsConfigs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Required. Field mask is used to specify the fields to be overwritten in the KmsConfig
           * resource by the update. The fields specified in the update_mask are relative to the
           * resource, not the full request. A field will be overwritten if it is in the mask. If
           * the user does not provide a mask then all fields will be overwritten.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. Field mask is used to specify the fields to be overwritten in the KmsConfig resource by
         the update. The fields specified in the update_mask are relative to the resource, not the full
         request. A field will be overwritten if it is in the mask. If the user does not provide a mask then
         all fields will be overwritten.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Required. Field mask is used to specify the fields to be overwritten in the KmsConfig
           * resource by the update. The fields specified in the update_mask are relative to the
           * resource, not the full request. A field will be overwritten if it is in the mask. If
           * the user does not provide a mask then all fields will be overwritten.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Verifies KMS config reachability.
         *
         * Create a request for the method "kmsConfigs.verify".
         *
         * This request holds the parameters needed by the netapp server.  After setting any optional
         * parameters, call the {@link Verify#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the KMS Config to be verified.
         * @param content the {@link com.google.api.services.netapp.v1beta1.model.VerifyKmsConfigRequest}
         * @return the request
         */
        public Verify verify(java.lang.String name, com.google.api.services.netapp.v1beta1.model.VerifyKmsConfigRequest content) throws java.io.IOException {
          Verify result = new Verify(name, content);
          initialize(result);
          return result;
        }

        public class Verify extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.VerifyKmsConfigResponse> {

          private static final String REST_PATH = "v1beta1/{+name}:verify";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/kmsConfigs/[^/]+$");

          /**
           * Verifies KMS config reachability.
           *
           * Create a request for the method "kmsConfigs.verify".
           *
           * This request holds the parameters needed by the the netapp server.  After setting any optional
           * parameters, call the {@link Verify#execute()} method to invoke the remote operation. <p> {@link
           * Verify#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the KMS Config to be verified.
           * @param content the {@link com.google.api.services.netapp.v1beta1.model.VerifyKmsConfigRequest}
           * @since 1.13
           */
          protected Verify(java.lang.String name, com.google.api.services.netapp.v1beta1.model.VerifyKmsConfigRequest content) {
            super(NetAppFiles.this, "POST", REST_PATH, content, com.google.api.services.netapp.v1beta1.model.VerifyKmsConfigResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/kmsConfigs/[^/]+$");
            }
          }

          @Override
          public Verify set$Xgafv(java.lang.String $Xgafv) {
            return (Verify) super.set$Xgafv($Xgafv);
          }

          @Override
          public Verify setAccessToken(java.lang.String accessToken) {
            return (Verify) super.setAccessToken(accessToken);
          }

          @Override
          public Verify setAlt(java.lang.String alt) {
            return (Verify) super.setAlt(alt);
          }

          @Override
          public Verify setCallback(java.lang.String callback) {
            return (Verify) super.setCallback(callback);
          }

          @Override
          public Verify setFields(java.lang.String fields) {
            return (Verify) super.setFields(fields);
          }

          @Override
          public Verify setKey(java.lang.String key) {
            return (Verify) super.setKey(key);
          }

          @Override
          public Verify setOauthToken(java.lang.String oauthToken) {
            return (Verify) super.setOauthToken(oauthToken);
          }

          @Override
          public Verify setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Verify) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Verify setQuotaUser(java.lang.String quotaUser) {
            return (Verify) super.setQuotaUser(quotaUser);
          }

          @Override
          public Verify setUploadType(java.lang.String uploadType) {
            return (Verify) super.setUploadType(uploadType);
          }

          @Override
          public Verify setUploadProtocol(java.lang.String uploadProtocol) {
            return (Verify) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Name of the KMS Config to be verified. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the KMS Config to be verified.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. Name of the KMS Config to be verified. */
          public Verify setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/kmsConfigs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Verify set(String parameterName, Object value) {
            return (Verify) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Operations collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code NetAppFiles netapp = new NetAppFiles(...);}
       *   {@code NetAppFiles.Operations.List request = netapp.operations().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Operations operations() {
        return new Operations();
      }

      /**
       * The "operations" collection of methods.
       */
      public class Operations {

        /**
         * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
         * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
         * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
         * methods to check whether the cancellation succeeded or whether the operation completed despite
         * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
         * operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to
         * `Code.CANCELLED`.
         *
         * Create a request for the method "operations.cancel".
         *
         * This request holds the parameters needed by the netapp server.  After setting any optional
         * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource to be cancelled.
         * @param content the {@link com.google.api.services.netapp.v1beta1.model.CancelOperationRequest}
         * @return the request
         */
        public Cancel cancel(java.lang.String name, com.google.api.services.netapp.v1beta1.model.CancelOperationRequest content) throws java.io.IOException {
          Cancel result = new Cancel(name, content);
          initialize(result);
          return result;
        }

        public class Cancel extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v1beta1/{+name}:cancel";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
           * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
           * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
           * methods to check whether the cancellation succeeded or whether the operation completed despite
           * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
           * operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to
           * `Code.CANCELLED`.
           *
           * Create a request for the method "operations.cancel".
           *
           * This request holds the parameters needed by the the netapp server.  After setting any optional
           * parameters, call the {@link Cancel#execute()} method to invoke the remote operation. <p> {@link
           * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource to be cancelled.
           * @param content the {@link com.google.api.services.netapp.v1beta1.model.CancelOperationRequest}
           * @since 1.13
           */
          protected Cancel(java.lang.String name, com.google.api.services.netapp.v1beta1.model.CancelOperationRequest content) {
            super(NetAppFiles.this, "POST", REST_PATH, content, com.google.api.services.netapp.v1beta1.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public Cancel set$Xgafv(java.lang.String $Xgafv) {
            return (Cancel) super.set$Xgafv($Xgafv);
          }

          @Override
          public Cancel setAccessToken(java.lang.String accessToken) {
            return (Cancel) super.setAccessToken(accessToken);
          }

          @Override
          public Cancel setAlt(java.lang.String alt) {
            return (Cancel) super.setAlt(alt);
          }

          @Override
          public Cancel setCallback(java.lang.String callback) {
            return (Cancel) super.setCallback(callback);
          }

          @Override
          public Cancel setFields(java.lang.String fields) {
            return (Cancel) super.setFields(fields);
          }

          @Override
          public Cancel setKey(java.lang.String key) {
            return (Cancel) super.setKey(key);
          }

          @Override
          public Cancel setOauthToken(java.lang.String oauthToken) {
            return (Cancel) super.setOauthToken(oauthToken);
          }

          @Override
          public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Cancel) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Cancel setQuotaUser(java.lang.String quotaUser) {
            return (Cancel) super.setQuotaUser(quotaUser);
          }

          @Override
          public Cancel setUploadType(java.lang.String uploadType) {
            return (Cancel) super.setUploadType(uploadType);
          }

          @Override
          public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
            return (Cancel) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource to be cancelled. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource to be cancelled.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource to be cancelled. */
          public Cancel setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Cancel set(String parameterName, Object value) {
            return (Cancel) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a long-running operation. This method indicates that the client is no longer interested
         * in the operation result. It does not cancel the operation. If the server doesn't support this
         * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
         *
         * Create a request for the method "operations.delete".
         *
         * This request holds the parameters needed by the netapp server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource to be deleted.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Deletes a long-running operation. This method indicates that the client is no longer interested
           * in the operation result. It does not cancel the operation. If the server doesn't support this
           * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.delete".
           *
           * This request holds the parameters needed by the the netapp server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource to be deleted.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(NetAppFiles.this, "DELETE", REST_PATH, null, com.google.api.services.netapp.v1beta1.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource to be deleted. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource to be deleted.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource to be deleted. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets the latest state of a long-running operation. Clients can use this method to poll the
         * operation result at intervals as recommended by the API service.
         *
         * Create a request for the method "operations.get".
         *
         * This request holds the parameters needed by the netapp server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Operation> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the the netapp server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(NetAppFiles.this, "GET", REST_PATH, null, com.google.api.services.netapp.v1beta1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists operations that match the specified filter in the request. If the server doesn't support
         * this method, it returns `UNIMPLEMENTED`.
         *
         * Create a request for the method "operations.list".
         *
         * This request holds the parameters needed by the netapp server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation's parent resource.
         * @return the request
         */
        public List list(java.lang.String name) throws java.io.IOException {
          List result = new List(name);
          initialize(result);
          return result;
        }

        public class List extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.ListOperationsResponse> {

          private static final String REST_PATH = "v1beta1/{+name}/operations";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the the netapp server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation's parent resource.
           * @since 1.13
           */
          protected List(java.lang.String name) {
            super(NetAppFiles.this, "GET", REST_PATH, null, com.google.api.services.netapp.v1beta1.model.ListOperationsResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation's parent resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation's parent resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation's parent resource. */
          public List setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** The standard list filter. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** The standard list filter.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** The standard list filter. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** The standard list page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The standard list page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The standard list page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The standard list page token. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The standard list page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The standard list page token. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the StoragePools collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code NetAppFiles netapp = new NetAppFiles(...);}
       *   {@code NetAppFiles.StoragePools.List request = netapp.storagePools().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public StoragePools storagePools() {
        return new StoragePools();
      }

      /**
       * The "storagePools" collection of methods.
       */
      public class StoragePools {

        /**
         * Creates a new storage pool.
         *
         * Create a request for the method "storagePools.create".
         *
         * This request holds the parameters needed by the netapp server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Value for parent.
         * @param content the {@link com.google.api.services.netapp.v1beta1.model.StoragePool}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.netapp.v1beta1.model.StoragePool content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Operation> {

          private static final String REST_PATH = "v1beta1/{+parent}/storagePools";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a new storage pool.
           *
           * Create a request for the method "storagePools.create".
           *
           * This request holds the parameters needed by the the netapp server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Value for parent.
           * @param content the {@link com.google.api.services.netapp.v1beta1.model.StoragePool}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.netapp.v1beta1.model.StoragePool content) {
            super(NetAppFiles.this, "POST", REST_PATH, content, com.google.api.services.netapp.v1beta1.model.Operation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Value for parent. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Value for parent.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. Value for parent. */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Required. Id of the requesting storage pool. Must be unique within the parent resource.
           * Must contain only letters, numbers and hyphen, with the first character a letter, the
           * last a letter or a number, and a 63 character maximum.
           */
          @com.google.api.client.util.Key
          private java.lang.String storagePoolId;

          /** Required. Id of the requesting storage pool. Must be unique within the parent resource. Must
         contain only letters, numbers and hyphen, with the first character a letter, the last a letter or a
         number, and a 63 character maximum.
           */
          public java.lang.String getStoragePoolId() {
            return storagePoolId;
          }

          /**
           * Required. Id of the requesting storage pool. Must be unique within the parent resource.
           * Must contain only letters, numbers and hyphen, with the first character a letter, the
           * last a letter or a number, and a 63 character maximum.
           */
          public Create setStoragePoolId(java.lang.String storagePoolId) {
            this.storagePoolId = storagePoolId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Warning! This operation will permanently delete the storage pool.
         *
         * Create a request for the method "storagePools.delete".
         *
         * This request holds the parameters needed by the netapp server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the storage pool
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Operation> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/storagePools/[^/]+$");

          /**
           * Warning! This operation will permanently delete the storage pool.
           *
           * Create a request for the method "storagePools.delete".
           *
           * This request holds the parameters needed by the the netapp server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the storage pool
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(NetAppFiles.this, "DELETE", REST_PATH, null, com.google.api.services.netapp.v1beta1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/storagePools/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Name of the storage pool */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the storage pool
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. Name of the storage pool */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/storagePools/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Returns the description of the specified storage pool by poolId.
         *
         * Create a request for the method "storagePools.get".
         *
         * This request holds the parameters needed by the netapp server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the storage pool
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.StoragePool> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/storagePools/[^/]+$");

          /**
           * Returns the description of the specified storage pool by poolId.
           *
           * Create a request for the method "storagePools.get".
           *
           * This request holds the parameters needed by the the netapp server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the storage pool
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(NetAppFiles.this, "GET", REST_PATH, null, com.google.api.services.netapp.v1beta1.model.StoragePool.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/storagePools/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Name of the storage pool */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the storage pool
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. Name of the storage pool */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/storagePools/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Returns descriptions of all storage pools owned by the caller.
         *
         * Create a request for the method "storagePools.list".
         *
         * This request holds the parameters needed by the netapp server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Parent value
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.ListStoragePoolsResponse> {

          private static final String REST_PATH = "v1beta1/{+parent}/storagePools";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Returns descriptions of all storage pools owned by the caller.
           *
           * Create a request for the method "storagePools.list".
           *
           * This request holds the parameters needed by the the netapp server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Parent value
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(NetAppFiles.this, "GET", REST_PATH, null, com.google.api.services.netapp.v1beta1.model.ListStoragePoolsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Parent value */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Parent value
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. Parent value */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Optional. List filter. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Optional. List filter.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** Optional. List filter. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** Optional. Sort results. Supported values are "name", "name desc" or "" (unsorted). */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Optional. Sort results. Supported values are "name", "name desc" or "" (unsorted).
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /** Optional. Sort results. Supported values are "name", "name desc" or "" (unsorted). */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /** Optional. The maximum number of items to return. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of items to return.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** Optional. The maximum number of items to return. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Optional. The next_page_token value to use if there are additional results to retrieve
           * for this list request.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. The next_page_token value to use if there are additional results to retrieve for this
         list request.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Optional. The next_page_token value to use if there are additional results to retrieve
           * for this list request.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates the storage pool properties with the full spec
         *
         * Create a request for the method "storagePools.patch".
         *
         * This request holds the parameters needed by the netapp server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Identifier. Name of the storage pool
         * @param content the {@link com.google.api.services.netapp.v1beta1.model.StoragePool}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.netapp.v1beta1.model.StoragePool content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Operation> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/storagePools/[^/]+$");

          /**
           * Updates the storage pool properties with the full spec
           *
           * Create a request for the method "storagePools.patch".
           *
           * This request holds the parameters needed by the the netapp server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Identifier. Name of the storage pool
           * @param content the {@link com.google.api.services.netapp.v1beta1.model.StoragePool}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.netapp.v1beta1.model.StoragePool content) {
            super(NetAppFiles.this, "PATCH", REST_PATH, content, com.google.api.services.netapp.v1beta1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/storagePools/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /** Identifier. Name of the storage pool */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Identifier. Name of the storage pool
           */
          public java.lang.String getName() {
            return name;
          }

          /** Identifier. Name of the storage pool */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/storagePools/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Required. Field mask is used to specify the fields to be overwritten in the StoragePool
           * resource by the update. The fields specified in the update_mask are relative to the
           * resource, not the full request. A field will be overwritten if it is in the mask. If
           * the user does not provide a mask then all fields will be overwritten.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. Field mask is used to specify the fields to be overwritten in the StoragePool resource by
         the update. The fields specified in the update_mask are relative to the resource, not the full
         request. A field will be overwritten if it is in the mask. If the user does not provide a mask then
         all fields will be overwritten.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Required. Field mask is used to specify the fields to be overwritten in the StoragePool
           * resource by the update. The fields specified in the update_mask are relative to the
           * resource, not the full request. A field will be overwritten if it is in the mask. If
           * the user does not provide a mask then all fields will be overwritten.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * This operation will switch the active/replica zone for a regional storagePool.
         *
         * Create a request for the method "storagePools.switch".
         *
         * This request holds the parameters needed by the netapp server.  After setting any optional
         * parameters, call the {@link NetAppFilesSwitch#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the storage pool
         * @param content the {@link com.google.api.services.netapp.v1beta1.model.SwitchActiveReplicaZoneRequest}
         * @return the request
         */
        public NetAppFilesSwitch netappSwitch(java.lang.String name, com.google.api.services.netapp.v1beta1.model.SwitchActiveReplicaZoneRequest content) throws java.io.IOException {
          NetAppFilesSwitch result = new NetAppFilesSwitch(name, content);
          initialize(result);
          return result;
        }

        public class NetAppFilesSwitch extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Operation> {

          private static final String REST_PATH = "v1beta1/{+name}:switch";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/storagePools/[^/]+$");

          /**
           * This operation will switch the active/replica zone for a regional storagePool.
           *
           * Create a request for the method "storagePools.switch".
           *
           * This request holds the parameters needed by the the netapp server.  After setting any optional
           * parameters, call the {@link NetAppFilesSwitch#execute()} method to invoke the remote operation.
           * <p> {@link NetAppFilesSwitch#initialize(com.google.api.client.googleapis.services.AbstractGoogl
           * eClientRequest)} must be called to initialize this instance immediately after invoking the
           * constructor. </p>
           *
           * @param name Required. Name of the storage pool
           * @param content the {@link com.google.api.services.netapp.v1beta1.model.SwitchActiveReplicaZoneRequest}
           * @since 1.13
           */
          protected NetAppFilesSwitch(java.lang.String name, com.google.api.services.netapp.v1beta1.model.SwitchActiveReplicaZoneRequest content) {
            super(NetAppFiles.this, "POST", REST_PATH, content, com.google.api.services.netapp.v1beta1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/storagePools/[^/]+$");
            }
          }

          @Override
          public NetAppFilesSwitch set$Xgafv(java.lang.String $Xgafv) {
            return (NetAppFilesSwitch) super.set$Xgafv($Xgafv);
          }

          @Override
          public NetAppFilesSwitch setAccessToken(java.lang.String accessToken) {
            return (NetAppFilesSwitch) super.setAccessToken(accessToken);
          }

          @Override
          public NetAppFilesSwitch setAlt(java.lang.String alt) {
            return (NetAppFilesSwitch) super.setAlt(alt);
          }

          @Override
          public NetAppFilesSwitch setCallback(java.lang.String callback) {
            return (NetAppFilesSwitch) super.setCallback(callback);
          }

          @Override
          public NetAppFilesSwitch setFields(java.lang.String fields) {
            return (NetAppFilesSwitch) super.setFields(fields);
          }

          @Override
          public NetAppFilesSwitch setKey(java.lang.String key) {
            return (NetAppFilesSwitch) super.setKey(key);
          }

          @Override
          public NetAppFilesSwitch setOauthToken(java.lang.String oauthToken) {
            return (NetAppFilesSwitch) super.setOauthToken(oauthToken);
          }

          @Override
          public NetAppFilesSwitch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (NetAppFilesSwitch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public NetAppFilesSwitch setQuotaUser(java.lang.String quotaUser) {
            return (NetAppFilesSwitch) super.setQuotaUser(quotaUser);
          }

          @Override
          public NetAppFilesSwitch setUploadType(java.lang.String uploadType) {
            return (NetAppFilesSwitch) super.setUploadType(uploadType);
          }

          @Override
          public NetAppFilesSwitch setUploadProtocol(java.lang.String uploadProtocol) {
            return (NetAppFilesSwitch) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Name of the storage pool */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the storage pool
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. Name of the storage pool */
          public NetAppFilesSwitch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/storagePools/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public NetAppFilesSwitch set(String parameterName, Object value) {
            return (NetAppFilesSwitch) super.set(parameterName, value);
          }
        }
        /**
         * ValidateDirectoryService does a connectivity check for a directory service policy attached to the
         * storage pool.
         *
         * Create a request for the method "storagePools.validateDirectoryService".
         *
         * This request holds the parameters needed by the netapp server.  After setting any optional
         * parameters, call the {@link ValidateDirectoryService#execute()} method to invoke the remote
         * operation.
         *
         * @param name Required. Name of the storage pool
         * @param content the {@link com.google.api.services.netapp.v1beta1.model.ValidateDirectoryServiceRequest}
         * @return the request
         */
        public ValidateDirectoryService validateDirectoryService(java.lang.String name, com.google.api.services.netapp.v1beta1.model.ValidateDirectoryServiceRequest content) throws java.io.IOException {
          ValidateDirectoryService result = new ValidateDirectoryService(name, content);
          initialize(result);
          return result;
        }

        public class ValidateDirectoryService extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Operation> {

          private static final String REST_PATH = "v1beta1/{+name}:validateDirectoryService";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/storagePools/[^/]+$");

          /**
           * ValidateDirectoryService does a connectivity check for a directory service policy attached to
           * the storage pool.
           *
           * Create a request for the method "storagePools.validateDirectoryService".
           *
           * This request holds the parameters needed by the the netapp server.  After setting any optional
           * parameters, call the {@link ValidateDirectoryService#execute()} method to invoke the remote
           * operation. <p> {@link ValidateDirectoryService#initialize(com.google.api.client.googleapis.serv
           * ices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param name Required. Name of the storage pool
           * @param content the {@link com.google.api.services.netapp.v1beta1.model.ValidateDirectoryServiceRequest}
           * @since 1.13
           */
          protected ValidateDirectoryService(java.lang.String name, com.google.api.services.netapp.v1beta1.model.ValidateDirectoryServiceRequest content) {
            super(NetAppFiles.this, "POST", REST_PATH, content, com.google.api.services.netapp.v1beta1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/storagePools/[^/]+$");
            }
          }

          @Override
          public ValidateDirectoryService set$Xgafv(java.lang.String $Xgafv) {
            return (ValidateDirectoryService) super.set$Xgafv($Xgafv);
          }

          @Override
          public ValidateDirectoryService setAccessToken(java.lang.String accessToken) {
            return (ValidateDirectoryService) super.setAccessToken(accessToken);
          }

          @Override
          public ValidateDirectoryService setAlt(java.lang.String alt) {
            return (ValidateDirectoryService) super.setAlt(alt);
          }

          @Override
          public ValidateDirectoryService setCallback(java.lang.String callback) {
            return (ValidateDirectoryService) super.setCallback(callback);
          }

          @Override
          public ValidateDirectoryService setFields(java.lang.String fields) {
            return (ValidateDirectoryService) super.setFields(fields);
          }

          @Override
          public ValidateDirectoryService setKey(java.lang.String key) {
            return (ValidateDirectoryService) super.setKey(key);
          }

          @Override
          public ValidateDirectoryService setOauthToken(java.lang.String oauthToken) {
            return (ValidateDirectoryService) super.setOauthToken(oauthToken);
          }

          @Override
          public ValidateDirectoryService setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (ValidateDirectoryService) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public ValidateDirectoryService setQuotaUser(java.lang.String quotaUser) {
            return (ValidateDirectoryService) super.setQuotaUser(quotaUser);
          }

          @Override
          public ValidateDirectoryService setUploadType(java.lang.String uploadType) {
            return (ValidateDirectoryService) super.setUploadType(uploadType);
          }

          @Override
          public ValidateDirectoryService setUploadProtocol(java.lang.String uploadProtocol) {
            return (ValidateDirectoryService) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Name of the storage pool */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the storage pool
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. Name of the storage pool */
          public ValidateDirectoryService setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/storagePools/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public ValidateDirectoryService set(String parameterName, Object value) {
            return (ValidateDirectoryService) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Volumes collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code NetAppFiles netapp = new NetAppFiles(...);}
       *   {@code NetAppFiles.Volumes.List request = netapp.volumes().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Volumes volumes() {
        return new Volumes();
      }

      /**
       * The "volumes" collection of methods.
       */
      public class Volumes {

        /**
         * Creates a new Volume in a given project and location.
         *
         * Create a request for the method "volumes.create".
         *
         * This request holds the parameters needed by the netapp server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Value for parent.
         * @param content the {@link com.google.api.services.netapp.v1beta1.model.Volume}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.netapp.v1beta1.model.Volume content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Operation> {

          private static final String REST_PATH = "v1beta1/{+parent}/volumes";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a new Volume in a given project and location.
           *
           * Create a request for the method "volumes.create".
           *
           * This request holds the parameters needed by the the netapp server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Value for parent.
           * @param content the {@link com.google.api.services.netapp.v1beta1.model.Volume}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.netapp.v1beta1.model.Volume content) {
            super(NetAppFiles.this, "POST", REST_PATH, content, com.google.api.services.netapp.v1beta1.model.Operation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Value for parent. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Value for parent.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. Value for parent. */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Required. Id of the requesting volume. Must be unique within the parent resource. Must
           * contain only letters, numbers and hyphen, with the first character a letter, the last a
           * letter or a number, and a 63 character maximum.
           */
          @com.google.api.client.util.Key
          private java.lang.String volumeId;

          /** Required. Id of the requesting volume. Must be unique within the parent resource. Must contain only
         letters, numbers and hyphen, with the first character a letter, the last a letter or a number, and
         a 63 character maximum.
           */
          public java.lang.String getVolumeId() {
            return volumeId;
          }

          /**
           * Required. Id of the requesting volume. Must be unique within the parent resource. Must
           * contain only letters, numbers and hyphen, with the first character a letter, the last a
           * letter or a number, and a 63 character maximum.
           */
          public Create setVolumeId(java.lang.String volumeId) {
            this.volumeId = volumeId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a single Volume.
         *
         * Create a request for the method "volumes.delete".
         *
         * This request holds the parameters needed by the netapp server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the volume
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Operation> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");

          /**
           * Deletes a single Volume.
           *
           * Create a request for the method "volumes.delete".
           *
           * This request holds the parameters needed by the the netapp server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the volume
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(NetAppFiles.this, "DELETE", REST_PATH, null, com.google.api.services.netapp.v1beta1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Name of the volume */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the volume
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. Name of the volume */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * If this field is set as true, CCFE will not block the volume resource deletion even if
           * it has any snapshots resource. (Otherwise, the request will only work if the volume has
           * no snapshots.)
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean force;

          /** If this field is set as true, CCFE will not block the volume resource deletion even if it has any
         snapshots resource. (Otherwise, the request will only work if the volume has no snapshots.)
           */
          public java.lang.Boolean getForce() {
            return force;
          }

          /**
           * If this field is set as true, CCFE will not block the volume resource deletion even if
           * it has any snapshots resource. (Otherwise, the request will only work if the volume has
           * no snapshots.)
           */
          public Delete setForce(java.lang.Boolean force) {
            this.force = force;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets details of a single Volume.
         *
         * Create a request for the method "volumes.get".
         *
         * This request holds the parameters needed by the netapp server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the volume
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Volume> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");

          /**
           * Gets details of a single Volume.
           *
           * Create a request for the method "volumes.get".
           *
           * This request holds the parameters needed by the the netapp server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the volume
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(NetAppFiles.this, "GET", REST_PATH, null, com.google.api.services.netapp.v1beta1.model.Volume.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Name of the volume */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the volume
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. Name of the volume */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists Volumes in a given project.
         *
         * Create a request for the method "volumes.list".
         *
         * This request holds the parameters needed by the netapp server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Parent value for ListVolumesRequest
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.ListVolumesResponse> {

          private static final String REST_PATH = "v1beta1/{+parent}/volumes";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists Volumes in a given project.
           *
           * Create a request for the method "volumes.list".
           *
           * This request holds the parameters needed by the the netapp server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Parent value for ListVolumesRequest
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(NetAppFiles.this, "GET", REST_PATH, null, com.google.api.services.netapp.v1beta1.model.ListVolumesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Parent value for ListVolumesRequest */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Parent value for ListVolumesRequest
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. Parent value for ListVolumesRequest */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Filtering results */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Filtering results
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** Filtering results */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** Hint for how to order the results */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Hint for how to order the results
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /** Hint for how to order the results */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /**
           * Requested page size. Server may return fewer items than requested. If unspecified, the
           * server will pick an appropriate default.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Requested page size. Server may return fewer items than requested. If unspecified, the server will
         pick an appropriate default.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Requested page size. Server may return fewer items than requested. If unspecified, the
           * server will pick an appropriate default.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** A token identifying a page of results the server should return. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** A token identifying a page of results the server should return.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** A token identifying a page of results the server should return. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates the parameters of a single Volume.
         *
         * Create a request for the method "volumes.patch".
         *
         * This request holds the parameters needed by the netapp server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Identifier. Name of the volume
         * @param content the {@link com.google.api.services.netapp.v1beta1.model.Volume}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.netapp.v1beta1.model.Volume content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Operation> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");

          /**
           * Updates the parameters of a single Volume.
           *
           * Create a request for the method "volumes.patch".
           *
           * This request holds the parameters needed by the the netapp server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Identifier. Name of the volume
           * @param content the {@link com.google.api.services.netapp.v1beta1.model.Volume}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.netapp.v1beta1.model.Volume content) {
            super(NetAppFiles.this, "PATCH", REST_PATH, content, com.google.api.services.netapp.v1beta1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /** Identifier. Name of the volume */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Identifier. Name of the volume
           */
          public java.lang.String getName() {
            return name;
          }

          /** Identifier. Name of the volume */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Required. Field mask is used to specify the fields to be overwritten in the Volume
           * resource by the update. The fields specified in the update_mask are relative to the
           * resource, not the full request. A field will be overwritten if it is in the mask. If
           * the user does not provide a mask then all fields will be overwritten.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. Field mask is used to specify the fields to be overwritten in the Volume resource by the
         update. The fields specified in the update_mask are relative to the resource, not the full request.
         A field will be overwritten if it is in the mask. If the user does not provide a mask then all
         fields will be overwritten.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Required. Field mask is used to specify the fields to be overwritten in the Volume
           * resource by the update. The fields specified in the update_mask are relative to the
           * resource, not the full request. A field will be overwritten if it is in the mask. If
           * the user does not provide a mask then all fields will be overwritten.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Revert an existing volume to a specified snapshot. Warning! This operation will permanently
         * revert all changes made after the snapshot was created.
         *
         * Create a request for the method "volumes.revert".
         *
         * This request holds the parameters needed by the netapp server.  After setting any optional
         * parameters, call the {@link Revert#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the volume, in the format of
         *        projects/{project_id}/locations/{location}/volumes/{volume_id}.
         * @param content the {@link com.google.api.services.netapp.v1beta1.model.RevertVolumeRequest}
         * @return the request
         */
        public Revert revert(java.lang.String name, com.google.api.services.netapp.v1beta1.model.RevertVolumeRequest content) throws java.io.IOException {
          Revert result = new Revert(name, content);
          initialize(result);
          return result;
        }

        public class Revert extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Operation> {

          private static final String REST_PATH = "v1beta1/{+name}:revert";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");

          /**
           * Revert an existing volume to a specified snapshot. Warning! This operation will permanently
           * revert all changes made after the snapshot was created.
           *
           * Create a request for the method "volumes.revert".
           *
           * This request holds the parameters needed by the the netapp server.  After setting any optional
           * parameters, call the {@link Revert#execute()} method to invoke the remote operation. <p> {@link
           * Revert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the volume, in the format of
         *        projects/{project_id}/locations/{location}/volumes/{volume_id}.
           * @param content the {@link com.google.api.services.netapp.v1beta1.model.RevertVolumeRequest}
           * @since 1.13
           */
          protected Revert(java.lang.String name, com.google.api.services.netapp.v1beta1.model.RevertVolumeRequest content) {
            super(NetAppFiles.this, "POST", REST_PATH, content, com.google.api.services.netapp.v1beta1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");
            }
          }

          @Override
          public Revert set$Xgafv(java.lang.String $Xgafv) {
            return (Revert) super.set$Xgafv($Xgafv);
          }

          @Override
          public Revert setAccessToken(java.lang.String accessToken) {
            return (Revert) super.setAccessToken(accessToken);
          }

          @Override
          public Revert setAlt(java.lang.String alt) {
            return (Revert) super.setAlt(alt);
          }

          @Override
          public Revert setCallback(java.lang.String callback) {
            return (Revert) super.setCallback(callback);
          }

          @Override
          public Revert setFields(java.lang.String fields) {
            return (Revert) super.setFields(fields);
          }

          @Override
          public Revert setKey(java.lang.String key) {
            return (Revert) super.setKey(key);
          }

          @Override
          public Revert setOauthToken(java.lang.String oauthToken) {
            return (Revert) super.setOauthToken(oauthToken);
          }

          @Override
          public Revert setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Revert) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Revert setQuotaUser(java.lang.String quotaUser) {
            return (Revert) super.setQuotaUser(quotaUser);
          }

          @Override
          public Revert setUploadType(java.lang.String uploadType) {
            return (Revert) super.setUploadType(uploadType);
          }

          @Override
          public Revert setUploadProtocol(java.lang.String uploadProtocol) {
            return (Revert) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the volume, in the format of
           * projects/{project_id}/locations/{location}/volumes/{volume_id}.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the volume, in the format of
         projects/{project_id}/locations/{location}/volumes/{volume_id}.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The resource name of the volume, in the format of
           * projects/{project_id}/locations/{location}/volumes/{volume_id}.
           */
          public Revert setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Revert set(String parameterName, Object value) {
            return (Revert) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the QuotaRules collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code NetAppFiles netapp = new NetAppFiles(...);}
         *   {@code NetAppFiles.QuotaRules.List request = netapp.quotaRules().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public QuotaRules quotaRules() {
          return new QuotaRules();
        }

        /**
         * The "quotaRules" collection of methods.
         */
        public class QuotaRules {

          /**
           * Creates a new quota rule.
           *
           * Create a request for the method "quotaRules.create".
           *
           * This request holds the parameters needed by the netapp server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Parent value for CreateQuotaRuleRequest
           * @param content the {@link com.google.api.services.netapp.v1beta1.model.QuotaRule}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.netapp.v1beta1.model.QuotaRule content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Operation> {

            private static final String REST_PATH = "v1beta1/{+parent}/quotaRules";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");

            /**
             * Creates a new quota rule.
             *
             * Create a request for the method "quotaRules.create".
             *
             * This request holds the parameters needed by the the netapp server.  After setting any optional
             * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Parent value for CreateQuotaRuleRequest
             * @param content the {@link com.google.api.services.netapp.v1beta1.model.QuotaRule}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.netapp.v1beta1.model.QuotaRule content) {
              super(NetAppFiles.this, "POST", REST_PATH, content, com.google.api.services.netapp.v1beta1.model.Operation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. Parent value for CreateQuotaRuleRequest */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent value for CreateQuotaRuleRequest
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Parent value for CreateQuotaRuleRequest */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Required. ID of the quota rule to create. Must be unique within the parent resource.
             * Must contain only letters, numbers, underscore and hyphen, with the first character a
             * letter or underscore, the last a letter or underscore or a number, and a 63 character
             * maximum.
             */
            @com.google.api.client.util.Key
            private java.lang.String quotaRuleId;

            /** Required. ID of the quota rule to create. Must be unique within the parent resource. Must contain
           only letters, numbers, underscore and hyphen, with the first character a letter or underscore, the
           last a letter or underscore or a number, and a 63 character maximum.
             */
            public java.lang.String getQuotaRuleId() {
              return quotaRuleId;
            }

            /**
             * Required. ID of the quota rule to create. Must be unique within the parent resource.
             * Must contain only letters, numbers, underscore and hyphen, with the first character a
             * letter or underscore, the last a letter or underscore or a number, and a 63 character
             * maximum.
             */
            public Create setQuotaRuleId(java.lang.String quotaRuleId) {
              this.quotaRuleId = quotaRuleId;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a quota rule.
           *
           * Create a request for the method "quotaRules.delete".
           *
           * This request holds the parameters needed by the netapp server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. Name of the quota rule.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Operation> {

            private static final String REST_PATH = "v1beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/volumes/[^/]+/quotaRules/[^/]+$");

            /**
             * Deletes a quota rule.
             *
             * Create a request for the method "quotaRules.delete".
             *
             * This request holds the parameters needed by the the netapp server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Name of the quota rule.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(NetAppFiles.this, "DELETE", REST_PATH, null, com.google.api.services.netapp.v1beta1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/quotaRules/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. Name of the quota rule. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Name of the quota rule.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. Name of the quota rule. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/quotaRules/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Returns details of the specified quota rule.
           *
           * Create a request for the method "quotaRules.get".
           *
           * This request holds the parameters needed by the netapp server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. Name of the quota rule
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.QuotaRule> {

            private static final String REST_PATH = "v1beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/volumes/[^/]+/quotaRules/[^/]+$");

            /**
             * Returns details of the specified quota rule.
             *
             * Create a request for the method "quotaRules.get".
             *
             * This request holds the parameters needed by the the netapp server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
             * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Name of the quota rule
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(NetAppFiles.this, "GET", REST_PATH, null, com.google.api.services.netapp.v1beta1.model.QuotaRule.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/quotaRules/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. Name of the quota rule */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Name of the quota rule
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. Name of the quota rule */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/quotaRules/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Returns list of all quota rules in a location.
           *
           * Create a request for the method "quotaRules.list".
           *
           * This request holds the parameters needed by the netapp server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Parent value for ListQuotaRulesRequest
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.ListQuotaRulesResponse> {

            private static final String REST_PATH = "v1beta1/{+parent}/quotaRules";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");

            /**
             * Returns list of all quota rules in a location.
             *
             * Create a request for the method "quotaRules.list".
             *
             * This request holds the parameters needed by the the netapp server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Parent value for ListQuotaRulesRequest
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(NetAppFiles.this, "GET", REST_PATH, null, com.google.api.services.netapp.v1beta1.model.ListQuotaRulesResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. Parent value for ListQuotaRulesRequest */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent value for ListQuotaRulesRequest
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Parent value for ListQuotaRulesRequest */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /** Optional. Filtering results */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Optional. Filtering results
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** Optional. Filtering results */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** Optional. Hint for how to order the results */
            @com.google.api.client.util.Key
            private java.lang.String orderBy;

            /** Optional. Hint for how to order the results
             */
            public java.lang.String getOrderBy() {
              return orderBy;
            }

            /** Optional. Hint for how to order the results */
            public List setOrderBy(java.lang.String orderBy) {
              this.orderBy = orderBy;
              return this;
            }

            /**
             * Optional. Requested page size. Server may return fewer items than requested. If
             * unspecified, the server will pick an appropriate default.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. Requested page size. Server may return fewer items than requested. If unspecified, the
           server will pick an appropriate default.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. Requested page size. Server may return fewer items than requested. If
             * unspecified, the server will pick an appropriate default.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** Optional. A token identifying a page of results the server should return. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. A token identifying a page of results the server should return.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** Optional. A token identifying a page of results the server should return. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates a quota rule.
           *
           * Create a request for the method "quotaRules.patch".
           *
           * This request holds the parameters needed by the netapp server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Identifier. The resource name of the quota rule. Format: `projects/{project_number}/locations/{locat
           *        ion_id}/volumes/volumes/{volume_id}/quotaRules/{quota_rule_id}`.
           * @param content the {@link com.google.api.services.netapp.v1beta1.model.QuotaRule}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.netapp.v1beta1.model.QuotaRule content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Operation> {

            private static final String REST_PATH = "v1beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/volumes/[^/]+/quotaRules/[^/]+$");

            /**
             * Updates a quota rule.
             *
             * Create a request for the method "quotaRules.patch".
             *
             * This request holds the parameters needed by the the netapp server.  After setting any optional
             * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Identifier. The resource name of the quota rule. Format: `projects/{project_number}/locations/{locat
           *        ion_id}/volumes/volumes/{volume_id}/quotaRules/{quota_rule_id}`.
             * @param content the {@link com.google.api.services.netapp.v1beta1.model.QuotaRule}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.netapp.v1beta1.model.QuotaRule content) {
              super(NetAppFiles.this, "PATCH", REST_PATH, content, com.google.api.services.netapp.v1beta1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/quotaRules/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Identifier. The resource name of the quota rule. Format: `projects/{project_number}/l
             * ocations/{location_id}/volumes/volumes/{volume_id}/quotaRules/{quota_rule_id}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Identifier. The resource name of the quota rule. Format: `projects/{project_number}/locations/{loca
           tion_id}/volumes/volumes/{volume_id}/quotaRules/{quota_rule_id}`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Identifier. The resource name of the quota rule. Format: `projects/{project_number}/l
             * ocations/{location_id}/volumes/volumes/{volume_id}/quotaRules/{quota_rule_id}`.
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/quotaRules/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Optional. Field mask is used to specify the fields to be overwritten in the Quota
             * Rule resource by the update. The fields specified in the update_mask are relative to
             * the resource, not the full request. A field will be overwritten if it is in the mask.
             * If the user does not provide a mask then all fields will be overwritten.
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Optional. Field mask is used to specify the fields to be overwritten in the Quota Rule resource by
           the update. The fields specified in the update_mask are relative to the resource, not the full
           request. A field will be overwritten if it is in the mask. If the user does not provide a mask then
           all fields will be overwritten.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * Optional. Field mask is used to specify the fields to be overwritten in the Quota
             * Rule resource by the update. The fields specified in the update_mask are relative to
             * the resource, not the full request. A field will be overwritten if it is in the mask.
             * If the user does not provide a mask then all fields will be overwritten.
             */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the Replications collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code NetAppFiles netapp = new NetAppFiles(...);}
         *   {@code NetAppFiles.Replications.List request = netapp.replications().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Replications replications() {
          return new Replications();
        }

        /**
         * The "replications" collection of methods.
         */
        public class Replications {

          /**
           * Create a new replication for a volume.
           *
           * Create a request for the method "replications.create".
           *
           * This request holds the parameters needed by the netapp server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The NetApp volume to create the replications of, in the format
           *        `projects/{project_id}/locations/{location}/volumes/{volume_id}`
           * @param content the {@link com.google.api.services.netapp.v1beta1.model.Replication}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.netapp.v1beta1.model.Replication content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Operation> {

            private static final String REST_PATH = "v1beta1/{+parent}/replications";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");

            /**
             * Create a new replication for a volume.
             *
             * Create a request for the method "replications.create".
             *
             * This request holds the parameters needed by the the netapp server.  After setting any optional
             * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The NetApp volume to create the replications of, in the format
           *        `projects/{project_id}/locations/{location}/volumes/{volume_id}`
             * @param content the {@link com.google.api.services.netapp.v1beta1.model.Replication}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.netapp.v1beta1.model.Replication content) {
              super(NetAppFiles.this, "POST", REST_PATH, content, com.google.api.services.netapp.v1beta1.model.Operation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The NetApp volume to create the replications of, in the format
             * `projects/{project_id}/locations/{location}/volumes/{volume_id}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The NetApp volume to create the replications of, in the format
           `projects/{project_id}/locations/{location}/volumes/{volume_id}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The NetApp volume to create the replications of, in the format
             * `projects/{project_id}/locations/{location}/volumes/{volume_id}`
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Required. ID of the replication to create. Must be unique within the parent resource.
             * Must contain only letters, numbers and hyphen, with the first character a letter, the
             * last a letter or a number, and a 63 character maximum.
             */
            @com.google.api.client.util.Key
            private java.lang.String replicationId;

            /** Required. ID of the replication to create. Must be unique within the parent resource. Must contain
           only letters, numbers and hyphen, with the first character a letter, the last a letter or a number,
           and a 63 character maximum.
             */
            public java.lang.String getReplicationId() {
              return replicationId;
            }

            /**
             * Required. ID of the replication to create. Must be unique within the parent resource.
             * Must contain only letters, numbers and hyphen, with the first character a letter, the
             * last a letter or a number, and a 63 character maximum.
             */
            public Create setReplicationId(java.lang.String replicationId) {
              this.replicationId = replicationId;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a replication.
           *
           * Create a request for the method "replications.delete".
           *
           * This request holds the parameters needed by the netapp server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The replication resource name, in the format
           *        `projects/locations/volumes/replications/{replication_id}`
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Operation> {

            private static final String REST_PATH = "v1beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/volumes/[^/]+/replications/[^/]+$");

            /**
             * Deletes a replication.
             *
             * Create a request for the method "replications.delete".
             *
             * This request holds the parameters needed by the the netapp server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The replication resource name, in the format
           *        `projects/locations/volumes/replications/{replication_id}`
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(NetAppFiles.this, "DELETE", REST_PATH, null, com.google.api.services.netapp.v1beta1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/replications/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The replication resource name, in the format
             * `projects/locations/volumes/replications/{replication_id}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The replication resource name, in the format
           `projects/locations/volumes/replications/{replication_id}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The replication resource name, in the format
             * `projects/locations/volumes/replications/{replication_id}`
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/replications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Establish replication peering.
           *
           * Create a request for the method "replications.establishPeering".
           *
           * This request holds the parameters needed by the netapp server.  After setting any optional
           * parameters, call the {@link EstablishPeering#execute()} method to invoke the remote operation.
           *
           * @param name Required. The resource name of the replication, in the format of
           *        projects/{project_id}/locations/{location}/volumes/{volume_id}/replications/{replication_i
           *        d}.
           * @param content the {@link com.google.api.services.netapp.v1beta1.model.EstablishPeeringRequest}
           * @return the request
           */
          public EstablishPeering establishPeering(java.lang.String name, com.google.api.services.netapp.v1beta1.model.EstablishPeeringRequest content) throws java.io.IOException {
            EstablishPeering result = new EstablishPeering(name, content);
            initialize(result);
            return result;
          }

          public class EstablishPeering extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Operation> {

            private static final String REST_PATH = "v1beta1/{+name}:establishPeering";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/volumes/[^/]+/replications/[^/]+$");

            /**
             * Establish replication peering.
             *
             * Create a request for the method "replications.establishPeering".
             *
             * This request holds the parameters needed by the the netapp server.  After setting any optional
             * parameters, call the {@link EstablishPeering#execute()} method to invoke the remote operation.
             * <p> {@link EstablishPeering#initialize(com.google.api.client.googleapis.services.AbstractGoogle
             * ClientRequest)} must be called to initialize this instance immediately after invoking the
             * constructor. </p>
             *
             * @param name Required. The resource name of the replication, in the format of
           *        projects/{project_id}/locations/{location}/volumes/{volume_id}/replications/{replication_i
           *        d}.
             * @param content the {@link com.google.api.services.netapp.v1beta1.model.EstablishPeeringRequest}
             * @since 1.13
             */
            protected EstablishPeering(java.lang.String name, com.google.api.services.netapp.v1beta1.model.EstablishPeeringRequest content) {
              super(NetAppFiles.this, "POST", REST_PATH, content, com.google.api.services.netapp.v1beta1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/replications/[^/]+$");
              }
            }

            @Override
            public EstablishPeering set$Xgafv(java.lang.String $Xgafv) {
              return (EstablishPeering) super.set$Xgafv($Xgafv);
            }

            @Override
            public EstablishPeering setAccessToken(java.lang.String accessToken) {
              return (EstablishPeering) super.setAccessToken(accessToken);
            }

            @Override
            public EstablishPeering setAlt(java.lang.String alt) {
              return (EstablishPeering) super.setAlt(alt);
            }

            @Override
            public EstablishPeering setCallback(java.lang.String callback) {
              return (EstablishPeering) super.setCallback(callback);
            }

            @Override
            public EstablishPeering setFields(java.lang.String fields) {
              return (EstablishPeering) super.setFields(fields);
            }

            @Override
            public EstablishPeering setKey(java.lang.String key) {
              return (EstablishPeering) super.setKey(key);
            }

            @Override
            public EstablishPeering setOauthToken(java.lang.String oauthToken) {
              return (EstablishPeering) super.setOauthToken(oauthToken);
            }

            @Override
            public EstablishPeering setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (EstablishPeering) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public EstablishPeering setQuotaUser(java.lang.String quotaUser) {
              return (EstablishPeering) super.setQuotaUser(quotaUser);
            }

            @Override
            public EstablishPeering setUploadType(java.lang.String uploadType) {
              return (EstablishPeering) super.setUploadType(uploadType);
            }

            @Override
            public EstablishPeering setUploadProtocol(java.lang.String uploadProtocol) {
              return (EstablishPeering) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the replication, in the format of projects/{project_id
             * }/locations/{location}/volumes/{volume_id}/replications/{replication_id}.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The resource name of the replication, in the format of
           projects/{project_id}/locations/{location}/volumes/{volume_id}/replications/{replication_id}.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The resource name of the replication, in the format of projects/{project_id
             * }/locations/{location}/volumes/{volume_id}/replications/{replication_id}.
             */
            public EstablishPeering setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/replications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public EstablishPeering set(String parameterName, Object value) {
              return (EstablishPeering) super.set(parameterName, value);
            }
          }
          /**
           * Describe a replication for a volume.
           *
           * Create a request for the method "replications.get".
           *
           * This request holds the parameters needed by the netapp server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The replication resource name, in the format
           *        `projects/{project_id}/locations/{location}/volumes/{volume_id}/replications/{replication_
           *        id}`
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Replication> {

            private static final String REST_PATH = "v1beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/volumes/[^/]+/replications/[^/]+$");

            /**
             * Describe a replication for a volume.
             *
             * Create a request for the method "replications.get".
             *
             * This request holds the parameters needed by the the netapp server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
             * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The replication resource name, in the format
           *        `projects/{project_id}/locations/{location}/volumes/{volume_id}/replications/{replication_
           *        id}`
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(NetAppFiles.this, "GET", REST_PATH, null, com.google.api.services.netapp.v1beta1.model.Replication.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/replications/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The replication resource name, in the format `projects/{project_id}/locatio
             * ns/{location}/volumes/{volume_id}/replications/{replication_id}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The replication resource name, in the format
           `projects/{project_id}/locations/{location}/volumes/{volume_id}/replications/{replication_id}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The replication resource name, in the format `projects/{project_id}/locatio
             * ns/{location}/volumes/{volume_id}/replications/{replication_id}`
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/replications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Returns descriptions of all replications for a volume.
           *
           * Create a request for the method "replications.list".
           *
           * This request holds the parameters needed by the netapp server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The volume for which to retrieve replication information, in the format
           *        `projects/{project_id}/locations/{location}/volumes/{volume_id}`.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.ListReplicationsResponse> {

            private static final String REST_PATH = "v1beta1/{+parent}/replications";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");

            /**
             * Returns descriptions of all replications for a volume.
             *
             * Create a request for the method "replications.list".
             *
             * This request holds the parameters needed by the the netapp server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The volume for which to retrieve replication information, in the format
           *        `projects/{project_id}/locations/{location}/volumes/{volume_id}`.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(NetAppFiles.this, "GET", REST_PATH, null, com.google.api.services.netapp.v1beta1.model.ListReplicationsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The volume for which to retrieve replication information, in the format
             * `projects/{project_id}/locations/{location}/volumes/{volume_id}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The volume for which to retrieve replication information, in the format
           `projects/{project_id}/locations/{location}/volumes/{volume_id}`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The volume for which to retrieve replication information, in the format
             * `projects/{project_id}/locations/{location}/volumes/{volume_id}`.
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /** List filter. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** List filter.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** List filter. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** Sort results. Supported values are "name", "name desc" or "" (unsorted). */
            @com.google.api.client.util.Key
            private java.lang.String orderBy;

            /** Sort results. Supported values are "name", "name desc" or "" (unsorted).
             */
            public java.lang.String getOrderBy() {
              return orderBy;
            }

            /** Sort results. Supported values are "name", "name desc" or "" (unsorted). */
            public List setOrderBy(java.lang.String orderBy) {
              this.orderBy = orderBy;
              return this;
            }

            /** The maximum number of items to return. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The maximum number of items to return.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The maximum number of items to return. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * The next_page_token value to use if there are additional results to retrieve for this
             * list request.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The next_page_token value to use if there are additional results to retrieve for this list request.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * The next_page_token value to use if there are additional results to retrieve for this
             * list request.
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates the settings of a specific replication.
           *
           * Create a request for the method "replications.patch".
           *
           * This request holds the parameters needed by the netapp server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Identifier. The resource name of the Replication. Format:
           *        `projects/{project_id}/locations/{location}/volumes/{volume_id}/replications/{replication_
           *        id}`.
           * @param content the {@link com.google.api.services.netapp.v1beta1.model.Replication}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.netapp.v1beta1.model.Replication content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Operation> {

            private static final String REST_PATH = "v1beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/volumes/[^/]+/replications/[^/]+$");

            /**
             * Updates the settings of a specific replication.
             *
             * Create a request for the method "replications.patch".
             *
             * This request holds the parameters needed by the the netapp server.  After setting any optional
             * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Identifier. The resource name of the Replication. Format:
           *        `projects/{project_id}/locations/{location}/volumes/{volume_id}/replications/{replication_
           *        id}`.
             * @param content the {@link com.google.api.services.netapp.v1beta1.model.Replication}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.netapp.v1beta1.model.Replication content) {
              super(NetAppFiles.this, "PATCH", REST_PATH, content, com.google.api.services.netapp.v1beta1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/replications/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Identifier. The resource name of the Replication. Format: `projects/{project_id}/loca
             * tions/{location}/volumes/{volume_id}/replications/{replication_id}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Identifier. The resource name of the Replication. Format:
           `projects/{project_id}/locations/{location}/volumes/{volume_id}/replications/{replication_id}`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Identifier. The resource name of the Replication. Format: `projects/{project_id}/loca
             * tions/{location}/volumes/{volume_id}/replications/{replication_id}`.
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/replications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Required. Mask of fields to update. At least one path must be supplied in this field.
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Required. Mask of fields to update. At least one path must be supplied in this field.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * Required. Mask of fields to update. At least one path must be supplied in this field.
             */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }
          /**
           * Resume Cross Region Replication.
           *
           * Create a request for the method "replications.resume".
           *
           * This request holds the parameters needed by the netapp server.  After setting any optional
           * parameters, call the {@link Resume#execute()} method to invoke the remote operation.
           *
           * @param name Required. The resource name of the replication, in the format of
           *        projects/{project_id}/locations/{location}/volumes/{volume_id}/replications/{replication_i
           *        d}.
           * @param content the {@link com.google.api.services.netapp.v1beta1.model.ResumeReplicationRequest}
           * @return the request
           */
          public Resume resume(java.lang.String name, com.google.api.services.netapp.v1beta1.model.ResumeReplicationRequest content) throws java.io.IOException {
            Resume result = new Resume(name, content);
            initialize(result);
            return result;
          }

          public class Resume extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Operation> {

            private static final String REST_PATH = "v1beta1/{+name}:resume";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/volumes/[^/]+/replications/[^/]+$");

            /**
             * Resume Cross Region Replication.
             *
             * Create a request for the method "replications.resume".
             *
             * This request holds the parameters needed by the the netapp server.  After setting any optional
             * parameters, call the {@link Resume#execute()} method to invoke the remote operation. <p> {@link
             * Resume#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The resource name of the replication, in the format of
           *        projects/{project_id}/locations/{location}/volumes/{volume_id}/replications/{replication_i
           *        d}.
             * @param content the {@link com.google.api.services.netapp.v1beta1.model.ResumeReplicationRequest}
             * @since 1.13
             */
            protected Resume(java.lang.String name, com.google.api.services.netapp.v1beta1.model.ResumeReplicationRequest content) {
              super(NetAppFiles.this, "POST", REST_PATH, content, com.google.api.services.netapp.v1beta1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/replications/[^/]+$");
              }
            }

            @Override
            public Resume set$Xgafv(java.lang.String $Xgafv) {
              return (Resume) super.set$Xgafv($Xgafv);
            }

            @Override
            public Resume setAccessToken(java.lang.String accessToken) {
              return (Resume) super.setAccessToken(accessToken);
            }

            @Override
            public Resume setAlt(java.lang.String alt) {
              return (Resume) super.setAlt(alt);
            }

            @Override
            public Resume setCallback(java.lang.String callback) {
              return (Resume) super.setCallback(callback);
            }

            @Override
            public Resume setFields(java.lang.String fields) {
              return (Resume) super.setFields(fields);
            }

            @Override
            public Resume setKey(java.lang.String key) {
              return (Resume) super.setKey(key);
            }

            @Override
            public Resume setOauthToken(java.lang.String oauthToken) {
              return (Resume) super.setOauthToken(oauthToken);
            }

            @Override
            public Resume setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Resume) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Resume setQuotaUser(java.lang.String quotaUser) {
              return (Resume) super.setQuotaUser(quotaUser);
            }

            @Override
            public Resume setUploadType(java.lang.String uploadType) {
              return (Resume) super.setUploadType(uploadType);
            }

            @Override
            public Resume setUploadProtocol(java.lang.String uploadProtocol) {
              return (Resume) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the replication, in the format of projects/{project_id
             * }/locations/{location}/volumes/{volume_id}/replications/{replication_id}.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The resource name of the replication, in the format of
           projects/{project_id}/locations/{location}/volumes/{volume_id}/replications/{replication_id}.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The resource name of the replication, in the format of projects/{project_id
             * }/locations/{location}/volumes/{volume_id}/replications/{replication_id}.
             */
            public Resume setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/replications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Resume set(String parameterName, Object value) {
              return (Resume) super.set(parameterName, value);
            }
          }
          /**
           * Reverses direction of replication. Source becomes destination and destination becomes source.
           *
           * Create a request for the method "replications.reverseDirection".
           *
           * This request holds the parameters needed by the netapp server.  After setting any optional
           * parameters, call the {@link ReverseDirection#execute()} method to invoke the remote operation.
           *
           * @param name Required. The resource name of the replication, in the format of
           *        projects/{project_id}/locations/{location}/volumes/{volume_id}/replications/{replication_i
           *        d}.
           * @param content the {@link com.google.api.services.netapp.v1beta1.model.ReverseReplicationDirectionRequest}
           * @return the request
           */
          public ReverseDirection reverseDirection(java.lang.String name, com.google.api.services.netapp.v1beta1.model.ReverseReplicationDirectionRequest content) throws java.io.IOException {
            ReverseDirection result = new ReverseDirection(name, content);
            initialize(result);
            return result;
          }

          public class ReverseDirection extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Operation> {

            private static final String REST_PATH = "v1beta1/{+name}:reverseDirection";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/volumes/[^/]+/replications/[^/]+$");

            /**
             * Reverses direction of replication. Source becomes destination and destination becomes source.
             *
             * Create a request for the method "replications.reverseDirection".
             *
             * This request holds the parameters needed by the the netapp server.  After setting any optional
             * parameters, call the {@link ReverseDirection#execute()} method to invoke the remote operation.
             * <p> {@link ReverseDirection#initialize(com.google.api.client.googleapis.services.AbstractGoogle
             * ClientRequest)} must be called to initialize this instance immediately after invoking the
             * constructor. </p>
             *
             * @param name Required. The resource name of the replication, in the format of
           *        projects/{project_id}/locations/{location}/volumes/{volume_id}/replications/{replication_i
           *        d}.
             * @param content the {@link com.google.api.services.netapp.v1beta1.model.ReverseReplicationDirectionRequest}
             * @since 1.13
             */
            protected ReverseDirection(java.lang.String name, com.google.api.services.netapp.v1beta1.model.ReverseReplicationDirectionRequest content) {
              super(NetAppFiles.this, "POST", REST_PATH, content, com.google.api.services.netapp.v1beta1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/replications/[^/]+$");
              }
            }

            @Override
            public ReverseDirection set$Xgafv(java.lang.String $Xgafv) {
              return (ReverseDirection) super.set$Xgafv($Xgafv);
            }

            @Override
            public ReverseDirection setAccessToken(java.lang.String accessToken) {
              return (ReverseDirection) super.setAccessToken(accessToken);
            }

            @Override
            public ReverseDirection setAlt(java.lang.String alt) {
              return (ReverseDirection) super.setAlt(alt);
            }

            @Override
            public ReverseDirection setCallback(java.lang.String callback) {
              return (ReverseDirection) super.setCallback(callback);
            }

            @Override
            public ReverseDirection setFields(java.lang.String fields) {
              return (ReverseDirection) super.setFields(fields);
            }

            @Override
            public ReverseDirection setKey(java.lang.String key) {
              return (ReverseDirection) super.setKey(key);
            }

            @Override
            public ReverseDirection setOauthToken(java.lang.String oauthToken) {
              return (ReverseDirection) super.setOauthToken(oauthToken);
            }

            @Override
            public ReverseDirection setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (ReverseDirection) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public ReverseDirection setQuotaUser(java.lang.String quotaUser) {
              return (ReverseDirection) super.setQuotaUser(quotaUser);
            }

            @Override
            public ReverseDirection setUploadType(java.lang.String uploadType) {
              return (ReverseDirection) super.setUploadType(uploadType);
            }

            @Override
            public ReverseDirection setUploadProtocol(java.lang.String uploadProtocol) {
              return (ReverseDirection) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the replication, in the format of projects/{project_id
             * }/locations/{location}/volumes/{volume_id}/replications/{replication_id}.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The resource name of the replication, in the format of
           projects/{project_id}/locations/{location}/volumes/{volume_id}/replications/{replication_id}.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The resource name of the replication, in the format of projects/{project_id
             * }/locations/{location}/volumes/{volume_id}/replications/{replication_id}.
             */
            public ReverseDirection setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/replications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public ReverseDirection set(String parameterName, Object value) {
              return (ReverseDirection) super.set(parameterName, value);
            }
          }
          /**
           * Stop Cross Region Replication.
           *
           * Create a request for the method "replications.stop".
           *
           * This request holds the parameters needed by the netapp server.  After setting any optional
           * parameters, call the {@link Stop#execute()} method to invoke the remote operation.
           *
           * @param name Required. The resource name of the replication, in the format of
           *        projects/{project_id}/locations/{location}/volumes/{volume_id}/replications/{replication_i
           *        d}.
           * @param content the {@link com.google.api.services.netapp.v1beta1.model.StopReplicationRequest}
           * @return the request
           */
          public Stop stop(java.lang.String name, com.google.api.services.netapp.v1beta1.model.StopReplicationRequest content) throws java.io.IOException {
            Stop result = new Stop(name, content);
            initialize(result);
            return result;
          }

          public class Stop extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Operation> {

            private static final String REST_PATH = "v1beta1/{+name}:stop";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/volumes/[^/]+/replications/[^/]+$");

            /**
             * Stop Cross Region Replication.
             *
             * Create a request for the method "replications.stop".
             *
             * This request holds the parameters needed by the the netapp server.  After setting any optional
             * parameters, call the {@link Stop#execute()} method to invoke the remote operation. <p> {@link
             * Stop#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The resource name of the replication, in the format of
           *        projects/{project_id}/locations/{location}/volumes/{volume_id}/replications/{replication_i
           *        d}.
             * @param content the {@link com.google.api.services.netapp.v1beta1.model.StopReplicationRequest}
             * @since 1.13
             */
            protected Stop(java.lang.String name, com.google.api.services.netapp.v1beta1.model.StopReplicationRequest content) {
              super(NetAppFiles.this, "POST", REST_PATH, content, com.google.api.services.netapp.v1beta1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/replications/[^/]+$");
              }
            }

            @Override
            public Stop set$Xgafv(java.lang.String $Xgafv) {
              return (Stop) super.set$Xgafv($Xgafv);
            }

            @Override
            public Stop setAccessToken(java.lang.String accessToken) {
              return (Stop) super.setAccessToken(accessToken);
            }

            @Override
            public Stop setAlt(java.lang.String alt) {
              return (Stop) super.setAlt(alt);
            }

            @Override
            public Stop setCallback(java.lang.String callback) {
              return (Stop) super.setCallback(callback);
            }

            @Override
            public Stop setFields(java.lang.String fields) {
              return (Stop) super.setFields(fields);
            }

            @Override
            public Stop setKey(java.lang.String key) {
              return (Stop) super.setKey(key);
            }

            @Override
            public Stop setOauthToken(java.lang.String oauthToken) {
              return (Stop) super.setOauthToken(oauthToken);
            }

            @Override
            public Stop setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Stop) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Stop setQuotaUser(java.lang.String quotaUser) {
              return (Stop) super.setQuotaUser(quotaUser);
            }

            @Override
            public Stop setUploadType(java.lang.String uploadType) {
              return (Stop) super.setUploadType(uploadType);
            }

            @Override
            public Stop setUploadProtocol(java.lang.String uploadProtocol) {
              return (Stop) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the replication, in the format of projects/{project_id
             * }/locations/{location}/volumes/{volume_id}/replications/{replication_id}.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The resource name of the replication, in the format of
           projects/{project_id}/locations/{location}/volumes/{volume_id}/replications/{replication_id}.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The resource name of the replication, in the format of projects/{project_id
             * }/locations/{location}/volumes/{volume_id}/replications/{replication_id}.
             */
            public Stop setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/replications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Stop set(String parameterName, Object value) {
              return (Stop) super.set(parameterName, value);
            }
          }
          /**
           * Syncs the replication. This will invoke one time volume data transfer from source to destination.
           *
           * Create a request for the method "replications.sync".
           *
           * This request holds the parameters needed by the netapp server.  After setting any optional
           * parameters, call the {@link Sync#execute()} method to invoke the remote operation.
           *
           * @param name Required. The resource name of the replication, in the format of
           *        projects/{project_id}/locations/{location}/volumes/{volume_id}/replications/{replication_i
           *        d}.
           * @param content the {@link com.google.api.services.netapp.v1beta1.model.SyncReplicationRequest}
           * @return the request
           */
          public Sync sync(java.lang.String name, com.google.api.services.netapp.v1beta1.model.SyncReplicationRequest content) throws java.io.IOException {
            Sync result = new Sync(name, content);
            initialize(result);
            return result;
          }

          public class Sync extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Operation> {

            private static final String REST_PATH = "v1beta1/{+name}:sync";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/volumes/[^/]+/replications/[^/]+$");

            /**
             * Syncs the replication. This will invoke one time volume data transfer from source to
             * destination.
             *
             * Create a request for the method "replications.sync".
             *
             * This request holds the parameters needed by the the netapp server.  After setting any optional
             * parameters, call the {@link Sync#execute()} method to invoke the remote operation. <p> {@link
             * Sync#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The resource name of the replication, in the format of
           *        projects/{project_id}/locations/{location}/volumes/{volume_id}/replications/{replication_i
           *        d}.
             * @param content the {@link com.google.api.services.netapp.v1beta1.model.SyncReplicationRequest}
             * @since 1.13
             */
            protected Sync(java.lang.String name, com.google.api.services.netapp.v1beta1.model.SyncReplicationRequest content) {
              super(NetAppFiles.this, "POST", REST_PATH, content, com.google.api.services.netapp.v1beta1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/replications/[^/]+$");
              }
            }

            @Override
            public Sync set$Xgafv(java.lang.String $Xgafv) {
              return (Sync) super.set$Xgafv($Xgafv);
            }

            @Override
            public Sync setAccessToken(java.lang.String accessToken) {
              return (Sync) super.setAccessToken(accessToken);
            }

            @Override
            public Sync setAlt(java.lang.String alt) {
              return (Sync) super.setAlt(alt);
            }

            @Override
            public Sync setCallback(java.lang.String callback) {
              return (Sync) super.setCallback(callback);
            }

            @Override
            public Sync setFields(java.lang.String fields) {
              return (Sync) super.setFields(fields);
            }

            @Override
            public Sync setKey(java.lang.String key) {
              return (Sync) super.setKey(key);
            }

            @Override
            public Sync setOauthToken(java.lang.String oauthToken) {
              return (Sync) super.setOauthToken(oauthToken);
            }

            @Override
            public Sync setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Sync) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Sync setQuotaUser(java.lang.String quotaUser) {
              return (Sync) super.setQuotaUser(quotaUser);
            }

            @Override
            public Sync setUploadType(java.lang.String uploadType) {
              return (Sync) super.setUploadType(uploadType);
            }

            @Override
            public Sync setUploadProtocol(java.lang.String uploadProtocol) {
              return (Sync) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the replication, in the format of projects/{project_id
             * }/locations/{location}/volumes/{volume_id}/replications/{replication_id}.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The resource name of the replication, in the format of
           projects/{project_id}/locations/{location}/volumes/{volume_id}/replications/{replication_id}.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The resource name of the replication, in the format of projects/{project_id
             * }/locations/{location}/volumes/{volume_id}/replications/{replication_id}.
             */
            public Sync setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/replications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Sync set(String parameterName, Object value) {
              return (Sync) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the Snapshots collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code NetAppFiles netapp = new NetAppFiles(...);}
         *   {@code NetAppFiles.Snapshots.List request = netapp.snapshots().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Snapshots snapshots() {
          return new Snapshots();
        }

        /**
         * The "snapshots" collection of methods.
         */
        public class Snapshots {

          /**
           * Create a new snapshot for a volume.
           *
           * Create a request for the method "snapshots.create".
           *
           * This request holds the parameters needed by the netapp server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The NetApp volume to create the snapshots of, in the format
           *        `projects/{project_id}/locations/{location}/volumes/{volume_id}`
           * @param content the {@link com.google.api.services.netapp.v1beta1.model.Snapshot}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.netapp.v1beta1.model.Snapshot content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Operation> {

            private static final String REST_PATH = "v1beta1/{+parent}/snapshots";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");

            /**
             * Create a new snapshot for a volume.
             *
             * Create a request for the method "snapshots.create".
             *
             * This request holds the parameters needed by the the netapp server.  After setting any optional
             * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The NetApp volume to create the snapshots of, in the format
           *        `projects/{project_id}/locations/{location}/volumes/{volume_id}`
             * @param content the {@link com.google.api.services.netapp.v1beta1.model.Snapshot}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.netapp.v1beta1.model.Snapshot content) {
              super(NetAppFiles.this, "POST", REST_PATH, content, com.google.api.services.netapp.v1beta1.model.Operation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The NetApp volume to create the snapshots of, in the format
             * `projects/{project_id}/locations/{location}/volumes/{volume_id}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The NetApp volume to create the snapshots of, in the format
           `projects/{project_id}/locations/{location}/volumes/{volume_id}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The NetApp volume to create the snapshots of, in the format
             * `projects/{project_id}/locations/{location}/volumes/{volume_id}`
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Required. ID of the snapshot to create. Must be unique within the parent resource.
             * Must contain only letters, numbers and hyphen, with the first character a letter, the
             * last a letter or a number, and a 63 character maximum.
             */
            @com.google.api.client.util.Key
            private java.lang.String snapshotId;

            /** Required. ID of the snapshot to create. Must be unique within the parent resource. Must contain
           only letters, numbers and hyphen, with the first character a letter, the last a letter or a number,
           and a 63 character maximum.
             */
            public java.lang.String getSnapshotId() {
              return snapshotId;
            }

            /**
             * Required. ID of the snapshot to create. Must be unique within the parent resource.
             * Must contain only letters, numbers and hyphen, with the first character a letter, the
             * last a letter or a number, and a 63 character maximum.
             */
            public Create setSnapshotId(java.lang.String snapshotId) {
              this.snapshotId = snapshotId;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a snapshot.
           *
           * Create a request for the method "snapshots.delete".
           *
           * This request holds the parameters needed by the netapp server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The snapshot resource name, in the format
           *        `projects/locations/volumes/snapshots/{snapshot_id}`
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Operation> {

            private static final String REST_PATH = "v1beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$");

            /**
             * Deletes a snapshot.
             *
             * Create a request for the method "snapshots.delete".
             *
             * This request holds the parameters needed by the the netapp server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The snapshot resource name, in the format
           *        `projects/locations/volumes/snapshots/{snapshot_id}`
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(NetAppFiles.this, "DELETE", REST_PATH, null, com.google.api.services.netapp.v1beta1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The snapshot resource name, in the format
             * `projects/locations/volumes/snapshots/{snapshot_id}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The snapshot resource name, in the format
           `projects/locations/volumes/snapshots/{snapshot_id}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The snapshot resource name, in the format
             * `projects/locations/volumes/snapshots/{snapshot_id}`
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Describe a snapshot for a volume.
           *
           * Create a request for the method "snapshots.get".
           *
           * This request holds the parameters needed by the netapp server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The snapshot resource name, in the format
           *        `projects/{project_id}/locations/{location}/volumes/{volume_id}/snapshots/{snapshot_id}`
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Snapshot> {

            private static final String REST_PATH = "v1beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$");

            /**
             * Describe a snapshot for a volume.
             *
             * Create a request for the method "snapshots.get".
             *
             * This request holds the parameters needed by the the netapp server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
             * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The snapshot resource name, in the format
           *        `projects/{project_id}/locations/{location}/volumes/{volume_id}/snapshots/{snapshot_id}`
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(NetAppFiles.this, "GET", REST_PATH, null, com.google.api.services.netapp.v1beta1.model.Snapshot.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The snapshot resource name, in the format `projects/{project_id}/locations/
             * {location}/volumes/{volume_id}/snapshots/{snapshot_id}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The snapshot resource name, in the format
           `projects/{project_id}/locations/{location}/volumes/{volume_id}/snapshots/{snapshot_id}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The snapshot resource name, in the format `projects/{project_id}/locations/
             * {location}/volumes/{volume_id}/snapshots/{snapshot_id}`
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Returns descriptions of all snapshots for a volume.
           *
           * Create a request for the method "snapshots.list".
           *
           * This request holds the parameters needed by the netapp server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The volume for which to retrieve snapshot information, in the format
           *        `projects/{project_id}/locations/{location}/volumes/{volume_id}`.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.ListSnapshotsResponse> {

            private static final String REST_PATH = "v1beta1/{+parent}/snapshots";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");

            /**
             * Returns descriptions of all snapshots for a volume.
             *
             * Create a request for the method "snapshots.list".
             *
             * This request holds the parameters needed by the the netapp server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The volume for which to retrieve snapshot information, in the format
           *        `projects/{project_id}/locations/{location}/volumes/{volume_id}`.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(NetAppFiles.this, "GET", REST_PATH, null, com.google.api.services.netapp.v1beta1.model.ListSnapshotsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The volume for which to retrieve snapshot information, in the format
             * `projects/{project_id}/locations/{location}/volumes/{volume_id}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The volume for which to retrieve snapshot information, in the format
           `projects/{project_id}/locations/{location}/volumes/{volume_id}`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The volume for which to retrieve snapshot information, in the format
             * `projects/{project_id}/locations/{location}/volumes/{volume_id}`.
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /** List filter. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** List filter.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** List filter. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** Sort results. Supported values are "name", "name desc" or "" (unsorted). */
            @com.google.api.client.util.Key
            private java.lang.String orderBy;

            /** Sort results. Supported values are "name", "name desc" or "" (unsorted).
             */
            public java.lang.String getOrderBy() {
              return orderBy;
            }

            /** Sort results. Supported values are "name", "name desc" or "" (unsorted). */
            public List setOrderBy(java.lang.String orderBy) {
              this.orderBy = orderBy;
              return this;
            }

            /** The maximum number of items to return. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The maximum number of items to return.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The maximum number of items to return. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * The next_page_token value to use if there are additional results to retrieve for this
             * list request.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The next_page_token value to use if there are additional results to retrieve for this list request.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * The next_page_token value to use if there are additional results to retrieve for this
             * list request.
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates the settings of a specific snapshot.
           *
           * Create a request for the method "snapshots.patch".
           *
           * This request holds the parameters needed by the netapp server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Identifier. The resource name of the snapshot. Format:
           *        `projects/{project_id}/locations/{location}/volumes/{volume_id}/snapshots/{snapshot_id}`.
           * @param content the {@link com.google.api.services.netapp.v1beta1.model.Snapshot}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.netapp.v1beta1.model.Snapshot content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends NetAppFilesRequest<com.google.api.services.netapp.v1beta1.model.Operation> {

            private static final String REST_PATH = "v1beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$");

            /**
             * Updates the settings of a specific snapshot.
             *
             * Create a request for the method "snapshots.patch".
             *
             * This request holds the parameters needed by the the netapp server.  After setting any optional
             * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Identifier. The resource name of the snapshot. Format:
           *        `projects/{project_id}/locations/{location}/volumes/{volume_id}/snapshots/{snapshot_id}`.
             * @param content the {@link com.google.api.services.netapp.v1beta1.model.Snapshot}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.netapp.v1beta1.model.Snapshot content) {
              super(NetAppFiles.this, "PATCH", REST_PATH, content, com.google.api.services.netapp.v1beta1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Identifier. The resource name of the snapshot. Format: `projects/{project_id}/locatio
             * ns/{location}/volumes/{volume_id}/snapshots/{snapshot_id}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Identifier. The resource name of the snapshot. Format:
           `projects/{project_id}/locations/{location}/volumes/{volume_id}/snapshots/{snapshot_id}`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Identifier. The resource name of the snapshot. Format: `projects/{project_id}/locatio
             * ns/{location}/volumes/{volume_id}/snapshots/{snapshot_id}`.
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Required. Mask of fields to update. At least one path must be supplied in this field.
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Required. Mask of fields to update. At least one path must be supplied in this field.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * Required. Mask of fields to update. At least one path must be supplied in this field.
             */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }

        }
      }
    }
  }

  /**
   * Builder for {@link NetAppFiles}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link NetAppFiles}. */
    @Override
    public NetAppFiles build() {
      return new NetAppFiles(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link NetAppFilesRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setNetAppFilesRequestInitializer(
        NetAppFilesRequestInitializer netappfilesRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(netappfilesRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }

    @Override
    public Builder setUniverseDomain(String universeDomain) {
      return (Builder) super.setUniverseDomain(universeDomain);
    }
  }
}
