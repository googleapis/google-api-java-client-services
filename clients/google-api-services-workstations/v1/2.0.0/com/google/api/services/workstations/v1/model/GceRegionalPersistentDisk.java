/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.workstations.v1.model;

/**
 * A Persistent Directory backed by a Compute Engine regional persistent disk. The
 * persistent_directories field is repeated, but it may contain only one entry. It creates a
 * [persistent disk](https://cloud.google.com/compute/docs/disks/persistent-disks) that mounts to
 * the workstation VM at `/home` when the session starts and detaches when the session ends. If this
 * field is empty, workstations created with this configuration do not have a persistent home
 * directory.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Workstations API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GceRegionalPersistentDisk extends com.google.api.client.json.GenericJson {

  /**
   * Optional. The [type of the persistent disk](https://cloud.google.com/compute/docs/disks#disk-
   * types) for the home directory. Defaults to `"pd-standard"`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String diskType;

  /**
   * Optional. Type of file system that the disk should be formatted with. The workstation image
   * must support this file system type. Must be empty if source_snapshot is set. Defaults to
   * `"ext4"`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String fsType;

  /**
   * Optional. Whether the persistent disk should be deleted when the workstation is deleted. Valid
   * values are `DELETE` and `RETAIN`. Defaults to `DELETE`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String reclaimPolicy;

  /**
   * Optional. The GB capacity of a persistent home directory for each workstation created with this
   * configuration. Must be empty if source_snapshot is set. Valid values are `10`, `50`, `100`,
   * `200`, `500`, or `1000`. Defaults to `200`. If less than `200` GB, the disk_type must be `"pd-
   * balanced"` or `"pd-ssd"`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer sizeGb;

  /**
   * Optional. Name of the snapshot to use as the source for the disk. If set, size_gb and fs_type
   * must be empty.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String sourceSnapshot;

  /**
   * Optional. The [type of the persistent disk](https://cloud.google.com/compute/docs/disks#disk-
   * types) for the home directory. Defaults to `"pd-standard"`.
   * @return value or {@code null} for none
   */
  public java.lang.String getDiskType() {
    return diskType;
  }

  /**
   * Optional. The [type of the persistent disk](https://cloud.google.com/compute/docs/disks#disk-
   * types) for the home directory. Defaults to `"pd-standard"`.
   * @param diskType diskType or {@code null} for none
   */
  public GceRegionalPersistentDisk setDiskType(java.lang.String diskType) {
    this.diskType = diskType;
    return this;
  }

  /**
   * Optional. Type of file system that the disk should be formatted with. The workstation image
   * must support this file system type. Must be empty if source_snapshot is set. Defaults to
   * `"ext4"`.
   * @return value or {@code null} for none
   */
  public java.lang.String getFsType() {
    return fsType;
  }

  /**
   * Optional. Type of file system that the disk should be formatted with. The workstation image
   * must support this file system type. Must be empty if source_snapshot is set. Defaults to
   * `"ext4"`.
   * @param fsType fsType or {@code null} for none
   */
  public GceRegionalPersistentDisk setFsType(java.lang.String fsType) {
    this.fsType = fsType;
    return this;
  }

  /**
   * Optional. Whether the persistent disk should be deleted when the workstation is deleted. Valid
   * values are `DELETE` and `RETAIN`. Defaults to `DELETE`.
   * @return value or {@code null} for none
   */
  public java.lang.String getReclaimPolicy() {
    return reclaimPolicy;
  }

  /**
   * Optional. Whether the persistent disk should be deleted when the workstation is deleted. Valid
   * values are `DELETE` and `RETAIN`. Defaults to `DELETE`.
   * @param reclaimPolicy reclaimPolicy or {@code null} for none
   */
  public GceRegionalPersistentDisk setReclaimPolicy(java.lang.String reclaimPolicy) {
    this.reclaimPolicy = reclaimPolicy;
    return this;
  }

  /**
   * Optional. The GB capacity of a persistent home directory for each workstation created with this
   * configuration. Must be empty if source_snapshot is set. Valid values are `10`, `50`, `100`,
   * `200`, `500`, or `1000`. Defaults to `200`. If less than `200` GB, the disk_type must be `"pd-
   * balanced"` or `"pd-ssd"`.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getSizeGb() {
    return sizeGb;
  }

  /**
   * Optional. The GB capacity of a persistent home directory for each workstation created with this
   * configuration. Must be empty if source_snapshot is set. Valid values are `10`, `50`, `100`,
   * `200`, `500`, or `1000`. Defaults to `200`. If less than `200` GB, the disk_type must be `"pd-
   * balanced"` or `"pd-ssd"`.
   * @param sizeGb sizeGb or {@code null} for none
   */
  public GceRegionalPersistentDisk setSizeGb(java.lang.Integer sizeGb) {
    this.sizeGb = sizeGb;
    return this;
  }

  /**
   * Optional. Name of the snapshot to use as the source for the disk. If set, size_gb and fs_type
   * must be empty.
   * @return value or {@code null} for none
   */
  public java.lang.String getSourceSnapshot() {
    return sourceSnapshot;
  }

  /**
   * Optional. Name of the snapshot to use as the source for the disk. If set, size_gb and fs_type
   * must be empty.
   * @param sourceSnapshot sourceSnapshot or {@code null} for none
   */
  public GceRegionalPersistentDisk setSourceSnapshot(java.lang.String sourceSnapshot) {
    this.sourceSnapshot = sourceSnapshot;
    return this;
  }

  @Override
  public GceRegionalPersistentDisk set(String fieldName, Object value) {
    return (GceRegionalPersistentDisk) super.set(fieldName, value);
  }

  @Override
  public GceRegionalPersistentDisk clone() {
    return (GceRegionalPersistentDisk) super.clone();
  }

}
