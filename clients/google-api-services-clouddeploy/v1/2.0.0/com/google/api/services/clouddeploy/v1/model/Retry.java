/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.clouddeploy.v1.model;

/**
 * Retries the failed job.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Deploy API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Retry extends com.google.api.client.json.GenericJson {

  /**
   * Required. Total number of retries. Retry is skipped if set to 0; The minimum value is 1, and
   * the maximum value is 10.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long attempts;

  /**
   * Optional. The pattern of how wait time will be increased. Default is linear. Backoff mode will
   * be ignored if `wait` is 0.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String backoffMode;

  /**
   * Optional. How long to wait for the first retry. Default is 0, and the maximum value is 14d.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String wait;

  /**
   * Required. Total number of retries. Retry is skipped if set to 0; The minimum value is 1, and
   * the maximum value is 10.
   * @return value or {@code null} for none
   */
  public java.lang.Long getAttempts() {
    return attempts;
  }

  /**
   * Required. Total number of retries. Retry is skipped if set to 0; The minimum value is 1, and
   * the maximum value is 10.
   * @param attempts attempts or {@code null} for none
   */
  public Retry setAttempts(java.lang.Long attempts) {
    this.attempts = attempts;
    return this;
  }

  /**
   * Optional. The pattern of how wait time will be increased. Default is linear. Backoff mode will
   * be ignored if `wait` is 0.
   * @return value or {@code null} for none
   */
  public java.lang.String getBackoffMode() {
    return backoffMode;
  }

  /**
   * Optional. The pattern of how wait time will be increased. Default is linear. Backoff mode will
   * be ignored if `wait` is 0.
   * @param backoffMode backoffMode or {@code null} for none
   */
  public Retry setBackoffMode(java.lang.String backoffMode) {
    this.backoffMode = backoffMode;
    return this;
  }

  /**
   * Optional. How long to wait for the first retry. Default is 0, and the maximum value is 14d.
   * @return value or {@code null} for none
   */
  public String getWait() {
    return wait;
  }

  /**
   * Optional. How long to wait for the first retry. Default is 0, and the maximum value is 14d.
   * @param wait wait or {@code null} for none
   */
  public Retry setWait(String wait) {
    this.wait = wait;
    return this;
  }

  @Override
  public Retry set(String fieldName, Object value) {
    return (Retry) super.set(fieldName, value);
  }

  @Override
  public Retry clone() {
    return (Retry) super.clone();
  }

}
