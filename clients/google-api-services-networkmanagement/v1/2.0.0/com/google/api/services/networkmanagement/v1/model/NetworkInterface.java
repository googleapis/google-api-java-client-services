/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.networkmanagement.v1.model;

/**
 * Message describing network interfaces.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Network Management API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class NetworkInterface extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The description of the interface.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String adapterDescription;

  /**
   * Output only. The IP address of the interface and subnet mask in CIDR format. Examples:
   * 192.168.1.0/24, 2001:db8::/32
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String cidr;

  /**
   * Output only. The name of the network interface. Examples: eth0, eno1
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String interfaceName;

  /**
   * Output only. The IP address of the interface.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String ipAddress;

  /**
   * Output only. The MAC address of the interface.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String macAddress;

  /**
   * Output only. Speed of the interface in millions of bits per second.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long speed;

  /**
   * Output only. The id of the VLAN.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long vlanId;

  /**
   * Output only. The description of the interface.
   * @return value or {@code null} for none
   */
  public java.lang.String getAdapterDescription() {
    return adapterDescription;
  }

  /**
   * Output only. The description of the interface.
   * @param adapterDescription adapterDescription or {@code null} for none
   */
  public NetworkInterface setAdapterDescription(java.lang.String adapterDescription) {
    this.adapterDescription = adapterDescription;
    return this;
  }

  /**
   * Output only. The IP address of the interface and subnet mask in CIDR format. Examples:
   * 192.168.1.0/24, 2001:db8::/32
   * @return value or {@code null} for none
   */
  public java.lang.String getCidr() {
    return cidr;
  }

  /**
   * Output only. The IP address of the interface and subnet mask in CIDR format. Examples:
   * 192.168.1.0/24, 2001:db8::/32
   * @param cidr cidr or {@code null} for none
   */
  public NetworkInterface setCidr(java.lang.String cidr) {
    this.cidr = cidr;
    return this;
  }

  /**
   * Output only. The name of the network interface. Examples: eth0, eno1
   * @return value or {@code null} for none
   */
  public java.lang.String getInterfaceName() {
    return interfaceName;
  }

  /**
   * Output only. The name of the network interface. Examples: eth0, eno1
   * @param interfaceName interfaceName or {@code null} for none
   */
  public NetworkInterface setInterfaceName(java.lang.String interfaceName) {
    this.interfaceName = interfaceName;
    return this;
  }

  /**
   * Output only. The IP address of the interface.
   * @return value or {@code null} for none
   */
  public java.lang.String getIpAddress() {
    return ipAddress;
  }

  /**
   * Output only. The IP address of the interface.
   * @param ipAddress ipAddress or {@code null} for none
   */
  public NetworkInterface setIpAddress(java.lang.String ipAddress) {
    this.ipAddress = ipAddress;
    return this;
  }

  /**
   * Output only. The MAC address of the interface.
   * @return value or {@code null} for none
   */
  public java.lang.String getMacAddress() {
    return macAddress;
  }

  /**
   * Output only. The MAC address of the interface.
   * @param macAddress macAddress or {@code null} for none
   */
  public NetworkInterface setMacAddress(java.lang.String macAddress) {
    this.macAddress = macAddress;
    return this;
  }

  /**
   * Output only. Speed of the interface in millions of bits per second.
   * @return value or {@code null} for none
   */
  public java.lang.Long getSpeed() {
    return speed;
  }

  /**
   * Output only. Speed of the interface in millions of bits per second.
   * @param speed speed or {@code null} for none
   */
  public NetworkInterface setSpeed(java.lang.Long speed) {
    this.speed = speed;
    return this;
  }

  /**
   * Output only. The id of the VLAN.
   * @return value or {@code null} for none
   */
  public java.lang.Long getVlanId() {
    return vlanId;
  }

  /**
   * Output only. The id of the VLAN.
   * @param vlanId vlanId or {@code null} for none
   */
  public NetworkInterface setVlanId(java.lang.Long vlanId) {
    this.vlanId = vlanId;
    return this;
  }

  @Override
  public NetworkInterface set(String fieldName, Object value) {
    return (NetworkInterface) super.set(fieldName, value);
  }

  @Override
  public NetworkInterface clone() {
    return (NetworkInterface) super.clone();
  }

}
