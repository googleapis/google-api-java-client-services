/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.file.v1beta1.model;

/**
 * File share export specification.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Filestore API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Export extends com.google.api.client.json.GenericJson {

  /**
   * The clients which may connect.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ClientList allowedClients;

  /**
   * Writes may be completed when not yet on stable storage.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean async;

  /**
   * The clients which may not connect.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ClientList deniedClients;

  /**
   * Networks on which the export should appear. If none are specified, the default is all networks
   * to which the instance is connected to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<NetworkConfig> networks;

  /**
   * Export rule for NFS
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private NfsExport nfsExport;

  /**
   * Path to export (either "" or of the form /file_share_name[/subdir]).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String path;

  /**
   * Whether the file share should be exported as read-only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean readOnly;

  /**
   * Export rule for SMB
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SmbExport smbExport;

  /**
   * The clients which may connect.
   * @return value or {@code null} for none
   */
  public ClientList getAllowedClients() {
    return allowedClients;
  }

  /**
   * The clients which may connect.
   * @param allowedClients allowedClients or {@code null} for none
   */
  public Export setAllowedClients(ClientList allowedClients) {
    this.allowedClients = allowedClients;
    return this;
  }

  /**
   * Writes may be completed when not yet on stable storage.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getAsync() {
    return async;
  }

  /**
   * Writes may be completed when not yet on stable storage.
   * @param async async or {@code null} for none
   */
  public Export setAsync(java.lang.Boolean async) {
    this.async = async;
    return this;
  }

  /**
   * The clients which may not connect.
   * @return value or {@code null} for none
   */
  public ClientList getDeniedClients() {
    return deniedClients;
  }

  /**
   * The clients which may not connect.
   * @param deniedClients deniedClients or {@code null} for none
   */
  public Export setDeniedClients(ClientList deniedClients) {
    this.deniedClients = deniedClients;
    return this;
  }

  /**
   * Networks on which the export should appear. If none are specified, the default is all networks
   * to which the instance is connected to.
   * @return value or {@code null} for none
   */
  public java.util.List<NetworkConfig> getNetworks() {
    return networks;
  }

  /**
   * Networks on which the export should appear. If none are specified, the default is all networks
   * to which the instance is connected to.
   * @param networks networks or {@code null} for none
   */
  public Export setNetworks(java.util.List<NetworkConfig> networks) {
    this.networks = networks;
    return this;
  }

  /**
   * Export rule for NFS
   * @return value or {@code null} for none
   */
  public NfsExport getNfsExport() {
    return nfsExport;
  }

  /**
   * Export rule for NFS
   * @param nfsExport nfsExport or {@code null} for none
   */
  public Export setNfsExport(NfsExport nfsExport) {
    this.nfsExport = nfsExport;
    return this;
  }

  /**
   * Path to export (either "" or of the form /file_share_name[/subdir]).
   * @return value or {@code null} for none
   */
  public java.lang.String getPath() {
    return path;
  }

  /**
   * Path to export (either "" or of the form /file_share_name[/subdir]).
   * @param path path or {@code null} for none
   */
  public Export setPath(java.lang.String path) {
    this.path = path;
    return this;
  }

  /**
   * Whether the file share should be exported as read-only.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getReadOnly() {
    return readOnly;
  }

  /**
   * Whether the file share should be exported as read-only.
   * @param readOnly readOnly or {@code null} for none
   */
  public Export setReadOnly(java.lang.Boolean readOnly) {
    this.readOnly = readOnly;
    return this;
  }

  /**
   * Export rule for SMB
   * @return value or {@code null} for none
   */
  public SmbExport getSmbExport() {
    return smbExport;
  }

  /**
   * Export rule for SMB
   * @param smbExport smbExport or {@code null} for none
   */
  public Export setSmbExport(SmbExport smbExport) {
    this.smbExport = smbExport;
    return this;
  }

  @Override
  public Export set(String fieldName, Object value) {
    return (Export) super.set(fieldName, value);
  }

  @Override
  public Export clone() {
    return (Export) super.clone();
  }

}
