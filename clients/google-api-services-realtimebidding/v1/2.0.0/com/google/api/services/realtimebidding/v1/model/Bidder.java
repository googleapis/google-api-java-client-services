/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.realtimebidding.v1.model;

/**
 * Bidder settings.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Real-time Bidding API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Bidder extends com.google.api.client.json.GenericJson {

  /**
   * Output only. An option to bypass pretargeting for private auctions and preferred deals. When
   * true, bid requests from these nonguaranteed deals will always be sent. When false, bid requests
   * will be subject to regular pretargeting configurations. Programmatic Guaranteed deals will
   * always be sent to the bidder, regardless of the value for this option. Auction packages are not
   * impacted by this value and are subject to the regular pretargeting configurations.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean bypassNonguaranteedDealsPretargeting;

  /**
   * Output only. The buyer's network ID used for cookie matching. This ID corresponds to the
   * `google_nid` parameter in the URL used in cookie match requests. Refer to
   * https://developers.google.com/authorized-buyers/rtb/cookie-guide for further information.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String cookieMatchingNetworkId;

  /**
   * Output only. The base URL used in cookie match requests. Refer to
   * https://developers.google.com/authorized-buyers/rtb/cookie-guide for further information.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String cookieMatchingUrl;

  /**
   * Output only. The billing ID for the deals pretargeting config. This billing ID is sent on the
   * bid request for guaranteed and nonguaranteed deals matched in pretargeting.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String dealsBillingId;

  /**
   * Output only. Name of the bidder resource that must follow the pattern
   * `bidders/{bidderAccountId}`, where `{bidderAccountId}` is the account ID of the bidder whose
   * information is to be received. One can get their account ID on the Authorized Buyers or Open
   * Bidding UI, or by contacting their Google account manager.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. An option to bypass pretargeting for private auctions and preferred deals. When
   * true, bid requests from these nonguaranteed deals will always be sent. When false, bid requests
   * will be subject to regular pretargeting configurations. Programmatic Guaranteed deals will
   * always be sent to the bidder, regardless of the value for this option. Auction packages are not
   * impacted by this value and are subject to the regular pretargeting configurations.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getBypassNonguaranteedDealsPretargeting() {
    return bypassNonguaranteedDealsPretargeting;
  }

  /**
   * Output only. An option to bypass pretargeting for private auctions and preferred deals. When
   * true, bid requests from these nonguaranteed deals will always be sent. When false, bid requests
   * will be subject to regular pretargeting configurations. Programmatic Guaranteed deals will
   * always be sent to the bidder, regardless of the value for this option. Auction packages are not
   * impacted by this value and are subject to the regular pretargeting configurations.
   * @param bypassNonguaranteedDealsPretargeting bypassNonguaranteedDealsPretargeting or {@code null} for none
   */
  public Bidder setBypassNonguaranteedDealsPretargeting(java.lang.Boolean bypassNonguaranteedDealsPretargeting) {
    this.bypassNonguaranteedDealsPretargeting = bypassNonguaranteedDealsPretargeting;
    return this;
  }

  /**
   * Output only. The buyer's network ID used for cookie matching. This ID corresponds to the
   * `google_nid` parameter in the URL used in cookie match requests. Refer to
   * https://developers.google.com/authorized-buyers/rtb/cookie-guide for further information.
   * @return value or {@code null} for none
   */
  public java.lang.String getCookieMatchingNetworkId() {
    return cookieMatchingNetworkId;
  }

  /**
   * Output only. The buyer's network ID used for cookie matching. This ID corresponds to the
   * `google_nid` parameter in the URL used in cookie match requests. Refer to
   * https://developers.google.com/authorized-buyers/rtb/cookie-guide for further information.
   * @param cookieMatchingNetworkId cookieMatchingNetworkId or {@code null} for none
   */
  public Bidder setCookieMatchingNetworkId(java.lang.String cookieMatchingNetworkId) {
    this.cookieMatchingNetworkId = cookieMatchingNetworkId;
    return this;
  }

  /**
   * Output only. The base URL used in cookie match requests. Refer to
   * https://developers.google.com/authorized-buyers/rtb/cookie-guide for further information.
   * @return value or {@code null} for none
   */
  public java.lang.String getCookieMatchingUrl() {
    return cookieMatchingUrl;
  }

  /**
   * Output only. The base URL used in cookie match requests. Refer to
   * https://developers.google.com/authorized-buyers/rtb/cookie-guide for further information.
   * @param cookieMatchingUrl cookieMatchingUrl or {@code null} for none
   */
  public Bidder setCookieMatchingUrl(java.lang.String cookieMatchingUrl) {
    this.cookieMatchingUrl = cookieMatchingUrl;
    return this;
  }

  /**
   * Output only. The billing ID for the deals pretargeting config. This billing ID is sent on the
   * bid request for guaranteed and nonguaranteed deals matched in pretargeting.
   * @return value or {@code null} for none
   */
  public java.lang.String getDealsBillingId() {
    return dealsBillingId;
  }

  /**
   * Output only. The billing ID for the deals pretargeting config. This billing ID is sent on the
   * bid request for guaranteed and nonguaranteed deals matched in pretargeting.
   * @param dealsBillingId dealsBillingId or {@code null} for none
   */
  public Bidder setDealsBillingId(java.lang.String dealsBillingId) {
    this.dealsBillingId = dealsBillingId;
    return this;
  }

  /**
   * Output only. Name of the bidder resource that must follow the pattern
   * `bidders/{bidderAccountId}`, where `{bidderAccountId}` is the account ID of the bidder whose
   * information is to be received. One can get their account ID on the Authorized Buyers or Open
   * Bidding UI, or by contacting their Google account manager.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. Name of the bidder resource that must follow the pattern
   * `bidders/{bidderAccountId}`, where `{bidderAccountId}` is the account ID of the bidder whose
   * information is to be received. One can get their account ID on the Authorized Buyers or Open
   * Bidding UI, or by contacting their Google account manager.
   * @param name name or {@code null} for none
   */
  public Bidder setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  @Override
  public Bidder set(String fieldName, Object value) {
    return (Bidder) super.set(fieldName, value);
  }

  @Override
  public Bidder clone() {
    return (Bidder) super.clone();
  }

}
