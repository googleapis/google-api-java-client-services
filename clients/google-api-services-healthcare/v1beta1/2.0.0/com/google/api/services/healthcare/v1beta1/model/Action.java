/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.healthcare.v1beta1.model;

/**
 * Specifies a selection of tags and an `Action` to apply to each one.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Healthcare API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Action extends com.google.api.client.json.GenericJson {

  /**
   * Inspect image and transform sensitive burnt-in text. Doesn't apply to elements nested in a
   * sequence, which revert to `Keep`. Supported
   * [tags](http://dicom.nema.org/medical/dicom/2018e/output/chtml/part06/chapter_6.html): PixelData
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ImageConfig cleanImageTag;

  /**
   * Inspect text and transform sensitive text. Configurable via TextConfig. Supported Value
   * Representations: AE, LO, LT, PN, SH, ST, UC, UT, DA, DT, AS
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private CleanTextTag cleanTextTag;

  /**
   * Delete tag.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DeleteTag deleteTag;

  /**
   * Keep tag unchanged.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private KeepTag keepTag;

  /**
   * Select all tags with the listed tag IDs, names, or Value Representations (VRs). Examples: ID:
   * "00100010" Keyword: "PatientName" VR: "PN"
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> queries;

  /**
   * Recursively apply DICOM de-id to tags nested in a sequence. Supported [Value Representation]
   * (http://dicom.nema.org/medical/dicom/2018e/output/chtml/part05/sect_6.2.html#table_6.2-1): SQ
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private RecurseTag recurseTag;

  /**
   * Replace UID with a new generated UID. Supported [Value Representation]
   * (http://dicom.nema.org/medical/dicom/2018e/output/chtml/part05/sect_6.2.html#table_6.2-1): UI
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private RegenUidTag regenUidTag;

  /**
   * Replace with empty tag.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private RemoveTag removeTag;

  /**
   * Reset tag to a placeholder value.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ResetTag resetTag;

  /**
   * Inspect image and transform sensitive burnt-in text. Doesn't apply to elements nested in a
   * sequence, which revert to `Keep`. Supported
   * [tags](http://dicom.nema.org/medical/dicom/2018e/output/chtml/part06/chapter_6.html): PixelData
   * @return value or {@code null} for none
   */
  public ImageConfig getCleanImageTag() {
    return cleanImageTag;
  }

  /**
   * Inspect image and transform sensitive burnt-in text. Doesn't apply to elements nested in a
   * sequence, which revert to `Keep`. Supported
   * [tags](http://dicom.nema.org/medical/dicom/2018e/output/chtml/part06/chapter_6.html): PixelData
   * @param cleanImageTag cleanImageTag or {@code null} for none
   */
  public Action setCleanImageTag(ImageConfig cleanImageTag) {
    this.cleanImageTag = cleanImageTag;
    return this;
  }

  /**
   * Inspect text and transform sensitive text. Configurable via TextConfig. Supported Value
   * Representations: AE, LO, LT, PN, SH, ST, UC, UT, DA, DT, AS
   * @return value or {@code null} for none
   */
  public CleanTextTag getCleanTextTag() {
    return cleanTextTag;
  }

  /**
   * Inspect text and transform sensitive text. Configurable via TextConfig. Supported Value
   * Representations: AE, LO, LT, PN, SH, ST, UC, UT, DA, DT, AS
   * @param cleanTextTag cleanTextTag or {@code null} for none
   */
  public Action setCleanTextTag(CleanTextTag cleanTextTag) {
    this.cleanTextTag = cleanTextTag;
    return this;
  }

  /**
   * Delete tag.
   * @return value or {@code null} for none
   */
  public DeleteTag getDeleteTag() {
    return deleteTag;
  }

  /**
   * Delete tag.
   * @param deleteTag deleteTag or {@code null} for none
   */
  public Action setDeleteTag(DeleteTag deleteTag) {
    this.deleteTag = deleteTag;
    return this;
  }

  /**
   * Keep tag unchanged.
   * @return value or {@code null} for none
   */
  public KeepTag getKeepTag() {
    return keepTag;
  }

  /**
   * Keep tag unchanged.
   * @param keepTag keepTag or {@code null} for none
   */
  public Action setKeepTag(KeepTag keepTag) {
    this.keepTag = keepTag;
    return this;
  }

  /**
   * Select all tags with the listed tag IDs, names, or Value Representations (VRs). Examples: ID:
   * "00100010" Keyword: "PatientName" VR: "PN"
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getQueries() {
    return queries;
  }

  /**
   * Select all tags with the listed tag IDs, names, or Value Representations (VRs). Examples: ID:
   * "00100010" Keyword: "PatientName" VR: "PN"
   * @param queries queries or {@code null} for none
   */
  public Action setQueries(java.util.List<java.lang.String> queries) {
    this.queries = queries;
    return this;
  }

  /**
   * Recursively apply DICOM de-id to tags nested in a sequence. Supported [Value Representation]
   * (http://dicom.nema.org/medical/dicom/2018e/output/chtml/part05/sect_6.2.html#table_6.2-1): SQ
   * @return value or {@code null} for none
   */
  public RecurseTag getRecurseTag() {
    return recurseTag;
  }

  /**
   * Recursively apply DICOM de-id to tags nested in a sequence. Supported [Value Representation]
   * (http://dicom.nema.org/medical/dicom/2018e/output/chtml/part05/sect_6.2.html#table_6.2-1): SQ
   * @param recurseTag recurseTag or {@code null} for none
   */
  public Action setRecurseTag(RecurseTag recurseTag) {
    this.recurseTag = recurseTag;
    return this;
  }

  /**
   * Replace UID with a new generated UID. Supported [Value Representation]
   * (http://dicom.nema.org/medical/dicom/2018e/output/chtml/part05/sect_6.2.html#table_6.2-1): UI
   * @return value or {@code null} for none
   */
  public RegenUidTag getRegenUidTag() {
    return regenUidTag;
  }

  /**
   * Replace UID with a new generated UID. Supported [Value Representation]
   * (http://dicom.nema.org/medical/dicom/2018e/output/chtml/part05/sect_6.2.html#table_6.2-1): UI
   * @param regenUidTag regenUidTag or {@code null} for none
   */
  public Action setRegenUidTag(RegenUidTag regenUidTag) {
    this.regenUidTag = regenUidTag;
    return this;
  }

  /**
   * Replace with empty tag.
   * @return value or {@code null} for none
   */
  public RemoveTag getRemoveTag() {
    return removeTag;
  }

  /**
   * Replace with empty tag.
   * @param removeTag removeTag or {@code null} for none
   */
  public Action setRemoveTag(RemoveTag removeTag) {
    this.removeTag = removeTag;
    return this;
  }

  /**
   * Reset tag to a placeholder value.
   * @return value or {@code null} for none
   */
  public ResetTag getResetTag() {
    return resetTag;
  }

  /**
   * Reset tag to a placeholder value.
   * @param resetTag resetTag or {@code null} for none
   */
  public Action setResetTag(ResetTag resetTag) {
    this.resetTag = resetTag;
    return this;
  }

  @Override
  public Action set(String fieldName, Object value) {
    return (Action) super.set(fieldName, value);
  }

  @Override
  public Action clone() {
    return (Action) super.clone();
  }

}
