/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.dialogflow.v2beta1;

/**
 * Service definition for Dialogflow (v2beta1).
 *
 * <p>
 * An end-to-end development suite for conversational interfaces (e.g., chatbots, voice-powered apps and devices).
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/dialogflow-enterprise/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link DialogflowRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Dialogflow extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.26.0-SNAPSHOT of the Dialogflow API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://dialogflow.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Dialogflow(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Dialogflow(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Dialogflow dialogflow = new Dialogflow(...);}
   *   {@code Dialogflow.Projects.List request = dialogflow.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * Retrieves the specified agent.
     *
     * Create a request for the method "projects.getAgent".
     *
     * This request holds the parameters needed by the dialogflow server.  After setting any optional
     * parameters, call the {@link GetAgent#execute()} method to invoke the remote operation.
     *
     * @param parent Required. The project that the agent to fetch is associated with.
    Format: `projects/`.
     * @return the request
     */
    public GetAgent getAgent(java.lang.String parent) throws java.io.IOException {
      GetAgent result = new GetAgent(parent);
      initialize(result);
      return result;
    }

    public class GetAgent extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Agent> {

      private static final String REST_PATH = "v2beta1/{+parent}/agent";

      private final java.util.regex.Pattern PARENT_PATTERN =
          java.util.regex.Pattern.compile("^projects/[^/]+$");

      /**
       * Retrieves the specified agent.
       *
       * Create a request for the method "projects.getAgent".
       *
       * This request holds the parameters needed by the the dialogflow server.  After setting any
       * optional parameters, call the {@link GetAgent#execute()} method to invoke the remote operation.
       * <p> {@link
       * GetAgent#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param parent Required. The project that the agent to fetch is associated with.
    Format: `projects/`.
       * @since 1.13
       */
      protected GetAgent(java.lang.String parent) {
        super(Dialogflow.this, "GET", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Agent.class);
        this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^projects/[^/]+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetAgent set$Xgafv(java.lang.String $Xgafv) {
        return (GetAgent) super.set$Xgafv($Xgafv);
      }

      @Override
      public GetAgent setAccessToken(java.lang.String accessToken) {
        return (GetAgent) super.setAccessToken(accessToken);
      }

      @Override
      public GetAgent setAlt(java.lang.String alt) {
        return (GetAgent) super.setAlt(alt);
      }

      @Override
      public GetAgent setCallback(java.lang.String callback) {
        return (GetAgent) super.setCallback(callback);
      }

      @Override
      public GetAgent setFields(java.lang.String fields) {
        return (GetAgent) super.setFields(fields);
      }

      @Override
      public GetAgent setKey(java.lang.String key) {
        return (GetAgent) super.setKey(key);
      }

      @Override
      public GetAgent setOauthToken(java.lang.String oauthToken) {
        return (GetAgent) super.setOauthToken(oauthToken);
      }

      @Override
      public GetAgent setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetAgent) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetAgent setQuotaUser(java.lang.String quotaUser) {
        return (GetAgent) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetAgent setUploadType(java.lang.String uploadType) {
        return (GetAgent) super.setUploadType(uploadType);
      }

      @Override
      public GetAgent setUploadProtocol(java.lang.String uploadProtocol) {
        return (GetAgent) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The project that the agent to fetch is associated with. Format: `projects/`.
       */
      @com.google.api.client.util.Key
      private java.lang.String parent;

      /** Required. The project that the agent to fetch is associated with. Format: `projects/`.
       */
      public java.lang.String getParent() {
        return parent;
      }

      /**
       * Required. The project that the agent to fetch is associated with. Format: `projects/`.
       */
      public GetAgent setParent(java.lang.String parent) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^projects/[^/]+$");
        }
        this.parent = parent;
        return this;
      }

      @Override
      public GetAgent set(String parameterName, Object value) {
        return (GetAgent) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the Agent collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Dialogflow dialogflow = new Dialogflow(...);}
     *   {@code Dialogflow.Agent.List request = dialogflow.agent().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Agent agent() {
      return new Agent();
    }

    /**
     * The "agent" collection of methods.
     */
    public class Agent {

      /**
       * Exports the specified agent to a ZIP file.
       *
       * Operation
       *
       * Create a request for the method "agent.export".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Export#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The project that the agent to export is associated with.
      Format: `projects/`.
       * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ExportAgentRequest}
       * @return the request
       */
      public Export export(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ExportAgentRequest content) throws java.io.IOException {
        Export result = new Export(parent, content);
        initialize(result);
        return result;
      }

      public class Export extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

        private static final String REST_PATH = "v2beta1/{+parent}/agent:export";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Exports the specified agent to a ZIP file.
         *
         * Operation
         *
         * Create a request for the method "agent.export".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Export#execute()} method to invoke the remote operation.
         * <p> {@link
         * Export#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The project that the agent to export is associated with.
      Format: `projects/`.
         * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ExportAgentRequest}
         * @since 1.13
         */
        protected Export(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ExportAgentRequest content) {
          super(Dialogflow.this, "POST", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public Export set$Xgafv(java.lang.String $Xgafv) {
          return (Export) super.set$Xgafv($Xgafv);
        }

        @Override
        public Export setAccessToken(java.lang.String accessToken) {
          return (Export) super.setAccessToken(accessToken);
        }

        @Override
        public Export setAlt(java.lang.String alt) {
          return (Export) super.setAlt(alt);
        }

        @Override
        public Export setCallback(java.lang.String callback) {
          return (Export) super.setCallback(callback);
        }

        @Override
        public Export setFields(java.lang.String fields) {
          return (Export) super.setFields(fields);
        }

        @Override
        public Export setKey(java.lang.String key) {
          return (Export) super.setKey(key);
        }

        @Override
        public Export setOauthToken(java.lang.String oauthToken) {
          return (Export) super.setOauthToken(oauthToken);
        }

        @Override
        public Export setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Export) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Export setQuotaUser(java.lang.String quotaUser) {
          return (Export) super.setQuotaUser(quotaUser);
        }

        @Override
        public Export setUploadType(java.lang.String uploadType) {
          return (Export) super.setUploadType(uploadType);
        }

        @Override
        public Export setUploadProtocol(java.lang.String uploadProtocol) {
          return (Export) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The project that the agent to export is associated with. Format: `projects/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The project that the agent to export is associated with. Format: `projects/`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The project that the agent to export is associated with. Format: `projects/`.
         */
        public Export setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Export set(String parameterName, Object value) {
          return (Export) super.set(parameterName, value);
        }
      }
      /**
       * Imports the specified agent from a ZIP file.
       *
       * Uploads new intents and entity types without deleting the existing ones. Intents and entity types
       * with the same name are replaced with the new versions from ImportAgentRequest.
       *
       * Operation
       *
       * Create a request for the method "agent.import".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link DialogflowImport#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The project that the agent to import is associated with.
      Format: `projects/`.
       * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ImportAgentRequest}
       * @return the request
       */
      public DialogflowImport dialogflowImport(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ImportAgentRequest content) throws java.io.IOException {
        DialogflowImport result = new DialogflowImport(parent, content);
        initialize(result);
        return result;
      }

      public class DialogflowImport extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

        private static final String REST_PATH = "v2beta1/{+parent}/agent:import";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Imports the specified agent from a ZIP file.
         *
         * Uploads new intents and entity types without deleting the existing ones. Intents and entity
         * types with the same name are replaced with the new versions from ImportAgentRequest.
         *
         * Operation
         *
         * Create a request for the method "agent.import".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link DialogflowImport#execute()} method to invoke the remote
         * operation. <p> {@link DialogflowImport#initialize(com.google.api.client.googleapis.services.Abs
         * tractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param parent Required. The project that the agent to import is associated with.
      Format: `projects/`.
         * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ImportAgentRequest}
         * @since 1.13
         */
        protected DialogflowImport(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ImportAgentRequest content) {
          super(Dialogflow.this, "POST", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public DialogflowImport set$Xgafv(java.lang.String $Xgafv) {
          return (DialogflowImport) super.set$Xgafv($Xgafv);
        }

        @Override
        public DialogflowImport setAccessToken(java.lang.String accessToken) {
          return (DialogflowImport) super.setAccessToken(accessToken);
        }

        @Override
        public DialogflowImport setAlt(java.lang.String alt) {
          return (DialogflowImport) super.setAlt(alt);
        }

        @Override
        public DialogflowImport setCallback(java.lang.String callback) {
          return (DialogflowImport) super.setCallback(callback);
        }

        @Override
        public DialogflowImport setFields(java.lang.String fields) {
          return (DialogflowImport) super.setFields(fields);
        }

        @Override
        public DialogflowImport setKey(java.lang.String key) {
          return (DialogflowImport) super.setKey(key);
        }

        @Override
        public DialogflowImport setOauthToken(java.lang.String oauthToken) {
          return (DialogflowImport) super.setOauthToken(oauthToken);
        }

        @Override
        public DialogflowImport setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (DialogflowImport) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public DialogflowImport setQuotaUser(java.lang.String quotaUser) {
          return (DialogflowImport) super.setQuotaUser(quotaUser);
        }

        @Override
        public DialogflowImport setUploadType(java.lang.String uploadType) {
          return (DialogflowImport) super.setUploadType(uploadType);
        }

        @Override
        public DialogflowImport setUploadProtocol(java.lang.String uploadProtocol) {
          return (DialogflowImport) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The project that the agent to import is associated with. Format: `projects/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The project that the agent to import is associated with. Format: `projects/`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The project that the agent to import is associated with. Format: `projects/`.
         */
        public DialogflowImport setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public DialogflowImport set(String parameterName, Object value) {
          return (DialogflowImport) super.set(parameterName, value);
        }
      }
      /**
       * Restores the specified agent from a ZIP file.
       *
       * Replaces the current agent version with a new one. All the intents and entity types in the older
       * version are deleted.
       *
       * Operation
       *
       * Create a request for the method "agent.restore".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Restore#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The project that the agent to restore is associated with.
      Format: `projects/`.
       * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1RestoreAgentRequest}
       * @return the request
       */
      public Restore restore(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1RestoreAgentRequest content) throws java.io.IOException {
        Restore result = new Restore(parent, content);
        initialize(result);
        return result;
      }

      public class Restore extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

        private static final String REST_PATH = "v2beta1/{+parent}/agent:restore";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Restores the specified agent from a ZIP file.
         *
         * Replaces the current agent version with a new one. All the intents and entity types in the
         * older version are deleted.
         *
         * Operation
         *
         * Create a request for the method "agent.restore".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Restore#execute()} method to invoke the remote operation.
         * <p> {@link
         * Restore#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The project that the agent to restore is associated with.
      Format: `projects/`.
         * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1RestoreAgentRequest}
         * @since 1.13
         */
        protected Restore(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1RestoreAgentRequest content) {
          super(Dialogflow.this, "POST", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public Restore set$Xgafv(java.lang.String $Xgafv) {
          return (Restore) super.set$Xgafv($Xgafv);
        }

        @Override
        public Restore setAccessToken(java.lang.String accessToken) {
          return (Restore) super.setAccessToken(accessToken);
        }

        @Override
        public Restore setAlt(java.lang.String alt) {
          return (Restore) super.setAlt(alt);
        }

        @Override
        public Restore setCallback(java.lang.String callback) {
          return (Restore) super.setCallback(callback);
        }

        @Override
        public Restore setFields(java.lang.String fields) {
          return (Restore) super.setFields(fields);
        }

        @Override
        public Restore setKey(java.lang.String key) {
          return (Restore) super.setKey(key);
        }

        @Override
        public Restore setOauthToken(java.lang.String oauthToken) {
          return (Restore) super.setOauthToken(oauthToken);
        }

        @Override
        public Restore setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Restore) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Restore setQuotaUser(java.lang.String quotaUser) {
          return (Restore) super.setQuotaUser(quotaUser);
        }

        @Override
        public Restore setUploadType(java.lang.String uploadType) {
          return (Restore) super.setUploadType(uploadType);
        }

        @Override
        public Restore setUploadProtocol(java.lang.String uploadProtocol) {
          return (Restore) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The project that the agent to restore is associated with. Format: `projects/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The project that the agent to restore is associated with. Format: `projects/`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The project that the agent to restore is associated with. Format: `projects/`.
         */
        public Restore setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Restore set(String parameterName, Object value) {
          return (Restore) super.set(parameterName, value);
        }
      }
      /**
       * Returns the list of agents.
       *
       * Since there is at most one conversational agent per project, this method is useful primarily for
       * listing all agents across projects the caller has access to. One can achieve that with a wildcard
       * project collection id "-". Refer to [List Sub-
       * Collections](https://cloud.google.com/apis/design/design_patterns#list_sub-collections).
       *
       * Create a request for the method "agent.search".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Search#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The project to list agents from.
      Format: `projects/`.
       * @return the request
       */
      public Search search(java.lang.String parent) throws java.io.IOException {
        Search result = new Search(parent);
        initialize(result);
        return result;
      }

      public class Search extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SearchAgentsResponse> {

        private static final String REST_PATH = "v2beta1/{+parent}/agent:search";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Returns the list of agents.
         *
         * Since there is at most one conversational agent per project, this method is useful primarily
         * for listing all agents across projects the caller has access to. One can achieve that with a
         * wildcard project collection id "-". Refer to [List Sub-
         * Collections](https://cloud.google.com/apis/design/design_patterns#list_sub-collections).
         *
         * Create a request for the method "agent.search".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Search#execute()} method to invoke the remote operation.
         * <p> {@link
         * Search#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The project to list agents from.
      Format: `projects/`.
         * @since 1.13
         */
        protected Search(java.lang.String parent) {
          super(Dialogflow.this, "GET", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SearchAgentsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Search set$Xgafv(java.lang.String $Xgafv) {
          return (Search) super.set$Xgafv($Xgafv);
        }

        @Override
        public Search setAccessToken(java.lang.String accessToken) {
          return (Search) super.setAccessToken(accessToken);
        }

        @Override
        public Search setAlt(java.lang.String alt) {
          return (Search) super.setAlt(alt);
        }

        @Override
        public Search setCallback(java.lang.String callback) {
          return (Search) super.setCallback(callback);
        }

        @Override
        public Search setFields(java.lang.String fields) {
          return (Search) super.setFields(fields);
        }

        @Override
        public Search setKey(java.lang.String key) {
          return (Search) super.setKey(key);
        }

        @Override
        public Search setOauthToken(java.lang.String oauthToken) {
          return (Search) super.setOauthToken(oauthToken);
        }

        @Override
        public Search setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Search) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Search setQuotaUser(java.lang.String quotaUser) {
          return (Search) super.setQuotaUser(quotaUser);
        }

        @Override
        public Search setUploadType(java.lang.String uploadType) {
          return (Search) super.setUploadType(uploadType);
        }

        @Override
        public Search setUploadProtocol(java.lang.String uploadProtocol) {
          return (Search) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The project to list agents from. Format: `projects/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The project to list agents from. Format: `projects/`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The project to list agents from. Format: `projects/`.
         */
        public Search setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. The maximum number of items to return in a single page. By default 100 and at
         * most 1000.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Optional. The maximum number of items to return in a single page. By default 100 and at
         * most 1000.
         */
        public Search setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** Optional. The next_page_token value returned from a previous list request. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional. The next_page_token value returned from a previous list request.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** Optional. The next_page_token value returned from a previous list request. */
        public Search setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public Search set(String parameterName, Object value) {
          return (Search) super.set(parameterName, value);
        }
      }
      /**
       * Trains the specified agent.
       *
       * Operation
       *
       * Create a request for the method "agent.train".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Train#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The project that the agent to train is associated with.
      Format: `projects/`.
       * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1TrainAgentRequest}
       * @return the request
       */
      public Train train(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1TrainAgentRequest content) throws java.io.IOException {
        Train result = new Train(parent, content);
        initialize(result);
        return result;
      }

      public class Train extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

        private static final String REST_PATH = "v2beta1/{+parent}/agent:train";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Trains the specified agent.
         *
         * Operation
         *
         * Create a request for the method "agent.train".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Train#execute()} method to invoke the remote operation.
         * <p> {@link
         * Train#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The project that the agent to train is associated with.
      Format: `projects/`.
         * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1TrainAgentRequest}
         * @since 1.13
         */
        protected Train(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1TrainAgentRequest content) {
          super(Dialogflow.this, "POST", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public Train set$Xgafv(java.lang.String $Xgafv) {
          return (Train) super.set$Xgafv($Xgafv);
        }

        @Override
        public Train setAccessToken(java.lang.String accessToken) {
          return (Train) super.setAccessToken(accessToken);
        }

        @Override
        public Train setAlt(java.lang.String alt) {
          return (Train) super.setAlt(alt);
        }

        @Override
        public Train setCallback(java.lang.String callback) {
          return (Train) super.setCallback(callback);
        }

        @Override
        public Train setFields(java.lang.String fields) {
          return (Train) super.setFields(fields);
        }

        @Override
        public Train setKey(java.lang.String key) {
          return (Train) super.setKey(key);
        }

        @Override
        public Train setOauthToken(java.lang.String oauthToken) {
          return (Train) super.setOauthToken(oauthToken);
        }

        @Override
        public Train setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Train) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Train setQuotaUser(java.lang.String quotaUser) {
          return (Train) super.setQuotaUser(quotaUser);
        }

        @Override
        public Train setUploadType(java.lang.String uploadType) {
          return (Train) super.setUploadType(uploadType);
        }

        @Override
        public Train setUploadProtocol(java.lang.String uploadProtocol) {
          return (Train) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The project that the agent to train is associated with. Format: `projects/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The project that the agent to train is associated with. Format: `projects/`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The project that the agent to train is associated with. Format: `projects/`.
         */
        public Train setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Train set(String parameterName, Object value) {
          return (Train) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the EntityTypes collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Dialogflow dialogflow = new Dialogflow(...);}
       *   {@code Dialogflow.EntityTypes.List request = dialogflow.entityTypes().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public EntityTypes entityTypes() {
        return new EntityTypes();
      }

      /**
       * The "entityTypes" collection of methods.
       */
      public class EntityTypes {

        /**
         * Deletes entity types in the specified agent.
         *
         * Operation
         *
         * Create a request for the method "entityTypes.batchDelete".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link BatchDelete#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the agent to delete all entities types for. Format:
        `projects//agent`.
         * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchDeleteEntityTypesRequest}
         * @return the request
         */
        public BatchDelete batchDelete(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchDeleteEntityTypesRequest content) throws java.io.IOException {
          BatchDelete result = new BatchDelete(parent, content);
          initialize(result);
          return result;
        }

        public class BatchDelete extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v2beta1/{+parent}/entityTypes:batchDelete";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent$");

          /**
           * Deletes entity types in the specified agent.
           *
           * Operation
           *
           * Create a request for the method "entityTypes.batchDelete".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link BatchDelete#execute()} method to invoke the remote
           * operation. <p> {@link
           * BatchDelete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the agent to delete all entities types for. Format:
        `projects//agent`.
           * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchDeleteEntityTypesRequest}
           * @since 1.13
           */
          protected BatchDelete(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchDeleteEntityTypesRequest content) {
            super(Dialogflow.this, "POST", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
          }

          @Override
          public BatchDelete set$Xgafv(java.lang.String $Xgafv) {
            return (BatchDelete) super.set$Xgafv($Xgafv);
          }

          @Override
          public BatchDelete setAccessToken(java.lang.String accessToken) {
            return (BatchDelete) super.setAccessToken(accessToken);
          }

          @Override
          public BatchDelete setAlt(java.lang.String alt) {
            return (BatchDelete) super.setAlt(alt);
          }

          @Override
          public BatchDelete setCallback(java.lang.String callback) {
            return (BatchDelete) super.setCallback(callback);
          }

          @Override
          public BatchDelete setFields(java.lang.String fields) {
            return (BatchDelete) super.setFields(fields);
          }

          @Override
          public BatchDelete setKey(java.lang.String key) {
            return (BatchDelete) super.setKey(key);
          }

          @Override
          public BatchDelete setOauthToken(java.lang.String oauthToken) {
            return (BatchDelete) super.setOauthToken(oauthToken);
          }

          @Override
          public BatchDelete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (BatchDelete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public BatchDelete setQuotaUser(java.lang.String quotaUser) {
            return (BatchDelete) super.setQuotaUser(quotaUser);
          }

          @Override
          public BatchDelete setUploadType(java.lang.String uploadType) {
            return (BatchDelete) super.setUploadType(uploadType);
          }

          @Override
          public BatchDelete setUploadProtocol(java.lang.String uploadProtocol) {
            return (BatchDelete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the agent to delete all entities types for. Format:
           * `projects//agent`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the agent to delete all entities types for. Format: `projects//agent`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the agent to delete all entities types for. Format:
           * `projects//agent`.
           */
          public BatchDelete setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public BatchDelete set(String parameterName, Object value) {
            return (BatchDelete) super.set(parameterName, value);
          }
        }
        /**
         * Updates/Creates multiple entity types in the specified agent.
         *
         * Operation
         *
         * Create a request for the method "entityTypes.batchUpdate".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link BatchUpdate#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the agent to update or create entity types in.
        Format: `projects//agent`.
         * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchUpdateEntityTypesRequest}
         * @return the request
         */
        public BatchUpdate batchUpdate(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchUpdateEntityTypesRequest content) throws java.io.IOException {
          BatchUpdate result = new BatchUpdate(parent, content);
          initialize(result);
          return result;
        }

        public class BatchUpdate extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v2beta1/{+parent}/entityTypes:batchUpdate";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent$");

          /**
           * Updates/Creates multiple entity types in the specified agent.
           *
           * Operation
           *
           * Create a request for the method "entityTypes.batchUpdate".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link BatchUpdate#execute()} method to invoke the remote
           * operation. <p> {@link
           * BatchUpdate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the agent to update or create entity types in.
        Format: `projects//agent`.
           * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchUpdateEntityTypesRequest}
           * @since 1.13
           */
          protected BatchUpdate(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchUpdateEntityTypesRequest content) {
            super(Dialogflow.this, "POST", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
          }

          @Override
          public BatchUpdate set$Xgafv(java.lang.String $Xgafv) {
            return (BatchUpdate) super.set$Xgafv($Xgafv);
          }

          @Override
          public BatchUpdate setAccessToken(java.lang.String accessToken) {
            return (BatchUpdate) super.setAccessToken(accessToken);
          }

          @Override
          public BatchUpdate setAlt(java.lang.String alt) {
            return (BatchUpdate) super.setAlt(alt);
          }

          @Override
          public BatchUpdate setCallback(java.lang.String callback) {
            return (BatchUpdate) super.setCallback(callback);
          }

          @Override
          public BatchUpdate setFields(java.lang.String fields) {
            return (BatchUpdate) super.setFields(fields);
          }

          @Override
          public BatchUpdate setKey(java.lang.String key) {
            return (BatchUpdate) super.setKey(key);
          }

          @Override
          public BatchUpdate setOauthToken(java.lang.String oauthToken) {
            return (BatchUpdate) super.setOauthToken(oauthToken);
          }

          @Override
          public BatchUpdate setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (BatchUpdate) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public BatchUpdate setQuotaUser(java.lang.String quotaUser) {
            return (BatchUpdate) super.setQuotaUser(quotaUser);
          }

          @Override
          public BatchUpdate setUploadType(java.lang.String uploadType) {
            return (BatchUpdate) super.setUploadType(uploadType);
          }

          @Override
          public BatchUpdate setUploadProtocol(java.lang.String uploadProtocol) {
            return (BatchUpdate) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the agent to update or create entity types in. Format:
           * `projects//agent`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the agent to update or create entity types in. Format: `projects//agent`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the agent to update or create entity types in. Format:
           * `projects//agent`.
           */
          public BatchUpdate setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public BatchUpdate set(String parameterName, Object value) {
            return (BatchUpdate) super.set(parameterName, value);
          }
        }
        /**
         * Creates an entity type in the specified agent.
         *
         * Create a request for the method "entityTypes.create".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The agent to create a entity type for.
        Format: `projects//agent`.
         * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EntityType}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EntityType content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EntityType> {

          private static final String REST_PATH = "v2beta1/{+parent}/entityTypes";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent$");

          /**
           * Creates an entity type in the specified agent.
           *
           * Create a request for the method "entityTypes.create".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The agent to create a entity type for.
        Format: `projects//agent`.
           * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EntityType}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EntityType content) {
            super(Dialogflow.this, "POST", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EntityType.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The agent to create a entity type for. Format: `projects//agent`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The agent to create a entity type for. Format: `projects//agent`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The agent to create a entity type for. Format: `projects//agent`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. The language of entity synonyms defined in `entity_type`. If not specified,
           * the agent's default language is used. [More than a dozen
           * languages](https://dialogflow.com/docs/reference/language) are supported. Note:
           * languages must be enabled in the agent, before they can be used.
           */
          @com.google.api.client.util.Key
          private java.lang.String languageCode;

          /** Optional. The language of entity synonyms defined in `entity_type`. If not specified, the agent's
         default language is used. [More than a dozen
         languages](https://dialogflow.com/docs/reference/language) are supported. Note: languages must be
         enabled in the agent, before they can be used.
           */
          public java.lang.String getLanguageCode() {
            return languageCode;
          }

          /**
           * Optional. The language of entity synonyms defined in `entity_type`. If not specified,
           * the agent's default language is used. [More than a dozen
           * languages](https://dialogflow.com/docs/reference/language) are supported. Note:
           * languages must be enabled in the agent, before they can be used.
           */
          public Create setLanguageCode(java.lang.String languageCode) {
            this.languageCode = languageCode;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes the specified entity type.
         *
         * Create a request for the method "entityTypes.delete".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the entity type to delete.
        Format: `projects//agent/entityTypes/`.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v2beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent/entityTypes/[^/]+$");

          /**
           * Deletes the specified entity type.
           *
           * Create a request for the method "entityTypes.delete".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the entity type to delete.
        Format: `projects//agent/entityTypes/`.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/entityTypes/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the entity type to delete. Format:
           * `projects//agent/entityTypes/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the entity type to delete. Format: `projects//agent/entityTypes/`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the entity type to delete. Format:
           * `projects//agent/entityTypes/`.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/entityTypes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Retrieves the specified entity type.
         *
         * Create a request for the method "entityTypes.get".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the entity type.
        Format: `projects//agent/entityTypes/`.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EntityType> {

          private static final String REST_PATH = "v2beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent/entityTypes/[^/]+$");

          /**
           * Retrieves the specified entity type.
           *
           * Create a request for the method "entityTypes.get".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the entity type.
        Format: `projects//agent/entityTypes/`.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Dialogflow.this, "GET", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EntityType.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/entityTypes/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the entity type. Format: `projects//agent/entityTypes/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the entity type. Format: `projects//agent/entityTypes/`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the entity type. Format: `projects//agent/entityTypes/`.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/entityTypes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. The language to retrieve entity synonyms for. If not specified, the agent's
           * default language is used. [More than a dozen
           * languages](https://dialogflow.com/docs/reference/language) are supported. Note:
           * languages must be enabled in the agent, before they can be used.
           */
          @com.google.api.client.util.Key
          private java.lang.String languageCode;

          /** Optional. The language to retrieve entity synonyms for. If not specified, the agent's default
         language is used. [More than a dozen languages](https://dialogflow.com/docs/reference/language) are
         supported. Note: languages must be enabled in the agent, before they can be used.
           */
          public java.lang.String getLanguageCode() {
            return languageCode;
          }

          /**
           * Optional. The language to retrieve entity synonyms for. If not specified, the agent's
           * default language is used. [More than a dozen
           * languages](https://dialogflow.com/docs/reference/language) are supported. Note:
           * languages must be enabled in the agent, before they can be used.
           */
          public Get setLanguageCode(java.lang.String languageCode) {
            this.languageCode = languageCode;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Returns the list of all entity types in the specified agent.
         *
         * Create a request for the method "entityTypes.list".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The agent to list all entity types from.
        Format: `projects//agent`.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListEntityTypesResponse> {

          private static final String REST_PATH = "v2beta1/{+parent}/entityTypes";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent$");

          /**
           * Returns the list of all entity types in the specified agent.
           *
           * Create a request for the method "entityTypes.list".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The agent to list all entity types from.
        Format: `projects//agent`.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Dialogflow.this, "GET", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListEntityTypesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The agent to list all entity types from. Format: `projects//agent`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The agent to list all entity types from. Format: `projects//agent`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The agent to list all entity types from. Format: `projects//agent`.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. The language to list entity synonyms for. If not specified, the agent's
           * default language is used. [More than a dozen
           * languages](https://dialogflow.com/docs/reference/language) are supported. Note:
           * languages must be enabled in the agent, before they can be used.
           */
          @com.google.api.client.util.Key
          private java.lang.String languageCode;

          /** Optional. The language to list entity synonyms for. If not specified, the agent's default language
         is used. [More than a dozen languages](https://dialogflow.com/docs/reference/language) are
         supported. Note: languages must be enabled in the agent, before they can be used.
           */
          public java.lang.String getLanguageCode() {
            return languageCode;
          }

          /**
           * Optional. The language to list entity synonyms for. If not specified, the agent's
           * default language is used. [More than a dozen
           * languages](https://dialogflow.com/docs/reference/language) are supported. Note:
           * languages must be enabled in the agent, before they can be used.
           */
          public List setLanguageCode(java.lang.String languageCode) {
            this.languageCode = languageCode;
            return this;
          }

          /**
           * Optional. The maximum number of items to return in a single page. By default 100 and at
           * most 1000.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of items to return in a single page. By default 100 and at
           * most 1000.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** Optional. The next_page_token value returned from a previous list request. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. The next_page_token value returned from a previous list request.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** Optional. The next_page_token value returned from a previous list request. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates the specified entity type.
         *
         * Create a request for the method "entityTypes.patch".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Required for all methods except `create` (`create` populates the name
        automatically.
        The unique
         *        identifier of the entity type. Format:
        `projects//agent/entityTypes/`.
         * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EntityType}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EntityType content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EntityType> {

          private static final String REST_PATH = "v2beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent/entityTypes/[^/]+$");

          /**
           * Updates the specified entity type.
           *
           * Create a request for the method "entityTypes.patch".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required for all methods except `create` (`create` populates the name
        automatically.
        The unique
         *        identifier of the entity type. Format:
        `projects//agent/entityTypes/`.
           * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EntityType}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EntityType content) {
            super(Dialogflow.this, "PATCH", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EntityType.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/entityTypes/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required for all methods except `create` (`create` populates the name automatically.
           * The unique identifier of the entity type. Format: `projects//agent/entityTypes/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required for all methods except `create` (`create` populates the name automatically. The unique
         identifier of the entity type. Format: `projects//agent/entityTypes/`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required for all methods except `create` (`create` populates the name automatically.
           * The unique identifier of the entity type. Format: `projects//agent/entityTypes/`.
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/entityTypes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. The language of entity synonyms defined in `entity_type`. If not specified,
           * the agent's default language is used. [More than a dozen
           * languages](https://dialogflow.com/docs/reference/language) are supported. Note:
           * languages must be enabled in the agent, before they can be used.
           */
          @com.google.api.client.util.Key
          private java.lang.String languageCode;

          /** Optional. The language of entity synonyms defined in `entity_type`. If not specified, the agent's
         default language is used. [More than a dozen
         languages](https://dialogflow.com/docs/reference/language) are supported. Note: languages must be
         enabled in the agent, before they can be used.
           */
          public java.lang.String getLanguageCode() {
            return languageCode;
          }

          /**
           * Optional. The language of entity synonyms defined in `entity_type`. If not specified,
           * the agent's default language is used. [More than a dozen
           * languages](https://dialogflow.com/docs/reference/language) are supported. Note:
           * languages must be enabled in the agent, before they can be used.
           */
          public Patch setLanguageCode(java.lang.String languageCode) {
            this.languageCode = languageCode;
            return this;
          }

          /** Optional. The mask to control which fields get updated. */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Optional. The mask to control which fields get updated.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /** Optional. The mask to control which fields get updated. */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Entities collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Dialogflow dialogflow = new Dialogflow(...);}
         *   {@code Dialogflow.Entities.List request = dialogflow.entities().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Entities entities() {
          return new Entities();
        }

        /**
         * The "entities" collection of methods.
         */
        public class Entities {

          /**
           * Creates multiple new entities in the specified entity type.
           *
           * Operation
           *
           * Create a request for the method "entities.batchCreate".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link BatchCreate#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The name of the entity type to create entities in. Format:
          `projects//agent/entityTypes/`.
           * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchCreateEntitiesRequest}
           * @return the request
           */
          public BatchCreate batchCreate(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchCreateEntitiesRequest content) throws java.io.IOException {
            BatchCreate result = new BatchCreate(parent, content);
            initialize(result);
            return result;
          }

          public class BatchCreate extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v2beta1/{+parent}/entities:batchCreate";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/agent/entityTypes/[^/]+$");

            /**
             * Creates multiple new entities in the specified entity type.
             *
             * Operation
             *
             * Create a request for the method "entities.batchCreate".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link BatchCreate#execute()} method to invoke the remote
             * operation. <p> {@link
             * BatchCreate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The name of the entity type to create entities in. Format:
          `projects//agent/entityTypes/`.
             * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchCreateEntitiesRequest}
             * @since 1.13
             */
            protected BatchCreate(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchCreateEntitiesRequest content) {
              super(Dialogflow.this, "POST", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/agent/entityTypes/[^/]+$");
              }
            }

            @Override
            public BatchCreate set$Xgafv(java.lang.String $Xgafv) {
              return (BatchCreate) super.set$Xgafv($Xgafv);
            }

            @Override
            public BatchCreate setAccessToken(java.lang.String accessToken) {
              return (BatchCreate) super.setAccessToken(accessToken);
            }

            @Override
            public BatchCreate setAlt(java.lang.String alt) {
              return (BatchCreate) super.setAlt(alt);
            }

            @Override
            public BatchCreate setCallback(java.lang.String callback) {
              return (BatchCreate) super.setCallback(callback);
            }

            @Override
            public BatchCreate setFields(java.lang.String fields) {
              return (BatchCreate) super.setFields(fields);
            }

            @Override
            public BatchCreate setKey(java.lang.String key) {
              return (BatchCreate) super.setKey(key);
            }

            @Override
            public BatchCreate setOauthToken(java.lang.String oauthToken) {
              return (BatchCreate) super.setOauthToken(oauthToken);
            }

            @Override
            public BatchCreate setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (BatchCreate) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public BatchCreate setQuotaUser(java.lang.String quotaUser) {
              return (BatchCreate) super.setQuotaUser(quotaUser);
            }

            @Override
            public BatchCreate setUploadType(java.lang.String uploadType) {
              return (BatchCreate) super.setUploadType(uploadType);
            }

            @Override
            public BatchCreate setUploadProtocol(java.lang.String uploadProtocol) {
              return (BatchCreate) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the entity type to create entities in. Format:
             * `projects//agent/entityTypes/`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The name of the entity type to create entities in. Format:
           `projects//agent/entityTypes/`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The name of the entity type to create entities in. Format:
             * `projects//agent/entityTypes/`.
             */
            public BatchCreate setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/agent/entityTypes/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public BatchCreate set(String parameterName, Object value) {
              return (BatchCreate) super.set(parameterName, value);
            }
          }
          /**
           * Deletes entities in the specified entity type.
           *
           * Operation
           *
           * Create a request for the method "entities.batchDelete".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link BatchDelete#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The name of the entity type to delete entries for. Format:
          `projects//agent/entityTypes/`.
           * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchDeleteEntitiesRequest}
           * @return the request
           */
          public BatchDelete batchDelete(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchDeleteEntitiesRequest content) throws java.io.IOException {
            BatchDelete result = new BatchDelete(parent, content);
            initialize(result);
            return result;
          }

          public class BatchDelete extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v2beta1/{+parent}/entities:batchDelete";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/agent/entityTypes/[^/]+$");

            /**
             * Deletes entities in the specified entity type.
             *
             * Operation
             *
             * Create a request for the method "entities.batchDelete".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link BatchDelete#execute()} method to invoke the remote
             * operation. <p> {@link
             * BatchDelete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The name of the entity type to delete entries for. Format:
          `projects//agent/entityTypes/`.
             * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchDeleteEntitiesRequest}
             * @since 1.13
             */
            protected BatchDelete(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchDeleteEntitiesRequest content) {
              super(Dialogflow.this, "POST", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/agent/entityTypes/[^/]+$");
              }
            }

            @Override
            public BatchDelete set$Xgafv(java.lang.String $Xgafv) {
              return (BatchDelete) super.set$Xgafv($Xgafv);
            }

            @Override
            public BatchDelete setAccessToken(java.lang.String accessToken) {
              return (BatchDelete) super.setAccessToken(accessToken);
            }

            @Override
            public BatchDelete setAlt(java.lang.String alt) {
              return (BatchDelete) super.setAlt(alt);
            }

            @Override
            public BatchDelete setCallback(java.lang.String callback) {
              return (BatchDelete) super.setCallback(callback);
            }

            @Override
            public BatchDelete setFields(java.lang.String fields) {
              return (BatchDelete) super.setFields(fields);
            }

            @Override
            public BatchDelete setKey(java.lang.String key) {
              return (BatchDelete) super.setKey(key);
            }

            @Override
            public BatchDelete setOauthToken(java.lang.String oauthToken) {
              return (BatchDelete) super.setOauthToken(oauthToken);
            }

            @Override
            public BatchDelete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (BatchDelete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public BatchDelete setQuotaUser(java.lang.String quotaUser) {
              return (BatchDelete) super.setQuotaUser(quotaUser);
            }

            @Override
            public BatchDelete setUploadType(java.lang.String uploadType) {
              return (BatchDelete) super.setUploadType(uploadType);
            }

            @Override
            public BatchDelete setUploadProtocol(java.lang.String uploadProtocol) {
              return (BatchDelete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the entity type to delete entries for. Format:
             * `projects//agent/entityTypes/`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The name of the entity type to delete entries for. Format:
           `projects//agent/entityTypes/`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The name of the entity type to delete entries for. Format:
             * `projects//agent/entityTypes/`.
             */
            public BatchDelete setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/agent/entityTypes/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public BatchDelete set(String parameterName, Object value) {
              return (BatchDelete) super.set(parameterName, value);
            }
          }
          /**
           * Updates or creates multiple entities in the specified entity type. This method does not affect
           * entities in the entity type that aren't explicitly specified in the request.
           *
           * Operation
           *
           * Create a request for the method "entities.batchUpdate".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link BatchUpdate#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The name of the entity type to update or create entities in.
          Format:
           *        `projects//agent/entityTypes/`.
           * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchUpdateEntitiesRequest}
           * @return the request
           */
          public BatchUpdate batchUpdate(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchUpdateEntitiesRequest content) throws java.io.IOException {
            BatchUpdate result = new BatchUpdate(parent, content);
            initialize(result);
            return result;
          }

          public class BatchUpdate extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v2beta1/{+parent}/entities:batchUpdate";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/agent/entityTypes/[^/]+$");

            /**
             * Updates or creates multiple entities in the specified entity type. This method does not affect
             * entities in the entity type that aren't explicitly specified in the request.
             *
             * Operation
             *
             * Create a request for the method "entities.batchUpdate".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link BatchUpdate#execute()} method to invoke the remote
             * operation. <p> {@link
             * BatchUpdate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The name of the entity type to update or create entities in.
          Format:
           *        `projects//agent/entityTypes/`.
             * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchUpdateEntitiesRequest}
             * @since 1.13
             */
            protected BatchUpdate(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchUpdateEntitiesRequest content) {
              super(Dialogflow.this, "POST", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/agent/entityTypes/[^/]+$");
              }
            }

            @Override
            public BatchUpdate set$Xgafv(java.lang.String $Xgafv) {
              return (BatchUpdate) super.set$Xgafv($Xgafv);
            }

            @Override
            public BatchUpdate setAccessToken(java.lang.String accessToken) {
              return (BatchUpdate) super.setAccessToken(accessToken);
            }

            @Override
            public BatchUpdate setAlt(java.lang.String alt) {
              return (BatchUpdate) super.setAlt(alt);
            }

            @Override
            public BatchUpdate setCallback(java.lang.String callback) {
              return (BatchUpdate) super.setCallback(callback);
            }

            @Override
            public BatchUpdate setFields(java.lang.String fields) {
              return (BatchUpdate) super.setFields(fields);
            }

            @Override
            public BatchUpdate setKey(java.lang.String key) {
              return (BatchUpdate) super.setKey(key);
            }

            @Override
            public BatchUpdate setOauthToken(java.lang.String oauthToken) {
              return (BatchUpdate) super.setOauthToken(oauthToken);
            }

            @Override
            public BatchUpdate setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (BatchUpdate) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public BatchUpdate setQuotaUser(java.lang.String quotaUser) {
              return (BatchUpdate) super.setQuotaUser(quotaUser);
            }

            @Override
            public BatchUpdate setUploadType(java.lang.String uploadType) {
              return (BatchUpdate) super.setUploadType(uploadType);
            }

            @Override
            public BatchUpdate setUploadProtocol(java.lang.String uploadProtocol) {
              return (BatchUpdate) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the entity type to update or create entities in. Format:
             * `projects//agent/entityTypes/`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The name of the entity type to update or create entities in. Format:
           `projects//agent/entityTypes/`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The name of the entity type to update or create entities in. Format:
             * `projects//agent/entityTypes/`.
             */
            public BatchUpdate setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/agent/entityTypes/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public BatchUpdate set(String parameterName, Object value) {
              return (BatchUpdate) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the Environments collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Dialogflow dialogflow = new Dialogflow(...);}
       *   {@code Dialogflow.Environments.List request = dialogflow.environments().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Environments environments() {
        return new Environments();
      }

      /**
       * The "environments" collection of methods.
       */
      public class Environments {

        /**
         * An accessor for creating requests from the Users collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Dialogflow dialogflow = new Dialogflow(...);}
         *   {@code Dialogflow.Users.List request = dialogflow.users().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Users users() {
          return new Users();
        }

        /**
         * The "users" collection of methods.
         */
        public class Users {

          /**
           * An accessor for creating requests from the Sessions collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Dialogflow dialogflow = new Dialogflow(...);}
           *   {@code Dialogflow.Sessions.List request = dialogflow.sessions().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Sessions sessions() {
            return new Sessions();
          }

          /**
           * The "sessions" collection of methods.
           */
          public class Sessions {

            /**
             * Deletes all active contexts in the specified session.
             *
             * Create a request for the method "sessions.deleteContexts".
             *
             * This request holds the parameters needed by the dialogflow server.  After setting any optional
             * parameters, call the {@link DeleteContexts#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The name of the session to delete all contexts from. Format:
            `projects//agent/sessions/`
             *        or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified
             *        we assume default 'draft'
            environment. If `User ID` is not specified, we assume default
             *        '-' user.
             * @return the request
             */
            public DeleteContexts deleteContexts(java.lang.String parent) throws java.io.IOException {
              DeleteContexts result = new DeleteContexts(parent);
              initialize(result);
              return result;
            }

            public class DeleteContexts extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleProtobufEmpty> {

              private static final String REST_PATH = "v2beta1/{+parent}/contexts";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");

              /**
               * Deletes all active contexts in the specified session.
               *
               * Create a request for the method "sessions.deleteContexts".
               *
               * This request holds the parameters needed by the the dialogflow server.  After setting any
               * optional parameters, call the {@link DeleteContexts#execute()} method to invoke the remote
               * operation. <p> {@link DeleteContexts#initialize(com.google.api.client.googleapis.services.Abstr
               * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
               * the constructor. </p>
               *
               * @param parent Required. The name of the session to delete all contexts from. Format:
            `projects//agent/sessions/`
             *        or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified
             *        we assume default 'draft'
            environment. If `User ID` is not specified, we assume default
             *        '-' user.
               * @since 1.13
               */
              protected DeleteContexts(java.lang.String parent) {
                super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleProtobufEmpty.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");
                }
              }

              @Override
              public DeleteContexts set$Xgafv(java.lang.String $Xgafv) {
                return (DeleteContexts) super.set$Xgafv($Xgafv);
              }

              @Override
              public DeleteContexts setAccessToken(java.lang.String accessToken) {
                return (DeleteContexts) super.setAccessToken(accessToken);
              }

              @Override
              public DeleteContexts setAlt(java.lang.String alt) {
                return (DeleteContexts) super.setAlt(alt);
              }

              @Override
              public DeleteContexts setCallback(java.lang.String callback) {
                return (DeleteContexts) super.setCallback(callback);
              }

              @Override
              public DeleteContexts setFields(java.lang.String fields) {
                return (DeleteContexts) super.setFields(fields);
              }

              @Override
              public DeleteContexts setKey(java.lang.String key) {
                return (DeleteContexts) super.setKey(key);
              }

              @Override
              public DeleteContexts setOauthToken(java.lang.String oauthToken) {
                return (DeleteContexts) super.setOauthToken(oauthToken);
              }

              @Override
              public DeleteContexts setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (DeleteContexts) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public DeleteContexts setQuotaUser(java.lang.String quotaUser) {
                return (DeleteContexts) super.setQuotaUser(quotaUser);
              }

              @Override
              public DeleteContexts setUploadType(java.lang.String uploadType) {
                return (DeleteContexts) super.setUploadType(uploadType);
              }

              @Override
              public DeleteContexts setUploadProtocol(java.lang.String uploadProtocol) {
                return (DeleteContexts) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the session to delete all contexts from. Format:
               * `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If
               * `Environment ID` is not specified we assume default 'draft' environment. If `User
               * ID` is not specified, we assume default '-' user.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The name of the session to delete all contexts from. Format: `projects//agent/sessions/`
             or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified we assume
             default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The name of the session to delete all contexts from. Format:
               * `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If
               * `Environment ID` is not specified we assume default 'draft' environment. If `User
               * ID` is not specified, we assume default '-' user.
               */
              public DeleteContexts setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public DeleteContexts set(String parameterName, Object value) {
                return (DeleteContexts) super.set(parameterName, value);
              }
            }
            /**
             * Processes a natural language query and returns structured, actionable data as a result. This
             * method is not idempotent, because it may cause contexts and session entity types to be updated,
             * which in turn might affect results of future queries.
             *
             * Create a request for the method "sessions.detectIntent".
             *
             * This request holds the parameters needed by the dialogflow server.  After setting any optional
             * parameters, call the {@link DetectIntent#execute()} method to invoke the remote operation.
             *
             * @param session Required. The name of the session this query is sent to. Format:
            `projects//agent/sessions/`, or
             *        `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we
             *        assume
            default 'draft' environment. If `User ID` is not specified, we are using
            "-". It’s
             *        up to the API caller to choose an appropriate `Session ID` and
            `User Id`. They can be a
             *        random numbers or some type of user and session
            identifiers (preferably hashed). The
             *        length of the `Session ID` and
            `User ID` must not exceed 36 characters.
             * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1DetectIntentRequest}
             * @return the request
             */
            public DetectIntent detectIntent(java.lang.String session, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1DetectIntentRequest content) throws java.io.IOException {
              DetectIntent result = new DetectIntent(session, content);
              initialize(result);
              return result;
            }

            public class DetectIntent extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1DetectIntentResponse> {

              private static final String REST_PATH = "v2beta1/{+session}:detectIntent";

              private final java.util.regex.Pattern SESSION_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");

              /**
               * Processes a natural language query and returns structured, actionable data as a result. This
               * method is not idempotent, because it may cause contexts and session entity types to be updated,
               * which in turn might affect results of future queries.
               *
               * Create a request for the method "sessions.detectIntent".
               *
               * This request holds the parameters needed by the the dialogflow server.  After setting any
               * optional parameters, call the {@link DetectIntent#execute()} method to invoke the remote
               * operation. <p> {@link
               * DetectIntent#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param session Required. The name of the session this query is sent to. Format:
            `projects//agent/sessions/`, or
             *        `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we
             *        assume
            default 'draft' environment. If `User ID` is not specified, we are using
            "-". It’s
             *        up to the API caller to choose an appropriate `Session ID` and
            `User Id`. They can be a
             *        random numbers or some type of user and session
            identifiers (preferably hashed). The
             *        length of the `Session ID` and
            `User ID` must not exceed 36 characters.
               * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1DetectIntentRequest}
               * @since 1.13
               */
              protected DetectIntent(java.lang.String session, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1DetectIntentRequest content) {
                super(Dialogflow.this, "POST", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1DetectIntentResponse.class);
                this.session = com.google.api.client.util.Preconditions.checkNotNull(session, "Required parameter session must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(SESSION_PATTERN.matcher(session).matches(),
                      "Parameter session must conform to the pattern " +
                      "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");
                }
              }

              @Override
              public DetectIntent set$Xgafv(java.lang.String $Xgafv) {
                return (DetectIntent) super.set$Xgafv($Xgafv);
              }

              @Override
              public DetectIntent setAccessToken(java.lang.String accessToken) {
                return (DetectIntent) super.setAccessToken(accessToken);
              }

              @Override
              public DetectIntent setAlt(java.lang.String alt) {
                return (DetectIntent) super.setAlt(alt);
              }

              @Override
              public DetectIntent setCallback(java.lang.String callback) {
                return (DetectIntent) super.setCallback(callback);
              }

              @Override
              public DetectIntent setFields(java.lang.String fields) {
                return (DetectIntent) super.setFields(fields);
              }

              @Override
              public DetectIntent setKey(java.lang.String key) {
                return (DetectIntent) super.setKey(key);
              }

              @Override
              public DetectIntent setOauthToken(java.lang.String oauthToken) {
                return (DetectIntent) super.setOauthToken(oauthToken);
              }

              @Override
              public DetectIntent setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (DetectIntent) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public DetectIntent setQuotaUser(java.lang.String quotaUser) {
                return (DetectIntent) super.setQuotaUser(quotaUser);
              }

              @Override
              public DetectIntent setUploadType(java.lang.String uploadType) {
                return (DetectIntent) super.setUploadType(uploadType);
              }

              @Override
              public DetectIntent setUploadProtocol(java.lang.String uploadProtocol) {
                return (DetectIntent) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the session this query is sent to. Format:
               * `projects//agent/sessions/`, or `projects//agent/environments//users//sessions/`.
               * If `Environment ID` is not specified, we assume default 'draft' environment. If
               * `User ID` is not specified, we are using "-". It’s up to the API caller to choose
               * an appropriate `Session ID` and `User Id`. They can be a random numbers or some
               * type of user and session identifiers (preferably hashed). The length of the
               * `Session ID` and `User ID` must not exceed 36 characters.
               */
              @com.google.api.client.util.Key
              private java.lang.String session;

              /** Required. The name of the session this query is sent to. Format: `projects//agent/sessions/`, or
             `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume
             default 'draft' environment. If `User ID` is not specified, we are using "-". It’s up to the API
             caller to choose an appropriate `Session ID` and `User Id`. They can be a random numbers or some
             type of user and session identifiers (preferably hashed). The length of the `Session ID` and `User
             ID` must not exceed 36 characters.
               */
              public java.lang.String getSession() {
                return session;
              }

              /**
               * Required. The name of the session this query is sent to. Format:
               * `projects//agent/sessions/`, or `projects//agent/environments//users//sessions/`.
               * If `Environment ID` is not specified, we assume default 'draft' environment. If
               * `User ID` is not specified, we are using "-". It’s up to the API caller to choose
               * an appropriate `Session ID` and `User Id`. They can be a random numbers or some
               * type of user and session identifiers (preferably hashed). The length of the
               * `Session ID` and `User ID` must not exceed 36 characters.
               */
              public DetectIntent setSession(java.lang.String session) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(SESSION_PATTERN.matcher(session).matches(),
                      "Parameter session must conform to the pattern " +
                      "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");
                }
                this.session = session;
                return this;
              }

              @Override
              public DetectIntent set(String parameterName, Object value) {
                return (DetectIntent) super.set(parameterName, value);
              }
            }

            /**
             * An accessor for creating requests from the Contexts collection.
             *
             * <p>The typical use is:</p>
             * <pre>
             *   {@code Dialogflow dialogflow = new Dialogflow(...);}
             *   {@code Dialogflow.Contexts.List request = dialogflow.contexts().list(parameters ...)}
             * </pre>
             *
             * @return the resource collection
             */
            public Contexts contexts() {
              return new Contexts();
            }

            /**
             * The "contexts" collection of methods.
             */
            public class Contexts {

              /**
               * Creates a context.
               *
               * If the specified context already exists, overrides the context.
               *
               * Create a request for the method "contexts.create".
               *
               * This request holds the parameters needed by the dialogflow server.  After setting any optional
               * parameters, call the {@link Create#execute()} method to invoke the remote operation.
               *
               * @param parent Required. The session to create a context for.
              Format: `projects//agent/sessions/` or
               *        `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we
               *        assume
              default 'draft' environment. If `User ID` is not specified, we assume
              default '-'
               *        user.
               * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context}
               * @return the request
               */
              public Create create(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context content) throws java.io.IOException {
                Create result = new Create(parent, content);
                initialize(result);
                return result;
              }

              public class Create extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context> {

                private static final String REST_PATH = "v2beta1/{+parent}/contexts";

                private final java.util.regex.Pattern PARENT_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");

                /**
                 * Creates a context.
                 *
                 * If the specified context already exists, overrides the context.
                 *
                 * Create a request for the method "contexts.create".
                 *
                 * This request holds the parameters needed by the the dialogflow server.  After setting any
                 * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
                 * <p> {@link
                 * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                 * be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param parent Required. The session to create a context for.
              Format: `projects//agent/sessions/` or
               *        `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we
               *        assume
              default 'draft' environment. If `User ID` is not specified, we assume
              default '-'
               *        user.
                 * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context}
                 * @since 1.13
                 */
                protected Create(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context content) {
                  super(Dialogflow.this, "POST", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context.class);
                  this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");
                  }
                }

                @Override
                public Create set$Xgafv(java.lang.String $Xgafv) {
                  return (Create) super.set$Xgafv($Xgafv);
                }

                @Override
                public Create setAccessToken(java.lang.String accessToken) {
                  return (Create) super.setAccessToken(accessToken);
                }

                @Override
                public Create setAlt(java.lang.String alt) {
                  return (Create) super.setAlt(alt);
                }

                @Override
                public Create setCallback(java.lang.String callback) {
                  return (Create) super.setCallback(callback);
                }

                @Override
                public Create setFields(java.lang.String fields) {
                  return (Create) super.setFields(fields);
                }

                @Override
                public Create setKey(java.lang.String key) {
                  return (Create) super.setKey(key);
                }

                @Override
                public Create setOauthToken(java.lang.String oauthToken) {
                  return (Create) super.setOauthToken(oauthToken);
                }

                @Override
                public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Create) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Create setQuotaUser(java.lang.String quotaUser) {
                  return (Create) super.setQuotaUser(quotaUser);
                }

                @Override
                public Create setUploadType(java.lang.String uploadType) {
                  return (Create) super.setUploadType(uploadType);
                }

                @Override
                public Create setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Create) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The session to create a context for. Format:
                 * `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`.
                 * If `Environment ID` is not specified, we assume default 'draft' environment. If
                 * `User ID` is not specified, we assume default '-' user.
                 */
                @com.google.api.client.util.Key
                private java.lang.String parent;

                /** Required. The session to create a context for. Format: `projects//agent/sessions/` or
               `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume
               default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                public java.lang.String getParent() {
                  return parent;
                }

                /**
                 * Required. The session to create a context for. Format:
                 * `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`.
                 * If `Environment ID` is not specified, we assume default 'draft' environment. If
                 * `User ID` is not specified, we assume default '-' user.
                 */
                public Create setParent(java.lang.String parent) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");
                  }
                  this.parent = parent;
                  return this;
                }

                @Override
                public Create set(String parameterName, Object value) {
                  return (Create) super.set(parameterName, value);
                }
              }
              /**
               * Deletes the specified context.
               *
               * Create a request for the method "contexts.delete".
               *
               * This request holds the parameters needed by the dialogflow server.  After setting any optional
               * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               *
               * @param name Required. The name of the context to delete. Format:
              `projects//agent/sessions//contexts/`
              or
               *        `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is
              not
               *        specified, we assume default 'draft' environment. If `User ID` is not
              specified, we assume
               *        default '-' user.
               * @return the request
               */
              public Delete delete(java.lang.String name) throws java.io.IOException {
                Delete result = new Delete(name);
                initialize(result);
                return result;
              }

              public class Delete extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleProtobufEmpty> {

                private static final String REST_PATH = "v2beta1/{+name}";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$");

                /**
                 * Deletes the specified context.
                 *
                 * Create a request for the method "contexts.delete".
                 *
                 * This request holds the parameters needed by the the dialogflow server.  After setting any
                 * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
                 * <p> {@link
                 * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                 * be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name Required. The name of the context to delete. Format:
              `projects//agent/sessions//contexts/`
              or
               *        `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is
              not
               *        specified, we assume default 'draft' environment. If `User ID` is not
              specified, we assume
               *        default '-' user.
                 * @since 1.13
                 */
                protected Delete(java.lang.String name) {
                  super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleProtobufEmpty.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$");
                  }
                }

                @Override
                public Delete set$Xgafv(java.lang.String $Xgafv) {
                  return (Delete) super.set$Xgafv($Xgafv);
                }

                @Override
                public Delete setAccessToken(java.lang.String accessToken) {
                  return (Delete) super.setAccessToken(accessToken);
                }

                @Override
                public Delete setAlt(java.lang.String alt) {
                  return (Delete) super.setAlt(alt);
                }

                @Override
                public Delete setCallback(java.lang.String callback) {
                  return (Delete) super.setCallback(callback);
                }

                @Override
                public Delete setFields(java.lang.String fields) {
                  return (Delete) super.setFields(fields);
                }

                @Override
                public Delete setKey(java.lang.String key) {
                  return (Delete) super.setKey(key);
                }

                @Override
                public Delete setOauthToken(java.lang.String oauthToken) {
                  return (Delete) super.setOauthToken(oauthToken);
                }

                @Override
                public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Delete) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Delete setQuotaUser(java.lang.String quotaUser) {
                  return (Delete) super.setQuotaUser(quotaUser);
                }

                @Override
                public Delete setUploadType(java.lang.String uploadType) {
                  return (Delete) super.setUploadType(uploadType);
                }

                @Override
                public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Delete) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The name of the context to delete. Format:
                 * `projects//agent/sessions//contexts/` or
                 * `projects//agent/environments//users//sessions//contexts/`. If `Environment ID`
                 * is not specified, we assume default 'draft' environment. If `User ID` is not
                 * specified, we assume default '-' user.
                 */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** Required. The name of the context to delete. Format: `projects//agent/sessions//contexts/` or
               `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is not specified,
               we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /**
                 * Required. The name of the context to delete. Format:
                 * `projects//agent/sessions//contexts/` or
                 * `projects//agent/environments//users//sessions//contexts/`. If `Environment ID`
                 * is not specified, we assume default 'draft' environment. If `User ID` is not
                 * specified, we assume default '-' user.
                 */
                public Delete setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                @Override
                public Delete set(String parameterName, Object value) {
                  return (Delete) super.set(parameterName, value);
                }
              }
              /**
               * Retrieves the specified context.
               *
               * Create a request for the method "contexts.get".
               *
               * This request holds the parameters needed by the dialogflow server.  After setting any optional
               * parameters, call the {@link Get#execute()} method to invoke the remote operation.
               *
               * @param name Required. The name of the context. Format:
              `projects//agent/sessions//contexts/`
              or
               *        `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is
              not
               *        specified, we assume default 'draft' environment. If `User ID` is not
              specified, we assume
               *        default '-' user.
               * @return the request
               */
              public Get get(java.lang.String name) throws java.io.IOException {
                Get result = new Get(name);
                initialize(result);
                return result;
              }

              public class Get extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context> {

                private static final String REST_PATH = "v2beta1/{+name}";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$");

                /**
                 * Retrieves the specified context.
                 *
                 * Create a request for the method "contexts.get".
                 *
                 * This request holds the parameters needed by the the dialogflow server.  After setting any
                 * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
                 * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name Required. The name of the context. Format:
              `projects//agent/sessions//contexts/`
              or
               *        `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is
              not
               *        specified, we assume default 'draft' environment. If `User ID` is not
              specified, we assume
               *        default '-' user.
                 * @since 1.13
                 */
                protected Get(java.lang.String name) {
                  super(Dialogflow.this, "GET", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public Get set$Xgafv(java.lang.String $Xgafv) {
                  return (Get) super.set$Xgafv($Xgafv);
                }

                @Override
                public Get setAccessToken(java.lang.String accessToken) {
                  return (Get) super.setAccessToken(accessToken);
                }

                @Override
                public Get setAlt(java.lang.String alt) {
                  return (Get) super.setAlt(alt);
                }

                @Override
                public Get setCallback(java.lang.String callback) {
                  return (Get) super.setCallback(callback);
                }

                @Override
                public Get setFields(java.lang.String fields) {
                  return (Get) super.setFields(fields);
                }

                @Override
                public Get setKey(java.lang.String key) {
                  return (Get) super.setKey(key);
                }

                @Override
                public Get setOauthToken(java.lang.String oauthToken) {
                  return (Get) super.setOauthToken(oauthToken);
                }

                @Override
                public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Get) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Get setQuotaUser(java.lang.String quotaUser) {
                  return (Get) super.setQuotaUser(quotaUser);
                }

                @Override
                public Get setUploadType(java.lang.String uploadType) {
                  return (Get) super.setUploadType(uploadType);
                }

                @Override
                public Get setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Get) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The name of the context. Format: `projects//agent/sessions//contexts/`
                 * or `projects//agent/environments//users//sessions//contexts/`. If `Environment
                 * ID` is not specified, we assume default 'draft' environment. If `User ID` is not
                 * specified, we assume default '-' user.
                 */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** Required. The name of the context. Format: `projects//agent/sessions//contexts/` or
               `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is not specified,
               we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /**
                 * Required. The name of the context. Format: `projects//agent/sessions//contexts/`
                 * or `projects//agent/environments//users//sessions//contexts/`. If `Environment
                 * ID` is not specified, we assume default 'draft' environment. If `User ID` is not
                 * specified, we assume default '-' user.
                 */
                public Get setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                @Override
                public Get set(String parameterName, Object value) {
                  return (Get) super.set(parameterName, value);
                }
              }
              /**
               * Returns the list of all contexts in the specified session.
               *
               * Create a request for the method "contexts.list".
               *
               * This request holds the parameters needed by the dialogflow server.  After setting any optional
               * parameters, call the {@link List#execute()} method to invoke the remote operation.
               *
               * @param parent Required. The session to list all contexts from.
              Format: `projects//agent/sessions/` or
               *        `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we
               *        assume
              default 'draft' environment. If `User ID` is not specified, we assume
              default '-'
               *        user.
               * @return the request
               */
              public List list(java.lang.String parent) throws java.io.IOException {
                List result = new List(parent);
                initialize(result);
                return result;
              }

              public class List extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListContextsResponse> {

                private static final String REST_PATH = "v2beta1/{+parent}/contexts";

                private final java.util.regex.Pattern PARENT_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");

                /**
                 * Returns the list of all contexts in the specified session.
                 *
                 * Create a request for the method "contexts.list".
                 *
                 * This request holds the parameters needed by the the dialogflow server.  After setting any
                 * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
                 * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param parent Required. The session to list all contexts from.
              Format: `projects//agent/sessions/` or
               *        `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we
               *        assume
              default 'draft' environment. If `User ID` is not specified, we assume
              default '-'
               *        user.
                 * @since 1.13
                 */
                protected List(java.lang.String parent) {
                  super(Dialogflow.this, "GET", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListContextsResponse.class);
                  this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public List set$Xgafv(java.lang.String $Xgafv) {
                  return (List) super.set$Xgafv($Xgafv);
                }

                @Override
                public List setAccessToken(java.lang.String accessToken) {
                  return (List) super.setAccessToken(accessToken);
                }

                @Override
                public List setAlt(java.lang.String alt) {
                  return (List) super.setAlt(alt);
                }

                @Override
                public List setCallback(java.lang.String callback) {
                  return (List) super.setCallback(callback);
                }

                @Override
                public List setFields(java.lang.String fields) {
                  return (List) super.setFields(fields);
                }

                @Override
                public List setKey(java.lang.String key) {
                  return (List) super.setKey(key);
                }

                @Override
                public List setOauthToken(java.lang.String oauthToken) {
                  return (List) super.setOauthToken(oauthToken);
                }

                @Override
                public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (List) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public List setQuotaUser(java.lang.String quotaUser) {
                  return (List) super.setQuotaUser(quotaUser);
                }

                @Override
                public List setUploadType(java.lang.String uploadType) {
                  return (List) super.setUploadType(uploadType);
                }

                @Override
                public List setUploadProtocol(java.lang.String uploadProtocol) {
                  return (List) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The session to list all contexts from. Format:
                 * `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`.
                 * If `Environment ID` is not specified, we assume default 'draft' environment. If
                 * `User ID` is not specified, we assume default '-' user.
                 */
                @com.google.api.client.util.Key
                private java.lang.String parent;

                /** Required. The session to list all contexts from. Format: `projects//agent/sessions/` or
               `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume
               default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                public java.lang.String getParent() {
                  return parent;
                }

                /**
                 * Required. The session to list all contexts from. Format:
                 * `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`.
                 * If `Environment ID` is not specified, we assume default 'draft' environment. If
                 * `User ID` is not specified, we assume default '-' user.
                 */
                public List setParent(java.lang.String parent) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");
                  }
                  this.parent = parent;
                  return this;
                }

                /**
                 * Optional. The maximum number of items to return in a single page. By default 100
                 * and at most 1000.
                 */
                @com.google.api.client.util.Key
                private java.lang.Integer pageSize;

                /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
                 */
                public java.lang.Integer getPageSize() {
                  return pageSize;
                }

                /**
                 * Optional. The maximum number of items to return in a single page. By default 100
                 * and at most 1000.
                 */
                public List setPageSize(java.lang.Integer pageSize) {
                  this.pageSize = pageSize;
                  return this;
                }

                /** Optional. The next_page_token value returned from a previous list request. */
                @com.google.api.client.util.Key
                private java.lang.String pageToken;

                /** Optional. The next_page_token value returned from a previous list request.
                 */
                public java.lang.String getPageToken() {
                  return pageToken;
                }

                /** Optional. The next_page_token value returned from a previous list request. */
                public List setPageToken(java.lang.String pageToken) {
                  this.pageToken = pageToken;
                  return this;
                }

                @Override
                public List set(String parameterName, Object value) {
                  return (List) super.set(parameterName, value);
                }
              }
              /**
               * Updates the specified context.
               *
               * Create a request for the method "contexts.patch".
               *
               * This request holds the parameters needed by the dialogflow server.  After setting any optional
               * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
               *
               * @param name Required. The unique identifier of the context. Format:
              `projects//agent/sessions//contexts/`,
              or
               *        `projects//agent/environments//users//sessions//contexts/`. The `Context ID` is
              always
               *        converted to lowercase. If `Environment ID` is not specified, we
              assume default 'draft'
               *        environment. If `User ID` is not specified, we
              assume default '-' user.
               * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context}
               * @return the request
               */
              public Patch patch(java.lang.String name, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context content) throws java.io.IOException {
                Patch result = new Patch(name, content);
                initialize(result);
                return result;
              }

              public class Patch extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context> {

                private static final String REST_PATH = "v2beta1/{+name}";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$");

                /**
                 * Updates the specified context.
                 *
                 * Create a request for the method "contexts.patch".
                 *
                 * This request holds the parameters needed by the the dialogflow server.  After setting any
                 * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
                 * <p> {@link
                 * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                 * be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name Required. The unique identifier of the context. Format:
              `projects//agent/sessions//contexts/`,
              or
               *        `projects//agent/environments//users//sessions//contexts/`. The `Context ID` is
              always
               *        converted to lowercase. If `Environment ID` is not specified, we
              assume default 'draft'
               *        environment. If `User ID` is not specified, we
              assume default '-' user.
                 * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context}
                 * @since 1.13
                 */
                protected Patch(java.lang.String name, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context content) {
                  super(Dialogflow.this, "PATCH", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$");
                  }
                }

                @Override
                public Patch set$Xgafv(java.lang.String $Xgafv) {
                  return (Patch) super.set$Xgafv($Xgafv);
                }

                @Override
                public Patch setAccessToken(java.lang.String accessToken) {
                  return (Patch) super.setAccessToken(accessToken);
                }

                @Override
                public Patch setAlt(java.lang.String alt) {
                  return (Patch) super.setAlt(alt);
                }

                @Override
                public Patch setCallback(java.lang.String callback) {
                  return (Patch) super.setCallback(callback);
                }

                @Override
                public Patch setFields(java.lang.String fields) {
                  return (Patch) super.setFields(fields);
                }

                @Override
                public Patch setKey(java.lang.String key) {
                  return (Patch) super.setKey(key);
                }

                @Override
                public Patch setOauthToken(java.lang.String oauthToken) {
                  return (Patch) super.setOauthToken(oauthToken);
                }

                @Override
                public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Patch) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Patch setQuotaUser(java.lang.String quotaUser) {
                  return (Patch) super.setQuotaUser(quotaUser);
                }

                @Override
                public Patch setUploadType(java.lang.String uploadType) {
                  return (Patch) super.setUploadType(uploadType);
                }

                @Override
                public Patch setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Patch) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The unique identifier of the context. Format:
                 * `projects//agent/sessions//contexts/`, or
                 * `projects//agent/environments//users//sessions//contexts/`. The `Context ID` is
                 * always converted to lowercase. If `Environment ID` is not specified, we assume
                 * default 'draft' environment. If `User ID` is not specified, we assume default '-'
                 * user.
                 */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** Required. The unique identifier of the context. Format: `projects//agent/sessions//contexts/`, or
               `projects//agent/environments//users//sessions//contexts/`. The `Context ID` is always converted to
               lowercase. If `Environment ID` is not specified, we assume default 'draft' environment. If `User
               ID` is not specified, we assume default '-' user.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /**
                 * Required. The unique identifier of the context. Format:
                 * `projects//agent/sessions//contexts/`, or
                 * `projects//agent/environments//users//sessions//contexts/`. The `Context ID` is
                 * always converted to lowercase. If `Environment ID` is not specified, we assume
                 * default 'draft' environment. If `User ID` is not specified, we assume default '-'
                 * user.
                 */
                public Patch setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                /** Optional. The mask to control which fields get updated. */
                @com.google.api.client.util.Key
                private String updateMask;

                /** Optional. The mask to control which fields get updated.
                 */
                public String getUpdateMask() {
                  return updateMask;
                }

                /** Optional. The mask to control which fields get updated. */
                public Patch setUpdateMask(String updateMask) {
                  this.updateMask = updateMask;
                  return this;
                }

                @Override
                public Patch set(String parameterName, Object value) {
                  return (Patch) super.set(parameterName, value);
                }
              }

            }
            /**
             * An accessor for creating requests from the EntityTypes collection.
             *
             * <p>The typical use is:</p>
             * <pre>
             *   {@code Dialogflow dialogflow = new Dialogflow(...);}
             *   {@code Dialogflow.EntityTypes.List request = dialogflow.entityTypes().list(parameters ...)}
             * </pre>
             *
             * @return the resource collection
             */
            public EntityTypes entityTypes() {
              return new EntityTypes();
            }

            /**
             * The "entityTypes" collection of methods.
             */
            public class EntityTypes {

              /**
               * Creates a session entity type.
               *
               * If the specified session entity type already exists, overrides the session entity type.
               *
               * Create a request for the method "entityTypes.create".
               *
               * This request holds the parameters needed by the dialogflow server.  After setting any optional
               * parameters, call the {@link Create#execute()} method to invoke the remote operation.
               *
               * @param parent Required. The session to create a session entity type for.
              Format: `projects//agent/sessions/` or
               *        `projects//agent/environments//users//
              sessions/`. If `Environment ID` is not specified,
               *        we assume
              default 'draft' environment. If `User ID` is not specified, we assume
              default
               *        '-' user.
               * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType}
               * @return the request
               */
              public Create create(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType content) throws java.io.IOException {
                Create result = new Create(parent, content);
                initialize(result);
                return result;
              }

              public class Create extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType> {

                private static final String REST_PATH = "v2beta1/{+parent}/entityTypes";

                private final java.util.regex.Pattern PARENT_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");

                /**
                 * Creates a session entity type.
                 *
                 * If the specified session entity type already exists, overrides the session entity type.
                 *
                 * Create a request for the method "entityTypes.create".
                 *
                 * This request holds the parameters needed by the the dialogflow server.  After setting any
                 * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
                 * <p> {@link
                 * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                 * be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param parent Required. The session to create a session entity type for.
              Format: `projects//agent/sessions/` or
               *        `projects//agent/environments//users//
              sessions/`. If `Environment ID` is not specified,
               *        we assume
              default 'draft' environment. If `User ID` is not specified, we assume
              default
               *        '-' user.
                 * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType}
                 * @since 1.13
                 */
                protected Create(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType content) {
                  super(Dialogflow.this, "POST", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType.class);
                  this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");
                  }
                }

                @Override
                public Create set$Xgafv(java.lang.String $Xgafv) {
                  return (Create) super.set$Xgafv($Xgafv);
                }

                @Override
                public Create setAccessToken(java.lang.String accessToken) {
                  return (Create) super.setAccessToken(accessToken);
                }

                @Override
                public Create setAlt(java.lang.String alt) {
                  return (Create) super.setAlt(alt);
                }

                @Override
                public Create setCallback(java.lang.String callback) {
                  return (Create) super.setCallback(callback);
                }

                @Override
                public Create setFields(java.lang.String fields) {
                  return (Create) super.setFields(fields);
                }

                @Override
                public Create setKey(java.lang.String key) {
                  return (Create) super.setKey(key);
                }

                @Override
                public Create setOauthToken(java.lang.String oauthToken) {
                  return (Create) super.setOauthToken(oauthToken);
                }

                @Override
                public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Create) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Create setQuotaUser(java.lang.String quotaUser) {
                  return (Create) super.setQuotaUser(quotaUser);
                }

                @Override
                public Create setUploadType(java.lang.String uploadType) {
                  return (Create) super.setUploadType(uploadType);
                }

                @Override
                public Create setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Create) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The session to create a session entity type for. Format:
                 * `projects//agent/sessions/` or `projects//agent/environments//users// sessions/`.
                 * If `Environment ID` is not specified, we assume default 'draft' environment. If
                 * `User ID` is not specified, we assume default '-' user.
                 */
                @com.google.api.client.util.Key
                private java.lang.String parent;

                /** Required. The session to create a session entity type for. Format: `projects//agent/sessions/` or
               `projects//agent/environments//users// sessions/`. If `Environment ID` is not specified, we assume
               default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                public java.lang.String getParent() {
                  return parent;
                }

                /**
                 * Required. The session to create a session entity type for. Format:
                 * `projects//agent/sessions/` or `projects//agent/environments//users// sessions/`.
                 * If `Environment ID` is not specified, we assume default 'draft' environment. If
                 * `User ID` is not specified, we assume default '-' user.
                 */
                public Create setParent(java.lang.String parent) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");
                  }
                  this.parent = parent;
                  return this;
                }

                @Override
                public Create set(String parameterName, Object value) {
                  return (Create) super.set(parameterName, value);
                }
              }
              /**
               * Deletes the specified session entity type.
               *
               * Create a request for the method "entityTypes.delete".
               *
               * This request holds the parameters needed by the dialogflow server.  After setting any optional
               * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               *
               * @param name Required. The name of the entity type to delete. Format:
              `projects//agent/sessions//entityTypes/` or
               *        `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not
               *        specified, we assume default 'draft'
              environment. If `User ID` is not specified, we assume
               *        default '-' user.
               * @return the request
               */
              public Delete delete(java.lang.String name) throws java.io.IOException {
                Delete result = new Delete(name);
                initialize(result);
                return result;
              }

              public class Delete extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleProtobufEmpty> {

                private static final String REST_PATH = "v2beta1/{+name}";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$");

                /**
                 * Deletes the specified session entity type.
                 *
                 * Create a request for the method "entityTypes.delete".
                 *
                 * This request holds the parameters needed by the the dialogflow server.  After setting any
                 * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
                 * <p> {@link
                 * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                 * be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name Required. The name of the entity type to delete. Format:
              `projects//agent/sessions//entityTypes/` or
               *        `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not
               *        specified, we assume default 'draft'
              environment. If `User ID` is not specified, we assume
               *        default '-' user.
                 * @since 1.13
                 */
                protected Delete(java.lang.String name) {
                  super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleProtobufEmpty.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$");
                  }
                }

                @Override
                public Delete set$Xgafv(java.lang.String $Xgafv) {
                  return (Delete) super.set$Xgafv($Xgafv);
                }

                @Override
                public Delete setAccessToken(java.lang.String accessToken) {
                  return (Delete) super.setAccessToken(accessToken);
                }

                @Override
                public Delete setAlt(java.lang.String alt) {
                  return (Delete) super.setAlt(alt);
                }

                @Override
                public Delete setCallback(java.lang.String callback) {
                  return (Delete) super.setCallback(callback);
                }

                @Override
                public Delete setFields(java.lang.String fields) {
                  return (Delete) super.setFields(fields);
                }

                @Override
                public Delete setKey(java.lang.String key) {
                  return (Delete) super.setKey(key);
                }

                @Override
                public Delete setOauthToken(java.lang.String oauthToken) {
                  return (Delete) super.setOauthToken(oauthToken);
                }

                @Override
                public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Delete) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Delete setQuotaUser(java.lang.String quotaUser) {
                  return (Delete) super.setQuotaUser(quotaUser);
                }

                @Override
                public Delete setUploadType(java.lang.String uploadType) {
                  return (Delete) super.setUploadType(uploadType);
                }

                @Override
                public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Delete) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The name of the entity type to delete. Format:
                 * `projects//agent/sessions//entityTypes/` or
                 * `projects//agent/environments//users//sessions//entityTypes/`. If `Environment
                 * ID` is not specified, we assume default 'draft' environment. If `User ID` is not
                 * specified, we assume default '-' user.
                 */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** Required. The name of the entity type to delete. Format: `projects//agent/sessions//entityTypes/`
               or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not
               specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default
               '-' user.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /**
                 * Required. The name of the entity type to delete. Format:
                 * `projects//agent/sessions//entityTypes/` or
                 * `projects//agent/environments//users//sessions//entityTypes/`. If `Environment
                 * ID` is not specified, we assume default 'draft' environment. If `User ID` is not
                 * specified, we assume default '-' user.
                 */
                public Delete setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                @Override
                public Delete set(String parameterName, Object value) {
                  return (Delete) super.set(parameterName, value);
                }
              }
              /**
               * Retrieves the specified session entity type.
               *
               * Create a request for the method "entityTypes.get".
               *
               * This request holds the parameters needed by the dialogflow server.  After setting any optional
               * parameters, call the {@link Get#execute()} method to invoke the remote operation.
               *
               * @param name Required. The name of the session entity type. Format:
              `projects//agent/sessions//entityTypes/` or
               *        `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not
               *        specified, we assume default 'draft'
              environment. If `User ID` is not specified, we assume
               *        default '-' user.
               * @return the request
               */
              public Get get(java.lang.String name) throws java.io.IOException {
                Get result = new Get(name);
                initialize(result);
                return result;
              }

              public class Get extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType> {

                private static final String REST_PATH = "v2beta1/{+name}";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$");

                /**
                 * Retrieves the specified session entity type.
                 *
                 * Create a request for the method "entityTypes.get".
                 *
                 * This request holds the parameters needed by the the dialogflow server.  After setting any
                 * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
                 * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name Required. The name of the session entity type. Format:
              `projects//agent/sessions//entityTypes/` or
               *        `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not
               *        specified, we assume default 'draft'
              environment. If `User ID` is not specified, we assume
               *        default '-' user.
                 * @since 1.13
                 */
                protected Get(java.lang.String name) {
                  super(Dialogflow.this, "GET", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public Get set$Xgafv(java.lang.String $Xgafv) {
                  return (Get) super.set$Xgafv($Xgafv);
                }

                @Override
                public Get setAccessToken(java.lang.String accessToken) {
                  return (Get) super.setAccessToken(accessToken);
                }

                @Override
                public Get setAlt(java.lang.String alt) {
                  return (Get) super.setAlt(alt);
                }

                @Override
                public Get setCallback(java.lang.String callback) {
                  return (Get) super.setCallback(callback);
                }

                @Override
                public Get setFields(java.lang.String fields) {
                  return (Get) super.setFields(fields);
                }

                @Override
                public Get setKey(java.lang.String key) {
                  return (Get) super.setKey(key);
                }

                @Override
                public Get setOauthToken(java.lang.String oauthToken) {
                  return (Get) super.setOauthToken(oauthToken);
                }

                @Override
                public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Get) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Get setQuotaUser(java.lang.String quotaUser) {
                  return (Get) super.setQuotaUser(quotaUser);
                }

                @Override
                public Get setUploadType(java.lang.String uploadType) {
                  return (Get) super.setUploadType(uploadType);
                }

                @Override
                public Get setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Get) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The name of the session entity type. Format:
                 * `projects//agent/sessions//entityTypes/` or
                 * `projects//agent/environments//users//sessions//entityTypes/`. If `Environment
                 * ID` is not specified, we assume default 'draft' environment. If `User ID` is not
                 * specified, we assume default '-' user.
                 */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** Required. The name of the session entity type. Format: `projects//agent/sessions//entityTypes/` or
               `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not
               specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default
               '-' user.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /**
                 * Required. The name of the session entity type. Format:
                 * `projects//agent/sessions//entityTypes/` or
                 * `projects//agent/environments//users//sessions//entityTypes/`. If `Environment
                 * ID` is not specified, we assume default 'draft' environment. If `User ID` is not
                 * specified, we assume default '-' user.
                 */
                public Get setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                @Override
                public Get set(String parameterName, Object value) {
                  return (Get) super.set(parameterName, value);
                }
              }
              /**
               * Returns the list of all session entity types in the specified session.
               *
               * Create a request for the method "entityTypes.list".
               *
               * This request holds the parameters needed by the dialogflow server.  After setting any optional
               * parameters, call the {@link List#execute()} method to invoke the remote operation.
               *
               * @param parent Required. The session to list all session entity types from.
              Format: `projects//agent/sessions/` or
               *        `projects//agent/environments//users//
              sessions/`.
              If `Environment ID` is not specified,
               *        we assume default 'draft'
              environment. If `User ID` is not specified, we assume default
               *        '-' user.
               * @return the request
               */
              public List list(java.lang.String parent) throws java.io.IOException {
                List result = new List(parent);
                initialize(result);
                return result;
              }

              public class List extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListSessionEntityTypesResponse> {

                private static final String REST_PATH = "v2beta1/{+parent}/entityTypes";

                private final java.util.regex.Pattern PARENT_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");

                /**
                 * Returns the list of all session entity types in the specified session.
                 *
                 * Create a request for the method "entityTypes.list".
                 *
                 * This request holds the parameters needed by the the dialogflow server.  After setting any
                 * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
                 * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param parent Required. The session to list all session entity types from.
              Format: `projects//agent/sessions/` or
               *        `projects//agent/environments//users//
              sessions/`.
              If `Environment ID` is not specified,
               *        we assume default 'draft'
              environment. If `User ID` is not specified, we assume default
               *        '-' user.
                 * @since 1.13
                 */
                protected List(java.lang.String parent) {
                  super(Dialogflow.this, "GET", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListSessionEntityTypesResponse.class);
                  this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public List set$Xgafv(java.lang.String $Xgafv) {
                  return (List) super.set$Xgafv($Xgafv);
                }

                @Override
                public List setAccessToken(java.lang.String accessToken) {
                  return (List) super.setAccessToken(accessToken);
                }

                @Override
                public List setAlt(java.lang.String alt) {
                  return (List) super.setAlt(alt);
                }

                @Override
                public List setCallback(java.lang.String callback) {
                  return (List) super.setCallback(callback);
                }

                @Override
                public List setFields(java.lang.String fields) {
                  return (List) super.setFields(fields);
                }

                @Override
                public List setKey(java.lang.String key) {
                  return (List) super.setKey(key);
                }

                @Override
                public List setOauthToken(java.lang.String oauthToken) {
                  return (List) super.setOauthToken(oauthToken);
                }

                @Override
                public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (List) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public List setQuotaUser(java.lang.String quotaUser) {
                  return (List) super.setQuotaUser(quotaUser);
                }

                @Override
                public List setUploadType(java.lang.String uploadType) {
                  return (List) super.setUploadType(uploadType);
                }

                @Override
                public List setUploadProtocol(java.lang.String uploadProtocol) {
                  return (List) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The session to list all session entity types from. Format:
                 * `projects//agent/sessions/` or `projects//agent/environments//users// sessions/`.
                 * If `Environment ID` is not specified, we assume default 'draft' environment. If
                 * `User ID` is not specified, we assume default '-' user.
                 */
                @com.google.api.client.util.Key
                private java.lang.String parent;

                /** Required. The session to list all session entity types from. Format: `projects//agent/sessions/` or
               `projects//agent/environments//users// sessions/`. If `Environment ID` is not specified, we assume
               default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                public java.lang.String getParent() {
                  return parent;
                }

                /**
                 * Required. The session to list all session entity types from. Format:
                 * `projects//agent/sessions/` or `projects//agent/environments//users// sessions/`.
                 * If `Environment ID` is not specified, we assume default 'draft' environment. If
                 * `User ID` is not specified, we assume default '-' user.
                 */
                public List setParent(java.lang.String parent) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");
                  }
                  this.parent = parent;
                  return this;
                }

                /**
                 * Optional. The maximum number of items to return in a single page. By default 100
                 * and at most 1000.
                 */
                @com.google.api.client.util.Key
                private java.lang.Integer pageSize;

                /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
                 */
                public java.lang.Integer getPageSize() {
                  return pageSize;
                }

                /**
                 * Optional. The maximum number of items to return in a single page. By default 100
                 * and at most 1000.
                 */
                public List setPageSize(java.lang.Integer pageSize) {
                  this.pageSize = pageSize;
                  return this;
                }

                /** Optional. The next_page_token value returned from a previous list request. */
                @com.google.api.client.util.Key
                private java.lang.String pageToken;

                /** Optional. The next_page_token value returned from a previous list request.
                 */
                public java.lang.String getPageToken() {
                  return pageToken;
                }

                /** Optional. The next_page_token value returned from a previous list request. */
                public List setPageToken(java.lang.String pageToken) {
                  this.pageToken = pageToken;
                  return this;
                }

                @Override
                public List set(String parameterName, Object value) {
                  return (List) super.set(parameterName, value);
                }
              }
              /**
               * Updates the specified session entity type.
               *
               * Create a request for the method "entityTypes.patch".
               *
               * This request holds the parameters needed by the dialogflow server.  After setting any optional
               * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
               *
               * @param name Required. The unique identifier of this session entity type. Format:
               *        `projects//agent/sessions//entityTypes/`, or
               *        `projects//agent/environments//users//sessions//entityTypes/`.
              If `Environment ID` is not
               *        specified, we assume default 'draft'
              environment. If `User ID` is not specified, we assume
               *        default '-' user.
              `` must be the display name of an existing entity
              type in the same agent
               *        that will be overridden or supplemented.
               * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType}
               * @return the request
               */
              public Patch patch(java.lang.String name, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType content) throws java.io.IOException {
                Patch result = new Patch(name, content);
                initialize(result);
                return result;
              }

              public class Patch extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType> {

                private static final String REST_PATH = "v2beta1/{+name}";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$");

                /**
                 * Updates the specified session entity type.
                 *
                 * Create a request for the method "entityTypes.patch".
                 *
                 * This request holds the parameters needed by the the dialogflow server.  After setting any
                 * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
                 * <p> {@link
                 * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                 * be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name Required. The unique identifier of this session entity type. Format:
               *        `projects//agent/sessions//entityTypes/`, or
               *        `projects//agent/environments//users//sessions//entityTypes/`.
              If `Environment ID` is not
               *        specified, we assume default 'draft'
              environment. If `User ID` is not specified, we assume
               *        default '-' user.
              `` must be the display name of an existing entity
              type in the same agent
               *        that will be overridden or supplemented.
                 * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType}
                 * @since 1.13
                 */
                protected Patch(java.lang.String name, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType content) {
                  super(Dialogflow.this, "PATCH", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$");
                  }
                }

                @Override
                public Patch set$Xgafv(java.lang.String $Xgafv) {
                  return (Patch) super.set$Xgafv($Xgafv);
                }

                @Override
                public Patch setAccessToken(java.lang.String accessToken) {
                  return (Patch) super.setAccessToken(accessToken);
                }

                @Override
                public Patch setAlt(java.lang.String alt) {
                  return (Patch) super.setAlt(alt);
                }

                @Override
                public Patch setCallback(java.lang.String callback) {
                  return (Patch) super.setCallback(callback);
                }

                @Override
                public Patch setFields(java.lang.String fields) {
                  return (Patch) super.setFields(fields);
                }

                @Override
                public Patch setKey(java.lang.String key) {
                  return (Patch) super.setKey(key);
                }

                @Override
                public Patch setOauthToken(java.lang.String oauthToken) {
                  return (Patch) super.setOauthToken(oauthToken);
                }

                @Override
                public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Patch) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Patch setQuotaUser(java.lang.String quotaUser) {
                  return (Patch) super.setQuotaUser(quotaUser);
                }

                @Override
                public Patch setUploadType(java.lang.String uploadType) {
                  return (Patch) super.setUploadType(uploadType);
                }

                @Override
                public Patch setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Patch) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The unique identifier of this session entity type. Format:
                 * `projects//agent/sessions//entityTypes/`, or
                 * `projects//agent/environments//users//sessions//entityTypes/`. If `Environment
                 * ID` is not specified, we assume default 'draft' environment. If `User ID` is not
                 * specified, we assume default '-' user.
                 *
                 * `` must be the display name of an existing entity type in the same agent that
                 * will be overridden or supplemented.
                 */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** Required. The unique identifier of this session entity type. Format:
               `projects//agent/sessions//entityTypes/`, or
               `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not
               specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default
               '-' user.

               `` must be the display name of an existing entity type in the same agent that will be overridden or
               supplemented.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /**
                 * Required. The unique identifier of this session entity type. Format:
                 * `projects//agent/sessions//entityTypes/`, or
                 * `projects//agent/environments//users//sessions//entityTypes/`. If `Environment
                 * ID` is not specified, we assume default 'draft' environment. If `User ID` is not
                 * specified, we assume default '-' user.
                 *
                 * `` must be the display name of an existing entity type in the same agent that
                 * will be overridden or supplemented.
                 */
                public Patch setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                /** Optional. The mask to control which fields get updated. */
                @com.google.api.client.util.Key
                private String updateMask;

                /** Optional. The mask to control which fields get updated.
                 */
                public String getUpdateMask() {
                  return updateMask;
                }

                /** Optional. The mask to control which fields get updated. */
                public Patch setUpdateMask(String updateMask) {
                  this.updateMask = updateMask;
                  return this;
                }

                @Override
                public Patch set(String parameterName, Object value) {
                  return (Patch) super.set(parameterName, value);
                }
              }

            }
          }
        }
      }
      /**
       * An accessor for creating requests from the Intents collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Dialogflow dialogflow = new Dialogflow(...);}
       *   {@code Dialogflow.Intents.List request = dialogflow.intents().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Intents intents() {
        return new Intents();
      }

      /**
       * The "intents" collection of methods.
       */
      public class Intents {

        /**
         * Deletes intents in the specified agent.
         *
         * Operation
         *
         * Create a request for the method "intents.batchDelete".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link BatchDelete#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the agent to delete all entities types for. Format:
        `projects//agent`.
         * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchDeleteIntentsRequest}
         * @return the request
         */
        public BatchDelete batchDelete(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchDeleteIntentsRequest content) throws java.io.IOException {
          BatchDelete result = new BatchDelete(parent, content);
          initialize(result);
          return result;
        }

        public class BatchDelete extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v2beta1/{+parent}/intents:batchDelete";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent$");

          /**
           * Deletes intents in the specified agent.
           *
           * Operation
           *
           * Create a request for the method "intents.batchDelete".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link BatchDelete#execute()} method to invoke the remote
           * operation. <p> {@link
           * BatchDelete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the agent to delete all entities types for. Format:
        `projects//agent`.
           * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchDeleteIntentsRequest}
           * @since 1.13
           */
          protected BatchDelete(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchDeleteIntentsRequest content) {
            super(Dialogflow.this, "POST", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
          }

          @Override
          public BatchDelete set$Xgafv(java.lang.String $Xgafv) {
            return (BatchDelete) super.set$Xgafv($Xgafv);
          }

          @Override
          public BatchDelete setAccessToken(java.lang.String accessToken) {
            return (BatchDelete) super.setAccessToken(accessToken);
          }

          @Override
          public BatchDelete setAlt(java.lang.String alt) {
            return (BatchDelete) super.setAlt(alt);
          }

          @Override
          public BatchDelete setCallback(java.lang.String callback) {
            return (BatchDelete) super.setCallback(callback);
          }

          @Override
          public BatchDelete setFields(java.lang.String fields) {
            return (BatchDelete) super.setFields(fields);
          }

          @Override
          public BatchDelete setKey(java.lang.String key) {
            return (BatchDelete) super.setKey(key);
          }

          @Override
          public BatchDelete setOauthToken(java.lang.String oauthToken) {
            return (BatchDelete) super.setOauthToken(oauthToken);
          }

          @Override
          public BatchDelete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (BatchDelete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public BatchDelete setQuotaUser(java.lang.String quotaUser) {
            return (BatchDelete) super.setQuotaUser(quotaUser);
          }

          @Override
          public BatchDelete setUploadType(java.lang.String uploadType) {
            return (BatchDelete) super.setUploadType(uploadType);
          }

          @Override
          public BatchDelete setUploadProtocol(java.lang.String uploadProtocol) {
            return (BatchDelete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the agent to delete all entities types for. Format:
           * `projects//agent`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the agent to delete all entities types for. Format: `projects//agent`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the agent to delete all entities types for. Format:
           * `projects//agent`.
           */
          public BatchDelete setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public BatchDelete set(String parameterName, Object value) {
            return (BatchDelete) super.set(parameterName, value);
          }
        }
        /**
         * Updates/Creates multiple intents in the specified agent.
         *
         * Operation
         *
         * Create a request for the method "intents.batchUpdate".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link BatchUpdate#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the agent to update or create intents in.
        Format: `projects//agent`.
         * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest}
         * @return the request
         */
        public BatchUpdate batchUpdate(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest content) throws java.io.IOException {
          BatchUpdate result = new BatchUpdate(parent, content);
          initialize(result);
          return result;
        }

        public class BatchUpdate extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v2beta1/{+parent}/intents:batchUpdate";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent$");

          /**
           * Updates/Creates multiple intents in the specified agent.
           *
           * Operation
           *
           * Create a request for the method "intents.batchUpdate".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link BatchUpdate#execute()} method to invoke the remote
           * operation. <p> {@link
           * BatchUpdate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the agent to update or create intents in.
        Format: `projects//agent`.
           * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest}
           * @since 1.13
           */
          protected BatchUpdate(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest content) {
            super(Dialogflow.this, "POST", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
          }

          @Override
          public BatchUpdate set$Xgafv(java.lang.String $Xgafv) {
            return (BatchUpdate) super.set$Xgafv($Xgafv);
          }

          @Override
          public BatchUpdate setAccessToken(java.lang.String accessToken) {
            return (BatchUpdate) super.setAccessToken(accessToken);
          }

          @Override
          public BatchUpdate setAlt(java.lang.String alt) {
            return (BatchUpdate) super.setAlt(alt);
          }

          @Override
          public BatchUpdate setCallback(java.lang.String callback) {
            return (BatchUpdate) super.setCallback(callback);
          }

          @Override
          public BatchUpdate setFields(java.lang.String fields) {
            return (BatchUpdate) super.setFields(fields);
          }

          @Override
          public BatchUpdate setKey(java.lang.String key) {
            return (BatchUpdate) super.setKey(key);
          }

          @Override
          public BatchUpdate setOauthToken(java.lang.String oauthToken) {
            return (BatchUpdate) super.setOauthToken(oauthToken);
          }

          @Override
          public BatchUpdate setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (BatchUpdate) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public BatchUpdate setQuotaUser(java.lang.String quotaUser) {
            return (BatchUpdate) super.setQuotaUser(quotaUser);
          }

          @Override
          public BatchUpdate setUploadType(java.lang.String uploadType) {
            return (BatchUpdate) super.setUploadType(uploadType);
          }

          @Override
          public BatchUpdate setUploadProtocol(java.lang.String uploadProtocol) {
            return (BatchUpdate) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the agent to update or create intents in. Format:
           * `projects//agent`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the agent to update or create intents in. Format: `projects//agent`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the agent to update or create intents in. Format:
           * `projects//agent`.
           */
          public BatchUpdate setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public BatchUpdate set(String parameterName, Object value) {
            return (BatchUpdate) super.set(parameterName, value);
          }
        }
        /**
         * Creates an intent in the specified agent.
         *
         * Create a request for the method "intents.create".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The agent to create a intent for.
        Format: `projects//agent`.
         * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Intent}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Intent content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Intent> {

          private static final String REST_PATH = "v2beta1/{+parent}/intents";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent$");

          /**
           * Creates an intent in the specified agent.
           *
           * Create a request for the method "intents.create".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The agent to create a intent for.
        Format: `projects//agent`.
           * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Intent}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Intent content) {
            super(Dialogflow.this, "POST", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Intent.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The agent to create a intent for. Format: `projects//agent`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The agent to create a intent for. Format: `projects//agent`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The agent to create a intent for. Format: `projects//agent`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
            this.parent = parent;
            return this;
          }

          /** Optional. The resource view to apply to the returned intent. */
          @com.google.api.client.util.Key
          private java.lang.String intentView;

          /** Optional. The resource view to apply to the returned intent.
           */
          public java.lang.String getIntentView() {
            return intentView;
          }

          /** Optional. The resource view to apply to the returned intent. */
          public Create setIntentView(java.lang.String intentView) {
            this.intentView = intentView;
            return this;
          }

          /**
           * Optional. The language of training phrases, parameters and rich messages defined in
           * `intent`. If not specified, the agent's default language is used. [More than a dozen
           * languages](https://dialogflow.com/docs/reference/language) are supported. Note:
           * languages must be enabled in the agent, before they can be used.
           */
          @com.google.api.client.util.Key
          private java.lang.String languageCode;

          /** Optional. The language of training phrases, parameters and rich messages defined in `intent`. If
         not specified, the agent's default language is used. [More than a dozen
         languages](https://dialogflow.com/docs/reference/language) are supported. Note: languages must be
         enabled in the agent, before they can be used.
           */
          public java.lang.String getLanguageCode() {
            return languageCode;
          }

          /**
           * Optional. The language of training phrases, parameters and rich messages defined in
           * `intent`. If not specified, the agent's default language is used. [More than a dozen
           * languages](https://dialogflow.com/docs/reference/language) are supported. Note:
           * languages must be enabled in the agent, before they can be used.
           */
          public Create setLanguageCode(java.lang.String languageCode) {
            this.languageCode = languageCode;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes the specified intent and its direct or indirect followup intents.
         *
         * Create a request for the method "intents.delete".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the intent to delete. If this intent has direct or
        indirect followup intents,
         *        we also delete them.
        Format: `projects//agent/intents/`.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v2beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent/intents/[^/]+$");

          /**
           * Deletes the specified intent and its direct or indirect followup intents.
           *
           * Create a request for the method "intents.delete".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the intent to delete. If this intent has direct or
        indirect followup intents,
         *        we also delete them.
        Format: `projects//agent/intents/`.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/intents/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the intent to delete. If this intent has direct or indirect
           * followup intents, we also delete them.
           *
           * Format: `projects//agent/intents/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the intent to delete. If this intent has direct or indirect followup intents,
         we also delete them.

         Format: `projects//agent/intents/`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the intent to delete. If this intent has direct or indirect
           * followup intents, we also delete them.
           *
           * Format: `projects//agent/intents/`.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/intents/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Retrieves the specified intent.
         *
         * Create a request for the method "intents.get".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the intent.
        Format: `projects//agent/intents/`.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Intent> {

          private static final String REST_PATH = "v2beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent/intents/[^/]+$");

          /**
           * Retrieves the specified intent.
           *
           * Create a request for the method "intents.get".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the intent.
        Format: `projects//agent/intents/`.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Dialogflow.this, "GET", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Intent.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/intents/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the intent. Format: `projects//agent/intents/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the intent. Format: `projects//agent/intents/`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the intent. Format: `projects//agent/intents/`.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/intents/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** Optional. The resource view to apply to the returned intent. */
          @com.google.api.client.util.Key
          private java.lang.String intentView;

          /** Optional. The resource view to apply to the returned intent.
           */
          public java.lang.String getIntentView() {
            return intentView;
          }

          /** Optional. The resource view to apply to the returned intent. */
          public Get setIntentView(java.lang.String intentView) {
            this.intentView = intentView;
            return this;
          }

          /**
           * Optional. The language to retrieve training phrases, parameters and rich messages for.
           * If not specified, the agent's default language is used. [More than a dozen
           * languages](https://dialogflow.com/docs/reference/language) are supported. Note:
           * languages must be enabled in the agent, before they can be used.
           */
          @com.google.api.client.util.Key
          private java.lang.String languageCode;

          /** Optional. The language to retrieve training phrases, parameters and rich messages for. If not
         specified, the agent's default language is used. [More than a dozen
         languages](https://dialogflow.com/docs/reference/language) are supported. Note: languages must be
         enabled in the agent, before they can be used.
           */
          public java.lang.String getLanguageCode() {
            return languageCode;
          }

          /**
           * Optional. The language to retrieve training phrases, parameters and rich messages for.
           * If not specified, the agent's default language is used. [More than a dozen
           * languages](https://dialogflow.com/docs/reference/language) are supported. Note:
           * languages must be enabled in the agent, before they can be used.
           */
          public Get setLanguageCode(java.lang.String languageCode) {
            this.languageCode = languageCode;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Returns the list of all intents in the specified agent.
         *
         * Create a request for the method "intents.list".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The agent to list all intents from.
        Format: `projects//agent`.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListIntentsResponse> {

          private static final String REST_PATH = "v2beta1/{+parent}/intents";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent$");

          /**
           * Returns the list of all intents in the specified agent.
           *
           * Create a request for the method "intents.list".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The agent to list all intents from.
        Format: `projects//agent`.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Dialogflow.this, "GET", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListIntentsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The agent to list all intents from. Format: `projects//agent`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The agent to list all intents from. Format: `projects//agent`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The agent to list all intents from. Format: `projects//agent`.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
            this.parent = parent;
            return this;
          }

          /** Optional. The resource view to apply to the returned intent. */
          @com.google.api.client.util.Key
          private java.lang.String intentView;

          /** Optional. The resource view to apply to the returned intent.
           */
          public java.lang.String getIntentView() {
            return intentView;
          }

          /** Optional. The resource view to apply to the returned intent. */
          public List setIntentView(java.lang.String intentView) {
            this.intentView = intentView;
            return this;
          }

          /**
           * Optional. The language to list training phrases, parameters and rich messages for. If
           * not specified, the agent's default language is used. [More than a dozen
           * languages](https://dialogflow.com/docs/reference/language) are supported. Note:
           * languages must be enabled in the agent before they can be used.
           */
          @com.google.api.client.util.Key
          private java.lang.String languageCode;

          /** Optional. The language to list training phrases, parameters and rich messages for. If not
         specified, the agent's default language is used. [More than a dozen
         languages](https://dialogflow.com/docs/reference/language) are supported. Note: languages must be
         enabled in the agent before they can be used.
           */
          public java.lang.String getLanguageCode() {
            return languageCode;
          }

          /**
           * Optional. The language to list training phrases, parameters and rich messages for. If
           * not specified, the agent's default language is used. [More than a dozen
           * languages](https://dialogflow.com/docs/reference/language) are supported. Note:
           * languages must be enabled in the agent before they can be used.
           */
          public List setLanguageCode(java.lang.String languageCode) {
            this.languageCode = languageCode;
            return this;
          }

          /**
           * Optional. The maximum number of items to return in a single page. By default 100 and at
           * most 1000.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of items to return in a single page. By default 100 and at
           * most 1000.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** Optional. The next_page_token value returned from a previous list request. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. The next_page_token value returned from a previous list request.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** Optional. The next_page_token value returned from a previous list request. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates the specified intent.
         *
         * Create a request for the method "intents.patch".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Required for all methods except `create` (`create` populates the name
        automatically.
        The unique
         *        identifier of this intent.
        Format: `projects//agent/intents/`.
         * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Intent}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Intent content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Intent> {

          private static final String REST_PATH = "v2beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent/intents/[^/]+$");

          /**
           * Updates the specified intent.
           *
           * Create a request for the method "intents.patch".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required for all methods except `create` (`create` populates the name
        automatically.
        The unique
         *        identifier of this intent.
        Format: `projects//agent/intents/`.
           * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Intent}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Intent content) {
            super(Dialogflow.this, "PATCH", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Intent.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/intents/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required for all methods except `create` (`create` populates the name automatically.
           * The unique identifier of this intent. Format: `projects//agent/intents/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required for all methods except `create` (`create` populates the name automatically. The unique
         identifier of this intent. Format: `projects//agent/intents/`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required for all methods except `create` (`create` populates the name automatically.
           * The unique identifier of this intent. Format: `projects//agent/intents/`.
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/intents/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** Optional. The resource view to apply to the returned intent. */
          @com.google.api.client.util.Key
          private java.lang.String intentView;

          /** Optional. The resource view to apply to the returned intent.
           */
          public java.lang.String getIntentView() {
            return intentView;
          }

          /** Optional. The resource view to apply to the returned intent. */
          public Patch setIntentView(java.lang.String intentView) {
            this.intentView = intentView;
            return this;
          }

          /**
           * Optional. The language of training phrases, parameters and rich messages defined in
           * `intent`. If not specified, the agent's default language is used. [More than a dozen
           * languages](https://dialogflow.com/docs/reference/language) are supported. Note:
           * languages must be enabled in the agent, before they can be used.
           */
          @com.google.api.client.util.Key
          private java.lang.String languageCode;

          /** Optional. The language of training phrases, parameters and rich messages defined in `intent`. If
         not specified, the agent's default language is used. [More than a dozen
         languages](https://dialogflow.com/docs/reference/language) are supported. Note: languages must be
         enabled in the agent, before they can be used.
           */
          public java.lang.String getLanguageCode() {
            return languageCode;
          }

          /**
           * Optional. The language of training phrases, parameters and rich messages defined in
           * `intent`. If not specified, the agent's default language is used. [More than a dozen
           * languages](https://dialogflow.com/docs/reference/language) are supported. Note:
           * languages must be enabled in the agent, before they can be used.
           */
          public Patch setLanguageCode(java.lang.String languageCode) {
            this.languageCode = languageCode;
            return this;
          }

          /** Optional. The mask to control which fields get updated. */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Optional. The mask to control which fields get updated.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /** Optional. The mask to control which fields get updated. */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the KnowledgeBases collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Dialogflow dialogflow = new Dialogflow(...);}
       *   {@code Dialogflow.KnowledgeBases.List request = dialogflow.knowledgeBases().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public KnowledgeBases knowledgeBases() {
        return new KnowledgeBases();
      }

      /**
       * The "knowledgeBases" collection of methods.
       */
      public class KnowledgeBases {

        /**
         * Creates a knowledge base.
         *
         * Create a request for the method "knowledgeBases.create".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The project to create a knowledge base for.
        Format: `projects/`.
         * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase> {

          private static final String REST_PATH = "v2beta1/{+parent}/knowledgeBases";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent$");

          /**
           * Creates a knowledge base.
           *
           * Create a request for the method "knowledgeBases.create".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The project to create a knowledge base for.
        Format: `projects/`.
           * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase content) {
            super(Dialogflow.this, "POST", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The project to create a knowledge base for. Format: `projects/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The project to create a knowledge base for. Format: `projects/`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The project to create a knowledge base for. Format: `projects/`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes the specified knowledge base.
         *
         * Create a request for the method "knowledgeBases.delete".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the knowledge base to delete.
        Format: `projects//knowledgeBases/`.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v2beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent/knowledgeBases/[^/]+$");

          /**
           * Deletes the specified knowledge base.
           *
           * Create a request for the method "knowledgeBases.delete".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the knowledge base to delete.
        Format: `projects//knowledgeBases/`.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/knowledgeBases/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the knowledge base to delete. Format:
           * `projects//knowledgeBases/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the knowledge base to delete. Format: `projects//knowledgeBases/`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the knowledge base to delete. Format:
           * `projects//knowledgeBases/`.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/knowledgeBases/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. Force deletes the knowledge base. When set to true, any documents in the
           * knowledge base are also deleted.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean force;

          /** Optional. Force deletes the knowledge base. When set to true, any documents in the knowledge base
         are also deleted.
           */
          public java.lang.Boolean getForce() {
            return force;
          }

          /**
           * Optional. Force deletes the knowledge base. When set to true, any documents in the
           * knowledge base are also deleted.
           */
          public Delete setForce(java.lang.Boolean force) {
            this.force = force;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Retrieves the specified knowledge base.
         *
         * Create a request for the method "knowledgeBases.get".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the knowledge base to retrieve.
        Format `projects//knowledgeBases/`.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase> {

          private static final String REST_PATH = "v2beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent/knowledgeBases/[^/]+$");

          /**
           * Retrieves the specified knowledge base.
           *
           * Create a request for the method "knowledgeBases.get".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the knowledge base to retrieve.
        Format `projects//knowledgeBases/`.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Dialogflow.this, "GET", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/knowledgeBases/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the knowledge base to retrieve. Format
           * `projects//knowledgeBases/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the knowledge base to retrieve. Format `projects//knowledgeBases/`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the knowledge base to retrieve. Format
           * `projects//knowledgeBases/`.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/knowledgeBases/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Returns the list of all knowledge bases of the specified agent.
         *
         * Create a request for the method "knowledgeBases.list".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The project to list of knowledge bases for.
        Format: `projects/`.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListKnowledgeBasesResponse> {

          private static final String REST_PATH = "v2beta1/{+parent}/knowledgeBases";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent$");

          /**
           * Returns the list of all knowledge bases of the specified agent.
           *
           * Create a request for the method "knowledgeBases.list".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The project to list of knowledge bases for.
        Format: `projects/`.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Dialogflow.this, "GET", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListKnowledgeBasesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The project to list of knowledge bases for. Format: `projects/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The project to list of knowledge bases for. Format: `projects/`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The project to list of knowledge bases for. Format: `projects/`.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. The maximum number of items to return in a single page. By default 10 and at
           * most 100.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of items to return in a single page. By default 10 and at most 100.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of items to return in a single page. By default 10 and at
           * most 100.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** Optional. The next_page_token value returned from a previous list request. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. The next_page_token value returned from a previous list request.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** Optional. The next_page_token value returned from a previous list request. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Documents collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Dialogflow dialogflow = new Dialogflow(...);}
         *   {@code Dialogflow.Documents.List request = dialogflow.documents().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Documents documents() {
          return new Documents();
        }

        /**
         * The "documents" collection of methods.
         */
        public class Documents {

          /**
           * Creates a new document.
           *
           * Operation
           *
           * Create a request for the method "documents.create".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The knoweldge base to create a document for.
          Format: `projects//knowledgeBases/`.
           * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Document}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Document content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v2beta1/{+parent}/documents";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/agent/knowledgeBases/[^/]+$");

            /**
             * Creates a new document.
             *
             * Operation
             *
             * Create a request for the method "documents.create".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The knoweldge base to create a document for.
          Format: `projects//knowledgeBases/`.
             * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Document}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Document content) {
              super(Dialogflow.this, "POST", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/agent/knowledgeBases/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The knoweldge base to create a document for. Format:
             * `projects//knowledgeBases/`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The knoweldge base to create a document for. Format: `projects//knowledgeBases/`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The knoweldge base to create a document for. Format:
             * `projects//knowledgeBases/`.
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/agent/knowledgeBases/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes the specified document.
           *
           * Operation
           *
           * Create a request for the method "documents.delete".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name The name of the document to delete.
          Format: `projects//knowledgeBases//documents/`.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v2beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/agent/knowledgeBases/[^/]+/documents/[^/]+$");

            /**
             * Deletes the specified document.
             *
             * Operation
             *
             * Create a request for the method "documents.delete".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the document to delete.
          Format: `projects//knowledgeBases//documents/`.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/agent/knowledgeBases/[^/]+/documents/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * The name of the document to delete. Format: `projects//knowledgeBases//documents/`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the document to delete. Format: `projects//knowledgeBases//documents/`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * The name of the document to delete. Format: `projects//knowledgeBases//documents/`.
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/agent/knowledgeBases/[^/]+/documents/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Retrieves the specified document.
           *
           * Create a request for the method "documents.get".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the document to retrieve.
          Format `projects//knowledgeBases//documents/`.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Document> {

            private static final String REST_PATH = "v2beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/agent/knowledgeBases/[^/]+/documents/[^/]+$");

            /**
             * Retrieves the specified document.
             *
             * Create a request for the method "documents.get".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the document to retrieve.
          Format `projects//knowledgeBases//documents/`.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Dialogflow.this, "GET", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Document.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/agent/knowledgeBases/[^/]+/documents/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the document to retrieve. Format
             * `projects//knowledgeBases//documents/`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the document to retrieve. Format `projects//knowledgeBases//documents/`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the document to retrieve. Format
             * `projects//knowledgeBases//documents/`.
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/agent/knowledgeBases/[^/]+/documents/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Returns the list of all documents of the knowledge base.
           *
           * Create a request for the method "documents.list".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The knowledge base to list all documents for.
          Format: `projects//knowledgeBases/`.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListDocumentsResponse> {

            private static final String REST_PATH = "v2beta1/{+parent}/documents";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/agent/knowledgeBases/[^/]+$");

            /**
             * Returns the list of all documents of the knowledge base.
             *
             * Create a request for the method "documents.list".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The knowledge base to list all documents for.
          Format: `projects//knowledgeBases/`.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Dialogflow.this, "GET", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListDocumentsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/agent/knowledgeBases/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The knowledge base to list all documents for. Format:
             * `projects//knowledgeBases/`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The knowledge base to list all documents for. Format: `projects//knowledgeBases/`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The knowledge base to list all documents for. Format:
             * `projects//knowledgeBases/`.
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/agent/knowledgeBases/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Optional. The maximum number of items to return in a single page. By default 10 and
             * at most 100.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. The maximum number of items to return in a single page. By default 10 and at most 100.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. The maximum number of items to return in a single page. By default 10 and
             * at most 100.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** Optional. The next_page_token value returned from a previous list request. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. The next_page_token value returned from a previous list request.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** Optional. The next_page_token value returned from a previous list request. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the Sessions collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Dialogflow dialogflow = new Dialogflow(...);}
       *   {@code Dialogflow.Sessions.List request = dialogflow.sessions().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Sessions sessions() {
        return new Sessions();
      }

      /**
       * The "sessions" collection of methods.
       */
      public class Sessions {

        /**
         * Deletes all active contexts in the specified session.
         *
         * Create a request for the method "sessions.deleteContexts".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link DeleteContexts#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the session to delete all contexts from. Format:
        `projects//agent/sessions/`
         *        or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified
         *        we assume default 'draft'
        environment. If `User ID` is not specified, we assume default
         *        '-' user.
         * @return the request
         */
        public DeleteContexts deleteContexts(java.lang.String parent) throws java.io.IOException {
          DeleteContexts result = new DeleteContexts(parent);
          initialize(result);
          return result;
        }

        public class DeleteContexts extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v2beta1/{+parent}/contexts";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent/sessions/[^/]+$");

          /**
           * Deletes all active contexts in the specified session.
           *
           * Create a request for the method "sessions.deleteContexts".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link DeleteContexts#execute()} method to invoke the remote
           * operation. <p> {@link DeleteContexts#initialize(com.google.api.client.googleapis.services.Abstr
           * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
           * the constructor. </p>
           *
           * @param parent Required. The name of the session to delete all contexts from. Format:
        `projects//agent/sessions/`
         *        or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified
         *        we assume default 'draft'
        environment. If `User ID` is not specified, we assume default
         *        '-' user.
           * @since 1.13
           */
          protected DeleteContexts(java.lang.String parent) {
            super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleProtobufEmpty.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent/sessions/[^/]+$");
            }
          }

          @Override
          public DeleteContexts set$Xgafv(java.lang.String $Xgafv) {
            return (DeleteContexts) super.set$Xgafv($Xgafv);
          }

          @Override
          public DeleteContexts setAccessToken(java.lang.String accessToken) {
            return (DeleteContexts) super.setAccessToken(accessToken);
          }

          @Override
          public DeleteContexts setAlt(java.lang.String alt) {
            return (DeleteContexts) super.setAlt(alt);
          }

          @Override
          public DeleteContexts setCallback(java.lang.String callback) {
            return (DeleteContexts) super.setCallback(callback);
          }

          @Override
          public DeleteContexts setFields(java.lang.String fields) {
            return (DeleteContexts) super.setFields(fields);
          }

          @Override
          public DeleteContexts setKey(java.lang.String key) {
            return (DeleteContexts) super.setKey(key);
          }

          @Override
          public DeleteContexts setOauthToken(java.lang.String oauthToken) {
            return (DeleteContexts) super.setOauthToken(oauthToken);
          }

          @Override
          public DeleteContexts setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (DeleteContexts) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public DeleteContexts setQuotaUser(java.lang.String quotaUser) {
            return (DeleteContexts) super.setQuotaUser(quotaUser);
          }

          @Override
          public DeleteContexts setUploadType(java.lang.String uploadType) {
            return (DeleteContexts) super.setUploadType(uploadType);
          }

          @Override
          public DeleteContexts setUploadProtocol(java.lang.String uploadProtocol) {
            return (DeleteContexts) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the session to delete all contexts from. Format:
           * `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If
           * `Environment ID` is not specified we assume default 'draft' environment. If `User ID`
           * is not specified, we assume default '-' user.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the session to delete all contexts from. Format: `projects//agent/sessions/`
         or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified we assume
         default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the session to delete all contexts from. Format:
           * `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If
           * `Environment ID` is not specified we assume default 'draft' environment. If `User ID`
           * is not specified, we assume default '-' user.
           */
          public DeleteContexts setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent/sessions/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public DeleteContexts set(String parameterName, Object value) {
            return (DeleteContexts) super.set(parameterName, value);
          }
        }
        /**
         * Processes a natural language query and returns structured, actionable data as a result. This
         * method is not idempotent, because it may cause contexts and session entity types to be updated,
         * which in turn might affect results of future queries.
         *
         * Create a request for the method "sessions.detectIntent".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link DetectIntent#execute()} method to invoke the remote operation.
         *
         * @param session Required. The name of the session this query is sent to. Format:
        `projects//agent/sessions/`, or
         *        `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we
         *        assume
        default 'draft' environment. If `User ID` is not specified, we are using
        "-". It’s
         *        up to the API caller to choose an appropriate `Session ID` and
        `User Id`. They can be a
         *        random numbers or some type of user and session
        identifiers (preferably hashed). The
         *        length of the `Session ID` and
        `User ID` must not exceed 36 characters.
         * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1DetectIntentRequest}
         * @return the request
         */
        public DetectIntent detectIntent(java.lang.String session, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1DetectIntentRequest content) throws java.io.IOException {
          DetectIntent result = new DetectIntent(session, content);
          initialize(result);
          return result;
        }

        public class DetectIntent extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1DetectIntentResponse> {

          private static final String REST_PATH = "v2beta1/{+session}:detectIntent";

          private final java.util.regex.Pattern SESSION_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent/sessions/[^/]+$");

          /**
           * Processes a natural language query and returns structured, actionable data as a result. This
           * method is not idempotent, because it may cause contexts and session entity types to be updated,
           * which in turn might affect results of future queries.
           *
           * Create a request for the method "sessions.detectIntent".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link DetectIntent#execute()} method to invoke the remote
           * operation. <p> {@link
           * DetectIntent#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param session Required. The name of the session this query is sent to. Format:
        `projects//agent/sessions/`, or
         *        `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we
         *        assume
        default 'draft' environment. If `User ID` is not specified, we are using
        "-". It’s
         *        up to the API caller to choose an appropriate `Session ID` and
        `User Id`. They can be a
         *        random numbers or some type of user and session
        identifiers (preferably hashed). The
         *        length of the `Session ID` and
        `User ID` must not exceed 36 characters.
           * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1DetectIntentRequest}
           * @since 1.13
           */
          protected DetectIntent(java.lang.String session, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1DetectIntentRequest content) {
            super(Dialogflow.this, "POST", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1DetectIntentResponse.class);
            this.session = com.google.api.client.util.Preconditions.checkNotNull(session, "Required parameter session must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(SESSION_PATTERN.matcher(session).matches(),
                  "Parameter session must conform to the pattern " +
                  "^projects/[^/]+/agent/sessions/[^/]+$");
            }
          }

          @Override
          public DetectIntent set$Xgafv(java.lang.String $Xgafv) {
            return (DetectIntent) super.set$Xgafv($Xgafv);
          }

          @Override
          public DetectIntent setAccessToken(java.lang.String accessToken) {
            return (DetectIntent) super.setAccessToken(accessToken);
          }

          @Override
          public DetectIntent setAlt(java.lang.String alt) {
            return (DetectIntent) super.setAlt(alt);
          }

          @Override
          public DetectIntent setCallback(java.lang.String callback) {
            return (DetectIntent) super.setCallback(callback);
          }

          @Override
          public DetectIntent setFields(java.lang.String fields) {
            return (DetectIntent) super.setFields(fields);
          }

          @Override
          public DetectIntent setKey(java.lang.String key) {
            return (DetectIntent) super.setKey(key);
          }

          @Override
          public DetectIntent setOauthToken(java.lang.String oauthToken) {
            return (DetectIntent) super.setOauthToken(oauthToken);
          }

          @Override
          public DetectIntent setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (DetectIntent) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public DetectIntent setQuotaUser(java.lang.String quotaUser) {
            return (DetectIntent) super.setQuotaUser(quotaUser);
          }

          @Override
          public DetectIntent setUploadType(java.lang.String uploadType) {
            return (DetectIntent) super.setUploadType(uploadType);
          }

          @Override
          public DetectIntent setUploadProtocol(java.lang.String uploadProtocol) {
            return (DetectIntent) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the session this query is sent to. Format:
           * `projects//agent/sessions/`, or `projects//agent/environments//users//sessions/`. If
           * `Environment ID` is not specified, we assume default 'draft' environment. If `User ID`
           * is not specified, we are using "-". It’s up to the API caller to choose an appropriate
           * `Session ID` and `User Id`. They can be a random numbers or some type of user and
           * session identifiers (preferably hashed). The length of the `Session ID` and `User ID`
           * must not exceed 36 characters.
           */
          @com.google.api.client.util.Key
          private java.lang.String session;

          /** Required. The name of the session this query is sent to. Format: `projects//agent/sessions/`, or
         `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume
         default 'draft' environment. If `User ID` is not specified, we are using "-". It’s up to the API
         caller to choose an appropriate `Session ID` and `User Id`. They can be a random numbers or some
         type of user and session identifiers (preferably hashed). The length of the `Session ID` and `User
         ID` must not exceed 36 characters.
           */
          public java.lang.String getSession() {
            return session;
          }

          /**
           * Required. The name of the session this query is sent to. Format:
           * `projects//agent/sessions/`, or `projects//agent/environments//users//sessions/`. If
           * `Environment ID` is not specified, we assume default 'draft' environment. If `User ID`
           * is not specified, we are using "-". It’s up to the API caller to choose an appropriate
           * `Session ID` and `User Id`. They can be a random numbers or some type of user and
           * session identifiers (preferably hashed). The length of the `Session ID` and `User ID`
           * must not exceed 36 characters.
           */
          public DetectIntent setSession(java.lang.String session) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(SESSION_PATTERN.matcher(session).matches(),
                  "Parameter session must conform to the pattern " +
                  "^projects/[^/]+/agent/sessions/[^/]+$");
            }
            this.session = session;
            return this;
          }

          @Override
          public DetectIntent set(String parameterName, Object value) {
            return (DetectIntent) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Contexts collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Dialogflow dialogflow = new Dialogflow(...);}
         *   {@code Dialogflow.Contexts.List request = dialogflow.contexts().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Contexts contexts() {
          return new Contexts();
        }

        /**
         * The "contexts" collection of methods.
         */
        public class Contexts {

          /**
           * Creates a context.
           *
           * If the specified context already exists, overrides the context.
           *
           * Create a request for the method "contexts.create".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The session to create a context for.
          Format: `projects//agent/sessions/` or
           *        `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we
           *        assume
          default 'draft' environment. If `User ID` is not specified, we assume
          default '-'
           *        user.
           * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context> {

            private static final String REST_PATH = "v2beta1/{+parent}/contexts";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/agent/sessions/[^/]+$");

            /**
             * Creates a context.
             *
             * If the specified context already exists, overrides the context.
             *
             * Create a request for the method "contexts.create".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The session to create a context for.
          Format: `projects//agent/sessions/` or
           *        `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we
           *        assume
          default 'draft' environment. If `User ID` is not specified, we assume
          default '-'
           *        user.
             * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context content) {
              super(Dialogflow.this, "POST", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/agent/sessions/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The session to create a context for. Format: `projects//agent/sessions/` or
             * `projects//agent/environments//users//sessions/`. If `Environment ID` is not
             * specified, we assume default 'draft' environment. If `User ID` is not specified, we
             * assume default '-' user.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The session to create a context for. Format: `projects//agent/sessions/` or
           `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume
           default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The session to create a context for. Format: `projects//agent/sessions/` or
             * `projects//agent/environments//users//sessions/`. If `Environment ID` is not
             * specified, we assume default 'draft' environment. If `User ID` is not specified, we
             * assume default '-' user.
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/agent/sessions/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes the specified context.
           *
           * Create a request for the method "contexts.delete".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the context to delete. Format:
          `projects//agent/sessions//contexts/`
          or
           *        `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is
          not
           *        specified, we assume default 'draft' environment. If `User ID` is not
          specified, we assume
           *        default '-' user.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v2beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$");

            /**
             * Deletes the specified context.
             *
             * Create a request for the method "contexts.delete".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the context to delete. Format:
          `projects//agent/sessions//contexts/`
          or
           *        `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is
          not
           *        specified, we assume default 'draft' environment. If `User ID` is not
          specified, we assume
           *        default '-' user.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the context to delete. Format:
             * `projects//agent/sessions//contexts/` or
             * `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is
             * not specified, we assume default 'draft' environment. If `User ID` is not specified,
             * we assume default '-' user.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the context to delete. Format: `projects//agent/sessions//contexts/` or
           `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is not specified,
           we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the context to delete. Format:
             * `projects//agent/sessions//contexts/` or
             * `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is
             * not specified, we assume default 'draft' environment. If `User ID` is not specified,
             * we assume default '-' user.
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Retrieves the specified context.
           *
           * Create a request for the method "contexts.get".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the context. Format:
          `projects//agent/sessions//contexts/`
          or
           *        `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is
          not
           *        specified, we assume default 'draft' environment. If `User ID` is not
          specified, we assume
           *        default '-' user.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context> {

            private static final String REST_PATH = "v2beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$");

            /**
             * Retrieves the specified context.
             *
             * Create a request for the method "contexts.get".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the context. Format:
          `projects//agent/sessions//contexts/`
          or
           *        `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is
          not
           *        specified, we assume default 'draft' environment. If `User ID` is not
          specified, we assume
           *        default '-' user.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Dialogflow.this, "GET", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the context. Format: `projects//agent/sessions//contexts/` or
             * `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is
             * not specified, we assume default 'draft' environment. If `User ID` is not specified,
             * we assume default '-' user.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the context. Format: `projects//agent/sessions//contexts/` or
           `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is not specified,
           we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the context. Format: `projects//agent/sessions//contexts/` or
             * `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is
             * not specified, we assume default 'draft' environment. If `User ID` is not specified,
             * we assume default '-' user.
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Returns the list of all contexts in the specified session.
           *
           * Create a request for the method "contexts.list".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The session to list all contexts from.
          Format: `projects//agent/sessions/` or
           *        `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we
           *        assume
          default 'draft' environment. If `User ID` is not specified, we assume
          default '-'
           *        user.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListContextsResponse> {

            private static final String REST_PATH = "v2beta1/{+parent}/contexts";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/agent/sessions/[^/]+$");

            /**
             * Returns the list of all contexts in the specified session.
             *
             * Create a request for the method "contexts.list".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The session to list all contexts from.
          Format: `projects//agent/sessions/` or
           *        `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we
           *        assume
          default 'draft' environment. If `User ID` is not specified, we assume
          default '-'
           *        user.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Dialogflow.this, "GET", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListContextsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/agent/sessions/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The session to list all contexts from. Format: `projects//agent/sessions/`
             * or `projects//agent/environments//users//sessions/`. If `Environment ID` is not
             * specified, we assume default 'draft' environment. If `User ID` is not specified, we
             * assume default '-' user.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The session to list all contexts from. Format: `projects//agent/sessions/` or
           `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume
           default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The session to list all contexts from. Format: `projects//agent/sessions/`
             * or `projects//agent/environments//users//sessions/`. If `Environment ID` is not
             * specified, we assume default 'draft' environment. If `User ID` is not specified, we
             * assume default '-' user.
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/agent/sessions/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Optional. The maximum number of items to return in a single page. By default 100 and
             * at most 1000.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. The maximum number of items to return in a single page. By default 100 and
             * at most 1000.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** Optional. The next_page_token value returned from a previous list request. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. The next_page_token value returned from a previous list request.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** Optional. The next_page_token value returned from a previous list request. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates the specified context.
           *
           * Create a request for the method "contexts.patch".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Required. The unique identifier of the context. Format:
          `projects//agent/sessions//contexts/`,
          or
           *        `projects//agent/environments//users//sessions//contexts/`. The `Context ID` is
          always
           *        converted to lowercase. If `Environment ID` is not specified, we
          assume default 'draft'
           *        environment. If `User ID` is not specified, we
          assume default '-' user.
           * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context> {

            private static final String REST_PATH = "v2beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$");

            /**
             * Updates the specified context.
             *
             * Create a request for the method "contexts.patch".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The unique identifier of the context. Format:
          `projects//agent/sessions//contexts/`,
          or
           *        `projects//agent/environments//users//sessions//contexts/`. The `Context ID` is
          always
           *        converted to lowercase. If `Environment ID` is not specified, we
          assume default 'draft'
           *        environment. If `User ID` is not specified, we
          assume default '-' user.
             * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context content) {
              super(Dialogflow.this, "PATCH", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The unique identifier of the context. Format:
             * `projects//agent/sessions//contexts/`, or
             * `projects//agent/environments//users//sessions//contexts/`. The `Context ID` is
             * always converted to lowercase. If `Environment ID` is not specified, we assume
             * default 'draft' environment. If `User ID` is not specified, we assume default '-'
             * user.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The unique identifier of the context. Format: `projects//agent/sessions//contexts/`, or
           `projects//agent/environments//users//sessions//contexts/`. The `Context ID` is always converted to
           lowercase. If `Environment ID` is not specified, we assume default 'draft' environment. If `User
           ID` is not specified, we assume default '-' user.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The unique identifier of the context. Format:
             * `projects//agent/sessions//contexts/`, or
             * `projects//agent/environments//users//sessions//contexts/`. The `Context ID` is
             * always converted to lowercase. If `Environment ID` is not specified, we assume
             * default 'draft' environment. If `User ID` is not specified, we assume default '-'
             * user.
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** Optional. The mask to control which fields get updated. */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Optional. The mask to control which fields get updated.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /** Optional. The mask to control which fields get updated. */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the EntityTypes collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Dialogflow dialogflow = new Dialogflow(...);}
         *   {@code Dialogflow.EntityTypes.List request = dialogflow.entityTypes().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public EntityTypes entityTypes() {
          return new EntityTypes();
        }

        /**
         * The "entityTypes" collection of methods.
         */
        public class EntityTypes {

          /**
           * Creates a session entity type.
           *
           * If the specified session entity type already exists, overrides the session entity type.
           *
           * Create a request for the method "entityTypes.create".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The session to create a session entity type for.
          Format: `projects//agent/sessions/` or
           *        `projects//agent/environments//users//
          sessions/`. If `Environment ID` is not specified,
           *        we assume
          default 'draft' environment. If `User ID` is not specified, we assume
          default
           *        '-' user.
           * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType> {

            private static final String REST_PATH = "v2beta1/{+parent}/entityTypes";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/agent/sessions/[^/]+$");

            /**
             * Creates a session entity type.
             *
             * If the specified session entity type already exists, overrides the session entity type.
             *
             * Create a request for the method "entityTypes.create".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The session to create a session entity type for.
          Format: `projects//agent/sessions/` or
           *        `projects//agent/environments//users//
          sessions/`. If `Environment ID` is not specified,
           *        we assume
          default 'draft' environment. If `User ID` is not specified, we assume
          default
           *        '-' user.
             * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType content) {
              super(Dialogflow.this, "POST", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/agent/sessions/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The session to create a session entity type for. Format:
             * `projects//agent/sessions/` or `projects//agent/environments//users// sessions/`. If
             * `Environment ID` is not specified, we assume default 'draft' environment. If `User
             * ID` is not specified, we assume default '-' user.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The session to create a session entity type for. Format: `projects//agent/sessions/` or
           `projects//agent/environments//users// sessions/`. If `Environment ID` is not specified, we assume
           default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The session to create a session entity type for. Format:
             * `projects//agent/sessions/` or `projects//agent/environments//users// sessions/`. If
             * `Environment ID` is not specified, we assume default 'draft' environment. If `User
             * ID` is not specified, we assume default '-' user.
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/agent/sessions/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes the specified session entity type.
           *
           * Create a request for the method "entityTypes.delete".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the entity type to delete. Format:
          `projects//agent/sessions//entityTypes/` or
           *        `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not
           *        specified, we assume default 'draft'
          environment. If `User ID` is not specified, we assume
           *        default '-' user.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v2beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$");

            /**
             * Deletes the specified session entity type.
             *
             * Create a request for the method "entityTypes.delete".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the entity type to delete. Format:
          `projects//agent/sessions//entityTypes/` or
           *        `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not
           *        specified, we assume default 'draft'
          environment. If `User ID` is not specified, we assume
           *        default '-' user.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the entity type to delete. Format:
             * `projects//agent/sessions//entityTypes/` or
             * `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is
             * not specified, we assume default 'draft' environment. If `User ID` is not specified,
             * we assume default '-' user.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the entity type to delete. Format: `projects//agent/sessions//entityTypes/`
           or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not
           specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default
           '-' user.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the entity type to delete. Format:
             * `projects//agent/sessions//entityTypes/` or
             * `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is
             * not specified, we assume default 'draft' environment. If `User ID` is not specified,
             * we assume default '-' user.
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Retrieves the specified session entity type.
           *
           * Create a request for the method "entityTypes.get".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the session entity type. Format:
          `projects//agent/sessions//entityTypes/` or
           *        `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not
           *        specified, we assume default 'draft'
          environment. If `User ID` is not specified, we assume
           *        default '-' user.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType> {

            private static final String REST_PATH = "v2beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$");

            /**
             * Retrieves the specified session entity type.
             *
             * Create a request for the method "entityTypes.get".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the session entity type. Format:
          `projects//agent/sessions//entityTypes/` or
           *        `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not
           *        specified, we assume default 'draft'
          environment. If `User ID` is not specified, we assume
           *        default '-' user.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Dialogflow.this, "GET", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the session entity type. Format:
             * `projects//agent/sessions//entityTypes/` or
             * `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is
             * not specified, we assume default 'draft' environment. If `User ID` is not specified,
             * we assume default '-' user.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the session entity type. Format: `projects//agent/sessions//entityTypes/` or
           `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not
           specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default
           '-' user.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the session entity type. Format:
             * `projects//agent/sessions//entityTypes/` or
             * `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is
             * not specified, we assume default 'draft' environment. If `User ID` is not specified,
             * we assume default '-' user.
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Returns the list of all session entity types in the specified session.
           *
           * Create a request for the method "entityTypes.list".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The session to list all session entity types from.
          Format: `projects//agent/sessions/` or
           *        `projects//agent/environments//users//
          sessions/`.
          If `Environment ID` is not specified,
           *        we assume default 'draft'
          environment. If `User ID` is not specified, we assume default
           *        '-' user.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListSessionEntityTypesResponse> {

            private static final String REST_PATH = "v2beta1/{+parent}/entityTypes";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/agent/sessions/[^/]+$");

            /**
             * Returns the list of all session entity types in the specified session.
             *
             * Create a request for the method "entityTypes.list".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The session to list all session entity types from.
          Format: `projects//agent/sessions/` or
           *        `projects//agent/environments//users//
          sessions/`.
          If `Environment ID` is not specified,
           *        we assume default 'draft'
          environment. If `User ID` is not specified, we assume default
           *        '-' user.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Dialogflow.this, "GET", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListSessionEntityTypesResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/agent/sessions/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The session to list all session entity types from. Format:
             * `projects//agent/sessions/` or `projects//agent/environments//users// sessions/`. If
             * `Environment ID` is not specified, we assume default 'draft' environment. If `User
             * ID` is not specified, we assume default '-' user.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The session to list all session entity types from. Format: `projects//agent/sessions/` or
           `projects//agent/environments//users// sessions/`. If `Environment ID` is not specified, we assume
           default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The session to list all session entity types from. Format:
             * `projects//agent/sessions/` or `projects//agent/environments//users// sessions/`. If
             * `Environment ID` is not specified, we assume default 'draft' environment. If `User
             * ID` is not specified, we assume default '-' user.
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/agent/sessions/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Optional. The maximum number of items to return in a single page. By default 100 and
             * at most 1000.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. The maximum number of items to return in a single page. By default 100 and
             * at most 1000.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** Optional. The next_page_token value returned from a previous list request. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. The next_page_token value returned from a previous list request.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** Optional. The next_page_token value returned from a previous list request. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates the specified session entity type.
           *
           * Create a request for the method "entityTypes.patch".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Required. The unique identifier of this session entity type. Format:
           *        `projects//agent/sessions//entityTypes/`, or
           *        `projects//agent/environments//users//sessions//entityTypes/`.
          If `Environment ID` is not
           *        specified, we assume default 'draft'
          environment. If `User ID` is not specified, we assume
           *        default '-' user.
          `` must be the display name of an existing entity
          type in the same agent
           *        that will be overridden or supplemented.
           * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType> {

            private static final String REST_PATH = "v2beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$");

            /**
             * Updates the specified session entity type.
             *
             * Create a request for the method "entityTypes.patch".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The unique identifier of this session entity type. Format:
           *        `projects//agent/sessions//entityTypes/`, or
           *        `projects//agent/environments//users//sessions//entityTypes/`.
          If `Environment ID` is not
           *        specified, we assume default 'draft'
          environment. If `User ID` is not specified, we assume
           *        default '-' user.
          `` must be the display name of an existing entity
          type in the same agent
           *        that will be overridden or supplemented.
             * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType content) {
              super(Dialogflow.this, "PATCH", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The unique identifier of this session entity type. Format:
             * `projects//agent/sessions//entityTypes/`, or
             * `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is
             * not specified, we assume default 'draft' environment. If `User ID` is not specified,
             * we assume default '-' user.
             *
             * `` must be the display name of an existing entity type in the same agent that will be
             * overridden or supplemented.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The unique identifier of this session entity type. Format:
           `projects//agent/sessions//entityTypes/`, or
           `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not
           specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default
           '-' user.

           `` must be the display name of an existing entity type in the same agent that will be overridden or
           supplemented.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The unique identifier of this session entity type. Format:
             * `projects//agent/sessions//entityTypes/`, or
             * `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is
             * not specified, we assume default 'draft' environment. If `User ID` is not specified,
             * we assume default '-' user.
             *
             * `` must be the display name of an existing entity type in the same agent that will be
             * overridden or supplemented.
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** Optional. The mask to control which fields get updated. */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Optional. The mask to control which fields get updated.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /** Optional. The mask to control which fields get updated. */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }

        }
      }
    }
    /**
     * An accessor for creating requests from the ConversationProfiles collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Dialogflow dialogflow = new Dialogflow(...);}
     *   {@code Dialogflow.ConversationProfiles.List request = dialogflow.conversationProfiles().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public ConversationProfiles conversationProfiles() {
      return new ConversationProfiles();
    }

    /**
     * The "conversationProfiles" collection of methods.
     */
    public class ConversationProfiles {

      /**
       * Creates a conversation profile in the specified project.
       *
       * Create a request for the method "conversationProfiles.create".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The project to create a conversation profile for.
      Format: `projects/`.
       * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ConversationProfile}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ConversationProfile content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ConversationProfile> {

        private static final String REST_PATH = "v2beta1/{+parent}/conversationProfiles";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Creates a conversation profile in the specified project.
         *
         * Create a request for the method "conversationProfiles.create".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The project to create a conversation profile for.
      Format: `projects/`.
         * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ConversationProfile}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ConversationProfile content) {
          super(Dialogflow.this, "POST", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ConversationProfile.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The project to create a conversation profile for. Format: `projects/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The project to create a conversation profile for. Format: `projects/`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The project to create a conversation profile for. Format: `projects/`.
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes the specified conversation profile.
       *
       * Create a request for the method "conversationProfiles.delete".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the conversation profile to delete.
      Format: `projects//conversationProfiles/`.
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v2beta1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/conversationProfiles/[^/]+$");

        /**
         * Deletes the specified conversation profile.
         *
         * Create a request for the method "conversationProfiles.delete".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the conversation profile to delete.
      Format: `projects//conversationProfiles/`.
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/conversationProfiles/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the conversation profile to delete. Format:
         * `projects//conversationProfiles/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the conversation profile to delete. Format:
       `projects//conversationProfiles/`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the conversation profile to delete. Format:
         * `projects//conversationProfiles/`.
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/conversationProfiles/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Retrieves the specified conversation profile.
       *
       * Create a request for the method "conversationProfiles.get".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The resource name of the conversation profile.
      Format: `projects//conversationProfiles/`.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ConversationProfile> {

        private static final String REST_PATH = "v2beta1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/conversationProfiles/[^/]+$");

        /**
         * Retrieves the specified conversation profile.
         *
         * Create a request for the method "conversationProfiles.get".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The resource name of the conversation profile.
      Format: `projects//conversationProfiles/`.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Dialogflow.this, "GET", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ConversationProfile.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/conversationProfiles/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The resource name of the conversation profile. Format:
         * `projects//conversationProfiles/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The resource name of the conversation profile. Format: `projects//conversationProfiles/`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The resource name of the conversation profile. Format:
         * `projects//conversationProfiles/`.
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/conversationProfiles/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Returns the list of all conversation profiles in the specified project.
       *
       * Create a request for the method "conversationProfiles.list".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The project to list all conversation profiles from.
      Format: `projects/`.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListConversationProfilesResponse> {

        private static final String REST_PATH = "v2beta1/{+parent}/conversationProfiles";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Returns the list of all conversation profiles in the specified project.
         *
         * Create a request for the method "conversationProfiles.list".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The project to list all conversation profiles from.
      Format: `projects/`.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Dialogflow.this, "GET", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListConversationProfilesResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The project to list all conversation profiles from. Format: `projects/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The project to list all conversation profiles from. Format: `projects/`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The project to list all conversation profiles from. Format: `projects/`.
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. The maximum number of items to return in a single page. By default 100 and at
         * most 1000.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Optional. The maximum number of items to return in a single page. By default 100 and at
         * most 1000.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** Optional. The next_page_token value returned from a previous list request. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional. The next_page_token value returned from a previous list request.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** Optional. The next_page_token value returned from a previous list request. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates the specified conversation profile.
       *
       * Create a request for the method "conversationProfiles.patch".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Required for all methods except `create` (`create` populates the name
      automatically).
      The unique
       *        identifier of this conversation profile.
      Format: `projects//conversationProfiles/`.
       * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ConversationProfile}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ConversationProfile content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ConversationProfile> {

        private static final String REST_PATH = "v2beta1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/conversationProfiles/[^/]+$");

        /**
         * Updates the specified conversation profile.
         *
         * Create a request for the method "conversationProfiles.patch".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required for all methods except `create` (`create` populates the name
      automatically).
      The unique
       *        identifier of this conversation profile.
      Format: `projects//conversationProfiles/`.
         * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ConversationProfile}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ConversationProfile content) {
          super(Dialogflow.this, "PATCH", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ConversationProfile.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/conversationProfiles/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required for all methods except `create` (`create` populates the name automatically). The
         * unique identifier of this conversation profile. Format:
         * `projects//conversationProfiles/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required for all methods except `create` (`create` populates the name automatically). The unique
       identifier of this conversation profile. Format: `projects//conversationProfiles/`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required for all methods except `create` (`create` populates the name automatically). The
         * unique identifier of this conversation profile. Format:
         * `projects//conversationProfiles/`.
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/conversationProfiles/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /** Required. The mask to control which fields to update. */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Required. The mask to control which fields to update.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /** Required. The mask to control which fields to update. */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Conversations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Dialogflow dialogflow = new Dialogflow(...);}
     *   {@code Dialogflow.Conversations.List request = dialogflow.conversations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Conversations conversations() {
      return new Conversations();
    }

    /**
     * The "conversations" collection of methods.
     */
    public class Conversations {

      /**
       * Sets a phone number for this converstion to connect to.
       *
       * Create a request for the method "conversations.addConversationPhoneNumber".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link AddConversationPhoneNumber#execute()} method to invoke the remote
       * operation.
       *
       * @param name The name of this conversation.
      Format: `projects//conversations/`.
       * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1AddConversationPhoneNumberRequest}
       * @return the request
       */
      public AddConversationPhoneNumber addConversationPhoneNumber(java.lang.String name, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1AddConversationPhoneNumberRequest content) throws java.io.IOException {
        AddConversationPhoneNumber result = new AddConversationPhoneNumber(name, content);
        initialize(result);
        return result;
      }

      public class AddConversationPhoneNumber extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ConversationPhoneNumber> {

        private static final String REST_PATH = "v2beta1/{+name}:addConversationPhoneNumber";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/conversations/[^/]+$");

        /**
         * Sets a phone number for this converstion to connect to.
         *
         * Create a request for the method "conversations.addConversationPhoneNumber".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link AddConversationPhoneNumber#execute()} method to invoke the
         * remote operation. <p> {@link AddConversationPhoneNumber#initialize(com.google.api.client.google
         * apis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
         * immediately after invoking the constructor. </p>
         *
         * @param name The name of this conversation.
      Format: `projects//conversations/`.
         * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1AddConversationPhoneNumberRequest}
         * @since 1.13
         */
        protected AddConversationPhoneNumber(java.lang.String name, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1AddConversationPhoneNumberRequest content) {
          super(Dialogflow.this, "POST", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ConversationPhoneNumber.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/conversations/[^/]+$");
          }
        }

        @Override
        public AddConversationPhoneNumber set$Xgafv(java.lang.String $Xgafv) {
          return (AddConversationPhoneNumber) super.set$Xgafv($Xgafv);
        }

        @Override
        public AddConversationPhoneNumber setAccessToken(java.lang.String accessToken) {
          return (AddConversationPhoneNumber) super.setAccessToken(accessToken);
        }

        @Override
        public AddConversationPhoneNumber setAlt(java.lang.String alt) {
          return (AddConversationPhoneNumber) super.setAlt(alt);
        }

        @Override
        public AddConversationPhoneNumber setCallback(java.lang.String callback) {
          return (AddConversationPhoneNumber) super.setCallback(callback);
        }

        @Override
        public AddConversationPhoneNumber setFields(java.lang.String fields) {
          return (AddConversationPhoneNumber) super.setFields(fields);
        }

        @Override
        public AddConversationPhoneNumber setKey(java.lang.String key) {
          return (AddConversationPhoneNumber) super.setKey(key);
        }

        @Override
        public AddConversationPhoneNumber setOauthToken(java.lang.String oauthToken) {
          return (AddConversationPhoneNumber) super.setOauthToken(oauthToken);
        }

        @Override
        public AddConversationPhoneNumber setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (AddConversationPhoneNumber) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public AddConversationPhoneNumber setQuotaUser(java.lang.String quotaUser) {
          return (AddConversationPhoneNumber) super.setQuotaUser(quotaUser);
        }

        @Override
        public AddConversationPhoneNumber setUploadType(java.lang.String uploadType) {
          return (AddConversationPhoneNumber) super.setUploadType(uploadType);
        }

        @Override
        public AddConversationPhoneNumber setUploadProtocol(java.lang.String uploadProtocol) {
          return (AddConversationPhoneNumber) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The name of this conversation. Format: `projects//conversations/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of this conversation. Format: `projects//conversations/`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * The name of this conversation. Format: `projects//conversations/`.
         */
        public AddConversationPhoneNumber setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/conversations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public AddConversationPhoneNumber set(String parameterName, Object value) {
          return (AddConversationPhoneNumber) super.set(parameterName, value);
        }
      }
      /**
       * Completes the specified conversation. Finished conversations are purged from the database after
       * 30 days.
       *
       * Create a request for the method "conversations.complete".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Complete#execute()} method to invoke the remote operation.
       *
       * @param name Required. Resource identifier of the conversation to close.
      Format: `projects//conversations/`.
       * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1CompleteConversationRequest}
       * @return the request
       */
      public Complete complete(java.lang.String name, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1CompleteConversationRequest content) throws java.io.IOException {
        Complete result = new Complete(name, content);
        initialize(result);
        return result;
      }

      public class Complete extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Conversation> {

        private static final String REST_PATH = "v2beta1/{+name}:complete";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/conversations/[^/]+$");

        /**
         * Completes the specified conversation. Finished conversations are purged from the database after
         * 30 days.
         *
         * Create a request for the method "conversations.complete".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Complete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Complete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Resource identifier of the conversation to close.
      Format: `projects//conversations/`.
         * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1CompleteConversationRequest}
         * @since 1.13
         */
        protected Complete(java.lang.String name, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1CompleteConversationRequest content) {
          super(Dialogflow.this, "POST", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Conversation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/conversations/[^/]+$");
          }
        }

        @Override
        public Complete set$Xgafv(java.lang.String $Xgafv) {
          return (Complete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Complete setAccessToken(java.lang.String accessToken) {
          return (Complete) super.setAccessToken(accessToken);
        }

        @Override
        public Complete setAlt(java.lang.String alt) {
          return (Complete) super.setAlt(alt);
        }

        @Override
        public Complete setCallback(java.lang.String callback) {
          return (Complete) super.setCallback(callback);
        }

        @Override
        public Complete setFields(java.lang.String fields) {
          return (Complete) super.setFields(fields);
        }

        @Override
        public Complete setKey(java.lang.String key) {
          return (Complete) super.setKey(key);
        }

        @Override
        public Complete setOauthToken(java.lang.String oauthToken) {
          return (Complete) super.setOauthToken(oauthToken);
        }

        @Override
        public Complete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Complete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Complete setQuotaUser(java.lang.String quotaUser) {
          return (Complete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Complete setUploadType(java.lang.String uploadType) {
          return (Complete) super.setUploadType(uploadType);
        }

        @Override
        public Complete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Complete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Resource identifier of the conversation to close. Format:
         * `projects//conversations/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Resource identifier of the conversation to close. Format: `projects//conversations/`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Resource identifier of the conversation to close. Format:
         * `projects//conversations/`.
         */
        public Complete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/conversations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Complete set(String parameterName, Object value) {
          return (Complete) super.set(parameterName, value);
        }
      }
      /**
       * Creates a new conversation. Conversation are auto-completed after 24 hours.
       *
       * Create a request for the method "conversations.create".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Resource identifier of the project creating the conversation.
      Format: `projects/`.
       * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Conversation}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Conversation content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Conversation> {

        private static final String REST_PATH = "v2beta1/{+parent}/conversations";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Creates a new conversation. Conversation are auto-completed after 24 hours.
         *
         * Create a request for the method "conversations.create".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Resource identifier of the project creating the conversation.
      Format: `projects/`.
         * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Conversation}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Conversation content) {
          super(Dialogflow.this, "POST", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Conversation.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Resource identifier of the project creating the conversation. Format:
         * `projects/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Resource identifier of the project creating the conversation. Format: `projects/`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Resource identifier of the project creating the conversation. Format:
         * `projects/`.
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Retrieves the specific conversation.
       *
       * Create a request for the method "conversations.get".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the conversation. Format:
      `projects//conversations/`.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Conversation> {

        private static final String REST_PATH = "v2beta1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/conversations/[^/]+$");

        /**
         * Retrieves the specific conversation.
         *
         * Create a request for the method "conversations.get".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the conversation. Format:
      `projects//conversations/`.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Dialogflow.this, "GET", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Conversation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/conversations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the conversation. Format: `projects//conversations/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the conversation. Format: `projects//conversations/`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the conversation. Format: `projects//conversations/`.
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/conversations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Returns the list of all conversations in the specified project.
       *
       * Create a request for the method "conversations.list".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The project from which to list all conversation.
      Format: `projects/`.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListConversationsResponse> {

        private static final String REST_PATH = "v2beta1/{+parent}/conversations";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Returns the list of all conversations in the specified project.
         *
         * Create a request for the method "conversations.list".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The project from which to list all conversation.
      Format: `projects/`.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Dialogflow.this, "GET", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListConversationsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The project from which to list all conversation. Format: `projects/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The project from which to list all conversation. Format: `projects/`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The project from which to list all conversation. Format: `projects/`.
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * A filter expression that filters conversations listed in the response. In general, the
         * expression must specify the field name, a comparison operator, and the value to use for
         * filtering:
         *
         * The value must be a string, a number, or a boolean. The comparison operator must be
         * either `=`,`!=`, `>`, or `<`. To filter on multiple expressions, separate the expressions
         * with `AND` or `OR` (omitting both implies `AND`). For clarity, expressions can be
         * enclosed in parentheses.
         *
         * Only `lifecycle_state` can be filtered on in this way. For example, the following
         * expression only returns `FINISHED` conversations:
         *
         * `lifecycle_state = "FINISHED"`
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** A filter expression that filters conversations listed in the response. In general, the expression
       must specify the field name, a comparison operator, and the value to use for filtering:

       The value must be a string, a number, or a boolean. The comparison operator must be either
       `=`,`!=`, `>`, or `<`. To filter on multiple expressions, separate the expressions with `AND` or
       `OR` (omitting both implies `AND`). For clarity, expressions can be enclosed in parentheses.

       Only `lifecycle_state` can be filtered on in this way. For example, the following expression only
       returns `FINISHED` conversations:

       `lifecycle_state = "FINISHED"`
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * A filter expression that filters conversations listed in the response. In general, the
         * expression must specify the field name, a comparison operator, and the value to use for
         * filtering:
         *
         * The value must be a string, a number, or a boolean. The comparison operator must be
         * either `=`,`!=`, `>`, or `<`. To filter on multiple expressions, separate the expressions
         * with `AND` or `OR` (omitting both implies `AND`). For clarity, expressions can be
         * enclosed in parentheses.
         *
         * Only `lifecycle_state` can be filtered on in this way. For example, the following
         * expression only returns `FINISHED` conversations:
         *
         * `lifecycle_state = "FINISHED"`
         */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /**
         * Optional. The maximum number of items to return in a single page. By default 100 and at
         * most 1000.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Optional. The maximum number of items to return in a single page. By default 100 and at
         * most 1000.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** Optional. The next_page_token value returned from a previous list request. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional. The next_page_token value returned from a previous list request.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** Optional. The next_page_token value returned from a previous list request. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Messages collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Dialogflow dialogflow = new Dialogflow(...);}
       *   {@code Dialogflow.Messages.List request = dialogflow.messages().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Messages messages() {
        return new Messages();
      }

      /**
       * The "messages" collection of methods.
       */
      public class Messages {

        /**
         * Lists messages that belong to a given conversation.
         *
         * Create a request for the method "messages.list".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the conversation to list messages for.
        Format: `projects//conversations/`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListMessagesResponse> {

          private static final String REST_PATH = "v2beta1/{+parent}/messages";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/conversations/[^/]+$");

          /**
           * Lists messages that belong to a given conversation.
           *
           * Create a request for the method "messages.list".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the conversation to list messages for.
        Format: `projects//conversations/`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Dialogflow.this, "GET", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListMessagesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/conversations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the conversation to list messages for. Format:
           * `projects//conversations/`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the conversation to list messages for. Format: `projects//conversations/`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the conversation to list messages for. Format:
           * `projects//conversations/`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/conversations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. The maximum number of items to return in a single page. By default 100 and at
           * most 1000.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of items to return in a single page. By default 100 and at
           * most 1000.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** Optional. The next_page_token value returned from a previous list request. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. The next_page_token value returned from a previous list request.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** Optional. The next_page_token value returned from a previous list request. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Participants collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Dialogflow dialogflow = new Dialogflow(...);}
       *   {@code Dialogflow.Participants.List request = dialogflow.participants().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Participants participants() {
        return new Participants();
      }

      /**
       * The "participants" collection of methods.
       */
      public class Participants {

        /**
         * Adds a text (chat, for example), or audio (phone recording, for example) message from a
         * participan  into the conversation.
         *
         * Create a request for the method "participants.analyzeContent".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link AnalyzeContent#execute()} method to invoke the remote operation.
         *
         * @param participant Required. The name of the participant this text comes from.
        Format:
         *        `projects//conversations//participants/`.
         * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1AnalyzeContentRequest}
         * @return the request
         */
        public AnalyzeContent analyzeContent(java.lang.String participant, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1AnalyzeContentRequest content) throws java.io.IOException {
          AnalyzeContent result = new AnalyzeContent(participant, content);
          initialize(result);
          return result;
        }

        public class AnalyzeContent extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1AnalyzeContentResponse> {

          private static final String REST_PATH = "v2beta1/{+participant}:analyzeContent";

          private final java.util.regex.Pattern PARTICIPANT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/conversations/[^/]+/participants/[^/]+$");

          /**
           * Adds a text (chat, for example), or audio (phone recording, for example) message from a
           * participan  into the conversation.
           *
           * Create a request for the method "participants.analyzeContent".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link AnalyzeContent#execute()} method to invoke the remote
           * operation. <p> {@link AnalyzeContent#initialize(com.google.api.client.googleapis.services.Abstr
           * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
           * the constructor. </p>
           *
           * @param participant Required. The name of the participant this text comes from.
        Format:
         *        `projects//conversations//participants/`.
           * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1AnalyzeContentRequest}
           * @since 1.13
           */
          protected AnalyzeContent(java.lang.String participant, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1AnalyzeContentRequest content) {
            super(Dialogflow.this, "POST", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1AnalyzeContentResponse.class);
            this.participant = com.google.api.client.util.Preconditions.checkNotNull(participant, "Required parameter participant must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARTICIPANT_PATTERN.matcher(participant).matches(),
                  "Parameter participant must conform to the pattern " +
                  "^projects/[^/]+/conversations/[^/]+/participants/[^/]+$");
            }
          }

          @Override
          public AnalyzeContent set$Xgafv(java.lang.String $Xgafv) {
            return (AnalyzeContent) super.set$Xgafv($Xgafv);
          }

          @Override
          public AnalyzeContent setAccessToken(java.lang.String accessToken) {
            return (AnalyzeContent) super.setAccessToken(accessToken);
          }

          @Override
          public AnalyzeContent setAlt(java.lang.String alt) {
            return (AnalyzeContent) super.setAlt(alt);
          }

          @Override
          public AnalyzeContent setCallback(java.lang.String callback) {
            return (AnalyzeContent) super.setCallback(callback);
          }

          @Override
          public AnalyzeContent setFields(java.lang.String fields) {
            return (AnalyzeContent) super.setFields(fields);
          }

          @Override
          public AnalyzeContent setKey(java.lang.String key) {
            return (AnalyzeContent) super.setKey(key);
          }

          @Override
          public AnalyzeContent setOauthToken(java.lang.String oauthToken) {
            return (AnalyzeContent) super.setOauthToken(oauthToken);
          }

          @Override
          public AnalyzeContent setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (AnalyzeContent) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public AnalyzeContent setQuotaUser(java.lang.String quotaUser) {
            return (AnalyzeContent) super.setQuotaUser(quotaUser);
          }

          @Override
          public AnalyzeContent setUploadType(java.lang.String uploadType) {
            return (AnalyzeContent) super.setUploadType(uploadType);
          }

          @Override
          public AnalyzeContent setUploadProtocol(java.lang.String uploadProtocol) {
            return (AnalyzeContent) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the participant this text comes from. Format:
           * `projects//conversations//participants/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String participant;

          /** Required. The name of the participant this text comes from. Format:
         `projects//conversations//participants/`.
           */
          public java.lang.String getParticipant() {
            return participant;
          }

          /**
           * Required. The name of the participant this text comes from. Format:
           * `projects//conversations//participants/`.
           */
          public AnalyzeContent setParticipant(java.lang.String participant) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARTICIPANT_PATTERN.matcher(participant).matches(),
                  "Parameter participant must conform to the pattern " +
                  "^projects/[^/]+/conversations/[^/]+/participants/[^/]+$");
            }
            this.participant = participant;
            return this;
          }

          @Override
          public AnalyzeContent set(String parameterName, Object value) {
            return (AnalyzeContent) super.set(parameterName, value);
          }
        }
        /**
         * Creates a new participant in a conversation.
         *
         * Create a request for the method "participants.create".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Resource identifier of the conversation adding the participant.
        Format:
         *        `projects//conversations/`.
         * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Participant}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Participant content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Participant> {

          private static final String REST_PATH = "v2beta1/{+parent}/participants";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/conversations/[^/]+$");

          /**
           * Creates a new participant in a conversation.
           *
           * Create a request for the method "participants.create".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Resource identifier of the conversation adding the participant.
        Format:
         *        `projects//conversations/`.
           * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Participant}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Participant content) {
            super(Dialogflow.this, "POST", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Participant.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/conversations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Resource identifier of the conversation adding the participant. Format:
           * `projects//conversations/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Resource identifier of the conversation adding the participant. Format:
         `projects//conversations/`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Resource identifier of the conversation adding the participant. Format:
           * `projects//conversations/`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/conversations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Retrieves a conversation participant.
         *
         * Create a request for the method "participants.get".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the participant. Format:
        `projects//conversations//participants/`.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Participant> {

          private static final String REST_PATH = "v2beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/conversations/[^/]+/participants/[^/]+$");

          /**
           * Retrieves a conversation participant.
           *
           * Create a request for the method "participants.get".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the participant. Format:
        `projects//conversations//participants/`.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Dialogflow.this, "GET", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Participant.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/conversations/[^/]+/participants/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the participant. Format:
           * `projects//conversations//participants/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the participant. Format: `projects//conversations//participants/`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the participant. Format:
           * `projects//conversations//participants/`.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/conversations/[^/]+/participants/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Returns the list of all participants in the specified conversation.
         *
         * Create a request for the method "participants.list".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The conversation to list all contexts from.
        Format: `projects//conversations/`.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListParticipantsResponse> {

          private static final String REST_PATH = "v2beta1/{+parent}/participants";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/conversations/[^/]+$");

          /**
           * Returns the list of all participants in the specified conversation.
           *
           * Create a request for the method "participants.list".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The conversation to list all contexts from.
        Format: `projects//conversations/`.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Dialogflow.this, "GET", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListParticipantsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/conversations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The conversation to list all contexts from. Format:
           * `projects//conversations/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The conversation to list all contexts from. Format: `projects//conversations/`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The conversation to list all contexts from. Format:
           * `projects//conversations/`.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/conversations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. The maximum number of items to return in a single page. By default 100 and at
           * most 1000.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of items to return in a single page. By default 100 and at
           * most 1000.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** Optional. The next_page_token value returned from a previous list request. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. The next_page_token value returned from a previous list request.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** Optional. The next_page_token value returned from a previous list request. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Adds a text (chat, for example), or audio (phone recording, for example) message from a
         * participan  into the conversation. Note: This method is only available through the gRPC API (not
         * REST).
         *
         * The top-level message sent to the client by the server is `StreamingAnalyzeContentResponse`.
         * Multiple response messages can be returned in order. The first one or more messages contain the
         * `recognition_result` field. Each result represents a more complete transcript of what the user
         * said. The next message contains the `reply_text` field and potentially the `reply_audio` field.
         * The message can also contain the `automated_agent_reply` field.
         *
         * Create a request for the method "participants.streamingAnalyzeContent".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link StreamingAnalyzeContent#execute()} method to invoke the remote
         * operation.
         *
         * @param participant Required. The name of the participant this text comes from.
        Format:
         *        `projects//conversations//participants/`.
         * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1StreamingAnalyzeContentRequest}
         * @return the request
         */
        public StreamingAnalyzeContent streamingAnalyzeContent(java.lang.String participant, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1StreamingAnalyzeContentRequest content) throws java.io.IOException {
          StreamingAnalyzeContent result = new StreamingAnalyzeContent(participant, content);
          initialize(result);
          return result;
        }

        public class StreamingAnalyzeContent extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1StreamingAnalyzeContentResponse> {

          private static final String REST_PATH = "v2beta1/{+participant}:streamingAnalyzeContent";

          private final java.util.regex.Pattern PARTICIPANT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/conversations/[^/]+/participants/[^/]+$");

          /**
           * Adds a text (chat, for example), or audio (phone recording, for example) message from a
           * participan  into the conversation. Note: This method is only available through the gRPC API
           * (not REST).
           *
           * The top-level message sent to the client by the server is `StreamingAnalyzeContentResponse`.
           * Multiple response messages can be returned in order. The first one or more messages contain the
           * `recognition_result` field. Each result represents a more complete transcript of what the user
           * said. The next message contains the `reply_text` field and potentially the `reply_audio` field.
           * The message can also contain the `automated_agent_reply` field.
           *
           * Create a request for the method "participants.streamingAnalyzeContent".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link StreamingAnalyzeContent#execute()} method to invoke the
           * remote operation. <p> {@link StreamingAnalyzeContent#initialize(com.google.api.client.googleapi
           * s.services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
           * after invoking the constructor. </p>
           *
           * @param participant Required. The name of the participant this text comes from.
        Format:
         *        `projects//conversations//participants/`.
           * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1StreamingAnalyzeContentRequest}
           * @since 1.13
           */
          protected StreamingAnalyzeContent(java.lang.String participant, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1StreamingAnalyzeContentRequest content) {
            super(Dialogflow.this, "POST", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1StreamingAnalyzeContentResponse.class);
            this.participant = com.google.api.client.util.Preconditions.checkNotNull(participant, "Required parameter participant must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARTICIPANT_PATTERN.matcher(participant).matches(),
                  "Parameter participant must conform to the pattern " +
                  "^projects/[^/]+/conversations/[^/]+/participants/[^/]+$");
            }
          }

          @Override
          public StreamingAnalyzeContent set$Xgafv(java.lang.String $Xgafv) {
            return (StreamingAnalyzeContent) super.set$Xgafv($Xgafv);
          }

          @Override
          public StreamingAnalyzeContent setAccessToken(java.lang.String accessToken) {
            return (StreamingAnalyzeContent) super.setAccessToken(accessToken);
          }

          @Override
          public StreamingAnalyzeContent setAlt(java.lang.String alt) {
            return (StreamingAnalyzeContent) super.setAlt(alt);
          }

          @Override
          public StreamingAnalyzeContent setCallback(java.lang.String callback) {
            return (StreamingAnalyzeContent) super.setCallback(callback);
          }

          @Override
          public StreamingAnalyzeContent setFields(java.lang.String fields) {
            return (StreamingAnalyzeContent) super.setFields(fields);
          }

          @Override
          public StreamingAnalyzeContent setKey(java.lang.String key) {
            return (StreamingAnalyzeContent) super.setKey(key);
          }

          @Override
          public StreamingAnalyzeContent setOauthToken(java.lang.String oauthToken) {
            return (StreamingAnalyzeContent) super.setOauthToken(oauthToken);
          }

          @Override
          public StreamingAnalyzeContent setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (StreamingAnalyzeContent) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public StreamingAnalyzeContent setQuotaUser(java.lang.String quotaUser) {
            return (StreamingAnalyzeContent) super.setQuotaUser(quotaUser);
          }

          @Override
          public StreamingAnalyzeContent setUploadType(java.lang.String uploadType) {
            return (StreamingAnalyzeContent) super.setUploadType(uploadType);
          }

          @Override
          public StreamingAnalyzeContent setUploadProtocol(java.lang.String uploadProtocol) {
            return (StreamingAnalyzeContent) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the participant this text comes from. Format:
           * `projects//conversations//participants/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String participant;

          /** Required. The name of the participant this text comes from. Format:
         `projects//conversations//participants/`.
           */
          public java.lang.String getParticipant() {
            return participant;
          }

          /**
           * Required. The name of the participant this text comes from. Format:
           * `projects//conversations//participants/`.
           */
          public StreamingAnalyzeContent setParticipant(java.lang.String participant) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARTICIPANT_PATTERN.matcher(participant).matches(),
                  "Parameter participant must conform to the pattern " +
                  "^projects/[^/]+/conversations/[^/]+/participants/[^/]+$");
            }
            this.participant = participant;
            return this;
          }

          @Override
          public StreamingAnalyzeContent set(String parameterName, Object value) {
            return (StreamingAnalyzeContent) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Suggestions collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Dialogflow dialogflow = new Dialogflow(...);}
         *   {@code Dialogflow.Suggestions.List request = dialogflow.suggestions().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Suggestions suggestions() {
          return new Suggestions();
        }

        /**
         * The "suggestions" collection of methods.
         */
        public class Suggestions {

          /**
           * Retrieves suggestions for live agents.
           *
           * This method should be used by human agent client software to fetch suggestions in real-time,
           * while the conversation with an end user is in progress. The functionality is implemented in terms
           * of the [list pagination](/apis/design/design_patterns#list_pagination) design pattern. The client
           * app should use the `next_page_token` field to fetch the next batch of suggestions.
           *
           * Create a request for the method "suggestions.list".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The name of the conversation participant for whom to fetch
          suggestions.
          Format:
           *        `projects//conversations//participants/`.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListSuggestionsResponse> {

            private static final String REST_PATH = "v2beta1/{+parent}/suggestions";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/conversations/[^/]+/participants/[^/]+$");

            /**
             * Retrieves suggestions for live agents.
             *
             * This method should be used by human agent client software to fetch suggestions in real-time,
             * while the conversation with an end user is in progress. The functionality is implemented in
             * terms of the [list pagination](/apis/design/design_patterns#list_pagination) design pattern.
             * The client app should use the `next_page_token` field to fetch the next batch of suggestions.
             *
             * Create a request for the method "suggestions.list".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The name of the conversation participant for whom to fetch
          suggestions.
          Format:
           *        `projects//conversations//participants/`.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Dialogflow.this, "GET", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListSuggestionsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/conversations/[^/]+/participants/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the conversation participant for whom to fetch suggestions.
             * Format: `projects//conversations//participants/`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The name of the conversation participant for whom to fetch suggestions. Format:
           `projects//conversations//participants/`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The name of the conversation participant for whom to fetch suggestions.
             * Format: `projects//conversations//participants/`.
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/conversations/[^/]+/participants/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Optional. The maximum number of items to return in a single page. The default value
             * is 100; the maximum value is 1000.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. The maximum number of items to return in a single page. The default value is 100; the
           maximum value is 1000.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. The maximum number of items to return in a single page. The default value
             * is 100; the maximum value is 1000.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** Optional. The next_page_token value returned from a previous list request. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. The next_page_token value returned from a previous list request.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** Optional. The next_page_token value returned from a previous list request. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

        }
      }
    }
    /**
     * An accessor for creating requests from the Environments collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Dialogflow dialogflow = new Dialogflow(...);}
     *   {@code Dialogflow.Environments.List request = dialogflow.environments().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Environments environments() {
      return new Environments();
    }

    /**
     * The "environments" collection of methods.
     */
    public class Environments {

      /**
       * An accessor for creating requests from the Users collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Dialogflow dialogflow = new Dialogflow(...);}
       *   {@code Dialogflow.Users.List request = dialogflow.users().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Users users() {
        return new Users();
      }

      /**
       * The "users" collection of methods.
       */
      public class Users {

        /**
         * An accessor for creating requests from the Conversations collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Dialogflow dialogflow = new Dialogflow(...);}
         *   {@code Dialogflow.Conversations.List request = dialogflow.conversations().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Conversations conversations() {
          return new Conversations();
        }

        /**
         * The "conversations" collection of methods.
         */
        public class Conversations {

          /**
           * Deletes all active contexts in the specified session.
           *
           * Create a request for the method "conversations.deleteContexts".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link DeleteContexts#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The name of the session to delete all contexts from. Format:
          `projects//agent/sessions/`
           *        or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified
           *        we assume default 'draft'
          environment. If `User ID` is not specified, we assume default
           *        '-' user.
           * @return the request
           */
          public DeleteContexts deleteContexts(java.lang.String parent) throws java.io.IOException {
            DeleteContexts result = new DeleteContexts(parent);
            initialize(result);
            return result;
          }

          public class DeleteContexts extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v2beta1/{+parent}/contexts";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/environments/[^/]+/users/[^/]+/conversations/[^/]+$");

            /**
             * Deletes all active contexts in the specified session.
             *
             * Create a request for the method "conversations.deleteContexts".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link DeleteContexts#execute()} method to invoke the remote
             * operation. <p> {@link DeleteContexts#initialize(com.google.api.client.googleapis.services.Abstr
             * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
             * the constructor. </p>
             *
             * @param parent Required. The name of the session to delete all contexts from. Format:
          `projects//agent/sessions/`
           *        or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified
           *        we assume default 'draft'
          environment. If `User ID` is not specified, we assume default
           *        '-' user.
             * @since 1.13
             */
            protected DeleteContexts(java.lang.String parent) {
              super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleProtobufEmpty.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/environments/[^/]+/users/[^/]+/conversations/[^/]+$");
              }
            }

            @Override
            public DeleteContexts set$Xgafv(java.lang.String $Xgafv) {
              return (DeleteContexts) super.set$Xgafv($Xgafv);
            }

            @Override
            public DeleteContexts setAccessToken(java.lang.String accessToken) {
              return (DeleteContexts) super.setAccessToken(accessToken);
            }

            @Override
            public DeleteContexts setAlt(java.lang.String alt) {
              return (DeleteContexts) super.setAlt(alt);
            }

            @Override
            public DeleteContexts setCallback(java.lang.String callback) {
              return (DeleteContexts) super.setCallback(callback);
            }

            @Override
            public DeleteContexts setFields(java.lang.String fields) {
              return (DeleteContexts) super.setFields(fields);
            }

            @Override
            public DeleteContexts setKey(java.lang.String key) {
              return (DeleteContexts) super.setKey(key);
            }

            @Override
            public DeleteContexts setOauthToken(java.lang.String oauthToken) {
              return (DeleteContexts) super.setOauthToken(oauthToken);
            }

            @Override
            public DeleteContexts setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (DeleteContexts) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public DeleteContexts setQuotaUser(java.lang.String quotaUser) {
              return (DeleteContexts) super.setQuotaUser(quotaUser);
            }

            @Override
            public DeleteContexts setUploadType(java.lang.String uploadType) {
              return (DeleteContexts) super.setUploadType(uploadType);
            }

            @Override
            public DeleteContexts setUploadProtocol(java.lang.String uploadProtocol) {
              return (DeleteContexts) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the session to delete all contexts from. Format:
             * `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If
             * `Environment ID` is not specified we assume default 'draft' environment. If `User ID`
             * is not specified, we assume default '-' user.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The name of the session to delete all contexts from. Format: `projects//agent/sessions/`
           or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified we assume
           default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The name of the session to delete all contexts from. Format:
             * `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If
             * `Environment ID` is not specified we assume default 'draft' environment. If `User ID`
             * is not specified, we assume default '-' user.
             */
            public DeleteContexts setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/environments/[^/]+/users/[^/]+/conversations/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public DeleteContexts set(String parameterName, Object value) {
              return (DeleteContexts) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the Contexts collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Dialogflow dialogflow = new Dialogflow(...);}
           *   {@code Dialogflow.Contexts.List request = dialogflow.contexts().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Contexts contexts() {
            return new Contexts();
          }

          /**
           * The "contexts" collection of methods.
           */
          public class Contexts {

            /**
             * Creates a context.
             *
             * If the specified context already exists, overrides the context.
             *
             * Create a request for the method "contexts.create".
             *
             * This request holds the parameters needed by the dialogflow server.  After setting any optional
             * parameters, call the {@link Create#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The session to create a context for.
            Format: `projects//agent/sessions/` or
             *        `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we
             *        assume
            default 'draft' environment. If `User ID` is not specified, we assume
            default '-'
             *        user.
             * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context}
             * @return the request
             */
            public Create create(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context content) throws java.io.IOException {
              Create result = new Create(parent, content);
              initialize(result);
              return result;
            }

            public class Create extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context> {

              private static final String REST_PATH = "v2beta1/{+parent}/contexts";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/environments/[^/]+/users/[^/]+/conversations/[^/]+$");

              /**
               * Creates a context.
               *
               * If the specified context already exists, overrides the context.
               *
               * Create a request for the method "contexts.create".
               *
               * This request holds the parameters needed by the the dialogflow server.  After setting any
               * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
               * <p> {@link
               * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The session to create a context for.
            Format: `projects//agent/sessions/` or
             *        `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we
             *        assume
            default 'draft' environment. If `User ID` is not specified, we assume
            default '-'
             *        user.
               * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context}
               * @since 1.13
               */
              protected Create(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context content) {
                super(Dialogflow.this, "POST", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/environments/[^/]+/users/[^/]+/conversations/[^/]+$");
                }
              }

              @Override
              public Create set$Xgafv(java.lang.String $Xgafv) {
                return (Create) super.set$Xgafv($Xgafv);
              }

              @Override
              public Create setAccessToken(java.lang.String accessToken) {
                return (Create) super.setAccessToken(accessToken);
              }

              @Override
              public Create setAlt(java.lang.String alt) {
                return (Create) super.setAlt(alt);
              }

              @Override
              public Create setCallback(java.lang.String callback) {
                return (Create) super.setCallback(callback);
              }

              @Override
              public Create setFields(java.lang.String fields) {
                return (Create) super.setFields(fields);
              }

              @Override
              public Create setKey(java.lang.String key) {
                return (Create) super.setKey(key);
              }

              @Override
              public Create setOauthToken(java.lang.String oauthToken) {
                return (Create) super.setOauthToken(oauthToken);
              }

              @Override
              public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Create) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Create setQuotaUser(java.lang.String quotaUser) {
                return (Create) super.setQuotaUser(quotaUser);
              }

              @Override
              public Create setUploadType(java.lang.String uploadType) {
                return (Create) super.setUploadType(uploadType);
              }

              @Override
              public Create setUploadProtocol(java.lang.String uploadProtocol) {
                return (Create) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The session to create a context for. Format: `projects//agent/sessions/`
               * or `projects//agent/environments//users//sessions/`. If `Environment ID` is not
               * specified, we assume default 'draft' environment. If `User ID` is not specified, we
               * assume default '-' user.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The session to create a context for. Format: `projects//agent/sessions/` or
             `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume
             default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The session to create a context for. Format: `projects//agent/sessions/`
               * or `projects//agent/environments//users//sessions/`. If `Environment ID` is not
               * specified, we assume default 'draft' environment. If `User ID` is not specified, we
               * assume default '-' user.
               */
              public Create setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/environments/[^/]+/users/[^/]+/conversations/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public Create set(String parameterName, Object value) {
                return (Create) super.set(parameterName, value);
              }
            }
            /**
             * Deletes the specified context.
             *
             * Create a request for the method "contexts.delete".
             *
             * This request holds the parameters needed by the dialogflow server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param name Required. The name of the context to delete. Format:
            `projects//agent/sessions//contexts/`
            or
             *        `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is
            not
             *        specified, we assume default 'draft' environment. If `User ID` is not
            specified, we assume
             *        default '-' user.
             * @return the request
             */
            public Delete delete(java.lang.String name) throws java.io.IOException {
              Delete result = new Delete(name);
              initialize(result);
              return result;
            }

            public class Delete extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleProtobufEmpty> {

              private static final String REST_PATH = "v2beta1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/environments/[^/]+/users/[^/]+/conversations/[^/]+/contexts/[^/]+$");

              /**
               * Deletes the specified context.
               *
               * Create a request for the method "contexts.delete".
               *
               * This request holds the parameters needed by the the dialogflow server.  After setting any
               * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               * <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the context to delete. Format:
            `projects//agent/sessions//contexts/`
            or
             *        `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is
            not
             *        specified, we assume default 'draft' environment. If `User ID` is not
            specified, we assume
             *        default '-' user.
               * @since 1.13
               */
              protected Delete(java.lang.String name) {
                super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleProtobufEmpty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/environments/[^/]+/users/[^/]+/conversations/[^/]+/contexts/[^/]+$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the context to delete. Format:
               * `projects//agent/sessions//contexts/` or
               * `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is
               * not specified, we assume default 'draft' environment. If `User ID` is not
               * specified, we assume default '-' user.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the context to delete. Format: `projects//agent/sessions//contexts/` or
             `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is not specified,
             we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The name of the context to delete. Format:
               * `projects//agent/sessions//contexts/` or
               * `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is
               * not specified, we assume default 'draft' environment. If `User ID` is not
               * specified, we assume default '-' user.
               */
              public Delete setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/environments/[^/]+/users/[^/]+/conversations/[^/]+/contexts/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * Retrieves the specified context.
             *
             * Create a request for the method "contexts.get".
             *
             * This request holds the parameters needed by the dialogflow server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name Required. The name of the context. Format:
            `projects//agent/sessions//contexts/`
            or
             *        `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is
            not
             *        specified, we assume default 'draft' environment. If `User ID` is not
            specified, we assume
             *        default '-' user.
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context> {

              private static final String REST_PATH = "v2beta1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/environments/[^/]+/users/[^/]+/conversations/[^/]+/contexts/[^/]+$");

              /**
               * Retrieves the specified context.
               *
               * Create a request for the method "contexts.get".
               *
               * This request holds the parameters needed by the the dialogflow server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the context. Format:
            `projects//agent/sessions//contexts/`
            or
             *        `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is
            not
             *        specified, we assume default 'draft' environment. If `User ID` is not
            specified, we assume
             *        default '-' user.
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(Dialogflow.this, "GET", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/environments/[^/]+/users/[^/]+/conversations/[^/]+/contexts/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the context. Format: `projects//agent/sessions//contexts/` or
               * `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is
               * not specified, we assume default 'draft' environment. If `User ID` is not
               * specified, we assume default '-' user.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the context. Format: `projects//agent/sessions//contexts/` or
             `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is not specified,
             we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The name of the context. Format: `projects//agent/sessions//contexts/` or
               * `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is
               * not specified, we assume default 'draft' environment. If `User ID` is not
               * specified, we assume default '-' user.
               */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/environments/[^/]+/users/[^/]+/conversations/[^/]+/contexts/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Returns the list of all contexts in the specified session.
             *
             * Create a request for the method "contexts.list".
             *
             * This request holds the parameters needed by the dialogflow server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The session to list all contexts from.
            Format: `projects//agent/sessions/` or
             *        `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we
             *        assume
            default 'draft' environment. If `User ID` is not specified, we assume
            default '-'
             *        user.
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListContextsResponse> {

              private static final String REST_PATH = "v2beta1/{+parent}/contexts";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/environments/[^/]+/users/[^/]+/conversations/[^/]+$");

              /**
               * Returns the list of all contexts in the specified session.
               *
               * Create a request for the method "contexts.list".
               *
               * This request holds the parameters needed by the the dialogflow server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The session to list all contexts from.
            Format: `projects//agent/sessions/` or
             *        `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we
             *        assume
            default 'draft' environment. If `User ID` is not specified, we assume
            default '-'
             *        user.
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(Dialogflow.this, "GET", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListContextsResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/environments/[^/]+/users/[^/]+/conversations/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The session to list all contexts from. Format:
               * `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If
               * `Environment ID` is not specified, we assume default 'draft' environment. If `User
               * ID` is not specified, we assume default '-' user.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The session to list all contexts from. Format: `projects//agent/sessions/` or
             `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume
             default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The session to list all contexts from. Format:
               * `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If
               * `Environment ID` is not specified, we assume default 'draft' environment. If `User
               * ID` is not specified, we assume default '-' user.
               */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/environments/[^/]+/users/[^/]+/conversations/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Optional. The maximum number of items to return in a single page. By default 100
               * and at most 1000.
               */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /**
               * Optional. The maximum number of items to return in a single page. By default 100
               * and at most 1000.
               */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /** Optional. The next_page_token value returned from a previous list request. */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** Optional. The next_page_token value returned from a previous list request.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /** Optional. The next_page_token value returned from a previous list request. */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }
            /**
             * Updates the specified context.
             *
             * Create a request for the method "contexts.patch".
             *
             * This request holds the parameters needed by the dialogflow server.  After setting any optional
             * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             *
             * @param name Required. The unique identifier of the context. Format:
            `projects//agent/sessions//contexts/`,
            or
             *        `projects//agent/environments//users//sessions//contexts/`. The `Context ID` is
            always
             *        converted to lowercase. If `Environment ID` is not specified, we
            assume default 'draft'
             *        environment. If `User ID` is not specified, we
            assume default '-' user.
             * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context}
             * @return the request
             */
            public Patch patch(java.lang.String name, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context content) throws java.io.IOException {
              Patch result = new Patch(name, content);
              initialize(result);
              return result;
            }

            public class Patch extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context> {

              private static final String REST_PATH = "v2beta1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/environments/[^/]+/users/[^/]+/conversations/[^/]+/contexts/[^/]+$");

              /**
               * Updates the specified context.
               *
               * Create a request for the method "contexts.patch".
               *
               * This request holds the parameters needed by the the dialogflow server.  After setting any
               * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
               * <p> {@link
               * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The unique identifier of the context. Format:
            `projects//agent/sessions//contexts/`,
            or
             *        `projects//agent/environments//users//sessions//contexts/`. The `Context ID` is
            always
             *        converted to lowercase. If `Environment ID` is not specified, we
            assume default 'draft'
             *        environment. If `User ID` is not specified, we
            assume default '-' user.
               * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context}
               * @since 1.13
               */
              protected Patch(java.lang.String name, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context content) {
                super(Dialogflow.this, "PATCH", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/environments/[^/]+/users/[^/]+/conversations/[^/]+/contexts/[^/]+$");
                }
              }

              @Override
              public Patch set$Xgafv(java.lang.String $Xgafv) {
                return (Patch) super.set$Xgafv($Xgafv);
              }

              @Override
              public Patch setAccessToken(java.lang.String accessToken) {
                return (Patch) super.setAccessToken(accessToken);
              }

              @Override
              public Patch setAlt(java.lang.String alt) {
                return (Patch) super.setAlt(alt);
              }

              @Override
              public Patch setCallback(java.lang.String callback) {
                return (Patch) super.setCallback(callback);
              }

              @Override
              public Patch setFields(java.lang.String fields) {
                return (Patch) super.setFields(fields);
              }

              @Override
              public Patch setKey(java.lang.String key) {
                return (Patch) super.setKey(key);
              }

              @Override
              public Patch setOauthToken(java.lang.String oauthToken) {
                return (Patch) super.setOauthToken(oauthToken);
              }

              @Override
              public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Patch) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Patch setQuotaUser(java.lang.String quotaUser) {
                return (Patch) super.setQuotaUser(quotaUser);
              }

              @Override
              public Patch setUploadType(java.lang.String uploadType) {
                return (Patch) super.setUploadType(uploadType);
              }

              @Override
              public Patch setUploadProtocol(java.lang.String uploadProtocol) {
                return (Patch) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The unique identifier of the context. Format:
               * `projects//agent/sessions//contexts/`, or
               * `projects//agent/environments//users//sessions//contexts/`. The `Context ID` is
               * always converted to lowercase. If `Environment ID` is not specified, we assume
               * default 'draft' environment. If `User ID` is not specified, we assume default '-'
               * user.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The unique identifier of the context. Format: `projects//agent/sessions//contexts/`, or
             `projects//agent/environments//users//sessions//contexts/`. The `Context ID` is always converted to
             lowercase. If `Environment ID` is not specified, we assume default 'draft' environment. If `User
             ID` is not specified, we assume default '-' user.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The unique identifier of the context. Format:
               * `projects//agent/sessions//contexts/`, or
               * `projects//agent/environments//users//sessions//contexts/`. The `Context ID` is
               * always converted to lowercase. If `Environment ID` is not specified, we assume
               * default 'draft' environment. If `User ID` is not specified, we assume default '-'
               * user.
               */
              public Patch setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/environments/[^/]+/users/[^/]+/conversations/[^/]+/contexts/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /** Optional. The mask to control which fields get updated. */
              @com.google.api.client.util.Key
              private String updateMask;

              /** Optional. The mask to control which fields get updated.
               */
              public String getUpdateMask() {
                return updateMask;
              }

              /** Optional. The mask to control which fields get updated. */
              public Patch setUpdateMask(String updateMask) {
                this.updateMask = updateMask;
                return this;
              }

              @Override
              public Patch set(String parameterName, Object value) {
                return (Patch) super.set(parameterName, value);
              }
            }

          }
        }
      }
    }
    /**
     * An accessor for creating requests from the HumanAgentAssistants collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Dialogflow dialogflow = new Dialogflow(...);}
     *   {@code Dialogflow.HumanAgentAssistants.List request = dialogflow.humanAgentAssistants().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public HumanAgentAssistants humanAgentAssistants() {
      return new HumanAgentAssistants();
    }

    /**
     * The "humanAgentAssistants" collection of methods.
     */
    public class HumanAgentAssistants {

      /**
       * Uses the specified human agent assistant to come up with suggestions (relevant articles and FAQs)
       * on how to respond to a given conversation.
       *
       * Create a request for the method "humanAgentAssistants.compileSuggestions".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link CompileSuggestions#execute()} method to invoke the remote operation.
       *
       * @param name Required. The resource name of the agent assistant.
      Format: `projects//humanAgentAssistants/`.
       * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1CompileSuggestionsRequest}
       * @return the request
       */
      public CompileSuggestions compileSuggestions(java.lang.String name, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1CompileSuggestionsRequest content) throws java.io.IOException {
        CompileSuggestions result = new CompileSuggestions(name, content);
        initialize(result);
        return result;
      }

      public class CompileSuggestions extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1CompileSuggestionsResponse> {

        private static final String REST_PATH = "v2beta1/{+name}:compileSuggestions";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/humanAgentAssistants/[^/]+$");

        /**
         * Uses the specified human agent assistant to come up with suggestions (relevant articles and
         * FAQs) on how to respond to a given conversation.
         *
         * Create a request for the method "humanAgentAssistants.compileSuggestions".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link CompileSuggestions#execute()} method to invoke the remote
         * operation. <p> {@link CompileSuggestions#initialize(com.google.api.client.googleapis.services.A
         * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param name Required. The resource name of the agent assistant.
      Format: `projects//humanAgentAssistants/`.
         * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1CompileSuggestionsRequest}
         * @since 1.13
         */
        protected CompileSuggestions(java.lang.String name, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1CompileSuggestionsRequest content) {
          super(Dialogflow.this, "POST", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1CompileSuggestionsResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/humanAgentAssistants/[^/]+$");
          }
        }

        @Override
        public CompileSuggestions set$Xgafv(java.lang.String $Xgafv) {
          return (CompileSuggestions) super.set$Xgafv($Xgafv);
        }

        @Override
        public CompileSuggestions setAccessToken(java.lang.String accessToken) {
          return (CompileSuggestions) super.setAccessToken(accessToken);
        }

        @Override
        public CompileSuggestions setAlt(java.lang.String alt) {
          return (CompileSuggestions) super.setAlt(alt);
        }

        @Override
        public CompileSuggestions setCallback(java.lang.String callback) {
          return (CompileSuggestions) super.setCallback(callback);
        }

        @Override
        public CompileSuggestions setFields(java.lang.String fields) {
          return (CompileSuggestions) super.setFields(fields);
        }

        @Override
        public CompileSuggestions setKey(java.lang.String key) {
          return (CompileSuggestions) super.setKey(key);
        }

        @Override
        public CompileSuggestions setOauthToken(java.lang.String oauthToken) {
          return (CompileSuggestions) super.setOauthToken(oauthToken);
        }

        @Override
        public CompileSuggestions setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (CompileSuggestions) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public CompileSuggestions setQuotaUser(java.lang.String quotaUser) {
          return (CompileSuggestions) super.setQuotaUser(quotaUser);
        }

        @Override
        public CompileSuggestions setUploadType(java.lang.String uploadType) {
          return (CompileSuggestions) super.setUploadType(uploadType);
        }

        @Override
        public CompileSuggestions setUploadProtocol(java.lang.String uploadProtocol) {
          return (CompileSuggestions) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The resource name of the agent assistant. Format:
         * `projects//humanAgentAssistants/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The resource name of the agent assistant. Format: `projects//humanAgentAssistants/`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The resource name of the agent assistant. Format:
         * `projects//humanAgentAssistants/`.
         */
        public CompileSuggestions setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/humanAgentAssistants/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public CompileSuggestions set(String parameterName, Object value) {
          return (CompileSuggestions) super.set(parameterName, value);
        }
      }
      /**
       * Creates a human agent assistant.
       *
       * Create a request for the method "humanAgentAssistants.create".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The project to create a agent assistant for.
      Format: `projects/`.
       * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1HumanAgentAssistant}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1HumanAgentAssistant content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1HumanAgentAssistant> {

        private static final String REST_PATH = "v2beta1/{+parent}/humanAgentAssistants";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Creates a human agent assistant.
         *
         * Create a request for the method "humanAgentAssistants.create".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The project to create a agent assistant for.
      Format: `projects/`.
         * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1HumanAgentAssistant}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1HumanAgentAssistant content) {
          super(Dialogflow.this, "POST", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1HumanAgentAssistant.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The project to create a agent assistant for. Format: `projects/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The project to create a agent assistant for. Format: `projects/`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The project to create a agent assistant for. Format: `projects/`.
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes the specified human agent assistant.
       *
       * Create a request for the method "humanAgentAssistants.delete".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. The resource name of the agent assistant.
      Format: `projects//humanAgentAssistants/`.
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v2beta1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/humanAgentAssistants/[^/]+$");

        /**
         * Deletes the specified human agent assistant.
         *
         * Create a request for the method "humanAgentAssistants.delete".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The resource name of the agent assistant.
      Format: `projects//humanAgentAssistants/`.
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/humanAgentAssistants/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The resource name of the agent assistant. Format:
         * `projects//humanAgentAssistants/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The resource name of the agent assistant. Format: `projects//humanAgentAssistants/`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The resource name of the agent assistant. Format:
         * `projects//humanAgentAssistants/`.
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/humanAgentAssistants/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Retrieves a human agent assistant.
       *
       * Create a request for the method "humanAgentAssistants.get".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The resource name of the agent assistant.
      Format: `projects//humanAgentAssistants/`.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1HumanAgentAssistant> {

        private static final String REST_PATH = "v2beta1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/humanAgentAssistants/[^/]+$");

        /**
         * Retrieves a human agent assistant.
         *
         * Create a request for the method "humanAgentAssistants.get".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The resource name of the agent assistant.
      Format: `projects//humanAgentAssistants/`.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Dialogflow.this, "GET", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1HumanAgentAssistant.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/humanAgentAssistants/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The resource name of the agent assistant. Format:
         * `projects//humanAgentAssistants/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The resource name of the agent assistant. Format: `projects//humanAgentAssistants/`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The resource name of the agent assistant. Format:
         * `projects//humanAgentAssistants/`.
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/humanAgentAssistants/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Returns the list of all human agent assistants.
       *
       * Create a request for the method "humanAgentAssistants.list".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The project to list all agent assistants from.
      Format: `projects/`.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListHumanAgentAssistantsResponse> {

        private static final String REST_PATH = "v2beta1/{+parent}/humanAgentAssistants";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Returns the list of all human agent assistants.
         *
         * Create a request for the method "humanAgentAssistants.list".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The project to list all agent assistants from.
      Format: `projects/`.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Dialogflow.this, "GET", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListHumanAgentAssistantsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The project to list all agent assistants from. Format: `projects/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The project to list all agent assistants from. Format: `projects/`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The project to list all agent assistants from. Format: `projects/`.
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. The maximum number of items to return in a single page. The default value is
         * 100; the maximum value is 1000.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional. The maximum number of items to return in a single page. The default value is 100; the
       maximum value is 1000.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Optional. The maximum number of items to return in a single page. The default value is
         * 100; the maximum value is 1000.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** Optional. The next_page_token value returned from a previous list request. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional. The next_page_token value returned from a previous list request.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** Optional. The next_page_token value returned from a previous list request. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates the specified human agent assistant.
       *
       * Create a request for the method "humanAgentAssistants.patch".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Required for all methods except `create` (`create` populates the name
      automatically).
      The unique
       *        identifier of human agent assistant.
      Format: `projects//humanAgentAssistants/`.
       * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1HumanAgentAssistant}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1HumanAgentAssistant content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1HumanAgentAssistant> {

        private static final String REST_PATH = "v2beta1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/humanAgentAssistants/[^/]+$");

        /**
         * Updates the specified human agent assistant.
         *
         * Create a request for the method "humanAgentAssistants.patch".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required for all methods except `create` (`create` populates the name
      automatically).
      The unique
       *        identifier of human agent assistant.
      Format: `projects//humanAgentAssistants/`.
         * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1HumanAgentAssistant}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1HumanAgentAssistant content) {
          super(Dialogflow.this, "PATCH", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1HumanAgentAssistant.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/humanAgentAssistants/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required for all methods except `create` (`create` populates the name automatically). The
         * unique identifier of human agent assistant. Format: `projects//humanAgentAssistants/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required for all methods except `create` (`create` populates the name automatically). The unique
       identifier of human agent assistant. Format: `projects//humanAgentAssistants/`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required for all methods except `create` (`create` populates the name automatically). The
         * unique identifier of human agent assistant. Format: `projects//humanAgentAssistants/`.
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/humanAgentAssistants/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /** Optional. The mask to specify which fields to update. */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Optional. The mask to specify which fields to update.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /** Optional. The mask to specify which fields to update. */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the KnowledgeBases collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Dialogflow dialogflow = new Dialogflow(...);}
     *   {@code Dialogflow.KnowledgeBases.List request = dialogflow.knowledgeBases().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public KnowledgeBases knowledgeBases() {
      return new KnowledgeBases();
    }

    /**
     * The "knowledgeBases" collection of methods.
     */
    public class KnowledgeBases {

      /**
       * Creates a knowledge base.
       *
       * Create a request for the method "knowledgeBases.create".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The project to create a knowledge base for.
      Format: `projects/`.
       * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase> {

        private static final String REST_PATH = "v2beta1/{+parent}/knowledgeBases";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Creates a knowledge base.
         *
         * Create a request for the method "knowledgeBases.create".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The project to create a knowledge base for.
      Format: `projects/`.
         * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase content) {
          super(Dialogflow.this, "POST", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The project to create a knowledge base for. Format: `projects/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The project to create a knowledge base for. Format: `projects/`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The project to create a knowledge base for. Format: `projects/`.
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes the specified knowledge base.
       *
       * Create a request for the method "knowledgeBases.delete".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the knowledge base to delete.
      Format: `projects//knowledgeBases/`.
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v2beta1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/knowledgeBases/[^/]+$");

        /**
         * Deletes the specified knowledge base.
         *
         * Create a request for the method "knowledgeBases.delete".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the knowledge base to delete.
      Format: `projects//knowledgeBases/`.
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/knowledgeBases/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the knowledge base to delete. Format: `projects//knowledgeBases/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the knowledge base to delete. Format: `projects//knowledgeBases/`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the knowledge base to delete. Format: `projects//knowledgeBases/`.
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/knowledgeBases/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * Optional. Force deletes the knowledge base. When set to true, any documents in the
         * knowledge base are also deleted.
         */
        @com.google.api.client.util.Key
        private java.lang.Boolean force;

        /** Optional. Force deletes the knowledge base. When set to true, any documents in the knowledge base
       are also deleted.
         */
        public java.lang.Boolean getForce() {
          return force;
        }

        /**
         * Optional. Force deletes the knowledge base. When set to true, any documents in the
         * knowledge base are also deleted.
         */
        public Delete setForce(java.lang.Boolean force) {
          this.force = force;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Retrieves the specified knowledge base.
       *
       * Create a request for the method "knowledgeBases.get".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the knowledge base to retrieve.
      Format `projects//knowledgeBases/`.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase> {

        private static final String REST_PATH = "v2beta1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/knowledgeBases/[^/]+$");

        /**
         * Retrieves the specified knowledge base.
         *
         * Create a request for the method "knowledgeBases.get".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the knowledge base to retrieve.
      Format `projects//knowledgeBases/`.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Dialogflow.this, "GET", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/knowledgeBases/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the knowledge base to retrieve. Format `projects//knowledgeBases/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the knowledge base to retrieve. Format `projects//knowledgeBases/`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the knowledge base to retrieve. Format `projects//knowledgeBases/`.
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/knowledgeBases/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Returns the list of all knowledge bases of the specified agent.
       *
       * Create a request for the method "knowledgeBases.list".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The project to list of knowledge bases for.
      Format: `projects/`.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListKnowledgeBasesResponse> {

        private static final String REST_PATH = "v2beta1/{+parent}/knowledgeBases";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Returns the list of all knowledge bases of the specified agent.
         *
         * Create a request for the method "knowledgeBases.list".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The project to list of knowledge bases for.
      Format: `projects/`.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Dialogflow.this, "GET", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListKnowledgeBasesResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The project to list of knowledge bases for. Format: `projects/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The project to list of knowledge bases for. Format: `projects/`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The project to list of knowledge bases for. Format: `projects/`.
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. The maximum number of items to return in a single page. By default 10 and at
         * most 100.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional. The maximum number of items to return in a single page. By default 10 and at most 100.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Optional. The maximum number of items to return in a single page. By default 10 and at
         * most 100.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** Optional. The next_page_token value returned from a previous list request. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional. The next_page_token value returned from a previous list request.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** Optional. The next_page_token value returned from a previous list request. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Documents collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Dialogflow dialogflow = new Dialogflow(...);}
       *   {@code Dialogflow.Documents.List request = dialogflow.documents().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Documents documents() {
        return new Documents();
      }

      /**
       * The "documents" collection of methods.
       */
      public class Documents {

        /**
         * Creates a new document.
         *
         * Operation
         *
         * Create a request for the method "documents.create".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The knoweldge base to create a document for.
        Format: `projects//knowledgeBases/`.
         * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Document}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Document content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v2beta1/{+parent}/documents";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/knowledgeBases/[^/]+$");

          /**
           * Creates a new document.
           *
           * Operation
           *
           * Create a request for the method "documents.create".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The knoweldge base to create a document for.
        Format: `projects//knowledgeBases/`.
           * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Document}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Document content) {
            super(Dialogflow.this, "POST", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/knowledgeBases/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The knoweldge base to create a document for. Format:
           * `projects//knowledgeBases/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The knoweldge base to create a document for. Format: `projects//knowledgeBases/`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The knoweldge base to create a document for. Format:
           * `projects//knowledgeBases/`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/knowledgeBases/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes the specified document.
         *
         * Operation
         *
         * Create a request for the method "documents.delete".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name The name of the document to delete.
        Format: `projects//knowledgeBases//documents/`.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v2beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$");

          /**
           * Deletes the specified document.
           *
           * Operation
           *
           * Create a request for the method "documents.delete".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the document to delete.
        Format: `projects//knowledgeBases//documents/`.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The name of the document to delete. Format: `projects//knowledgeBases//documents/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the document to delete. Format: `projects//knowledgeBases//documents/`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The name of the document to delete. Format: `projects//knowledgeBases//documents/`.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Retrieves the specified document.
         *
         * Create a request for the method "documents.get".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the document to retrieve.
        Format `projects//knowledgeBases//documents/`.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Document> {

          private static final String REST_PATH = "v2beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$");

          /**
           * Retrieves the specified document.
           *
           * Create a request for the method "documents.get".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the document to retrieve.
        Format `projects//knowledgeBases//documents/`.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Dialogflow.this, "GET", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Document.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the document to retrieve. Format
           * `projects//knowledgeBases//documents/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the document to retrieve. Format `projects//knowledgeBases//documents/`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the document to retrieve. Format
           * `projects//knowledgeBases//documents/`.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Returns the list of all documents of the knowledge base.
         *
         * Create a request for the method "documents.list".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The knowledge base to list all documents for.
        Format: `projects//knowledgeBases/`.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListDocumentsResponse> {

          private static final String REST_PATH = "v2beta1/{+parent}/documents";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/knowledgeBases/[^/]+$");

          /**
           * Returns the list of all documents of the knowledge base.
           *
           * Create a request for the method "documents.list".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The knowledge base to list all documents for.
        Format: `projects//knowledgeBases/`.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Dialogflow.this, "GET", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListDocumentsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/knowledgeBases/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The knowledge base to list all documents for. Format:
           * `projects//knowledgeBases/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The knowledge base to list all documents for. Format: `projects//knowledgeBases/`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The knowledge base to list all documents for. Format:
           * `projects//knowledgeBases/`.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/knowledgeBases/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. The maximum number of items to return in a single page. By default 10 and at
           * most 100.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of items to return in a single page. By default 10 and at most 100.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of items to return in a single page. By default 10 and at
           * most 100.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** Optional. The next_page_token value returned from a previous list request. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. The next_page_token value returned from a previous list request.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** Optional. The next_page_token value returned from a previous list request. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
    }
    /**
     * An accessor for creating requests from the Operations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Dialogflow dialogflow = new Dialogflow(...);}
     *   {@code Dialogflow.Operations.List request = dialogflow.operations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Operations operations() {
      return new Operations();
    }

    /**
     * The "operations" collection of methods.
     */
    public class Operations {

      /**
       * Gets the latest state of a long-running operation.  Clients can use this method to poll the
       * operation result at intervals as recommended by the API service.
       *
       * Create a request for the method "operations.get".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name The name of the operation resource.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

        private static final String REST_PATH = "v2beta1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/operations/[^/]+$");

        /**
         * Gets the latest state of a long-running operation.  Clients can use this method to poll the
         * operation result at intervals as recommended by the API service.
         *
         * Create a request for the method "operations.get".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the operation resource.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Dialogflow.this, "GET", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/operations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the operation resource. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the operation resource.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the operation resource. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/operations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the PhoneNumberOrders collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Dialogflow dialogflow = new Dialogflow(...);}
     *   {@code Dialogflow.PhoneNumberOrders.List request = dialogflow.phoneNumberOrders().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public PhoneNumberOrders phoneNumberOrders() {
      return new PhoneNumberOrders();
    }

    /**
     * The "phoneNumberOrders" collection of methods.
     */
    public class PhoneNumberOrders {

      /**
       * Cancels an `PhoneNumberOrder`. Returns an error if the order is in state IN_PROGRESS or
       * COMPLETED.
       *
       * Create a request for the method "phoneNumberOrders.cancel".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
       *
       * @param name Required. The unique identifier of the order to delete.
      Format: `projects//phoneNumberOrders/`.
       * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1CancelPhoneNumberOrderRequest}
       * @return the request
       */
      public Cancel cancel(java.lang.String name, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1CancelPhoneNumberOrderRequest content) throws java.io.IOException {
        Cancel result = new Cancel(name, content);
        initialize(result);
        return result;
      }

      public class Cancel extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v2beta1/{+name}:cancel";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/phoneNumberOrders/[^/]+$");

        /**
         * Cancels an `PhoneNumberOrder`. Returns an error if the order is in state IN_PROGRESS or
         * COMPLETED.
         *
         * Create a request for the method "phoneNumberOrders.cancel".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
         * <p> {@link
         * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The unique identifier of the order to delete.
      Format: `projects//phoneNumberOrders/`.
         * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1CancelPhoneNumberOrderRequest}
         * @since 1.13
         */
        protected Cancel(java.lang.String name, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1CancelPhoneNumberOrderRequest content) {
          super(Dialogflow.this, "POST", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/phoneNumberOrders/[^/]+$");
          }
        }

        @Override
        public Cancel set$Xgafv(java.lang.String $Xgafv) {
          return (Cancel) super.set$Xgafv($Xgafv);
        }

        @Override
        public Cancel setAccessToken(java.lang.String accessToken) {
          return (Cancel) super.setAccessToken(accessToken);
        }

        @Override
        public Cancel setAlt(java.lang.String alt) {
          return (Cancel) super.setAlt(alt);
        }

        @Override
        public Cancel setCallback(java.lang.String callback) {
          return (Cancel) super.setCallback(callback);
        }

        @Override
        public Cancel setFields(java.lang.String fields) {
          return (Cancel) super.setFields(fields);
        }

        @Override
        public Cancel setKey(java.lang.String key) {
          return (Cancel) super.setKey(key);
        }

        @Override
        public Cancel setOauthToken(java.lang.String oauthToken) {
          return (Cancel) super.setOauthToken(oauthToken);
        }

        @Override
        public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Cancel) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Cancel setQuotaUser(java.lang.String quotaUser) {
          return (Cancel) super.setQuotaUser(quotaUser);
        }

        @Override
        public Cancel setUploadType(java.lang.String uploadType) {
          return (Cancel) super.setUploadType(uploadType);
        }

        @Override
        public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
          return (Cancel) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The unique identifier of the order to delete. Format:
         * `projects//phoneNumberOrders/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The unique identifier of the order to delete. Format: `projects//phoneNumberOrders/`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The unique identifier of the order to delete. Format:
         * `projects//phoneNumberOrders/`.
         */
        public Cancel setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/phoneNumberOrders/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Cancel set(String parameterName, Object value) {
          return (Cancel) super.set(parameterName, value);
        }
      }
      /**
       * Creates an order to request phone numbers be added to a project. The initial `LifecycleState` of
       * a newly created order is PENDING.
       *
       * Create a request for the method "phoneNumberOrders.create".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Resource identifier of the project requesting the orders.
      Format: `projects/`.
       * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1PhoneNumberOrder}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1PhoneNumberOrder content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1PhoneNumberOrder> {

        private static final String REST_PATH = "v2beta1/{+parent}/phoneNumberOrders";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Creates an order to request phone numbers be added to a project. The initial `LifecycleState`
         * of a newly created order is PENDING.
         *
         * Create a request for the method "phoneNumberOrders.create".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Resource identifier of the project requesting the orders.
      Format: `projects/`.
         * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1PhoneNumberOrder}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1PhoneNumberOrder content) {
          super(Dialogflow.this, "POST", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1PhoneNumberOrder.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Resource identifier of the project requesting the orders. Format: `projects/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Resource identifier of the project requesting the orders. Format: `projects/`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Resource identifier of the project requesting the orders. Format: `projects/`.
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Returns a specific `PhoneNumberOrder`.
       *
       * Create a request for the method "phoneNumberOrders.get".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The unique identifier of the order to retrieve.
      Format: `projects//phoneNumberOrders/`.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1PhoneNumberOrder> {

        private static final String REST_PATH = "v2beta1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/phoneNumberOrders/[^/]+$");

        /**
         * Returns a specific `PhoneNumberOrder`.
         *
         * Create a request for the method "phoneNumberOrders.get".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The unique identifier of the order to retrieve.
      Format: `projects//phoneNumberOrders/`.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Dialogflow.this, "GET", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1PhoneNumberOrder.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/phoneNumberOrders/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The unique identifier of the order to retrieve. Format:
         * `projects//phoneNumberOrders/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The unique identifier of the order to retrieve. Format: `projects//phoneNumberOrders/`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The unique identifier of the order to retrieve. Format:
         * `projects//phoneNumberOrders/`.
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/phoneNumberOrders/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists of all `PhoneNumberOrder` resources in the specified project.
       *
       * Create a request for the method "phoneNumberOrders.list".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The project to list all orders from.
      Format: `projects/`.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListPhoneNumberOrdersResponse> {

        private static final String REST_PATH = "v2beta1/{+parent}/phoneNumberOrders";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Lists of all `PhoneNumberOrder` resources in the specified project.
         *
         * Create a request for the method "phoneNumberOrders.list".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The project to list all orders from.
      Format: `projects/`.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Dialogflow.this, "GET", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListPhoneNumberOrdersResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The project to list all orders from. Format: `projects/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The project to list all orders from. Format: `projects/`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The project to list all orders from. Format: `projects/`.
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. The maximum number of items to return in a single page. The default value is
         * 100. The maximum value is 1000.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional. The maximum number of items to return in a single page. The default value is 100. The
       maximum value is 1000.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Optional. The maximum number of items to return in a single page. The default value is
         * 100. The maximum value is 1000.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** Optional. The next_page_token value returned from a previous list request. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional. The next_page_token value returned from a previous list request.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** Optional. The next_page_token value returned from a previous list request. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates the specified `PhoneNumberOrder` resource. Returns an error if the order is in state
       * IN_PROGRESS or COMPLETED.
       *
       * Create a request for the method "phoneNumberOrders.patch".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Required. The unique identifier of this order.
      Format: `projects//phoneNumberOrders/`.
       * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1PhoneNumberOrder}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1PhoneNumberOrder content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1PhoneNumberOrder> {

        private static final String REST_PATH = "v2beta1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/phoneNumberOrders/[^/]+$");

        /**
         * Updates the specified `PhoneNumberOrder` resource. Returns an error if the order is in state
         * IN_PROGRESS or COMPLETED.
         *
         * Create a request for the method "phoneNumberOrders.patch".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The unique identifier of this order.
      Format: `projects//phoneNumberOrders/`.
         * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1PhoneNumberOrder}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1PhoneNumberOrder content) {
          super(Dialogflow.this, "PATCH", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1PhoneNumberOrder.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/phoneNumberOrders/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The unique identifier of this order. Format: `projects//phoneNumberOrders/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The unique identifier of this order. Format: `projects//phoneNumberOrders/`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The unique identifier of this order. Format: `projects//phoneNumberOrders/`.
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/phoneNumberOrders/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /** Optional. The mask to control which fields get updated. */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Optional. The mask to control which fields get updated.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /** Optional. The mask to control which fields get updated. */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the PhoneNumbers collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Dialogflow dialogflow = new Dialogflow(...);}
     *   {@code Dialogflow.PhoneNumbers.List request = dialogflow.phoneNumbers().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public PhoneNumbers phoneNumbers() {
      return new PhoneNumbers();
    }

    /**
     * The "phoneNumbers" collection of methods.
     */
    public class PhoneNumbers {

      /**
       * Requests deletion of a `PhoneNumber`. The `PhoneNumber` is moved into the DELETE_REQUESTED state
       * immediately, and is deleted approximately 30 days later. This method may only be called on a
       * `PhoneNumber` in the ACTIVE state.
       *
       * Create a request for the method "phoneNumbers.delete".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. The unique identifier of the `PhoneNumber` to delete.
      Format: `projects//phoneNumbers/`.
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1PhoneNumber> {

        private static final String REST_PATH = "v2beta1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/phoneNumbers/[^/]+$");

        /**
         * Requests deletion of a `PhoneNumber`. The `PhoneNumber` is moved into the DELETE_REQUESTED
         * state immediately, and is deleted approximately 30 days later. This method may only be called
         * on a `PhoneNumber` in the ACTIVE state.
         *
         * Create a request for the method "phoneNumbers.delete".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The unique identifier of the `PhoneNumber` to delete.
      Format: `projects//phoneNumbers/`.
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1PhoneNumber.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/phoneNumbers/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The unique identifier of the `PhoneNumber` to delete. Format:
         * `projects//phoneNumbers/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The unique identifier of the `PhoneNumber` to delete. Format: `projects//phoneNumbers/`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The unique identifier of the `PhoneNumber` to delete. Format:
         * `projects//phoneNumbers/`.
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/phoneNumbers/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Returns the list of all phone numbers in the specified project.
       *
       * Create a request for the method "phoneNumbers.list".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The project to list all `PhoneNumber` resources from.
      Format: `projects/`.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListPhoneNumbersResponse> {

        private static final String REST_PATH = "v2beta1/{+parent}/phoneNumbers";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Returns the list of all phone numbers in the specified project.
         *
         * Create a request for the method "phoneNumbers.list".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The project to list all `PhoneNumber` resources from.
      Format: `projects/`.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Dialogflow.this, "GET", REST_PATH, null, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListPhoneNumbersResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The project to list all `PhoneNumber` resources from. Format: `projects/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The project to list all `PhoneNumber` resources from. Format: `projects/`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The project to list all `PhoneNumber` resources from. Format: `projects/`.
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. The maximum number of items to return in a single page. The default value is
         * 100. The maximum value is 1000.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional. The maximum number of items to return in a single page. The default value is 100. The
       maximum value is 1000.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Optional. The maximum number of items to return in a single page. The default value is
         * 100. The maximum value is 1000.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** Optional. The next_page_token value returned from a previous list request. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional. The next_page_token value returned from a previous list request.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** Optional. The next_page_token value returned from a previous list request. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        /**
         * Optional. Controls whether `PhoneNumber` resources in the DELETE_REQUESTED state should
         * be returned. Defaults to false.
         */
        @com.google.api.client.util.Key
        private java.lang.Boolean showDeleted;

        /** Optional. Controls whether `PhoneNumber` resources in the DELETE_REQUESTED state should be
       returned. Defaults to false.
         */
        public java.lang.Boolean getShowDeleted() {
          return showDeleted;
        }

        /**
         * Optional. Controls whether `PhoneNumber` resources in the DELETE_REQUESTED state should
         * be returned. Defaults to false.
         */
        public List setShowDeleted(java.lang.Boolean showDeleted) {
          this.showDeleted = showDeleted;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates the specified `PhoneNumber`.
       *
       * Create a request for the method "phoneNumbers.patch".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Required. The unique identifier of this phone number.
      Format: `projects//phoneNumbers/`.
       * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1PhoneNumber}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1PhoneNumber content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1PhoneNumber> {

        private static final String REST_PATH = "v2beta1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/phoneNumbers/[^/]+$");

        /**
         * Updates the specified `PhoneNumber`.
         *
         * Create a request for the method "phoneNumbers.patch".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The unique identifier of this phone number.
      Format: `projects//phoneNumbers/`.
         * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1PhoneNumber}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1PhoneNumber content) {
          super(Dialogflow.this, "PATCH", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1PhoneNumber.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/phoneNumbers/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The unique identifier of this phone number. Format: `projects//phoneNumbers/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The unique identifier of this phone number. Format: `projects//phoneNumbers/`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The unique identifier of this phone number. Format: `projects//phoneNumbers/`.
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/phoneNumbers/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /** Optional. The mask to control which fields get updated. */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Optional. The mask to control which fields get updated.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /** Optional. The mask to control which fields get updated. */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }
      /**
       * Cancels the deletion request for a `PhoneNumber`. This method may only be called on a
       * `PhoneNumber` in the DELETE_REQUESTED state.
       *
       * Create a request for the method "phoneNumbers.undelete".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Undelete#execute()} method to invoke the remote operation.
       *
       * @param name Required. The unique identifier of the `PhoneNumber` to delete.
      Format: `projects//phoneNumbers/`.
       * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1UndeletePhoneNumberRequest}
       * @return the request
       */
      public Undelete undelete(java.lang.String name, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1UndeletePhoneNumberRequest content) throws java.io.IOException {
        Undelete result = new Undelete(name, content);
        initialize(result);
        return result;
      }

      public class Undelete extends DialogflowRequest<com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1PhoneNumber> {

        private static final String REST_PATH = "v2beta1/{+name}:undelete";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/phoneNumbers/[^/]+$");

        /**
         * Cancels the deletion request for a `PhoneNumber`. This method may only be called on a
         * `PhoneNumber` in the DELETE_REQUESTED state.
         *
         * Create a request for the method "phoneNumbers.undelete".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Undelete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Undelete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The unique identifier of the `PhoneNumber` to delete.
      Format: `projects//phoneNumbers/`.
         * @param content the {@link com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1UndeletePhoneNumberRequest}
         * @since 1.13
         */
        protected Undelete(java.lang.String name, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1UndeletePhoneNumberRequest content) {
          super(Dialogflow.this, "POST", REST_PATH, content, com.google.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1PhoneNumber.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/phoneNumbers/[^/]+$");
          }
        }

        @Override
        public Undelete set$Xgafv(java.lang.String $Xgafv) {
          return (Undelete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Undelete setAccessToken(java.lang.String accessToken) {
          return (Undelete) super.setAccessToken(accessToken);
        }

        @Override
        public Undelete setAlt(java.lang.String alt) {
          return (Undelete) super.setAlt(alt);
        }

        @Override
        public Undelete setCallback(java.lang.String callback) {
          return (Undelete) super.setCallback(callback);
        }

        @Override
        public Undelete setFields(java.lang.String fields) {
          return (Undelete) super.setFields(fields);
        }

        @Override
        public Undelete setKey(java.lang.String key) {
          return (Undelete) super.setKey(key);
        }

        @Override
        public Undelete setOauthToken(java.lang.String oauthToken) {
          return (Undelete) super.setOauthToken(oauthToken);
        }

        @Override
        public Undelete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Undelete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Undelete setQuotaUser(java.lang.String quotaUser) {
          return (Undelete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Undelete setUploadType(java.lang.String uploadType) {
          return (Undelete) super.setUploadType(uploadType);
        }

        @Override
        public Undelete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Undelete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The unique identifier of the `PhoneNumber` to delete. Format:
         * `projects//phoneNumbers/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The unique identifier of the `PhoneNumber` to delete. Format: `projects//phoneNumbers/`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The unique identifier of the `PhoneNumber` to delete. Format:
         * `projects//phoneNumbers/`.
         */
        public Undelete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/phoneNumbers/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Undelete set(String parameterName, Object value) {
          return (Undelete) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * Builder for {@link Dialogflow}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link Dialogflow}. */
    @Override
    public Dialogflow build() {
      return new Dialogflow(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link DialogflowRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setDialogflowRequestInitializer(
        DialogflowRequestInitializer dialogflowRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(dialogflowRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
