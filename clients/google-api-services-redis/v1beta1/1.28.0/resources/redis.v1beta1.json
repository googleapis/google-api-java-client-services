{
  "fullyEncodeReservedExpansion": true,
  "title": "Google Cloud Memorystore for Redis API",
  "ownerName": "Google",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "description": "Lists information about the supported locations for this service.",
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "parameters": {
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "location": "path"
                },
                "pageToken": {
                  "description": "The standard list page token.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "location": "query",
                  "description": "The standard list page size.",
                  "format": "int32",
                  "type": "integer"
                },
                "filter": {
                  "location": "query",
                  "description": "The standard list filter.",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1beta1/projects/{projectsId}/locations",
              "id": "redis.projects.locations.list",
              "path": "v1beta1/{+name}/locations"
            },
            "get": {
              "response": {
                "$ref": "Location"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path",
                  "description": "Resource name for the location.",
                  "required": true,
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}",
              "path": "v1beta1/{+name}",
              "id": "redis.projects.locations.get",
              "description": "Gets information about a location."
            }
          },
          "resources": {
            "operations": {
              "methods": {
                "cancel": {
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "description": "The name of the operation resource to be cancelled.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "path": "v1beta1/{+name}:cancel",
                  "id": "redis.projects.locations.operations.cancel",
                  "description": "Starts asynchronous cancellation on a long-running operation.  The server\nmakes a best effort to cancel the operation, but success is not\nguaranteed.  If the server doesn't support this method, it returns\n`google.rpc.Code.UNIMPLEMENTED`.  Clients can use\nOperations.GetOperation or\nother methods to check whether the cancellation succeeded or whether the\noperation completed despite cancellation. On successful cancellation,\nthe operation is not deleted; instead, it becomes an operation with\nan Operation.error value with a google.rpc.Status.code of 1,\ncorresponding to `Code.CANCELLED`."
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "The name of the operation resource to be deleted.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "id": "redis.projects.locations.operations.delete",
                  "path": "v1beta1/{+name}",
                  "description": "Deletes a long-running operation. This method indicates that the client is\nno longer interested in the operation result. It does not cancel the\noperation. If the server doesn't support this method, it returns\n`google.rpc.Code.UNIMPLEMENTED`."
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "description": "The standard list filter.",
                      "type": "string"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "The name of the operation's parent resource.",
                      "required": true,
                      "type": "string"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "The standard list page token.",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/operations",
                  "path": "v1beta1/{+name}/operations",
                  "id": "redis.projects.locations.operations.list",
                  "description": "Lists operations that match the specified filter in the request. If the\nserver doesn't support this method, it returns `UNIMPLEMENTED`.\n\nNOTE: the `name` binding allows API services to override the binding\nto use different resource name schemes, such as `users/*/operations`. To\noverride the binding, API services can add a binding such as\n`\"/v1/{name=users/*}/operations\"` to their service configuration.\nFor backwards compatibility, the default name includes the operations\ncollection id, however overriding users must ensure the name binding\nis the parent resource, without the operations collection id.",
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET"
                },
                "get": {
                  "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "description": "The name of the operation resource."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "path": "v1beta1/{+name}",
                  "id": "redis.projects.locations.operations.get"
                }
              }
            },
            "instances": {
              "methods": {
                "patch": {
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "description": "Required. Mask of fields to update. At least one path must be supplied in\nthis field. The elements of the repeated paths field may only include these\nfields from Instance:\n\n *   `displayName`\n *   `labels`\n *   `memorySizeGb`\n *   `redisConfig`",
                      "format": "google-fieldmask",
                      "type": "string"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "description": "Required. Unique name of the resource in this scope including project and\nlocation using the form:\n    `projects/{project_id}/locations/{location_id}/instances/{instance_id}`\n\nNote: Redis instances are managed and addressed at regional level so\nlocation_id here refers to a GCP region; however, users may choose which\nspecific zone (or collection of zones for cross-zone instances) an instance\nshould be provisioned in. Refer to location_id and\nalternative_location_id fields for more details.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "id": "redis.projects.locations.instances.patch",
                  "path": "v1beta1/{+name}",
                  "description": "Updates the metadata and configuration of a specific Redis instance.\n\nCompleted longrunning.Operation will contain the new instance object\nin the response field. The returned operation is automatically deleted\nafter a few hours, so there is no need to call DeleteOperation.",
                  "request": {
                    "$ref": "Instance"
                  }
                },
                "get": {
                  "description": "Gets the details of a specific Redis instance.",
                  "response": {
                    "$ref": "Instance"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "description": "Required. Redis instance resource name using the form:\n    `projects/{project_id}/locations/{location_id}/instances/{instance_id}`\nwhere `location_id` refers to a GCP region.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "path": "v1beta1/{+name}",
                  "id": "redis.projects.locations.instances.get"
                },
                "delete": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "description": "Required. Redis instance resource name using the form:\n    `projects/{project_id}/locations/{location_id}/instances/{instance_id}`\nwhere `location_id` refers to a GCP region."
                    }
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "path": "v1beta1/{+name}",
                  "id": "redis.projects.locations.instances.delete",
                  "description": "Deletes a specific Redis instance.  Instance stops serving and data is\ndeleted."
                },
                "import": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "description": "Required. Redis instance resource name using the form:\n    `projects/{project_id}/locations/{location_id}/instances/{instance_id}`\nwhere `location_id` refers to a GCP region.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:import",
                  "id": "redis.projects.locations.instances.import",
                  "path": "v1beta1/{+name}:import",
                  "description": "Import a Redis RDB snapshot file from Cloud Storage into a Redis instance.\n\nRedis may stop serving during this operation. Instance state will be\nIMPORTING for entire operation. When complete, the instance will contain\nonly data from the imported file.\n\nThe returned operation is automatically deleted after a few hours, so\nthere is no need to call DeleteOperation.",
                  "request": {
                    "$ref": "ImportInstanceRequest"
                  }
                },
                "failover": {
                  "request": {
                    "$ref": "FailoverInstanceRequest"
                  },
                  "description": "Initiates a failover of the master node to current replica node for a\nspecific STANDARD tier Cloud Memorystore for Redis instance.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. Redis instance resource name using the form:\n    `projects/{project_id}/locations/{location_id}/instances/{instance_id}`\nwhere `location_id` refers to a GCP region.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:failover",
                  "path": "v1beta1/{+name}:failover",
                  "id": "redis.projects.locations.instances.failover"
                },
                "list": {
                  "description": "Lists all Redis instances owned by a project in either the specified\nlocation (region) or all locations.\n\nThe location should have the following format:\n\n* `projects/{project_id}/locations/{location_id}`\n\nIf `location_id` is specified as `-` (wildcard), then all regions\navailable to the project are queried, and the results are aggregated.",
                  "response": {
                    "$ref": "ListInstancesResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "pageToken": {
                      "description": "The `next_page_token` value returned from a previous\nListInstances request, if any.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "The maximum number of items to return.\n\nIf not specified, a default value of 1000 will be used by the service.\nRegardless of the page_size value, the response may include a partial list\nand a caller should only rely on response's\n`next_page_token`\nto determine if there are more instances left to be queried.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. The resource name of the instance location using the form:\n    `projects/{project_id}/locations/{location_id}`\nwhere `location_id` refers to a GCP region.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/instances",
                  "path": "v1beta1/{+parent}/instances",
                  "id": "redis.projects.locations.instances.list"
                },
                "create": {
                  "parameters": {
                    "parent": {
                      "description": "Required. The resource name of the instance location using the form:\n    `projects/{project_id}/locations/{location_id}`\nwhere `location_id` refers to a GCP region.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    },
                    "instanceId": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. The logical name of the Redis instance in the customer project\nwith the following restrictions:\n\n* Must contain only lowercase letters, numbers, and hyphens.\n* Must start with a letter.\n* Must be between 1-40 characters.\n* Must end with a number or a letter.\n* Must be unique within the customer project / location"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/instances",
                  "id": "redis.projects.locations.instances.create",
                  "path": "v1beta1/{+parent}/instances",
                  "description": "Creates a Redis instance based on the specified tier and memory size.\n\nBy default, the instance is accessible from the project's\n[default network](/compute/docs/networks-and-firewalls#networks).\n\nThe creation is executed asynchronously and callers may check the returned\noperation to track its progress. Once the operation is completed the Redis\ninstance will be fully functional. Completed longrunning.Operation will\ncontain the new instance object in the response field.\n\nThe returned operation is automatically deleted after a few hours, so there\nis no need to call DeleteOperation.",
                  "request": {
                    "$ref": "Instance"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "export": {
                  "parameters": {
                    "name": {
                      "description": "Required. Redis instance resource name using the form:\n    `projects/{project_id}/locations/{location_id}/instances/{instance_id}`\nwhere `location_id` refers to a GCP region.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:export",
                  "id": "redis.projects.locations.instances.export",
                  "path": "v1beta1/{+name}:export",
                  "description": "Export Redis instance data into a Redis RDB format file in Cloud Storage.\n\nRedis will continue serving during this operation.\n\nThe returned operation is automatically deleted after a few hours, so\nthere is no need to call DeleteOperation.",
                  "request": {
                    "$ref": "ExportInstanceRequest"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "parameters": {
    "alt": {
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ]
    }
  },
  "version": "v1beta1",
  "baseUrl": "https://redis.googleapis.com/",
  "kind": "discovery#restDescription",
  "description": "Creates and manages Redis instances on the Google Cloud Platform.",
  "servicePath": "",
  "basePath": "",
  "id": "redis:v1beta1",
  "documentationLink": "https://cloud.google.com/memorystore/docs/redis/",
  "revision": "20191104",
  "discoveryVersion": "v1",
  "version_module": true,
  "schemas": {
    "FailoverInstanceRequest": {
      "description": "Request for Failover.",
      "type": "object",
      "properties": {
        "dataProtectionMode": {
          "enum": [
            "DATA_PROTECTION_MODE_UNSPECIFIED",
            "LIMITED_DATA_LOSS",
            "FORCE_DATA_LOSS"
          ],
          "description": "Optional. Available data protection modes that the user can choose. If it's\nunspecified, data protection mode will be LIMITED_DATA_LOSS by default.",
          "type": "string",
          "enumDescriptions": [
            "Defaults to LIMITED_DATA_LOSS if a data protection mode is not\nspecified.",
            "Instance failover will be protected with data loss control. More\nspecifically, the failover will only be performed if the current\nreplication offset diff between master and replica is under a certain\nthreshold.",
            "Instance failover will be performed without data loss control."
          ]
        }
      },
      "id": "FailoverInstanceRequest"
    },
    "ListOperationsResponse": {
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        }
      },
      "id": "ListOperationsResponse"
    },
    "GcsDestination": {
      "description": "The Cloud Storage location for the output content",
      "type": "object",
      "properties": {
        "uri": {
          "description": "Required. Data destination URI (e.g.\n'gs://my_bucket/my_object'). Existing files will be overwritten.",
          "type": "string"
        }
      },
      "id": "GcsDestination"
    },
    "GoogleCloudRedisV1beta1ZoneMetadata": {
      "description": "Defines specific information for a particular zone. Currently empty and\nreserved for future use only.",
      "type": "object",
      "properties": {},
      "id": "GoogleCloudRedisV1beta1ZoneMetadata"
    },
    "ListLocationsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        }
      },
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations."
    },
    "GcsSource": {
      "description": "The Cloud Storage location for the input content",
      "type": "object",
      "properties": {
        "uri": {
          "description": "Required. Source data URI. (e.g. 'gs://my_bucket/my_object').",
          "type": "string"
        }
      },
      "id": "GcsSource"
    },
    "InputConfig": {
      "properties": {
        "gcsSource": {
          "$ref": "GcsSource",
          "description": "Google Cloud Storage location where input content is located."
        }
      },
      "id": "InputConfig",
      "description": "The input content",
      "type": "object"
    },
    "ListInstancesResponse": {
      "description": "Response for ListInstances.",
      "type": "object",
      "properties": {
        "instances": {
          "type": "array",
          "items": {
            "$ref": "Instance"
          },
          "description": "A list of Redis instances in the project in the specified location,\nor across all locations.\n\nIf the `location_id` in the parent field of the request is \"-\", all regions\navailable to the project are queried, and the results aggregated.\nIf in such an aggregated query a location is unavailable, a dummy Redis\nentry is included in the response with the `name` field set to a value of\nthe form `projects/{project_id}/locations/{location_id}/instances/`- and\nthe `status` field set to ERROR and `status_message` field set to \"location\nnot available for ListInstances\"."
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more\nresults in the list.",
          "type": "string"
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        }
      },
      "id": "ListInstancesResponse"
    },
    "Operation": {
      "properties": {
        "metadata": {
          "description": "{\n\n`createTime`: The time the operation was created.\n\n`endTime`: The time the operation finished running.\n\n`target`: Server-defined resource path for the target of the operation.\n\n`verb`: Name of the verb executed by the operation.\n\n`statusDetail`: Human-readable status of the operation, if any.\n\n`cancelRequested`: Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.\n\n`apiVersion`: API version used to start the operation.\n\n}",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
          "type": "boolean"
        },
        "response": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`."
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        }
      },
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
      "type": "object"
    },
    "OutputConfig": {
      "description": "The output content",
      "type": "object",
      "properties": {
        "gcsDestination": {
          "description": "Google Cloud Storage destination for output content.",
          "$ref": "GcsDestination"
        }
      },
      "id": "OutputConfig"
    },
    "Instance": {
      "id": "Instance",
      "description": "A Google Cloud Redis instance.",
      "type": "object",
      "properties": {
        "redisVersion": {
          "description": "Optional. The version of Redis software.\nIf not provided, latest supported version will be used. Updating the\nversion will perform an upgrade/downgrade to the new version. Currently,\nthe supported values are:\n\n *   `REDIS_4_0` for Redis 4.0 compatibility (default)\n *   `REDIS_3_2` for Redis 3.2 compatibility",
          "type": "string"
        },
        "tier": {
          "enumDescriptions": [
            "Not set.",
            "BASIC tier: standalone instance",
            "STANDARD_HA tier: highly available primary/replica instances"
          ],
          "enum": [
            "TIER_UNSPECIFIED",
            "BASIC",
            "STANDARD_HA"
          ],
          "description": "Required. The service tier of the instance.",
          "type": "string"
        },
        "memorySizeGb": {
          "description": "Required. Redis memory size in GiB.",
          "format": "int32",
          "type": "integer"
        },
        "displayName": {
          "description": "An arbitrary and optional user-provided name for the instance.",
          "type": "string"
        },
        "locationId": {
          "description": "Optional. The zone where the instance will be provisioned. If not provided,\nthe service will choose a zone for the instance. For STANDARD_HA tier,\ninstances will be created across two zones for protection against zonal\nfailures. If alternative_location_id is also provided, it must be\ndifferent from location_id.",
          "type": "string"
        },
        "reservedIpRange": {
          "description": "Optional. The CIDR range of internal addresses that are reserved for this\ninstance. If not provided, the service will choose an unused /29 block,\nfor example, 10.0.0.0/29 or 192.168.0.0/29. Ranges must be unique\nand non-overlapping with existing subnets in an authorized network.",
          "type": "string"
        },
        "currentLocationId": {
          "description": "Output only. The current zone where the Redis endpoint is placed. For Basic\nTier instances, this will always be the same as the location_id\nprovided by the user at creation time. For Standard Tier instances,\nthis can be either location_id or alternative_location_id and can\nchange after a failover event.",
          "type": "string"
        },
        "alternativeLocationId": {
          "description": "Optional. Only applicable to STANDARD_HA tier which protects the instance\nagainst zonal failures by provisioning it across two zones. If provided, it\nmust be a different zone from the one provided in location_id.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The time the instance was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource labels to represent user provided metadata",
          "type": "object"
        },
        "statusMessage": {
          "description": "Output only. Additional information about the current status of this\ninstance, if available.",
          "type": "string"
        },
        "authorizedNetwork": {
          "description": "Optional. The full name of the Google Compute Engine\n[network](/compute/docs/networks-and-firewalls#networks) to which the\ninstance is connected. If left unspecified, the `default` network\nwill be used.",
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "Not set.",
            "Redis instance is being created.",
            "Redis instance has been created and is fully usable.",
            "Redis instance configuration is being updated. Certain kinds of updates\nmay cause the instance to become unusable while the update is in\nprogress.",
            "Redis instance is being deleted.",
            "Redis instance is being repaired and may be unusable.",
            "Maintenance is being performed on this Redis instance.",
            "Redis instance is importing data (availability may be affected).",
            "Redis instance is failing over (availability may be affected)."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "READY",
            "UPDATING",
            "DELETING",
            "REPAIRING",
            "MAINTENANCE",
            "IMPORTING",
            "FAILING_OVER"
          ],
          "description": "Output only. The current state of this instance.",
          "type": "string"
        },
        "name": {
          "description": "Required. Unique name of the resource in this scope including project and\nlocation using the form:\n    `projects/{project_id}/locations/{location_id}/instances/{instance_id}`\n\nNote: Redis instances are managed and addressed at regional level so\nlocation_id here refers to a GCP region; however, users may choose which\nspecific zone (or collection of zones for cross-zone instances) an instance\nshould be provisioned in. Refer to location_id and\nalternative_location_id fields for more details.",
          "type": "string"
        },
        "persistenceIamIdentity": {
          "description": "Output only. Cloud IAM identity used by import / export operations to\ntransfer data to/from Cloud Storage. Format is\n\"serviceAccount:\u003cservice_account_email\u003e\". The value may change over time\nfor a given instance so should be checked before each import/export\noperation.",
          "type": "string"
        },
        "port": {
          "type": "integer",
          "description": "Output only. The port number of the exposed Redis endpoint.",
          "format": "int32"
        },
        "redisConfigs": {
          "description": "Optional. Redis configuration parameters, according to\nhttp://redis.io/topics/config. Currently, the only supported parameters\nare:\n\n Redis 3.2 and above:\n\n *   maxmemory-policy\n *   notify-keyspace-events\n\n Redis 4.0 and above:\n\n *   activedefrag\n *   lfu-log-factor\n *   lfu-decay-time",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "host": {
          "description": "Output only. Hostname or IP address of the exposed Redis endpoint used by\nclients to connect to the service.",
          "type": "string"
        }
      }
    },
    "ExportInstanceRequest": {
      "description": "Request for Export.",
      "type": "object",
      "properties": {
        "outputConfig": {
          "$ref": "OutputConfig",
          "description": "Required. Specify data to be exported."
        }
      },
      "id": "ExportInstanceRequest"
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "properties": {
        "details": {
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
          "type": "array",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          }
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      },
      "id": "Status"
    },
    "ImportInstanceRequest": {
      "properties": {
        "inputConfig": {
          "$ref": "InputConfig",
          "description": "Required. Specify data to be imported."
        }
      },
      "id": "ImportInstanceRequest",
      "description": "Request for Import.",
      "type": "object"
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudRedisV1beta1LocationMetadata": {
      "description": "This location metadata represents additional configuration options for a\ngiven location where a Redis instance may be created. All fields are output\nonly. It is returned as content of the\n`google.cloud.location.Location.metadata` field.",
      "type": "object",
      "properties": {
        "availableZones": {
          "additionalProperties": {
            "$ref": "GoogleCloudRedisV1beta1ZoneMetadata"
          },
          "description": "Output only. The set of available zones in the location. The map is keyed\nby the lowercase ID of each zone, as defined by GCE. These keys can be\nspecified in `location_id` or `alternative_location_id` fields when\ncreating a Redis instance.",
          "type": "object"
        }
      },
      "id": "GoogleCloudRedisV1beta1LocationMetadata"
    },
    "Location": {
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Full resource name for the region. For example: \"projects/example-project/locations/us-east1\".",
          "type": "string"
        },
        "locationId": {
          "description": "Resource ID for the region. For example: \"us-east1\".",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name.\nFor example, \"Tokyo\".",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Output only. The set of available zones in the location. The map is keyed by the lowercase ID of each zone, as defined by Compute Engine. These keys can be specified in `location_id` or `alternative_location_id` fields when creating a Redis instance.",
          "type": "object"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example\n\n    {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object"
        }
      },
      "id": "Location"
    },
    "GoogleCloudCommonOperationMetadata": {
      "description": "Represents the metadata of the long-running operation.",
      "type": "object",
      "properties": {
        "endTime": {
          "description": "[Output only] The time the operation finished running.",
          "format": "google-datetime",
          "type": "string"
        },
        "cancelRequested": {
          "description": "[Output only] Identifies whether the user has requested cancellation\nof the operation. Operations that have successfully been cancelled\nhave Operation.error value with a google.rpc.Status.code of 1,\ncorresponding to `Code.CANCELLED`.",
          "type": "boolean"
        },
        "verb": {
          "description": "[Output only] Name of the verb executed by the operation.",
          "type": "string"
        },
        "createTime": {
          "description": "[Output only] The time the operation was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "statusDetail": {
          "description": "[Output only] Human-readable status of the operation, if any.",
          "type": "string"
        },
        "apiVersion": {
          "description": "[Output only] API version used to start the operation.",
          "type": "string"
        },
        "target": {
          "description": "[Output only] Server-defined resource path for the target of the operation.",
          "type": "string"
        }
      },
      "id": "GoogleCloudCommonOperationMetadata"
    }
  },
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "protocol": "rest",
  "canonicalName": "Cloud Redis",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "rootUrl": "https://redis.googleapis.com/",
  "ownerDomain": "google.com",
  "name": "redis",
  "batchPath": "batch"
}
