/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Stores the number of different kind of user engagement actions. Abuse Report is also consider an
 * engagement. Currently we only have abuse report engagements but in future we might add other
 * types of engagements as well.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AppsPeopleActivityStreamqualityDistillerEngagements extends com.google.api.client.json.GenericJson {

  /**
   * Corresponds on "This account might be compromised or hacked" reporting action.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long reportCompromised;

  /**
   * Corresponds on "Harassment or bullying" reporting action.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long reportHarassment;

  /**
   * Corresponds on "Hate speach or graphic violence" reporting action.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long reportHate;

  /**
   * Corresponds on "Pornography or sexually explicit material" reporting action.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long reportPorn;

  /**
   * Corresponds on "Unwanted commercial content or spam" reporting action.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long reportSpam;

  /**
   * Number of times this activity was served out of asbe/stanza.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long serveCount;

  /**
   * Timestamp in seconds for which time this record is valid.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long timeSec;

  /**
   * Corresponds on Distiller comment thumbs down action.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long ytThumbsDown;

  /**
   * Corresponds on "This account might be compromised or hacked" reporting action.
   * @return value or {@code null} for none
   */
  public java.lang.Long getReportCompromised() {
    return reportCompromised;
  }

  /**
   * Corresponds on "This account might be compromised or hacked" reporting action.
   * @param reportCompromised reportCompromised or {@code null} for none
   */
  public AppsPeopleActivityStreamqualityDistillerEngagements setReportCompromised(java.lang.Long reportCompromised) {
    this.reportCompromised = reportCompromised;
    return this;
  }

  /**
   * Corresponds on "Harassment or bullying" reporting action.
   * @return value or {@code null} for none
   */
  public java.lang.Long getReportHarassment() {
    return reportHarassment;
  }

  /**
   * Corresponds on "Harassment or bullying" reporting action.
   * @param reportHarassment reportHarassment or {@code null} for none
   */
  public AppsPeopleActivityStreamqualityDistillerEngagements setReportHarassment(java.lang.Long reportHarassment) {
    this.reportHarassment = reportHarassment;
    return this;
  }

  /**
   * Corresponds on "Hate speach or graphic violence" reporting action.
   * @return value or {@code null} for none
   */
  public java.lang.Long getReportHate() {
    return reportHate;
  }

  /**
   * Corresponds on "Hate speach or graphic violence" reporting action.
   * @param reportHate reportHate or {@code null} for none
   */
  public AppsPeopleActivityStreamqualityDistillerEngagements setReportHate(java.lang.Long reportHate) {
    this.reportHate = reportHate;
    return this;
  }

  /**
   * Corresponds on "Pornography or sexually explicit material" reporting action.
   * @return value or {@code null} for none
   */
  public java.lang.Long getReportPorn() {
    return reportPorn;
  }

  /**
   * Corresponds on "Pornography or sexually explicit material" reporting action.
   * @param reportPorn reportPorn or {@code null} for none
   */
  public AppsPeopleActivityStreamqualityDistillerEngagements setReportPorn(java.lang.Long reportPorn) {
    this.reportPorn = reportPorn;
    return this;
  }

  /**
   * Corresponds on "Unwanted commercial content or spam" reporting action.
   * @return value or {@code null} for none
   */
  public java.lang.Long getReportSpam() {
    return reportSpam;
  }

  /**
   * Corresponds on "Unwanted commercial content or spam" reporting action.
   * @param reportSpam reportSpam or {@code null} for none
   */
  public AppsPeopleActivityStreamqualityDistillerEngagements setReportSpam(java.lang.Long reportSpam) {
    this.reportSpam = reportSpam;
    return this;
  }

  /**
   * Number of times this activity was served out of asbe/stanza.
   * @return value or {@code null} for none
   */
  public java.lang.Long getServeCount() {
    return serveCount;
  }

  /**
   * Number of times this activity was served out of asbe/stanza.
   * @param serveCount serveCount or {@code null} for none
   */
  public AppsPeopleActivityStreamqualityDistillerEngagements setServeCount(java.lang.Long serveCount) {
    this.serveCount = serveCount;
    return this;
  }

  /**
   * Timestamp in seconds for which time this record is valid.
   * @return value or {@code null} for none
   */
  public java.lang.Long getTimeSec() {
    return timeSec;
  }

  /**
   * Timestamp in seconds for which time this record is valid.
   * @param timeSec timeSec or {@code null} for none
   */
  public AppsPeopleActivityStreamqualityDistillerEngagements setTimeSec(java.lang.Long timeSec) {
    this.timeSec = timeSec;
    return this;
  }

  /**
   * Corresponds on Distiller comment thumbs down action.
   * @return value or {@code null} for none
   */
  public java.lang.Long getYtThumbsDown() {
    return ytThumbsDown;
  }

  /**
   * Corresponds on Distiller comment thumbs down action.
   * @param ytThumbsDown ytThumbsDown or {@code null} for none
   */
  public AppsPeopleActivityStreamqualityDistillerEngagements setYtThumbsDown(java.lang.Long ytThumbsDown) {
    this.ytThumbsDown = ytThumbsDown;
    return this;
  }

  @Override
  public AppsPeopleActivityStreamqualityDistillerEngagements set(String fieldName, Object value) {
    return (AppsPeopleActivityStreamqualityDistillerEngagements) super.set(fieldName, value);
  }

  @Override
  public AppsPeopleActivityStreamqualityDistillerEngagements clone() {
    return (AppsPeopleActivityStreamqualityDistillerEngagements) super.clone();
  }

}
