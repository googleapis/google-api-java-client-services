/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.realtimebidding.v1.model;

/**
 * An Open Bidding exchange's connection to a publisher. This is initiated by the publisher for the
 * bidder to review. If approved by the bidder, this means that the bidder agrees to receive bid
 * requests from the publisher.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Real-time Bidding API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class PublisherConnection extends com.google.api.client.json.GenericJson {

  /**
   * Whether the publisher has been approved by the bidder.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String biddingState;

  /**
   * Output only. The time at which the publisher initiated a connection with the bidder
   * (irrespective of if or when the bidder approves it). This is subsequently updated if the
   * publisher revokes and re-initiates the connection.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Output only. Publisher display name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Output only. Name of the publisher connection. This follows the pattern
   * `bidders/{bidder}/publisherConnections/{publisher}`, where `{bidder}` represents the account ID
   * of the bidder, and `{publisher}` is the ads.txt/app-ads.txt publisher ID.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. Whether the publisher is an Ad Manager or AdMob publisher.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String publisherPlatform;

  /**
   * Whether the publisher has been approved by the bidder.
   * @return value or {@code null} for none
   */
  public java.lang.String getBiddingState() {
    return biddingState;
  }

  /**
   * Whether the publisher has been approved by the bidder.
   * @param biddingState biddingState or {@code null} for none
   */
  public PublisherConnection setBiddingState(java.lang.String biddingState) {
    this.biddingState = biddingState;
    return this;
  }

  /**
   * Output only. The time at which the publisher initiated a connection with the bidder
   * (irrespective of if or when the bidder approves it). This is subsequently updated if the
   * publisher revokes and re-initiates the connection.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The time at which the publisher initiated a connection with the bidder
   * (irrespective of if or when the bidder approves it). This is subsequently updated if the
   * publisher revokes and re-initiates the connection.
   * @param createTime createTime or {@code null} for none
   */
  public PublisherConnection setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Output only. Publisher display name.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Output only. Publisher display name.
   * @param displayName displayName or {@code null} for none
   */
  public PublisherConnection setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Output only. Name of the publisher connection. This follows the pattern
   * `bidders/{bidder}/publisherConnections/{publisher}`, where `{bidder}` represents the account ID
   * of the bidder, and `{publisher}` is the ads.txt/app-ads.txt publisher ID.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. Name of the publisher connection. This follows the pattern
   * `bidders/{bidder}/publisherConnections/{publisher}`, where `{bidder}` represents the account ID
   * of the bidder, and `{publisher}` is the ads.txt/app-ads.txt publisher ID.
   * @param name name or {@code null} for none
   */
  public PublisherConnection setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. Whether the publisher is an Ad Manager or AdMob publisher.
   * @return value or {@code null} for none
   */
  public java.lang.String getPublisherPlatform() {
    return publisherPlatform;
  }

  /**
   * Output only. Whether the publisher is an Ad Manager or AdMob publisher.
   * @param publisherPlatform publisherPlatform or {@code null} for none
   */
  public PublisherConnection setPublisherPlatform(java.lang.String publisherPlatform) {
    this.publisherPlatform = publisherPlatform;
    return this;
  }

  @Override
  public PublisherConnection set(String fieldName, Object value) {
    return (PublisherConnection) super.set(fieldName, value);
  }

  @Override
  public PublisherConnection clone() {
    return (PublisherConnection) super.clone();
  }

}
