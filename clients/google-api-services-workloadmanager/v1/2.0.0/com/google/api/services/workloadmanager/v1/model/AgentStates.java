/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.workloadmanager.v1.model;

/**
 * Agent status.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Workload Manager API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AgentStates extends com.google.api.client.json.GenericJson {

  /**
   * Optional. The available version of the agent in artifact registry.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String availableVersion;

  /**
   * Optional. HANA monitoring metrics of the agent.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ServiceStates hanaMonitoring;

  /**
   * Optional. The installed version of the agent on the host.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String installedVersion;

  /**
   * Optional. Whether the agent is fully enabled. If false, the agent is has some issues.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isFullyEnabled;

  /**
   * Optional. The Process metrics of the agent.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ServiceStates processMetrics;

  /**
   * Optional. The System discovery metrics of the agent.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ServiceStates systemDiscovery;

  /**
   * Optional. The available version of the agent in artifact registry.
   * @return value or {@code null} for none
   */
  public java.lang.String getAvailableVersion() {
    return availableVersion;
  }

  /**
   * Optional. The available version of the agent in artifact registry.
   * @param availableVersion availableVersion or {@code null} for none
   */
  public AgentStates setAvailableVersion(java.lang.String availableVersion) {
    this.availableVersion = availableVersion;
    return this;
  }

  /**
   * Optional. HANA monitoring metrics of the agent.
   * @return value or {@code null} for none
   */
  public ServiceStates getHanaMonitoring() {
    return hanaMonitoring;
  }

  /**
   * Optional. HANA monitoring metrics of the agent.
   * @param hanaMonitoring hanaMonitoring or {@code null} for none
   */
  public AgentStates setHanaMonitoring(ServiceStates hanaMonitoring) {
    this.hanaMonitoring = hanaMonitoring;
    return this;
  }

  /**
   * Optional. The installed version of the agent on the host.
   * @return value or {@code null} for none
   */
  public java.lang.String getInstalledVersion() {
    return installedVersion;
  }

  /**
   * Optional. The installed version of the agent on the host.
   * @param installedVersion installedVersion or {@code null} for none
   */
  public AgentStates setInstalledVersion(java.lang.String installedVersion) {
    this.installedVersion = installedVersion;
    return this;
  }

  /**
   * Optional. Whether the agent is fully enabled. If false, the agent is has some issues.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsFullyEnabled() {
    return isFullyEnabled;
  }

  /**
   * Optional. Whether the agent is fully enabled. If false, the agent is has some issues.
   * @param isFullyEnabled isFullyEnabled or {@code null} for none
   */
  public AgentStates setIsFullyEnabled(java.lang.Boolean isFullyEnabled) {
    this.isFullyEnabled = isFullyEnabled;
    return this;
  }

  /**
   * Optional. The Process metrics of the agent.
   * @return value or {@code null} for none
   */
  public ServiceStates getProcessMetrics() {
    return processMetrics;
  }

  /**
   * Optional. The Process metrics of the agent.
   * @param processMetrics processMetrics or {@code null} for none
   */
  public AgentStates setProcessMetrics(ServiceStates processMetrics) {
    this.processMetrics = processMetrics;
    return this;
  }

  /**
   * Optional. The System discovery metrics of the agent.
   * @return value or {@code null} for none
   */
  public ServiceStates getSystemDiscovery() {
    return systemDiscovery;
  }

  /**
   * Optional. The System discovery metrics of the agent.
   * @param systemDiscovery systemDiscovery or {@code null} for none
   */
  public AgentStates setSystemDiscovery(ServiceStates systemDiscovery) {
    this.systemDiscovery = systemDiscovery;
    return this;
  }

  @Override
  public AgentStates set(String fieldName, Object value) {
    return (AgentStates) super.set(fieldName, value);
  }

  @Override
  public AgentStates clone() {
    return (AgentStates) super.clone();
  }

}
