/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudbilling.v1beta.model;

/**
 * Specificies usage of a set of identical compute VM instances.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Billing API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ComputeVmWorkload extends com.google.api.client.json.GenericJson {

  /**
   * Defines whether each instance has confidential compute enabled.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean enableConfidentialCompute;

  /**
   * Guest accelerators attached to each machine.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GuestAccelerator guestAccelerator;

  /**
   * VM usage. This is specified as a unitless quantity which indicates the number of instances
   * running.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Usage instancesRunning;

  /**
   * Premium image licenses used by each instance.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> licenses;

  /**
   * The machine type.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private MachineType machineType;

  /**
   * Persistent disks attached to each instance. Must include a boot disk.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<PersistentDisk> persistentDisks;

  /**
   * Defines whether each instance is preemptible.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean preemptible;

  /**
   * The [region](https://cloud.google.com/compute/docs/regions-zones) where the VMs run. For
   * example: "us-central1".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String region;

  /**
   * Defines whether each instance has confidential compute enabled.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getEnableConfidentialCompute() {
    return enableConfidentialCompute;
  }

  /**
   * Defines whether each instance has confidential compute enabled.
   * @param enableConfidentialCompute enableConfidentialCompute or {@code null} for none
   */
  public ComputeVmWorkload setEnableConfidentialCompute(java.lang.Boolean enableConfidentialCompute) {
    this.enableConfidentialCompute = enableConfidentialCompute;
    return this;
  }

  /**
   * Guest accelerators attached to each machine.
   * @return value or {@code null} for none
   */
  public GuestAccelerator getGuestAccelerator() {
    return guestAccelerator;
  }

  /**
   * Guest accelerators attached to each machine.
   * @param guestAccelerator guestAccelerator or {@code null} for none
   */
  public ComputeVmWorkload setGuestAccelerator(GuestAccelerator guestAccelerator) {
    this.guestAccelerator = guestAccelerator;
    return this;
  }

  /**
   * VM usage. This is specified as a unitless quantity which indicates the number of instances
   * running.
   * @return value or {@code null} for none
   */
  public Usage getInstancesRunning() {
    return instancesRunning;
  }

  /**
   * VM usage. This is specified as a unitless quantity which indicates the number of instances
   * running.
   * @param instancesRunning instancesRunning or {@code null} for none
   */
  public ComputeVmWorkload setInstancesRunning(Usage instancesRunning) {
    this.instancesRunning = instancesRunning;
    return this;
  }

  /**
   * Premium image licenses used by each instance.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getLicenses() {
    return licenses;
  }

  /**
   * Premium image licenses used by each instance.
   * @param licenses licenses or {@code null} for none
   */
  public ComputeVmWorkload setLicenses(java.util.List<java.lang.String> licenses) {
    this.licenses = licenses;
    return this;
  }

  /**
   * The machine type.
   * @return value or {@code null} for none
   */
  public MachineType getMachineType() {
    return machineType;
  }

  /**
   * The machine type.
   * @param machineType machineType or {@code null} for none
   */
  public ComputeVmWorkload setMachineType(MachineType machineType) {
    this.machineType = machineType;
    return this;
  }

  /**
   * Persistent disks attached to each instance. Must include a boot disk.
   * @return value or {@code null} for none
   */
  public java.util.List<PersistentDisk> getPersistentDisks() {
    return persistentDisks;
  }

  /**
   * Persistent disks attached to each instance. Must include a boot disk.
   * @param persistentDisks persistentDisks or {@code null} for none
   */
  public ComputeVmWorkload setPersistentDisks(java.util.List<PersistentDisk> persistentDisks) {
    this.persistentDisks = persistentDisks;
    return this;
  }

  /**
   * Defines whether each instance is preemptible.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getPreemptible() {
    return preemptible;
  }

  /**
   * Defines whether each instance is preemptible.
   * @param preemptible preemptible or {@code null} for none
   */
  public ComputeVmWorkload setPreemptible(java.lang.Boolean preemptible) {
    this.preemptible = preemptible;
    return this;
  }

  /**
   * The [region](https://cloud.google.com/compute/docs/regions-zones) where the VMs run. For
   * example: "us-central1".
   * @return value or {@code null} for none
   */
  public java.lang.String getRegion() {
    return region;
  }

  /**
   * The [region](https://cloud.google.com/compute/docs/regions-zones) where the VMs run. For
   * example: "us-central1".
   * @param region region or {@code null} for none
   */
  public ComputeVmWorkload setRegion(java.lang.String region) {
    this.region = region;
    return this;
  }

  @Override
  public ComputeVmWorkload set(String fieldName, Object value) {
    return (ComputeVmWorkload) super.set(fieldName, value);
  }

  @Override
  public ComputeVmWorkload clone() {
    return (ComputeVmWorkload) super.clone();
  }

}
