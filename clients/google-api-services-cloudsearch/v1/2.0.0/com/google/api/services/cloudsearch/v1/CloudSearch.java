/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudsearch.v1;

/**
 * Service definition for CloudSearch (v1).
 *
 * <p>
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://developers.google.com/cloud-search/docs/guides/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link CloudSearchRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class CloudSearch extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        (com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1))) ||
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION >= 2,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "2.0.0 of the Cloud Search API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://cloudsearch.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://cloudsearch.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public CloudSearch(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  CloudSearch(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Debug collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code CloudSearch cloudsearch = new CloudSearch(...);}
   *   {@code CloudSearch.Debug.List request = cloudsearch.debug().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Debug debug() {
    return new Debug();
  }

  /**
   * The "debug" collection of methods.
   */
  public class Debug {

    /**
     * An accessor for creating requests from the Datasources collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code CloudSearch cloudsearch = new CloudSearch(...);}
     *   {@code CloudSearch.Datasources.List request = cloudsearch.datasources().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Datasources datasources() {
      return new Datasources();
    }

    /**
     * The "datasources" collection of methods.
     */
    public class Datasources {

      /**
       * An accessor for creating requests from the Items collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code CloudSearch cloudsearch = new CloudSearch(...);}
       *   {@code CloudSearch.Items.List request = cloudsearch.items().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Items items() {
        return new Items();
      }

      /**
       * The "items" collection of methods.
       */
      public class Items {

        /**
         * Checks whether an item is accessible by specified principal. Principal must be a user; groups and
         * domain values aren't supported. **Note:** This API requires an admin account to execute.
         *
         * Create a request for the method "items.checkAccess".
         *
         * This request holds the parameters needed by the cloudsearch server.  After setting any optional
         * parameters, call the {@link CheckAccess#execute()} method to invoke the remote operation.
         *
         * @param name Item name, format: datasources/{source_id}/items/{item_id}
         * @param content the {@link com.google.api.services.cloudsearch.v1.model.Principal}
         * @return the request
         */
        public CheckAccess checkAccess(java.lang.String name, com.google.api.services.cloudsearch.v1.model.Principal content) throws java.io.IOException {
          CheckAccess result = new CheckAccess(name, content);
          initialize(result);
          return result;
        }

        public class CheckAccess extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.CheckAccessResponse> {

          private static final String REST_PATH = "v1/debug/{+name}:checkAccess";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^datasources/[^/]+/items/[^/]+$");

          /**
           * Checks whether an item is accessible by specified principal. Principal must be a user; groups
           * and domain values aren't supported. **Note:** This API requires an admin account to execute.
           *
           * Create a request for the method "items.checkAccess".
           *
           * This request holds the parameters needed by the the cloudsearch server.  After setting any
           * optional parameters, call the {@link CheckAccess#execute()} method to invoke the remote
           * operation. <p> {@link
           * CheckAccess#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Item name, format: datasources/{source_id}/items/{item_id}
           * @param content the {@link com.google.api.services.cloudsearch.v1.model.Principal}
           * @since 1.13
           */
          protected CheckAccess(java.lang.String name, com.google.api.services.cloudsearch.v1.model.Principal content) {
            super(CloudSearch.this, "POST", REST_PATH, content, com.google.api.services.cloudsearch.v1.model.CheckAccessResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^datasources/[^/]+/items/[^/]+$");
            }
          }

          @Override
          public CheckAccess set$Xgafv(java.lang.String $Xgafv) {
            return (CheckAccess) super.set$Xgafv($Xgafv);
          }

          @Override
          public CheckAccess setAccessToken(java.lang.String accessToken) {
            return (CheckAccess) super.setAccessToken(accessToken);
          }

          @Override
          public CheckAccess setAlt(java.lang.String alt) {
            return (CheckAccess) super.setAlt(alt);
          }

          @Override
          public CheckAccess setCallback(java.lang.String callback) {
            return (CheckAccess) super.setCallback(callback);
          }

          @Override
          public CheckAccess setFields(java.lang.String fields) {
            return (CheckAccess) super.setFields(fields);
          }

          @Override
          public CheckAccess setKey(java.lang.String key) {
            return (CheckAccess) super.setKey(key);
          }

          @Override
          public CheckAccess setOauthToken(java.lang.String oauthToken) {
            return (CheckAccess) super.setOauthToken(oauthToken);
          }

          @Override
          public CheckAccess setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (CheckAccess) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public CheckAccess setQuotaUser(java.lang.String quotaUser) {
            return (CheckAccess) super.setQuotaUser(quotaUser);
          }

          @Override
          public CheckAccess setUploadType(java.lang.String uploadType) {
            return (CheckAccess) super.setUploadType(uploadType);
          }

          @Override
          public CheckAccess setUploadProtocol(java.lang.String uploadProtocol) {
            return (CheckAccess) super.setUploadProtocol(uploadProtocol);
          }

          /** Item name, format: datasources/{source_id}/items/{item_id} */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Item name, format: datasources/{source_id}/items/{item_id}
           */
          public java.lang.String getName() {
            return name;
          }

          /** Item name, format: datasources/{source_id}/items/{item_id} */
          public CheckAccess setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^datasources/[^/]+/items/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * If you are asked by Google to help with debugging, set this field. Otherwise, ignore
           * this field.
           */
          @com.google.api.client.util.Key("debugOptions.enableDebugging")
          private java.lang.Boolean debugOptionsEnableDebugging;

          /** If you are asked by Google to help with debugging, set this field. Otherwise, ignore this field.
           */
          public java.lang.Boolean getDebugOptionsEnableDebugging() {
            return debugOptionsEnableDebugging;
          }

          /**
           * If you are asked by Google to help with debugging, set this field. Otherwise, ignore
           * this field.
           */
          public CheckAccess setDebugOptionsEnableDebugging(java.lang.Boolean debugOptionsEnableDebugging) {
            this.debugOptionsEnableDebugging = debugOptionsEnableDebugging;
            return this;
          }

          @Override
          public CheckAccess set(String parameterName, Object value) {
            return (CheckAccess) super.set(parameterName, value);
          }
        }
        /**
         * Fetches the item whose viewUrl exactly matches that of the URL provided in the request. **Note:**
         * This API requires an admin account to execute.
         *
         * Create a request for the method "items.searchByViewUrl".
         *
         * This request holds the parameters needed by the cloudsearch server.  After setting any optional
         * parameters, call the {@link SearchByViewUrl#execute()} method to invoke the remote operation.
         *
         * @param name Source name, format: datasources/{source_id}
         * @param content the {@link com.google.api.services.cloudsearch.v1.model.SearchItemsByViewUrlRequest}
         * @return the request
         */
        public SearchByViewUrl searchByViewUrl(java.lang.String name, com.google.api.services.cloudsearch.v1.model.SearchItemsByViewUrlRequest content) throws java.io.IOException {
          SearchByViewUrl result = new SearchByViewUrl(name, content);
          initialize(result);
          return result;
        }

        public class SearchByViewUrl extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.SearchItemsByViewUrlResponse> {

          private static final String REST_PATH = "v1/debug/{+name}/items:searchByViewUrl";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^datasources/[^/]+$");

          /**
           * Fetches the item whose viewUrl exactly matches that of the URL provided in the request.
           * **Note:** This API requires an admin account to execute.
           *
           * Create a request for the method "items.searchByViewUrl".
           *
           * This request holds the parameters needed by the the cloudsearch server.  After setting any
           * optional parameters, call the {@link SearchByViewUrl#execute()} method to invoke the remote
           * operation. <p> {@link SearchByViewUrl#initialize(com.google.api.client.googleapis.services.Abst
           * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
           * the constructor. </p>
           *
           * @param name Source name, format: datasources/{source_id}
           * @param content the {@link com.google.api.services.cloudsearch.v1.model.SearchItemsByViewUrlRequest}
           * @since 1.13
           */
          protected SearchByViewUrl(java.lang.String name, com.google.api.services.cloudsearch.v1.model.SearchItemsByViewUrlRequest content) {
            super(CloudSearch.this, "POST", REST_PATH, content, com.google.api.services.cloudsearch.v1.model.SearchItemsByViewUrlResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^datasources/[^/]+$");
            }
          }

          @Override
          public SearchByViewUrl set$Xgafv(java.lang.String $Xgafv) {
            return (SearchByViewUrl) super.set$Xgafv($Xgafv);
          }

          @Override
          public SearchByViewUrl setAccessToken(java.lang.String accessToken) {
            return (SearchByViewUrl) super.setAccessToken(accessToken);
          }

          @Override
          public SearchByViewUrl setAlt(java.lang.String alt) {
            return (SearchByViewUrl) super.setAlt(alt);
          }

          @Override
          public SearchByViewUrl setCallback(java.lang.String callback) {
            return (SearchByViewUrl) super.setCallback(callback);
          }

          @Override
          public SearchByViewUrl setFields(java.lang.String fields) {
            return (SearchByViewUrl) super.setFields(fields);
          }

          @Override
          public SearchByViewUrl setKey(java.lang.String key) {
            return (SearchByViewUrl) super.setKey(key);
          }

          @Override
          public SearchByViewUrl setOauthToken(java.lang.String oauthToken) {
            return (SearchByViewUrl) super.setOauthToken(oauthToken);
          }

          @Override
          public SearchByViewUrl setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SearchByViewUrl) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SearchByViewUrl setQuotaUser(java.lang.String quotaUser) {
            return (SearchByViewUrl) super.setQuotaUser(quotaUser);
          }

          @Override
          public SearchByViewUrl setUploadType(java.lang.String uploadType) {
            return (SearchByViewUrl) super.setUploadType(uploadType);
          }

          @Override
          public SearchByViewUrl setUploadProtocol(java.lang.String uploadProtocol) {
            return (SearchByViewUrl) super.setUploadProtocol(uploadProtocol);
          }

          /** Source name, format: datasources/{source_id} */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Source name, format: datasources/{source_id}
           */
          public java.lang.String getName() {
            return name;
          }

          /** Source name, format: datasources/{source_id} */
          public SearchByViewUrl setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^datasources/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public SearchByViewUrl set(String parameterName, Object value) {
            return (SearchByViewUrl) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Unmappedids collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code CloudSearch cloudsearch = new CloudSearch(...);}
         *   {@code CloudSearch.Unmappedids.List request = cloudsearch.unmappedids().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Unmappedids unmappedids() {
          return new Unmappedids();
        }

        /**
         * The "unmappedids" collection of methods.
         */
        public class Unmappedids {

          /**
           * List all unmapped identities for a specific item. **Note:** This API requires an admin account to
           * execute.
           *
           * Create a request for the method "unmappedids.list".
           *
           * This request holds the parameters needed by the cloudsearch server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent The name of the item, in the following format: datasources/{source_id}/items/{ID}
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.ListUnmappedIdentitiesResponse> {

            private static final String REST_PATH = "v1/debug/{+parent}/unmappedids";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^datasources/[^/]+/items/[^/]+$");

            /**
             * List all unmapped identities for a specific item. **Note:** This API requires an admin account
             * to execute.
             *
             * Create a request for the method "unmappedids.list".
             *
             * This request holds the parameters needed by the the cloudsearch server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent The name of the item, in the following format: datasources/{source_id}/items/{ID}
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(CloudSearch.this, "GET", REST_PATH, null, com.google.api.services.cloudsearch.v1.model.ListUnmappedIdentitiesResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^datasources/[^/]+/items/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * The name of the item, in the following format: datasources/{source_id}/items/{ID}
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** The name of the item, in the following format: datasources/{source_id}/items/{ID}
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * The name of the item, in the following format: datasources/{source_id}/items/{ID}
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^datasources/[^/]+/items/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * If you are asked by Google to help with debugging, set this field. Otherwise, ignore
             * this field.
             */
            @com.google.api.client.util.Key("debugOptions.enableDebugging")
            private java.lang.Boolean debugOptionsEnableDebugging;

            /** If you are asked by Google to help with debugging, set this field. Otherwise, ignore this field.
             */
            public java.lang.Boolean getDebugOptionsEnableDebugging() {
              return debugOptionsEnableDebugging;
            }

            /**
             * If you are asked by Google to help with debugging, set this field. Otherwise, ignore
             * this field.
             */
            public List setDebugOptionsEnableDebugging(java.lang.Boolean debugOptionsEnableDebugging) {
              this.debugOptionsEnableDebugging = debugOptionsEnableDebugging;
              return this;
            }

            /** Maximum number of items to fetch in a request. Defaults to 100. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Maximum number of items to fetch in a request. Defaults to 100.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** Maximum number of items to fetch in a request. Defaults to 100. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The next_page_token value returned from a previous List request, if any. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The next_page_token value returned from a previous List request, if any.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The next_page_token value returned from a previous List request, if any. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

        }
      }
    }
    /**
     * An accessor for creating requests from the Identitysources collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code CloudSearch cloudsearch = new CloudSearch(...);}
     *   {@code CloudSearch.Identitysources.List request = cloudsearch.identitysources().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Identitysources identitysources() {
      return new Identitysources();
    }

    /**
     * The "identitysources" collection of methods.
     */
    public class Identitysources {

      /**
       * An accessor for creating requests from the Items collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code CloudSearch cloudsearch = new CloudSearch(...);}
       *   {@code CloudSearch.Items.List request = cloudsearch.items().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Items items() {
        return new Items();
      }

      /**
       * The "items" collection of methods.
       */
      public class Items {

        /**
         * Lists names of items associated with an unmapped identity. **Note:** This API requires an admin
         * account to execute.
         *
         * Create a request for the method "items.listForunmappedidentity".
         *
         * This request holds the parameters needed by the cloudsearch server.  After setting any optional
         * parameters, call the {@link ListForunmappedidentity#execute()} method to invoke the remote
         * operation.
         *
         * @param parent The name of the identity source, in the following format: identitysources/{source_id}}
         * @return the request
         */
        public ListForunmappedidentity listForunmappedidentity(java.lang.String parent) throws java.io.IOException {
          ListForunmappedidentity result = new ListForunmappedidentity(parent);
          initialize(result);
          return result;
        }

        public class ListForunmappedidentity extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.ListItemNamesForUnmappedIdentityResponse> {

          private static final String REST_PATH = "v1/debug/{+parent}/items:forunmappedidentity";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^identitysources/[^/]+$");

          /**
           * Lists names of items associated with an unmapped identity. **Note:** This API requires an admin
           * account to execute.
           *
           * Create a request for the method "items.listForunmappedidentity".
           *
           * This request holds the parameters needed by the the cloudsearch server.  After setting any
           * optional parameters, call the {@link ListForunmappedidentity#execute()} method to invoke the
           * remote operation. <p> {@link ListForunmappedidentity#initialize(com.google.api.client.googleapi
           * s.services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
           * after invoking the constructor. </p>
           *
           * @param parent The name of the identity source, in the following format: identitysources/{source_id}}
           * @since 1.13
           */
          protected ListForunmappedidentity(java.lang.String parent) {
            super(CloudSearch.this, "GET", REST_PATH, null, com.google.api.services.cloudsearch.v1.model.ListItemNamesForUnmappedIdentityResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^identitysources/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public ListForunmappedidentity set$Xgafv(java.lang.String $Xgafv) {
            return (ListForunmappedidentity) super.set$Xgafv($Xgafv);
          }

          @Override
          public ListForunmappedidentity setAccessToken(java.lang.String accessToken) {
            return (ListForunmappedidentity) super.setAccessToken(accessToken);
          }

          @Override
          public ListForunmappedidentity setAlt(java.lang.String alt) {
            return (ListForunmappedidentity) super.setAlt(alt);
          }

          @Override
          public ListForunmappedidentity setCallback(java.lang.String callback) {
            return (ListForunmappedidentity) super.setCallback(callback);
          }

          @Override
          public ListForunmappedidentity setFields(java.lang.String fields) {
            return (ListForunmappedidentity) super.setFields(fields);
          }

          @Override
          public ListForunmappedidentity setKey(java.lang.String key) {
            return (ListForunmappedidentity) super.setKey(key);
          }

          @Override
          public ListForunmappedidentity setOauthToken(java.lang.String oauthToken) {
            return (ListForunmappedidentity) super.setOauthToken(oauthToken);
          }

          @Override
          public ListForunmappedidentity setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (ListForunmappedidentity) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public ListForunmappedidentity setQuotaUser(java.lang.String quotaUser) {
            return (ListForunmappedidentity) super.setQuotaUser(quotaUser);
          }

          @Override
          public ListForunmappedidentity setUploadType(java.lang.String uploadType) {
            return (ListForunmappedidentity) super.setUploadType(uploadType);
          }

          @Override
          public ListForunmappedidentity setUploadProtocol(java.lang.String uploadProtocol) {
            return (ListForunmappedidentity) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The name of the identity source, in the following format: identitysources/{source_id}}
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** The name of the identity source, in the following format: identitysources/{source_id}}
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * The name of the identity source, in the following format: identitysources/{source_id}}
           */
          public ListForunmappedidentity setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^identitysources/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * If you are asked by Google to help with debugging, set this field. Otherwise, ignore
           * this field.
           */
          @com.google.api.client.util.Key("debugOptions.enableDebugging")
          private java.lang.Boolean debugOptionsEnableDebugging;

          /** If you are asked by Google to help with debugging, set this field. Otherwise, ignore this field.
           */
          public java.lang.Boolean getDebugOptionsEnableDebugging() {
            return debugOptionsEnableDebugging;
          }

          /**
           * If you are asked by Google to help with debugging, set this field. Otherwise, ignore
           * this field.
           */
          public ListForunmappedidentity setDebugOptionsEnableDebugging(java.lang.Boolean debugOptionsEnableDebugging) {
            this.debugOptionsEnableDebugging = debugOptionsEnableDebugging;
            return this;
          }

          @com.google.api.client.util.Key
          private java.lang.String groupResourceName;

          /**

           */
          public java.lang.String getGroupResourceName() {
            return groupResourceName;
          }

          public ListForunmappedidentity setGroupResourceName(java.lang.String groupResourceName) {
            this.groupResourceName = groupResourceName;
            return this;
          }

          /** Maximum number of items to fetch in a request. Defaults to 100. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Maximum number of items to fetch in a request. Defaults to 100.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** Maximum number of items to fetch in a request. Defaults to 100. */
          public ListForunmappedidentity setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The next_page_token value returned from a previous List request, if any. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The next_page_token value returned from a previous List request, if any.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The next_page_token value returned from a previous List request, if any. */
          public ListForunmappedidentity setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @com.google.api.client.util.Key
          private java.lang.String userResourceName;

          /**

           */
          public java.lang.String getUserResourceName() {
            return userResourceName;
          }

          public ListForunmappedidentity setUserResourceName(java.lang.String userResourceName) {
            this.userResourceName = userResourceName;
            return this;
          }

          @Override
          public ListForunmappedidentity set(String parameterName, Object value) {
            return (ListForunmappedidentity) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Unmappedids collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code CloudSearch cloudsearch = new CloudSearch(...);}
       *   {@code CloudSearch.Unmappedids.List request = cloudsearch.unmappedids().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Unmappedids unmappedids() {
        return new Unmappedids();
      }

      /**
       * The "unmappedids" collection of methods.
       */
      public class Unmappedids {

        /**
         * Lists unmapped user identities for an identity source. **Note:** This API requires an admin
         * account to execute.
         *
         * Create a request for the method "unmappedids.list".
         *
         * This request holds the parameters needed by the cloudsearch server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent The name of the identity source, in the following format: identitysources/{source_id}
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.ListUnmappedIdentitiesResponse> {

          private static final String REST_PATH = "v1/debug/{+parent}/unmappedids";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^identitysources/[^/]+$");

          /**
           * Lists unmapped user identities for an identity source. **Note:** This API requires an admin
           * account to execute.
           *
           * Create a request for the method "unmappedids.list".
           *
           * This request holds the parameters needed by the the cloudsearch server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent The name of the identity source, in the following format: identitysources/{source_id}
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(CloudSearch.this, "GET", REST_PATH, null, com.google.api.services.cloudsearch.v1.model.ListUnmappedIdentitiesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^identitysources/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The name of the identity source, in the following format: identitysources/{source_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** The name of the identity source, in the following format: identitysources/{source_id}
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * The name of the identity source, in the following format: identitysources/{source_id}
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^identitysources/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * If you are asked by Google to help with debugging, set this field. Otherwise, ignore
           * this field.
           */
          @com.google.api.client.util.Key("debugOptions.enableDebugging")
          private java.lang.Boolean debugOptionsEnableDebugging;

          /** If you are asked by Google to help with debugging, set this field. Otherwise, ignore this field.
           */
          public java.lang.Boolean getDebugOptionsEnableDebugging() {
            return debugOptionsEnableDebugging;
          }

          /**
           * If you are asked by Google to help with debugging, set this field. Otherwise, ignore
           * this field.
           */
          public List setDebugOptionsEnableDebugging(java.lang.Boolean debugOptionsEnableDebugging) {
            this.debugOptionsEnableDebugging = debugOptionsEnableDebugging;
            return this;
          }

          /** Maximum number of items to fetch in a request. Defaults to 100. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Maximum number of items to fetch in a request. Defaults to 100.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** Maximum number of items to fetch in a request. Defaults to 100. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The next_page_token value returned from a previous List request, if any. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The next_page_token value returned from a previous List request, if any.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The next_page_token value returned from a previous List request, if any. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          /** Limit users selection to this status. */
          @com.google.api.client.util.Key
          private java.lang.String resolutionStatusCode;

          /** Limit users selection to this status.
           */
          public java.lang.String getResolutionStatusCode() {
            return resolutionStatusCode;
          }

          /** Limit users selection to this status. */
          public List setResolutionStatusCode(java.lang.String resolutionStatusCode) {
            this.resolutionStatusCode = resolutionStatusCode;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
    }
  }

  /**
   * An accessor for creating requests from the Indexing collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code CloudSearch cloudsearch = new CloudSearch(...);}
   *   {@code CloudSearch.Indexing.List request = cloudsearch.indexing().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Indexing indexing() {
    return new Indexing();
  }

  /**
   * The "indexing" collection of methods.
   */
  public class Indexing {

    /**
     * An accessor for creating requests from the Datasources collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code CloudSearch cloudsearch = new CloudSearch(...);}
     *   {@code CloudSearch.Datasources.List request = cloudsearch.datasources().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Datasources datasources() {
      return new Datasources();
    }

    /**
     * The "datasources" collection of methods.
     */
    public class Datasources {

      /**
       * Deletes the schema of a data source. **Note:** This API requires an admin or service account to
       * execute.
       *
       * Create a request for the method "datasources.deleteSchema".
       *
       * This request holds the parameters needed by the cloudsearch server.  After setting any optional
       * parameters, call the {@link DeleteSchema#execute()} method to invoke the remote operation.
       *
       * @param name The name of the data source to delete Schema. Format: datasources/{source_id}
       * @return the request
       */
      public DeleteSchema deleteSchema(java.lang.String name) throws java.io.IOException {
        DeleteSchema result = new DeleteSchema(name);
        initialize(result);
        return result;
      }

      public class DeleteSchema extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.Operation> {

        private static final String REST_PATH = "v1/indexing/{+name}/schema";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^datasources/[^/]+$");

        /**
         * Deletes the schema of a data source. **Note:** This API requires an admin or service account to
         * execute.
         *
         * Create a request for the method "datasources.deleteSchema".
         *
         * This request holds the parameters needed by the the cloudsearch server.  After setting any
         * optional parameters, call the {@link DeleteSchema#execute()} method to invoke the remote
         * operation. <p> {@link
         * DeleteSchema#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the data source to delete Schema. Format: datasources/{source_id}
         * @since 1.13
         */
        protected DeleteSchema(java.lang.String name) {
          super(CloudSearch.this, "DELETE", REST_PATH, null, com.google.api.services.cloudsearch.v1.model.Operation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^datasources/[^/]+$");
          }
        }

        @Override
        public DeleteSchema set$Xgafv(java.lang.String $Xgafv) {
          return (DeleteSchema) super.set$Xgafv($Xgafv);
        }

        @Override
        public DeleteSchema setAccessToken(java.lang.String accessToken) {
          return (DeleteSchema) super.setAccessToken(accessToken);
        }

        @Override
        public DeleteSchema setAlt(java.lang.String alt) {
          return (DeleteSchema) super.setAlt(alt);
        }

        @Override
        public DeleteSchema setCallback(java.lang.String callback) {
          return (DeleteSchema) super.setCallback(callback);
        }

        @Override
        public DeleteSchema setFields(java.lang.String fields) {
          return (DeleteSchema) super.setFields(fields);
        }

        @Override
        public DeleteSchema setKey(java.lang.String key) {
          return (DeleteSchema) super.setKey(key);
        }

        @Override
        public DeleteSchema setOauthToken(java.lang.String oauthToken) {
          return (DeleteSchema) super.setOauthToken(oauthToken);
        }

        @Override
        public DeleteSchema setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (DeleteSchema) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public DeleteSchema setQuotaUser(java.lang.String quotaUser) {
          return (DeleteSchema) super.setQuotaUser(quotaUser);
        }

        @Override
        public DeleteSchema setUploadType(java.lang.String uploadType) {
          return (DeleteSchema) super.setUploadType(uploadType);
        }

        @Override
        public DeleteSchema setUploadProtocol(java.lang.String uploadProtocol) {
          return (DeleteSchema) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the data source to delete Schema. Format: datasources/{source_id} */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the data source to delete Schema. Format: datasources/{source_id}
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the data source to delete Schema. Format: datasources/{source_id} */
        public DeleteSchema setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^datasources/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * If you are asked by Google to help with debugging, set this field. Otherwise, ignore this
         * field.
         */
        @com.google.api.client.util.Key("debugOptions.enableDebugging")
        private java.lang.Boolean debugOptionsEnableDebugging;

        /** If you are asked by Google to help with debugging, set this field. Otherwise, ignore this field.
         */
        public java.lang.Boolean getDebugOptionsEnableDebugging() {
          return debugOptionsEnableDebugging;
        }

        /**
         * If you are asked by Google to help with debugging, set this field. Otherwise, ignore this
         * field.
         */
        public DeleteSchema setDebugOptionsEnableDebugging(java.lang.Boolean debugOptionsEnableDebugging) {
          this.debugOptionsEnableDebugging = debugOptionsEnableDebugging;
          return this;
        }

        @Override
        public DeleteSchema set(String parameterName, Object value) {
          return (DeleteSchema) super.set(parameterName, value);
        }
      }
      /**
       * Gets the schema of a data source. **Note:** This API requires an admin or service account to
       * execute.
       *
       * Create a request for the method "datasources.getSchema".
       *
       * This request holds the parameters needed by the cloudsearch server.  After setting any optional
       * parameters, call the {@link GetSchema#execute()} method to invoke the remote operation.
       *
       * @param name The name of the data source to get Schema. Format: datasources/{source_id}
       * @return the request
       */
      public GetSchema getSchema(java.lang.String name) throws java.io.IOException {
        GetSchema result = new GetSchema(name);
        initialize(result);
        return result;
      }

      public class GetSchema extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.Schema> {

        private static final String REST_PATH = "v1/indexing/{+name}/schema";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^datasources/[^/]+$");

        /**
         * Gets the schema of a data source. **Note:** This API requires an admin or service account to
         * execute.
         *
         * Create a request for the method "datasources.getSchema".
         *
         * This request holds the parameters needed by the the cloudsearch server.  After setting any
         * optional parameters, call the {@link GetSchema#execute()} method to invoke the remote
         * operation. <p> {@link
         * GetSchema#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the data source to get Schema. Format: datasources/{source_id}
         * @since 1.13
         */
        protected GetSchema(java.lang.String name) {
          super(CloudSearch.this, "GET", REST_PATH, null, com.google.api.services.cloudsearch.v1.model.Schema.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^datasources/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetSchema set$Xgafv(java.lang.String $Xgafv) {
          return (GetSchema) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetSchema setAccessToken(java.lang.String accessToken) {
          return (GetSchema) super.setAccessToken(accessToken);
        }

        @Override
        public GetSchema setAlt(java.lang.String alt) {
          return (GetSchema) super.setAlt(alt);
        }

        @Override
        public GetSchema setCallback(java.lang.String callback) {
          return (GetSchema) super.setCallback(callback);
        }

        @Override
        public GetSchema setFields(java.lang.String fields) {
          return (GetSchema) super.setFields(fields);
        }

        @Override
        public GetSchema setKey(java.lang.String key) {
          return (GetSchema) super.setKey(key);
        }

        @Override
        public GetSchema setOauthToken(java.lang.String oauthToken) {
          return (GetSchema) super.setOauthToken(oauthToken);
        }

        @Override
        public GetSchema setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetSchema) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetSchema setQuotaUser(java.lang.String quotaUser) {
          return (GetSchema) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetSchema setUploadType(java.lang.String uploadType) {
          return (GetSchema) super.setUploadType(uploadType);
        }

        @Override
        public GetSchema setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetSchema) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the data source to get Schema. Format: datasources/{source_id} */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the data source to get Schema. Format: datasources/{source_id}
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the data source to get Schema. Format: datasources/{source_id} */
        public GetSchema setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^datasources/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * If you are asked by Google to help with debugging, set this field. Otherwise, ignore this
         * field.
         */
        @com.google.api.client.util.Key("debugOptions.enableDebugging")
        private java.lang.Boolean debugOptionsEnableDebugging;

        /** If you are asked by Google to help with debugging, set this field. Otherwise, ignore this field.
         */
        public java.lang.Boolean getDebugOptionsEnableDebugging() {
          return debugOptionsEnableDebugging;
        }

        /**
         * If you are asked by Google to help with debugging, set this field. Otherwise, ignore this
         * field.
         */
        public GetSchema setDebugOptionsEnableDebugging(java.lang.Boolean debugOptionsEnableDebugging) {
          this.debugOptionsEnableDebugging = debugOptionsEnableDebugging;
          return this;
        }

        @Override
        public GetSchema set(String parameterName, Object value) {
          return (GetSchema) super.set(parameterName, value);
        }
      }
      /**
       * Updates the schema of a data source. This method does not perform incremental updates to the
       * schema. Instead, this method updates the schema by overwriting the entire schema. **Note:** This
       * API requires an admin or service account to execute.
       *
       * Create a request for the method "datasources.updateSchema".
       *
       * This request holds the parameters needed by the cloudsearch server.  After setting any optional
       * parameters, call the {@link UpdateSchema#execute()} method to invoke the remote operation.
       *
       * @param name The name of the data source to update Schema. Format: datasources/{source_id}
       * @param content the {@link com.google.api.services.cloudsearch.v1.model.UpdateSchemaRequest}
       * @return the request
       */
      public UpdateSchema updateSchema(java.lang.String name, com.google.api.services.cloudsearch.v1.model.UpdateSchemaRequest content) throws java.io.IOException {
        UpdateSchema result = new UpdateSchema(name, content);
        initialize(result);
        return result;
      }

      public class UpdateSchema extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.Operation> {

        private static final String REST_PATH = "v1/indexing/{+name}/schema";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^datasources/[^/]+$");

        /**
         * Updates the schema of a data source. This method does not perform incremental updates to the
         * schema. Instead, this method updates the schema by overwriting the entire schema. **Note:**
         * This API requires an admin or service account to execute.
         *
         * Create a request for the method "datasources.updateSchema".
         *
         * This request holds the parameters needed by the the cloudsearch server.  After setting any
         * optional parameters, call the {@link UpdateSchema#execute()} method to invoke the remote
         * operation. <p> {@link
         * UpdateSchema#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the data source to update Schema. Format: datasources/{source_id}
         * @param content the {@link com.google.api.services.cloudsearch.v1.model.UpdateSchemaRequest}
         * @since 1.13
         */
        protected UpdateSchema(java.lang.String name, com.google.api.services.cloudsearch.v1.model.UpdateSchemaRequest content) {
          super(CloudSearch.this, "PUT", REST_PATH, content, com.google.api.services.cloudsearch.v1.model.Operation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^datasources/[^/]+$");
          }
        }

        @Override
        public UpdateSchema set$Xgafv(java.lang.String $Xgafv) {
          return (UpdateSchema) super.set$Xgafv($Xgafv);
        }

        @Override
        public UpdateSchema setAccessToken(java.lang.String accessToken) {
          return (UpdateSchema) super.setAccessToken(accessToken);
        }

        @Override
        public UpdateSchema setAlt(java.lang.String alt) {
          return (UpdateSchema) super.setAlt(alt);
        }

        @Override
        public UpdateSchema setCallback(java.lang.String callback) {
          return (UpdateSchema) super.setCallback(callback);
        }

        @Override
        public UpdateSchema setFields(java.lang.String fields) {
          return (UpdateSchema) super.setFields(fields);
        }

        @Override
        public UpdateSchema setKey(java.lang.String key) {
          return (UpdateSchema) super.setKey(key);
        }

        @Override
        public UpdateSchema setOauthToken(java.lang.String oauthToken) {
          return (UpdateSchema) super.setOauthToken(oauthToken);
        }

        @Override
        public UpdateSchema setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (UpdateSchema) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public UpdateSchema setQuotaUser(java.lang.String quotaUser) {
          return (UpdateSchema) super.setQuotaUser(quotaUser);
        }

        @Override
        public UpdateSchema setUploadType(java.lang.String uploadType) {
          return (UpdateSchema) super.setUploadType(uploadType);
        }

        @Override
        public UpdateSchema setUploadProtocol(java.lang.String uploadProtocol) {
          return (UpdateSchema) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the data source to update Schema. Format: datasources/{source_id} */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the data source to update Schema. Format: datasources/{source_id}
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the data source to update Schema. Format: datasources/{source_id} */
        public UpdateSchema setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^datasources/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public UpdateSchema set(String parameterName, Object value) {
          return (UpdateSchema) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Items collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code CloudSearch cloudsearch = new CloudSearch(...);}
       *   {@code CloudSearch.Items.List request = cloudsearch.items().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Items items() {
        return new Items();
      }

      /**
       * The "items" collection of methods.
       */
      public class Items {

        /**
         * Deletes Item resource for the specified resource name. This API requires an admin or service
         * account to execute. The service account used is the one whitelisted in the corresponding data
         * source.
         *
         * Create a request for the method "items.delete".
         *
         * This request holds the parameters needed by the cloudsearch server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the item to delete. Format: datasources/{source_id}/items/{item_id}
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.Operation> {

          private static final String REST_PATH = "v1/indexing/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^datasources/[^/]+/items/[^/]+$");

          /**
           * Deletes Item resource for the specified resource name. This API requires an admin or service
           * account to execute. The service account used is the one whitelisted in the corresponding data
           * source.
           *
           * Create a request for the method "items.delete".
           *
           * This request holds the parameters needed by the the cloudsearch server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the item to delete. Format: datasources/{source_id}/items/{item_id}
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(CloudSearch.this, "DELETE", REST_PATH, null, com.google.api.services.cloudsearch.v1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^datasources/[^/]+/items/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the item to delete. Format:
           * datasources/{source_id}/items/{item_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the item to delete. Format: datasources/{source_id}/items/{item_id}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the item to delete. Format:
           * datasources/{source_id}/items/{item_id}
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^datasources/[^/]+/items/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * The name of connector making this call. Format: datasources/{source_id}/connectors/{ID}
           */
          @com.google.api.client.util.Key
          private java.lang.String connectorName;

          /** The name of connector making this call. Format: datasources/{source_id}/connectors/{ID}
           */
          public java.lang.String getConnectorName() {
            return connectorName;
          }

          /**
           * The name of connector making this call. Format: datasources/{source_id}/connectors/{ID}
           */
          public Delete setConnectorName(java.lang.String connectorName) {
            this.connectorName = connectorName;
            return this;
          }

          /**
           * If you are asked by Google to help with debugging, set this field. Otherwise, ignore
           * this field.
           */
          @com.google.api.client.util.Key("debugOptions.enableDebugging")
          private java.lang.Boolean debugOptionsEnableDebugging;

          /** If you are asked by Google to help with debugging, set this field. Otherwise, ignore this field.
           */
          public java.lang.Boolean getDebugOptionsEnableDebugging() {
            return debugOptionsEnableDebugging;
          }

          /**
           * If you are asked by Google to help with debugging, set this field. Otherwise, ignore
           * this field.
           */
          public Delete setDebugOptionsEnableDebugging(java.lang.Boolean debugOptionsEnableDebugging) {
            this.debugOptionsEnableDebugging = debugOptionsEnableDebugging;
            return this;
          }

          /** Required. The RequestMode for this request. */
          @com.google.api.client.util.Key
          private java.lang.String mode;

          /** Required. The RequestMode for this request.
           */
          public java.lang.String getMode() {
            return mode;
          }

          /** Required. The RequestMode for this request. */
          public Delete setMode(java.lang.String mode) {
            this.mode = mode;
            return this;
          }

          /**
           * Required. The incremented version of the item to delete from the index. The indexing
           * system stores the version from the datasource as a byte string and compares the Item
           * version in the index to the version of the queued Item using lexical ordering. Cloud
           * Search Indexing won't delete any queued item with a version value that is less than or
           * equal to the version of the currently indexed item. The maximum length for this field
           * is 1024 bytes. For information on how item version affects the deletion process, refer
           * to [Handle revisions after manual deletes](https://developers.google.com/cloud-
           * search/docs/guides/operations).
           */
          @com.google.api.client.util.Key
          private java.lang.String version;

          /** Required. The incremented version of the item to delete from the index. The indexing system stores
         the version from the datasource as a byte string and compares the Item version in the index to the
         version of the queued Item using lexical ordering. Cloud Search Indexing won't delete any queued
         item with a version value that is less than or equal to the version of the currently indexed item.
         The maximum length for this field is 1024 bytes. For information on how item version affects the
         deletion process, refer to [Handle revisions after manual deletes](https://developers.google.com
         /cloud-search/docs/guides/operations).
           */
          public java.lang.String getVersion() {
            return version;
          }

          /**
           * Required. The incremented version of the item to delete from the index. The indexing
           * system stores the version from the datasource as a byte string and compares the Item
           * version in the index to the version of the queued Item using lexical ordering. Cloud
           * Search Indexing won't delete any queued item with a version value that is less than or
           * equal to the version of the currently indexed item. The maximum length for this field
           * is 1024 bytes. For information on how item version affects the deletion process, refer
           * to [Handle revisions after manual deletes](https://developers.google.com/cloud-
           * search/docs/guides/operations).
           */
          public Delete setVersion(java.lang.String version) {
            this.version = version;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Deletes all items in a queue. This method is useful for deleting stale items. This API requires
         * an admin or service account to execute. The service account used is the one whitelisted in the
         * corresponding data source.
         *
         * Create a request for the method "items.deleteQueueItems".
         *
         * This request holds the parameters needed by the cloudsearch server.  After setting any optional
         * parameters, call the {@link DeleteQueueItems#execute()} method to invoke the remote operation.
         *
         * @param name The name of the Data Source to delete items in a queue. Format: datasources/{source_id}
         * @param content the {@link com.google.api.services.cloudsearch.v1.model.DeleteQueueItemsRequest}
         * @return the request
         */
        public DeleteQueueItems deleteQueueItems(java.lang.String name, com.google.api.services.cloudsearch.v1.model.DeleteQueueItemsRequest content) throws java.io.IOException {
          DeleteQueueItems result = new DeleteQueueItems(name, content);
          initialize(result);
          return result;
        }

        public class DeleteQueueItems extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.Operation> {

          private static final String REST_PATH = "v1/indexing/{+name}/items:deleteQueueItems";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^datasources/[^/]+$");

          /**
           * Deletes all items in a queue. This method is useful for deleting stale items. This API requires
           * an admin or service account to execute. The service account used is the one whitelisted in the
           * corresponding data source.
           *
           * Create a request for the method "items.deleteQueueItems".
           *
           * This request holds the parameters needed by the the cloudsearch server.  After setting any
           * optional parameters, call the {@link DeleteQueueItems#execute()} method to invoke the remote
           * operation. <p> {@link DeleteQueueItems#initialize(com.google.api.client.googleapis.services.Abs
           * tractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param name The name of the Data Source to delete items in a queue. Format: datasources/{source_id}
           * @param content the {@link com.google.api.services.cloudsearch.v1.model.DeleteQueueItemsRequest}
           * @since 1.13
           */
          protected DeleteQueueItems(java.lang.String name, com.google.api.services.cloudsearch.v1.model.DeleteQueueItemsRequest content) {
            super(CloudSearch.this, "POST", REST_PATH, content, com.google.api.services.cloudsearch.v1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^datasources/[^/]+$");
            }
          }

          @Override
          public DeleteQueueItems set$Xgafv(java.lang.String $Xgafv) {
            return (DeleteQueueItems) super.set$Xgafv($Xgafv);
          }

          @Override
          public DeleteQueueItems setAccessToken(java.lang.String accessToken) {
            return (DeleteQueueItems) super.setAccessToken(accessToken);
          }

          @Override
          public DeleteQueueItems setAlt(java.lang.String alt) {
            return (DeleteQueueItems) super.setAlt(alt);
          }

          @Override
          public DeleteQueueItems setCallback(java.lang.String callback) {
            return (DeleteQueueItems) super.setCallback(callback);
          }

          @Override
          public DeleteQueueItems setFields(java.lang.String fields) {
            return (DeleteQueueItems) super.setFields(fields);
          }

          @Override
          public DeleteQueueItems setKey(java.lang.String key) {
            return (DeleteQueueItems) super.setKey(key);
          }

          @Override
          public DeleteQueueItems setOauthToken(java.lang.String oauthToken) {
            return (DeleteQueueItems) super.setOauthToken(oauthToken);
          }

          @Override
          public DeleteQueueItems setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (DeleteQueueItems) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public DeleteQueueItems setQuotaUser(java.lang.String quotaUser) {
            return (DeleteQueueItems) super.setQuotaUser(quotaUser);
          }

          @Override
          public DeleteQueueItems setUploadType(java.lang.String uploadType) {
            return (DeleteQueueItems) super.setUploadType(uploadType);
          }

          @Override
          public DeleteQueueItems setUploadProtocol(java.lang.String uploadProtocol) {
            return (DeleteQueueItems) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The name of the Data Source to delete items in a queue. Format: datasources/{source_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the Data Source to delete items in a queue. Format: datasources/{source_id}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The name of the Data Source to delete items in a queue. Format: datasources/{source_id}
           */
          public DeleteQueueItems setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^datasources/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public DeleteQueueItems set(String parameterName, Object value) {
            return (DeleteQueueItems) super.set(parameterName, value);
          }
        }
        /**
         * Gets Item resource by item name. This API requires an admin or service account to execute. The
         * service account used is the one whitelisted in the corresponding data source.
         *
         * Create a request for the method "items.get".
         *
         * This request holds the parameters needed by the cloudsearch server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name The name of the item to get info. Format: datasources/{source_id}/items/{item_id}
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.Item> {

          private static final String REST_PATH = "v1/indexing/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^datasources/[^/]+/items/[^/]+$");

          /**
           * Gets Item resource by item name. This API requires an admin or service account to execute. The
           * service account used is the one whitelisted in the corresponding data source.
           *
           * Create a request for the method "items.get".
           *
           * This request holds the parameters needed by the the cloudsearch server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the item to get info. Format: datasources/{source_id}/items/{item_id}
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(CloudSearch.this, "GET", REST_PATH, null, com.google.api.services.cloudsearch.v1.model.Item.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^datasources/[^/]+/items/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the item to get info. Format: datasources/{source_id}/items/{item_id} */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the item to get info. Format: datasources/{source_id}/items/{item_id}
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the item to get info. Format: datasources/{source_id}/items/{item_id} */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^datasources/[^/]+/items/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * The name of connector making this call. Format: datasources/{source_id}/connectors/{ID}
           */
          @com.google.api.client.util.Key
          private java.lang.String connectorName;

          /** The name of connector making this call. Format: datasources/{source_id}/connectors/{ID}
           */
          public java.lang.String getConnectorName() {
            return connectorName;
          }

          /**
           * The name of connector making this call. Format: datasources/{source_id}/connectors/{ID}
           */
          public Get setConnectorName(java.lang.String connectorName) {
            this.connectorName = connectorName;
            return this;
          }

          /**
           * If you are asked by Google to help with debugging, set this field. Otherwise, ignore
           * this field.
           */
          @com.google.api.client.util.Key("debugOptions.enableDebugging")
          private java.lang.Boolean debugOptionsEnableDebugging;

          /** If you are asked by Google to help with debugging, set this field. Otherwise, ignore this field.
           */
          public java.lang.Boolean getDebugOptionsEnableDebugging() {
            return debugOptionsEnableDebugging;
          }

          /**
           * If you are asked by Google to help with debugging, set this field. Otherwise, ignore
           * this field.
           */
          public Get setDebugOptionsEnableDebugging(java.lang.Boolean debugOptionsEnableDebugging) {
            this.debugOptionsEnableDebugging = debugOptionsEnableDebugging;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Updates Item ACL, metadata, and content. It will insert the Item if it does not exist. This
         * method does not support partial updates. Fields with no provided values are cleared out in the
         * Cloud Search index. This API requires an admin or service account to execute. The service account
         * used is the one whitelisted in the corresponding data source.
         *
         * Create a request for the method "items.index".
         *
         * This request holds the parameters needed by the cloudsearch server.  After setting any optional
         * parameters, call the {@link Index#execute()} method to invoke the remote operation.
         *
         * @param name The name of the Item. Format: datasources/{source_id}/items/{item_id} This is a required field. The
         *        maximum length is 1536 characters.
         * @param content the {@link com.google.api.services.cloudsearch.v1.model.IndexItemRequest}
         * @return the request
         */
        public Index index(java.lang.String name, com.google.api.services.cloudsearch.v1.model.IndexItemRequest content) throws java.io.IOException {
          Index result = new Index(name, content);
          initialize(result);
          return result;
        }

        public class Index extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.Operation> {

          private static final String REST_PATH = "v1/indexing/{+name}:index";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^datasources/[^/]+/items/[^/]+$");

          /**
           * Updates Item ACL, metadata, and content. It will insert the Item if it does not exist. This
           * method does not support partial updates. Fields with no provided values are cleared out in the
           * Cloud Search index. This API requires an admin or service account to execute. The service
           * account used is the one whitelisted in the corresponding data source.
           *
           * Create a request for the method "items.index".
           *
           * This request holds the parameters needed by the the cloudsearch server.  After setting any
           * optional parameters, call the {@link Index#execute()} method to invoke the remote operation.
           * <p> {@link
           * Index#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the Item. Format: datasources/{source_id}/items/{item_id} This is a required field. The
         *        maximum length is 1536 characters.
           * @param content the {@link com.google.api.services.cloudsearch.v1.model.IndexItemRequest}
           * @since 1.13
           */
          protected Index(java.lang.String name, com.google.api.services.cloudsearch.v1.model.IndexItemRequest content) {
            super(CloudSearch.this, "POST", REST_PATH, content, com.google.api.services.cloudsearch.v1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^datasources/[^/]+/items/[^/]+$");
            }
          }

          @Override
          public Index set$Xgafv(java.lang.String $Xgafv) {
            return (Index) super.set$Xgafv($Xgafv);
          }

          @Override
          public Index setAccessToken(java.lang.String accessToken) {
            return (Index) super.setAccessToken(accessToken);
          }

          @Override
          public Index setAlt(java.lang.String alt) {
            return (Index) super.setAlt(alt);
          }

          @Override
          public Index setCallback(java.lang.String callback) {
            return (Index) super.setCallback(callback);
          }

          @Override
          public Index setFields(java.lang.String fields) {
            return (Index) super.setFields(fields);
          }

          @Override
          public Index setKey(java.lang.String key) {
            return (Index) super.setKey(key);
          }

          @Override
          public Index setOauthToken(java.lang.String oauthToken) {
            return (Index) super.setOauthToken(oauthToken);
          }

          @Override
          public Index setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Index) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Index setQuotaUser(java.lang.String quotaUser) {
            return (Index) super.setQuotaUser(quotaUser);
          }

          @Override
          public Index setUploadType(java.lang.String uploadType) {
            return (Index) super.setUploadType(uploadType);
          }

          @Override
          public Index setUploadProtocol(java.lang.String uploadProtocol) {
            return (Index) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The name of the Item. Format: datasources/{source_id}/items/{item_id} This is a
           * required field. The maximum length is 1536 characters.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the Item. Format: datasources/{source_id}/items/{item_id} This is a required field. The
         maximum length is 1536 characters.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The name of the Item. Format: datasources/{source_id}/items/{item_id} This is a
           * required field. The maximum length is 1536 characters.
           */
          public Index setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^datasources/[^/]+/items/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Index set(String parameterName, Object value) {
            return (Index) super.set(parameterName, value);
          }
        }
        /**
         * Lists all or a subset of Item resources. This API requires an admin or service account to
         * execute. The service account used is the one whitelisted in the corresponding data source.
         *
         * Create a request for the method "items.list".
         *
         * This request holds the parameters needed by the cloudsearch server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param name The name of the Data Source to list Items. Format: datasources/{source_id}
         * @return the request
         */
        public List list(java.lang.String name) throws java.io.IOException {
          List result = new List(name);
          initialize(result);
          return result;
        }

        public class List extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.ListItemsResponse> {

          private static final String REST_PATH = "v1/indexing/{+name}/items";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^datasources/[^/]+$");

          /**
           * Lists all or a subset of Item resources. This API requires an admin or service account to
           * execute. The service account used is the one whitelisted in the corresponding data source.
           *
           * Create a request for the method "items.list".
           *
           * This request holds the parameters needed by the the cloudsearch server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the Data Source to list Items. Format: datasources/{source_id}
           * @since 1.13
           */
          protected List(java.lang.String name) {
            super(CloudSearch.this, "GET", REST_PATH, null, com.google.api.services.cloudsearch.v1.model.ListItemsResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^datasources/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the Data Source to list Items. Format: datasources/{source_id} */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the Data Source to list Items. Format: datasources/{source_id}
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the Data Source to list Items. Format: datasources/{source_id} */
          public List setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^datasources/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * When set to true, the indexing system only populates the following fields: name,
           * version, queue. metadata.hash, metadata.title, metadata.sourceRepositoryURL,
           * metadata.objectType, metadata.createTime, metadata.updateTime,
           * metadata.contentLanguage, metadata.mimeType, structured_data.hash, content.hash,
           * itemType, itemStatus.code, itemStatus.processingError.code,
           * itemStatus.repositoryError.type, If this value is false, then all the fields are
           * populated in Item.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean brief;

          /** When set to true, the indexing system only populates the following fields: name, version, queue.
         metadata.hash, metadata.title, metadata.sourceRepositoryURL, metadata.objectType,
         metadata.createTime, metadata.updateTime, metadata.contentLanguage, metadata.mimeType,
         structured_data.hash, content.hash, itemType, itemStatus.code, itemStatus.processingError.code,
         itemStatus.repositoryError.type, If this value is false, then all the fields are populated in Item.
           */
          public java.lang.Boolean getBrief() {
            return brief;
          }

          /**
           * When set to true, the indexing system only populates the following fields: name,
           * version, queue. metadata.hash, metadata.title, metadata.sourceRepositoryURL,
           * metadata.objectType, metadata.createTime, metadata.updateTime,
           * metadata.contentLanguage, metadata.mimeType, structured_data.hash, content.hash,
           * itemType, itemStatus.code, itemStatus.processingError.code,
           * itemStatus.repositoryError.type, If this value is false, then all the fields are
           * populated in Item.
           */
          public List setBrief(java.lang.Boolean brief) {
            this.brief = brief;
            return this;
          }

          /**
           * The name of connector making this call. Format: datasources/{source_id}/connectors/{ID}
           */
          @com.google.api.client.util.Key
          private java.lang.String connectorName;

          /** The name of connector making this call. Format: datasources/{source_id}/connectors/{ID}
           */
          public java.lang.String getConnectorName() {
            return connectorName;
          }

          /**
           * The name of connector making this call. Format: datasources/{source_id}/connectors/{ID}
           */
          public List setConnectorName(java.lang.String connectorName) {
            this.connectorName = connectorName;
            return this;
          }

          /**
           * If you are asked by Google to help with debugging, set this field. Otherwise, ignore
           * this field.
           */
          @com.google.api.client.util.Key("debugOptions.enableDebugging")
          private java.lang.Boolean debugOptionsEnableDebugging;

          /** If you are asked by Google to help with debugging, set this field. Otherwise, ignore this field.
           */
          public java.lang.Boolean getDebugOptionsEnableDebugging() {
            return debugOptionsEnableDebugging;
          }

          /**
           * If you are asked by Google to help with debugging, set this field. Otherwise, ignore
           * this field.
           */
          public List setDebugOptionsEnableDebugging(java.lang.Boolean debugOptionsEnableDebugging) {
            this.debugOptionsEnableDebugging = debugOptionsEnableDebugging;
            return this;
          }

          /**
           * Maximum number of items to fetch in a request. The max value is 1000 when brief is
           * true. The max value is 10 if brief is false. The default value is 10
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Maximum number of items to fetch in a request. The max value is 1000 when brief is true. The max
         value is 10 if brief is false. The default value is 10
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Maximum number of items to fetch in a request. The max value is 1000 when brief is
           * true. The max value is 10 if brief is false. The default value is 10
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The next_page_token value returned from a previous List request, if any. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The next_page_token value returned from a previous List request, if any.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The next_page_token value returned from a previous List request, if any. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Polls for unreserved items from the indexing queue and marks a set as reserved, starting with
         * items that have the oldest timestamp from the highest priority ItemStatus. The priority order is
         * as follows: ERROR MODIFIED NEW_ITEM ACCEPTED Reserving items ensures that polling from other
         * threads cannot create overlapping sets. After handling the reserved items, the client should put
         * items back into the unreserved state, either by calling index, or by calling push with the type
         * REQUEUE. Items automatically become available (unreserved) after 4 hours even if no update or
         * push method is called. This API requires an admin or service account to execute. The service
         * account used is the one whitelisted in the corresponding data source.
         *
         * Create a request for the method "items.poll".
         *
         * This request holds the parameters needed by the cloudsearch server.  After setting any optional
         * parameters, call the {@link Poll#execute()} method to invoke the remote operation.
         *
         * @param name The name of the Data Source to poll items. Format: datasources/{source_id}
         * @param content the {@link com.google.api.services.cloudsearch.v1.model.PollItemsRequest}
         * @return the request
         */
        public Poll poll(java.lang.String name, com.google.api.services.cloudsearch.v1.model.PollItemsRequest content) throws java.io.IOException {
          Poll result = new Poll(name, content);
          initialize(result);
          return result;
        }

        public class Poll extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.PollItemsResponse> {

          private static final String REST_PATH = "v1/indexing/{+name}/items:poll";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^datasources/[^/]+$");

          /**
           * Polls for unreserved items from the indexing queue and marks a set as reserved, starting with
           * items that have the oldest timestamp from the highest priority ItemStatus. The priority order
           * is as follows: ERROR MODIFIED NEW_ITEM ACCEPTED Reserving items ensures that polling from other
           * threads cannot create overlapping sets. After handling the reserved items, the client should
           * put items back into the unreserved state, either by calling index, or by calling push with the
           * type REQUEUE. Items automatically become available (unreserved) after 4 hours even if no update
           * or push method is called. This API requires an admin or service account to execute. The service
           * account used is the one whitelisted in the corresponding data source.
           *
           * Create a request for the method "items.poll".
           *
           * This request holds the parameters needed by the the cloudsearch server.  After setting any
           * optional parameters, call the {@link Poll#execute()} method to invoke the remote operation. <p>
           * {@link Poll#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the Data Source to poll items. Format: datasources/{source_id}
           * @param content the {@link com.google.api.services.cloudsearch.v1.model.PollItemsRequest}
           * @since 1.13
           */
          protected Poll(java.lang.String name, com.google.api.services.cloudsearch.v1.model.PollItemsRequest content) {
            super(CloudSearch.this, "POST", REST_PATH, content, com.google.api.services.cloudsearch.v1.model.PollItemsResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^datasources/[^/]+$");
            }
          }

          @Override
          public Poll set$Xgafv(java.lang.String $Xgafv) {
            return (Poll) super.set$Xgafv($Xgafv);
          }

          @Override
          public Poll setAccessToken(java.lang.String accessToken) {
            return (Poll) super.setAccessToken(accessToken);
          }

          @Override
          public Poll setAlt(java.lang.String alt) {
            return (Poll) super.setAlt(alt);
          }

          @Override
          public Poll setCallback(java.lang.String callback) {
            return (Poll) super.setCallback(callback);
          }

          @Override
          public Poll setFields(java.lang.String fields) {
            return (Poll) super.setFields(fields);
          }

          @Override
          public Poll setKey(java.lang.String key) {
            return (Poll) super.setKey(key);
          }

          @Override
          public Poll setOauthToken(java.lang.String oauthToken) {
            return (Poll) super.setOauthToken(oauthToken);
          }

          @Override
          public Poll setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Poll) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Poll setQuotaUser(java.lang.String quotaUser) {
            return (Poll) super.setQuotaUser(quotaUser);
          }

          @Override
          public Poll setUploadType(java.lang.String uploadType) {
            return (Poll) super.setUploadType(uploadType);
          }

          @Override
          public Poll setUploadProtocol(java.lang.String uploadProtocol) {
            return (Poll) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the Data Source to poll items. Format: datasources/{source_id} */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the Data Source to poll items. Format: datasources/{source_id}
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the Data Source to poll items. Format: datasources/{source_id} */
          public Poll setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^datasources/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Poll set(String parameterName, Object value) {
            return (Poll) super.set(parameterName, value);
          }
        }
        /**
         * Pushes an item onto a queue for later polling and updating. This API requires an admin or service
         * account to execute. The service account used is the one whitelisted in the corresponding data
         * source.
         *
         * Create a request for the method "items.push".
         *
         * This request holds the parameters needed by the cloudsearch server.  After setting any optional
         * parameters, call the {@link Push#execute()} method to invoke the remote operation.
         *
         * @param name The name of the item to push into the indexing queue. Format: datasources/{source_id}/items/{ID}
         *        This is a required field. The maximum length is 1536 characters.
         * @param content the {@link com.google.api.services.cloudsearch.v1.model.PushItemRequest}
         * @return the request
         */
        public Push push(java.lang.String name, com.google.api.services.cloudsearch.v1.model.PushItemRequest content) throws java.io.IOException {
          Push result = new Push(name, content);
          initialize(result);
          return result;
        }

        public class Push extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.Item> {

          private static final String REST_PATH = "v1/indexing/{+name}:push";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^datasources/[^/]+/items/[^/]+$");

          /**
           * Pushes an item onto a queue for later polling and updating. This API requires an admin or
           * service account to execute. The service account used is the one whitelisted in the
           * corresponding data source.
           *
           * Create a request for the method "items.push".
           *
           * This request holds the parameters needed by the the cloudsearch server.  After setting any
           * optional parameters, call the {@link Push#execute()} method to invoke the remote operation. <p>
           * {@link Push#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the item to push into the indexing queue. Format: datasources/{source_id}/items/{ID}
         *        This is a required field. The maximum length is 1536 characters.
           * @param content the {@link com.google.api.services.cloudsearch.v1.model.PushItemRequest}
           * @since 1.13
           */
          protected Push(java.lang.String name, com.google.api.services.cloudsearch.v1.model.PushItemRequest content) {
            super(CloudSearch.this, "POST", REST_PATH, content, com.google.api.services.cloudsearch.v1.model.Item.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^datasources/[^/]+/items/[^/]+$");
            }
          }

          @Override
          public Push set$Xgafv(java.lang.String $Xgafv) {
            return (Push) super.set$Xgafv($Xgafv);
          }

          @Override
          public Push setAccessToken(java.lang.String accessToken) {
            return (Push) super.setAccessToken(accessToken);
          }

          @Override
          public Push setAlt(java.lang.String alt) {
            return (Push) super.setAlt(alt);
          }

          @Override
          public Push setCallback(java.lang.String callback) {
            return (Push) super.setCallback(callback);
          }

          @Override
          public Push setFields(java.lang.String fields) {
            return (Push) super.setFields(fields);
          }

          @Override
          public Push setKey(java.lang.String key) {
            return (Push) super.setKey(key);
          }

          @Override
          public Push setOauthToken(java.lang.String oauthToken) {
            return (Push) super.setOauthToken(oauthToken);
          }

          @Override
          public Push setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Push) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Push setQuotaUser(java.lang.String quotaUser) {
            return (Push) super.setQuotaUser(quotaUser);
          }

          @Override
          public Push setUploadType(java.lang.String uploadType) {
            return (Push) super.setUploadType(uploadType);
          }

          @Override
          public Push setUploadProtocol(java.lang.String uploadProtocol) {
            return (Push) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The name of the item to push into the indexing queue. Format:
           * datasources/{source_id}/items/{ID} This is a required field. The maximum length is 1536
           * characters.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the item to push into the indexing queue. Format: datasources/{source_id}/items/{ID}
         This is a required field. The maximum length is 1536 characters.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The name of the item to push into the indexing queue. Format:
           * datasources/{source_id}/items/{ID} This is a required field. The maximum length is 1536
           * characters.
           */
          public Push setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^datasources/[^/]+/items/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Push set(String parameterName, Object value) {
            return (Push) super.set(parameterName, value);
          }
        }
        /**
         * Unreserves all items from a queue, making them all eligible to be polled. This method is useful
         * for resetting the indexing queue after a connector has been restarted. This API requires an admin
         * or service account to execute. The service account used is the one whitelisted in the
         * corresponding data source.
         *
         * Create a request for the method "items.unreserve".
         *
         * This request holds the parameters needed by the cloudsearch server.  After setting any optional
         * parameters, call the {@link Unreserve#execute()} method to invoke the remote operation.
         *
         * @param name The name of the Data Source to unreserve all items. Format: datasources/{source_id}
         * @param content the {@link com.google.api.services.cloudsearch.v1.model.UnreserveItemsRequest}
         * @return the request
         */
        public Unreserve unreserve(java.lang.String name, com.google.api.services.cloudsearch.v1.model.UnreserveItemsRequest content) throws java.io.IOException {
          Unreserve result = new Unreserve(name, content);
          initialize(result);
          return result;
        }

        public class Unreserve extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.Operation> {

          private static final String REST_PATH = "v1/indexing/{+name}/items:unreserve";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^datasources/[^/]+$");

          /**
           * Unreserves all items from a queue, making them all eligible to be polled. This method is useful
           * for resetting the indexing queue after a connector has been restarted. This API requires an
           * admin or service account to execute. The service account used is the one whitelisted in the
           * corresponding data source.
           *
           * Create a request for the method "items.unreserve".
           *
           * This request holds the parameters needed by the the cloudsearch server.  After setting any
           * optional parameters, call the {@link Unreserve#execute()} method to invoke the remote
           * operation. <p> {@link
           * Unreserve#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the Data Source to unreserve all items. Format: datasources/{source_id}
           * @param content the {@link com.google.api.services.cloudsearch.v1.model.UnreserveItemsRequest}
           * @since 1.13
           */
          protected Unreserve(java.lang.String name, com.google.api.services.cloudsearch.v1.model.UnreserveItemsRequest content) {
            super(CloudSearch.this, "POST", REST_PATH, content, com.google.api.services.cloudsearch.v1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^datasources/[^/]+$");
            }
          }

          @Override
          public Unreserve set$Xgafv(java.lang.String $Xgafv) {
            return (Unreserve) super.set$Xgafv($Xgafv);
          }

          @Override
          public Unreserve setAccessToken(java.lang.String accessToken) {
            return (Unreserve) super.setAccessToken(accessToken);
          }

          @Override
          public Unreserve setAlt(java.lang.String alt) {
            return (Unreserve) super.setAlt(alt);
          }

          @Override
          public Unreserve setCallback(java.lang.String callback) {
            return (Unreserve) super.setCallback(callback);
          }

          @Override
          public Unreserve setFields(java.lang.String fields) {
            return (Unreserve) super.setFields(fields);
          }

          @Override
          public Unreserve setKey(java.lang.String key) {
            return (Unreserve) super.setKey(key);
          }

          @Override
          public Unreserve setOauthToken(java.lang.String oauthToken) {
            return (Unreserve) super.setOauthToken(oauthToken);
          }

          @Override
          public Unreserve setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Unreserve) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Unreserve setQuotaUser(java.lang.String quotaUser) {
            return (Unreserve) super.setQuotaUser(quotaUser);
          }

          @Override
          public Unreserve setUploadType(java.lang.String uploadType) {
            return (Unreserve) super.setUploadType(uploadType);
          }

          @Override
          public Unreserve setUploadProtocol(java.lang.String uploadProtocol) {
            return (Unreserve) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The name of the Data Source to unreserve all items. Format: datasources/{source_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the Data Source to unreserve all items. Format: datasources/{source_id}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The name of the Data Source to unreserve all items. Format: datasources/{source_id}
           */
          public Unreserve setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^datasources/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Unreserve set(String parameterName, Object value) {
            return (Unreserve) super.set(parameterName, value);
          }
        }
        /**
         * Creates an upload session for uploading item content. For items smaller than 100 KB, it's easier
         * to embed the content inline within an index request. This API requires an admin or service
         * account to execute. The service account used is the one whitelisted in the corresponding data
         * source.
         *
         * Create a request for the method "items.upload".
         *
         * This request holds the parameters needed by the cloudsearch server.  After setting any optional
         * parameters, call the {@link Upload#execute()} method to invoke the remote operation.
         *
         * @param name The name of the Item to start a resumable upload. Format: datasources/{source_id}/items/{item_id}.
         *        The maximum length is 1536 bytes.
         * @param content the {@link com.google.api.services.cloudsearch.v1.model.StartUploadItemRequest}
         * @return the request
         */
        public Upload upload(java.lang.String name, com.google.api.services.cloudsearch.v1.model.StartUploadItemRequest content) throws java.io.IOException {
          Upload result = new Upload(name, content);
          initialize(result);
          return result;
        }

        public class Upload extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.UploadItemRef> {

          private static final String REST_PATH = "v1/indexing/{+name}:upload";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^datasources/[^/]+/items/[^/]+$");

          /**
           * Creates an upload session for uploading item content. For items smaller than 100 KB, it's
           * easier to embed the content inline within an index request. This API requires an admin or
           * service account to execute. The service account used is the one whitelisted in the
           * corresponding data source.
           *
           * Create a request for the method "items.upload".
           *
           * This request holds the parameters needed by the the cloudsearch server.  After setting any
           * optional parameters, call the {@link Upload#execute()} method to invoke the remote operation.
           * <p> {@link
           * Upload#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the Item to start a resumable upload. Format: datasources/{source_id}/items/{item_id}.
         *        The maximum length is 1536 bytes.
           * @param content the {@link com.google.api.services.cloudsearch.v1.model.StartUploadItemRequest}
           * @since 1.13
           */
          protected Upload(java.lang.String name, com.google.api.services.cloudsearch.v1.model.StartUploadItemRequest content) {
            super(CloudSearch.this, "POST", REST_PATH, content, com.google.api.services.cloudsearch.v1.model.UploadItemRef.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^datasources/[^/]+/items/[^/]+$");
            }
          }

          @Override
          public Upload set$Xgafv(java.lang.String $Xgafv) {
            return (Upload) super.set$Xgafv($Xgafv);
          }

          @Override
          public Upload setAccessToken(java.lang.String accessToken) {
            return (Upload) super.setAccessToken(accessToken);
          }

          @Override
          public Upload setAlt(java.lang.String alt) {
            return (Upload) super.setAlt(alt);
          }

          @Override
          public Upload setCallback(java.lang.String callback) {
            return (Upload) super.setCallback(callback);
          }

          @Override
          public Upload setFields(java.lang.String fields) {
            return (Upload) super.setFields(fields);
          }

          @Override
          public Upload setKey(java.lang.String key) {
            return (Upload) super.setKey(key);
          }

          @Override
          public Upload setOauthToken(java.lang.String oauthToken) {
            return (Upload) super.setOauthToken(oauthToken);
          }

          @Override
          public Upload setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Upload) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Upload setQuotaUser(java.lang.String quotaUser) {
            return (Upload) super.setQuotaUser(quotaUser);
          }

          @Override
          public Upload setUploadType(java.lang.String uploadType) {
            return (Upload) super.setUploadType(uploadType);
          }

          @Override
          public Upload setUploadProtocol(java.lang.String uploadProtocol) {
            return (Upload) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The name of the Item to start a resumable upload. Format:
           * datasources/{source_id}/items/{item_id}. The maximum length is 1536 bytes.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the Item to start a resumable upload. Format: datasources/{source_id}/items/{item_id}.
         The maximum length is 1536 bytes.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The name of the Item to start a resumable upload. Format:
           * datasources/{source_id}/items/{item_id}. The maximum length is 1536 bytes.
           */
          public Upload setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^datasources/[^/]+/items/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Upload set(String parameterName, Object value) {
            return (Upload) super.set(parameterName, value);
          }
        }

      }
    }
  }

  /**
   * An accessor for creating requests from the Media collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code CloudSearch cloudsearch = new CloudSearch(...);}
   *   {@code CloudSearch.Media.List request = cloudsearch.media().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Media media() {
    return new Media();
  }

  /**
   * The "media" collection of methods.
   */
  public class Media {

    /**
     * Uploads media for indexing. The upload endpoint supports direct and resumable upload protocols
     * and is intended for large items that can not be [inlined during index
     * requests](https://developers.google.com/cloud-
     * search/docs/reference/rest/v1/indexing.datasources.items#itemcontent). To index large content: 1.
     * Call indexing.datasources.items.upload with the item name to begin an upload session and retrieve
     * the UploadItemRef. 1. Call media.upload to upload the content, as a streaming request, using the
     * same resource name from the UploadItemRef from step 1. 1. Call indexing.datasources.items.index
     * to index the item. Populate the [ItemContent](/cloud-
     * search/docs/reference/rest/v1/indexing.datasources.items#ItemContent) with the UploadItemRef from
     * step 1. For additional information, see [Create a content connector using the REST
     * API](https://developers.google.com/cloud-search/docs/guides/content-connector#rest). **Note:**
     * This API requires a service account to execute.
     *
     * Create a request for the method "media.upload".
     *
     * This request holds the parameters needed by the cloudsearch server.  After setting any optional
     * parameters, call the {@link Upload#execute()} method to invoke the remote operation.
     *
     * @param resourceName Name of the media that is being downloaded. See ReadRequest.resource_name.
     * @param content the {@link com.google.api.services.cloudsearch.v1.model.Media}
     * @return the request
     */
    public Upload upload(java.lang.String resourceName, com.google.api.services.cloudsearch.v1.model.Media content) throws java.io.IOException {
      Upload result = new Upload(resourceName, content);
      initialize(result);
      return result;
    }

    /**
     * Uploads media for indexing. The upload endpoint supports direct and resumable upload protocols
     * and is intended for large items that can not be [inlined during index
     * requests](https://developers.google.com/cloud-
     * search/docs/reference/rest/v1/indexing.datasources.items#itemcontent). To index large content: 1.
     * Call indexing.datasources.items.upload with the item name to begin an upload session and retrieve
     * the UploadItemRef. 1. Call media.upload to upload the content, as a streaming request, using the
     * same resource name from the UploadItemRef from step 1. 1. Call indexing.datasources.items.index
     * to index the item. Populate the [ItemContent](/cloud-
     * search/docs/reference/rest/v1/indexing.datasources.items#ItemContent) with the UploadItemRef from
     * step 1. For additional information, see [Create a content connector using the REST
     * API](https://developers.google.com/cloud-search/docs/guides/content-connector#rest). **Note:**
     * This API requires a service account to execute.
     *
     * Create a request for the method "media.upload".
     *
     * This request holds the parameters needed by the the cloudsearch server.  After setting any
     * optional parameters, call the {@link Upload#execute()} method to invoke the remote operation.
     *
     * <p>
     * This method should be used for uploading media content.
     * </p>
     *
     * @param resourceName Name of the media that is being downloaded. See ReadRequest.resource_name.
     * @param content the {@link com.google.api.services.cloudsearch.v1.model.Media} media metadata or {@code null} if none
     * @param mediaContent The media HTTP content or {@code null} if none.
     * @return the request
     * @throws java.io.IOException if the initialization of the request fails
     */
    public Upload upload(java.lang.String resourceName, com.google.api.services.cloudsearch.v1.model.Media content, com.google.api.client.http.AbstractInputStreamContent mediaContent) throws java.io.IOException {
      Upload result = new Upload(resourceName, content, mediaContent);
      initialize(result);
      return result;
    }

    public class Upload extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.Media> {

      private static final String REST_PATH = "v1/media/{+resourceName}";

      private final java.util.regex.Pattern RESOURCE_NAME_PATTERN =
          java.util.regex.Pattern.compile("^.*$");

      /**
       * Uploads media for indexing. The upload endpoint supports direct and resumable upload protocols
       * and is intended for large items that can not be [inlined during index
       * requests](https://developers.google.com/cloud-
       * search/docs/reference/rest/v1/indexing.datasources.items#itemcontent). To index large content:
       * 1. Call indexing.datasources.items.upload with the item name to begin an upload session and
       * retrieve the UploadItemRef. 1. Call media.upload to upload the content, as a streaming request,
       * using the same resource name from the UploadItemRef from step 1. 1. Call
       * indexing.datasources.items.index to index the item. Populate the [ItemContent](/cloud-
       * search/docs/reference/rest/v1/indexing.datasources.items#ItemContent) with the UploadItemRef
       * from step 1. For additional information, see [Create a content connector using the REST
       * API](https://developers.google.com/cloud-search/docs/guides/content-connector#rest). **Note:**
       * This API requires a service account to execute.
       *
       * Create a request for the method "media.upload".
       *
       * This request holds the parameters needed by the the cloudsearch server.  After setting any
       * optional parameters, call the {@link Upload#execute()} method to invoke the remote operation.
       * <p> {@link
       * Upload#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param resourceName Name of the media that is being downloaded. See ReadRequest.resource_name.
       * @param content the {@link com.google.api.services.cloudsearch.v1.model.Media}
       * @since 1.13
       */
      protected Upload(java.lang.String resourceName, com.google.api.services.cloudsearch.v1.model.Media content) {
        super(CloudSearch.this, "POST", REST_PATH, content, com.google.api.services.cloudsearch.v1.model.Media.class);
        this.resourceName = com.google.api.client.util.Preconditions.checkNotNull(resourceName, "Required parameter resourceName must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(RESOURCE_NAME_PATTERN.matcher(resourceName).matches(),
              "Parameter resourceName must conform to the pattern " +
              "^.*$");
        }
      }

      /**
       * Uploads media for indexing. The upload endpoint supports direct and resumable upload protocols
       * and is intended for large items that can not be [inlined during index
       * requests](https://developers.google.com/cloud-
       * search/docs/reference/rest/v1/indexing.datasources.items#itemcontent). To index large content:
       * 1. Call indexing.datasources.items.upload with the item name to begin an upload session and
       * retrieve the UploadItemRef. 1. Call media.upload to upload the content, as a streaming request,
       * using the same resource name from the UploadItemRef from step 1. 1. Call
       * indexing.datasources.items.index to index the item. Populate the [ItemContent](/cloud-
       * search/docs/reference/rest/v1/indexing.datasources.items#ItemContent) with the UploadItemRef
       * from step 1. For additional information, see [Create a content connector using the REST
       * API](https://developers.google.com/cloud-search/docs/guides/content-connector#rest). **Note:**
       * This API requires a service account to execute.
       *
       * Create a request for the method "media.upload".
       *
       * This request holds the parameters needed by the the cloudsearch server.  After setting any
       * optional parameters, call the {@link Upload#execute()} method to invoke the remote operation.
       * <p> {@link
       * Upload#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * <p>
       * This constructor should be used for uploading media content.
       * </p>
       *
       * @param resourceName Name of the media that is being downloaded. See ReadRequest.resource_name.
       * @param content the {@link com.google.api.services.cloudsearch.v1.model.Media} media metadata or {@code null} if none
       * @param mediaContent The media HTTP content or {@code null} if none.
       * @since 1.13
       */
      protected Upload(java.lang.String resourceName, com.google.api.services.cloudsearch.v1.model.Media content, com.google.api.client.http.AbstractInputStreamContent mediaContent) {
        super(CloudSearch.this, "POST", "/upload/" + getServicePath() + REST_PATH, content, com.google.api.services.cloudsearch.v1.model.Media.class);
        this.resourceName = com.google.api.client.util.Preconditions.checkNotNull(resourceName, "Required parameter resourceName must be specified.");
        initializeMediaUpload(mediaContent);
      }

      @Override
      public Upload set$Xgafv(java.lang.String $Xgafv) {
        return (Upload) super.set$Xgafv($Xgafv);
      }

      @Override
      public Upload setAccessToken(java.lang.String accessToken) {
        return (Upload) super.setAccessToken(accessToken);
      }

      @Override
      public Upload setAlt(java.lang.String alt) {
        return (Upload) super.setAlt(alt);
      }

      @Override
      public Upload setCallback(java.lang.String callback) {
        return (Upload) super.setCallback(callback);
      }

      @Override
      public Upload setFields(java.lang.String fields) {
        return (Upload) super.setFields(fields);
      }

      @Override
      public Upload setKey(java.lang.String key) {
        return (Upload) super.setKey(key);
      }

      @Override
      public Upload setOauthToken(java.lang.String oauthToken) {
        return (Upload) super.setOauthToken(oauthToken);
      }

      @Override
      public Upload setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Upload) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Upload setQuotaUser(java.lang.String quotaUser) {
        return (Upload) super.setQuotaUser(quotaUser);
      }

      @Override
      public Upload setUploadType(java.lang.String uploadType) {
        return (Upload) super.setUploadType(uploadType);
      }

      @Override
      public Upload setUploadProtocol(java.lang.String uploadProtocol) {
        return (Upload) super.setUploadProtocol(uploadProtocol);
      }

      /** Name of the media that is being downloaded. See ReadRequest.resource_name. */
      @com.google.api.client.util.Key
      private java.lang.String resourceName;

      /** Name of the media that is being downloaded. See ReadRequest.resource_name.
       */
      public java.lang.String getResourceName() {
        return resourceName;
      }

      /** Name of the media that is being downloaded. See ReadRequest.resource_name. */
      public Upload setResourceName(java.lang.String resourceName) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(RESOURCE_NAME_PATTERN.matcher(resourceName).matches(),
              "Parameter resourceName must conform to the pattern " +
              "^.*$");
        }
        this.resourceName = resourceName;
        return this;
      }

      @Override
      public Upload set(String parameterName, Object value) {
        return (Upload) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Operations collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code CloudSearch cloudsearch = new CloudSearch(...);}
   *   {@code CloudSearch.Operations.List request = cloudsearch.operations().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Operations operations() {
    return new Operations();
  }

  /**
   * The "operations" collection of methods.
   */
  public class Operations {

    /**
     * Gets the latest state of a long-running operation. Clients can use this method to poll the
     * operation result at intervals as recommended by the API service.
     *
     * Create a request for the method "operations.get".
     *
     * This request holds the parameters needed by the cloudsearch server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param name The name of the operation resource.
     * @return the request
     */
    public Get get(java.lang.String name) throws java.io.IOException {
      Get result = new Get(name);
      initialize(result);
      return result;
    }

    public class Get extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.Operation> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^operations/.*$");

      /**
       * Gets the latest state of a long-running operation. Clients can use this method to poll the
       * operation result at intervals as recommended by the API service.
       *
       * Create a request for the method "operations.get".
       *
       * This request holds the parameters needed by the the cloudsearch server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
       * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name The name of the operation resource.
       * @since 1.13
       */
      protected Get(java.lang.String name) {
        super(CloudSearch.this, "GET", REST_PATH, null, com.google.api.services.cloudsearch.v1.model.Operation.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^operations/.*$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /** The name of the operation resource. */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** The name of the operation resource.
       */
      public java.lang.String getName() {
        return name;
      }

      /** The name of the operation resource. */
      public Get setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^operations/.*$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the Lro collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code CloudSearch cloudsearch = new CloudSearch(...);}
     *   {@code CloudSearch.Lro.List request = cloudsearch.lro().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Lro lro() {
      return new Lro();
    }

    /**
     * The "lro" collection of methods.
     */
    public class Lro {

      /**
       * Lists operations that match the specified filter in the request. If the server doesn't support
       * this method, it returns `UNIMPLEMENTED`.
       *
       * Create a request for the method "lro.list".
       *
       * This request holds the parameters needed by the cloudsearch server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param name The name of the operation's parent resource.
       * @return the request
       */
      public List list(java.lang.String name) throws java.io.IOException {
        List result = new List(name);
        initialize(result);
        return result;
      }

      public class List extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.ListOperationsResponse> {

        private static final String REST_PATH = "v1/{+name}/lro";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^operations/.*$");

        /**
         * Lists operations that match the specified filter in the request. If the server doesn't support
         * this method, it returns `UNIMPLEMENTED`.
         *
         * Create a request for the method "lro.list".
         *
         * This request holds the parameters needed by the the cloudsearch server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the operation's parent resource.
         * @since 1.13
         */
        protected List(java.lang.String name) {
          super(CloudSearch.this, "GET", REST_PATH, null, com.google.api.services.cloudsearch.v1.model.ListOperationsResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^operations/.*$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the operation's parent resource. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the operation's parent resource.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the operation's parent resource. */
        public List setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^operations/.*$");
          }
          this.name = name;
          return this;
        }

        /** The standard list filter. */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** The standard list filter.
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /** The standard list filter. */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /** The standard list page size. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The standard list page size.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The standard list page size. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** The standard list page token. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** The standard list page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** The standard list page token. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * An accessor for creating requests from the Query collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code CloudSearch cloudsearch = new CloudSearch(...);}
   *   {@code CloudSearch.Query.List request = cloudsearch.query().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Query query() {
    return new Query();
  }

  /**
   * The "query" collection of methods.
   */
  public class Query {

    /**
     * The Cloud Search Query API provides the search method, which returns the most relevant results
     * from a user query. The results can come from Google Workspace apps, such as Gmail or Google
     * Drive, or they can come from data that you have indexed from a third party. **Note:** This API
     * requires a standard end user account to execute. A service account can't perform Query API
     * requests directly; to use a service account to perform queries, set up [Google Workspace domain-
     * wide delegation of authority](https://developers.google.com/cloud-
     * search/docs/guides/delegation/).
     *
     * Create a request for the method "query.search".
     *
     * This request holds the parameters needed by the cloudsearch server.  After setting any optional
     * parameters, call the {@link Search#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.cloudsearch.v1.model.SearchRequest}
     * @return the request
     */
    public Search search(com.google.api.services.cloudsearch.v1.model.SearchRequest content) throws java.io.IOException {
      Search result = new Search(content);
      initialize(result);
      return result;
    }

    public class Search extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.SearchResponse> {

      private static final String REST_PATH = "v1/query/search";

      /**
       * The Cloud Search Query API provides the search method, which returns the most relevant results
       * from a user query. The results can come from Google Workspace apps, such as Gmail or Google
       * Drive, or they can come from data that you have indexed from a third party. **Note:** This API
       * requires a standard end user account to execute. A service account can't perform Query API
       * requests directly; to use a service account to perform queries, set up [Google Workspace
       * domain-wide delegation of authority](https://developers.google.com/cloud-
       * search/docs/guides/delegation/).
       *
       * Create a request for the method "query.search".
       *
       * This request holds the parameters needed by the the cloudsearch server.  After setting any
       * optional parameters, call the {@link Search#execute()} method to invoke the remote operation.
       * <p> {@link
       * Search#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.cloudsearch.v1.model.SearchRequest}
       * @since 1.13
       */
      protected Search(com.google.api.services.cloudsearch.v1.model.SearchRequest content) {
        super(CloudSearch.this, "POST", REST_PATH, content, com.google.api.services.cloudsearch.v1.model.SearchResponse.class);
      }

      @Override
      public Search set$Xgafv(java.lang.String $Xgafv) {
        return (Search) super.set$Xgafv($Xgafv);
      }

      @Override
      public Search setAccessToken(java.lang.String accessToken) {
        return (Search) super.setAccessToken(accessToken);
      }

      @Override
      public Search setAlt(java.lang.String alt) {
        return (Search) super.setAlt(alt);
      }

      @Override
      public Search setCallback(java.lang.String callback) {
        return (Search) super.setCallback(callback);
      }

      @Override
      public Search setFields(java.lang.String fields) {
        return (Search) super.setFields(fields);
      }

      @Override
      public Search setKey(java.lang.String key) {
        return (Search) super.setKey(key);
      }

      @Override
      public Search setOauthToken(java.lang.String oauthToken) {
        return (Search) super.setOauthToken(oauthToken);
      }

      @Override
      public Search setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Search) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Search setQuotaUser(java.lang.String quotaUser) {
        return (Search) super.setQuotaUser(quotaUser);
      }

      @Override
      public Search setUploadType(java.lang.String uploadType) {
        return (Search) super.setUploadType(uploadType);
      }

      @Override
      public Search setUploadProtocol(java.lang.String uploadProtocol) {
        return (Search) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public Search set(String parameterName, Object value) {
        return (Search) super.set(parameterName, value);
      }
    }
    /**
     * Provides suggestions for autocompleting the query. **Note:** This API requires a standard end
     * user account to execute. A service account can't perform Query API requests directly; to use a
     * service account to perform queries, set up [Google Workspace domain-wide delegation of
     * authority](https://developers.google.com/cloud-search/docs/guides/delegation/).
     *
     * Create a request for the method "query.suggest".
     *
     * This request holds the parameters needed by the cloudsearch server.  After setting any optional
     * parameters, call the {@link Suggest#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.cloudsearch.v1.model.SuggestRequest}
     * @return the request
     */
    public Suggest suggest(com.google.api.services.cloudsearch.v1.model.SuggestRequest content) throws java.io.IOException {
      Suggest result = new Suggest(content);
      initialize(result);
      return result;
    }

    public class Suggest extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.SuggestResponse> {

      private static final String REST_PATH = "v1/query/suggest";

      /**
       * Provides suggestions for autocompleting the query. **Note:** This API requires a standard end
       * user account to execute. A service account can't perform Query API requests directly; to use a
       * service account to perform queries, set up [Google Workspace domain-wide delegation of
       * authority](https://developers.google.com/cloud-search/docs/guides/delegation/).
       *
       * Create a request for the method "query.suggest".
       *
       * This request holds the parameters needed by the the cloudsearch server.  After setting any
       * optional parameters, call the {@link Suggest#execute()} method to invoke the remote operation.
       * <p> {@link
       * Suggest#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.cloudsearch.v1.model.SuggestRequest}
       * @since 1.13
       */
      protected Suggest(com.google.api.services.cloudsearch.v1.model.SuggestRequest content) {
        super(CloudSearch.this, "POST", REST_PATH, content, com.google.api.services.cloudsearch.v1.model.SuggestResponse.class);
      }

      @Override
      public Suggest set$Xgafv(java.lang.String $Xgafv) {
        return (Suggest) super.set$Xgafv($Xgafv);
      }

      @Override
      public Suggest setAccessToken(java.lang.String accessToken) {
        return (Suggest) super.setAccessToken(accessToken);
      }

      @Override
      public Suggest setAlt(java.lang.String alt) {
        return (Suggest) super.setAlt(alt);
      }

      @Override
      public Suggest setCallback(java.lang.String callback) {
        return (Suggest) super.setCallback(callback);
      }

      @Override
      public Suggest setFields(java.lang.String fields) {
        return (Suggest) super.setFields(fields);
      }

      @Override
      public Suggest setKey(java.lang.String key) {
        return (Suggest) super.setKey(key);
      }

      @Override
      public Suggest setOauthToken(java.lang.String oauthToken) {
        return (Suggest) super.setOauthToken(oauthToken);
      }

      @Override
      public Suggest setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Suggest) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Suggest setQuotaUser(java.lang.String quotaUser) {
        return (Suggest) super.setQuotaUser(quotaUser);
      }

      @Override
      public Suggest setUploadType(java.lang.String uploadType) {
        return (Suggest) super.setUploadType(uploadType);
      }

      @Override
      public Suggest setUploadProtocol(java.lang.String uploadProtocol) {
        return (Suggest) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public Suggest set(String parameterName, Object value) {
        return (Suggest) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the Sources collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code CloudSearch cloudsearch = new CloudSearch(...);}
     *   {@code CloudSearch.Sources.List request = cloudsearch.sources().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Sources sources() {
      return new Sources();
    }

    /**
     * The "sources" collection of methods.
     */
    public class Sources {

      /**
       * Returns list of sources that user can use for Search and Suggest APIs. **Note:** This API
       * requires a standard end user account to execute. A service account can't perform Query API
       * requests directly; to use a service account to perform queries, set up [Google Workspace domain-
       * wide delegation of authority](https://developers.google.com/cloud-
       * search/docs/guides/delegation/).
       *
       * Create a request for the method "sources.list".
       *
       * This request holds the parameters needed by the cloudsearch server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @return the request
       */
      public List list() throws java.io.IOException {
        List result = new List();
        initialize(result);
        return result;
      }

      public class List extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.ListQuerySourcesResponse> {

        private static final String REST_PATH = "v1/query/sources";

        /**
         * Returns list of sources that user can use for Search and Suggest APIs. **Note:** This API
         * requires a standard end user account to execute. A service account can't perform Query API
         * requests directly; to use a service account to perform queries, set up [Google Workspace
         * domain-wide delegation of authority](https://developers.google.com/cloud-
         * search/docs/guides/delegation/).
         *
         * Create a request for the method "sources.list".
         *
         * This request holds the parameters needed by the the cloudsearch server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @since 1.13
         */
        protected List() {
          super(CloudSearch.this, "GET", REST_PATH, null, com.google.api.services.cloudsearch.v1.model.ListQuerySourcesResponse.class);
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Number of sources to return in the response. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Number of sources to return in the response.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** Number of sources to return in the response. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        /**
         * If you are asked by Google to help with debugging, set this field. Otherwise, ignore this
         * field.
         */
        @com.google.api.client.util.Key("requestOptions.debugOptions.enableDebugging")
        private java.lang.Boolean requestOptionsDebugOptionsEnableDebugging;

        /** If you are asked by Google to help with debugging, set this field. Otherwise, ignore this field.
         */
        public java.lang.Boolean getRequestOptionsDebugOptionsEnableDebugging() {
          return requestOptionsDebugOptionsEnableDebugging;
        }

        /**
         * If you are asked by Google to help with debugging, set this field. Otherwise, ignore this
         * field.
         */
        public List setRequestOptionsDebugOptionsEnableDebugging(java.lang.Boolean requestOptionsDebugOptionsEnableDebugging) {
          this.requestOptionsDebugOptionsEnableDebugging = requestOptionsDebugOptionsEnableDebugging;
          return this;
        }

        /**
         * The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see
         * http://www.unicode.org/reports/tr35/#Unicode_locale_identifier. For translations. Set
         * this field using the language set in browser or for the page. In the event that the
         * user's language preference is known, set this field to the known user language. When
         * specified, the documents in search results are biased towards the specified language.
         * From Suggest API perspective, for 3p suggest this is used as a hint while making
         * predictions to add language boosting.
         */
        @com.google.api.client.util.Key("requestOptions.languageCode")
        private java.lang.String requestOptionsLanguageCode;

        /** The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see
       http://www.unicode.org/reports/tr35/#Unicode_locale_identifier. For translations. Set this field
       using the language set in browser or for the page. In the event that the user's language preference
       is known, set this field to the known user language. When specified, the documents in search
       results are biased towards the specified language. From Suggest API perspective, for 3p suggest
       this is used as a hint while making predictions to add language boosting.
         */
        public java.lang.String getRequestOptionsLanguageCode() {
          return requestOptionsLanguageCode;
        }

        /**
         * The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see
         * http://www.unicode.org/reports/tr35/#Unicode_locale_identifier. For translations. Set
         * this field using the language set in browser or for the page. In the event that the
         * user's language preference is known, set this field to the known user language. When
         * specified, the documents in search results are biased towards the specified language.
         * From Suggest API perspective, for 3p suggest this is used as a hint while making
         * predictions to add language boosting.
         */
        public List setRequestOptionsLanguageCode(java.lang.String requestOptionsLanguageCode) {
          this.requestOptionsLanguageCode = requestOptionsLanguageCode;
          return this;
        }

        /**
         * The ID generated when you create a search application using the [admin
         * console](https://support.google.com/a/answer/9043922).
         */
        @com.google.api.client.util.Key("requestOptions.searchApplicationId")
        private java.lang.String requestOptionsSearchApplicationId;

        /** The ID generated when you create a search application using the [admin
       console](https://support.google.com/a/answer/9043922).
         */
        public java.lang.String getRequestOptionsSearchApplicationId() {
          return requestOptionsSearchApplicationId;
        }

        /**
         * The ID generated when you create a search application using the [admin
         * console](https://support.google.com/a/answer/9043922).
         */
        public List setRequestOptionsSearchApplicationId(java.lang.String requestOptionsSearchApplicationId) {
          this.requestOptionsSearchApplicationId = requestOptionsSearchApplicationId;
          return this;
        }

        /**
         * Current user's time zone id, such as "America/Los_Angeles" or "Australia/Sydney". These
         * IDs are defined by [Unicode Common Locale Data Repository
         * (CLDR)](http://cldr.unicode.org/) project, and currently available in the file
         * [timezone.xml](http://unicode.org/repos/cldr/trunk/common/bcp47/timezone.xml). This field
         * is used to correctly interpret date and time queries. If this field is not specified, the
         * default time zone (UTC) is used.
         */
        @com.google.api.client.util.Key("requestOptions.timeZone")
        private java.lang.String requestOptionsTimeZone;

        /** Current user's time zone id, such as "America/Los_Angeles" or "Australia/Sydney". These IDs are
       defined by [Unicode Common Locale Data Repository (CLDR)](http://cldr.unicode.org/) project, and
       currently available in the file
       [timezone.xml](http://unicode.org/repos/cldr/trunk/common/bcp47/timezone.xml). This field is used
       to correctly interpret date and time queries. If this field is not specified, the default time zone
       (UTC) is used.
         */
        public java.lang.String getRequestOptionsTimeZone() {
          return requestOptionsTimeZone;
        }

        /**
         * Current user's time zone id, such as "America/Los_Angeles" or "Australia/Sydney". These
         * IDs are defined by [Unicode Common Locale Data Repository
         * (CLDR)](http://cldr.unicode.org/) project, and currently available in the file
         * [timezone.xml](http://unicode.org/repos/cldr/trunk/common/bcp47/timezone.xml). This field
         * is used to correctly interpret date and time queries. If this field is not specified, the
         * default time zone (UTC) is used.
         */
        public List setRequestOptionsTimeZone(java.lang.String requestOptionsTimeZone) {
          this.requestOptionsTimeZone = requestOptionsTimeZone;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * An accessor for creating requests from the Settings collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code CloudSearch cloudsearch = new CloudSearch(...);}
   *   {@code CloudSearch.Settings.List request = cloudsearch.settings().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Settings settings() {
    return new Settings();
  }

  /**
   * The "settings" collection of methods.
   */
  public class Settings {

    /**
     * Get customer settings. **Note:** This API requires an admin account to execute.
     *
     * Create a request for the method "settings.getCustomer".
     *
     * This request holds the parameters needed by the cloudsearch server.  After setting any optional
     * parameters, call the {@link GetCustomer#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public GetCustomer getCustomer() throws java.io.IOException {
      GetCustomer result = new GetCustomer();
      initialize(result);
      return result;
    }

    public class GetCustomer extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.CustomerSettings> {

      private static final String REST_PATH = "v1/settings/customer";

      /**
       * Get customer settings. **Note:** This API requires an admin account to execute.
       *
       * Create a request for the method "settings.getCustomer".
       *
       * This request holds the parameters needed by the the cloudsearch server.  After setting any
       * optional parameters, call the {@link GetCustomer#execute()} method to invoke the remote
       * operation. <p> {@link
       * GetCustomer#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected GetCustomer() {
        super(CloudSearch.this, "GET", REST_PATH, null, com.google.api.services.cloudsearch.v1.model.CustomerSettings.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetCustomer set$Xgafv(java.lang.String $Xgafv) {
        return (GetCustomer) super.set$Xgafv($Xgafv);
      }

      @Override
      public GetCustomer setAccessToken(java.lang.String accessToken) {
        return (GetCustomer) super.setAccessToken(accessToken);
      }

      @Override
      public GetCustomer setAlt(java.lang.String alt) {
        return (GetCustomer) super.setAlt(alt);
      }

      @Override
      public GetCustomer setCallback(java.lang.String callback) {
        return (GetCustomer) super.setCallback(callback);
      }

      @Override
      public GetCustomer setFields(java.lang.String fields) {
        return (GetCustomer) super.setFields(fields);
      }

      @Override
      public GetCustomer setKey(java.lang.String key) {
        return (GetCustomer) super.setKey(key);
      }

      @Override
      public GetCustomer setOauthToken(java.lang.String oauthToken) {
        return (GetCustomer) super.setOauthToken(oauthToken);
      }

      @Override
      public GetCustomer setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetCustomer) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetCustomer setQuotaUser(java.lang.String quotaUser) {
        return (GetCustomer) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetCustomer setUploadType(java.lang.String uploadType) {
        return (GetCustomer) super.setUploadType(uploadType);
      }

      @Override
      public GetCustomer setUploadProtocol(java.lang.String uploadProtocol) {
        return (GetCustomer) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public GetCustomer set(String parameterName, Object value) {
        return (GetCustomer) super.set(parameterName, value);
      }
    }
    /**
     * Update customer settings. **Note:** This API requires an admin account to execute.
     *
     * Create a request for the method "settings.updateCustomer".
     *
     * This request holds the parameters needed by the cloudsearch server.  After setting any optional
     * parameters, call the {@link UpdateCustomer#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.cloudsearch.v1.model.CustomerSettings}
     * @return the request
     */
    public UpdateCustomer updateCustomer(com.google.api.services.cloudsearch.v1.model.CustomerSettings content) throws java.io.IOException {
      UpdateCustomer result = new UpdateCustomer(content);
      initialize(result);
      return result;
    }

    public class UpdateCustomer extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.Operation> {

      private static final String REST_PATH = "v1/settings/customer";

      /**
       * Update customer settings. **Note:** This API requires an admin account to execute.
       *
       * Create a request for the method "settings.updateCustomer".
       *
       * This request holds the parameters needed by the the cloudsearch server.  After setting any
       * optional parameters, call the {@link UpdateCustomer#execute()} method to invoke the remote
       * operation. <p> {@link UpdateCustomer#initialize(com.google.api.client.googleapis.services.Abstr
       * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
       * the constructor. </p>
       *
       * @param content the {@link com.google.api.services.cloudsearch.v1.model.CustomerSettings}
       * @since 1.13
       */
      protected UpdateCustomer(com.google.api.services.cloudsearch.v1.model.CustomerSettings content) {
        super(CloudSearch.this, "PATCH", REST_PATH, content, com.google.api.services.cloudsearch.v1.model.Operation.class);
      }

      @Override
      public UpdateCustomer set$Xgafv(java.lang.String $Xgafv) {
        return (UpdateCustomer) super.set$Xgafv($Xgafv);
      }

      @Override
      public UpdateCustomer setAccessToken(java.lang.String accessToken) {
        return (UpdateCustomer) super.setAccessToken(accessToken);
      }

      @Override
      public UpdateCustomer setAlt(java.lang.String alt) {
        return (UpdateCustomer) super.setAlt(alt);
      }

      @Override
      public UpdateCustomer setCallback(java.lang.String callback) {
        return (UpdateCustomer) super.setCallback(callback);
      }

      @Override
      public UpdateCustomer setFields(java.lang.String fields) {
        return (UpdateCustomer) super.setFields(fields);
      }

      @Override
      public UpdateCustomer setKey(java.lang.String key) {
        return (UpdateCustomer) super.setKey(key);
      }

      @Override
      public UpdateCustomer setOauthToken(java.lang.String oauthToken) {
        return (UpdateCustomer) super.setOauthToken(oauthToken);
      }

      @Override
      public UpdateCustomer setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (UpdateCustomer) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public UpdateCustomer setQuotaUser(java.lang.String quotaUser) {
        return (UpdateCustomer) super.setQuotaUser(quotaUser);
      }

      @Override
      public UpdateCustomer setUploadType(java.lang.String uploadType) {
        return (UpdateCustomer) super.setUploadType(uploadType);
      }

      @Override
      public UpdateCustomer setUploadProtocol(java.lang.String uploadProtocol) {
        return (UpdateCustomer) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Update mask to control which fields get updated. If you specify a field in the update_mask
       * but don't specify its value here, that field will be cleared. If the mask is not present or
       * empty, all fields will be updated. Currently supported field paths: vpc_settings and
       * audit_logging_settings
       */
      @com.google.api.client.util.Key
      private String updateMask;

      /** Update mask to control which fields get updated. If you specify a field in the update_mask but
     don't specify its value here, that field will be cleared. If the mask is not present or empty, all
     fields will be updated. Currently supported field paths: vpc_settings and audit_logging_settings
       */
      public String getUpdateMask() {
        return updateMask;
      }

      /**
       * Update mask to control which fields get updated. If you specify a field in the update_mask
       * but don't specify its value here, that field will be cleared. If the mask is not present or
       * empty, all fields will be updated. Currently supported field paths: vpc_settings and
       * audit_logging_settings
       */
      public UpdateCustomer setUpdateMask(String updateMask) {
        this.updateMask = updateMask;
        return this;
      }

      @Override
      public UpdateCustomer set(String parameterName, Object value) {
        return (UpdateCustomer) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the Datasources collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code CloudSearch cloudsearch = new CloudSearch(...);}
     *   {@code CloudSearch.Datasources.List request = cloudsearch.datasources().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Datasources datasources() {
      return new Datasources();
    }

    /**
     * The "datasources" collection of methods.
     */
    public class Datasources {

      /**
       * Creates a datasource. **Note:** This API requires an admin account to execute.
       *
       * Create a request for the method "datasources.create".
       *
       * This request holds the parameters needed by the cloudsearch server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param content the {@link com.google.api.services.cloudsearch.v1.model.DataSource}
       * @return the request
       */
      public Create create(com.google.api.services.cloudsearch.v1.model.DataSource content) throws java.io.IOException {
        Create result = new Create(content);
        initialize(result);
        return result;
      }

      public class Create extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.Operation> {

        private static final String REST_PATH = "v1/settings/datasources";

        /**
         * Creates a datasource. **Note:** This API requires an admin account to execute.
         *
         * Create a request for the method "datasources.create".
         *
         * This request holds the parameters needed by the the cloudsearch server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param content the {@link com.google.api.services.cloudsearch.v1.model.DataSource}
         * @since 1.13
         */
        protected Create(com.google.api.services.cloudsearch.v1.model.DataSource content) {
          super(CloudSearch.this, "POST", REST_PATH, content, com.google.api.services.cloudsearch.v1.model.Operation.class);
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a datasource. **Note:** This API requires an admin account to execute.
       *
       * Create a request for the method "datasources.delete".
       *
       * This request holds the parameters needed by the cloudsearch server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name The name of the datasource. Format: datasources/{source_id}.
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.Operation> {

        private static final String REST_PATH = "v1/settings/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^datasources/[^/]+$");

        /**
         * Deletes a datasource. **Note:** This API requires an admin account to execute.
         *
         * Create a request for the method "datasources.delete".
         *
         * This request holds the parameters needed by the the cloudsearch server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the datasource. Format: datasources/{source_id}.
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(CloudSearch.this, "DELETE", REST_PATH, null, com.google.api.services.cloudsearch.v1.model.Operation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^datasources/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the datasource. Format: datasources/{source_id}. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the datasource. Format: datasources/{source_id}.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the datasource. Format: datasources/{source_id}. */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^datasources/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * If you are asked by Google to help with debugging, set this field. Otherwise, ignore this
         * field.
         */
        @com.google.api.client.util.Key("debugOptions.enableDebugging")
        private java.lang.Boolean debugOptionsEnableDebugging;

        /** If you are asked by Google to help with debugging, set this field. Otherwise, ignore this field.
         */
        public java.lang.Boolean getDebugOptionsEnableDebugging() {
          return debugOptionsEnableDebugging;
        }

        /**
         * If you are asked by Google to help with debugging, set this field. Otherwise, ignore this
         * field.
         */
        public Delete setDebugOptionsEnableDebugging(java.lang.Boolean debugOptionsEnableDebugging) {
          this.debugOptionsEnableDebugging = debugOptionsEnableDebugging;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets a datasource. **Note:** This API requires an admin account to execute.
       *
       * Create a request for the method "datasources.get".
       *
       * This request holds the parameters needed by the cloudsearch server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name The name of the datasource resource. Format: datasources/{source_id}.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.DataSource> {

        private static final String REST_PATH = "v1/settings/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^datasources/[^/]+$");

        /**
         * Gets a datasource. **Note:** This API requires an admin account to execute.
         *
         * Create a request for the method "datasources.get".
         *
         * This request holds the parameters needed by the the cloudsearch server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the datasource resource. Format: datasources/{source_id}.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(CloudSearch.this, "GET", REST_PATH, null, com.google.api.services.cloudsearch.v1.model.DataSource.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^datasources/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the datasource resource. Format: datasources/{source_id}. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the datasource resource. Format: datasources/{source_id}.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the datasource resource. Format: datasources/{source_id}. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^datasources/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * If you are asked by Google to help with debugging, set this field. Otherwise, ignore this
         * field.
         */
        @com.google.api.client.util.Key("debugOptions.enableDebugging")
        private java.lang.Boolean debugOptionsEnableDebugging;

        /** If you are asked by Google to help with debugging, set this field. Otherwise, ignore this field.
         */
        public java.lang.Boolean getDebugOptionsEnableDebugging() {
          return debugOptionsEnableDebugging;
        }

        /**
         * If you are asked by Google to help with debugging, set this field. Otherwise, ignore this
         * field.
         */
        public Get setDebugOptionsEnableDebugging(java.lang.Boolean debugOptionsEnableDebugging) {
          this.debugOptionsEnableDebugging = debugOptionsEnableDebugging;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists datasources. **Note:** This API requires an admin account to execute.
       *
       * Create a request for the method "datasources.list".
       *
       * This request holds the parameters needed by the cloudsearch server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @return the request
       */
      public List list() throws java.io.IOException {
        List result = new List();
        initialize(result);
        return result;
      }

      public class List extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.ListDataSourceResponse> {

        private static final String REST_PATH = "v1/settings/datasources";

        /**
         * Lists datasources. **Note:** This API requires an admin account to execute.
         *
         * Create a request for the method "datasources.list".
         *
         * This request holds the parameters needed by the the cloudsearch server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @since 1.13
         */
        protected List() {
          super(CloudSearch.this, "GET", REST_PATH, null, com.google.api.services.cloudsearch.v1.model.ListDataSourceResponse.class);
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * If you are asked by Google to help with debugging, set this field. Otherwise, ignore this
         * field.
         */
        @com.google.api.client.util.Key("debugOptions.enableDebugging")
        private java.lang.Boolean debugOptionsEnableDebugging;

        /** If you are asked by Google to help with debugging, set this field. Otherwise, ignore this field.
         */
        public java.lang.Boolean getDebugOptionsEnableDebugging() {
          return debugOptionsEnableDebugging;
        }

        /**
         * If you are asked by Google to help with debugging, set this field. Otherwise, ignore this
         * field.
         */
        public List setDebugOptionsEnableDebugging(java.lang.Boolean debugOptionsEnableDebugging) {
          this.debugOptionsEnableDebugging = debugOptionsEnableDebugging;
          return this;
        }

        /**
         * Maximum number of datasources to fetch in a request. The max value is 1000. The default
         * value is 1000.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Maximum number of datasources to fetch in a request. The max value is 1000. The default value is
       1000.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Maximum number of datasources to fetch in a request. The max value is 1000. The default
         * value is 1000.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** Starting index of the results. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Starting index of the results.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** Starting index of the results. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a datasource. **Note:** This API requires an admin account to execute.
       *
       * Create a request for the method "datasources.patch".
       *
       * This request holds the parameters needed by the cloudsearch server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name The name of the datasource resource. Format: datasources/{source_id}. The name is ignored when
       *        creating a datasource.
       * @param content the {@link com.google.api.services.cloudsearch.v1.model.DataSource}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.cloudsearch.v1.model.DataSource content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.Operation> {

        private static final String REST_PATH = "v1/settings/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^datasources/[^/]+$");

        /**
         * Updates a datasource. **Note:** This API requires an admin account to execute.
         *
         * Create a request for the method "datasources.patch".
         *
         * This request holds the parameters needed by the the cloudsearch server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the datasource resource. Format: datasources/{source_id}. The name is ignored when
       *        creating a datasource.
         * @param content the {@link com.google.api.services.cloudsearch.v1.model.DataSource}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.cloudsearch.v1.model.DataSource content) {
          super(CloudSearch.this, "PATCH", REST_PATH, content, com.google.api.services.cloudsearch.v1.model.Operation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^datasources/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The name of the datasource resource. Format: datasources/{source_id}. The name is ignored
         * when creating a datasource.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the datasource resource. Format: datasources/{source_id}. The name is ignored when
       creating a datasource.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * The name of the datasource resource. Format: datasources/{source_id}. The name is ignored
         * when creating a datasource.
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^datasources/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * If you are asked by Google to help with debugging, set this field. Otherwise, ignore this
         * field.
         */
        @com.google.api.client.util.Key("debugOptions.enableDebugging")
        private java.lang.Boolean debugOptionsEnableDebugging;

        /** If you are asked by Google to help with debugging, set this field. Otherwise, ignore this field.
         */
        public java.lang.Boolean getDebugOptionsEnableDebugging() {
          return debugOptionsEnableDebugging;
        }

        /**
         * If you are asked by Google to help with debugging, set this field. Otherwise, ignore this
         * field.
         */
        public Patch setDebugOptionsEnableDebugging(java.lang.Boolean debugOptionsEnableDebugging) {
          this.debugOptionsEnableDebugging = debugOptionsEnableDebugging;
          return this;
        }

        /**
         * Only applies to [`settings.datasources.patch`](https://developers.google.com/cloud-
         * search/docs/reference/rest/v1/settings.datasources/patch). Update mask to control which
         * fields to update. Example field paths: `name`, `displayName`. * If `update_mask` is non-
         * empty, then only the fields specified in the `update_mask` are updated. * If you specify
         * a field in the `update_mask`, but don't specify its value in the source, that field is
         * cleared. * If the `update_mask` is not present or empty or has the value `*`, then all
         * fields are updated.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Only applies to [`settings.datasources.patch`](https://developers.google.com/cloud-
       search/docs/reference/rest/v1/settings.datasources/patch). Update mask to control which fields to
       update. Example field paths: `name`, `displayName`. * If `update_mask` is non-empty, then only the
       fields specified in the `update_mask` are updated. * If you specify a field in the `update_mask`,
       but don't specify its value in the source, that field is cleared. * If the `update_mask` is not
       present or empty or has the value `*`, then all fields are updated.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * Only applies to [`settings.datasources.patch`](https://developers.google.com/cloud-
         * search/docs/reference/rest/v1/settings.datasources/patch). Update mask to control which
         * fields to update. Example field paths: `name`, `displayName`. * If `update_mask` is non-
         * empty, then only the fields specified in the `update_mask` are updated. * If you specify
         * a field in the `update_mask`, but don't specify its value in the source, that field is
         * cleared. * If the `update_mask` is not present or empty or has the value `*`, then all
         * fields are updated.
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }
      /**
       * Updates a datasource. **Note:** This API requires an admin account to execute.
       *
       * Create a request for the method "datasources.update".
       *
       * This request holds the parameters needed by the cloudsearch server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation.
       *
       * @param name The name of the datasource resource. Format: datasources/{source_id}. The name is ignored when
       *        creating a datasource.
       * @param content the {@link com.google.api.services.cloudsearch.v1.model.UpdateDataSourceRequest}
       * @return the request
       */
      public Update update(java.lang.String name, com.google.api.services.cloudsearch.v1.model.UpdateDataSourceRequest content) throws java.io.IOException {
        Update result = new Update(name, content);
        initialize(result);
        return result;
      }

      public class Update extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.Operation> {

        private static final String REST_PATH = "v1/settings/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^datasources/[^/]+$");

        /**
         * Updates a datasource. **Note:** This API requires an admin account to execute.
         *
         * Create a request for the method "datasources.update".
         *
         * This request holds the parameters needed by the the cloudsearch server.  After setting any
         * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
         * <p> {@link
         * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the datasource resource. Format: datasources/{source_id}. The name is ignored when
       *        creating a datasource.
         * @param content the {@link com.google.api.services.cloudsearch.v1.model.UpdateDataSourceRequest}
         * @since 1.13
         */
        protected Update(java.lang.String name, com.google.api.services.cloudsearch.v1.model.UpdateDataSourceRequest content) {
          super(CloudSearch.this, "PUT", REST_PATH, content, com.google.api.services.cloudsearch.v1.model.Operation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^datasources/[^/]+$");
          }
        }

        @Override
        public Update set$Xgafv(java.lang.String $Xgafv) {
          return (Update) super.set$Xgafv($Xgafv);
        }

        @Override
        public Update setAccessToken(java.lang.String accessToken) {
          return (Update) super.setAccessToken(accessToken);
        }

        @Override
        public Update setAlt(java.lang.String alt) {
          return (Update) super.setAlt(alt);
        }

        @Override
        public Update setCallback(java.lang.String callback) {
          return (Update) super.setCallback(callback);
        }

        @Override
        public Update setFields(java.lang.String fields) {
          return (Update) super.setFields(fields);
        }

        @Override
        public Update setKey(java.lang.String key) {
          return (Update) super.setKey(key);
        }

        @Override
        public Update setOauthToken(java.lang.String oauthToken) {
          return (Update) super.setOauthToken(oauthToken);
        }

        @Override
        public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Update) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Update setQuotaUser(java.lang.String quotaUser) {
          return (Update) super.setQuotaUser(quotaUser);
        }

        @Override
        public Update setUploadType(java.lang.String uploadType) {
          return (Update) super.setUploadType(uploadType);
        }

        @Override
        public Update setUploadProtocol(java.lang.String uploadProtocol) {
          return (Update) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The name of the datasource resource. Format: datasources/{source_id}. The name is ignored
         * when creating a datasource.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the datasource resource. Format: datasources/{source_id}. The name is ignored when
       creating a datasource.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * The name of the datasource resource. Format: datasources/{source_id}. The name is ignored
         * when creating a datasource.
         */
        public Update setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^datasources/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Update set(String parameterName, Object value) {
          return (Update) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Searchapplications collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code CloudSearch cloudsearch = new CloudSearch(...);}
     *   {@code CloudSearch.Searchapplications.List request = cloudsearch.searchapplications().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Searchapplications searchapplications() {
      return new Searchapplications();
    }

    /**
     * The "searchapplications" collection of methods.
     */
    public class Searchapplications {

      /**
       * Creates a search application. **Note:** This API requires an admin account to execute.
       *
       * Create a request for the method "searchapplications.create".
       *
       * This request holds the parameters needed by the cloudsearch server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param content the {@link com.google.api.services.cloudsearch.v1.model.SearchApplication}
       * @return the request
       */
      public Create create(com.google.api.services.cloudsearch.v1.model.SearchApplication content) throws java.io.IOException {
        Create result = new Create(content);
        initialize(result);
        return result;
      }

      public class Create extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.Operation> {

        private static final String REST_PATH = "v1/settings/searchapplications";

        /**
         * Creates a search application. **Note:** This API requires an admin account to execute.
         *
         * Create a request for the method "searchapplications.create".
         *
         * This request holds the parameters needed by the the cloudsearch server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param content the {@link com.google.api.services.cloudsearch.v1.model.SearchApplication}
         * @since 1.13
         */
        protected Create(com.google.api.services.cloudsearch.v1.model.SearchApplication content) {
          super(CloudSearch.this, "POST", REST_PATH, content, com.google.api.services.cloudsearch.v1.model.Operation.class);
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a search application. **Note:** This API requires an admin account to execute.
       *
       * Create a request for the method "searchapplications.delete".
       *
       * This request holds the parameters needed by the cloudsearch server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name The name of the search application to be deleted. Format: applications/{application_id}.
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.Operation> {

        private static final String REST_PATH = "v1/settings/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^searchapplications/[^/]+$");

        /**
         * Deletes a search application. **Note:** This API requires an admin account to execute.
         *
         * Create a request for the method "searchapplications.delete".
         *
         * This request holds the parameters needed by the the cloudsearch server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the search application to be deleted. Format: applications/{application_id}.
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(CloudSearch.this, "DELETE", REST_PATH, null, com.google.api.services.cloudsearch.v1.model.Operation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^searchapplications/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The name of the search application to be deleted. Format: applications/{application_id}.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the search application to be deleted. Format: applications/{application_id}.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * The name of the search application to be deleted. Format: applications/{application_id}.
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^searchapplications/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * If you are asked by Google to help with debugging, set this field. Otherwise, ignore this
         * field.
         */
        @com.google.api.client.util.Key("debugOptions.enableDebugging")
        private java.lang.Boolean debugOptionsEnableDebugging;

        /** If you are asked by Google to help with debugging, set this field. Otherwise, ignore this field.
         */
        public java.lang.Boolean getDebugOptionsEnableDebugging() {
          return debugOptionsEnableDebugging;
        }

        /**
         * If you are asked by Google to help with debugging, set this field. Otherwise, ignore this
         * field.
         */
        public Delete setDebugOptionsEnableDebugging(java.lang.Boolean debugOptionsEnableDebugging) {
          this.debugOptionsEnableDebugging = debugOptionsEnableDebugging;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets the specified search application. **Note:** This API requires an admin account to execute.
       *
       * Create a request for the method "searchapplications.get".
       *
       * This request holds the parameters needed by the cloudsearch server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name The name of the search application. Format: searchapplications/{application_id}.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.SearchApplication> {

        private static final String REST_PATH = "v1/settings/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^searchapplications/[^/]+$");

        /**
         * Gets the specified search application. **Note:** This API requires an admin account to execute.
         *
         * Create a request for the method "searchapplications.get".
         *
         * This request holds the parameters needed by the the cloudsearch server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the search application. Format: searchapplications/{application_id}.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(CloudSearch.this, "GET", REST_PATH, null, com.google.api.services.cloudsearch.v1.model.SearchApplication.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^searchapplications/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the search application. Format: searchapplications/{application_id}. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the search application. Format: searchapplications/{application_id}.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the search application. Format: searchapplications/{application_id}. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^searchapplications/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * If you are asked by Google to help with debugging, set this field. Otherwise, ignore this
         * field.
         */
        @com.google.api.client.util.Key("debugOptions.enableDebugging")
        private java.lang.Boolean debugOptionsEnableDebugging;

        /** If you are asked by Google to help with debugging, set this field. Otherwise, ignore this field.
         */
        public java.lang.Boolean getDebugOptionsEnableDebugging() {
          return debugOptionsEnableDebugging;
        }

        /**
         * If you are asked by Google to help with debugging, set this field. Otherwise, ignore this
         * field.
         */
        public Get setDebugOptionsEnableDebugging(java.lang.Boolean debugOptionsEnableDebugging) {
          this.debugOptionsEnableDebugging = debugOptionsEnableDebugging;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists all search applications. **Note:** This API requires an admin account to execute.
       *
       * Create a request for the method "searchapplications.list".
       *
       * This request holds the parameters needed by the cloudsearch server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @return the request
       */
      public List list() throws java.io.IOException {
        List result = new List();
        initialize(result);
        return result;
      }

      public class List extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.ListSearchApplicationsResponse> {

        private static final String REST_PATH = "v1/settings/searchapplications";

        /**
         * Lists all search applications. **Note:** This API requires an admin account to execute.
         *
         * Create a request for the method "searchapplications.list".
         *
         * This request holds the parameters needed by the the cloudsearch server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @since 1.13
         */
        protected List() {
          super(CloudSearch.this, "GET", REST_PATH, null, com.google.api.services.cloudsearch.v1.model.ListSearchApplicationsResponse.class);
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * If you are asked by Google to help with debugging, set this field. Otherwise, ignore this
         * field.
         */
        @com.google.api.client.util.Key("debugOptions.enableDebugging")
        private java.lang.Boolean debugOptionsEnableDebugging;

        /** If you are asked by Google to help with debugging, set this field. Otherwise, ignore this field.
         */
        public java.lang.Boolean getDebugOptionsEnableDebugging() {
          return debugOptionsEnableDebugging;
        }

        /**
         * If you are asked by Google to help with debugging, set this field. Otherwise, ignore this
         * field.
         */
        public List setDebugOptionsEnableDebugging(java.lang.Boolean debugOptionsEnableDebugging) {
          this.debugOptionsEnableDebugging = debugOptionsEnableDebugging;
          return this;
        }

        /** The maximum number of items to return. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of items to return.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The maximum number of items to return. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * The next_page_token value returned from a previous List request, if any. The default
         * value is 10
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** The next_page_token value returned from a previous List request, if any. The default value is 10
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * The next_page_token value returned from a previous List request, if any. The default
         * value is 10
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a search application. **Note:** This API requires an admin account to execute.
       *
       * Create a request for the method "searchapplications.patch".
       *
       * This request holds the parameters needed by the cloudsearch server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name The name of the Search Application. Format: searchapplications/{application_id}.
       * @param content the {@link com.google.api.services.cloudsearch.v1.model.SearchApplication}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.cloudsearch.v1.model.SearchApplication content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.Operation> {

        private static final String REST_PATH = "v1/settings/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^searchapplications/[^/]+$");

        /**
         * Updates a search application. **Note:** This API requires an admin account to execute.
         *
         * Create a request for the method "searchapplications.patch".
         *
         * This request holds the parameters needed by the the cloudsearch server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the Search Application. Format: searchapplications/{application_id}.
         * @param content the {@link com.google.api.services.cloudsearch.v1.model.SearchApplication}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.cloudsearch.v1.model.SearchApplication content) {
          super(CloudSearch.this, "PATCH", REST_PATH, content, com.google.api.services.cloudsearch.v1.model.Operation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^searchapplications/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the Search Application. Format: searchapplications/{application_id}. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the Search Application. Format: searchapplications/{application_id}.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the Search Application. Format: searchapplications/{application_id}. */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^searchapplications/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * Only applies to [`settings.searchapplications.patch`](https://developers.google.com
         * /cloud-search/docs/reference/rest/v1/settings.searchapplications/patch). Update mask to
         * control which fields to update. Example field paths: `search_application.name`,
         * `search_application.displayName`. * If `update_mask` is non-empty, then only the fields
         * specified in the `update_mask` are updated. * If you specify a field in the
         * `update_mask`, but don't specify its value in the `search_application`, then that field
         * is cleared. * If the `update_mask` is not present or empty or has the value `*`, then all
         * fields are updated.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Only applies to [`settings.searchapplications.patch`](https://developers.google.com/cloud-
       search/docs/reference/rest/v1/settings.searchapplications/patch). Update mask to control which
       fields to update. Example field paths: `search_application.name`, `search_application.displayName`.
       * If `update_mask` is non-empty, then only the fields specified in the `update_mask` are updated. *
       If you specify a field in the `update_mask`, but don't specify its value in the
       `search_application`, then that field is cleared. * If the `update_mask` is not present or empty or
       has the value `*`, then all fields are updated.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * Only applies to [`settings.searchapplications.patch`](https://developers.google.com
         * /cloud-search/docs/reference/rest/v1/settings.searchapplications/patch). Update mask to
         * control which fields to update. Example field paths: `search_application.name`,
         * `search_application.displayName`. * If `update_mask` is non-empty, then only the fields
         * specified in the `update_mask` are updated. * If you specify a field in the
         * `update_mask`, but don't specify its value in the `search_application`, then that field
         * is cleared. * If the `update_mask` is not present or empty or has the value `*`, then all
         * fields are updated.
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }
      /**
       * Resets a search application to default settings. This will return an empty response. **Note:**
       * This API requires an admin account to execute.
       *
       * Create a request for the method "searchapplications.reset".
       *
       * This request holds the parameters needed by the cloudsearch server.  After setting any optional
       * parameters, call the {@link Reset#execute()} method to invoke the remote operation.
       *
       * @param name The name of the search application to be reset. Format: applications/{application_id}.
       * @param content the {@link com.google.api.services.cloudsearch.v1.model.ResetSearchApplicationRequest}
       * @return the request
       */
      public Reset reset(java.lang.String name, com.google.api.services.cloudsearch.v1.model.ResetSearchApplicationRequest content) throws java.io.IOException {
        Reset result = new Reset(name, content);
        initialize(result);
        return result;
      }

      public class Reset extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.Operation> {

        private static final String REST_PATH = "v1/settings/{+name}:reset";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^searchapplications/[^/]+$");

        /**
         * Resets a search application to default settings. This will return an empty response. **Note:**
         * This API requires an admin account to execute.
         *
         * Create a request for the method "searchapplications.reset".
         *
         * This request holds the parameters needed by the the cloudsearch server.  After setting any
         * optional parameters, call the {@link Reset#execute()} method to invoke the remote operation.
         * <p> {@link
         * Reset#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the search application to be reset. Format: applications/{application_id}.
         * @param content the {@link com.google.api.services.cloudsearch.v1.model.ResetSearchApplicationRequest}
         * @since 1.13
         */
        protected Reset(java.lang.String name, com.google.api.services.cloudsearch.v1.model.ResetSearchApplicationRequest content) {
          super(CloudSearch.this, "POST", REST_PATH, content, com.google.api.services.cloudsearch.v1.model.Operation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^searchapplications/[^/]+$");
          }
        }

        @Override
        public Reset set$Xgafv(java.lang.String $Xgafv) {
          return (Reset) super.set$Xgafv($Xgafv);
        }

        @Override
        public Reset setAccessToken(java.lang.String accessToken) {
          return (Reset) super.setAccessToken(accessToken);
        }

        @Override
        public Reset setAlt(java.lang.String alt) {
          return (Reset) super.setAlt(alt);
        }

        @Override
        public Reset setCallback(java.lang.String callback) {
          return (Reset) super.setCallback(callback);
        }

        @Override
        public Reset setFields(java.lang.String fields) {
          return (Reset) super.setFields(fields);
        }

        @Override
        public Reset setKey(java.lang.String key) {
          return (Reset) super.setKey(key);
        }

        @Override
        public Reset setOauthToken(java.lang.String oauthToken) {
          return (Reset) super.setOauthToken(oauthToken);
        }

        @Override
        public Reset setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Reset) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Reset setQuotaUser(java.lang.String quotaUser) {
          return (Reset) super.setQuotaUser(quotaUser);
        }

        @Override
        public Reset setUploadType(java.lang.String uploadType) {
          return (Reset) super.setUploadType(uploadType);
        }

        @Override
        public Reset setUploadProtocol(java.lang.String uploadProtocol) {
          return (Reset) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The name of the search application to be reset. Format: applications/{application_id}.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the search application to be reset. Format: applications/{application_id}.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * The name of the search application to be reset. Format: applications/{application_id}.
         */
        public Reset setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^searchapplications/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Reset set(String parameterName, Object value) {
          return (Reset) super.set(parameterName, value);
        }
      }
      /**
       * Updates a search application. **Note:** This API requires an admin account to execute.
       *
       * Create a request for the method "searchapplications.update".
       *
       * This request holds the parameters needed by the cloudsearch server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation.
       *
       * @param name The name of the Search Application. Format: searchapplications/{application_id}.
       * @param content the {@link com.google.api.services.cloudsearch.v1.model.SearchApplication}
       * @return the request
       */
      public Update update(java.lang.String name, com.google.api.services.cloudsearch.v1.model.SearchApplication content) throws java.io.IOException {
        Update result = new Update(name, content);
        initialize(result);
        return result;
      }

      public class Update extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.Operation> {

        private static final String REST_PATH = "v1/settings/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^searchapplications/[^/]+$");

        /**
         * Updates a search application. **Note:** This API requires an admin account to execute.
         *
         * Create a request for the method "searchapplications.update".
         *
         * This request holds the parameters needed by the the cloudsearch server.  After setting any
         * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
         * <p> {@link
         * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the Search Application. Format: searchapplications/{application_id}.
         * @param content the {@link com.google.api.services.cloudsearch.v1.model.SearchApplication}
         * @since 1.13
         */
        protected Update(java.lang.String name, com.google.api.services.cloudsearch.v1.model.SearchApplication content) {
          super(CloudSearch.this, "PUT", REST_PATH, content, com.google.api.services.cloudsearch.v1.model.Operation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^searchapplications/[^/]+$");
          }
        }

        @Override
        public Update set$Xgafv(java.lang.String $Xgafv) {
          return (Update) super.set$Xgafv($Xgafv);
        }

        @Override
        public Update setAccessToken(java.lang.String accessToken) {
          return (Update) super.setAccessToken(accessToken);
        }

        @Override
        public Update setAlt(java.lang.String alt) {
          return (Update) super.setAlt(alt);
        }

        @Override
        public Update setCallback(java.lang.String callback) {
          return (Update) super.setCallback(callback);
        }

        @Override
        public Update setFields(java.lang.String fields) {
          return (Update) super.setFields(fields);
        }

        @Override
        public Update setKey(java.lang.String key) {
          return (Update) super.setKey(key);
        }

        @Override
        public Update setOauthToken(java.lang.String oauthToken) {
          return (Update) super.setOauthToken(oauthToken);
        }

        @Override
        public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Update) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Update setQuotaUser(java.lang.String quotaUser) {
          return (Update) super.setQuotaUser(quotaUser);
        }

        @Override
        public Update setUploadType(java.lang.String uploadType) {
          return (Update) super.setUploadType(uploadType);
        }

        @Override
        public Update setUploadProtocol(java.lang.String uploadProtocol) {
          return (Update) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the Search Application. Format: searchapplications/{application_id}. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the Search Application. Format: searchapplications/{application_id}.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the Search Application. Format: searchapplications/{application_id}. */
        public Update setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^searchapplications/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * Only applies to [`settings.searchapplications.patch`](https://developers.google.com
         * /cloud-search/docs/reference/rest/v1/settings.searchapplications/patch). Update mask to
         * control which fields to update. Example field paths: `search_application.name`,
         * `search_application.displayName`. * If `update_mask` is non-empty, then only the fields
         * specified in the `update_mask` are updated. * If you specify a field in the
         * `update_mask`, but don't specify its value in the `search_application`, then that field
         * is cleared. * If the `update_mask` is not present or empty or has the value `*`, then all
         * fields are updated.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Only applies to [`settings.searchapplications.patch`](https://developers.google.com/cloud-
       search/docs/reference/rest/v1/settings.searchapplications/patch). Update mask to control which
       fields to update. Example field paths: `search_application.name`, `search_application.displayName`.
       * If `update_mask` is non-empty, then only the fields specified in the `update_mask` are updated. *
       If you specify a field in the `update_mask`, but don't specify its value in the
       `search_application`, then that field is cleared. * If the `update_mask` is not present or empty or
       has the value `*`, then all fields are updated.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * Only applies to [`settings.searchapplications.patch`](https://developers.google.com
         * /cloud-search/docs/reference/rest/v1/settings.searchapplications/patch). Update mask to
         * control which fields to update. Example field paths: `search_application.name`,
         * `search_application.displayName`. * If `update_mask` is non-empty, then only the fields
         * specified in the `update_mask` are updated. * If you specify a field in the
         * `update_mask`, but don't specify its value in the `search_application`, then that field
         * is cleared. * If the `update_mask` is not present or empty or has the value `*`, then all
         * fields are updated.
         */
        public Update setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Update set(String parameterName, Object value) {
          return (Update) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * An accessor for creating requests from the Stats collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code CloudSearch cloudsearch = new CloudSearch(...);}
   *   {@code CloudSearch.Stats.List request = cloudsearch.stats().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Stats stats() {
    return new Stats();
  }

  /**
   * The "stats" collection of methods.
   */
  public class Stats {

    /**
     * Gets indexed item statistics aggreggated across all data sources. This API only returns
     * statistics for previous dates; it doesn't return statistics for the current day. **Note:** This
     * API requires a standard end user account to execute.
     *
     * Create a request for the method "stats.getIndex".
     *
     * This request holds the parameters needed by the cloudsearch server.  After setting any optional
     * parameters, call the {@link GetIndex#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public GetIndex getIndex() throws java.io.IOException {
      GetIndex result = new GetIndex();
      initialize(result);
      return result;
    }

    public class GetIndex extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.GetCustomerIndexStatsResponse> {

      private static final String REST_PATH = "v1/stats/index";

      /**
       * Gets indexed item statistics aggreggated across all data sources. This API only returns
       * statistics for previous dates; it doesn't return statistics for the current day. **Note:** This
       * API requires a standard end user account to execute.
       *
       * Create a request for the method "stats.getIndex".
       *
       * This request holds the parameters needed by the the cloudsearch server.  After setting any
       * optional parameters, call the {@link GetIndex#execute()} method to invoke the remote operation.
       * <p> {@link
       * GetIndex#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected GetIndex() {
        super(CloudSearch.this, "GET", REST_PATH, null, com.google.api.services.cloudsearch.v1.model.GetCustomerIndexStatsResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetIndex set$Xgafv(java.lang.String $Xgafv) {
        return (GetIndex) super.set$Xgafv($Xgafv);
      }

      @Override
      public GetIndex setAccessToken(java.lang.String accessToken) {
        return (GetIndex) super.setAccessToken(accessToken);
      }

      @Override
      public GetIndex setAlt(java.lang.String alt) {
        return (GetIndex) super.setAlt(alt);
      }

      @Override
      public GetIndex setCallback(java.lang.String callback) {
        return (GetIndex) super.setCallback(callback);
      }

      @Override
      public GetIndex setFields(java.lang.String fields) {
        return (GetIndex) super.setFields(fields);
      }

      @Override
      public GetIndex setKey(java.lang.String key) {
        return (GetIndex) super.setKey(key);
      }

      @Override
      public GetIndex setOauthToken(java.lang.String oauthToken) {
        return (GetIndex) super.setOauthToken(oauthToken);
      }

      @Override
      public GetIndex setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetIndex) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetIndex setQuotaUser(java.lang.String quotaUser) {
        return (GetIndex) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetIndex setUploadType(java.lang.String uploadType) {
        return (GetIndex) super.setUploadType(uploadType);
      }

      @Override
      public GetIndex setUploadProtocol(java.lang.String uploadProtocol) {
        return (GetIndex) super.setUploadProtocol(uploadProtocol);
      }

      /** Day of month. Must be from 1 to 31 and valid for the year and month. */
      @com.google.api.client.util.Key("fromDate.day")
      private java.lang.Integer fromDateDay;

      /** Day of month. Must be from 1 to 31 and valid for the year and month.
       */
      public java.lang.Integer getFromDateDay() {
        return fromDateDay;
      }

      /** Day of month. Must be from 1 to 31 and valid for the year and month. */
      public GetIndex setFromDateDay(java.lang.Integer fromDateDay) {
        this.fromDateDay = fromDateDay;
        return this;
      }

      /** Month of date. Must be from 1 to 12. */
      @com.google.api.client.util.Key("fromDate.month")
      private java.lang.Integer fromDateMonth;

      /** Month of date. Must be from 1 to 12.
       */
      public java.lang.Integer getFromDateMonth() {
        return fromDateMonth;
      }

      /** Month of date. Must be from 1 to 12. */
      public GetIndex setFromDateMonth(java.lang.Integer fromDateMonth) {
        this.fromDateMonth = fromDateMonth;
        return this;
      }

      /** Year of date. Must be from 1 to 9999. */
      @com.google.api.client.util.Key("fromDate.year")
      private java.lang.Integer fromDateYear;

      /** Year of date. Must be from 1 to 9999.
       */
      public java.lang.Integer getFromDateYear() {
        return fromDateYear;
      }

      /** Year of date. Must be from 1 to 9999. */
      public GetIndex setFromDateYear(java.lang.Integer fromDateYear) {
        this.fromDateYear = fromDateYear;
        return this;
      }

      /** Day of month. Must be from 1 to 31 and valid for the year and month. */
      @com.google.api.client.util.Key("toDate.day")
      private java.lang.Integer toDateDay;

      /** Day of month. Must be from 1 to 31 and valid for the year and month.
       */
      public java.lang.Integer getToDateDay() {
        return toDateDay;
      }

      /** Day of month. Must be from 1 to 31 and valid for the year and month. */
      public GetIndex setToDateDay(java.lang.Integer toDateDay) {
        this.toDateDay = toDateDay;
        return this;
      }

      /** Month of date. Must be from 1 to 12. */
      @com.google.api.client.util.Key("toDate.month")
      private java.lang.Integer toDateMonth;

      /** Month of date. Must be from 1 to 12.
       */
      public java.lang.Integer getToDateMonth() {
        return toDateMonth;
      }

      /** Month of date. Must be from 1 to 12. */
      public GetIndex setToDateMonth(java.lang.Integer toDateMonth) {
        this.toDateMonth = toDateMonth;
        return this;
      }

      /** Year of date. Must be from 1 to 9999. */
      @com.google.api.client.util.Key("toDate.year")
      private java.lang.Integer toDateYear;

      /** Year of date. Must be from 1 to 9999.
       */
      public java.lang.Integer getToDateYear() {
        return toDateYear;
      }

      /** Year of date. Must be from 1 to 9999. */
      public GetIndex setToDateYear(java.lang.Integer toDateYear) {
        this.toDateYear = toDateYear;
        return this;
      }

      @Override
      public GetIndex set(String parameterName, Object value) {
        return (GetIndex) super.set(parameterName, value);
      }
    }
    /**
     * Get the query statistics for customer. **Note:** This API requires a standard end user account to
     * execute.
     *
     * Create a request for the method "stats.getQuery".
     *
     * This request holds the parameters needed by the cloudsearch server.  After setting any optional
     * parameters, call the {@link GetQuery#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public GetQuery getQuery() throws java.io.IOException {
      GetQuery result = new GetQuery();
      initialize(result);
      return result;
    }

    public class GetQuery extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.GetCustomerQueryStatsResponse> {

      private static final String REST_PATH = "v1/stats/query";

      /**
       * Get the query statistics for customer. **Note:** This API requires a standard end user account
       * to execute.
       *
       * Create a request for the method "stats.getQuery".
       *
       * This request holds the parameters needed by the the cloudsearch server.  After setting any
       * optional parameters, call the {@link GetQuery#execute()} method to invoke the remote operation.
       * <p> {@link
       * GetQuery#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected GetQuery() {
        super(CloudSearch.this, "GET", REST_PATH, null, com.google.api.services.cloudsearch.v1.model.GetCustomerQueryStatsResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetQuery set$Xgafv(java.lang.String $Xgafv) {
        return (GetQuery) super.set$Xgafv($Xgafv);
      }

      @Override
      public GetQuery setAccessToken(java.lang.String accessToken) {
        return (GetQuery) super.setAccessToken(accessToken);
      }

      @Override
      public GetQuery setAlt(java.lang.String alt) {
        return (GetQuery) super.setAlt(alt);
      }

      @Override
      public GetQuery setCallback(java.lang.String callback) {
        return (GetQuery) super.setCallback(callback);
      }

      @Override
      public GetQuery setFields(java.lang.String fields) {
        return (GetQuery) super.setFields(fields);
      }

      @Override
      public GetQuery setKey(java.lang.String key) {
        return (GetQuery) super.setKey(key);
      }

      @Override
      public GetQuery setOauthToken(java.lang.String oauthToken) {
        return (GetQuery) super.setOauthToken(oauthToken);
      }

      @Override
      public GetQuery setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetQuery) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetQuery setQuotaUser(java.lang.String quotaUser) {
        return (GetQuery) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetQuery setUploadType(java.lang.String uploadType) {
        return (GetQuery) super.setUploadType(uploadType);
      }

      @Override
      public GetQuery setUploadProtocol(java.lang.String uploadProtocol) {
        return (GetQuery) super.setUploadProtocol(uploadProtocol);
      }

      /** Day of month. Must be from 1 to 31 and valid for the year and month. */
      @com.google.api.client.util.Key("fromDate.day")
      private java.lang.Integer fromDateDay;

      /** Day of month. Must be from 1 to 31 and valid for the year and month.
       */
      public java.lang.Integer getFromDateDay() {
        return fromDateDay;
      }

      /** Day of month. Must be from 1 to 31 and valid for the year and month. */
      public GetQuery setFromDateDay(java.lang.Integer fromDateDay) {
        this.fromDateDay = fromDateDay;
        return this;
      }

      /** Month of date. Must be from 1 to 12. */
      @com.google.api.client.util.Key("fromDate.month")
      private java.lang.Integer fromDateMonth;

      /** Month of date. Must be from 1 to 12.
       */
      public java.lang.Integer getFromDateMonth() {
        return fromDateMonth;
      }

      /** Month of date. Must be from 1 to 12. */
      public GetQuery setFromDateMonth(java.lang.Integer fromDateMonth) {
        this.fromDateMonth = fromDateMonth;
        return this;
      }

      /** Year of date. Must be from 1 to 9999. */
      @com.google.api.client.util.Key("fromDate.year")
      private java.lang.Integer fromDateYear;

      /** Year of date. Must be from 1 to 9999.
       */
      public java.lang.Integer getFromDateYear() {
        return fromDateYear;
      }

      /** Year of date. Must be from 1 to 9999. */
      public GetQuery setFromDateYear(java.lang.Integer fromDateYear) {
        this.fromDateYear = fromDateYear;
        return this;
      }

      /** Day of month. Must be from 1 to 31 and valid for the year and month. */
      @com.google.api.client.util.Key("toDate.day")
      private java.lang.Integer toDateDay;

      /** Day of month. Must be from 1 to 31 and valid for the year and month.
       */
      public java.lang.Integer getToDateDay() {
        return toDateDay;
      }

      /** Day of month. Must be from 1 to 31 and valid for the year and month. */
      public GetQuery setToDateDay(java.lang.Integer toDateDay) {
        this.toDateDay = toDateDay;
        return this;
      }

      /** Month of date. Must be from 1 to 12. */
      @com.google.api.client.util.Key("toDate.month")
      private java.lang.Integer toDateMonth;

      /** Month of date. Must be from 1 to 12.
       */
      public java.lang.Integer getToDateMonth() {
        return toDateMonth;
      }

      /** Month of date. Must be from 1 to 12. */
      public GetQuery setToDateMonth(java.lang.Integer toDateMonth) {
        this.toDateMonth = toDateMonth;
        return this;
      }

      /** Year of date. Must be from 1 to 9999. */
      @com.google.api.client.util.Key("toDate.year")
      private java.lang.Integer toDateYear;

      /** Year of date. Must be from 1 to 9999.
       */
      public java.lang.Integer getToDateYear() {
        return toDateYear;
      }

      /** Year of date. Must be from 1 to 9999. */
      public GetQuery setToDateYear(java.lang.Integer toDateYear) {
        this.toDateYear = toDateYear;
        return this;
      }

      @Override
      public GetQuery set(String parameterName, Object value) {
        return (GetQuery) super.set(parameterName, value);
      }
    }
    /**
     * Get search application stats for customer. **Note:** This API requires a standard end user
     * account to execute.
     *
     * Create a request for the method "stats.getSearchapplication".
     *
     * This request holds the parameters needed by the cloudsearch server.  After setting any optional
     * parameters, call the {@link GetSearchapplication#execute()} method to invoke the remote
     * operation.
     *
     * @return the request
     */
    public GetSearchapplication getSearchapplication() throws java.io.IOException {
      GetSearchapplication result = new GetSearchapplication();
      initialize(result);
      return result;
    }

    public class GetSearchapplication extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.GetCustomerSearchApplicationStatsResponse> {

      private static final String REST_PATH = "v1/stats/searchapplication";

      /**
       * Get search application stats for customer. **Note:** This API requires a standard end user
       * account to execute.
       *
       * Create a request for the method "stats.getSearchapplication".
       *
       * This request holds the parameters needed by the the cloudsearch server.  After setting any
       * optional parameters, call the {@link GetSearchapplication#execute()} method to invoke the
       * remote operation. <p> {@link GetSearchapplication#initialize(com.google.api.client.googleapis.s
       * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
       * after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected GetSearchapplication() {
        super(CloudSearch.this, "GET", REST_PATH, null, com.google.api.services.cloudsearch.v1.model.GetCustomerSearchApplicationStatsResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetSearchapplication set$Xgafv(java.lang.String $Xgafv) {
        return (GetSearchapplication) super.set$Xgafv($Xgafv);
      }

      @Override
      public GetSearchapplication setAccessToken(java.lang.String accessToken) {
        return (GetSearchapplication) super.setAccessToken(accessToken);
      }

      @Override
      public GetSearchapplication setAlt(java.lang.String alt) {
        return (GetSearchapplication) super.setAlt(alt);
      }

      @Override
      public GetSearchapplication setCallback(java.lang.String callback) {
        return (GetSearchapplication) super.setCallback(callback);
      }

      @Override
      public GetSearchapplication setFields(java.lang.String fields) {
        return (GetSearchapplication) super.setFields(fields);
      }

      @Override
      public GetSearchapplication setKey(java.lang.String key) {
        return (GetSearchapplication) super.setKey(key);
      }

      @Override
      public GetSearchapplication setOauthToken(java.lang.String oauthToken) {
        return (GetSearchapplication) super.setOauthToken(oauthToken);
      }

      @Override
      public GetSearchapplication setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetSearchapplication) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetSearchapplication setQuotaUser(java.lang.String quotaUser) {
        return (GetSearchapplication) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetSearchapplication setUploadType(java.lang.String uploadType) {
        return (GetSearchapplication) super.setUploadType(uploadType);
      }

      @Override
      public GetSearchapplication setUploadProtocol(java.lang.String uploadProtocol) {
        return (GetSearchapplication) super.setUploadProtocol(uploadProtocol);
      }

      /** Day of month. Must be from 1 to 31 and valid for the year and month. */
      @com.google.api.client.util.Key("endDate.day")
      private java.lang.Integer endDateDay;

      /** Day of month. Must be from 1 to 31 and valid for the year and month.
       */
      public java.lang.Integer getEndDateDay() {
        return endDateDay;
      }

      /** Day of month. Must be from 1 to 31 and valid for the year and month. */
      public GetSearchapplication setEndDateDay(java.lang.Integer endDateDay) {
        this.endDateDay = endDateDay;
        return this;
      }

      /** Month of date. Must be from 1 to 12. */
      @com.google.api.client.util.Key("endDate.month")
      private java.lang.Integer endDateMonth;

      /** Month of date. Must be from 1 to 12.
       */
      public java.lang.Integer getEndDateMonth() {
        return endDateMonth;
      }

      /** Month of date. Must be from 1 to 12. */
      public GetSearchapplication setEndDateMonth(java.lang.Integer endDateMonth) {
        this.endDateMonth = endDateMonth;
        return this;
      }

      /** Year of date. Must be from 1 to 9999. */
      @com.google.api.client.util.Key("endDate.year")
      private java.lang.Integer endDateYear;

      /** Year of date. Must be from 1 to 9999.
       */
      public java.lang.Integer getEndDateYear() {
        return endDateYear;
      }

      /** Year of date. Must be from 1 to 9999. */
      public GetSearchapplication setEndDateYear(java.lang.Integer endDateYear) {
        this.endDateYear = endDateYear;
        return this;
      }

      /** Day of month. Must be from 1 to 31 and valid for the year and month. */
      @com.google.api.client.util.Key("startDate.day")
      private java.lang.Integer startDateDay;

      /** Day of month. Must be from 1 to 31 and valid for the year and month.
       */
      public java.lang.Integer getStartDateDay() {
        return startDateDay;
      }

      /** Day of month. Must be from 1 to 31 and valid for the year and month. */
      public GetSearchapplication setStartDateDay(java.lang.Integer startDateDay) {
        this.startDateDay = startDateDay;
        return this;
      }

      /** Month of date. Must be from 1 to 12. */
      @com.google.api.client.util.Key("startDate.month")
      private java.lang.Integer startDateMonth;

      /** Month of date. Must be from 1 to 12.
       */
      public java.lang.Integer getStartDateMonth() {
        return startDateMonth;
      }

      /** Month of date. Must be from 1 to 12. */
      public GetSearchapplication setStartDateMonth(java.lang.Integer startDateMonth) {
        this.startDateMonth = startDateMonth;
        return this;
      }

      /** Year of date. Must be from 1 to 9999. */
      @com.google.api.client.util.Key("startDate.year")
      private java.lang.Integer startDateYear;

      /** Year of date. Must be from 1 to 9999.
       */
      public java.lang.Integer getStartDateYear() {
        return startDateYear;
      }

      /** Year of date. Must be from 1 to 9999. */
      public GetSearchapplication setStartDateYear(java.lang.Integer startDateYear) {
        this.startDateYear = startDateYear;
        return this;
      }

      @Override
      public GetSearchapplication set(String parameterName, Object value) {
        return (GetSearchapplication) super.set(parameterName, value);
      }
    }
    /**
     * Get the # of search sessions, % of successful sessions with a click query statistics for
     * customer. **Note:** This API requires a standard end user account to execute.
     *
     * Create a request for the method "stats.getSession".
     *
     * This request holds the parameters needed by the cloudsearch server.  After setting any optional
     * parameters, call the {@link GetSession#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public GetSession getSession() throws java.io.IOException {
      GetSession result = new GetSession();
      initialize(result);
      return result;
    }

    public class GetSession extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.GetCustomerSessionStatsResponse> {

      private static final String REST_PATH = "v1/stats/session";

      /**
       * Get the # of search sessions, % of successful sessions with a click query statistics for
       * customer. **Note:** This API requires a standard end user account to execute.
       *
       * Create a request for the method "stats.getSession".
       *
       * This request holds the parameters needed by the the cloudsearch server.  After setting any
       * optional parameters, call the {@link GetSession#execute()} method to invoke the remote
       * operation. <p> {@link
       * GetSession#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected GetSession() {
        super(CloudSearch.this, "GET", REST_PATH, null, com.google.api.services.cloudsearch.v1.model.GetCustomerSessionStatsResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetSession set$Xgafv(java.lang.String $Xgafv) {
        return (GetSession) super.set$Xgafv($Xgafv);
      }

      @Override
      public GetSession setAccessToken(java.lang.String accessToken) {
        return (GetSession) super.setAccessToken(accessToken);
      }

      @Override
      public GetSession setAlt(java.lang.String alt) {
        return (GetSession) super.setAlt(alt);
      }

      @Override
      public GetSession setCallback(java.lang.String callback) {
        return (GetSession) super.setCallback(callback);
      }

      @Override
      public GetSession setFields(java.lang.String fields) {
        return (GetSession) super.setFields(fields);
      }

      @Override
      public GetSession setKey(java.lang.String key) {
        return (GetSession) super.setKey(key);
      }

      @Override
      public GetSession setOauthToken(java.lang.String oauthToken) {
        return (GetSession) super.setOauthToken(oauthToken);
      }

      @Override
      public GetSession setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetSession) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetSession setQuotaUser(java.lang.String quotaUser) {
        return (GetSession) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetSession setUploadType(java.lang.String uploadType) {
        return (GetSession) super.setUploadType(uploadType);
      }

      @Override
      public GetSession setUploadProtocol(java.lang.String uploadProtocol) {
        return (GetSession) super.setUploadProtocol(uploadProtocol);
      }

      /** Day of month. Must be from 1 to 31 and valid for the year and month. */
      @com.google.api.client.util.Key("fromDate.day")
      private java.lang.Integer fromDateDay;

      /** Day of month. Must be from 1 to 31 and valid for the year and month.
       */
      public java.lang.Integer getFromDateDay() {
        return fromDateDay;
      }

      /** Day of month. Must be from 1 to 31 and valid for the year and month. */
      public GetSession setFromDateDay(java.lang.Integer fromDateDay) {
        this.fromDateDay = fromDateDay;
        return this;
      }

      /** Month of date. Must be from 1 to 12. */
      @com.google.api.client.util.Key("fromDate.month")
      private java.lang.Integer fromDateMonth;

      /** Month of date. Must be from 1 to 12.
       */
      public java.lang.Integer getFromDateMonth() {
        return fromDateMonth;
      }

      /** Month of date. Must be from 1 to 12. */
      public GetSession setFromDateMonth(java.lang.Integer fromDateMonth) {
        this.fromDateMonth = fromDateMonth;
        return this;
      }

      /** Year of date. Must be from 1 to 9999. */
      @com.google.api.client.util.Key("fromDate.year")
      private java.lang.Integer fromDateYear;

      /** Year of date. Must be from 1 to 9999.
       */
      public java.lang.Integer getFromDateYear() {
        return fromDateYear;
      }

      /** Year of date. Must be from 1 to 9999. */
      public GetSession setFromDateYear(java.lang.Integer fromDateYear) {
        this.fromDateYear = fromDateYear;
        return this;
      }

      /** Day of month. Must be from 1 to 31 and valid for the year and month. */
      @com.google.api.client.util.Key("toDate.day")
      private java.lang.Integer toDateDay;

      /** Day of month. Must be from 1 to 31 and valid for the year and month.
       */
      public java.lang.Integer getToDateDay() {
        return toDateDay;
      }

      /** Day of month. Must be from 1 to 31 and valid for the year and month. */
      public GetSession setToDateDay(java.lang.Integer toDateDay) {
        this.toDateDay = toDateDay;
        return this;
      }

      /** Month of date. Must be from 1 to 12. */
      @com.google.api.client.util.Key("toDate.month")
      private java.lang.Integer toDateMonth;

      /** Month of date. Must be from 1 to 12.
       */
      public java.lang.Integer getToDateMonth() {
        return toDateMonth;
      }

      /** Month of date. Must be from 1 to 12. */
      public GetSession setToDateMonth(java.lang.Integer toDateMonth) {
        this.toDateMonth = toDateMonth;
        return this;
      }

      /** Year of date. Must be from 1 to 9999. */
      @com.google.api.client.util.Key("toDate.year")
      private java.lang.Integer toDateYear;

      /** Year of date. Must be from 1 to 9999.
       */
      public java.lang.Integer getToDateYear() {
        return toDateYear;
      }

      /** Year of date. Must be from 1 to 9999. */
      public GetSession setToDateYear(java.lang.Integer toDateYear) {
        this.toDateYear = toDateYear;
        return this;
      }

      @Override
      public GetSession set(String parameterName, Object value) {
        return (GetSession) super.set(parameterName, value);
      }
    }
    /**
     * Get the users statistics for customer. **Note:** This API requires a standard end user account to
     * execute.
     *
     * Create a request for the method "stats.getUser".
     *
     * This request holds the parameters needed by the cloudsearch server.  After setting any optional
     * parameters, call the {@link GetUser#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public GetUser getUser() throws java.io.IOException {
      GetUser result = new GetUser();
      initialize(result);
      return result;
    }

    public class GetUser extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.GetCustomerUserStatsResponse> {

      private static final String REST_PATH = "v1/stats/user";

      /**
       * Get the users statistics for customer. **Note:** This API requires a standard end user account
       * to execute.
       *
       * Create a request for the method "stats.getUser".
       *
       * This request holds the parameters needed by the the cloudsearch server.  After setting any
       * optional parameters, call the {@link GetUser#execute()} method to invoke the remote operation.
       * <p> {@link
       * GetUser#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected GetUser() {
        super(CloudSearch.this, "GET", REST_PATH, null, com.google.api.services.cloudsearch.v1.model.GetCustomerUserStatsResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetUser set$Xgafv(java.lang.String $Xgafv) {
        return (GetUser) super.set$Xgafv($Xgafv);
      }

      @Override
      public GetUser setAccessToken(java.lang.String accessToken) {
        return (GetUser) super.setAccessToken(accessToken);
      }

      @Override
      public GetUser setAlt(java.lang.String alt) {
        return (GetUser) super.setAlt(alt);
      }

      @Override
      public GetUser setCallback(java.lang.String callback) {
        return (GetUser) super.setCallback(callback);
      }

      @Override
      public GetUser setFields(java.lang.String fields) {
        return (GetUser) super.setFields(fields);
      }

      @Override
      public GetUser setKey(java.lang.String key) {
        return (GetUser) super.setKey(key);
      }

      @Override
      public GetUser setOauthToken(java.lang.String oauthToken) {
        return (GetUser) super.setOauthToken(oauthToken);
      }

      @Override
      public GetUser setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetUser) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetUser setQuotaUser(java.lang.String quotaUser) {
        return (GetUser) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetUser setUploadType(java.lang.String uploadType) {
        return (GetUser) super.setUploadType(uploadType);
      }

      @Override
      public GetUser setUploadProtocol(java.lang.String uploadProtocol) {
        return (GetUser) super.setUploadProtocol(uploadProtocol);
      }

      /** Day of month. Must be from 1 to 31 and valid for the year and month. */
      @com.google.api.client.util.Key("fromDate.day")
      private java.lang.Integer fromDateDay;

      /** Day of month. Must be from 1 to 31 and valid for the year and month.
       */
      public java.lang.Integer getFromDateDay() {
        return fromDateDay;
      }

      /** Day of month. Must be from 1 to 31 and valid for the year and month. */
      public GetUser setFromDateDay(java.lang.Integer fromDateDay) {
        this.fromDateDay = fromDateDay;
        return this;
      }

      /** Month of date. Must be from 1 to 12. */
      @com.google.api.client.util.Key("fromDate.month")
      private java.lang.Integer fromDateMonth;

      /** Month of date. Must be from 1 to 12.
       */
      public java.lang.Integer getFromDateMonth() {
        return fromDateMonth;
      }

      /** Month of date. Must be from 1 to 12. */
      public GetUser setFromDateMonth(java.lang.Integer fromDateMonth) {
        this.fromDateMonth = fromDateMonth;
        return this;
      }

      /** Year of date. Must be from 1 to 9999. */
      @com.google.api.client.util.Key("fromDate.year")
      private java.lang.Integer fromDateYear;

      /** Year of date. Must be from 1 to 9999.
       */
      public java.lang.Integer getFromDateYear() {
        return fromDateYear;
      }

      /** Year of date. Must be from 1 to 9999. */
      public GetUser setFromDateYear(java.lang.Integer fromDateYear) {
        this.fromDateYear = fromDateYear;
        return this;
      }

      /** Day of month. Must be from 1 to 31 and valid for the year and month. */
      @com.google.api.client.util.Key("toDate.day")
      private java.lang.Integer toDateDay;

      /** Day of month. Must be from 1 to 31 and valid for the year and month.
       */
      public java.lang.Integer getToDateDay() {
        return toDateDay;
      }

      /** Day of month. Must be from 1 to 31 and valid for the year and month. */
      public GetUser setToDateDay(java.lang.Integer toDateDay) {
        this.toDateDay = toDateDay;
        return this;
      }

      /** Month of date. Must be from 1 to 12. */
      @com.google.api.client.util.Key("toDate.month")
      private java.lang.Integer toDateMonth;

      /** Month of date. Must be from 1 to 12.
       */
      public java.lang.Integer getToDateMonth() {
        return toDateMonth;
      }

      /** Month of date. Must be from 1 to 12. */
      public GetUser setToDateMonth(java.lang.Integer toDateMonth) {
        this.toDateMonth = toDateMonth;
        return this;
      }

      /** Year of date. Must be from 1 to 9999. */
      @com.google.api.client.util.Key("toDate.year")
      private java.lang.Integer toDateYear;

      /** Year of date. Must be from 1 to 9999.
       */
      public java.lang.Integer getToDateYear() {
        return toDateYear;
      }

      /** Year of date. Must be from 1 to 9999. */
      public GetUser setToDateYear(java.lang.Integer toDateYear) {
        this.toDateYear = toDateYear;
        return this;
      }

      @Override
      public GetUser set(String parameterName, Object value) {
        return (GetUser) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the Index collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code CloudSearch cloudsearch = new CloudSearch(...);}
     *   {@code CloudSearch.Index.List request = cloudsearch.index().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Index index() {
      return new Index();
    }

    /**
     * The "index" collection of methods.
     */
    public class Index {

      /**
       * An accessor for creating requests from the Datasources collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code CloudSearch cloudsearch = new CloudSearch(...);}
       *   {@code CloudSearch.Datasources.List request = cloudsearch.datasources().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Datasources datasources() {
        return new Datasources();
      }

      /**
       * The "datasources" collection of methods.
       */
      public class Datasources {

        /**
         * Gets indexed item statistics for a single data source. **Note:** This API requires a standard end
         * user account to execute.
         *
         * Create a request for the method "datasources.get".
         *
         * This request holds the parameters needed by the cloudsearch server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name The resource id of the data source to retrieve statistics for, in the following format:
         *        "datasources/{source_id}"
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.GetDataSourceIndexStatsResponse> {

          private static final String REST_PATH = "v1/stats/index/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^datasources/[^/]+$");

          /**
           * Gets indexed item statistics for a single data source. **Note:** This API requires a standard
           * end user account to execute.
           *
           * Create a request for the method "datasources.get".
           *
           * This request holds the parameters needed by the the cloudsearch server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The resource id of the data source to retrieve statistics for, in the following format:
         *        "datasources/{source_id}"
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(CloudSearch.this, "GET", REST_PATH, null, com.google.api.services.cloudsearch.v1.model.GetDataSourceIndexStatsResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^datasources/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The resource id of the data source to retrieve statistics for, in the following format:
           * "datasources/{source_id}"
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The resource id of the data source to retrieve statistics for, in the following format:
         "datasources/{source_id}"
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The resource id of the data source to retrieve statistics for, in the following format:
           * "datasources/{source_id}"
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^datasources/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** Day of month. Must be from 1 to 31 and valid for the year and month. */
          @com.google.api.client.util.Key("fromDate.day")
          private java.lang.Integer fromDateDay;

          /** Day of month. Must be from 1 to 31 and valid for the year and month.
           */
          public java.lang.Integer getFromDateDay() {
            return fromDateDay;
          }

          /** Day of month. Must be from 1 to 31 and valid for the year and month. */
          public Get setFromDateDay(java.lang.Integer fromDateDay) {
            this.fromDateDay = fromDateDay;
            return this;
          }

          /** Month of date. Must be from 1 to 12. */
          @com.google.api.client.util.Key("fromDate.month")
          private java.lang.Integer fromDateMonth;

          /** Month of date. Must be from 1 to 12.
           */
          public java.lang.Integer getFromDateMonth() {
            return fromDateMonth;
          }

          /** Month of date. Must be from 1 to 12. */
          public Get setFromDateMonth(java.lang.Integer fromDateMonth) {
            this.fromDateMonth = fromDateMonth;
            return this;
          }

          /** Year of date. Must be from 1 to 9999. */
          @com.google.api.client.util.Key("fromDate.year")
          private java.lang.Integer fromDateYear;

          /** Year of date. Must be from 1 to 9999.
           */
          public java.lang.Integer getFromDateYear() {
            return fromDateYear;
          }

          /** Year of date. Must be from 1 to 9999. */
          public Get setFromDateYear(java.lang.Integer fromDateYear) {
            this.fromDateYear = fromDateYear;
            return this;
          }

          /** Day of month. Must be from 1 to 31 and valid for the year and month. */
          @com.google.api.client.util.Key("toDate.day")
          private java.lang.Integer toDateDay;

          /** Day of month. Must be from 1 to 31 and valid for the year and month.
           */
          public java.lang.Integer getToDateDay() {
            return toDateDay;
          }

          /** Day of month. Must be from 1 to 31 and valid for the year and month. */
          public Get setToDateDay(java.lang.Integer toDateDay) {
            this.toDateDay = toDateDay;
            return this;
          }

          /** Month of date. Must be from 1 to 12. */
          @com.google.api.client.util.Key("toDate.month")
          private java.lang.Integer toDateMonth;

          /** Month of date. Must be from 1 to 12.
           */
          public java.lang.Integer getToDateMonth() {
            return toDateMonth;
          }

          /** Month of date. Must be from 1 to 12. */
          public Get setToDateMonth(java.lang.Integer toDateMonth) {
            this.toDateMonth = toDateMonth;
            return this;
          }

          /** Year of date. Must be from 1 to 9999. */
          @com.google.api.client.util.Key("toDate.year")
          private java.lang.Integer toDateYear;

          /** Year of date. Must be from 1 to 9999.
           */
          public java.lang.Integer getToDateYear() {
            return toDateYear;
          }

          /** Year of date. Must be from 1 to 9999. */
          public Get setToDateYear(java.lang.Integer toDateYear) {
            this.toDateYear = toDateYear;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }

      }
    }
    /**
     * An accessor for creating requests from the Query collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code CloudSearch cloudsearch = new CloudSearch(...);}
     *   {@code CloudSearch.Query.List request = cloudsearch.query().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Query query() {
      return new Query();
    }

    /**
     * The "query" collection of methods.
     */
    public class Query {

      /**
       * An accessor for creating requests from the Searchapplications collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code CloudSearch cloudsearch = new CloudSearch(...);}
       *   {@code CloudSearch.Searchapplications.List request = cloudsearch.searchapplications().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Searchapplications searchapplications() {
        return new Searchapplications();
      }

      /**
       * The "searchapplications" collection of methods.
       */
      public class Searchapplications {

        /**
         * Get the query statistics for search application. **Note:** This API requires a standard end user
         * account to execute.
         *
         * Create a request for the method "searchapplications.get".
         *
         * This request holds the parameters needed by the cloudsearch server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name The resource id of the search application query stats, in the following format:
         *        searchapplications/{application_id}
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.GetSearchApplicationQueryStatsResponse> {

          private static final String REST_PATH = "v1/stats/query/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^searchapplications/[^/]+$");

          /**
           * Get the query statistics for search application. **Note:** This API requires a standard end
           * user account to execute.
           *
           * Create a request for the method "searchapplications.get".
           *
           * This request holds the parameters needed by the the cloudsearch server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The resource id of the search application query stats, in the following format:
         *        searchapplications/{application_id}
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(CloudSearch.this, "GET", REST_PATH, null, com.google.api.services.cloudsearch.v1.model.GetSearchApplicationQueryStatsResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^searchapplications/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The resource id of the search application query stats, in the following format:
           * searchapplications/{application_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The resource id of the search application query stats, in the following format:
         searchapplications/{application_id}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The resource id of the search application query stats, in the following format:
           * searchapplications/{application_id}
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^searchapplications/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** Day of month. Must be from 1 to 31 and valid for the year and month. */
          @com.google.api.client.util.Key("fromDate.day")
          private java.lang.Integer fromDateDay;

          /** Day of month. Must be from 1 to 31 and valid for the year and month.
           */
          public java.lang.Integer getFromDateDay() {
            return fromDateDay;
          }

          /** Day of month. Must be from 1 to 31 and valid for the year and month. */
          public Get setFromDateDay(java.lang.Integer fromDateDay) {
            this.fromDateDay = fromDateDay;
            return this;
          }

          /** Month of date. Must be from 1 to 12. */
          @com.google.api.client.util.Key("fromDate.month")
          private java.lang.Integer fromDateMonth;

          /** Month of date. Must be from 1 to 12.
           */
          public java.lang.Integer getFromDateMonth() {
            return fromDateMonth;
          }

          /** Month of date. Must be from 1 to 12. */
          public Get setFromDateMonth(java.lang.Integer fromDateMonth) {
            this.fromDateMonth = fromDateMonth;
            return this;
          }

          /** Year of date. Must be from 1 to 9999. */
          @com.google.api.client.util.Key("fromDate.year")
          private java.lang.Integer fromDateYear;

          /** Year of date. Must be from 1 to 9999.
           */
          public java.lang.Integer getFromDateYear() {
            return fromDateYear;
          }

          /** Year of date. Must be from 1 to 9999. */
          public Get setFromDateYear(java.lang.Integer fromDateYear) {
            this.fromDateYear = fromDateYear;
            return this;
          }

          /** Day of month. Must be from 1 to 31 and valid for the year and month. */
          @com.google.api.client.util.Key("toDate.day")
          private java.lang.Integer toDateDay;

          /** Day of month. Must be from 1 to 31 and valid for the year and month.
           */
          public java.lang.Integer getToDateDay() {
            return toDateDay;
          }

          /** Day of month. Must be from 1 to 31 and valid for the year and month. */
          public Get setToDateDay(java.lang.Integer toDateDay) {
            this.toDateDay = toDateDay;
            return this;
          }

          /** Month of date. Must be from 1 to 12. */
          @com.google.api.client.util.Key("toDate.month")
          private java.lang.Integer toDateMonth;

          /** Month of date. Must be from 1 to 12.
           */
          public java.lang.Integer getToDateMonth() {
            return toDateMonth;
          }

          /** Month of date. Must be from 1 to 12. */
          public Get setToDateMonth(java.lang.Integer toDateMonth) {
            this.toDateMonth = toDateMonth;
            return this;
          }

          /** Year of date. Must be from 1 to 9999. */
          @com.google.api.client.util.Key("toDate.year")
          private java.lang.Integer toDateYear;

          /** Year of date. Must be from 1 to 9999.
           */
          public java.lang.Integer getToDateYear() {
            return toDateYear;
          }

          /** Year of date. Must be from 1 to 9999. */
          public Get setToDateYear(java.lang.Integer toDateYear) {
            this.toDateYear = toDateYear;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }

      }
    }
    /**
     * An accessor for creating requests from the Session collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code CloudSearch cloudsearch = new CloudSearch(...);}
     *   {@code CloudSearch.Session.List request = cloudsearch.session().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Session session() {
      return new Session();
    }

    /**
     * The "session" collection of methods.
     */
    public class Session {

      /**
       * An accessor for creating requests from the Searchapplications collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code CloudSearch cloudsearch = new CloudSearch(...);}
       *   {@code CloudSearch.Searchapplications.List request = cloudsearch.searchapplications().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Searchapplications searchapplications() {
        return new Searchapplications();
      }

      /**
       * The "searchapplications" collection of methods.
       */
      public class Searchapplications {

        /**
         * Get the # of search sessions, % of successful sessions with a click query statistics for search
         * application. **Note:** This API requires a standard end user account to execute.
         *
         * Create a request for the method "searchapplications.get".
         *
         * This request holds the parameters needed by the cloudsearch server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name The resource id of the search application session stats, in the following format:
         *        searchapplications/{application_id}
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.GetSearchApplicationSessionStatsResponse> {

          private static final String REST_PATH = "v1/stats/session/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^searchapplications/[^/]+$");

          /**
           * Get the # of search sessions, % of successful sessions with a click query statistics for search
           * application. **Note:** This API requires a standard end user account to execute.
           *
           * Create a request for the method "searchapplications.get".
           *
           * This request holds the parameters needed by the the cloudsearch server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The resource id of the search application session stats, in the following format:
         *        searchapplications/{application_id}
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(CloudSearch.this, "GET", REST_PATH, null, com.google.api.services.cloudsearch.v1.model.GetSearchApplicationSessionStatsResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^searchapplications/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The resource id of the search application session stats, in the following format:
           * searchapplications/{application_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The resource id of the search application session stats, in the following format:
         searchapplications/{application_id}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The resource id of the search application session stats, in the following format:
           * searchapplications/{application_id}
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^searchapplications/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** Day of month. Must be from 1 to 31 and valid for the year and month. */
          @com.google.api.client.util.Key("fromDate.day")
          private java.lang.Integer fromDateDay;

          /** Day of month. Must be from 1 to 31 and valid for the year and month.
           */
          public java.lang.Integer getFromDateDay() {
            return fromDateDay;
          }

          /** Day of month. Must be from 1 to 31 and valid for the year and month. */
          public Get setFromDateDay(java.lang.Integer fromDateDay) {
            this.fromDateDay = fromDateDay;
            return this;
          }

          /** Month of date. Must be from 1 to 12. */
          @com.google.api.client.util.Key("fromDate.month")
          private java.lang.Integer fromDateMonth;

          /** Month of date. Must be from 1 to 12.
           */
          public java.lang.Integer getFromDateMonth() {
            return fromDateMonth;
          }

          /** Month of date. Must be from 1 to 12. */
          public Get setFromDateMonth(java.lang.Integer fromDateMonth) {
            this.fromDateMonth = fromDateMonth;
            return this;
          }

          /** Year of date. Must be from 1 to 9999. */
          @com.google.api.client.util.Key("fromDate.year")
          private java.lang.Integer fromDateYear;

          /** Year of date. Must be from 1 to 9999.
           */
          public java.lang.Integer getFromDateYear() {
            return fromDateYear;
          }

          /** Year of date. Must be from 1 to 9999. */
          public Get setFromDateYear(java.lang.Integer fromDateYear) {
            this.fromDateYear = fromDateYear;
            return this;
          }

          /** Day of month. Must be from 1 to 31 and valid for the year and month. */
          @com.google.api.client.util.Key("toDate.day")
          private java.lang.Integer toDateDay;

          /** Day of month. Must be from 1 to 31 and valid for the year and month.
           */
          public java.lang.Integer getToDateDay() {
            return toDateDay;
          }

          /** Day of month. Must be from 1 to 31 and valid for the year and month. */
          public Get setToDateDay(java.lang.Integer toDateDay) {
            this.toDateDay = toDateDay;
            return this;
          }

          /** Month of date. Must be from 1 to 12. */
          @com.google.api.client.util.Key("toDate.month")
          private java.lang.Integer toDateMonth;

          /** Month of date. Must be from 1 to 12.
           */
          public java.lang.Integer getToDateMonth() {
            return toDateMonth;
          }

          /** Month of date. Must be from 1 to 12. */
          public Get setToDateMonth(java.lang.Integer toDateMonth) {
            this.toDateMonth = toDateMonth;
            return this;
          }

          /** Year of date. Must be from 1 to 9999. */
          @com.google.api.client.util.Key("toDate.year")
          private java.lang.Integer toDateYear;

          /** Year of date. Must be from 1 to 9999.
           */
          public java.lang.Integer getToDateYear() {
            return toDateYear;
          }

          /** Year of date. Must be from 1 to 9999. */
          public Get setToDateYear(java.lang.Integer toDateYear) {
            this.toDateYear = toDateYear;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }

      }
    }
    /**
     * An accessor for creating requests from the User collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code CloudSearch cloudsearch = new CloudSearch(...);}
     *   {@code CloudSearch.User.List request = cloudsearch.user().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public User user() {
      return new User();
    }

    /**
     * The "user" collection of methods.
     */
    public class User {

      /**
       * An accessor for creating requests from the Searchapplications collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code CloudSearch cloudsearch = new CloudSearch(...);}
       *   {@code CloudSearch.Searchapplications.List request = cloudsearch.searchapplications().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Searchapplications searchapplications() {
        return new Searchapplications();
      }

      /**
       * The "searchapplications" collection of methods.
       */
      public class Searchapplications {

        /**
         * Get the users statistics for search application. **Note:** This API requires a standard end user
         * account to execute.
         *
         * Create a request for the method "searchapplications.get".
         *
         * This request holds the parameters needed by the cloudsearch server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name The resource id of the search application session stats, in the following format:
         *        searchapplications/{application_id}
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.GetSearchApplicationUserStatsResponse> {

          private static final String REST_PATH = "v1/stats/user/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^searchapplications/[^/]+$");

          /**
           * Get the users statistics for search application. **Note:** This API requires a standard end
           * user account to execute.
           *
           * Create a request for the method "searchapplications.get".
           *
           * This request holds the parameters needed by the the cloudsearch server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The resource id of the search application session stats, in the following format:
         *        searchapplications/{application_id}
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(CloudSearch.this, "GET", REST_PATH, null, com.google.api.services.cloudsearch.v1.model.GetSearchApplicationUserStatsResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^searchapplications/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The resource id of the search application session stats, in the following format:
           * searchapplications/{application_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The resource id of the search application session stats, in the following format:
         searchapplications/{application_id}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The resource id of the search application session stats, in the following format:
           * searchapplications/{application_id}
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^searchapplications/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** Day of month. Must be from 1 to 31 and valid for the year and month. */
          @com.google.api.client.util.Key("fromDate.day")
          private java.lang.Integer fromDateDay;

          /** Day of month. Must be from 1 to 31 and valid for the year and month.
           */
          public java.lang.Integer getFromDateDay() {
            return fromDateDay;
          }

          /** Day of month. Must be from 1 to 31 and valid for the year and month. */
          public Get setFromDateDay(java.lang.Integer fromDateDay) {
            this.fromDateDay = fromDateDay;
            return this;
          }

          /** Month of date. Must be from 1 to 12. */
          @com.google.api.client.util.Key("fromDate.month")
          private java.lang.Integer fromDateMonth;

          /** Month of date. Must be from 1 to 12.
           */
          public java.lang.Integer getFromDateMonth() {
            return fromDateMonth;
          }

          /** Month of date. Must be from 1 to 12. */
          public Get setFromDateMonth(java.lang.Integer fromDateMonth) {
            this.fromDateMonth = fromDateMonth;
            return this;
          }

          /** Year of date. Must be from 1 to 9999. */
          @com.google.api.client.util.Key("fromDate.year")
          private java.lang.Integer fromDateYear;

          /** Year of date. Must be from 1 to 9999.
           */
          public java.lang.Integer getFromDateYear() {
            return fromDateYear;
          }

          /** Year of date. Must be from 1 to 9999. */
          public Get setFromDateYear(java.lang.Integer fromDateYear) {
            this.fromDateYear = fromDateYear;
            return this;
          }

          /** Day of month. Must be from 1 to 31 and valid for the year and month. */
          @com.google.api.client.util.Key("toDate.day")
          private java.lang.Integer toDateDay;

          /** Day of month. Must be from 1 to 31 and valid for the year and month.
           */
          public java.lang.Integer getToDateDay() {
            return toDateDay;
          }

          /** Day of month. Must be from 1 to 31 and valid for the year and month. */
          public Get setToDateDay(java.lang.Integer toDateDay) {
            this.toDateDay = toDateDay;
            return this;
          }

          /** Month of date. Must be from 1 to 12. */
          @com.google.api.client.util.Key("toDate.month")
          private java.lang.Integer toDateMonth;

          /** Month of date. Must be from 1 to 12.
           */
          public java.lang.Integer getToDateMonth() {
            return toDateMonth;
          }

          /** Month of date. Must be from 1 to 12. */
          public Get setToDateMonth(java.lang.Integer toDateMonth) {
            this.toDateMonth = toDateMonth;
            return this;
          }

          /** Year of date. Must be from 1 to 9999. */
          @com.google.api.client.util.Key("toDate.year")
          private java.lang.Integer toDateYear;

          /** Year of date. Must be from 1 to 9999.
           */
          public java.lang.Integer getToDateYear() {
            return toDateYear;
          }

          /** Year of date. Must be from 1 to 9999. */
          public Get setToDateYear(java.lang.Integer toDateYear) {
            this.toDateYear = toDateYear;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }

      }
    }
  }

  /**
   * An accessor for creating requests from the V1 collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code CloudSearch cloudsearch = new CloudSearch(...);}
   *   {@code CloudSearch.V1.List request = cloudsearch.v1().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public V1 v1() {
    return new V1();
  }

  /**
   * The "v1" collection of methods.
   */
  public class V1 {

    /**
     * Enables `third party` support in Google Cloud Search. **Note:** This API requires an admin
     * account to execute.
     *
     * Create a request for the method "v1.initializeCustomer".
     *
     * This request holds the parameters needed by the cloudsearch server.  After setting any optional
     * parameters, call the {@link InitializeCustomer#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.cloudsearch.v1.model.InitializeCustomerRequest}
     * @return the request
     */
    public InitializeCustomer initializeCustomer(com.google.api.services.cloudsearch.v1.model.InitializeCustomerRequest content) throws java.io.IOException {
      InitializeCustomer result = new InitializeCustomer(content);
      initialize(result);
      return result;
    }

    public class InitializeCustomer extends CloudSearchRequest<com.google.api.services.cloudsearch.v1.model.Operation> {

      private static final String REST_PATH = "v1:initializeCustomer";

      /**
       * Enables `third party` support in Google Cloud Search. **Note:** This API requires an admin
       * account to execute.
       *
       * Create a request for the method "v1.initializeCustomer".
       *
       * This request holds the parameters needed by the the cloudsearch server.  After setting any
       * optional parameters, call the {@link InitializeCustomer#execute()} method to invoke the remote
       * operation. <p> {@link InitializeCustomer#initialize(com.google.api.client.googleapis.services.A
       * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.cloudsearch.v1.model.InitializeCustomerRequest}
       * @since 1.13
       */
      protected InitializeCustomer(com.google.api.services.cloudsearch.v1.model.InitializeCustomerRequest content) {
        super(CloudSearch.this, "POST", REST_PATH, content, com.google.api.services.cloudsearch.v1.model.Operation.class);
      }

      @Override
      public InitializeCustomer set$Xgafv(java.lang.String $Xgafv) {
        return (InitializeCustomer) super.set$Xgafv($Xgafv);
      }

      @Override
      public InitializeCustomer setAccessToken(java.lang.String accessToken) {
        return (InitializeCustomer) super.setAccessToken(accessToken);
      }

      @Override
      public InitializeCustomer setAlt(java.lang.String alt) {
        return (InitializeCustomer) super.setAlt(alt);
      }

      @Override
      public InitializeCustomer setCallback(java.lang.String callback) {
        return (InitializeCustomer) super.setCallback(callback);
      }

      @Override
      public InitializeCustomer setFields(java.lang.String fields) {
        return (InitializeCustomer) super.setFields(fields);
      }

      @Override
      public InitializeCustomer setKey(java.lang.String key) {
        return (InitializeCustomer) super.setKey(key);
      }

      @Override
      public InitializeCustomer setOauthToken(java.lang.String oauthToken) {
        return (InitializeCustomer) super.setOauthToken(oauthToken);
      }

      @Override
      public InitializeCustomer setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (InitializeCustomer) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public InitializeCustomer setQuotaUser(java.lang.String quotaUser) {
        return (InitializeCustomer) super.setQuotaUser(quotaUser);
      }

      @Override
      public InitializeCustomer setUploadType(java.lang.String uploadType) {
        return (InitializeCustomer) super.setUploadType(uploadType);
      }

      @Override
      public InitializeCustomer setUploadProtocol(java.lang.String uploadProtocol) {
        return (InitializeCustomer) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public InitializeCustomer set(String parameterName, Object value) {
        return (InitializeCustomer) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link CloudSearch}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link CloudSearch}. */
    @Override
    public CloudSearch build() {
      return new CloudSearch(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link CloudSearchRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setCloudSearchRequestInitializer(
        CloudSearchRequestInitializer cloudsearchRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(cloudsearchRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
