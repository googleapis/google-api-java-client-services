/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.firestore.v1.model;

/**
 * The request for FirestoreAdmin.BulkDeleteDocuments. When both collection_ids and namespace_ids
 * are set, only documents satisfying both conditions will be deleted. Requests with namespace_ids
 * and collection_ids both empty will be rejected. Please use FirestoreAdmin.DeleteDatabase instead.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Firestore API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleFirestoreAdminV1BulkDeleteDocumentsRequest extends com.google.api.client.json.GenericJson {

  /**
   * Optional. IDs of the collection groups to delete. Unspecified means all collection groups. Each
   * collection group in this list must be unique.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> collectionIds;

  /**
   * Optional. Namespaces to delete. An empty list means all namespaces. This is the recommended
   * usage for databases that don't use namespaces. An empty string element represents the default
   * namespace. This should be used if the database has data in non-default namespaces, but doesn't
   * want to delete from them. Each namespace in this list must be unique.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> namespaceIds;

  /**
   * Optional. IDs of the collection groups to delete. Unspecified means all collection groups. Each
   * collection group in this list must be unique.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getCollectionIds() {
    return collectionIds;
  }

  /**
   * Optional. IDs of the collection groups to delete. Unspecified means all collection groups. Each
   * collection group in this list must be unique.
   * @param collectionIds collectionIds or {@code null} for none
   */
  public GoogleFirestoreAdminV1BulkDeleteDocumentsRequest setCollectionIds(java.util.List<java.lang.String> collectionIds) {
    this.collectionIds = collectionIds;
    return this;
  }

  /**
   * Optional. Namespaces to delete. An empty list means all namespaces. This is the recommended
   * usage for databases that don't use namespaces. An empty string element represents the default
   * namespace. This should be used if the database has data in non-default namespaces, but doesn't
   * want to delete from them. Each namespace in this list must be unique.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getNamespaceIds() {
    return namespaceIds;
  }

  /**
   * Optional. Namespaces to delete. An empty list means all namespaces. This is the recommended
   * usage for databases that don't use namespaces. An empty string element represents the default
   * namespace. This should be used if the database has data in non-default namespaces, but doesn't
   * want to delete from them. Each namespace in this list must be unique.
   * @param namespaceIds namespaceIds or {@code null} for none
   */
  public GoogleFirestoreAdminV1BulkDeleteDocumentsRequest setNamespaceIds(java.util.List<java.lang.String> namespaceIds) {
    this.namespaceIds = namespaceIds;
    return this;
  }

  @Override
  public GoogleFirestoreAdminV1BulkDeleteDocumentsRequest set(String fieldName, Object value) {
    return (GoogleFirestoreAdminV1BulkDeleteDocumentsRequest) super.set(fieldName, value);
  }

  @Override
  public GoogleFirestoreAdminV1BulkDeleteDocumentsRequest clone() {
    return (GoogleFirestoreAdminV1BulkDeleteDocumentsRequest) super.clone();
  }

}
