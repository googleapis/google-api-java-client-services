/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.bigtableadmin.v2.model;

/**
 * The request for CopyBackup.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Bigtable Admin API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class CopyBackupRequest extends com.google.api.client.json.GenericJson {

  /**
   * Required. The id of the new backup. The `backup_id` along with `parent` are combined as
   * {parent}/backups/{backup_id} to create the full backup name, of the form:
   * `projects/{project}/instances/{instance}/clusters/{cluster}/backups/{backup_id}`. This string
   * must be between 1 and 50 characters in length and match the regex _a-zA-Z0-9*.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String backupId;

  /**
   * Required. Required. The expiration time of the copied backup with microsecond granularity that
   * must be at least 6 hours and at most 30 days from the time the request is received. Once the
   * `expire_time` has passed, Cloud Bigtable will delete the backup and free the resources used by
   * the backup.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String expireTime;

  /**
   * Required. The source backup to be copied from. The source backup needs to be in READY state for
   * it to be copied. Copying a copied backup is not allowed. Once CopyBackup is in progress, the
   * source backup cannot be deleted or cleaned up on expiration until CopyBackup is finished.
   * Values are of the form: `projects//instances//clusters//backups/`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String sourceBackup;

  /**
   * Required. The id of the new backup. The `backup_id` along with `parent` are combined as
   * {parent}/backups/{backup_id} to create the full backup name, of the form:
   * `projects/{project}/instances/{instance}/clusters/{cluster}/backups/{backup_id}`. This string
   * must be between 1 and 50 characters in length and match the regex _a-zA-Z0-9*.
   * @return value or {@code null} for none
   */
  public java.lang.String getBackupId() {
    return backupId;
  }

  /**
   * Required. The id of the new backup. The `backup_id` along with `parent` are combined as
   * {parent}/backups/{backup_id} to create the full backup name, of the form:
   * `projects/{project}/instances/{instance}/clusters/{cluster}/backups/{backup_id}`. This string
   * must be between 1 and 50 characters in length and match the regex _a-zA-Z0-9*.
   * @param backupId backupId or {@code null} for none
   */
  public CopyBackupRequest setBackupId(java.lang.String backupId) {
    this.backupId = backupId;
    return this;
  }

  /**
   * Required. Required. The expiration time of the copied backup with microsecond granularity that
   * must be at least 6 hours and at most 30 days from the time the request is received. Once the
   * `expire_time` has passed, Cloud Bigtable will delete the backup and free the resources used by
   * the backup.
   * @return value or {@code null} for none
   */
  public String getExpireTime() {
    return expireTime;
  }

  /**
   * Required. Required. The expiration time of the copied backup with microsecond granularity that
   * must be at least 6 hours and at most 30 days from the time the request is received. Once the
   * `expire_time` has passed, Cloud Bigtable will delete the backup and free the resources used by
   * the backup.
   * @param expireTime expireTime or {@code null} for none
   */
  public CopyBackupRequest setExpireTime(String expireTime) {
    this.expireTime = expireTime;
    return this;
  }

  /**
   * Required. The source backup to be copied from. The source backup needs to be in READY state for
   * it to be copied. Copying a copied backup is not allowed. Once CopyBackup is in progress, the
   * source backup cannot be deleted or cleaned up on expiration until CopyBackup is finished.
   * Values are of the form: `projects//instances//clusters//backups/`.
   * @return value or {@code null} for none
   */
  public java.lang.String getSourceBackup() {
    return sourceBackup;
  }

  /**
   * Required. The source backup to be copied from. The source backup needs to be in READY state for
   * it to be copied. Copying a copied backup is not allowed. Once CopyBackup is in progress, the
   * source backup cannot be deleted or cleaned up on expiration until CopyBackup is finished.
   * Values are of the form: `projects//instances//clusters//backups/`.
   * @param sourceBackup sourceBackup or {@code null} for none
   */
  public CopyBackupRequest setSourceBackup(java.lang.String sourceBackup) {
    this.sourceBackup = sourceBackup;
    return this;
  }

  @Override
  public CopyBackupRequest set(String fieldName, Object value) {
    return (CopyBackupRequest) super.set(fieldName, value);
  }

  @Override
  public CopyBackupRequest clone() {
    return (CopyBackupRequest) super.clone();
  }

}
