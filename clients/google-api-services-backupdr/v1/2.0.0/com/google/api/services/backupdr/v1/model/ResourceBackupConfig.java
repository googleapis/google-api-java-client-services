/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.backupdr.v1.model;

/**
 * ResourceBackupConfig represents a resource along with its backup configurations.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Backup and DR Service API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ResourceBackupConfig extends com.google.api.client.json.GenericJson {

  /**
   * Backup configurations applying to the target resource, including those targeting its
   * related/child resources. For example, backup configuration applicable to Compute Engine disks
   * will be populated in this field for a Compute Engine VM which has the disk associated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<BackupConfigDetails> backupConfigsDetails;

  static {
    // hack to force ProGuard to consider BackupConfigDetails used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(BackupConfigDetails.class);
  }

  /**
   * Output only. Whether the target resource is configured for backup. This is true if the
   * backup_configs_details is not empty.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean backupConfigured;

  /**
   * Identifier. The resource name of the ResourceBackupConfig. Format:
   * projects/{project}/locations/{location}/resourceBackupConfigs/{uid}
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. The [full resource name](https://cloud.google.com/asset-inventory/docs/resource-
   * name-format) of the cloud resource that this configuration applies to. Supported resource types
   * are ResourceBackupConfig.ResourceType.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String targetResource;

  /**
   * Output only. The human friendly name of the target resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String targetResourceDisplayName;

  /**
   * Labels associated with the target resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> targetResourceLabels;

  /**
   * Output only. The type of the target resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String targetResourceType;

  /**
   * Output only. The unique identifier of the resource backup config.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String uid;

  /**
   * Output only. Whether the target resource is protected by a backup vault. This is true if the
   * backup_configs_details is not empty and any of the ResourceBackupConfig.backup_configs_details
   * has a backup configuration with BackupConfigDetails.backup_vault set. set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean vaulted;

  /**
   * Backup configurations applying to the target resource, including those targeting its
   * related/child resources. For example, backup configuration applicable to Compute Engine disks
   * will be populated in this field for a Compute Engine VM which has the disk associated.
   * @return value or {@code null} for none
   */
  public java.util.List<BackupConfigDetails> getBackupConfigsDetails() {
    return backupConfigsDetails;
  }

  /**
   * Backup configurations applying to the target resource, including those targeting its
   * related/child resources. For example, backup configuration applicable to Compute Engine disks
   * will be populated in this field for a Compute Engine VM which has the disk associated.
   * @param backupConfigsDetails backupConfigsDetails or {@code null} for none
   */
  public ResourceBackupConfig setBackupConfigsDetails(java.util.List<BackupConfigDetails> backupConfigsDetails) {
    this.backupConfigsDetails = backupConfigsDetails;
    return this;
  }

  /**
   * Output only. Whether the target resource is configured for backup. This is true if the
   * backup_configs_details is not empty.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getBackupConfigured() {
    return backupConfigured;
  }

  /**
   * Output only. Whether the target resource is configured for backup. This is true if the
   * backup_configs_details is not empty.
   * @param backupConfigured backupConfigured or {@code null} for none
   */
  public ResourceBackupConfig setBackupConfigured(java.lang.Boolean backupConfigured) {
    this.backupConfigured = backupConfigured;
    return this;
  }

  /**
   * Identifier. The resource name of the ResourceBackupConfig. Format:
   * projects/{project}/locations/{location}/resourceBackupConfigs/{uid}
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Identifier. The resource name of the ResourceBackupConfig. Format:
   * projects/{project}/locations/{location}/resourceBackupConfigs/{uid}
   * @param name name or {@code null} for none
   */
  public ResourceBackupConfig setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. The [full resource name](https://cloud.google.com/asset-inventory/docs/resource-
   * name-format) of the cloud resource that this configuration applies to. Supported resource types
   * are ResourceBackupConfig.ResourceType.
   * @return value or {@code null} for none
   */
  public java.lang.String getTargetResource() {
    return targetResource;
  }

  /**
   * Output only. The [full resource name](https://cloud.google.com/asset-inventory/docs/resource-
   * name-format) of the cloud resource that this configuration applies to. Supported resource types
   * are ResourceBackupConfig.ResourceType.
   * @param targetResource targetResource or {@code null} for none
   */
  public ResourceBackupConfig setTargetResource(java.lang.String targetResource) {
    this.targetResource = targetResource;
    return this;
  }

  /**
   * Output only. The human friendly name of the target resource.
   * @return value or {@code null} for none
   */
  public java.lang.String getTargetResourceDisplayName() {
    return targetResourceDisplayName;
  }

  /**
   * Output only. The human friendly name of the target resource.
   * @param targetResourceDisplayName targetResourceDisplayName or {@code null} for none
   */
  public ResourceBackupConfig setTargetResourceDisplayName(java.lang.String targetResourceDisplayName) {
    this.targetResourceDisplayName = targetResourceDisplayName;
    return this;
  }

  /**
   * Labels associated with the target resource.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getTargetResourceLabels() {
    return targetResourceLabels;
  }

  /**
   * Labels associated with the target resource.
   * @param targetResourceLabels targetResourceLabels or {@code null} for none
   */
  public ResourceBackupConfig setTargetResourceLabels(java.util.Map<String, java.lang.String> targetResourceLabels) {
    this.targetResourceLabels = targetResourceLabels;
    return this;
  }

  /**
   * Output only. The type of the target resource.
   * @return value or {@code null} for none
   */
  public java.lang.String getTargetResourceType() {
    return targetResourceType;
  }

  /**
   * Output only. The type of the target resource.
   * @param targetResourceType targetResourceType or {@code null} for none
   */
  public ResourceBackupConfig setTargetResourceType(java.lang.String targetResourceType) {
    this.targetResourceType = targetResourceType;
    return this;
  }

  /**
   * Output only. The unique identifier of the resource backup config.
   * @return value or {@code null} for none
   */
  public java.lang.String getUid() {
    return uid;
  }

  /**
   * Output only. The unique identifier of the resource backup config.
   * @param uid uid or {@code null} for none
   */
  public ResourceBackupConfig setUid(java.lang.String uid) {
    this.uid = uid;
    return this;
  }

  /**
   * Output only. Whether the target resource is protected by a backup vault. This is true if the
   * backup_configs_details is not empty and any of the ResourceBackupConfig.backup_configs_details
   * has a backup configuration with BackupConfigDetails.backup_vault set. set.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getVaulted() {
    return vaulted;
  }

  /**
   * Output only. Whether the target resource is protected by a backup vault. This is true if the
   * backup_configs_details is not empty and any of the ResourceBackupConfig.backup_configs_details
   * has a backup configuration with BackupConfigDetails.backup_vault set. set.
   * @param vaulted vaulted or {@code null} for none
   */
  public ResourceBackupConfig setVaulted(java.lang.Boolean vaulted) {
    this.vaulted = vaulted;
    return this;
  }

  @Override
  public ResourceBackupConfig set(String fieldName, Object value) {
    return (ResourceBackupConfig) super.set(fieldName, value);
  }

  @Override
  public ResourceBackupConfig clone() {
    return (ResourceBackupConfig) super.clone();
  }

}
