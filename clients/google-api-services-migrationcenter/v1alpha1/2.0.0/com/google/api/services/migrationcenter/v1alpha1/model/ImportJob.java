/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.migrationcenter.v1alpha1.model;

/**
 * A resource that represents the background job that imports asset frames.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Migration Center API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ImportJob extends com.google.api.client.json.GenericJson {

  /**
   * Required. Reference to a source.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String assetSource;

  /**
   * Output only. The timestamp when the import job was completed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String completeTime;

  /**
   * Output only. The timestamp when the import job was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * User-friendly display name. Maximum length is 63 characters.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Output only. The report with the results of running the import job.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ExecutionReport executionReport;

  /**
   * The payload is in Google Cloud Storage.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GCSPayloadInfo gcsPayload;

  /**
   * The payload is included in the request, mainly used for small import jobs.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private InlinePayloadInfo inlinePayload;

  /**
   * Labels as key value pairs.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Output only. The full name of the import job.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. The state of the import job.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Output only. The timestamp when the import job was last updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Output only. The report with the validation results of the import job.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ValidationReport validationReport;

  /**
   * Required. Reference to a source.
   * @return value or {@code null} for none
   */
  public java.lang.String getAssetSource() {
    return assetSource;
  }

  /**
   * Required. Reference to a source.
   * @param assetSource assetSource or {@code null} for none
   */
  public ImportJob setAssetSource(java.lang.String assetSource) {
    this.assetSource = assetSource;
    return this;
  }

  /**
   * Output only. The timestamp when the import job was completed.
   * @return value or {@code null} for none
   */
  public String getCompleteTime() {
    return completeTime;
  }

  /**
   * Output only. The timestamp when the import job was completed.
   * @param completeTime completeTime or {@code null} for none
   */
  public ImportJob setCompleteTime(String completeTime) {
    this.completeTime = completeTime;
    return this;
  }

  /**
   * Output only. The timestamp when the import job was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The timestamp when the import job was created.
   * @param createTime createTime or {@code null} for none
   */
  public ImportJob setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * User-friendly display name. Maximum length is 63 characters.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * User-friendly display name. Maximum length is 63 characters.
   * @param displayName displayName or {@code null} for none
   */
  public ImportJob setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Output only. The report with the results of running the import job.
   * @return value or {@code null} for none
   */
  public ExecutionReport getExecutionReport() {
    return executionReport;
  }

  /**
   * Output only. The report with the results of running the import job.
   * @param executionReport executionReport or {@code null} for none
   */
  public ImportJob setExecutionReport(ExecutionReport executionReport) {
    this.executionReport = executionReport;
    return this;
  }

  /**
   * The payload is in Google Cloud Storage.
   * @return value or {@code null} for none
   */
  public GCSPayloadInfo getGcsPayload() {
    return gcsPayload;
  }

  /**
   * The payload is in Google Cloud Storage.
   * @param gcsPayload gcsPayload or {@code null} for none
   */
  public ImportJob setGcsPayload(GCSPayloadInfo gcsPayload) {
    this.gcsPayload = gcsPayload;
    return this;
  }

  /**
   * The payload is included in the request, mainly used for small import jobs.
   * @return value or {@code null} for none
   */
  public InlinePayloadInfo getInlinePayload() {
    return inlinePayload;
  }

  /**
   * The payload is included in the request, mainly used for small import jobs.
   * @param inlinePayload inlinePayload or {@code null} for none
   */
  public ImportJob setInlinePayload(InlinePayloadInfo inlinePayload) {
    this.inlinePayload = inlinePayload;
    return this;
  }

  /**
   * Labels as key value pairs.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Labels as key value pairs.
   * @param labels labels or {@code null} for none
   */
  public ImportJob setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Output only. The full name of the import job.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. The full name of the import job.
   * @param name name or {@code null} for none
   */
  public ImportJob setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. The state of the import job.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. The state of the import job.
   * @param state state or {@code null} for none
   */
  public ImportJob setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Output only. The timestamp when the import job was last updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. The timestamp when the import job was last updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public ImportJob setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  /**
   * Output only. The report with the validation results of the import job.
   * @return value or {@code null} for none
   */
  public ValidationReport getValidationReport() {
    return validationReport;
  }

  /**
   * Output only. The report with the validation results of the import job.
   * @param validationReport validationReport or {@code null} for none
   */
  public ImportJob setValidationReport(ValidationReport validationReport) {
    this.validationReport = validationReport;
    return this;
  }

  @Override
  public ImportJob set(String fieldName, Object value) {
    return (ImportJob) super.set(fieldName, value);
  }

  @Override
  public ImportJob clone() {
    return (ImportJob) super.clone();
  }

}
