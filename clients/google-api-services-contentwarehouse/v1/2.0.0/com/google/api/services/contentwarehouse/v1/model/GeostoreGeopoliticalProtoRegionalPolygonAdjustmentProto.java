/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Raw polygon adjustments to apply to this feature's base polygon to construct a specific region's
 * view of this feature's polygon.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GeostoreGeopoliticalProtoRegionalPolygonAdjustmentProto extends com.google.api.client.json.GenericJson {

  /**
   * Polygon to add to the feature's base polygon to get the view for the given region. Applied
   * after polygon_to_subtract, such that any region contained in both polygons WILL be part of the
   * final result.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GeostorePolygonProto polygonToAdd;

  /**
   * Polygon to subtract from the feature's base polygon to get the view for the given region.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GeostorePolygonProto polygonToSubtract;

  /**
   * Region code (or other identifier) for the region.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String regionCode;

  /**
   * Polygon to add to the feature's base polygon to get the view for the given region. Applied
   * after polygon_to_subtract, such that any region contained in both polygons WILL be part of the
   * final result.
   * @return value or {@code null} for none
   */
  public GeostorePolygonProto getPolygonToAdd() {
    return polygonToAdd;
  }

  /**
   * Polygon to add to the feature's base polygon to get the view for the given region. Applied
   * after polygon_to_subtract, such that any region contained in both polygons WILL be part of the
   * final result.
   * @param polygonToAdd polygonToAdd or {@code null} for none
   */
  public GeostoreGeopoliticalProtoRegionalPolygonAdjustmentProto setPolygonToAdd(GeostorePolygonProto polygonToAdd) {
    this.polygonToAdd = polygonToAdd;
    return this;
  }

  /**
   * Polygon to subtract from the feature's base polygon to get the view for the given region.
   * @return value or {@code null} for none
   */
  public GeostorePolygonProto getPolygonToSubtract() {
    return polygonToSubtract;
  }

  /**
   * Polygon to subtract from the feature's base polygon to get the view for the given region.
   * @param polygonToSubtract polygonToSubtract or {@code null} for none
   */
  public GeostoreGeopoliticalProtoRegionalPolygonAdjustmentProto setPolygonToSubtract(GeostorePolygonProto polygonToSubtract) {
    this.polygonToSubtract = polygonToSubtract;
    return this;
  }

  /**
   * Region code (or other identifier) for the region.
   * @return value or {@code null} for none
   */
  public java.lang.String getRegionCode() {
    return regionCode;
  }

  /**
   * Region code (or other identifier) for the region.
   * @param regionCode regionCode or {@code null} for none
   */
  public GeostoreGeopoliticalProtoRegionalPolygonAdjustmentProto setRegionCode(java.lang.String regionCode) {
    this.regionCode = regionCode;
    return this;
  }

  @Override
  public GeostoreGeopoliticalProtoRegionalPolygonAdjustmentProto set(String fieldName, Object value) {
    return (GeostoreGeopoliticalProtoRegionalPolygonAdjustmentProto) super.set(fieldName, value);
  }

  @Override
  public GeostoreGeopoliticalProtoRegionalPolygonAdjustmentProto clone() {
    return (GeostoreGeopoliticalProtoRegionalPolygonAdjustmentProto) super.clone();
  }

}
