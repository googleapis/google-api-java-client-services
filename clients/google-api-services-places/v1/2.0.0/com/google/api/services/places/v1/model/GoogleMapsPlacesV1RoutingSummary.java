/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.places.v1.model;

/**
 * The duration and distance from the routing origin to a place in the response, and a second leg
 * from that place to the destination, if requested. **Note:** Adding `routingSummaries` in the
 * field mask without also including either the `routingParameters.origin` parameter or the
 * `searchAlongRouteParameters.polyline.encodedPolyline` parameter in the request causes an error.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Places API (New). For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleMapsPlacesV1RoutingSummary extends com.google.api.client.json.GenericJson {

  /**
   * A link to show directions on Google Maps using the waypoints from the given routing summary.
   * The route generated by this link is not guaranteed to be the same as the route used to generate
   * the routing summary. The link uses information provided in the request, from fields including
   * `routingParameters` and `searchAlongRouteParameters` when applicable, to generate the
   * directions link.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String directionsUri;

  /**
   * The legs of the trip. When you calculate travel duration and distance from a set origin, `legs`
   * contains a single leg containing the duration and distance from the origin to the destination.
   * When you do a search along route, `legs` contains two legs: one from the origin to place, and
   * one from the place to the destination.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleMapsPlacesV1RoutingSummaryLeg> legs;

  /**
   * A link to show directions on Google Maps using the waypoints from the given routing summary.
   * The route generated by this link is not guaranteed to be the same as the route used to generate
   * the routing summary. The link uses information provided in the request, from fields including
   * `routingParameters` and `searchAlongRouteParameters` when applicable, to generate the
   * directions link.
   * @return value or {@code null} for none
   */
  public java.lang.String getDirectionsUri() {
    return directionsUri;
  }

  /**
   * A link to show directions on Google Maps using the waypoints from the given routing summary.
   * The route generated by this link is not guaranteed to be the same as the route used to generate
   * the routing summary. The link uses information provided in the request, from fields including
   * `routingParameters` and `searchAlongRouteParameters` when applicable, to generate the
   * directions link.
   * @param directionsUri directionsUri or {@code null} for none
   */
  public GoogleMapsPlacesV1RoutingSummary setDirectionsUri(java.lang.String directionsUri) {
    this.directionsUri = directionsUri;
    return this;
  }

  /**
   * The legs of the trip. When you calculate travel duration and distance from a set origin, `legs`
   * contains a single leg containing the duration and distance from the origin to the destination.
   * When you do a search along route, `legs` contains two legs: one from the origin to place, and
   * one from the place to the destination.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleMapsPlacesV1RoutingSummaryLeg> getLegs() {
    return legs;
  }

  /**
   * The legs of the trip. When you calculate travel duration and distance from a set origin, `legs`
   * contains a single leg containing the duration and distance from the origin to the destination.
   * When you do a search along route, `legs` contains two legs: one from the origin to place, and
   * one from the place to the destination.
   * @param legs legs or {@code null} for none
   */
  public GoogleMapsPlacesV1RoutingSummary setLegs(java.util.List<GoogleMapsPlacesV1RoutingSummaryLeg> legs) {
    this.legs = legs;
    return this;
  }

  @Override
  public GoogleMapsPlacesV1RoutingSummary set(String fieldName, Object value) {
    return (GoogleMapsPlacesV1RoutingSummary) super.set(fieldName, value);
  }

  @Override
  public GoogleMapsPlacesV1RoutingSummary clone() {
    return (GoogleMapsPlacesV1RoutingSummary) super.clone();
  }

}
