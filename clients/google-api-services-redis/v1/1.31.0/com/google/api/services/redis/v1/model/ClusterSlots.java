/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.redis.v1.model;

/**
 * A series of slots belonging to a cluster.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Cloud Memorystore for Redis API. For a
 * detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ClusterSlots extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The end of the slots that make up this series.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer endSlotsExclusive;

  /**
   * Output only. The total size of keyspace this series has.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer memorySizeGb;

  /**
   * Output only. The number of replicas this series has.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer replicaCount;

  /**
   * Output only. The start of the slots that make up this series.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer startSlotsInclusive;

  /**
   * Output only. The end of the slots that make up this series.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getEndSlotsExclusive() {
    return endSlotsExclusive;
  }

  /**
   * Output only. The end of the slots that make up this series.
   * @param endSlotsExclusive endSlotsExclusive or {@code null} for none
   */
  public ClusterSlots setEndSlotsExclusive(java.lang.Integer endSlotsExclusive) {
    this.endSlotsExclusive = endSlotsExclusive;
    return this;
  }

  /**
   * Output only. The total size of keyspace this series has.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMemorySizeGb() {
    return memorySizeGb;
  }

  /**
   * Output only. The total size of keyspace this series has.
   * @param memorySizeGb memorySizeGb or {@code null} for none
   */
  public ClusterSlots setMemorySizeGb(java.lang.Integer memorySizeGb) {
    this.memorySizeGb = memorySizeGb;
    return this;
  }

  /**
   * Output only. The number of replicas this series has.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getReplicaCount() {
    return replicaCount;
  }

  /**
   * Output only. The number of replicas this series has.
   * @param replicaCount replicaCount or {@code null} for none
   */
  public ClusterSlots setReplicaCount(java.lang.Integer replicaCount) {
    this.replicaCount = replicaCount;
    return this;
  }

  /**
   * Output only. The start of the slots that make up this series.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getStartSlotsInclusive() {
    return startSlotsInclusive;
  }

  /**
   * Output only. The start of the slots that make up this series.
   * @param startSlotsInclusive startSlotsInclusive or {@code null} for none
   */
  public ClusterSlots setStartSlotsInclusive(java.lang.Integer startSlotsInclusive) {
    this.startSlotsInclusive = startSlotsInclusive;
    return this;
  }

  @Override
  public ClusterSlots set(String fieldName, Object value) {
    return (ClusterSlots) super.set(fieldName, value);
  }

  @Override
  public ClusterSlots clone() {
    return (ClusterSlots) super.clone();
  }

}
