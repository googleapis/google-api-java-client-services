/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.redis.v1beta1.model;

/**
 * Details of consumer resources in a PSC connection that is created through Service Connectivity
 * Automation.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Cloud Memorystore for Redis API. For a
 * detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class PscAutoConnection extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The IP allocated on the consumer network for the PSC forwarding rule.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String address;

  /**
   * Output only. Type of the PSC connection.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String connectionType;

  /**
   * Output only. The URI of the consumer side forwarding rule. Example:
   * projects/{projectNumOrId}/regions/us-east1/forwardingRules/{resourceId}.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String forwardingRule;

  /**
   * Required. The consumer network where the IP address resides, in the form of
   * projects/{project_id}/global/networks/{network_id}.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String network;

  /**
   * Required. The consumer project_id where the forwarding rule is created from.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String projectId;

  /**
   * Output only. The PSC connection id of the forwarding rule connected to the service attachment.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String pscConnectionId;

  /**
   * Output only. The status of the PSC connection. Please note that this value is updated
   * periodically. Please use Private Service Connect APIs for the latest status.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String pscConnectionStatus;

  /**
   * Output only. The service attachment which is the target of the PSC connection, in the form of
   * projects/{project-id}/regions/{region}/serviceAttachments/{service-attachment-id}.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String serviceAttachment;

  /**
   * Output only. The IP allocated on the consumer network for the PSC forwarding rule.
   * @return value or {@code null} for none
   */
  public java.lang.String getAddress() {
    return address;
  }

  /**
   * Output only. The IP allocated on the consumer network for the PSC forwarding rule.
   * @param address address or {@code null} for none
   */
  public PscAutoConnection setAddress(java.lang.String address) {
    this.address = address;
    return this;
  }

  /**
   * Output only. Type of the PSC connection.
   * @return value or {@code null} for none
   */
  public java.lang.String getConnectionType() {
    return connectionType;
  }

  /**
   * Output only. Type of the PSC connection.
   * @param connectionType connectionType or {@code null} for none
   */
  public PscAutoConnection setConnectionType(java.lang.String connectionType) {
    this.connectionType = connectionType;
    return this;
  }

  /**
   * Output only. The URI of the consumer side forwarding rule. Example:
   * projects/{projectNumOrId}/regions/us-east1/forwardingRules/{resourceId}.
   * @return value or {@code null} for none
   */
  public java.lang.String getForwardingRule() {
    return forwardingRule;
  }

  /**
   * Output only. The URI of the consumer side forwarding rule. Example:
   * projects/{projectNumOrId}/regions/us-east1/forwardingRules/{resourceId}.
   * @param forwardingRule forwardingRule or {@code null} for none
   */
  public PscAutoConnection setForwardingRule(java.lang.String forwardingRule) {
    this.forwardingRule = forwardingRule;
    return this;
  }

  /**
   * Required. The consumer network where the IP address resides, in the form of
   * projects/{project_id}/global/networks/{network_id}.
   * @return value or {@code null} for none
   */
  public java.lang.String getNetwork() {
    return network;
  }

  /**
   * Required. The consumer network where the IP address resides, in the form of
   * projects/{project_id}/global/networks/{network_id}.
   * @param network network or {@code null} for none
   */
  public PscAutoConnection setNetwork(java.lang.String network) {
    this.network = network;
    return this;
  }

  /**
   * Required. The consumer project_id where the forwarding rule is created from.
   * @return value or {@code null} for none
   */
  public java.lang.String getProjectId() {
    return projectId;
  }

  /**
   * Required. The consumer project_id where the forwarding rule is created from.
   * @param projectId projectId or {@code null} for none
   */
  public PscAutoConnection setProjectId(java.lang.String projectId) {
    this.projectId = projectId;
    return this;
  }

  /**
   * Output only. The PSC connection id of the forwarding rule connected to the service attachment.
   * @return value or {@code null} for none
   */
  public java.lang.String getPscConnectionId() {
    return pscConnectionId;
  }

  /**
   * Output only. The PSC connection id of the forwarding rule connected to the service attachment.
   * @param pscConnectionId pscConnectionId or {@code null} for none
   */
  public PscAutoConnection setPscConnectionId(java.lang.String pscConnectionId) {
    this.pscConnectionId = pscConnectionId;
    return this;
  }

  /**
   * Output only. The status of the PSC connection. Please note that this value is updated
   * periodically. Please use Private Service Connect APIs for the latest status.
   * @return value or {@code null} for none
   */
  public java.lang.String getPscConnectionStatus() {
    return pscConnectionStatus;
  }

  /**
   * Output only. The status of the PSC connection. Please note that this value is updated
   * periodically. Please use Private Service Connect APIs for the latest status.
   * @param pscConnectionStatus pscConnectionStatus or {@code null} for none
   */
  public PscAutoConnection setPscConnectionStatus(java.lang.String pscConnectionStatus) {
    this.pscConnectionStatus = pscConnectionStatus;
    return this;
  }

  /**
   * Output only. The service attachment which is the target of the PSC connection, in the form of
   * projects/{project-id}/regions/{region}/serviceAttachments/{service-attachment-id}.
   * @return value or {@code null} for none
   */
  public java.lang.String getServiceAttachment() {
    return serviceAttachment;
  }

  /**
   * Output only. The service attachment which is the target of the PSC connection, in the form of
   * projects/{project-id}/regions/{region}/serviceAttachments/{service-attachment-id}.
   * @param serviceAttachment serviceAttachment or {@code null} for none
   */
  public PscAutoConnection setServiceAttachment(java.lang.String serviceAttachment) {
    this.serviceAttachment = serviceAttachment;
    return this;
  }

  @Override
  public PscAutoConnection set(String fieldName, Object value) {
    return (PscAutoConnection) super.set(fieldName, value);
  }

  @Override
  public PscAutoConnection clone() {
    return (PscAutoConnection) super.clone();
  }

}
