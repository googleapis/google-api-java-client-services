/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * The information about spoken content that's based on purely the media resource contents (and not
 * the embedding page or context, etc).
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class IndexingSpeechSpeechPropertiesProto extends com.google.api.client.json.GenericJson {

  /**
   * Duration of audio in processed fragment (including non-speech), in seconds.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer audioDuration;

  /**
   * If true, the media file is audio-only. If false, also has video track(s).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean audioOnly;

  /**
   * Estimated duration of audio in the whole file (including non-speech), in seconds. If this is
   * greater than 0, then it will either be equal to audio_duration (when truncated_file is false),
   * or to the length of the content (audio or video) according to the file header (when
   * truncated_file is true).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer estimatedAudioDuration;

  /**
   * Our confidence in the duration estimate, on a scale from 0 (not confident) to 1 (very
   * confident). An estimate should have a confidence of at least 0.5 if it is to be shown to users.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float estimatedAudioDurationConfidence;

  /**
   * The spoken language, see i18n/identifiers/languagecode.h and go/gl2014. This may or may not
   * match the language of the written page. (Examples: "en", "sv", "zh-CN").
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String languageCode;

  /**
   * Total number of recognized words in processed fragment.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer numWords;

  /**
   * Measure of the estimated output accuracy from the speech recognition code, from 0 to 1. Based
   * on word-level confidence and possibly other factors.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float recognizerAccuracy;

  /**
   * Duration of speech in processed fragment, in seconds.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer speechDuration;

  /**
   * If true, we may have processed a truncated file (most likely due to a size-cutoff when
   * crawling). As a result, the audio duration is a lower bound and the other fields reflect only
   * the processed prefix of the file.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean truncatedFile;

  /**
   * Duration of audio in processed fragment (including non-speech), in seconds.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getAudioDuration() {
    return audioDuration;
  }

  /**
   * Duration of audio in processed fragment (including non-speech), in seconds.
   * @param audioDuration audioDuration or {@code null} for none
   */
  public IndexingSpeechSpeechPropertiesProto setAudioDuration(java.lang.Integer audioDuration) {
    this.audioDuration = audioDuration;
    return this;
  }

  /**
   * If true, the media file is audio-only. If false, also has video track(s).
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getAudioOnly() {
    return audioOnly;
  }

  /**
   * If true, the media file is audio-only. If false, also has video track(s).
   * @param audioOnly audioOnly or {@code null} for none
   */
  public IndexingSpeechSpeechPropertiesProto setAudioOnly(java.lang.Boolean audioOnly) {
    this.audioOnly = audioOnly;
    return this;
  }

  /**
   * Estimated duration of audio in the whole file (including non-speech), in seconds. If this is
   * greater than 0, then it will either be equal to audio_duration (when truncated_file is false),
   * or to the length of the content (audio or video) according to the file header (when
   * truncated_file is true).
   * @return value or {@code null} for none
   */
  public java.lang.Integer getEstimatedAudioDuration() {
    return estimatedAudioDuration;
  }

  /**
   * Estimated duration of audio in the whole file (including non-speech), in seconds. If this is
   * greater than 0, then it will either be equal to audio_duration (when truncated_file is false),
   * or to the length of the content (audio or video) according to the file header (when
   * truncated_file is true).
   * @param estimatedAudioDuration estimatedAudioDuration or {@code null} for none
   */
  public IndexingSpeechSpeechPropertiesProto setEstimatedAudioDuration(java.lang.Integer estimatedAudioDuration) {
    this.estimatedAudioDuration = estimatedAudioDuration;
    return this;
  }

  /**
   * Our confidence in the duration estimate, on a scale from 0 (not confident) to 1 (very
   * confident). An estimate should have a confidence of at least 0.5 if it is to be shown to users.
   * @return value or {@code null} for none
   */
  public java.lang.Float getEstimatedAudioDurationConfidence() {
    return estimatedAudioDurationConfidence;
  }

  /**
   * Our confidence in the duration estimate, on a scale from 0 (not confident) to 1 (very
   * confident). An estimate should have a confidence of at least 0.5 if it is to be shown to users.
   * @param estimatedAudioDurationConfidence estimatedAudioDurationConfidence or {@code null} for none
   */
  public IndexingSpeechSpeechPropertiesProto setEstimatedAudioDurationConfidence(java.lang.Float estimatedAudioDurationConfidence) {
    this.estimatedAudioDurationConfidence = estimatedAudioDurationConfidence;
    return this;
  }

  /**
   * The spoken language, see i18n/identifiers/languagecode.h and go/gl2014. This may or may not
   * match the language of the written page. (Examples: "en", "sv", "zh-CN").
   * @return value or {@code null} for none
   */
  public java.lang.String getLanguageCode() {
    return languageCode;
  }

  /**
   * The spoken language, see i18n/identifiers/languagecode.h and go/gl2014. This may or may not
   * match the language of the written page. (Examples: "en", "sv", "zh-CN").
   * @param languageCode languageCode or {@code null} for none
   */
  public IndexingSpeechSpeechPropertiesProto setLanguageCode(java.lang.String languageCode) {
    this.languageCode = languageCode;
    return this;
  }

  /**
   * Total number of recognized words in processed fragment.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getNumWords() {
    return numWords;
  }

  /**
   * Total number of recognized words in processed fragment.
   * @param numWords numWords or {@code null} for none
   */
  public IndexingSpeechSpeechPropertiesProto setNumWords(java.lang.Integer numWords) {
    this.numWords = numWords;
    return this;
  }

  /**
   * Measure of the estimated output accuracy from the speech recognition code, from 0 to 1. Based
   * on word-level confidence and possibly other factors.
   * @return value or {@code null} for none
   */
  public java.lang.Float getRecognizerAccuracy() {
    return recognizerAccuracy;
  }

  /**
   * Measure of the estimated output accuracy from the speech recognition code, from 0 to 1. Based
   * on word-level confidence and possibly other factors.
   * @param recognizerAccuracy recognizerAccuracy or {@code null} for none
   */
  public IndexingSpeechSpeechPropertiesProto setRecognizerAccuracy(java.lang.Float recognizerAccuracy) {
    this.recognizerAccuracy = recognizerAccuracy;
    return this;
  }

  /**
   * Duration of speech in processed fragment, in seconds.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getSpeechDuration() {
    return speechDuration;
  }

  /**
   * Duration of speech in processed fragment, in seconds.
   * @param speechDuration speechDuration or {@code null} for none
   */
  public IndexingSpeechSpeechPropertiesProto setSpeechDuration(java.lang.Integer speechDuration) {
    this.speechDuration = speechDuration;
    return this;
  }

  /**
   * If true, we may have processed a truncated file (most likely due to a size-cutoff when
   * crawling). As a result, the audio duration is a lower bound and the other fields reflect only
   * the processed prefix of the file.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getTruncatedFile() {
    return truncatedFile;
  }

  /**
   * If true, we may have processed a truncated file (most likely due to a size-cutoff when
   * crawling). As a result, the audio duration is a lower bound and the other fields reflect only
   * the processed prefix of the file.
   * @param truncatedFile truncatedFile or {@code null} for none
   */
  public IndexingSpeechSpeechPropertiesProto setTruncatedFile(java.lang.Boolean truncatedFile) {
    this.truncatedFile = truncatedFile;
    return this;
  }

  @Override
  public IndexingSpeechSpeechPropertiesProto set(String fieldName, Object value) {
    return (IndexingSpeechSpeechPropertiesProto) super.set(fieldName, value);
  }

  @Override
  public IndexingSpeechSpeechPropertiesProto clone() {
    return (IndexingSpeechSpeechPropertiesProto) super.clone();
  }

}
