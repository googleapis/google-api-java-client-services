/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.monitoring.v1.model;

/**
 * The data represented by the treemap. Needs to include the data itself, plus rules on how to
 * organize it hierarchically.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Monitoring API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class TreemapDataSet extends com.google.api.client.json.GenericJson {

  /**
   * Optional. The collection of breakdowns to be applied to the dataset. A breakdown is a way to
   * slice the data. For example, you can break down the data by region.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Breakdown> breakdowns;

  static {
    // hack to force ProGuard to consider Breakdown used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(Breakdown.class);
  }

  /**
   * Optional. A collection of measures. A measure is a measured value of a property in your data.
   * For example, rainfall in inches, number of units sold, revenue gained, etc.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Measure> measures;

  static {
    // hack to force ProGuard to consider Measure used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(Measure.class);
  }

  /**
   * Required. The query that fetches the relevant data. See
   * google.monitoring.dashboard.v1.TimeSeriesQuery
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private TimeSeriesQuery timeSeriesQuery;

  /**
   * Optional. The collection of breakdowns to be applied to the dataset. A breakdown is a way to
   * slice the data. For example, you can break down the data by region.
   * @return value or {@code null} for none
   */
  public java.util.List<Breakdown> getBreakdowns() {
    return breakdowns;
  }

  /**
   * Optional. The collection of breakdowns to be applied to the dataset. A breakdown is a way to
   * slice the data. For example, you can break down the data by region.
   * @param breakdowns breakdowns or {@code null} for none
   */
  public TreemapDataSet setBreakdowns(java.util.List<Breakdown> breakdowns) {
    this.breakdowns = breakdowns;
    return this;
  }

  /**
   * Optional. A collection of measures. A measure is a measured value of a property in your data.
   * For example, rainfall in inches, number of units sold, revenue gained, etc.
   * @return value or {@code null} for none
   */
  public java.util.List<Measure> getMeasures() {
    return measures;
  }

  /**
   * Optional. A collection of measures. A measure is a measured value of a property in your data.
   * For example, rainfall in inches, number of units sold, revenue gained, etc.
   * @param measures measures or {@code null} for none
   */
  public TreemapDataSet setMeasures(java.util.List<Measure> measures) {
    this.measures = measures;
    return this;
  }

  /**
   * Required. The query that fetches the relevant data. See
   * google.monitoring.dashboard.v1.TimeSeriesQuery
   * @return value or {@code null} for none
   */
  public TimeSeriesQuery getTimeSeriesQuery() {
    return timeSeriesQuery;
  }

  /**
   * Required. The query that fetches the relevant data. See
   * google.monitoring.dashboard.v1.TimeSeriesQuery
   * @param timeSeriesQuery timeSeriesQuery or {@code null} for none
   */
  public TreemapDataSet setTimeSeriesQuery(TimeSeriesQuery timeSeriesQuery) {
    this.timeSeriesQuery = timeSeriesQuery;
    return this;
  }

  @Override
  public TreemapDataSet set(String fieldName, Object value) {
    return (TreemapDataSet) super.set(fieldName, value);
  }

  @Override
  public TreemapDataSet clone() {
    return (TreemapDataSet) super.clone();
  }

}
