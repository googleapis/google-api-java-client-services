/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.vmwareengine.v1.model;

/**
 * Autoscaling settings define the rules used by VMware Engine to automatically scale-out and scale-
 * in the clusters in a private cloud.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the VMware Engine API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AutoscalingSettings extends com.google.api.client.json.GenericJson {

  /**
   * Required. The map with autoscaling policies applied to the cluster. The key is the identifier
   * of the policy. It must meet the following requirements: * Only contains 1-63 alphanumeric
   * characters and hyphens * Begins with an alphabetical character * Ends with a non-hyphen
   * character * Not formatted as a UUID * Complies with [RFC
   * 1034](https://datatracker.ietf.org/doc/html/rfc1034) (section 3.5) Currently there map must
   * contain only one element that describes the autoscaling policy for compute nodes.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, AutoscalingPolicy> autoscalingPolicies;

  static {
    // hack to force ProGuard to consider AutoscalingPolicy used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(AutoscalingPolicy.class);
  }

  /**
   * Optional. The minimum duration between consecutive autoscale operations. It starts once
   * addition or removal of nodes is fully completed. Defaults to 30 minutes if not specified. Cool
   * down period must be in whole minutes (for example, 30, 31, 50, 180 minutes).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String coolDownPeriod;

  /**
   * Optional. Maximum number of nodes of any type in a cluster. If not specified the default limits
   * apply.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer maxClusterNodeCount;

  /**
   * Optional. Minimum number of nodes of any type in a cluster. If not specified the default limits
   * apply.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer minClusterNodeCount;

  /**
   * Required. The map with autoscaling policies applied to the cluster. The key is the identifier
   * of the policy. It must meet the following requirements: * Only contains 1-63 alphanumeric
   * characters and hyphens * Begins with an alphabetical character * Ends with a non-hyphen
   * character * Not formatted as a UUID * Complies with [RFC
   * 1034](https://datatracker.ietf.org/doc/html/rfc1034) (section 3.5) Currently there map must
   * contain only one element that describes the autoscaling policy for compute nodes.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, AutoscalingPolicy> getAutoscalingPolicies() {
    return autoscalingPolicies;
  }

  /**
   * Required. The map with autoscaling policies applied to the cluster. The key is the identifier
   * of the policy. It must meet the following requirements: * Only contains 1-63 alphanumeric
   * characters and hyphens * Begins with an alphabetical character * Ends with a non-hyphen
   * character * Not formatted as a UUID * Complies with [RFC
   * 1034](https://datatracker.ietf.org/doc/html/rfc1034) (section 3.5) Currently there map must
   * contain only one element that describes the autoscaling policy for compute nodes.
   * @param autoscalingPolicies autoscalingPolicies or {@code null} for none
   */
  public AutoscalingSettings setAutoscalingPolicies(java.util.Map<String, AutoscalingPolicy> autoscalingPolicies) {
    this.autoscalingPolicies = autoscalingPolicies;
    return this;
  }

  /**
   * Optional. The minimum duration between consecutive autoscale operations. It starts once
   * addition or removal of nodes is fully completed. Defaults to 30 minutes if not specified. Cool
   * down period must be in whole minutes (for example, 30, 31, 50, 180 minutes).
   * @return value or {@code null} for none
   */
  public String getCoolDownPeriod() {
    return coolDownPeriod;
  }

  /**
   * Optional. The minimum duration between consecutive autoscale operations. It starts once
   * addition or removal of nodes is fully completed. Defaults to 30 minutes if not specified. Cool
   * down period must be in whole minutes (for example, 30, 31, 50, 180 minutes).
   * @param coolDownPeriod coolDownPeriod or {@code null} for none
   */
  public AutoscalingSettings setCoolDownPeriod(String coolDownPeriod) {
    this.coolDownPeriod = coolDownPeriod;
    return this;
  }

  /**
   * Optional. Maximum number of nodes of any type in a cluster. If not specified the default limits
   * apply.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMaxClusterNodeCount() {
    return maxClusterNodeCount;
  }

  /**
   * Optional. Maximum number of nodes of any type in a cluster. If not specified the default limits
   * apply.
   * @param maxClusterNodeCount maxClusterNodeCount or {@code null} for none
   */
  public AutoscalingSettings setMaxClusterNodeCount(java.lang.Integer maxClusterNodeCount) {
    this.maxClusterNodeCount = maxClusterNodeCount;
    return this;
  }

  /**
   * Optional. Minimum number of nodes of any type in a cluster. If not specified the default limits
   * apply.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMinClusterNodeCount() {
    return minClusterNodeCount;
  }

  /**
   * Optional. Minimum number of nodes of any type in a cluster. If not specified the default limits
   * apply.
   * @param minClusterNodeCount minClusterNodeCount or {@code null} for none
   */
  public AutoscalingSettings setMinClusterNodeCount(java.lang.Integer minClusterNodeCount) {
    this.minClusterNodeCount = minClusterNodeCount;
    return this;
  }

  @Override
  public AutoscalingSettings set(String fieldName, Object value) {
    return (AutoscalingSettings) super.set(fieldName, value);
  }

  @Override
  public AutoscalingSettings clone() {
    return (AutoscalingSettings) super.clone();
  }

}
