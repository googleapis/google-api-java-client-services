/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Model definition for DrishtiFeatureSetData.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class DrishtiFeatureSetData extends com.google.api.client.json.GenericJson {

  /**
   * Extra information for this particular FeatureSetData (example timestamp of this frame in the
   * video). (Almost never used).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<DrishtiFeatureExtra> extra;

  static {
    // hack to force ProGuard to consider DrishtiFeatureExtra used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(DrishtiFeatureExtra.class);
  }

  /**
   * The following can have multiple FeatureSetElement(s) Each of these FeatureSetElement correspond
   * to the various feature groups. One concrete example is the way these features are generated -
   * example audio, video or OCR.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<DrishtiFeatureSetDataFeatureSetElement> feature;

  /**
   * Labels for this particular FeatureSetData. (Almost never used). Only interesting when you have
   * (for example) frame level labels.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<DrishtiLabelSetElement> label;

  /**
   * Extra information for this particular FeatureSetData (example timestamp of this frame in the
   * video). (Almost never used).
   * @return value or {@code null} for none
   */
  public java.util.List<DrishtiFeatureExtra> getExtra() {
    return extra;
  }

  /**
   * Extra information for this particular FeatureSetData (example timestamp of this frame in the
   * video). (Almost never used).
   * @param extra extra or {@code null} for none
   */
  public DrishtiFeatureSetData setExtra(java.util.List<DrishtiFeatureExtra> extra) {
    this.extra = extra;
    return this;
  }

  /**
   * The following can have multiple FeatureSetElement(s) Each of these FeatureSetElement correspond
   * to the various feature groups. One concrete example is the way these features are generated -
   * example audio, video or OCR.
   * @return value or {@code null} for none
   */
  public java.util.List<DrishtiFeatureSetDataFeatureSetElement> getFeature() {
    return feature;
  }

  /**
   * The following can have multiple FeatureSetElement(s) Each of these FeatureSetElement correspond
   * to the various feature groups. One concrete example is the way these features are generated -
   * example audio, video or OCR.
   * @param feature feature or {@code null} for none
   */
  public DrishtiFeatureSetData setFeature(java.util.List<DrishtiFeatureSetDataFeatureSetElement> feature) {
    this.feature = feature;
    return this;
  }

  /**
   * Labels for this particular FeatureSetData. (Almost never used). Only interesting when you have
   * (for example) frame level labels.
   * @return value or {@code null} for none
   */
  public java.util.List<DrishtiLabelSetElement> getLabel() {
    return label;
  }

  /**
   * Labels for this particular FeatureSetData. (Almost never used). Only interesting when you have
   * (for example) frame level labels.
   * @param label label or {@code null} for none
   */
  public DrishtiFeatureSetData setLabel(java.util.List<DrishtiLabelSetElement> label) {
    this.label = label;
    return this;
  }

  @Override
  public DrishtiFeatureSetData set(String fieldName, Object value) {
    return (DrishtiFeatureSetData) super.set(fieldName, value);
  }

  @Override
  public DrishtiFeatureSetData clone() {
    return (DrishtiFeatureSetData) super.clone();
  }

}
