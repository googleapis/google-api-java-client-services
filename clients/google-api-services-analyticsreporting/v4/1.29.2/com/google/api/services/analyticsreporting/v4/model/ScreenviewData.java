/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.analyticsreporting.v4.model;

/**
 * Model definition for ScreenviewData.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Analytics Reporting API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ScreenviewData extends com.google.api.client.json.GenericJson {

  /**
   * The application name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String appName;

  /**
   * Mobile manufacturer or branded name. Eg: "Google", "Apple" etc.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String mobileDeviceBranding;

  /**
   * Mobile device model. Eg: "Pixel", "iPhone" etc.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String mobileDeviceModel;

  /**
   * The name of the screen.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String screenName;

  /**
   * The application name.
   * @return value or {@code null} for none
   */
  public java.lang.String getAppName() {
    return appName;
  }

  /**
   * The application name.
   * @param appName appName or {@code null} for none
   */
  public ScreenviewData setAppName(java.lang.String appName) {
    this.appName = appName;
    return this;
  }

  /**
   * Mobile manufacturer or branded name. Eg: "Google", "Apple" etc.
   * @return value or {@code null} for none
   */
  public java.lang.String getMobileDeviceBranding() {
    return mobileDeviceBranding;
  }

  /**
   * Mobile manufacturer or branded name. Eg: "Google", "Apple" etc.
   * @param mobileDeviceBranding mobileDeviceBranding or {@code null} for none
   */
  public ScreenviewData setMobileDeviceBranding(java.lang.String mobileDeviceBranding) {
    this.mobileDeviceBranding = mobileDeviceBranding;
    return this;
  }

  /**
   * Mobile device model. Eg: "Pixel", "iPhone" etc.
   * @return value or {@code null} for none
   */
  public java.lang.String getMobileDeviceModel() {
    return mobileDeviceModel;
  }

  /**
   * Mobile device model. Eg: "Pixel", "iPhone" etc.
   * @param mobileDeviceModel mobileDeviceModel or {@code null} for none
   */
  public ScreenviewData setMobileDeviceModel(java.lang.String mobileDeviceModel) {
    this.mobileDeviceModel = mobileDeviceModel;
    return this;
  }

  /**
   * The name of the screen.
   * @return value or {@code null} for none
   */
  public java.lang.String getScreenName() {
    return screenName;
  }

  /**
   * The name of the screen.
   * @param screenName screenName or {@code null} for none
   */
  public ScreenviewData setScreenName(java.lang.String screenName) {
    this.screenName = screenName;
    return this;
  }

  @Override
  public ScreenviewData set(String fieldName, Object value) {
    return (ScreenviewData) super.set(fieldName, value);
  }

  @Override
  public ScreenviewData clone() {
    return (ScreenviewData) super.clone();
  }

}
