/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.domains.v1alpha2.model;

/**
 * Request for the `RegisterDomain` method.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Domains API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class RegisterDomainRequest extends com.google.api.client.json.GenericJson {

  /**
   * The list of contact notices that the caller acknowledges. The notices required here depend on
   * the values specified in `registration.contact_settings`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> contactNotices;

  /**
   * The list of domain notices that you acknowledge. Call `RetrieveRegisterParameters` to see the
   * notices that need acknowledgement.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> domainNotices;

  /**
   * Required. The complete `Registration` resource to be created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Registration registration;

  /**
   * When true, only validation will be performed, without actually registering the domain. Follows:
   * https://cloud.google.com/apis/design/design_patterns#request_validation
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean validateOnly;

  /**
   * Required. Yearly price to register or renew the domain. The value that should be put here can
   * be obtained from RetrieveRegisterParameters or SearchDomains calls.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Money yearlyPrice;

  /**
   * The list of contact notices that the caller acknowledges. The notices required here depend on
   * the values specified in `registration.contact_settings`.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getContactNotices() {
    return contactNotices;
  }

  /**
   * The list of contact notices that the caller acknowledges. The notices required here depend on
   * the values specified in `registration.contact_settings`.
   * @param contactNotices contactNotices or {@code null} for none
   */
  public RegisterDomainRequest setContactNotices(java.util.List<java.lang.String> contactNotices) {
    this.contactNotices = contactNotices;
    return this;
  }

  /**
   * The list of domain notices that you acknowledge. Call `RetrieveRegisterParameters` to see the
   * notices that need acknowledgement.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getDomainNotices() {
    return domainNotices;
  }

  /**
   * The list of domain notices that you acknowledge. Call `RetrieveRegisterParameters` to see the
   * notices that need acknowledgement.
   * @param domainNotices domainNotices or {@code null} for none
   */
  public RegisterDomainRequest setDomainNotices(java.util.List<java.lang.String> domainNotices) {
    this.domainNotices = domainNotices;
    return this;
  }

  /**
   * Required. The complete `Registration` resource to be created.
   * @return value or {@code null} for none
   */
  public Registration getRegistration() {
    return registration;
  }

  /**
   * Required. The complete `Registration` resource to be created.
   * @param registration registration or {@code null} for none
   */
  public RegisterDomainRequest setRegistration(Registration registration) {
    this.registration = registration;
    return this;
  }

  /**
   * When true, only validation will be performed, without actually registering the domain. Follows:
   * https://cloud.google.com/apis/design/design_patterns#request_validation
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getValidateOnly() {
    return validateOnly;
  }

  /**
   * When true, only validation will be performed, without actually registering the domain. Follows:
   * https://cloud.google.com/apis/design/design_patterns#request_validation
   * @param validateOnly validateOnly or {@code null} for none
   */
  public RegisterDomainRequest setValidateOnly(java.lang.Boolean validateOnly) {
    this.validateOnly = validateOnly;
    return this;
  }

  /**
   * Required. Yearly price to register or renew the domain. The value that should be put here can
   * be obtained from RetrieveRegisterParameters or SearchDomains calls.
   * @return value or {@code null} for none
   */
  public Money getYearlyPrice() {
    return yearlyPrice;
  }

  /**
   * Required. Yearly price to register or renew the domain. The value that should be put here can
   * be obtained from RetrieveRegisterParameters or SearchDomains calls.
   * @param yearlyPrice yearlyPrice or {@code null} for none
   */
  public RegisterDomainRequest setYearlyPrice(Money yearlyPrice) {
    this.yearlyPrice = yearlyPrice;
    return this;
  }

  @Override
  public RegisterDomainRequest set(String fieldName, Object value) {
    return (RegisterDomainRequest) super.set(fieldName, value);
  }

  @Override
  public RegisterDomainRequest clone() {
    return (RegisterDomainRequest) super.clone();
  }

}
