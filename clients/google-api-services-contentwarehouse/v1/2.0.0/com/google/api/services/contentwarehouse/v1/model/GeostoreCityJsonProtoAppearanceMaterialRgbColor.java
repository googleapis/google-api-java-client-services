/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * RGB 0-1, where the range of each value is [0,1] instead of [0,255]. Values may be linear RGB or
 * sRGB; RGB values are frequently stored as sRGB (https://stackoverflow.com/a/12894053 explains the
 * difference).
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GeostoreCityJsonProtoAppearanceMaterialRgbColor extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float blue;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float green;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float red;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Float getBlue() {
    return blue;
  }

  /**
   * @param blue blue or {@code null} for none
   */
  public GeostoreCityJsonProtoAppearanceMaterialRgbColor setBlue(java.lang.Float blue) {
    this.blue = blue;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Float getGreen() {
    return green;
  }

  /**
   * @param green green or {@code null} for none
   */
  public GeostoreCityJsonProtoAppearanceMaterialRgbColor setGreen(java.lang.Float green) {
    this.green = green;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Float getRed() {
    return red;
  }

  /**
   * @param red red or {@code null} for none
   */
  public GeostoreCityJsonProtoAppearanceMaterialRgbColor setRed(java.lang.Float red) {
    this.red = red;
    return this;
  }

  @Override
  public GeostoreCityJsonProtoAppearanceMaterialRgbColor set(String fieldName, Object value) {
    return (GeostoreCityJsonProtoAppearanceMaterialRgbColor) super.set(fieldName, value);
  }

  @Override
  public GeostoreCityJsonProtoAppearanceMaterialRgbColor clone() {
    return (GeostoreCityJsonProtoAppearanceMaterialRgbColor) super.clone();
  }

}
