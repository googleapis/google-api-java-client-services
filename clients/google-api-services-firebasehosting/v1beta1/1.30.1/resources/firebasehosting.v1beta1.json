{
  "canonicalName": "Firebase Hosting",
  "batchPath": "batch",
  "schemas": {
    "CertHttpChallenge": {
      "description": "Represents an HTTP certificate challenge.",
      "type": "object",
      "id": "CertHttpChallenge",
      "properties": {
        "token": {
          "type": "string",
          "description": "The token to serve at the specified URL path to satisfy the certificate\nchallenge."
        },
        "path": {
          "description": "The URL path on which to serve the specified token to satisfy the\ncertificate challenge.",
          "type": "string"
        }
      }
    },
    "ListVersionFilesResponse": {
      "type": "object",
      "properties": {
        "files": {
          "items": {
            "$ref": "VersionFile"
          },
          "description": "The list path/hashes in the specified version.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The pagination token, if more results exist."
        }
      },
      "id": "ListVersionFilesResponse"
    },
    "ListVersionsResponse": {
      "properties": {
        "versions": {
          "description": "The list of versions, if any exist.",
          "items": {
            "$ref": "Version"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "The pagination token, if more results exist",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ListVersionsResponse"
    },
    "PopulateVersionFilesRequest": {
      "description": "The request to populate a Version's Files.",
      "properties": {
        "files": {
          "description": "A set of file paths to the hashes corresponding to assets that should be\nadded to the version. Note that a file path to an empty hash will remove\nthe path from the version. Calculate a hash by Gzipping the file then\ntaking the SHA256 hash of the newly compressed file.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "id": "PopulateVersionFilesRequest"
    },
    "Domain": {
      "description": "The intended behavior and status information of a domain.",
      "properties": {
        "status": {
          "enum": [
            "DOMAIN_STATUS_UNSPECIFIED",
            "DOMAIN_CHANGE_PENDING",
            "DOMAIN_ACTIVE",
            "DOMAIN_VERIFICATION_REQUIRED",
            "DOMAIN_VERIFICATION_LOST"
          ],
          "enumDescriptions": [
            "Unspecified domain association status.",
            "An external operation is in progress on the domain association and no\nfurther operations can be performed until it is complete. Formerly used for\nmetabase updates.  Not currently used",
            "The domain association is active and no additional action is required.",
            "The domain was previously verified in the legacy system. User must\nreverify the domain through the ownership service.",
            "The domain verification has been lost and the domain is in the grace period\nbefore being removed from the Firebase Hosting site."
          ],
          "type": "string",
          "description": "Output only. Additional status of the domain association."
        },
        "domainName": {
          "description": "Required. The domain name of the association.",
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. The time at which the domain was last updated.",
          "type": "string",
          "format": "google-datetime"
        },
        "site": {
          "description": "Required. The site name of the association.",
          "type": "string"
        },
        "domainRedirect": {
          "description": "If set, the domain should redirect with the provided parameters.",
          "$ref": "DomainRedirect"
        },
        "provisioning": {
          "$ref": "DomainProvisioning",
          "description": "Output only. Information about the provisioning of certificates and the\nhealth of the DNS resolution for the domain."
        }
      },
      "id": "Domain",
      "type": "object"
    },
    "Rewrite": {
      "description": "A [`rewrite`](/docs/hosting/full-config#rewrites) object specifies a URL\npattern that, if matched to the request URL path, triggers Hosting to\nrespond as if the service were given the specified destination URL.",
      "id": "Rewrite",
      "type": "object",
      "properties": {
        "glob": {
          "type": "string",
          "description": "The user-supplied\n[glob](/docs/hosting/full-config#glob_pattern_matching) to match\nagainst the request URL path."
        },
        "path": {
          "type": "string",
          "description": "The URL path to rewrite the request to."
        },
        "dynamicLinks": {
          "type": "boolean",
          "description": "The request will be forwarded to Firebase Dynamic Links."
        },
        "function": {
          "description": "The function to proxy requests to. Must match the exported function\nname exactly.",
          "type": "string"
        },
        "regex": {
          "type": "string",
          "description": "The user-supplied RE2 regular expression to match against the request\nURL path."
        },
        "run": {
          "description": "The request will be forwarded to Cloud Run.",
          "$ref": "CloudRunRewrite"
        }
      }
    },
    "Release": {
      "id": "Release",
      "type": "object",
      "description": "A `Release` is a particular\n[collection of configurations and files](sites.versions)\nthat is set to be public at a particular time.",
      "properties": {
        "type": {
          "type": "string",
          "enumDescriptions": [
            "An unspecified type. Indicates that a version was released.\n\u003cbr\u003eThis is the default value when no other `type` is explicitly\nspecified.",
            "A version was uploaded to Firebase Hosting and released.",
            "The release points back to a previously deployed version.",
            "The release prevents the site from serving content. Firebase Hosting acts\nas if the site never existed."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "DEPLOY",
            "ROLLBACK",
            "SITE_DISABLE"
          ],
          "description": "Explains the reason for the release.\n\u003cbr\u003eSpecify a value for this field only when creating a `SITE_DISABLE`\ntype release."
        },
        "releaseTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time at which the version is set to be public."
        },
        "message": {
          "description": "The deploy description when the release was created. The value can be up to\n512&nbsp;characters.",
          "type": "string"
        },
        "releaseUser": {
          "$ref": "ActingUser",
          "description": "Output only. Identifies the user who created the release."
        },
        "version": {
          "$ref": "Version",
          "description": "Output only. The configuration and content that was released."
        },
        "name": {
          "description": "Output only. The unique identifier for the release, in the format:\n\u003ccode\u003esites/\u003cvar\u003esite-name\u003c/var\u003e/releases/\u003cvar\u003ereleaseID\u003c/var\u003e\u003c/code\u003e\nThis name is provided in the response body when you call the\n[`CreateRelease`](sites.releases/create) endpoint.",
          "type": "string"
        }
      }
    },
    "Redirect": {
      "properties": {
        "glob": {
          "description": "The user-supplied\n[glob](/docs/hosting/full-config#glob_pattern_matching) to match\nagainst the request URL path.",
          "type": "string"
        },
        "statusCode": {
          "type": "integer",
          "description": "Required. The status HTTP code to return in the response. It must be a\nvalid 3xx status code.",
          "format": "int32"
        },
        "location": {
          "type": "string",
          "description": "Required. The value to put in the HTTP location header of the response.\n\u003cbr\u003eThe location can contain capture group values from the pattern using\na `:` prefix to identify the segment and an optional `*` to capture the\nrest of the URL.\nFor example:\n\u003ccode\u003e\"glob\": \"/:capture*\",\n\u003cbr\u003e\"statusCode\": 301,\n\u003cbr\u003e\"location\": \"https://example.com/foo/:capture\"\u003c/code\u003e"
        },
        "regex": {
          "type": "string",
          "description": "The user-supplied RE2 regular expression to match against the request\nURL path."
        }
      },
      "description": "A [`redirect`](/docs/hosting/full-config#redirects) object specifies a URL\npattern that, if matched to the request URL path, triggers Hosting to\nrespond with a redirect to the specified destination path.",
      "id": "Redirect",
      "type": "object"
    },
    "Operation": {
      "properties": {
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
          "type": "boolean"
        },
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "response": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.",
          "type": "object"
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should be a resource name ending with `operations/{unique_id}`."
        }
      },
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
      "type": "object"
    },
    "PopulateVersionFilesResponse": {
      "type": "object",
      "properties": {
        "uploadUrl": {
          "description": "The URL to which the files should be uploaded, in the format:\n\u003cbr\u003e\"https://upload-firebasehosting.googleapis.com/upload/sites/\u003cvar\u003esite-name\u003c/var\u003e/versions/\u003cvar\u003eversionID\u003c/var\u003e/files\".\n\u003cbr\u003ePerform a multipart `POST` of the Gzipped file contents to the URL\nusing a forward slash and the hash of the file appended to the end.",
          "type": "string"
        },
        "uploadRequiredHashes": {
          "type": "array",
          "description": "The content hashes of the specified files that need to be uploaded to the\nspecified endpoint.",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "PopulateVersionFilesResponse"
    },
    "CloudRunRewrite": {
      "properties": {
        "region": {
          "type": "string",
          "description": "Optional. User-provided region where the Cloud Run service is hosted.\u003cbr\u003e\nDefaults to `us-central1` if not supplied."
        },
        "serviceId": {
          "type": "string",
          "description": "Required. User-defined ID of the Cloud Run service."
        }
      },
      "id": "CloudRunRewrite",
      "type": "object",
      "description": "A configured rewrite that directs requests to a Cloud Run service. If the\nCloud Run service does not exist when setting or updating your Firebase\nHosting configuration, then the request fails. Any errors from the Cloud Run\nservice are passed to the end user (for example, if you delete a service, any\nrequests directed to that service receive a `404` error)."
    },
    "Version": {
      "properties": {
        "name": {
          "description": "The unique identifier for a version, in the format:\n\u003ccode\u003esites/\u003cvar\u003esite-name\u003c/var\u003e/versions/\u003cvar\u003eversionID\u003c/var\u003e\u003c/code\u003e\nThis name is provided in the response body when you call the\n[`CreateVersion`](../sites.versions/create) endpoint.",
          "type": "string"
        },
        "versionBytes": {
          "description": "Output only. The total stored bytesize of the version.\n\u003cbr\u003eThis value is calculated after a version is `FINALIZED`.",
          "format": "int64",
          "type": "string"
        },
        "finalizeUser": {
          "description": "Output only. Identifies the user who `FINALIZED` the version.",
          "$ref": "ActingUser"
        },
        "preview": {
          "$ref": "PreviewConfig",
          "description": "Version preview configuration for the site version. This configuration\nspecfies whether previewing is enabled for this site version. Version\npreviews allow you to preview your site at a custom URL before\nreleasing it as the live version."
        },
        "labels": {
          "type": "object",
          "description": "The labels used for extra metadata and/or filtering.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "finalizeTime": {
          "description": "Output only. The time at which the version was `FINALIZED`.",
          "format": "google-datetime",
          "type": "string"
        },
        "createUser": {
          "description": "Output only. Identifies the user who created the version.",
          "$ref": "ActingUser"
        },
        "status": {
          "type": "string",
          "enum": [
            "VERSION_STATUS_UNSPECIFIED",
            "CREATED",
            "FINALIZED",
            "DELETED",
            "ABANDONED",
            "EXPIRED"
          ],
          "description": "The deploy status of a version.\n\u003cbr\u003e\n\u003cbr\u003eFor a successful deploy, call the\n[`CreateVersion`](sites.versions/create) endpoint to make a new version\n(`CREATED` status),\n[upload all desired files](sites.versions/populateFiles) to the version,\nthen [update](sites.versions/patch) the version to the `FINALIZED` status.\n\u003cbr\u003e\n\u003cbr\u003eNote that if you leave the version in the `CREATED` state for more\nthan 12&nbsp;hours, the system will automatically mark the version as\n`ABANDONED`.\n\u003cbr\u003e\n\u003cbr\u003eYou can also change the status of a version to `DELETED` by calling the\n[`DeleteVersion`](sites.versions/delete) endpoint.",
          "enumDescriptions": [
            "The default status; should not be intentionally used.",
            "The version has been created, and content is currently being added to the\nversion.",
            "All content has been added to the version, and the version can no longer be\nchanged.",
            "The version has been deleted.",
            "The version was not updated to `FINALIZED` within 12&nbsp;hours and was\nautomatically deleted.",
            "The version is outside the site-configured limit for the number of\nretained versions, so the version's content is scheduled for deletion."
          ]
        },
        "config": {
          "$ref": "ServingConfig",
          "description": "The configuration for the behavior of the site. This configuration exists\nin the [`firebase.json`](/docs/cli/#the_firebasejson_file) file."
        },
        "deleteTime": {
          "type": "string",
          "description": "Output only. The time at which the version was `DELETED`.",
          "format": "google-datetime"
        },
        "fileCount": {
          "format": "int64",
          "type": "string",
          "description": "Output only. The total number of files associated with the version.\n\u003cbr\u003eThis value is calculated after a version is `FINALIZED`."
        },
        "deleteUser": {
          "description": "Output only. Identifies the user who `DELETED` the version.",
          "$ref": "ActingUser"
        },
        "createTime": {
          "description": "Output only. The time at which the version was created.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "description": "A `Version` is the collection of configuration and\n[static files](sites.versions.files) that determine how a site is displayed.",
      "type": "object",
      "id": "Version"
    },
    "CertDnsChallenge": {
      "description": "Represents a DNS certificate challenge.",
      "id": "CertDnsChallenge",
      "type": "object",
      "properties": {
        "token": {
          "description": "The value that must be present as a TXT record on the domain name to\nsatisfy the challenge.",
          "type": "string"
        },
        "domainName": {
          "description": "The domain name upon which the DNS challenge must be satisfied.",
          "type": "string"
        }
      }
    },
    "SiteConfig": {
      "id": "SiteConfig",
      "description": "A `SiteConfig` contains metadata associated with a specific site that\ncontrols Firebase Hosting serving behavior",
      "properties": {
        "maxVersions": {
          "description": "The number of FINALIZED versions that will be held for a site before\nautomatic deletion. When a new version is deployed, content for versions\nin storage in excess of this number will be deleted, and will no longer be\nbilled for storage usage. Oldest versions will be deleted first; sites are\ncreated with an unlimited number of max_versions by default.",
          "format": "int64",
          "type": "string"
        },
        "cloudLoggingEnabled": {
          "type": "boolean",
          "description": "Whether or not web requests made by site visitors are logged via Cloud\nLogging."
        }
      },
      "type": "object"
    },
    "ActingUser": {
      "description": "Contains metadata about the user who performed an action, such as creating\na release or finalizing a version.",
      "id": "ActingUser",
      "type": "object",
      "properties": {
        "email": {
          "description": "The email address of the user when the user performed the action.",
          "type": "string"
        },
        "imageUrl": {
          "type": "string",
          "description": "A profile image URL for the user. May not be present if the user has\nchanged their email address or deleted their account."
        }
      }
    },
    "Header": {
      "properties": {
        "regex": {
          "description": "The user-supplied RE2 regular expression to match against the request\nURL path.",
          "type": "string"
        },
        "glob": {
          "description": "The user-supplied\n[glob](/docs/hosting/full-config#glob_pattern_matching) to match\nagainst the request URL path.",
          "type": "string"
        },
        "headers": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Required. The additional headers to add to the response."
        }
      },
      "type": "object",
      "id": "Header",
      "description": "A [`header`](/docs/hosting/full-config#headers) is an object that specifies\na URL pattern that, if matched to the request URL path, triggers Hosting to\napply the specified custom response headers."
    },
    "DomainRedirect": {
      "type": "object",
      "properties": {
        "domainName": {
          "description": "Required. The domain name to redirect to.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "The default redirect type; should not be intentionlly used.",
            "The redirect will respond with an HTTP status code of\n`301 Moved Permanently`."
          ],
          "enum": [
            "REDIRECT_TYPE_UNSPECIFIED",
            "MOVED_PERMANENTLY"
          ],
          "description": "Required. The redirect status code."
        }
      },
      "id": "DomainRedirect",
      "description": "Defines the behavior of a domain-level redirect. Domain redirects preserve\nthe path of the redirect but replace the requested domain with the one\nspecified in the redirect configuration."
    },
    "ListReleasesResponse": {
      "id": "ListReleasesResponse",
      "type": "object",
      "properties": {
        "releases": {
          "description": "The list of hashes of files that still need to be uploaded, if any exist.",
          "type": "array",
          "items": {
            "$ref": "Release"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "If there are additional releases remaining beyond the ones in this\nresponse, then supply this token in the next\n[`list`](../sites.versions.files/list) call to continue with the next set\nof releases."
        }
      }
    },
    "DomainProvisioning": {
      "description": "The current certificate provisioning status information for a domain.",
      "id": "DomainProvisioning",
      "type": "object",
      "properties": {
        "dnsFetchTime": {
          "format": "google-datetime",
          "description": "The time at which the last DNS fetch occurred.",
          "type": "string"
        },
        "certChallengeDiscoveredTxt": {
          "description": "The TXT records (for the certificate challenge) that were found at the last\nDNS fetch.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "certChallengeHttp": {
          "$ref": "CertHttpChallenge",
          "description": "The HTTP challenge for generating a certificate."
        },
        "expectedIps": {
          "items": {
            "type": "string"
          },
          "description": "The list of IPs to which the domain is expected to resolve.",
          "type": "array"
        },
        "discoveredIps": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The IPs found at the last DNS fetch."
        },
        "dnsStatus": {
          "description": "The DNS record match status as of the last DNS fetch.",
          "enum": [
            "DNS_STATUS_UNSPECIFIED",
            "DNS_PENDING",
            "DNS_MISSING",
            "DNS_PARTIAL_MATCH",
            "DNS_MATCH",
            "DNS_EXTRANEOUS_MATCH"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified DNS status.",
            "No DNS records have been specified for this domain yet.",
            "None of the required DNS records have been detected on the domain.",
            "Some of the required DNS records were detected, but not all of them. No\nextra (non-required) DNS records were detected.",
            "All required DNS records were detected. No extra (non-required) DNS records\nwere detected.",
            "The domain has at least one of the required DNS records, and it has at\nleast one extra (non-required) DNS record."
          ]
        },
        "certStatus": {
          "enum": [
            "CERT_STATUS_UNSPECIFIED",
            "CERT_PENDING",
            "CERT_MISSING",
            "CERT_PROCESSING",
            "CERT_PROPAGATING",
            "CERT_ACTIVE",
            "CERT_ERROR"
          ],
          "enumDescriptions": [
            "Unspecified certificate provisioning status.",
            "Waiting for certificate challenge to be created.",
            "Waiting for certificate challenge to be met.",
            "Certificate challenge met; attempting to acquire/propagate certificate.",
            "Certificate obtained; propagating to the CDN.",
            "Certificate provisioned and deployed across the CDN.",
            "Certificate provisioning failed in a non-recoverable manner."
          ],
          "description": "The certificate provisioning status; updated when Firebase Hosting\nprovisions an SSL certificate for the domain.",
          "type": "string"
        },
        "certChallengeDns": {
          "description": "The DNS challenge for generating a certificate.",
          "$ref": "CertDnsChallenge"
        }
      }
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "code": {
          "format": "int32",
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "details": {
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          },
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
          "type": "array"
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client."
        }
      },
      "type": "object"
    },
    "ServingConfig": {
      "type": "object",
      "id": "ServingConfig",
      "properties": {
        "appAssociation": {
          "enumDescriptions": [
            "The app association files will be automatically created from the apps\nthat exist in the Firebase project.",
            "No special handling of the app association files will occur, these paths\nwill result in a 404 unless caught with a Rewrite."
          ],
          "description": "How to handle well known App Association files.",
          "enum": [
            "AUTO",
            "NONE"
          ],
          "type": "string"
        },
        "trailingSlashBehavior": {
          "enumDescriptions": [
            "No behavior is specified.\n\u003cbr\u003eFiles are served at their exact location only, and trailing slashes\nare only added to directory indexes.",
            "Trailing slashes are _added_ to directory indexes as well as to any URL\npath not ending in a file extension.",
            "Trailing slashes are _removed_ from directory indexes as well as from any\nURL path not ending in a file extension."
          ],
          "enum": [
            "TRAILING_SLASH_BEHAVIOR_UNSPECIFIED",
            "ADD",
            "REMOVE"
          ],
          "type": "string",
          "description": "Defines how to handle a trailing slash in the URL path."
        },
        "cleanUrls": {
          "description": "Defines whether to drop the file extension from uploaded files.",
          "type": "boolean"
        },
        "redirects": {
          "description": "An array of objects (called redirect rules), where each rule specifies a\nURL pattern that, if matched to the request URL path, triggers Hosting to\nrespond with a redirect to the specified destination path.",
          "type": "array",
          "items": {
            "$ref": "Redirect"
          }
        },
        "rewrites": {
          "description": "An array of objects (called rewrite rules), where each rule specifies a URL\npattern that, if matched to the request URL path, triggers Hosting to\nrespond as if the service were given the specified destination URL.",
          "type": "array",
          "items": {
            "$ref": "Rewrite"
          }
        },
        "headers": {
          "type": "array",
          "items": {
            "$ref": "Header"
          },
          "description": "An array of objects, where each object specifies a URL pattern that, if\nmatched to the request URL path, triggers Hosting to apply the specified\ncustom response headers."
        }
      },
      "description": "The configuration for how incoming requests to a site should be routed and\nprocessed before serving content. The URL request paths are matched against\nthe specified URL patterns in the configuration, then Hosting applies the\napplicable configuration according to a specific\n[priority order](/docs/hosting/full-config#hosting_priority_order)."
    },
    "VersionFile": {
      "type": "object",
      "description": "A static content file that is part of a version.",
      "properties": {
        "status": {
          "enum": [
            "STATUS_UNSPECIFIED",
            "EXPECTED",
            "ACTIVE"
          ],
          "enumDescriptions": [
            "The default status; should not be intentionally used.",
            "The file has been included in the version and is expected to be uploaded\nin the near future.",
            "The file has already been uploaded to Firebase Hosting."
          ],
          "type": "string",
          "description": "Output only. The current status of a particular file in the specified\nversion.\n\u003cbr\u003eThe value will be either `pending upload` or `uploaded`."
        },
        "hash": {
          "type": "string",
          "description": "The SHA256 content hash of the file."
        },
        "path": {
          "type": "string",
          "description": "The URI at which the file's content should display."
        }
      },
      "id": "VersionFile"
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "properties": {},
      "id": "Empty",
      "type": "object"
    },
    "PreviewConfig": {
      "type": "object",
      "properties": {
        "expireTime": {
          "type": "string",
          "description": "Indicates the expiration time for previewing this\nversion; preview URL requests received after this time will 404.",
          "format": "google-datetime"
        },
        "active": {
          "type": "boolean",
          "description": "If true, preview URLs are enabled for this version."
        }
      },
      "description": "Version preview configuration. If active and unexpired,\nthis version will be accessible via a custom URL even\nif it is not the currently released version.",
      "id": "PreviewConfig"
    },
    "ListDomainsResponse": {
      "description": "The response to listing Domains.",
      "type": "object",
      "id": "ListDomainsResponse",
      "properties": {
        "domains": {
          "description": "The list of domains, if any exist.",
          "items": {
            "$ref": "Domain"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "The pagination token, if more results exist.",
          "type": "string"
        }
      }
    }
  },
  "revision": "20200729",
  "rootUrl": "https://firebasehosting.googleapis.com/",
  "documentationLink": "https://firebase.google.com/docs/hosting/",
  "title": "Firebase Hosting API",
  "servicePath": "",
  "version_module": true,
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        },
        "https://www.googleapis.com/auth/firebase.readonly": {
          "description": "View all your Firebase data and settings"
        },
        "https://www.googleapis.com/auth/firebase": {
          "description": "View and administer all your Firebase data and settings"
        },
        "https://www.googleapis.com/auth/cloud-platform.read-only": {
          "description": "View your data across Google Cloud Platform services"
        }
      }
    }
  },
  "kind": "discovery#restDescription",
  "protocol": "rest",
  "baseUrl": "https://firebasehosting.googleapis.com/",
  "parameters": {
    "alt": {
      "location": "query",
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "description": "Data format for response."
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string",
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    }
  },
  "basePath": "",
  "ownerDomain": "google.com",
  "id": "firebasehosting:v1beta1",
  "name": "firebasehosting",
  "version": "v1beta1",
  "description": "The Firebase Hosting REST API enables programmatic and customizable deployments to your Firebase-hosted sites. Use this REST API to deploy new or updated hosting configurations and content files.",
  "ownerName": "Google",
  "mtlsRootUrl": "https://firebasehosting.mtls.googleapis.com/",
  "resources": {
    "sites": {
      "methods": {
        "updateConfig": {
          "parameters": {
            "updateMask": {
              "location": "query",
              "type": "string",
              "format": "google-fieldmask",
              "description": "A set of field names from your [site configuration](../sites.SiteConfig)\nthat you want to update.\n\u003cbr\u003eA field will be overwritten if, and only if, it's in the mask.\n\u003cbr\u003eIf a mask is not provided then a default mask of only\n[`max_versions`](../sites.SiteConfig.max_versions) will be used."
            },
            "name": {
              "type": "string",
              "location": "path",
              "description": "Required. The site for which to update the SiteConfig, in the format:\n\u003ccode\u003esites/\u003cvar\u003esite-name\u003c/var\u003e/config\u003c/code\u003e",
              "required": true,
              "pattern": "^sites/[^/]+/config$"
            }
          },
          "flatPath": "v1beta1/sites/{sitesId}/config",
          "response": {
            "$ref": "SiteConfig"
          },
          "parameterOrder": [
            "name"
          ],
          "id": "firebasehosting.sites.updateConfig",
          "description": "Sets the Hosting metadata for a specific site.",
          "httpMethod": "PATCH",
          "request": {
            "$ref": "SiteConfig"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/firebase"
          ],
          "path": "v1beta1/{+name}"
        },
        "getConfig": {
          "path": "v1beta1/{+name}",
          "response": {
            "$ref": "SiteConfig"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/firebase",
            "https://www.googleapis.com/auth/firebase.readonly"
          ],
          "parameters": {
            "name": {
              "location": "path",
              "type": "string",
              "pattern": "^sites/[^/]+/config$",
              "description": "Required. The site for which to get the SiteConfig, in the format:\n\u003ccode\u003esites/\u003cvar\u003esite-name\u003c/var\u003e/config\u003c/code\u003e",
              "required": true
            }
          },
          "flatPath": "v1beta1/sites/{sitesId}/config",
          "id": "firebasehosting.sites.getConfig",
          "httpMethod": "GET",
          "parameterOrder": [
            "name"
          ],
          "description": "Gets the Hosting metadata for a specific site."
        }
      },
      "resources": {
        "channels": {
          "resources": {
            "releases": {
              "methods": {
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1beta1/{+parent}/releases",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^sites/[^/]+/channels/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. The site that the release belongs to, in the format:\n\u003ccode\u003esites/\u003cvar\u003esite-name\u003c/var\u003e\u003c/code\u003e"
                    },
                    "versionName": {
                      "description": "The unique identifier for a version, in the format:\n\u003ccode\u003e/sites/\u003cvar\u003esite-name\u003c/var\u003e/versions/\u003cvar\u003eversionID\u003c/var\u003e\u003c/code\u003e\nThe \u003cvar\u003esite-name\u003c/var\u003e in this version identifier must match the\n\u003cvar\u003esite-name\u003c/var\u003e in the `parent` parameter.\n\u003cbr\u003e\n\u003cbr\u003eThis query parameter must be empty if the `type` field in the\nrequest body is `SITE_DISABLE`.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "response": {
                    "$ref": "Release"
                  },
                  "id": "firebasehosting.sites.channels.releases.create",
                  "flatPath": "v1beta1/sites/{sitesId}/channels/{channelsId}/releases",
                  "request": {
                    "$ref": "Release"
                  },
                  "description": "Creates a new release which makes the content of the specified version\nactively display on the appropriate URL(s).",
                  "httpMethod": "POST"
                },
                "list": {
                  "parameters": {
                    "pageToken": {
                      "description": "The next_page_token from a previous request, if provided.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^sites/[^/]+/channels/[^/]+$",
                      "description": "Required. The parent for which to list files, in the format:\n\u003ccode\u003esites/\u003cvar\u003esite-name\u003c/var\u003e\u003c/code\u003e"
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "format": "int32",
                      "description": "The page size to return. Defaults to 100."
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only",
                    "https://www.googleapis.com/auth/firebase",
                    "https://www.googleapis.com/auth/firebase.readonly"
                  ],
                  "id": "firebasehosting.sites.channels.releases.list",
                  "path": "v1beta1/{+parent}/releases",
                  "response": {
                    "$ref": "ListReleasesResponse"
                  },
                  "flatPath": "v1beta1/sites/{sitesId}/channels/{channelsId}/releases",
                  "description": "Lists the releases that have been created on the specified site.",
                  "httpMethod": "GET"
                }
              }
            }
          }
        },
        "releases": {
          "methods": {
            "create": {
              "flatPath": "v1beta1/sites/{sitesId}/releases",
              "id": "firebasehosting.sites.releases.create",
              "description": "Creates a new release which makes the content of the specified version\nactively display on the appropriate URL(s).",
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "response": {
                "$ref": "Release"
              },
              "path": "v1beta1/{+parent}/releases",
              "request": {
                "$ref": "Release"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "parameters": {
                "parent": {
                  "type": "string",
                  "description": "Required. The site that the release belongs to, in the format:\n\u003ccode\u003esites/\u003cvar\u003esite-name\u003c/var\u003e\u003c/code\u003e",
                  "location": "path",
                  "pattern": "^sites/[^/]+$",
                  "required": true
                },
                "versionName": {
                  "description": "The unique identifier for a version, in the format:\n\u003ccode\u003e/sites/\u003cvar\u003esite-name\u003c/var\u003e/versions/\u003cvar\u003eversionID\u003c/var\u003e\u003c/code\u003e\nThe \u003cvar\u003esite-name\u003c/var\u003e in this version identifier must match the\n\u003cvar\u003esite-name\u003c/var\u003e in the `parent` parameter.\n\u003cbr\u003e\n\u003cbr\u003eThis query parameter must be empty if the `type` field in the\nrequest body is `SITE_DISABLE`.",
                  "type": "string",
                  "location": "query"
                }
              }
            },
            "list": {
              "response": {
                "$ref": "ListReleasesResponse"
              },
              "httpMethod": "GET",
              "flatPath": "v1beta1/sites/{sitesId}/releases",
              "id": "firebasehosting.sites.releases.list",
              "description": "Lists the releases that have been created on the specified site.",
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "pageSize": {
                  "location": "query",
                  "format": "int32",
                  "type": "integer",
                  "description": "The page size to return. Defaults to 100."
                },
                "parent": {
                  "required": true,
                  "location": "path",
                  "description": "Required. The parent for which to list files, in the format:\n\u003ccode\u003esites/\u003cvar\u003esite-name\u003c/var\u003e\u003c/code\u003e",
                  "pattern": "^sites/[^/]+$",
                  "type": "string"
                },
                "pageToken": {
                  "description": "The next_page_token from a previous request, if provided.",
                  "type": "string",
                  "location": "query"
                }
              },
              "path": "v1beta1/{+parent}/releases",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only",
                "https://www.googleapis.com/auth/firebase",
                "https://www.googleapis.com/auth/firebase.readonly"
              ]
            }
          }
        },
        "domains": {
          "methods": {
            "list": {
              "description": "Lists the domains for the specified site.",
              "id": "firebasehosting.sites.domains.list",
              "flatPath": "v1beta1/sites/{sitesId}/domains",
              "path": "v1beta1/{+parent}/domains",
              "httpMethod": "GET",
              "parameters": {
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "location": "query",
                  "description": "The page size to return. Defaults to 50."
                },
                "parent": {
                  "type": "string",
                  "required": true,
                  "description": "Required. The parent for which to list domains, in the format:\n\u003ccode\u003esites/\u003cvar\u003esite-name\u003c/var\u003e\u003c/code\u003e",
                  "pattern": "^sites/[^/]+$",
                  "location": "path"
                },
                "pageToken": {
                  "location": "query",
                  "description": "The next_page_token from a previous request, if provided.",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only",
                "https://www.googleapis.com/auth/firebase",
                "https://www.googleapis.com/auth/firebase.readonly"
              ],
              "response": {
                "$ref": "ListDomainsResponse"
              }
            },
            "create": {
              "response": {
                "$ref": "Domain"
              },
              "description": "Creates a domain mapping on the specified site.",
              "request": {
                "$ref": "Domain"
              },
              "id": "firebasehosting.sites.domains.create",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "flatPath": "v1beta1/sites/{sitesId}/domains",
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "type": "string",
                  "required": true,
                  "description": "Required. The parent to create the domain association for, in the format:\n\u003ccode\u003esites/\u003cvar\u003esite-name\u003c/var\u003e\u003c/code\u003e",
                  "pattern": "^sites/[^/]+$",
                  "location": "path"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "path": "v1beta1/{+parent}/domains"
            },
            "update": {
              "description": "Updates the specified domain mapping, creating the mapping as if it does\nnot exist.",
              "path": "v1beta1/{+name}",
              "id": "firebasehosting.sites.domains.update",
              "request": {
                "$ref": "Domain"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PUT",
              "response": {
                "$ref": "Domain"
              },
              "flatPath": "v1beta1/sites/{sitesId}/domains/{domainsId}",
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^sites/[^/]+/domains/[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "Required. The name of the domain association to update or create, if an\nassociation doesn't already exist."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ]
            },
            "get": {
              "id": "firebasehosting.sites.domains.get",
              "path": "v1beta1/{+name}",
              "flatPath": "v1beta1/sites/{sitesId}/domains/{domainsId}",
              "response": {
                "$ref": "Domain"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only",
                "https://www.googleapis.com/auth/firebase",
                "https://www.googleapis.com/auth/firebase.readonly"
              ],
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Required. The name of the domain configuration to get.",
                  "pattern": "^sites/[^/]+/domains/[^/]+$"
                }
              },
              "description": "Gets a domain mapping on the specified site."
            },
            "delete": {
              "path": "v1beta1/{+name}",
              "flatPath": "v1beta1/sites/{sitesId}/domains/{domainsId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "httpMethod": "DELETE",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "description": "Required. The name of the domain association to delete.",
                  "type": "string",
                  "location": "path",
                  "pattern": "^sites/[^/]+/domains/[^/]+$",
                  "required": true
                }
              },
              "description": "Deletes the existing domain mapping on the specified site.",
              "response": {
                "$ref": "Empty"
              },
              "id": "firebasehosting.sites.domains.delete"
            }
          }
        },
        "versions": {
          "resources": {
            "files": {
              "methods": {
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent to list files for, in the format:\n\u003ccode\u003esites/\u003cvar\u003esite-name\u003c/var\u003e/versions/\u003cvar\u003eversionID\u003c/var\u003e\u003c/code\u003e",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^sites/[^/]+/versions/[^/]+$"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "STATUS_UNSPECIFIED",
                        "EXPECTED",
                        "ACTIVE"
                      ],
                      "location": "query",
                      "description": "The type of files in the version that should be listed."
                    },
                    "pageToken": {
                      "description": "The next_page_token from a previous request, if provided. This will be the\nencoded version of a firebase.hosting.proto.metadata.ListFilesPageToken.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "The page size to return. Defaults to 1000.",
                      "format": "int32",
                      "type": "integer"
                    }
                  },
                  "flatPath": "v1beta1/sites/{sitesId}/versions/{versionsId}/files",
                  "path": "v1beta1/{+parent}/files",
                  "response": {
                    "$ref": "ListVersionFilesResponse"
                  },
                  "httpMethod": "GET",
                  "id": "firebasehosting.sites.versions.files.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only",
                    "https://www.googleapis.com/auth/firebase",
                    "https://www.googleapis.com/auth/firebase.readonly"
                  ],
                  "description": "Lists the remaining files to be uploaded for the specified version."
                }
              }
            }
          },
          "methods": {
            "patch": {
              "response": {
                "$ref": "Version"
              },
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "description": "The unique identifier for a version, in the format:\n\u003ccode\u003esites/\u003cvar\u003esite-name\u003c/var\u003e/versions/\u003cvar\u003eversionID\u003c/var\u003e\u003c/code\u003e\nThis name is provided in the response body when you call the\n[`CreateVersion`](../sites.versions/create) endpoint.",
                  "location": "path",
                  "type": "string",
                  "pattern": "^sites/[^/]+/versions/[^/]+$"
                },
                "updateMask": {
                  "type": "string",
                  "location": "query",
                  "format": "google-fieldmask",
                  "description": "A set of field names from your [version](../sites.versions) that you want\nto update.\n\u003cbr\u003eA field will be overwritten if, and only if, it's in the mask.\n\u003cbr\u003eIf a mask is not provided then a default mask of only\n[`status`](../sites.versions#Version.FIELDS.status) will be used."
                }
              },
              "description": "Updates the specified metadata for a version. Note that this method will\nfail with `FAILED_PRECONDITION` in the event of an invalid state\ntransition. The only valid transition for a version is currently from a\n`CREATED` status to a `FINALIZED` status.\nUse [`DeleteVersion`](../sites.versions/delete) to set the status of a\nversion to `DELETED`.",
              "path": "v1beta1/{+name}",
              "request": {
                "$ref": "Version"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "httpMethod": "PATCH",
              "id": "firebasehosting.sites.versions.patch",
              "flatPath": "v1beta1/sites/{sitesId}/versions/{versionsId}"
            },
            "populateFiles": {
              "flatPath": "v1beta1/sites/{sitesId}/versions/{versionsId}:populateFiles",
              "path": "v1beta1/{+parent}:populateFiles",
              "response": {
                "$ref": "PopulateVersionFilesResponse"
              },
              "description": "Adds content files to a version.\nEach file must be under 2 GB.",
              "httpMethod": "POST",
              "request": {
                "$ref": "PopulateVersionFilesRequest"
              },
              "parameters": {
                "parent": {
                  "description": "Required. The version to add files to, in the format:\n\u003ccode\u003esites/\u003cvar\u003esite-name\u003c/var\u003e/versions/\u003cvar\u003eversionID\u003c/var\u003e\u003c/code\u003e",
                  "pattern": "^sites/[^/]+/versions/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "id": "firebasehosting.sites.versions.populateFiles",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "parameterOrder": [
                "parent"
              ]
            },
            "delete": {
              "response": {
                "$ref": "Empty"
              },
              "id": "firebasehosting.sites.versions.delete",
              "parameters": {
                "name": {
                  "pattern": "^sites/[^/]+/versions/[^/]+$",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Required. The name of the version to be deleted, in the format:\n\u003ccode\u003esites/\u003cvar\u003esite-name\u003c/var\u003e/versions/\u003cvar\u003eversionID\u003c/var\u003e\u003c/code\u003e"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "DELETE",
              "description": "Deletes the specified version.",
              "flatPath": "v1beta1/sites/{sitesId}/versions/{versionsId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "path": "v1beta1/{+name}"
            },
            "list": {
              "parameterOrder": [
                "parent"
              ],
              "path": "v1beta1/{+parent}/versions",
              "parameters": {
                "filter": {
                  "location": "query",
                  "description": "The filter string used to return a subset of versions in the response.\nCurrently supported fields for filtering are: name, status,\nand create_time. Filter processing will be implemented in accordance\nwith go/filtering.",
                  "type": "string"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "The next_page_token from a previous request, if provided."
                },
                "parent": {
                  "type": "string",
                  "pattern": "^sites/[^/]+$",
                  "required": true,
                  "description": "Required. The parent for which to list files, in the format:\n\u003ccode\u003esites/\u003cvar\u003esite-name\u003c/var\u003e\u003c/code\u003e",
                  "location": "path"
                },
                "pageSize": {
                  "location": "query",
                  "format": "int32",
                  "type": "integer",
                  "description": "The maximum number of versions to return. The service may return fewer than\nthis value.\nIf unspecified, at most 25 versions will be returned.\nThe maximum value is 100; values above 100 will be coerced to 100"
                }
              },
              "description": "Lists the versions that have been created on the specified site.\nWill include filtering in the future.",
              "id": "firebasehosting.sites.versions.list",
              "flatPath": "v1beta1/sites/{sitesId}/versions",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only",
                "https://www.googleapis.com/auth/firebase",
                "https://www.googleapis.com/auth/firebase.readonly"
              ],
              "response": {
                "$ref": "ListVersionsResponse"
              }
            },
            "create": {
              "parameters": {
                "parent": {
                  "pattern": "^sites/[^/]+$",
                  "description": "Required. The parent to create the version for, in the format:\n\u003ccode\u003esites/\u003cvar\u003esite-name\u003c/var\u003e\u003c/code\u003e",
                  "type": "string",
                  "location": "path",
                  "required": true
                },
                "sizeBytes": {
                  "type": "string",
                  "location": "query",
                  "format": "int64",
                  "description": "The self-reported size of the version. This value is used for a pre-emptive\nquota check for legacy version uploads."
                },
                "versionId": {
                  "description": "A unique id for the new version. This is only specified for legacy version\ncreations.",
                  "location": "query",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "response": {
                "$ref": "Version"
              },
              "flatPath": "v1beta1/sites/{sitesId}/versions",
              "request": {
                "$ref": "Version"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "description": "Creates a new version for a site.",
              "path": "v1beta1/{+parent}/versions",
              "id": "firebasehosting.sites.versions.create"
            }
          }
        }
      }
    },
    "projects": {
      "resources": {
        "operations": {
          "methods": {
            "get": {
              "path": "v1beta1/{+name}",
              "id": "firebasehosting.projects.operations.get",
              "response": {
                "$ref": "Operation"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only",
                "https://www.googleapis.com/auth/firebase",
                "https://www.googleapis.com/auth/firebase.readonly"
              ],
              "parameters": {
                "name": {
                  "description": "The name of the operation resource.",
                  "type": "string",
                  "pattern": "^projects/[^/]+/operations/[^/]+$",
                  "location": "path",
                  "required": true
                }
              },
              "flatPath": "v1beta1/projects/{projectsId}/operations/{operationsId}",
              "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice."
            }
          }
        },
        "sites": {
          "methods": {
            "getConfig": {
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "id": "firebasehosting.projects.sites.getConfig",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only",
                "https://www.googleapis.com/auth/firebase",
                "https://www.googleapis.com/auth/firebase.readonly"
              ],
              "description": "Gets the Hosting metadata for a specific site.",
              "response": {
                "$ref": "SiteConfig"
              },
              "path": "v1beta1/{+name}",
              "parameters": {
                "name": {
                  "required": true,
                  "description": "Required. The site for which to get the SiteConfig, in the format:\n\u003ccode\u003esites/\u003cvar\u003esite-name\u003c/var\u003e/config\u003c/code\u003e",
                  "location": "path",
                  "pattern": "^projects/[^/]+/sites/[^/]+/config$",
                  "type": "string"
                }
              },
              "flatPath": "v1beta1/projects/{projectsId}/sites/{sitesId}/config"
            },
            "updateConfig": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "httpMethod": "PATCH",
              "request": {
                "$ref": "SiteConfig"
              },
              "response": {
                "$ref": "SiteConfig"
              },
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/sites/[^/]+/config$",
                  "location": "path",
                  "description": "Required. The site for which to update the SiteConfig, in the format:\n\u003ccode\u003esites/\u003cvar\u003esite-name\u003c/var\u003e/config\u003c/code\u003e",
                  "type": "string",
                  "required": true
                },
                "updateMask": {
                  "type": "string",
                  "description": "A set of field names from your [site configuration](../sites.SiteConfig)\nthat you want to update.\n\u003cbr\u003eA field will be overwritten if, and only if, it's in the mask.\n\u003cbr\u003eIf a mask is not provided then a default mask of only\n[`max_versions`](../sites.SiteConfig.max_versions) will be used.",
                  "format": "google-fieldmask",
                  "location": "query"
                }
              },
              "id": "firebasehosting.projects.sites.updateConfig",
              "flatPath": "v1beta1/projects/{projectsId}/sites/{sitesId}/config",
              "path": "v1beta1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "description": "Sets the Hosting metadata for a specific site."
            }
          },
          "resources": {
            "releases": {
              "methods": {
                "create": {
                  "request": {
                    "$ref": "Release"
                  },
                  "httpMethod": "POST",
                  "path": "v1beta1/{+parent}/releases",
                  "description": "Creates a new release which makes the content of the specified version\nactively display on the appropriate URL(s).",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "id": "firebasehosting.projects.sites.releases.create",
                  "response": {
                    "$ref": "Release"
                  },
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "description": "Required. The site that the release belongs to, in the format:\n\u003ccode\u003esites/\u003cvar\u003esite-name\u003c/var\u003e\u003c/code\u003e",
                      "pattern": "^projects/[^/]+/sites/[^/]+$",
                      "location": "path"
                    },
                    "versionName": {
                      "location": "query",
                      "description": "The unique identifier for a version, in the format:\n\u003ccode\u003e/sites/\u003cvar\u003esite-name\u003c/var\u003e/versions/\u003cvar\u003eversionID\u003c/var\u003e\u003c/code\u003e\nThe \u003cvar\u003esite-name\u003c/var\u003e in this version identifier must match the\n\u003cvar\u003esite-name\u003c/var\u003e in the `parent` parameter.\n\u003cbr\u003e\n\u003cbr\u003eThis query parameter must be empty if the `type` field in the\nrequest body is `SITE_DISABLE`.",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/sites/{sitesId}/releases"
                },
                "list": {
                  "response": {
                    "$ref": "ListReleasesResponse"
                  },
                  "parameters": {
                    "pageSize": {
                      "description": "The page size to return. Defaults to 100.",
                      "type": "integer",
                      "format": "int32",
                      "location": "query"
                    },
                    "pageToken": {
                      "description": "The next_page_token from a previous request, if provided.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/sites/[^/]+$",
                      "description": "Required. The parent for which to list files, in the format:\n\u003ccode\u003esites/\u003cvar\u003esite-name\u003c/var\u003e\u003c/code\u003e"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "firebasehosting.projects.sites.releases.list",
                  "description": "Lists the releases that have been created on the specified site.",
                  "flatPath": "v1beta1/projects/{projectsId}/sites/{sitesId}/releases",
                  "httpMethod": "GET",
                  "path": "v1beta1/{+parent}/releases",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only",
                    "https://www.googleapis.com/auth/firebase",
                    "https://www.googleapis.com/auth/firebase.readonly"
                  ]
                }
              }
            },
            "domains": {
              "methods": {
                "list": {
                  "description": "Lists the domains for the specified site.",
                  "path": "v1beta1/{+parent}/domains",
                  "response": {
                    "$ref": "ListDomainsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "firebasehosting.projects.sites.domains.list",
                  "flatPath": "v1beta1/projects/{projectsId}/sites/{sitesId}/domains",
                  "parameters": {
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "description": "The page size to return. Defaults to 50.",
                      "format": "int32"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "The next_page_token from a previous request, if provided."
                    },
                    "parent": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/sites/[^/]+$",
                      "description": "Required. The parent for which to list domains, in the format:\n\u003ccode\u003esites/\u003cvar\u003esite-name\u003c/var\u003e\u003c/code\u003e"
                    }
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only",
                    "https://www.googleapis.com/auth/firebase",
                    "https://www.googleapis.com/auth/firebase.readonly"
                  ]
                },
                "create": {
                  "request": {
                    "$ref": "Domain"
                  },
                  "httpMethod": "POST",
                  "path": "v1beta1/{+parent}/domains",
                  "id": "firebasehosting.projects.sites.domains.create",
                  "description": "Creates a domain mapping on the specified site.",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/sites/[^/]+$",
                      "required": true,
                      "description": "Required. The parent to create the domain association for, in the format:\n\u003ccode\u003esites/\u003cvar\u003esite-name\u003c/var\u003e\u003c/code\u003e"
                    }
                  },
                  "response": {
                    "$ref": "Domain"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/sites/{sitesId}/domains"
                },
                "update": {
                  "id": "firebasehosting.projects.sites.domains.update",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/sites/[^/]+/domains/[^/]+$",
                      "description": "Required. The name of the domain association to update or create, if an\nassociation doesn't already exist."
                    }
                  },
                  "request": {
                    "$ref": "Domain"
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/sites/{sitesId}/domains/{domainsId}",
                  "response": {
                    "$ref": "Domain"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Updates the specified domain mapping, creating the mapping as if it does\nnot exist.",
                  "httpMethod": "PUT",
                  "path": "v1beta1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ]
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/sites/[^/]+/domains/[^/]+$",
                      "location": "path",
                      "description": "Required. The name of the domain association to delete.",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Deletes the existing domain mapping on the specified site.",
                  "path": "v1beta1/{+name}",
                  "flatPath": "v1beta1/projects/{projectsId}/sites/{sitesId}/domains/{domainsId}",
                  "id": "firebasehosting.projects.sites.domains.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "response": {
                    "$ref": "Empty"
                  }
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only",
                    "https://www.googleapis.com/auth/firebase",
                    "https://www.googleapis.com/auth/firebase.readonly"
                  ],
                  "description": "Gets a domain mapping on the specified site.",
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "description": "Required. The name of the domain configuration to get.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/sites/[^/]+/domains/[^/]+$"
                    }
                  },
                  "id": "firebasehosting.projects.sites.domains.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v1beta1/projects/{projectsId}/sites/{sitesId}/domains/{domainsId}",
                  "path": "v1beta1/{+name}",
                  "response": {
                    "$ref": "Domain"
                  }
                }
              }
            },
            "channels": {
              "resources": {
                "releases": {
                  "methods": {
                    "create": {
                      "request": {
                        "$ref": "Release"
                      },
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "Required. The site that the release belongs to, in the format:\n\u003ccode\u003esites/\u003cvar\u003esite-name\u003c/var\u003e\u003c/code\u003e",
                          "pattern": "^projects/[^/]+/sites/[^/]+/channels/[^/]+$"
                        },
                        "versionName": {
                          "location": "query",
                          "description": "The unique identifier for a version, in the format:\n\u003ccode\u003e/sites/\u003cvar\u003esite-name\u003c/var\u003e/versions/\u003cvar\u003eversionID\u003c/var\u003e\u003c/code\u003e\nThe \u003cvar\u003esite-name\u003c/var\u003e in this version identifier must match the\n\u003cvar\u003esite-name\u003c/var\u003e in the `parent` parameter.\n\u003cbr\u003e\n\u003cbr\u003eThis query parameter must be empty if the `type` field in the\nrequest body is `SITE_DISABLE`.",
                          "type": "string"
                        }
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/sites/{sitesId}/channels/{channelsId}/releases",
                      "description": "Creates a new release which makes the content of the specified version\nactively display on the appropriate URL(s).",
                      "response": {
                        "$ref": "Release"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "POST",
                      "id": "firebasehosting.projects.sites.channels.releases.create",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/firebase"
                      ],
                      "path": "v1beta1/{+parent}/releases"
                    },
                    "list": {
                      "path": "v1beta1/{+parent}/releases",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only",
                        "https://www.googleapis.com/auth/firebase",
                        "https://www.googleapis.com/auth/firebase.readonly"
                      ],
                      "flatPath": "v1beta1/projects/{projectsId}/sites/{sitesId}/channels/{channelsId}/releases",
                      "id": "firebasehosting.projects.sites.channels.releases.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Lists the releases that have been created on the specified site.",
                      "response": {
                        "$ref": "ListReleasesResponse"
                      },
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/sites/[^/]+/channels/[^/]+$",
                          "required": true,
                          "description": "Required. The parent for which to list files, in the format:\n\u003ccode\u003esites/\u003cvar\u003esite-name\u003c/var\u003e\u003c/code\u003e"
                        },
                        "pageSize": {
                          "description": "The page size to return. Defaults to 100.",
                          "type": "integer",
                          "format": "int32",
                          "location": "query"
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "The next_page_token from a previous request, if provided.",
                          "location": "query"
                        }
                      },
                      "httpMethod": "GET"
                    }
                  }
                }
              }
            },
            "versions": {
              "resources": {
                "files": {
                  "methods": {
                    "list": {
                      "id": "firebasehosting.projects.sites.versions.files.list",
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "description": "The next_page_token from a previous request, if provided. This will be the\nencoded version of a firebase.hosting.proto.metadata.ListFilesPageToken.",
                          "location": "query"
                        },
                        "parent": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/sites/[^/]+/versions/[^/]+$",
                          "description": "Required. The parent to list files for, in the format:\n\u003ccode\u003esites/\u003cvar\u003esite-name\u003c/var\u003e/versions/\u003cvar\u003eversionID\u003c/var\u003e\u003c/code\u003e",
                          "location": "path",
                          "required": true
                        },
                        "status": {
                          "description": "The type of files in the version that should be listed.",
                          "type": "string",
                          "enum": [
                            "STATUS_UNSPECIFIED",
                            "EXPECTED",
                            "ACTIVE"
                          ],
                          "location": "query"
                        },
                        "pageSize": {
                          "description": "The page size to return. Defaults to 1000.",
                          "format": "int32",
                          "location": "query",
                          "type": "integer"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only",
                        "https://www.googleapis.com/auth/firebase",
                        "https://www.googleapis.com/auth/firebase.readonly"
                      ],
                      "response": {
                        "$ref": "ListVersionFilesResponse"
                      },
                      "path": "v1beta1/{+parent}/files",
                      "flatPath": "v1beta1/projects/{projectsId}/sites/{sitesId}/versions/{versionsId}/files",
                      "description": "Lists the remaining files to be uploaded for the specified version.",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ]
                    }
                  }
                }
              },
              "methods": {
                "list": {
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListVersionsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/sites/{sitesId}/versions",
                  "id": "firebasehosting.projects.sites.versions.list",
                  "description": "Lists the versions that have been created on the specified site.\nWill include filtering in the future.",
                  "path": "v1beta1/{+parent}/versions",
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "The filter string used to return a subset of versions in the response.\nCurrently supported fields for filtering are: name, status,\nand create_time. Filter processing will be implemented in accordance\nwith go/filtering."
                    },
                    "parent": {
                      "location": "path",
                      "description": "Required. The parent for which to list files, in the format:\n\u003ccode\u003esites/\u003cvar\u003esite-name\u003c/var\u003e\u003c/code\u003e",
                      "pattern": "^projects/[^/]+/sites/[^/]+$",
                      "type": "string",
                      "required": true
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "description": "The maximum number of versions to return. The service may return fewer than\nthis value.\nIf unspecified, at most 25 versions will be returned.\nThe maximum value is 100; values above 100 will be coerced to 100",
                      "location": "query"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "The next_page_token from a previous request, if provided.",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only",
                    "https://www.googleapis.com/auth/firebase",
                    "https://www.googleapis.com/auth/firebase.readonly"
                  ]
                },
                "create": {
                  "id": "firebasehosting.projects.sites.versions.create",
                  "path": "v1beta1/{+parent}/versions",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "description": "Required. The parent to create the version for, in the format:\n\u003ccode\u003esites/\u003cvar\u003esite-name\u003c/var\u003e\u003c/code\u003e",
                      "type": "string",
                      "pattern": "^projects/[^/]+/sites/[^/]+$",
                      "location": "path"
                    },
                    "sizeBytes": {
                      "format": "int64",
                      "location": "query",
                      "type": "string",
                      "description": "The self-reported size of the version. This value is used for a pre-emptive\nquota check for legacy version uploads."
                    },
                    "versionId": {
                      "location": "query",
                      "description": "A unique id for the new version. This is only specified for legacy version\ncreations.",
                      "type": "string"
                    }
                  },
                  "description": "Creates a new version for a site.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "Version"
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1beta1/projects/{projectsId}/sites/{sitesId}/versions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "request": {
                    "$ref": "Version"
                  }
                },
                "patch": {
                  "response": {
                    "$ref": "Version"
                  },
                  "description": "Updates the specified metadata for a version. Note that this method will\nfail with `FAILED_PRECONDITION` in the event of an invalid state\ntransition. The only valid transition for a version is currently from a\n`CREATED` status to a `FINALIZED` status.\nUse [`DeleteVersion`](../sites.versions/delete) to set the status of a\nversion to `DELETED`.",
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/sites/[^/]+/versions/[^/]+$",
                      "description": "The unique identifier for a version, in the format:\n\u003ccode\u003esites/\u003cvar\u003esite-name\u003c/var\u003e/versions/\u003cvar\u003eversionID\u003c/var\u003e\u003c/code\u003e\nThis name is provided in the response body when you call the\n[`CreateVersion`](../sites.versions/create) endpoint.",
                      "type": "string",
                      "required": true
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "description": "A set of field names from your [version](../sites.versions) that you want\nto update.\n\u003cbr\u003eA field will be overwritten if, and only if, it's in the mask.\n\u003cbr\u003eIf a mask is not provided then a default mask of only\n[`status`](../sites.versions#Version.FIELDS.status) will be used.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "id": "firebasehosting.projects.sites.versions.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/sites/{sitesId}/versions/{versionsId}",
                  "request": {
                    "$ref": "Version"
                  },
                  "path": "v1beta1/{+name}"
                },
                "populateFiles": {
                  "description": "Adds content files to a version.\nEach file must be under 2 GB.",
                  "id": "firebasehosting.projects.sites.versions.populateFiles",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/sites/{sitesId}/versions/{versionsId}:populateFiles",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "PopulateVersionFilesRequest"
                  },
                  "path": "v1beta1/{+parent}:populateFiles",
                  "parameters": {
                    "parent": {
                      "description": "Required. The version to add files to, in the format:\n\u003ccode\u003esites/\u003cvar\u003esite-name\u003c/var\u003e/versions/\u003cvar\u003eversionID\u003c/var\u003e\u003c/code\u003e",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/sites/[^/]+/versions/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "PopulateVersionFilesResponse"
                  }
                },
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/sites/[^/]+/versions/[^/]+$",
                      "description": "Required. The name of the version to be deleted, in the format:\n\u003ccode\u003esites/\u003cvar\u003esite-name\u003c/var\u003e/versions/\u003cvar\u003eversionID\u003c/var\u003e\u003c/code\u003e",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "description": "Deletes the specified version.",
                  "flatPath": "v1beta1/projects/{projectsId}/sites/{sitesId}/versions/{versionsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "path": "v1beta1/{+name}",
                  "response": {
                    "$ref": "Empty"
                  },
                  "id": "firebasehosting.projects.sites.versions.delete",
                  "httpMethod": "DELETE"
                }
              }
            }
          }
        }
      }
    }
  },
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "fullyEncodeReservedExpansion": true,
  "discoveryVersion": "v1"
}
