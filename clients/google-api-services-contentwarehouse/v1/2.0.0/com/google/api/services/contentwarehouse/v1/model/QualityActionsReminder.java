/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Next id: 32
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class QualityActionsReminder extends com.google.api.client.json.GenericJson {

  /**
   * OPTIONAL. True if the reminder is archived. Not present implies false.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean archived;

  /**
   * OPTIONAL. The time when this reminder is archived. Deprecated. Use `archived_timestamp`
   * instead.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiDateTime archivedTime;

  /**
   * OPTIONAL. When the reminder was completed (only present when archived == true). Maps to
   * apps_intelligence.dialog.Task's complete_time field.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String archivedTimestamp;

  /**
   * REQUIRED. async_interaction_type of the reminder trigger notification
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String asyncInteractionType;

  /**
   * OPTIONAL. Attachments associated with this Reminder. If the attachment has different behavior
   * on different surfaces (e.g., deeplinks), specify multiple attachments here, and specify the
   * surface types and links in the inner fields. There should be at most one attachment for each
   * surface.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AssistantRemindersAttachment> attachment;

  static {
    // hack to force ProGuard to consider AssistantRemindersAttachment used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(AssistantRemindersAttachment.class);
  }

  /**
   * OPTIONAL. Populated only for assignable reminders (E.g. "buy milk"). It will be used in the
   * post-execution card-rendering. If not poulated, i.e. in non-assignable mode, caller should
   * fallback to use $title.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String bareTitle;

  /**
   * OPTIONAL. The reminders "client" id. This ID uniquely identifies a reminder instance and may be
   * generated by any client that writes to our Reminder backend.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String clientId;

  /**
   * REQUIRED. The type of this attachment. This is used for frontends (e.g., Hubpage) to customize
   * UX. And also for customized VE logging.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private QualityDialogManagerReminderClientType clientType;

  /**
   * OPTIONAL. The create time of this reminder. This field is propagated only for the reminders
   * fetched from backend.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiDateTime createTime;

  /**
   * OPTIONAL. The create time of this reminder. This field is propagated only only for the
   * reminders fetched from backend.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTimestamp;

  /**
   * OPTIONAL. Creator of a reminder (owned by the current user). Used in shared reminder RUD
   * operations.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private QualityActionsReminderPerson creator;

  /**
   * OPTIONAL. Contains fields needed to build the customized notification card
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<QualityActionsCustomizedNotification> customizedNotificationCard;

  static {
    // hack to force ProGuard to consider QualityActionsCustomizedNotification used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(QualityActionsCustomizedNotification.class);
  }

  /**
   * A representation of the Gregorian calendar date and timezone-relative time a reminder is
   * scheduled for. This contains the date and time of either a single reminder or the upcoming
   * instance of a recurring reminder.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiDateTime datetime;

  /**
   * OPTIONAL. Full-length description of the reminder.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private QualityActionsReminderDocument documentAssignmentSource;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private QualityActionsReminderDynamiteGroup dynamiteGroupAssignmentSource;

  /**
   * DEPRECATED. Use `client_id` or `server_id` instead.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String id;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private QualityActionsReminderLocation location;

  /**
   * OPTIONAL. Associated logs to be plumbed through along with a reminder.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantLogsReminderLog log;

  /**
   * OPTIONAL. Memory record payload which is associated with this reminder. This will be set for
   * all Assistant reminders created after the first launch of the Reminder Memory integration, see
   * go/reminders-memory for more details. Also, this might apply to all other types of reminders.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantRemindersMemoryPayload memoryPayload;

  /**
   * OPTIONAL. True if the reminder is notifying on the device that is making the request to the
   * server.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean notifying;

  /**
   * OPTIONAL. Populated if the reminder is based off of a personal reference, e.g. [my hotel] when
   * the user has a hotel reservation. Contains the information needed for suggestion chip
   * attribution, e.g. a link back to the email reservation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private CopleySourceTypeList personalReferenceMetadata;

  /**
   * OPTIONAL. Recipient of a reminder (created by the current user). Used for shared reminder CRUD
   * operations.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private QualityActionsReminderPerson recipient;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private QualityActionsReminderRecurrenceInfo recurrence;

  /**
   * OPTIONAL. The reminders backend "server" id. Only filled in some scenarios, e.g. to generate
   * the reminders hubpage detailed-reminder view.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String serverId;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String symbolicTime;

  /**
   * REQUIRED. The main textual representation of the reminder with the final title. For assignable
   * reminders, this would be e.g. "From John: buy milk".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String title;

  /**
   * OPTIONAL. The last updated time of this reminder. This field is propagated only for the
   * reminders fetched from ARIS (go/aris-dd).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTimestamp;

  /**
   * OPTIONAL. True if the reminder is archived. Not present implies false.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getArchived() {
    return archived;
  }

  /**
   * OPTIONAL. True if the reminder is archived. Not present implies false.
   * @param archived archived or {@code null} for none
   */
  public QualityActionsReminder setArchived(java.lang.Boolean archived) {
    this.archived = archived;
    return this;
  }

  /**
   * OPTIONAL. The time when this reminder is archived. Deprecated. Use `archived_timestamp`
   * instead.
   * @return value or {@code null} for none
   */
  public AssistantApiDateTime getArchivedTime() {
    return archivedTime;
  }

  /**
   * OPTIONAL. The time when this reminder is archived. Deprecated. Use `archived_timestamp`
   * instead.
   * @param archivedTime archivedTime or {@code null} for none
   */
  public QualityActionsReminder setArchivedTime(AssistantApiDateTime archivedTime) {
    this.archivedTime = archivedTime;
    return this;
  }

  /**
   * OPTIONAL. When the reminder was completed (only present when archived == true). Maps to
   * apps_intelligence.dialog.Task's complete_time field.
   * @return value or {@code null} for none
   */
  public String getArchivedTimestamp() {
    return archivedTimestamp;
  }

  /**
   * OPTIONAL. When the reminder was completed (only present when archived == true). Maps to
   * apps_intelligence.dialog.Task's complete_time field.
   * @param archivedTimestamp archivedTimestamp or {@code null} for none
   */
  public QualityActionsReminder setArchivedTimestamp(String archivedTimestamp) {
    this.archivedTimestamp = archivedTimestamp;
    return this;
  }

  /**
   * REQUIRED. async_interaction_type of the reminder trigger notification
   * @return value or {@code null} for none
   */
  public java.lang.String getAsyncInteractionType() {
    return asyncInteractionType;
  }

  /**
   * REQUIRED. async_interaction_type of the reminder trigger notification
   * @param asyncInteractionType asyncInteractionType or {@code null} for none
   */
  public QualityActionsReminder setAsyncInteractionType(java.lang.String asyncInteractionType) {
    this.asyncInteractionType = asyncInteractionType;
    return this;
  }

  /**
   * OPTIONAL. Attachments associated with this Reminder. If the attachment has different behavior
   * on different surfaces (e.g., deeplinks), specify multiple attachments here, and specify the
   * surface types and links in the inner fields. There should be at most one attachment for each
   * surface.
   * @return value or {@code null} for none
   */
  public java.util.List<AssistantRemindersAttachment> getAttachment() {
    return attachment;
  }

  /**
   * OPTIONAL. Attachments associated with this Reminder. If the attachment has different behavior
   * on different surfaces (e.g., deeplinks), specify multiple attachments here, and specify the
   * surface types and links in the inner fields. There should be at most one attachment for each
   * surface.
   * @param attachment attachment or {@code null} for none
   */
  public QualityActionsReminder setAttachment(java.util.List<AssistantRemindersAttachment> attachment) {
    this.attachment = attachment;
    return this;
  }

  /**
   * OPTIONAL. Populated only for assignable reminders (E.g. "buy milk"). It will be used in the
   * post-execution card-rendering. If not poulated, i.e. in non-assignable mode, caller should
   * fallback to use $title.
   * @return value or {@code null} for none
   */
  public java.lang.String getBareTitle() {
    return bareTitle;
  }

  /**
   * OPTIONAL. Populated only for assignable reminders (E.g. "buy milk"). It will be used in the
   * post-execution card-rendering. If not poulated, i.e. in non-assignable mode, caller should
   * fallback to use $title.
   * @param bareTitle bareTitle or {@code null} for none
   */
  public QualityActionsReminder setBareTitle(java.lang.String bareTitle) {
    this.bareTitle = bareTitle;
    return this;
  }

  /**
   * OPTIONAL. The reminders "client" id. This ID uniquely identifies a reminder instance and may be
   * generated by any client that writes to our Reminder backend.
   * @return value or {@code null} for none
   */
  public java.lang.String getClientId() {
    return clientId;
  }

  /**
   * OPTIONAL. The reminders "client" id. This ID uniquely identifies a reminder instance and may be
   * generated by any client that writes to our Reminder backend.
   * @param clientId clientId or {@code null} for none
   */
  public QualityActionsReminder setClientId(java.lang.String clientId) {
    this.clientId = clientId;
    return this;
  }

  /**
   * REQUIRED. The type of this attachment. This is used for frontends (e.g., Hubpage) to customize
   * UX. And also for customized VE logging.
   * @return value or {@code null} for none
   */
  public QualityDialogManagerReminderClientType getClientType() {
    return clientType;
  }

  /**
   * REQUIRED. The type of this attachment. This is used for frontends (e.g., Hubpage) to customize
   * UX. And also for customized VE logging.
   * @param clientType clientType or {@code null} for none
   */
  public QualityActionsReminder setClientType(QualityDialogManagerReminderClientType clientType) {
    this.clientType = clientType;
    return this;
  }

  /**
   * OPTIONAL. The create time of this reminder. This field is propagated only for the reminders
   * fetched from backend.
   * @return value or {@code null} for none
   */
  public AssistantApiDateTime getCreateTime() {
    return createTime;
  }

  /**
   * OPTIONAL. The create time of this reminder. This field is propagated only for the reminders
   * fetched from backend.
   * @param createTime createTime or {@code null} for none
   */
  public QualityActionsReminder setCreateTime(AssistantApiDateTime createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * OPTIONAL. The create time of this reminder. This field is propagated only only for the
   * reminders fetched from backend.
   * @return value or {@code null} for none
   */
  public String getCreateTimestamp() {
    return createTimestamp;
  }

  /**
   * OPTIONAL. The create time of this reminder. This field is propagated only only for the
   * reminders fetched from backend.
   * @param createTimestamp createTimestamp or {@code null} for none
   */
  public QualityActionsReminder setCreateTimestamp(String createTimestamp) {
    this.createTimestamp = createTimestamp;
    return this;
  }

  /**
   * OPTIONAL. Creator of a reminder (owned by the current user). Used in shared reminder RUD
   * operations.
   * @return value or {@code null} for none
   */
  public QualityActionsReminderPerson getCreator() {
    return creator;
  }

  /**
   * OPTIONAL. Creator of a reminder (owned by the current user). Used in shared reminder RUD
   * operations.
   * @param creator creator or {@code null} for none
   */
  public QualityActionsReminder setCreator(QualityActionsReminderPerson creator) {
    this.creator = creator;
    return this;
  }

  /**
   * OPTIONAL. Contains fields needed to build the customized notification card
   * @return value or {@code null} for none
   */
  public java.util.List<QualityActionsCustomizedNotification> getCustomizedNotificationCard() {
    return customizedNotificationCard;
  }

  /**
   * OPTIONAL. Contains fields needed to build the customized notification card
   * @param customizedNotificationCard customizedNotificationCard or {@code null} for none
   */
  public QualityActionsReminder setCustomizedNotificationCard(java.util.List<QualityActionsCustomizedNotification> customizedNotificationCard) {
    this.customizedNotificationCard = customizedNotificationCard;
    return this;
  }

  /**
   * A representation of the Gregorian calendar date and timezone-relative time a reminder is
   * scheduled for. This contains the date and time of either a single reminder or the upcoming
   * instance of a recurring reminder.
   * @return value or {@code null} for none
   */
  public AssistantApiDateTime getDatetime() {
    return datetime;
  }

  /**
   * A representation of the Gregorian calendar date and timezone-relative time a reminder is
   * scheduled for. This contains the date and time of either a single reminder or the upcoming
   * instance of a recurring reminder.
   * @param datetime datetime or {@code null} for none
   */
  public QualityActionsReminder setDatetime(AssistantApiDateTime datetime) {
    this.datetime = datetime;
    return this;
  }

  /**
   * OPTIONAL. Full-length description of the reminder.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * OPTIONAL. Full-length description of the reminder.
   * @param description description or {@code null} for none
   */
  public QualityActionsReminder setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public QualityActionsReminderDocument getDocumentAssignmentSource() {
    return documentAssignmentSource;
  }

  /**
   * @param documentAssignmentSource documentAssignmentSource or {@code null} for none
   */
  public QualityActionsReminder setDocumentAssignmentSource(QualityActionsReminderDocument documentAssignmentSource) {
    this.documentAssignmentSource = documentAssignmentSource;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public QualityActionsReminderDynamiteGroup getDynamiteGroupAssignmentSource() {
    return dynamiteGroupAssignmentSource;
  }

  /**
   * @param dynamiteGroupAssignmentSource dynamiteGroupAssignmentSource or {@code null} for none
   */
  public QualityActionsReminder setDynamiteGroupAssignmentSource(QualityActionsReminderDynamiteGroup dynamiteGroupAssignmentSource) {
    this.dynamiteGroupAssignmentSource = dynamiteGroupAssignmentSource;
    return this;
  }

  /**
   * DEPRECATED. Use `client_id` or `server_id` instead.
   * @return value or {@code null} for none
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * DEPRECATED. Use `client_id` or `server_id` instead.
   * @param id id or {@code null} for none
   */
  public QualityActionsReminder setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public QualityActionsReminderLocation getLocation() {
    return location;
  }

  /**
   * @param location location or {@code null} for none
   */
  public QualityActionsReminder setLocation(QualityActionsReminderLocation location) {
    this.location = location;
    return this;
  }

  /**
   * OPTIONAL. Associated logs to be plumbed through along with a reminder.
   * @return value or {@code null} for none
   */
  public AssistantLogsReminderLog getLog() {
    return log;
  }

  /**
   * OPTIONAL. Associated logs to be plumbed through along with a reminder.
   * @param log log or {@code null} for none
   */
  public QualityActionsReminder setLog(AssistantLogsReminderLog log) {
    this.log = log;
    return this;
  }

  /**
   * OPTIONAL. Memory record payload which is associated with this reminder. This will be set for
   * all Assistant reminders created after the first launch of the Reminder Memory integration, see
   * go/reminders-memory for more details. Also, this might apply to all other types of reminders.
   * @return value or {@code null} for none
   */
  public AssistantRemindersMemoryPayload getMemoryPayload() {
    return memoryPayload;
  }

  /**
   * OPTIONAL. Memory record payload which is associated with this reminder. This will be set for
   * all Assistant reminders created after the first launch of the Reminder Memory integration, see
   * go/reminders-memory for more details. Also, this might apply to all other types of reminders.
   * @param memoryPayload memoryPayload or {@code null} for none
   */
  public QualityActionsReminder setMemoryPayload(AssistantRemindersMemoryPayload memoryPayload) {
    this.memoryPayload = memoryPayload;
    return this;
  }

  /**
   * OPTIONAL. True if the reminder is notifying on the device that is making the request to the
   * server.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getNotifying() {
    return notifying;
  }

  /**
   * OPTIONAL. True if the reminder is notifying on the device that is making the request to the
   * server.
   * @param notifying notifying or {@code null} for none
   */
  public QualityActionsReminder setNotifying(java.lang.Boolean notifying) {
    this.notifying = notifying;
    return this;
  }

  /**
   * OPTIONAL. Populated if the reminder is based off of a personal reference, e.g. [my hotel] when
   * the user has a hotel reservation. Contains the information needed for suggestion chip
   * attribution, e.g. a link back to the email reservation.
   * @return value or {@code null} for none
   */
  public CopleySourceTypeList getPersonalReferenceMetadata() {
    return personalReferenceMetadata;
  }

  /**
   * OPTIONAL. Populated if the reminder is based off of a personal reference, e.g. [my hotel] when
   * the user has a hotel reservation. Contains the information needed for suggestion chip
   * attribution, e.g. a link back to the email reservation.
   * @param personalReferenceMetadata personalReferenceMetadata or {@code null} for none
   */
  public QualityActionsReminder setPersonalReferenceMetadata(CopleySourceTypeList personalReferenceMetadata) {
    this.personalReferenceMetadata = personalReferenceMetadata;
    return this;
  }

  /**
   * OPTIONAL. Recipient of a reminder (created by the current user). Used for shared reminder CRUD
   * operations.
   * @return value or {@code null} for none
   */
  public QualityActionsReminderPerson getRecipient() {
    return recipient;
  }

  /**
   * OPTIONAL. Recipient of a reminder (created by the current user). Used for shared reminder CRUD
   * operations.
   * @param recipient recipient or {@code null} for none
   */
  public QualityActionsReminder setRecipient(QualityActionsReminderPerson recipient) {
    this.recipient = recipient;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public QualityActionsReminderRecurrenceInfo getRecurrence() {
    return recurrence;
  }

  /**
   * @param recurrence recurrence or {@code null} for none
   */
  public QualityActionsReminder setRecurrence(QualityActionsReminderRecurrenceInfo recurrence) {
    this.recurrence = recurrence;
    return this;
  }

  /**
   * OPTIONAL. The reminders backend "server" id. Only filled in some scenarios, e.g. to generate
   * the reminders hubpage detailed-reminder view.
   * @return value or {@code null} for none
   */
  public java.lang.String getServerId() {
    return serverId;
  }

  /**
   * OPTIONAL. The reminders backend "server" id. Only filled in some scenarios, e.g. to generate
   * the reminders hubpage detailed-reminder view.
   * @param serverId serverId or {@code null} for none
   */
  public QualityActionsReminder setServerId(java.lang.String serverId) {
    this.serverId = serverId;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getSymbolicTime() {
    return symbolicTime;
  }

  /**
   * @param symbolicTime symbolicTime or {@code null} for none
   */
  public QualityActionsReminder setSymbolicTime(java.lang.String symbolicTime) {
    this.symbolicTime = symbolicTime;
    return this;
  }

  /**
   * REQUIRED. The main textual representation of the reminder with the final title. For assignable
   * reminders, this would be e.g. "From John: buy milk".
   * @return value or {@code null} for none
   */
  public java.lang.String getTitle() {
    return title;
  }

  /**
   * REQUIRED. The main textual representation of the reminder with the final title. For assignable
   * reminders, this would be e.g. "From John: buy milk".
   * @param title title or {@code null} for none
   */
  public QualityActionsReminder setTitle(java.lang.String title) {
    this.title = title;
    return this;
  }

  /**
   * OPTIONAL. The last updated time of this reminder. This field is propagated only for the
   * reminders fetched from ARIS (go/aris-dd).
   * @return value or {@code null} for none
   */
  public String getUpdateTimestamp() {
    return updateTimestamp;
  }

  /**
   * OPTIONAL. The last updated time of this reminder. This field is propagated only for the
   * reminders fetched from ARIS (go/aris-dd).
   * @param updateTimestamp updateTimestamp or {@code null} for none
   */
  public QualityActionsReminder setUpdateTimestamp(String updateTimestamp) {
    this.updateTimestamp = updateTimestamp;
    return this;
  }

  @Override
  public QualityActionsReminder set(String fieldName, Object value) {
    return (QualityActionsReminder) super.set(fieldName, value);
  }

  @Override
  public QualityActionsReminder clone() {
    return (QualityActionsReminder) super.clone();
  }

}
