/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dlp.v2.model;

/**
 * Represents a container that may contain DLP findings. Examples of a container include a file,
 * table, or database record.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Data Loss Prevention (DLP) API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GooglePrivacyDlpV2Container extends com.google.api.client.json.GenericJson {

  /**
   * A string representation of the full container name. Examples: - BigQuery:
   * 'Project:DataSetId.TableId' - Google Cloud Storage: 'gs://Bucket/folders/filename.txt'
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String fullPath;

  /**
   * Project where the finding was found. Can be different from the project that owns the finding.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String projectId;

  /**
   * The rest of the path after the root. Examples: - For BigQuery table
   * `project_id:dataset_id.table_id`, the relative path is `table_id` - Google Cloud Storage file
   * `gs://bucket/folder/filename.txt`, the relative path is `folder/filename.txt`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String relativePath;

  /**
   * The root of the container. Examples: - For BigQuery table `project_id:dataset_id.table_id`, the
   * root is `dataset_id` - For Google Cloud Storage file `gs://bucket/folder/filename.txt`, the
   * root is `gs://bucket`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String rootPath;

  /**
   * Container type, for example BigQuery or Google Cloud Storage.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * Findings container modification timestamp, if applicable. For Google Cloud Storage contains
   * last file modification timestamp. For BigQuery table contains last_modified_time property. For
   * Datastore - not populated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Findings container version, if available ("generation" for Google Cloud Storage).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String version;

  /**
   * A string representation of the full container name. Examples: - BigQuery:
   * 'Project:DataSetId.TableId' - Google Cloud Storage: 'gs://Bucket/folders/filename.txt'
   * @return value or {@code null} for none
   */
  public java.lang.String getFullPath() {
    return fullPath;
  }

  /**
   * A string representation of the full container name. Examples: - BigQuery:
   * 'Project:DataSetId.TableId' - Google Cloud Storage: 'gs://Bucket/folders/filename.txt'
   * @param fullPath fullPath or {@code null} for none
   */
  public GooglePrivacyDlpV2Container setFullPath(java.lang.String fullPath) {
    this.fullPath = fullPath;
    return this;
  }

  /**
   * Project where the finding was found. Can be different from the project that owns the finding.
   * @return value or {@code null} for none
   */
  public java.lang.String getProjectId() {
    return projectId;
  }

  /**
   * Project where the finding was found. Can be different from the project that owns the finding.
   * @param projectId projectId or {@code null} for none
   */
  public GooglePrivacyDlpV2Container setProjectId(java.lang.String projectId) {
    this.projectId = projectId;
    return this;
  }

  /**
   * The rest of the path after the root. Examples: - For BigQuery table
   * `project_id:dataset_id.table_id`, the relative path is `table_id` - Google Cloud Storage file
   * `gs://bucket/folder/filename.txt`, the relative path is `folder/filename.txt`
   * @return value or {@code null} for none
   */
  public java.lang.String getRelativePath() {
    return relativePath;
  }

  /**
   * The rest of the path after the root. Examples: - For BigQuery table
   * `project_id:dataset_id.table_id`, the relative path is `table_id` - Google Cloud Storage file
   * `gs://bucket/folder/filename.txt`, the relative path is `folder/filename.txt`
   * @param relativePath relativePath or {@code null} for none
   */
  public GooglePrivacyDlpV2Container setRelativePath(java.lang.String relativePath) {
    this.relativePath = relativePath;
    return this;
  }

  /**
   * The root of the container. Examples: - For BigQuery table `project_id:dataset_id.table_id`, the
   * root is `dataset_id` - For Google Cloud Storage file `gs://bucket/folder/filename.txt`, the
   * root is `gs://bucket`
   * @return value or {@code null} for none
   */
  public java.lang.String getRootPath() {
    return rootPath;
  }

  /**
   * The root of the container. Examples: - For BigQuery table `project_id:dataset_id.table_id`, the
   * root is `dataset_id` - For Google Cloud Storage file `gs://bucket/folder/filename.txt`, the
   * root is `gs://bucket`
   * @param rootPath rootPath or {@code null} for none
   */
  public GooglePrivacyDlpV2Container setRootPath(java.lang.String rootPath) {
    this.rootPath = rootPath;
    return this;
  }

  /**
   * Container type, for example BigQuery or Google Cloud Storage.
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * Container type, for example BigQuery or Google Cloud Storage.
   * @param type type or {@code null} for none
   */
  public GooglePrivacyDlpV2Container setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  /**
   * Findings container modification timestamp, if applicable. For Google Cloud Storage contains
   * last file modification timestamp. For BigQuery table contains last_modified_time property. For
   * Datastore - not populated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Findings container modification timestamp, if applicable. For Google Cloud Storage contains
   * last file modification timestamp. For BigQuery table contains last_modified_time property. For
   * Datastore - not populated.
   * @param updateTime updateTime or {@code null} for none
   */
  public GooglePrivacyDlpV2Container setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  /**
   * Findings container version, if available ("generation" for Google Cloud Storage).
   * @return value or {@code null} for none
   */
  public java.lang.String getVersion() {
    return version;
  }

  /**
   * Findings container version, if available ("generation" for Google Cloud Storage).
   * @param version version or {@code null} for none
   */
  public GooglePrivacyDlpV2Container setVersion(java.lang.String version) {
    this.version = version;
    return this;
  }

  @Override
  public GooglePrivacyDlpV2Container set(String fieldName, Object value) {
    return (GooglePrivacyDlpV2Container) super.set(fieldName, value);
  }

  @Override
  public GooglePrivacyDlpV2Container clone() {
    return (GooglePrivacyDlpV2Container) super.clone();
  }

}
