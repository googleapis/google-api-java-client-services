/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.adsenseplatform.v1alpha;

/**
 * Service definition for AdSensePlatform (v1alpha).
 *
 * <p>
 * 
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://developers.google.com/adsense/platforms/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link AdSensePlatformRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class AdSensePlatform extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        (com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1))) ||
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION >= 2,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "2.0.0 of the AdSense Platform API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://adsenseplatform.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://adsenseplatform.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public AdSensePlatform(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  AdSensePlatform(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Accounts collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code AdSensePlatform adsenseplatform = new AdSensePlatform(...);}
   *   {@code AdSensePlatform.Accounts.List request = adsenseplatform.accounts().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Accounts accounts() {
    return new Accounts();
  }

  /**
   * The "accounts" collection of methods.
   */
  public class Accounts {

    /**
     * An accessor for creating requests from the Platforms collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code AdSensePlatform adsenseplatform = new AdSensePlatform(...);}
     *   {@code AdSensePlatform.Platforms.List request = adsenseplatform.platforms().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Platforms platforms() {
      return new Platforms();
    }

    /**
     * The "platforms" collection of methods.
     */
    public class Platforms {

      /**
       * Gets a platform.
       *
       * Create a request for the method "platforms.get".
       *
       * This request holds the parameters needed by the adsenseplatform server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the platform to retrieve. Format: accounts/{account}/platforms/{platform}
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends AdSensePlatformRequest<com.google.api.services.adsenseplatform.v1alpha.model.Platform> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/platforms/[^/]+$");

        /**
         * Gets a platform.
         *
         * Create a request for the method "platforms.get".
         *
         * This request holds the parameters needed by the the adsenseplatform server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the platform to retrieve. Format: accounts/{account}/platforms/{platform}
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(AdSensePlatform.this, "GET", REST_PATH, null, com.google.api.services.adsenseplatform.v1alpha.model.Platform.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/platforms/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the platform to retrieve. Format:
         * accounts/{account}/platforms/{platform}
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the platform to retrieve. Format: accounts/{account}/platforms/{platform}
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the platform to retrieve. Format:
         * accounts/{account}/platforms/{platform}
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/platforms/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists platforms for a specified account.
       *
       * Create a request for the method "platforms.list".
       *
       * This request holds the parameters needed by the adsenseplatform server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The account which owns the platforms. Format: accounts/{account}
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends AdSensePlatformRequest<com.google.api.services.adsenseplatform.v1alpha.model.ListPlatformsResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/platforms";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+$");

        /**
         * Lists platforms for a specified account.
         *
         * Create a request for the method "platforms.list".
         *
         * This request holds the parameters needed by the the adsenseplatform server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The account which owns the platforms. Format: accounts/{account}
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(AdSensePlatform.this, "GET", REST_PATH, null, com.google.api.services.adsenseplatform.v1alpha.model.ListPlatformsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The account which owns the platforms. Format: accounts/{account} */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The account which owns the platforms. Format: accounts/{account}
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. The account which owns the platforms. Format: accounts/{account} */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. The maximum number of platforms to include in the response, used for paging. If
         * unspecified, at most 10000 platforms will be returned. The maximum value is 10000; values
         * above 10000 will be coerced to 10000.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional. The maximum number of platforms to include in the response, used for paging. If
       unspecified, at most 10000 platforms will be returned. The maximum value is 10000; values above
       10000 will be coerced to 10000.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Optional. The maximum number of platforms to include in the response, used for paging. If
         * unspecified, at most 10000 platforms will be returned. The maximum value is 10000; values
         * above 10000 will be coerced to 10000.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Optional. A page token, received from a previous `ListPlatforms` call. Provide this to
         * retrieve the subsequent page. When paginating, all other parameters provided to
         * `ListPlatforms` must match the call that provided the page token.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional. A page token, received from a previous `ListPlatforms` call. Provide this to retrieve the
       subsequent page. When paginating, all other parameters provided to `ListPlatforms` must match the
       call that provided the page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Optional. A page token, received from a previous `ListPlatforms` call. Provide this to
         * retrieve the subsequent page. When paginating, all other parameters provided to
         * `ListPlatforms` must match the call that provided the page token.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the ChildAccounts collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code AdSensePlatform adsenseplatform = new AdSensePlatform(...);}
       *   {@code AdSensePlatform.ChildAccounts.List request = adsenseplatform.childAccounts().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public ChildAccounts childAccounts() {
        return new ChildAccounts();
      }

      /**
       * The "childAccounts" collection of methods.
       */
      public class ChildAccounts {

        /**
         * An accessor for creating requests from the Sites collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code AdSensePlatform adsenseplatform = new AdSensePlatform(...);}
         *   {@code AdSensePlatform.Sites.List request = adsenseplatform.sites().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Sites sites() {
          return new Sites();
        }

        /**
         * The "sites" collection of methods.
         */
        public class Sites {

          /**
           * Lists Platform Child Sites for a specified Platform Child Account.
           *
           * Create a request for the method "sites.list".
           *
           * This request holds the parameters needed by the adsenseplatform server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The name of the child account under the given platform which owns the platform child
           *        sites. Format: accounts/{account}/platforms/{platform}/childAccounts/{child_account}
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends AdSensePlatformRequest<com.google.api.services.adsenseplatform.v1alpha.model.ListPlatformChildSitesResponse> {

            private static final String REST_PATH = "v1alpha/{+parent}/sites";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^accounts/[^/]+/platforms/[^/]+/childAccounts/[^/]+$");

            /**
             * Lists Platform Child Sites for a specified Platform Child Account.
             *
             * Create a request for the method "sites.list".
             *
             * This request holds the parameters needed by the the adsenseplatform server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The name of the child account under the given platform which owns the platform child
           *        sites. Format: accounts/{account}/platforms/{platform}/childAccounts/{child_account}
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(AdSensePlatform.this, "GET", REST_PATH, null, com.google.api.services.adsenseplatform.v1alpha.model.ListPlatformChildSitesResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^accounts/[^/]+/platforms/[^/]+/childAccounts/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the child account under the given platform which owns the
             * platform child sites. Format:
             * accounts/{account}/platforms/{platform}/childAccounts/{child_account}
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The name of the child account under the given platform which owns the platform child
           sites. Format: accounts/{account}/platforms/{platform}/childAccounts/{child_account}
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The name of the child account under the given platform which owns the
             * platform child sites. Format:
             * accounts/{account}/platforms/{platform}/childAccounts/{child_account}
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^accounts/[^/]+/platforms/[^/]+/childAccounts/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Optional. The maximum number of children to include in the response, used for paging.
             * If unspecified, at most 10000 platforms will be returned. The maximum value is 10000;
             * values above 10000 will be coerced to 10000.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. The maximum number of children to include in the response, used for paging. If
           unspecified, at most 10000 platforms will be returned. The maximum value is 10000; values above
           10000 will be coerced to 10000.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. The maximum number of children to include in the response, used for paging.
             * If unspecified, at most 10000 platforms will be returned. The maximum value is 10000;
             * values above 10000 will be coerced to 10000.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * Optional. A page token, received from a previous `ListPlatformChildren` call. Provide
             * this to retrieve the subsequent page. When paginating, all other parameters provided
             * to `ListPlatformChildren` must match the call that provided the page token.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. A page token, received from a previous `ListPlatformChildren` call. Provide this to
           retrieve the subsequent page. When paginating, all other parameters provided to
           `ListPlatformChildren` must match the call that provided the page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * Optional. A page token, received from a previous `ListPlatformChildren` call. Provide
             * this to retrieve the subsequent page. When paginating, all other parameters provided
             * to `ListPlatformChildren` must match the call that provided the page token.
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Update a Platform Child Site.
           *
           * Create a request for the method "sites.patch".
           *
           * This request holds the parameters needed by the adsenseplatform server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Identifier. Format:
           *        accounts/{account}/platforms/{platform}/childAccounts/{child_account}/sites/{platform_chil
           *        d_site}
           * @param content the {@link com.google.api.services.adsenseplatform.v1alpha.model.PlatformChildSite}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.adsenseplatform.v1alpha.model.PlatformChildSite content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends AdSensePlatformRequest<com.google.api.services.adsenseplatform.v1alpha.model.PlatformChildSite> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^accounts/[^/]+/platforms/[^/]+/childAccounts/[^/]+/sites/[^/]+$");

            /**
             * Update a Platform Child Site.
             *
             * Create a request for the method "sites.patch".
             *
             * This request holds the parameters needed by the the adsenseplatform server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Identifier. Format:
           *        accounts/{account}/platforms/{platform}/childAccounts/{child_account}/sites/{platform_chil
           *        d_site}
             * @param content the {@link com.google.api.services.adsenseplatform.v1alpha.model.PlatformChildSite}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.adsenseplatform.v1alpha.model.PlatformChildSite content) {
              super(AdSensePlatform.this, "PATCH", REST_PATH, content, com.google.api.services.adsenseplatform.v1alpha.model.PlatformChildSite.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^accounts/[^/]+/platforms/[^/]+/childAccounts/[^/]+/sites/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Identifier. Format: accounts/{account}/platforms/{platform}/childAccounts/{child_acco
             * unt}/sites/{platform_child_site}
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Identifier. Format:
           accounts/{account}/platforms/{platform}/childAccounts/{child_account}/sites/{platform_child_site}
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Identifier. Format: accounts/{account}/platforms/{platform}/childAccounts/{child_acco
             * unt}/sites/{platform_child_site}
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^accounts/[^/]+/platforms/[^/]+/childAccounts/[^/]+/sites/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Optional. The list of fields to update - currently only supports updating the
             * `platform_group` field.
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Optional. The list of fields to update - currently only supports updating the `platform_group`
           field.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * Optional. The list of fields to update - currently only supports updating the
             * `platform_group` field.
             */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the Groups collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code AdSensePlatform adsenseplatform = new AdSensePlatform(...);}
       *   {@code AdSensePlatform.Groups.List request = adsenseplatform.groups().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Groups groups() {
        return new Groups();
      }

      /**
       * The "groups" collection of methods.
       */
      public class Groups {

        /**
         * Lists Platform Groups for a specified Platform.
         *
         * Create a request for the method "groups.list".
         *
         * This request holds the parameters needed by the adsenseplatform server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the platform to retrieve. Format: accounts/{account}/platforms/{platform}
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends AdSensePlatformRequest<com.google.api.services.adsenseplatform.v1alpha.model.ListPlatformGroupsResponse> {

          private static final String REST_PATH = "v1alpha/{+parent}/groups";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^accounts/[^/]+/platforms/[^/]+$");

          /**
           * Lists Platform Groups for a specified Platform.
           *
           * Create a request for the method "groups.list".
           *
           * This request holds the parameters needed by the the adsenseplatform server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the platform to retrieve. Format: accounts/{account}/platforms/{platform}
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(AdSensePlatform.this, "GET", REST_PATH, null, com.google.api.services.adsenseplatform.v1alpha.model.ListPlatformGroupsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^accounts/[^/]+/platforms/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the platform to retrieve. Format:
           * accounts/{account}/platforms/{platform}
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the platform to retrieve. Format: accounts/{account}/platforms/{platform}
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the platform to retrieve. Format:
           * accounts/{account}/platforms/{platform}
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^accounts/[^/]+/platforms/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. The maximum number of groups to include in the response, used for paging. If
           * unspecified, at most 10000 groups will be returned. The maximum value is 10000; values
           * above 10000 will be coerced to 10000.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of groups to include in the response, used for paging. If unspecified,
         at most 10000 groups will be returned. The maximum value is 10000; values above 10000 will be
         coerced to 10000.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of groups to include in the response, used for paging. If
           * unspecified, at most 10000 groups will be returned. The maximum value is 10000; values
           * above 10000 will be coerced to 10000.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Optional. A page token, received from a previous `ListPlatformGroups` call. Provide
           * this to retrieve the subsequent page. When paginating, all other parameters provided to
           * `ListPlatformGroups` must match the call that provided the page token.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. A page token, received from a previous `ListPlatformGroups` call. Provide this to
         retrieve the subsequent page. When paginating, all other parameters provided to
         `ListPlatformGroups` must match the call that provided the page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Optional. A page token, received from a previous `ListPlatformGroups` call. Provide
           * this to retrieve the subsequent page. When paginating, all other parameters provided to
           * `ListPlatformGroups` must match the call that provided the page token.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
    }
  }

  /**
   * An accessor for creating requests from the Platforms collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code AdSensePlatform adsenseplatform = new AdSensePlatform(...);}
   *   {@code AdSensePlatform.Platforms.List request = adsenseplatform.platforms().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Platforms platforms() {
    return new Platforms();
  }

  /**
   * The "platforms" collection of methods.
   */
  public class Platforms {

    /**
     * An accessor for creating requests from the Accounts collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code AdSensePlatform adsenseplatform = new AdSensePlatform(...);}
     *   {@code AdSensePlatform.Accounts.List request = adsenseplatform.accounts().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Accounts accounts() {
      return new Accounts();
    }

    /**
     * The "accounts" collection of methods.
     */
    public class Accounts {

      /**
       * Closes a sub-account.
       *
       * Create a request for the method "accounts.close".
       *
       * This request holds the parameters needed by the adsenseplatform server.  After setting any
       * optional parameters, call the {@link Close#execute()} method to invoke the remote operation.
       *
       * @param name Required. Account to close. Format: platforms/{platform}/accounts/{account_id}
       * @param content the {@link com.google.api.services.adsenseplatform.v1alpha.model.CloseAccountRequest}
       * @return the request
       */
      public Close close(java.lang.String name, com.google.api.services.adsenseplatform.v1alpha.model.CloseAccountRequest content) throws java.io.IOException {
        Close result = new Close(name, content);
        initialize(result);
        return result;
      }

      public class Close extends AdSensePlatformRequest<com.google.api.services.adsenseplatform.v1alpha.model.CloseAccountResponse> {

        private static final String REST_PATH = "v1alpha/{+name}:close";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^platforms/[^/]+/accounts/[^/]+$");

        /**
         * Closes a sub-account.
         *
         * Create a request for the method "accounts.close".
         *
         * This request holds the parameters needed by the the adsenseplatform server.  After setting any
         * optional parameters, call the {@link Close#execute()} method to invoke the remote operation.
         * <p> {@link
         * Close#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Account to close. Format: platforms/{platform}/accounts/{account_id}
         * @param content the {@link com.google.api.services.adsenseplatform.v1alpha.model.CloseAccountRequest}
         * @since 1.13
         */
        protected Close(java.lang.String name, com.google.api.services.adsenseplatform.v1alpha.model.CloseAccountRequest content) {
          super(AdSensePlatform.this, "POST", REST_PATH, content, com.google.api.services.adsenseplatform.v1alpha.model.CloseAccountResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^platforms/[^/]+/accounts/[^/]+$");
          }
        }

        @Override
        public Close set$Xgafv(java.lang.String $Xgafv) {
          return (Close) super.set$Xgafv($Xgafv);
        }

        @Override
        public Close setAccessToken(java.lang.String accessToken) {
          return (Close) super.setAccessToken(accessToken);
        }

        @Override
        public Close setAlt(java.lang.String alt) {
          return (Close) super.setAlt(alt);
        }

        @Override
        public Close setCallback(java.lang.String callback) {
          return (Close) super.setCallback(callback);
        }

        @Override
        public Close setFields(java.lang.String fields) {
          return (Close) super.setFields(fields);
        }

        @Override
        public Close setKey(java.lang.String key) {
          return (Close) super.setKey(key);
        }

        @Override
        public Close setOauthToken(java.lang.String oauthToken) {
          return (Close) super.setOauthToken(oauthToken);
        }

        @Override
        public Close setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Close) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Close setQuotaUser(java.lang.String quotaUser) {
          return (Close) super.setQuotaUser(quotaUser);
        }

        @Override
        public Close setUploadType(java.lang.String uploadType) {
          return (Close) super.setUploadType(uploadType);
        }

        @Override
        public Close setUploadProtocol(java.lang.String uploadProtocol) {
          return (Close) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Account to close. Format: platforms/{platform}/accounts/{account_id} */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Account to close. Format: platforms/{platform}/accounts/{account_id}
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. Account to close. Format: platforms/{platform}/accounts/{account_id} */
        public Close setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^platforms/[^/]+/accounts/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Close set(String parameterName, Object value) {
          return (Close) super.set(parameterName, value);
        }
      }
      /**
       * Creates a sub-account.
       *
       * Create a request for the method "accounts.create".
       *
       * This request holds the parameters needed by the adsenseplatform server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Platform to create an account for. Format: platforms/{platform}
       * @param content the {@link com.google.api.services.adsenseplatform.v1alpha.model.Account}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.adsenseplatform.v1alpha.model.Account content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends AdSensePlatformRequest<com.google.api.services.adsenseplatform.v1alpha.model.Account> {

        private static final String REST_PATH = "v1alpha/{+parent}/accounts";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^platforms/[^/]+$");

        /**
         * Creates a sub-account.
         *
         * Create a request for the method "accounts.create".
         *
         * This request holds the parameters needed by the the adsenseplatform server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Platform to create an account for. Format: platforms/{platform}
         * @param content the {@link com.google.api.services.adsenseplatform.v1alpha.model.Account}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.adsenseplatform.v1alpha.model.Account content) {
          super(AdSensePlatform.this, "POST", REST_PATH, content, com.google.api.services.adsenseplatform.v1alpha.model.Account.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^platforms/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Platform to create an account for. Format: platforms/{platform} */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Platform to create an account for. Format: platforms/{platform}
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Platform to create an account for. Format: platforms/{platform} */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^platforms/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Gets information about the selected sub-account.
       *
       * Create a request for the method "accounts.get".
       *
       * This request holds the parameters needed by the adsenseplatform server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. Account to get information about. Format: platforms/{platform}/accounts/{account_id}
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends AdSensePlatformRequest<com.google.api.services.adsenseplatform.v1alpha.model.Account> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^platforms/[^/]+/accounts/[^/]+$");

        /**
         * Gets information about the selected sub-account.
         *
         * Create a request for the method "accounts.get".
         *
         * This request holds the parameters needed by the the adsenseplatform server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Account to get information about. Format: platforms/{platform}/accounts/{account_id}
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(AdSensePlatform.this, "GET", REST_PATH, null, com.google.api.services.adsenseplatform.v1alpha.model.Account.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^platforms/[^/]+/accounts/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Account to get information about. Format:
         * platforms/{platform}/accounts/{account_id}
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Account to get information about. Format: platforms/{platform}/accounts/{account_id}
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Account to get information about. Format:
         * platforms/{platform}/accounts/{account_id}
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^platforms/[^/]+/accounts/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists a partial view of sub-accounts for a specific parent account.
       *
       * Create a request for the method "accounts.list".
       *
       * This request holds the parameters needed by the adsenseplatform server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Platform who parents the accounts. Format: platforms/{platform}
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends AdSensePlatformRequest<com.google.api.services.adsenseplatform.v1alpha.model.ListAccountsResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/accounts";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^platforms/[^/]+$");

        /**
         * Lists a partial view of sub-accounts for a specific parent account.
         *
         * Create a request for the method "accounts.list".
         *
         * This request holds the parameters needed by the the adsenseplatform server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Platform who parents the accounts. Format: platforms/{platform}
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(AdSensePlatform.this, "GET", REST_PATH, null, com.google.api.services.adsenseplatform.v1alpha.model.ListAccountsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^platforms/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Platform who parents the accounts. Format: platforms/{platform} */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Platform who parents the accounts. Format: platforms/{platform}
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Platform who parents the accounts. Format: platforms/{platform} */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^platforms/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. The maximum number of accounts to include in the response, used for paging. If
         * unspecified, at most 10000 accounts will be returned. The maximum value is 10000; values
         * above 10000 will be coerced to 10000.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional. The maximum number of accounts to include in the response, used for paging. If
       unspecified, at most 10000 accounts will be returned. The maximum value is 10000; values above
       10000 will be coerced to 10000.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Optional. The maximum number of accounts to include in the response, used for paging. If
         * unspecified, at most 10000 accounts will be returned. The maximum value is 10000; values
         * above 10000 will be coerced to 10000.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Optional. A page token, received from a previous `ListAccounts` call. Provide this to
         * retrieve the subsequent page.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional. A page token, received from a previous `ListAccounts` call. Provide this to retrieve the
       subsequent page.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Optional. A page token, received from a previous `ListAccounts` call. Provide this to
         * retrieve the subsequent page.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Looks up information about a sub-account for a specified creation_request_id. If no account
       * exists for the given creation_request_id, returns 404.
       *
       * Create a request for the method "accounts.lookup".
       *
       * This request holds the parameters needed by the adsenseplatform server.  After setting any
       * optional parameters, call the {@link Lookup#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Platform who parents the account. Format: platforms/{platform}
       * @return the request
       */
      public Lookup lookup(java.lang.String parent) throws java.io.IOException {
        Lookup result = new Lookup(parent);
        initialize(result);
        return result;
      }

      public class Lookup extends AdSensePlatformRequest<com.google.api.services.adsenseplatform.v1alpha.model.LookupAccountResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/accounts:lookup";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^platforms/[^/]+$");

        /**
         * Looks up information about a sub-account for a specified creation_request_id. If no account
         * exists for the given creation_request_id, returns 404.
         *
         * Create a request for the method "accounts.lookup".
         *
         * This request holds the parameters needed by the the adsenseplatform server.  After setting any
         * optional parameters, call the {@link Lookup#execute()} method to invoke the remote operation.
         * <p> {@link
         * Lookup#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Platform who parents the account. Format: platforms/{platform}
         * @since 1.13
         */
        protected Lookup(java.lang.String parent) {
          super(AdSensePlatform.this, "GET", REST_PATH, null, com.google.api.services.adsenseplatform.v1alpha.model.LookupAccountResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^platforms/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Lookup set$Xgafv(java.lang.String $Xgafv) {
          return (Lookup) super.set$Xgafv($Xgafv);
        }

        @Override
        public Lookup setAccessToken(java.lang.String accessToken) {
          return (Lookup) super.setAccessToken(accessToken);
        }

        @Override
        public Lookup setAlt(java.lang.String alt) {
          return (Lookup) super.setAlt(alt);
        }

        @Override
        public Lookup setCallback(java.lang.String callback) {
          return (Lookup) super.setCallback(callback);
        }

        @Override
        public Lookup setFields(java.lang.String fields) {
          return (Lookup) super.setFields(fields);
        }

        @Override
        public Lookup setKey(java.lang.String key) {
          return (Lookup) super.setKey(key);
        }

        @Override
        public Lookup setOauthToken(java.lang.String oauthToken) {
          return (Lookup) super.setOauthToken(oauthToken);
        }

        @Override
        public Lookup setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Lookup) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Lookup setQuotaUser(java.lang.String quotaUser) {
          return (Lookup) super.setQuotaUser(quotaUser);
        }

        @Override
        public Lookup setUploadType(java.lang.String uploadType) {
          return (Lookup) super.setUploadType(uploadType);
        }

        @Override
        public Lookup setUploadProtocol(java.lang.String uploadProtocol) {
          return (Lookup) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Platform who parents the account. Format: platforms/{platform} */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Platform who parents the account. Format: platforms/{platform}
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Platform who parents the account. Format: platforms/{platform} */
        public Lookup setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^platforms/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** Optional. The creation_request_id provided when calling createAccount. */
        @com.google.api.client.util.Key
        private java.lang.String creationRequestId;

        /** Optional. The creation_request_id provided when calling createAccount.
         */
        public java.lang.String getCreationRequestId() {
          return creationRequestId;
        }

        /** Optional. The creation_request_id provided when calling createAccount. */
        public Lookup setCreationRequestId(java.lang.String creationRequestId) {
          this.creationRequestId = creationRequestId;
          return this;
        }

        @Override
        public Lookup set(String parameterName, Object value) {
          return (Lookup) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Events collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code AdSensePlatform adsenseplatform = new AdSensePlatform(...);}
       *   {@code AdSensePlatform.Events.List request = adsenseplatform.events().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Events events() {
        return new Events();
      }

      /**
       * The "events" collection of methods.
       */
      public class Events {

        /**
         * Creates an account event.
         *
         * Create a request for the method "events.create".
         *
         * This request holds the parameters needed by the adsenseplatform server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Account to log events about. Format: platforms/{platform}/accounts/{account}
         * @param content the {@link com.google.api.services.adsenseplatform.v1alpha.model.Event}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.adsenseplatform.v1alpha.model.Event content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends AdSensePlatformRequest<com.google.api.services.adsenseplatform.v1alpha.model.Event> {

          private static final String REST_PATH = "v1alpha/{+parent}/events";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^platforms/[^/]+/accounts/[^/]+$");

          /**
           * Creates an account event.
           *
           * Create a request for the method "events.create".
           *
           * This request holds the parameters needed by the the adsenseplatform server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Account to log events about. Format: platforms/{platform}/accounts/{account}
           * @param content the {@link com.google.api.services.adsenseplatform.v1alpha.model.Event}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.adsenseplatform.v1alpha.model.Event content) {
            super(AdSensePlatform.this, "POST", REST_PATH, content, com.google.api.services.adsenseplatform.v1alpha.model.Event.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^platforms/[^/]+/accounts/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Account to log events about. Format: platforms/{platform}/accounts/{account}
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Account to log events about. Format: platforms/{platform}/accounts/{account}
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Account to log events about. Format: platforms/{platform}/accounts/{account}
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^platforms/[^/]+/accounts/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Sites collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code AdSensePlatform adsenseplatform = new AdSensePlatform(...);}
       *   {@code AdSensePlatform.Sites.List request = adsenseplatform.sites().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Sites sites() {
        return new Sites();
      }

      /**
       * The "sites" collection of methods.
       */
      public class Sites {

        /**
         * Creates a site for a specified account.
         *
         * Create a request for the method "sites.create".
         *
         * This request holds the parameters needed by the adsenseplatform server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Account to create site. Format: platforms/{platform}/accounts/{account_id}
         * @param content the {@link com.google.api.services.adsenseplatform.v1alpha.model.Site}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.adsenseplatform.v1alpha.model.Site content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends AdSensePlatformRequest<com.google.api.services.adsenseplatform.v1alpha.model.Site> {

          private static final String REST_PATH = "v1alpha/{+parent}/sites";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^platforms/[^/]+/accounts/[^/]+$");

          /**
           * Creates a site for a specified account.
           *
           * Create a request for the method "sites.create".
           *
           * This request holds the parameters needed by the the adsenseplatform server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Account to create site. Format: platforms/{platform}/accounts/{account_id}
           * @param content the {@link com.google.api.services.adsenseplatform.v1alpha.model.Site}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.adsenseplatform.v1alpha.model.Site content) {
            super(AdSensePlatform.this, "POST", REST_PATH, content, com.google.api.services.adsenseplatform.v1alpha.model.Site.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^platforms/[^/]+/accounts/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Account to create site. Format: platforms/{platform}/accounts/{account_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Account to create site. Format: platforms/{platform}/accounts/{account_id}
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Account to create site. Format: platforms/{platform}/accounts/{account_id}
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^platforms/[^/]+/accounts/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a site from a specified account.
         *
         * Create a request for the method "sites.delete".
         *
         * This request holds the parameters needed by the adsenseplatform server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the site to delete. Format:
         *        platforms/{platform}/accounts/{account}/sites/{site}
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends AdSensePlatformRequest<com.google.api.services.adsenseplatform.v1alpha.model.Empty> {

          private static final String REST_PATH = "v1alpha/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^platforms/[^/]+/accounts/[^/]+/sites/[^/]+$");

          /**
           * Deletes a site from a specified account.
           *
           * Create a request for the method "sites.delete".
           *
           * This request holds the parameters needed by the the adsenseplatform server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the site to delete. Format:
         *        platforms/{platform}/accounts/{account}/sites/{site}
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(AdSensePlatform.this, "DELETE", REST_PATH, null, com.google.api.services.adsenseplatform.v1alpha.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^platforms/[^/]+/accounts/[^/]+/sites/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the site to delete. Format:
           * platforms/{platform}/accounts/{account}/sites/{site}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the site to delete. Format:
         platforms/{platform}/accounts/{account}/sites/{site}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the site to delete. Format:
           * platforms/{platform}/accounts/{account}/sites/{site}
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^platforms/[^/]+/accounts/[^/]+/sites/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a site from a specified sub-account.
         *
         * Create a request for the method "sites.get".
         *
         * This request holds the parameters needed by the adsenseplatform server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the site to retrieve. Format:
         *        platforms/{platform}/accounts/{account}/sites/{site}
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends AdSensePlatformRequest<com.google.api.services.adsenseplatform.v1alpha.model.Site> {

          private static final String REST_PATH = "v1alpha/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^platforms/[^/]+/accounts/[^/]+/sites/[^/]+$");

          /**
           * Gets a site from a specified sub-account.
           *
           * Create a request for the method "sites.get".
           *
           * This request holds the parameters needed by the the adsenseplatform server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the site to retrieve. Format:
         *        platforms/{platform}/accounts/{account}/sites/{site}
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(AdSensePlatform.this, "GET", REST_PATH, null, com.google.api.services.adsenseplatform.v1alpha.model.Site.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^platforms/[^/]+/accounts/[^/]+/sites/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the site to retrieve. Format:
           * platforms/{platform}/accounts/{account}/sites/{site}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the site to retrieve. Format:
         platforms/{platform}/accounts/{account}/sites/{site}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the site to retrieve. Format:
           * platforms/{platform}/accounts/{account}/sites/{site}
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^platforms/[^/]+/accounts/[^/]+/sites/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists sites for a specific account.
         *
         * Create a request for the method "sites.list".
         *
         * This request holds the parameters needed by the adsenseplatform server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The account which owns the sites. Format: platforms/{platform}/accounts/{account}
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends AdSensePlatformRequest<com.google.api.services.adsenseplatform.v1alpha.model.ListSitesResponse> {

          private static final String REST_PATH = "v1alpha/{+parent}/sites";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^platforms/[^/]+/accounts/[^/]+$");

          /**
           * Lists sites for a specific account.
           *
           * Create a request for the method "sites.list".
           *
           * This request holds the parameters needed by the the adsenseplatform server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The account which owns the sites. Format: platforms/{platform}/accounts/{account}
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(AdSensePlatform.this, "GET", REST_PATH, null, com.google.api.services.adsenseplatform.v1alpha.model.ListSitesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^platforms/[^/]+/accounts/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The account which owns the sites. Format:
           * platforms/{platform}/accounts/{account}
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The account which owns the sites. Format: platforms/{platform}/accounts/{account}
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The account which owns the sites. Format:
           * platforms/{platform}/accounts/{account}
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^platforms/[^/]+/accounts/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * The maximum number of sites to include in the response, used for paging. If
           * unspecified, at most 10000 sites will be returned. The maximum value is 10000; values
           * above 10000 will be coerced to 10000.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of sites to include in the response, used for paging. If unspecified, at most
         10000 sites will be returned. The maximum value is 10000; values above 10000 will be coerced to
         10000.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * The maximum number of sites to include in the response, used for paging. If
           * unspecified, at most 10000 sites will be returned. The maximum value is 10000; values
           * above 10000 will be coerced to 10000.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * A page token, received from a previous `ListSites` call. Provide this to retrieve the
           * subsequent page. When paginating, all other parameters provided to `ListSites` must
           * match the call that provided the page token.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** A page token, received from a previous `ListSites` call. Provide this to retrieve the subsequent
         page. When paginating, all other parameters provided to `ListSites` must match the call that
         provided the page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * A page token, received from a previous `ListSites` call. Provide this to retrieve the
           * subsequent page. When paginating, all other parameters provided to `ListSites` must
           * match the call that provided the page token.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Requests the review of a site. The site should be in REQUIRES_REVIEW or NEEDS_ATTENTION state.
         * Note: Make sure you place an [ad tag](https://developers.google.com/adsense/platforms/direct/ad-
         * tags) on your site before requesting a review.
         *
         * Create a request for the method "sites.requestReview".
         *
         * This request holds the parameters needed by the adsenseplatform server.  After setting any
         * optional parameters, call the {@link RequestReview#execute()} method to invoke the remote
         * operation.
         *
         * @param name Required. The name of the site to submit for review. Format:
         *        platforms/{platform}/accounts/{account}/sites/{site}
         * @return the request
         */
        public RequestReview requestReview(java.lang.String name) throws java.io.IOException {
          RequestReview result = new RequestReview(name);
          initialize(result);
          return result;
        }

        public class RequestReview extends AdSensePlatformRequest<com.google.api.services.adsenseplatform.v1alpha.model.RequestSiteReviewResponse> {

          private static final String REST_PATH = "v1alpha/{+name}:requestReview";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^platforms/[^/]+/accounts/[^/]+/sites/[^/]+$");

          /**
           * Requests the review of a site. The site should be in REQUIRES_REVIEW or NEEDS_ATTENTION state.
           * Note: Make sure you place an [ad
           * tag](https://developers.google.com/adsense/platforms/direct/ad-tags) on your site before
           * requesting a review.
           *
           * Create a request for the method "sites.requestReview".
           *
           * This request holds the parameters needed by the the adsenseplatform server.  After setting any
           * optional parameters, call the {@link RequestReview#execute()} method to invoke the remote
           * operation. <p> {@link RequestReview#initialize(com.google.api.client.googleapis.services.Abstra
           * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
           * the constructor. </p>
           *
           * @param name Required. The name of the site to submit for review. Format:
         *        platforms/{platform}/accounts/{account}/sites/{site}
           * @since 1.13
           */
          protected RequestReview(java.lang.String name) {
            super(AdSensePlatform.this, "POST", REST_PATH, null, com.google.api.services.adsenseplatform.v1alpha.model.RequestSiteReviewResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^platforms/[^/]+/accounts/[^/]+/sites/[^/]+$");
            }
          }

          @Override
          public RequestReview set$Xgafv(java.lang.String $Xgafv) {
            return (RequestReview) super.set$Xgafv($Xgafv);
          }

          @Override
          public RequestReview setAccessToken(java.lang.String accessToken) {
            return (RequestReview) super.setAccessToken(accessToken);
          }

          @Override
          public RequestReview setAlt(java.lang.String alt) {
            return (RequestReview) super.setAlt(alt);
          }

          @Override
          public RequestReview setCallback(java.lang.String callback) {
            return (RequestReview) super.setCallback(callback);
          }

          @Override
          public RequestReview setFields(java.lang.String fields) {
            return (RequestReview) super.setFields(fields);
          }

          @Override
          public RequestReview setKey(java.lang.String key) {
            return (RequestReview) super.setKey(key);
          }

          @Override
          public RequestReview setOauthToken(java.lang.String oauthToken) {
            return (RequestReview) super.setOauthToken(oauthToken);
          }

          @Override
          public RequestReview setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (RequestReview) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public RequestReview setQuotaUser(java.lang.String quotaUser) {
            return (RequestReview) super.setQuotaUser(quotaUser);
          }

          @Override
          public RequestReview setUploadType(java.lang.String uploadType) {
            return (RequestReview) super.setUploadType(uploadType);
          }

          @Override
          public RequestReview setUploadProtocol(java.lang.String uploadProtocol) {
            return (RequestReview) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the site to submit for review. Format:
           * platforms/{platform}/accounts/{account}/sites/{site}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the site to submit for review. Format:
         platforms/{platform}/accounts/{account}/sites/{site}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the site to submit for review. Format:
           * platforms/{platform}/accounts/{account}/sites/{site}
           */
          public RequestReview setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^platforms/[^/]+/accounts/[^/]+/sites/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public RequestReview set(String parameterName, Object value) {
            return (RequestReview) super.set(parameterName, value);
          }
        }

      }
    }
  }

  /**
   * Builder for {@link AdSensePlatform}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link AdSensePlatform}. */
    @Override
    public AdSensePlatform build() {
      return new AdSensePlatform(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link AdSensePlatformRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setAdSensePlatformRequestInitializer(
        AdSensePlatformRequestInitializer adsenseplatformRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(adsenseplatformRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }

    @Override
    public Builder setUniverseDomain(String universeDomain) {
      return (Builder) super.setUniverseDomain(universeDomain);
    }
  }
}
