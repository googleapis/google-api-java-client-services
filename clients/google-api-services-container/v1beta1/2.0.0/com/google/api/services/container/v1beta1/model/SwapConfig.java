/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.container.v1beta1.model;

/**
 * Configuration for swap memory on a node pool.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Kubernetes Engine API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class SwapConfig extends com.google.api.client.json.GenericJson {

  /**
   * Swap on the node's boot disk.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private BootDiskProfile bootDiskProfile;

  /**
   * Provisions a new, separate local NVMe SSD exclusively for swap.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DedicatedLocalSsdProfile dedicatedLocalSsdProfile;

  /**
   * Optional. Enables or disables swap for the node pool.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean enabled;

  /**
   * Optional. If omitted, swap space is encrypted by default.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private EncryptionConfig encryptionConfig;

  /**
   * Swap on the local SSD shared with pod ephemeral storage.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private EphemeralLocalSsdProfile ephemeralLocalSsdProfile;

  /**
   * Swap on the node's boot disk.
   * @return value or {@code null} for none
   */
  public BootDiskProfile getBootDiskProfile() {
    return bootDiskProfile;
  }

  /**
   * Swap on the node's boot disk.
   * @param bootDiskProfile bootDiskProfile or {@code null} for none
   */
  public SwapConfig setBootDiskProfile(BootDiskProfile bootDiskProfile) {
    this.bootDiskProfile = bootDiskProfile;
    return this;
  }

  /**
   * Provisions a new, separate local NVMe SSD exclusively for swap.
   * @return value or {@code null} for none
   */
  public DedicatedLocalSsdProfile getDedicatedLocalSsdProfile() {
    return dedicatedLocalSsdProfile;
  }

  /**
   * Provisions a new, separate local NVMe SSD exclusively for swap.
   * @param dedicatedLocalSsdProfile dedicatedLocalSsdProfile or {@code null} for none
   */
  public SwapConfig setDedicatedLocalSsdProfile(DedicatedLocalSsdProfile dedicatedLocalSsdProfile) {
    this.dedicatedLocalSsdProfile = dedicatedLocalSsdProfile;
    return this;
  }

  /**
   * Optional. Enables or disables swap for the node pool.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getEnabled() {
    return enabled;
  }

  /**
   * Optional. Enables or disables swap for the node pool.
   * @param enabled enabled or {@code null} for none
   */
  public SwapConfig setEnabled(java.lang.Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * Optional. If omitted, swap space is encrypted by default.
   * @return value or {@code null} for none
   */
  public EncryptionConfig getEncryptionConfig() {
    return encryptionConfig;
  }

  /**
   * Optional. If omitted, swap space is encrypted by default.
   * @param encryptionConfig encryptionConfig or {@code null} for none
   */
  public SwapConfig setEncryptionConfig(EncryptionConfig encryptionConfig) {
    this.encryptionConfig = encryptionConfig;
    return this;
  }

  /**
   * Swap on the local SSD shared with pod ephemeral storage.
   * @return value or {@code null} for none
   */
  public EphemeralLocalSsdProfile getEphemeralLocalSsdProfile() {
    return ephemeralLocalSsdProfile;
  }

  /**
   * Swap on the local SSD shared with pod ephemeral storage.
   * @param ephemeralLocalSsdProfile ephemeralLocalSsdProfile or {@code null} for none
   */
  public SwapConfig setEphemeralLocalSsdProfile(EphemeralLocalSsdProfile ephemeralLocalSsdProfile) {
    this.ephemeralLocalSsdProfile = ephemeralLocalSsdProfile;
    return this;
  }

  @Override
  public SwapConfig set(String fieldName, Object value) {
    return (SwapConfig) super.set(fieldName, value);
  }

  @Override
  public SwapConfig clone() {
    return (SwapConfig) super.clone();
  }

}
