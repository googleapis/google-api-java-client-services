/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Model definition for QualityPreviewSnippetRadishFeatures.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class QualityPreviewSnippetRadishFeatures extends com.google.api.client.json.GenericJson {

  /**
   * Answer score of the passage for this `navboost_query`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float answerScore;

  /**
   * Navboost query for this radish signal.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String navboostQuery;

  /**
   * The ratio of overlapping tokens between the radish passage and snippet candidate.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float passageCoverage;

  /**
   * Integer value of indexing::annotations::wa_passages::Passage::Type.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Long passageType;

  /**
   * The index of this passage under `navboost_query`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Long queryPassageIdx;

  /**
   * How the similarity score is computed. Integer value of
   * mustang_repos_www_snippets::RadishSignalScoringInfo::SimilarityMethod.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Long similarityMethod;

  /**
   * Similarity score between this `navboost_query` and the incoming query.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float similarityScore;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float snippetCoverage;

  /**
   * Answer score of the passage for this `navboost_query`.
   * @return value or {@code null} for none
   */
  public java.lang.Float getAnswerScore() {
    return answerScore;
  }

  /**
   * Answer score of the passage for this `navboost_query`.
   * @param answerScore answerScore or {@code null} for none
   */
  public QualityPreviewSnippetRadishFeatures setAnswerScore(java.lang.Float answerScore) {
    this.answerScore = answerScore;
    return this;
  }

  /**
   * Navboost query for this radish signal.
   * @return value or {@code null} for none
   */
  public java.lang.String getNavboostQuery() {
    return navboostQuery;
  }

  /**
   * Navboost query for this radish signal.
   * @param navboostQuery navboostQuery or {@code null} for none
   */
  public QualityPreviewSnippetRadishFeatures setNavboostQuery(java.lang.String navboostQuery) {
    this.navboostQuery = navboostQuery;
    return this;
  }

  /**
   * The ratio of overlapping tokens between the radish passage and snippet candidate.
   * @return value or {@code null} for none
   */
  public java.lang.Float getPassageCoverage() {
    return passageCoverage;
  }

  /**
   * The ratio of overlapping tokens between the radish passage and snippet candidate.
   * @param passageCoverage passageCoverage or {@code null} for none
   */
  public QualityPreviewSnippetRadishFeatures setPassageCoverage(java.lang.Float passageCoverage) {
    this.passageCoverage = passageCoverage;
    return this;
  }

  /**
   * Integer value of indexing::annotations::wa_passages::Passage::Type.
   * @return value or {@code null} for none
   */
  public java.lang.Long getPassageType() {
    return passageType;
  }

  /**
   * Integer value of indexing::annotations::wa_passages::Passage::Type.
   * @param passageType passageType or {@code null} for none
   */
  public QualityPreviewSnippetRadishFeatures setPassageType(java.lang.Long passageType) {
    this.passageType = passageType;
    return this;
  }

  /**
   * The index of this passage under `navboost_query`.
   * @return value or {@code null} for none
   */
  public java.lang.Long getQueryPassageIdx() {
    return queryPassageIdx;
  }

  /**
   * The index of this passage under `navboost_query`.
   * @param queryPassageIdx queryPassageIdx or {@code null} for none
   */
  public QualityPreviewSnippetRadishFeatures setQueryPassageIdx(java.lang.Long queryPassageIdx) {
    this.queryPassageIdx = queryPassageIdx;
    return this;
  }

  /**
   * How the similarity score is computed. Integer value of
   * mustang_repos_www_snippets::RadishSignalScoringInfo::SimilarityMethod.
   * @return value or {@code null} for none
   */
  public java.lang.Long getSimilarityMethod() {
    return similarityMethod;
  }

  /**
   * How the similarity score is computed. Integer value of
   * mustang_repos_www_snippets::RadishSignalScoringInfo::SimilarityMethod.
   * @param similarityMethod similarityMethod or {@code null} for none
   */
  public QualityPreviewSnippetRadishFeatures setSimilarityMethod(java.lang.Long similarityMethod) {
    this.similarityMethod = similarityMethod;
    return this;
  }

  /**
   * Similarity score between this `navboost_query` and the incoming query.
   * @return value or {@code null} for none
   */
  public java.lang.Float getSimilarityScore() {
    return similarityScore;
  }

  /**
   * Similarity score between this `navboost_query` and the incoming query.
   * @param similarityScore similarityScore or {@code null} for none
   */
  public QualityPreviewSnippetRadishFeatures setSimilarityScore(java.lang.Float similarityScore) {
    this.similarityScore = similarityScore;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Float getSnippetCoverage() {
    return snippetCoverage;
  }

  /**
   * @param snippetCoverage snippetCoverage or {@code null} for none
   */
  public QualityPreviewSnippetRadishFeatures setSnippetCoverage(java.lang.Float snippetCoverage) {
    this.snippetCoverage = snippetCoverage;
    return this;
  }

  @Override
  public QualityPreviewSnippetRadishFeatures set(String fieldName, Object value) {
    return (QualityPreviewSnippetRadishFeatures) super.set(fieldName, value);
  }

  @Override
  public QualityPreviewSnippetRadishFeatures clone() {
    return (QualityPreviewSnippetRadishFeatures) super.clone();
  }

}
