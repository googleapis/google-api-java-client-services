/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.androidenterprise.model;

/**
 * Model definition for AutoInstallPolicy.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Play EMM API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AutoInstallPolicy extends com.google.api.client.json.GenericJson {

  /**
   * The constraints for auto-installing the app. You can specify a maximum of one constraint.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AutoInstallConstraint> autoInstallConstraint;

  static {
    // hack to force ProGuard to consider AutoInstallConstraint used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(AutoInstallConstraint.class);
  }

  /**
   * The auto-install mode. If unset defaults to "doNotAutoInstall".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String autoInstallMode;

  /**
   * The priority of the install, as an unsigned integer. A lower number means higher priority.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer autoInstallPriority;

  /**
   * The minimum version of the app. If a lower version of the app is installed, then the app will
   * be auto-updated according to the auto-install constraints, instead of waiting for the regular
   * auto-update.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer minimumVersionCode;

  /**
   * The constraints for auto-installing the app. You can specify a maximum of one constraint.
   * @return value or {@code null} for none
   */
  public java.util.List<AutoInstallConstraint> getAutoInstallConstraint() {
    return autoInstallConstraint;
  }

  /**
   * The constraints for auto-installing the app. You can specify a maximum of one constraint.
   * @param autoInstallConstraint autoInstallConstraint or {@code null} for none
   */
  public AutoInstallPolicy setAutoInstallConstraint(java.util.List<AutoInstallConstraint> autoInstallConstraint) {
    this.autoInstallConstraint = autoInstallConstraint;
    return this;
  }

  /**
   * The auto-install mode. If unset defaults to "doNotAutoInstall".
   * @return value or {@code null} for none
   */
  public java.lang.String getAutoInstallMode() {
    return autoInstallMode;
  }

  /**
   * The auto-install mode. If unset defaults to "doNotAutoInstall".
   * @param autoInstallMode autoInstallMode or {@code null} for none
   */
  public AutoInstallPolicy setAutoInstallMode(java.lang.String autoInstallMode) {
    this.autoInstallMode = autoInstallMode;
    return this;
  }

  /**
   * The priority of the install, as an unsigned integer. A lower number means higher priority.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getAutoInstallPriority() {
    return autoInstallPriority;
  }

  /**
   * The priority of the install, as an unsigned integer. A lower number means higher priority.
   * @param autoInstallPriority autoInstallPriority or {@code null} for none
   */
  public AutoInstallPolicy setAutoInstallPriority(java.lang.Integer autoInstallPriority) {
    this.autoInstallPriority = autoInstallPriority;
    return this;
  }

  /**
   * The minimum version of the app. If a lower version of the app is installed, then the app will
   * be auto-updated according to the auto-install constraints, instead of waiting for the regular
   * auto-update.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMinimumVersionCode() {
    return minimumVersionCode;
  }

  /**
   * The minimum version of the app. If a lower version of the app is installed, then the app will
   * be auto-updated according to the auto-install constraints, instead of waiting for the regular
   * auto-update.
   * @param minimumVersionCode minimumVersionCode or {@code null} for none
   */
  public AutoInstallPolicy setMinimumVersionCode(java.lang.Integer minimumVersionCode) {
    this.minimumVersionCode = minimumVersionCode;
    return this;
  }

  @Override
  public AutoInstallPolicy set(String fieldName, Object value) {
    return (AutoInstallPolicy) super.set(fieldName, value);
  }

  @Override
  public AutoInstallPolicy clone() {
    return (AutoInstallPolicy) super.clone();
  }

}
