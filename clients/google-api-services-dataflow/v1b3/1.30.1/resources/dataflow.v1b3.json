{
  "kind": "discovery#restDescription",
  "description": "Manages Google Cloud Dataflow projects on Google Cloud Platform.",
  "servicePath": "",
  "rootUrl": "https://dataflow.googleapis.com/",
  "basePath": "",
  "ownerDomain": "google.com",
  "name": "dataflow",
  "mtlsRootUrl": "https://dataflow.mtls.googleapis.com/",
  "batchPath": "batch",
  "revision": "20200305",
  "documentationLink": "https://cloud.google.com/dataflow",
  "id": "dataflow:v1b3",
  "title": "Dataflow API",
  "discoveryVersion": "v1",
  "ownerName": "Google",
  "resources": {
    "projects": {
      "methods": {
        "workerMessages": {
          "response": {
            "$ref": "SendWorkerMessagesResponse"
          },
          "parameterOrder": [
            "projectId"
          ],
          "httpMethod": "POST",
          "parameters": {
            "projectId": {
              "location": "path",
              "description": "The project to send the WorkerMessages to.",
              "required": true,
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/compute",
            "https://www.googleapis.com/auth/compute.readonly",
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "flatPath": "v1b3/projects/{projectId}/WorkerMessages",
          "path": "v1b3/projects/{projectId}/WorkerMessages",
          "id": "dataflow.projects.workerMessages",
          "description": "Send a worker_message to the service.",
          "request": {
            "$ref": "SendWorkerMessagesRequest"
          }
        },
        "deleteSnapshots": {
          "flatPath": "v1b3/projects/{projectId}/snapshots",
          "id": "dataflow.projects.deleteSnapshots",
          "path": "v1b3/projects/{projectId}/snapshots",
          "description": "Deletes a snapshot.",
          "httpMethod": "DELETE",
          "response": {
            "$ref": "DeleteSnapshotResponse"
          },
          "parameterOrder": [
            "projectId"
          ],
          "parameters": {
            "projectId": {
              "location": "path",
              "description": "The ID of the Cloud Platform project that the snapshot belongs to.",
              "required": true,
              "type": "string"
            },
            "snapshotId": {
              "location": "query",
              "description": "The ID of the snapshot.",
              "type": "string"
            },
            "location": {
              "location": "query",
              "description": "The location that contains this snapshot.",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/compute",
            "https://www.googleapis.com/auth/compute.readonly",
            "https://www.googleapis.com/auth/userinfo.email"
          ]
        }
      },
      "resources": {
        "templates": {
          "methods": {
            "launch": {
              "response": {
                "$ref": "LaunchTemplateResponse"
              },
              "parameterOrder": [
                "projectId"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/compute",
                "https://www.googleapis.com/auth/compute.readonly",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "validateOnly": {
                  "description": "If true, the request is validated but not actually executed.\nDefaults to false.",
                  "type": "boolean",
                  "location": "query"
                },
                "projectId": {
                  "location": "path",
                  "description": "Required. The ID of the Cloud Platform project that the job belongs to.",
                  "required": true,
                  "type": "string"
                },
                "gcsPath": {
                  "location": "query",
                  "description": "A Cloud Storage path to the template from which to create\nthe job.\nMust be valid Cloud Storage URL, beginning with 'gs://'.",
                  "type": "string"
                },
                "location": {
                  "location": "query",
                  "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to\nwhich to direct the request.",
                  "type": "string"
                },
                "dynamicTemplate.gcsPath": {
                  "description": "Path to dynamic template spec file on GCS.\nThe file must be a Json serialized DynamicTemplateFieSpec object.",
                  "type": "string",
                  "location": "query"
                },
                "dynamicTemplate.stagingLocation": {
                  "location": "query",
                  "description": "Cloud Storage path for staging dependencies.\nMust be a valid Cloud Storage URL, beginning with `gs://`.",
                  "type": "string"
                }
              },
              "flatPath": "v1b3/projects/{projectId}/templates:launch",
              "path": "v1b3/projects/{projectId}/templates:launch",
              "id": "dataflow.projects.templates.launch",
              "request": {
                "$ref": "LaunchTemplateParameters"
              },
              "description": "Launch a template."
            },
            "get": {
              "response": {
                "$ref": "GetTemplateResponse"
              },
              "parameterOrder": [
                "projectId"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/compute",
                "https://www.googleapis.com/auth/compute.readonly",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "location": {
                  "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to\nwhich to direct the request.",
                  "type": "string",
                  "location": "query"
                },
                "projectId": {
                  "location": "path",
                  "description": "Required. The ID of the Cloud Platform project that the job belongs to.",
                  "required": true,
                  "type": "string"
                },
                "view": {
                  "location": "query",
                  "enum": [
                    "METADATA_ONLY"
                  ],
                  "description": "The view to retrieve. Defaults to METADATA_ONLY.",
                  "type": "string"
                },
                "gcsPath": {
                  "description": "Required. A Cloud Storage path to the template from which to\ncreate the job.\nMust be valid Cloud Storage URL, beginning with 'gs://'.",
                  "type": "string",
                  "location": "query"
                }
              },
              "flatPath": "v1b3/projects/{projectId}/templates:get",
              "path": "v1b3/projects/{projectId}/templates:get",
              "id": "dataflow.projects.templates.get",
              "description": "Get the template associated with a template."
            },
            "create": {
              "response": {
                "$ref": "Job"
              },
              "parameterOrder": [
                "projectId"
              ],
              "httpMethod": "POST",
              "parameters": {
                "projectId": {
                  "description": "Required. The ID of the Cloud Platform project that the job belongs to.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/compute",
                "https://www.googleapis.com/auth/compute.readonly",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1b3/projects/{projectId}/templates",
              "path": "v1b3/projects/{projectId}/templates",
              "id": "dataflow.projects.templates.create",
              "description": "Creates a Cloud Dataflow job from a template.",
              "request": {
                "$ref": "CreateJobFromTemplateRequest"
              }
            }
          }
        },
        "locations": {
          "methods": {
            "workerMessages": {
              "parameters": {
                "projectId": {
                  "description": "The project to send the WorkerMessages to.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "location": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains the job."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/compute",
                "https://www.googleapis.com/auth/compute.readonly",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1b3/projects/{projectId}/locations/{location}/WorkerMessages",
              "id": "dataflow.projects.locations.workerMessages",
              "path": "v1b3/projects/{projectId}/locations/{location}/WorkerMessages",
              "description": "Send a worker_message to the service.",
              "request": {
                "$ref": "SendWorkerMessagesRequest"
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "projectId",
                "location"
              ],
              "response": {
                "$ref": "SendWorkerMessagesResponse"
              }
            }
          },
          "resources": {
            "flexTemplates": {
              "methods": {
                "launch": {
                  "response": {
                    "$ref": "LaunchFlexTemplateResponse"
                  },
                  "parameterOrder": [
                    "projectId",
                    "location"
                  ],
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameters": {
                    "location": {
                      "location": "path",
                      "description": "Required. The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to\nwhich to direct the request. E.g., us-central1, us-west1.",
                      "required": true,
                      "type": "string"
                    },
                    "projectId": {
                      "location": "path",
                      "description": "Required. The ID of the Cloud Platform project that the job belongs to.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "flatPath": "v1b3/projects/{projectId}/locations/{location}/flexTemplates:launch",
                  "path": "v1b3/projects/{projectId}/locations/{location}/flexTemplates:launch",
                  "id": "dataflow.projects.locations.flexTemplates.launch",
                  "request": {
                    "$ref": "LaunchFlexTemplateRequest"
                  },
                  "description": "Launch a job with a FlexTemplate."
                }
              }
            },
            "snapshots": {
              "methods": {
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameters": {
                    "projectId": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "The ID of the Cloud Platform project that the snapshot belongs to."
                    },
                    "snapshotId": {
                      "description": "The ID of the snapshot.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "location": {
                      "location": "path",
                      "description": "The location that contains this snapshot.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "flatPath": "v1b3/projects/{projectId}/locations/{location}/snapshots/{snapshotId}",
                  "path": "v1b3/projects/{projectId}/locations/{location}/snapshots/{snapshotId}",
                  "id": "dataflow.projects.locations.snapshots.get",
                  "description": "Gets information about a snapshot.",
                  "response": {
                    "$ref": "Snapshot"
                  },
                  "parameterOrder": [
                    "projectId",
                    "location",
                    "snapshotId"
                  ],
                  "httpMethod": "GET"
                },
                "list": {
                  "description": "Lists snapshots.",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "projectId",
                    "location"
                  ],
                  "response": {
                    "$ref": "ListSnapshotsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameters": {
                    "projectId": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "The project ID to list snapshots for."
                    },
                    "jobId": {
                      "location": "query",
                      "description": "If specified, list snapshots created from this job.",
                      "type": "string"
                    },
                    "location": {
                      "location": "path",
                      "description": "The location to list snapshots in.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "flatPath": "v1b3/projects/{projectId}/locations/{location}/snapshots",
                  "id": "dataflow.projects.locations.snapshots.list",
                  "path": "v1b3/projects/{projectId}/locations/{location}/snapshots"
                },
                "delete": {
                  "flatPath": "v1b3/projects/{projectId}/locations/{location}/snapshots/{snapshotId}",
                  "id": "dataflow.projects.locations.snapshots.delete",
                  "path": "v1b3/projects/{projectId}/locations/{location}/snapshots/{snapshotId}",
                  "description": "Deletes a snapshot.",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "projectId",
                    "location",
                    "snapshotId"
                  ],
                  "response": {
                    "$ref": "DeleteSnapshotResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameters": {
                    "projectId": {
                      "description": "The ID of the Cloud Platform project that the snapshot belongs to.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "snapshotId": {
                      "location": "path",
                      "description": "The ID of the snapshot.",
                      "required": true,
                      "type": "string"
                    },
                    "location": {
                      "location": "path",
                      "description": "The location that contains this snapshot.",
                      "required": true,
                      "type": "string"
                    }
                  }
                }
              }
            },
            "sql": {
              "methods": {
                "validate": {
                  "path": "v1b3/projects/{projectId}/locations/{location}/sql:validate",
                  "id": "dataflow.projects.locations.sql.validate",
                  "description": "Validates a GoogleSQL query for Cloud Dataflow syntax. Will always\nconfirm the given query parses correctly, and if able to look up\nschema information from DataCatalog, will validate that the query\nanalyzes properly as well.",
                  "response": {
                    "$ref": "ValidateResponse"
                  },
                  "parameterOrder": [
                    "projectId",
                    "location"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "projectId": {
                      "description": "Required. The ID of the Cloud Platform project that the job belongs to.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "query": {
                      "description": "The sql query to validate.",
                      "type": "string",
                      "location": "query"
                    },
                    "location": {
                      "location": "path",
                      "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to\nwhich to direct the request.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "flatPath": "v1b3/projects/{projectId}/locations/{location}/sql:validate"
                }
              }
            },
            "templates": {
              "methods": {
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameters": {
                    "location": {
                      "location": "path",
                      "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to\nwhich to direct the request.",
                      "required": true,
                      "type": "string"
                    },
                    "projectId": {
                      "location": "path",
                      "description": "Required. The ID of the Cloud Platform project that the job belongs to.",
                      "required": true,
                      "type": "string"
                    },
                    "view": {
                      "location": "query",
                      "enum": [
                        "METADATA_ONLY"
                      ],
                      "description": "The view to retrieve. Defaults to METADATA_ONLY.",
                      "type": "string"
                    },
                    "gcsPath": {
                      "description": "Required. A Cloud Storage path to the template from which to\ncreate the job.\nMust be valid Cloud Storage URL, beginning with 'gs://'.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1b3/projects/{projectId}/locations/{location}/templates:get",
                  "path": "v1b3/projects/{projectId}/locations/{location}/templates:get",
                  "id": "dataflow.projects.locations.templates.get",
                  "description": "Get the template associated with a template.",
                  "response": {
                    "$ref": "GetTemplateResponse"
                  },
                  "parameterOrder": [
                    "projectId",
                    "location"
                  ],
                  "httpMethod": "GET"
                },
                "create": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "projectId",
                    "location"
                  ],
                  "response": {
                    "$ref": "Job"
                  },
                  "parameters": {
                    "location": {
                      "location": "path",
                      "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to\nwhich to direct the request.",
                      "required": true,
                      "type": "string"
                    },
                    "projectId": {
                      "description": "Required. The ID of the Cloud Platform project that the job belongs to.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "flatPath": "v1b3/projects/{projectId}/locations/{location}/templates",
                  "id": "dataflow.projects.locations.templates.create",
                  "path": "v1b3/projects/{projectId}/locations/{location}/templates",
                  "description": "Creates a Cloud Dataflow job from a template.",
                  "request": {
                    "$ref": "CreateJobFromTemplateRequest"
                  }
                },
                "launch": {
                  "description": "Launch a template.",
                  "request": {
                    "$ref": "LaunchTemplateParameters"
                  },
                  "response": {
                    "$ref": "LaunchTemplateResponse"
                  },
                  "parameterOrder": [
                    "projectId",
                    "location"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "validateOnly": {
                      "location": "query",
                      "description": "If true, the request is validated but not actually executed.\nDefaults to false.",
                      "type": "boolean"
                    },
                    "projectId": {
                      "description": "Required. The ID of the Cloud Platform project that the job belongs to.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "gcsPath": {
                      "type": "string",
                      "location": "query",
                      "description": "A Cloud Storage path to the template from which to create\nthe job.\nMust be valid Cloud Storage URL, beginning with 'gs://'."
                    },
                    "location": {
                      "location": "path",
                      "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to\nwhich to direct the request.",
                      "required": true,
                      "type": "string"
                    },
                    "dynamicTemplate.gcsPath": {
                      "location": "query",
                      "description": "Path to dynamic template spec file on GCS.\nThe file must be a Json serialized DynamicTemplateFieSpec object.",
                      "type": "string"
                    },
                    "dynamicTemplate.stagingLocation": {
                      "description": "Cloud Storage path for staging dependencies.\nMust be a valid Cloud Storage URL, beginning with `gs://`.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "flatPath": "v1b3/projects/{projectId}/locations/{location}/templates:launch",
                  "path": "v1b3/projects/{projectId}/locations/{location}/templates:launch",
                  "id": "dataflow.projects.locations.templates.launch"
                }
              }
            },
            "jobs": {
              "methods": {
                "snapshot": {
                  "description": "Snapshot the state of a streaming job.",
                  "request": {
                    "$ref": "SnapshotJobRequest"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "projectId",
                    "location",
                    "jobId"
                  ],
                  "response": {
                    "$ref": "Snapshot"
                  },
                  "parameters": {
                    "location": {
                      "description": "The location that contains this job.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "projectId": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "The project which owns the job to be snapshotted."
                    },
                    "jobId": {
                      "location": "path",
                      "description": "The job to be snapshotted.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "flatPath": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}:snapshot",
                  "id": "dataflow.projects.locations.jobs.snapshot",
                  "path": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}:snapshot"
                },
                "list": {
                  "description": "List the jobs of a project.\n\nTo list the jobs of a project in a region, we recommend using\n`projects.locations.jobs.get` with a [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). To\nlist the all jobs across all regions, use `projects.jobs.aggregated`. Using\n`projects.jobs.list` is not recommended, as you can only get the list of\njobs that are running in `us-central1`.",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "projectId",
                    "location"
                  ],
                  "response": {
                    "$ref": "ListJobsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameters": {
                    "projectId": {
                      "location": "path",
                      "description": "The project which owns the jobs.",
                      "required": true,
                      "type": "string"
                    },
                    "filter": {
                      "description": "The kind of filter to use.",
                      "type": "string",
                      "location": "query",
                      "enum": [
                        "UNKNOWN",
                        "ALL",
                        "TERMINATED",
                        "ACTIVE"
                      ]
                    },
                    "location": {
                      "location": "path",
                      "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains this job.",
                      "required": true,
                      "type": "string"
                    },
                    "pageToken": {
                      "description": "Set this to the 'next_page_token' field of a previous response\nto request additional results in a long list.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "If there are many jobs, limit response to at most this many.\nThe actual number of jobs returned will be the lesser of max_responses\nand an unspecified server-defined limit.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "view": {
                      "location": "query",
                      "enum": [
                        "JOB_VIEW_UNKNOWN",
                        "JOB_VIEW_SUMMARY",
                        "JOB_VIEW_ALL",
                        "JOB_VIEW_DESCRIPTION"
                      ],
                      "description": "Level of information requested in response. Default is `JOB_VIEW_SUMMARY`.",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1b3/projects/{projectId}/locations/{location}/jobs",
                  "id": "dataflow.projects.locations.jobs.list",
                  "path": "v1b3/projects/{projectId}/locations/{location}/jobs"
                },
                "create": {
                  "response": {
                    "$ref": "Job"
                  },
                  "parameterOrder": [
                    "projectId",
                    "location"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "projectId": {
                      "description": "The ID of the Cloud Platform project that the job belongs to.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "view": {
                      "description": "The level of information requested in response.",
                      "type": "string",
                      "location": "query",
                      "enum": [
                        "JOB_VIEW_UNKNOWN",
                        "JOB_VIEW_SUMMARY",
                        "JOB_VIEW_ALL",
                        "JOB_VIEW_DESCRIPTION"
                      ]
                    },
                    "location": {
                      "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains this job.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "replaceJobId": {
                      "type": "string",
                      "location": "query",
                      "description": "Deprecated. This field is now in the Job message."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "flatPath": "v1b3/projects/{projectId}/locations/{location}/jobs",
                  "path": "v1b3/projects/{projectId}/locations/{location}/jobs",
                  "id": "dataflow.projects.locations.jobs.create",
                  "description": "Creates a Cloud Dataflow job.\n\nTo create a job, we recommend using `projects.locations.jobs.create` with a\n[regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using\n`projects.jobs.create` is not recommended, as your job will always start\nin `us-central1`.",
                  "request": {
                    "$ref": "Job"
                  }
                },
                "getMetrics": {
                  "flatPath": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/metrics",
                  "path": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/metrics",
                  "id": "dataflow.projects.locations.jobs.getMetrics",
                  "description": "Request the job status.\n\nTo request the status of a job, we recommend using\n`projects.locations.jobs.getMetrics` with a [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using\n`projects.jobs.getMetrics` is not recommended, as you can only request the\nstatus of jobs that are running in `us-central1`.",
                  "response": {
                    "$ref": "JobMetrics"
                  },
                  "parameterOrder": [
                    "projectId",
                    "location",
                    "jobId"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "startTime": {
                      "type": "string",
                      "location": "query",
                      "description": "Return only metric data that has changed since this time.\nDefault is to return all information about all metrics for the job.",
                      "format": "google-datetime"
                    },
                    "projectId": {
                      "location": "path",
                      "description": "A project id.",
                      "required": true,
                      "type": "string"
                    },
                    "jobId": {
                      "location": "path",
                      "description": "The job to get messages for.",
                      "required": true,
                      "type": "string"
                    },
                    "location": {
                      "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains the job specified by job_id.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ]
                },
                "get": {
                  "response": {
                    "$ref": "Job"
                  },
                  "parameterOrder": [
                    "projectId",
                    "location",
                    "jobId"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameters": {
                    "projectId": {
                      "description": "The ID of the Cloud Platform project that the job belongs to.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "jobId": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "The job ID."
                    },
                    "view": {
                      "description": "The level of information requested in response.",
                      "type": "string",
                      "location": "query",
                      "enum": [
                        "JOB_VIEW_UNKNOWN",
                        "JOB_VIEW_SUMMARY",
                        "JOB_VIEW_ALL",
                        "JOB_VIEW_DESCRIPTION"
                      ]
                    },
                    "location": {
                      "location": "path",
                      "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains this job.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "flatPath": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}",
                  "path": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}",
                  "id": "dataflow.projects.locations.jobs.get",
                  "description": "Gets the state of the specified Cloud Dataflow job.\n\nTo get the state of a job, we recommend using `projects.locations.jobs.get`\nwith a [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using\n`projects.jobs.get` is not recommended, as you can only get the state of\njobs that are running in `us-central1`."
                },
                "update": {
                  "request": {
                    "$ref": "Job"
                  },
                  "description": "Updates the state of an existing Cloud Dataflow job.\n\nTo update the state of an existing job, we recommend using\n`projects.locations.jobs.update` with a [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using\n`projects.jobs.update` is not recommended, as you can only update the state\nof jobs that are running in `us-central1`.",
                  "response": {
                    "$ref": "Job"
                  },
                  "parameterOrder": [
                    "projectId",
                    "location",
                    "jobId"
                  ],
                  "httpMethod": "PUT",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameters": {
                    "projectId": {
                      "description": "The ID of the Cloud Platform project that the job belongs to.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "jobId": {
                      "description": "The job ID.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "location": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains this job."
                    }
                  },
                  "flatPath": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}",
                  "path": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}",
                  "id": "dataflow.projects.locations.jobs.update"
                }
              },
              "resources": {
                "debug": {
                  "methods": {
                    "getConfig": {
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "projectId",
                        "location",
                        "jobId"
                      ],
                      "response": {
                        "$ref": "GetDebugConfigResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly",
                        "https://www.googleapis.com/auth/userinfo.email"
                      ],
                      "parameters": {
                        "location": {
                          "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains the job specified by job_id.",
                          "required": true,
                          "type": "string",
                          "location": "path"
                        },
                        "projectId": {
                          "location": "path",
                          "description": "The project id.",
                          "required": true,
                          "type": "string"
                        },
                        "jobId": {
                          "location": "path",
                          "description": "The job id.",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "flatPath": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/debug/getConfig",
                      "id": "dataflow.projects.locations.jobs.debug.getConfig",
                      "path": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/debug/getConfig",
                      "request": {
                        "$ref": "GetDebugConfigRequest"
                      },
                      "description": "Get encoded debug configuration for component. Not cacheable."
                    },
                    "sendCapture": {
                      "parameters": {
                        "projectId": {
                          "location": "path",
                          "description": "The project id.",
                          "required": true,
                          "type": "string"
                        },
                        "jobId": {
                          "description": "The job id.",
                          "required": true,
                          "type": "string",
                          "location": "path"
                        },
                        "location": {
                          "location": "path",
                          "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains the job specified by job_id.",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly",
                        "https://www.googleapis.com/auth/userinfo.email"
                      ],
                      "flatPath": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/debug/sendCapture",
                      "id": "dataflow.projects.locations.jobs.debug.sendCapture",
                      "path": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/debug/sendCapture",
                      "description": "Send encoded debug capture data for component.",
                      "request": {
                        "$ref": "SendDebugCaptureRequest"
                      },
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "projectId",
                        "location",
                        "jobId"
                      ],
                      "response": {
                        "$ref": "SendDebugCaptureResponse"
                      }
                    }
                  }
                },
                "workItems": {
                  "methods": {
                    "lease": {
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "projectId",
                        "location",
                        "jobId"
                      ],
                      "response": {
                        "$ref": "LeaseWorkItemResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly",
                        "https://www.googleapis.com/auth/userinfo.email"
                      ],
                      "parameters": {
                        "location": {
                          "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains the WorkItem's job.",
                          "required": true,
                          "type": "string",
                          "location": "path"
                        },
                        "projectId": {
                          "description": "Identifies the project this worker belongs to.",
                          "required": true,
                          "type": "string",
                          "location": "path"
                        },
                        "jobId": {
                          "description": "Identifies the workflow job this worker belongs to.",
                          "required": true,
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "flatPath": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/workItems:lease",
                      "id": "dataflow.projects.locations.jobs.workItems.lease",
                      "path": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/workItems:lease",
                      "request": {
                        "$ref": "LeaseWorkItemRequest"
                      },
                      "description": "Leases a dataflow WorkItem to run."
                    },
                    "reportStatus": {
                      "response": {
                        "$ref": "ReportWorkItemStatusResponse"
                      },
                      "parameterOrder": [
                        "projectId",
                        "location",
                        "jobId"
                      ],
                      "httpMethod": "POST",
                      "parameters": {
                        "projectId": {
                          "location": "path",
                          "description": "The project which owns the WorkItem's job.",
                          "required": true,
                          "type": "string"
                        },
                        "jobId": {
                          "location": "path",
                          "description": "The job which the WorkItem is part of.",
                          "required": true,
                          "type": "string"
                        },
                        "location": {
                          "location": "path",
                          "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains the WorkItem's job.",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly",
                        "https://www.googleapis.com/auth/userinfo.email"
                      ],
                      "flatPath": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/workItems:reportStatus",
                      "path": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/workItems:reportStatus",
                      "id": "dataflow.projects.locations.jobs.workItems.reportStatus",
                      "description": "Reports the status of dataflow WorkItems leased by a worker.",
                      "request": {
                        "$ref": "ReportWorkItemStatusRequest"
                      }
                    }
                  }
                },
                "snapshots": {
                  "methods": {
                    "list": {
                      "response": {
                        "$ref": "ListSnapshotsResponse"
                      },
                      "parameterOrder": [
                        "projectId",
                        "location",
                        "jobId"
                      ],
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly",
                        "https://www.googleapis.com/auth/userinfo.email"
                      ],
                      "parameters": {
                        "location": {
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "The location to list snapshots in."
                        },
                        "projectId": {
                          "location": "path",
                          "description": "The project ID to list snapshots for.",
                          "required": true,
                          "type": "string"
                        },
                        "jobId": {
                          "location": "path",
                          "description": "If specified, list snapshots created from this job.",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "flatPath": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/snapshots",
                      "path": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/snapshots",
                      "id": "dataflow.projects.locations.jobs.snapshots.list",
                      "description": "Lists snapshots."
                    }
                  }
                },
                "messages": {
                  "methods": {
                    "list": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly",
                        "https://www.googleapis.com/auth/userinfo.email"
                      ],
                      "parameters": {
                        "location": {
                          "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains the job specified by job_id.",
                          "required": true,
                          "type": "string",
                          "location": "path"
                        },
                        "endTime": {
                          "type": "string",
                          "location": "query",
                          "description": "Return only messages with timestamps \u003c end_time. The default is now\n(i.e. return up to the latest messages available).",
                          "format": "google-datetime"
                        },
                        "startTime": {
                          "description": "If specified, return only messages with timestamps \u003e= start_time.\nThe default is the job creation time (i.e. beginning of messages).",
                          "format": "google-datetime",
                          "type": "string",
                          "location": "query"
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "If supplied, this should be the value of next_page_token returned\nby an earlier call. This will cause the next page of results to\nbe returned.",
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "If specified, determines the maximum number of messages to\nreturn.  If unspecified, the service may choose an appropriate\ndefault, or may return an arbitrarily large number of results.",
                          "format": "int32",
                          "type": "integer",
                          "location": "query"
                        },
                        "minimumImportance": {
                          "enum": [
                            "JOB_MESSAGE_IMPORTANCE_UNKNOWN",
                            "JOB_MESSAGE_DEBUG",
                            "JOB_MESSAGE_DETAILED",
                            "JOB_MESSAGE_BASIC",
                            "JOB_MESSAGE_WARNING",
                            "JOB_MESSAGE_ERROR"
                          ],
                          "description": "Filter to only get messages with importance \u003e= level",
                          "type": "string",
                          "location": "query"
                        },
                        "jobId": {
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "The job to get messages about."
                        },
                        "projectId": {
                          "location": "path",
                          "description": "A project id.",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "flatPath": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/messages",
                      "path": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/messages",
                      "id": "dataflow.projects.locations.jobs.messages.list",
                      "description": "Request the job status.\n\nTo request the status of a job, we recommend using\n`projects.locations.jobs.messages.list` with a [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using\n`projects.jobs.messages.list` is not recommended, as you can only request\nthe status of jobs that are running in `us-central1`.",
                      "response": {
                        "$ref": "ListJobMessagesResponse"
                      },
                      "parameterOrder": [
                        "projectId",
                        "location",
                        "jobId"
                      ],
                      "httpMethod": "GET"
                    }
                  }
                }
              }
            }
          }
        },
        "jobs": {
          "methods": {
            "list": {
              "description": "List the jobs of a project.\n\nTo list the jobs of a project in a region, we recommend using\n`projects.locations.jobs.get` with a [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). To\nlist the all jobs across all regions, use `projects.jobs.aggregated`. Using\n`projects.jobs.list` is not recommended, as you can only get the list of\njobs that are running in `us-central1`.",
              "response": {
                "$ref": "ListJobsResponse"
              },
              "parameterOrder": [
                "projectId"
              ],
              "httpMethod": "GET",
              "parameters": {
                "view": {
                  "location": "query",
                  "enum": [
                    "JOB_VIEW_UNKNOWN",
                    "JOB_VIEW_SUMMARY",
                    "JOB_VIEW_ALL",
                    "JOB_VIEW_DESCRIPTION"
                  ],
                  "description": "Level of information requested in response. Default is `JOB_VIEW_SUMMARY`.",
                  "type": "string"
                },
                "projectId": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "The project which owns the jobs."
                },
                "filter": {
                  "location": "query",
                  "enum": [
                    "UNKNOWN",
                    "ALL",
                    "TERMINATED",
                    "ACTIVE"
                  ],
                  "description": "The kind of filter to use.",
                  "type": "string"
                },
                "location": {
                  "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains this job.",
                  "type": "string",
                  "location": "query"
                },
                "pageToken": {
                  "description": "Set this to the 'next_page_token' field of a previous response\nto request additional results in a long list.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "description": "If there are many jobs, limit response to at most this many.\nThe actual number of jobs returned will be the lesser of max_responses\nand an unspecified server-defined limit.",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/compute",
                "https://www.googleapis.com/auth/compute.readonly",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1b3/projects/{projectId}/jobs",
              "path": "v1b3/projects/{projectId}/jobs",
              "id": "dataflow.projects.jobs.list"
            },
            "create": {
              "response": {
                "$ref": "Job"
              },
              "parameterOrder": [
                "projectId"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/compute",
                "https://www.googleapis.com/auth/compute.readonly",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "location": {
                  "type": "string",
                  "location": "query",
                  "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains this job."
                },
                "replaceJobId": {
                  "location": "query",
                  "description": "Deprecated. This field is now in the Job message.",
                  "type": "string"
                },
                "projectId": {
                  "description": "The ID of the Cloud Platform project that the job belongs to.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "view": {
                  "location": "query",
                  "enum": [
                    "JOB_VIEW_UNKNOWN",
                    "JOB_VIEW_SUMMARY",
                    "JOB_VIEW_ALL",
                    "JOB_VIEW_DESCRIPTION"
                  ],
                  "description": "The level of information requested in response.",
                  "type": "string"
                }
              },
              "flatPath": "v1b3/projects/{projectId}/jobs",
              "path": "v1b3/projects/{projectId}/jobs",
              "id": "dataflow.projects.jobs.create",
              "request": {
                "$ref": "Job"
              },
              "description": "Creates a Cloud Dataflow job.\n\nTo create a job, we recommend using `projects.locations.jobs.create` with a\n[regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using\n`projects.jobs.create` is not recommended, as your job will always start\nin `us-central1`."
            },
            "getMetrics": {
              "httpMethod": "GET",
              "response": {
                "$ref": "JobMetrics"
              },
              "parameterOrder": [
                "projectId",
                "jobId"
              ],
              "parameters": {
                "startTime": {
                  "description": "Return only metric data that has changed since this time.\nDefault is to return all information about all metrics for the job.",
                  "format": "google-datetime",
                  "type": "string",
                  "location": "query"
                },
                "projectId": {
                  "location": "path",
                  "description": "A project id.",
                  "required": true,
                  "type": "string"
                },
                "jobId": {
                  "location": "path",
                  "description": "The job to get messages for.",
                  "required": true,
                  "type": "string"
                },
                "location": {
                  "location": "query",
                  "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains the job specified by job_id.",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/compute",
                "https://www.googleapis.com/auth/compute.readonly",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1b3/projects/{projectId}/jobs/{jobId}/metrics",
              "id": "dataflow.projects.jobs.getMetrics",
              "path": "v1b3/projects/{projectId}/jobs/{jobId}/metrics",
              "description": "Request the job status.\n\nTo request the status of a job, we recommend using\n`projects.locations.jobs.getMetrics` with a [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using\n`projects.jobs.getMetrics` is not recommended, as you can only request the\nstatus of jobs that are running in `us-central1`."
            },
            "get": {
              "description": "Gets the state of the specified Cloud Dataflow job.\n\nTo get the state of a job, we recommend using `projects.locations.jobs.get`\nwith a [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using\n`projects.jobs.get` is not recommended, as you can only get the state of\njobs that are running in `us-central1`.",
              "response": {
                "$ref": "Job"
              },
              "parameterOrder": [
                "projectId",
                "jobId"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/compute",
                "https://www.googleapis.com/auth/compute.readonly",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "location": {
                  "location": "query",
                  "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains this job.",
                  "type": "string"
                },
                "projectId": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "The ID of the Cloud Platform project that the job belongs to."
                },
                "jobId": {
                  "location": "path",
                  "description": "The job ID.",
                  "required": true,
                  "type": "string"
                },
                "view": {
                  "enum": [
                    "JOB_VIEW_UNKNOWN",
                    "JOB_VIEW_SUMMARY",
                    "JOB_VIEW_ALL",
                    "JOB_VIEW_DESCRIPTION"
                  ],
                  "description": "The level of information requested in response.",
                  "type": "string",
                  "location": "query"
                }
              },
              "flatPath": "v1b3/projects/{projectId}/jobs/{jobId}",
              "path": "v1b3/projects/{projectId}/jobs/{jobId}",
              "id": "dataflow.projects.jobs.get"
            },
            "update": {
              "path": "v1b3/projects/{projectId}/jobs/{jobId}",
              "id": "dataflow.projects.jobs.update",
              "request": {
                "$ref": "Job"
              },
              "description": "Updates the state of an existing Cloud Dataflow job.\n\nTo update the state of an existing job, we recommend using\n`projects.locations.jobs.update` with a [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using\n`projects.jobs.update` is not recommended, as you can only update the state\nof jobs that are running in `us-central1`.",
              "response": {
                "$ref": "Job"
              },
              "parameterOrder": [
                "projectId",
                "jobId"
              ],
              "httpMethod": "PUT",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/compute",
                "https://www.googleapis.com/auth/compute.readonly",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "location": {
                  "location": "query",
                  "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains this job.",
                  "type": "string"
                },
                "projectId": {
                  "description": "The ID of the Cloud Platform project that the job belongs to.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "jobId": {
                  "location": "path",
                  "description": "The job ID.",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v1b3/projects/{projectId}/jobs/{jobId}"
            },
            "snapshot": {
              "flatPath": "v1b3/projects/{projectId}/jobs/{jobId}:snapshot",
              "path": "v1b3/projects/{projectId}/jobs/{jobId}:snapshot",
              "id": "dataflow.projects.jobs.snapshot",
              "request": {
                "$ref": "SnapshotJobRequest"
              },
              "description": "Snapshot the state of a streaming job.",
              "response": {
                "$ref": "Snapshot"
              },
              "parameterOrder": [
                "projectId",
                "jobId"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/compute",
                "https://www.googleapis.com/auth/compute.readonly",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "projectId": {
                  "location": "path",
                  "description": "The project which owns the job to be snapshotted.",
                  "required": true,
                  "type": "string"
                },
                "jobId": {
                  "location": "path",
                  "description": "The job to be snapshotted.",
                  "required": true,
                  "type": "string"
                }
              }
            },
            "aggregated": {
              "path": "v1b3/projects/{projectId}/jobs:aggregated",
              "id": "dataflow.projects.jobs.aggregated",
              "description": "List the jobs of a project across all regions.",
              "response": {
                "$ref": "ListJobsResponse"
              },
              "parameterOrder": [
                "projectId"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/compute",
                "https://www.googleapis.com/auth/compute.readonly",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "location": {
                  "location": "query",
                  "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains this job.",
                  "type": "string"
                },
                "pageToken": {
                  "location": "query",
                  "description": "Set this to the 'next_page_token' field of a previous response\nto request additional results in a long list.",
                  "type": "string"
                },
                "pageSize": {
                  "description": "If there are many jobs, limit response to at most this many.\nThe actual number of jobs returned will be the lesser of max_responses\nand an unspecified server-defined limit.",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                },
                "view": {
                  "type": "string",
                  "location": "query",
                  "enum": [
                    "JOB_VIEW_UNKNOWN",
                    "JOB_VIEW_SUMMARY",
                    "JOB_VIEW_ALL",
                    "JOB_VIEW_DESCRIPTION"
                  ],
                  "description": "Level of information requested in response. Default is `JOB_VIEW_SUMMARY`."
                },
                "projectId": {
                  "location": "path",
                  "description": "The project which owns the jobs.",
                  "required": true,
                  "type": "string"
                },
                "filter": {
                  "location": "query",
                  "enum": [
                    "UNKNOWN",
                    "ALL",
                    "TERMINATED",
                    "ACTIVE"
                  ],
                  "description": "The kind of filter to use.",
                  "type": "string"
                }
              },
              "flatPath": "v1b3/projects/{projectId}/jobs:aggregated"
            }
          },
          "resources": {
            "debug": {
              "methods": {
                "getConfig": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "projectId",
                    "jobId"
                  ],
                  "response": {
                    "$ref": "GetDebugConfigResponse"
                  },
                  "parameters": {
                    "projectId": {
                      "description": "The project id.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "jobId": {
                      "description": "The job id.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "flatPath": "v1b3/projects/{projectId}/jobs/{jobId}/debug/getConfig",
                  "id": "dataflow.projects.jobs.debug.getConfig",
                  "path": "v1b3/projects/{projectId}/jobs/{jobId}/debug/getConfig",
                  "description": "Get encoded debug configuration for component. Not cacheable.",
                  "request": {
                    "$ref": "GetDebugConfigRequest"
                  }
                },
                "sendCapture": {
                  "response": {
                    "$ref": "SendDebugCaptureResponse"
                  },
                  "parameterOrder": [
                    "projectId",
                    "jobId"
                  ],
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameters": {
                    "projectId": {
                      "location": "path",
                      "description": "The project id.",
                      "required": true,
                      "type": "string"
                    },
                    "jobId": {
                      "location": "path",
                      "description": "The job id.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "flatPath": "v1b3/projects/{projectId}/jobs/{jobId}/debug/sendCapture",
                  "path": "v1b3/projects/{projectId}/jobs/{jobId}/debug/sendCapture",
                  "id": "dataflow.projects.jobs.debug.sendCapture",
                  "request": {
                    "$ref": "SendDebugCaptureRequest"
                  },
                  "description": "Send encoded debug capture data for component."
                }
              }
            },
            "workItems": {
              "methods": {
                "lease": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "projectId",
                    "jobId"
                  ],
                  "response": {
                    "$ref": "LeaseWorkItemResponse"
                  },
                  "parameters": {
                    "projectId": {
                      "location": "path",
                      "description": "Identifies the project this worker belongs to.",
                      "required": true,
                      "type": "string"
                    },
                    "jobId": {
                      "location": "path",
                      "description": "Identifies the workflow job this worker belongs to.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "flatPath": "v1b3/projects/{projectId}/jobs/{jobId}/workItems:lease",
                  "id": "dataflow.projects.jobs.workItems.lease",
                  "path": "v1b3/projects/{projectId}/jobs/{jobId}/workItems:lease",
                  "description": "Leases a dataflow WorkItem to run.",
                  "request": {
                    "$ref": "LeaseWorkItemRequest"
                  }
                },
                "reportStatus": {
                  "description": "Reports the status of dataflow WorkItems leased by a worker.",
                  "request": {
                    "$ref": "ReportWorkItemStatusRequest"
                  },
                  "response": {
                    "$ref": "ReportWorkItemStatusResponse"
                  },
                  "parameterOrder": [
                    "projectId",
                    "jobId"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "projectId": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "The project which owns the WorkItem's job."
                    },
                    "jobId": {
                      "description": "The job which the WorkItem is part of.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "flatPath": "v1b3/projects/{projectId}/jobs/{jobId}/workItems:reportStatus",
                  "path": "v1b3/projects/{projectId}/jobs/{jobId}/workItems:reportStatus",
                  "id": "dataflow.projects.jobs.workItems.reportStatus"
                }
              }
            },
            "messages": {
              "methods": {
                "list": {
                  "response": {
                    "$ref": "ListJobMessagesResponse"
                  },
                  "parameterOrder": [
                    "projectId",
                    "jobId"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "minimumImportance": {
                      "location": "query",
                      "enum": [
                        "JOB_MESSAGE_IMPORTANCE_UNKNOWN",
                        "JOB_MESSAGE_DEBUG",
                        "JOB_MESSAGE_DETAILED",
                        "JOB_MESSAGE_BASIC",
                        "JOB_MESSAGE_WARNING",
                        "JOB_MESSAGE_ERROR"
                      ],
                      "description": "Filter to only get messages with importance \u003e= level",
                      "type": "string"
                    },
                    "projectId": {
                      "location": "path",
                      "description": "A project id.",
                      "required": true,
                      "type": "string"
                    },
                    "jobId": {
                      "location": "path",
                      "description": "The job to get messages about.",
                      "required": true,
                      "type": "string"
                    },
                    "location": {
                      "location": "query",
                      "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains the job specified by job_id.",
                      "type": "string"
                    },
                    "endTime": {
                      "location": "query",
                      "description": "Return only messages with timestamps \u003c end_time. The default is now\n(i.e. return up to the latest messages available).",
                      "format": "google-datetime",
                      "type": "string"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "If supplied, this should be the value of next_page_token returned\nby an earlier call. This will cause the next page of results to\nbe returned."
                    },
                    "startTime": {
                      "location": "query",
                      "description": "If specified, return only messages with timestamps \u003e= start_time.\nThe default is the job creation time (i.e. beginning of messages).",
                      "format": "google-datetime",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "If specified, determines the maximum number of messages to\nreturn.  If unspecified, the service may choose an appropriate\ndefault, or may return an arbitrarily large number of results.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "flatPath": "v1b3/projects/{projectId}/jobs/{jobId}/messages",
                  "path": "v1b3/projects/{projectId}/jobs/{jobId}/messages",
                  "id": "dataflow.projects.jobs.messages.list",
                  "description": "Request the job status.\n\nTo request the status of a job, we recommend using\n`projects.locations.jobs.messages.list` with a [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using\n`projects.jobs.messages.list` is not recommended, as you can only request\nthe status of jobs that are running in `us-central1`."
                }
              }
            }
          }
        },
        "snapshots": {
          "methods": {
            "get": {
              "path": "v1b3/projects/{projectId}/snapshots/{snapshotId}",
              "id": "dataflow.projects.snapshots.get",
              "description": "Gets information about a snapshot.",
              "response": {
                "$ref": "Snapshot"
              },
              "parameterOrder": [
                "projectId",
                "snapshotId"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/compute",
                "https://www.googleapis.com/auth/compute.readonly",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "projectId": {
                  "location": "path",
                  "description": "The ID of the Cloud Platform project that the snapshot belongs to.",
                  "required": true,
                  "type": "string"
                },
                "snapshotId": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "The ID of the snapshot."
                },
                "location": {
                  "description": "The location that contains this snapshot.",
                  "type": "string",
                  "location": "query"
                }
              },
              "flatPath": "v1b3/projects/{projectId}/snapshots/{snapshotId}"
            },
            "list": {
              "response": {
                "$ref": "ListSnapshotsResponse"
              },
              "parameterOrder": [
                "projectId"
              ],
              "httpMethod": "GET",
              "parameters": {
                "location": {
                  "description": "The location to list snapshots in.",
                  "type": "string",
                  "location": "query"
                },
                "projectId": {
                  "location": "path",
                  "description": "The project ID to list snapshots for.",
                  "required": true,
                  "type": "string"
                },
                "jobId": {
                  "location": "query",
                  "description": "If specified, list snapshots created from this job.",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/compute",
                "https://www.googleapis.com/auth/compute.readonly",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1b3/projects/{projectId}/snapshots",
              "path": "v1b3/projects/{projectId}/snapshots",
              "id": "dataflow.projects.snapshots.list",
              "description": "Lists snapshots."
            }
          }
        }
      }
    }
  },
  "parameters": {
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    },
    "alt": {
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    }
  },
  "schemas": {
    "PubsubSnapshotMetadata": {
      "description": "Represents a Pubsub snapshot.",
      "type": "object",
      "properties": {
        "snapshotName": {
          "description": "The name of the Pubsub snapshot.",
          "type": "string"
        },
        "topicName": {
          "description": "The name of the Pubsub topic.",
          "type": "string"
        },
        "expireTime": {
          "description": "The expire time of the Pubsub snapshot.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "PubsubSnapshotMetadata"
    },
    "StructuredMessage": {
      "id": "StructuredMessage",
      "description": "A rich message format, including a human readable string, a key for\nidentifying the message, and structured data associated with the message for\nprogrammatic consumption.",
      "type": "object",
      "properties": {
        "messageKey": {
          "description": "Identifier for this message type.  Used by external systems to\ninternationalize or personalize message.",
          "type": "string"
        },
        "messageText": {
          "type": "string",
          "description": "Human-readable version of message."
        },
        "parameters": {
          "description": "The structured data associated with this message.",
          "type": "array",
          "items": {
            "$ref": "Parameter"
          }
        }
      }
    },
    "WorkItem": {
      "description": "WorkItem represents basic information about a WorkItem to be executed\nin the cloud.",
      "type": "object",
      "properties": {
        "leaseExpireTime": {
          "description": "Time when the lease on this Work will expire.",
          "format": "google-datetime",
          "type": "string"
        },
        "streamingConfigTask": {
          "description": "Additional information for StreamingConfigTask WorkItems.",
          "$ref": "StreamingConfigTask"
        },
        "initialReportIndex": {
          "type": "string",
          "description": "The initial index to use when reporting the status of the WorkItem.",
          "format": "int64"
        },
        "shellTask": {
          "$ref": "ShellTask",
          "description": "Additional information for ShellTask WorkItems."
        },
        "streamingComputationTask": {
          "$ref": "StreamingComputationTask",
          "description": "Additional information for StreamingComputationTask WorkItems."
        },
        "jobId": {
          "description": "Identifies the workflow job this WorkItem belongs to.",
          "type": "string"
        },
        "id": {
          "description": "Identifies this WorkItem.",
          "format": "int64",
          "type": "string"
        },
        "configuration": {
          "description": "Work item-specific configuration as an opaque blob.",
          "type": "string"
        },
        "mapTask": {
          "$ref": "MapTask",
          "description": "Additional information for MapTask WorkItems."
        },
        "seqMapTask": {
          "$ref": "SeqMapTask",
          "description": "Additional information for SeqMapTask WorkItems."
        },
        "packages": {
          "description": "Any required packages that need to be fetched in order to execute\nthis WorkItem.",
          "type": "array",
          "items": {
            "$ref": "Package"
          }
        },
        "projectId": {
          "description": "Identifies the cloud project this WorkItem belongs to.",
          "type": "string"
        },
        "sourceOperationTask": {
          "description": "Additional information for source operation WorkItems.",
          "$ref": "SourceOperationRequest"
        },
        "streamingSetupTask": {
          "description": "Additional information for StreamingSetupTask WorkItems.",
          "$ref": "StreamingSetupTask"
        },
        "reportStatusInterval": {
          "description": "Recommended reporting interval.",
          "format": "google-duration",
          "type": "string"
        }
      },
      "id": "WorkItem"
    },
    "ReportedParallelism": {
      "description": "Represents the level of parallelism in a WorkItem's input,\nreported by the worker.",
      "type": "object",
      "properties": {
        "isInfinite": {
          "type": "boolean",
          "description": "Specifies whether the parallelism is infinite. If true, \"value\" is\nignored.\nInfinite parallelism means the service will assume that the work item\ncan always be split into more non-empty work items by dynamic splitting.\nThis is a work-around for lack of support for infinity by the current\nJSON-based Java RPC stack."
        },
        "value": {
          "description": "Specifies the level of parallelism in case it is finite.",
          "format": "double",
          "type": "number"
        }
      },
      "id": "ReportedParallelism"
    },
    "ResourceUtilizationReport": {
      "id": "ResourceUtilizationReport",
      "description": "Worker metrics exported from workers. This contains resource utilization\nmetrics accumulated from a variety of sources. For more information, see\ngo/df-resource-signals.",
      "type": "object",
      "properties": {
        "memoryInfo": {
          "description": "Memory utilization samples.",
          "type": "array",
          "items": {
            "$ref": "MemInfo"
          }
        },
        "containers": {
          "description": "Per container information.\nKey: container name.",
          "type": "object",
          "additionalProperties": {
            "$ref": "ResourceUtilizationReport"
          }
        },
        "cpuTime": {
          "description": "CPU utilization samples.",
          "type": "array",
          "items": {
            "$ref": "CPUTime"
          }
        }
      }
    },
    "TopologyConfig": {
      "description": "Global topology of the streaming Dataflow job, including all\ncomputations and their sharded locations.",
      "type": "object",
      "properties": {
        "forwardingKeyBits": {
          "description": "The size (in bits) of keys that will be assigned to source messages.",
          "format": "int32",
          "type": "integer"
        },
        "userStageToComputationNameMap": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Maps user stage names to stable computation names.",
          "type": "object"
        },
        "computations": {
          "description": "The computations associated with a streaming Dataflow job.",
          "type": "array",
          "items": {
            "$ref": "ComputationTopology"
          }
        },
        "dataDiskAssignments": {
          "description": "The disks assigned to a streaming Dataflow job.",
          "type": "array",
          "items": {
            "$ref": "DataDiskAssignment"
          }
        },
        "persistentStateVersion": {
          "description": "Version number for persistent state.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "TopologyConfig"
    },
    "SourceSplitOptions": {
      "type": "object",
      "properties": {
        "desiredBundleSizeBytes": {
          "description": "The source should be split into a set of bundles where the estimated size\nof each is approximately this many bytes.",
          "format": "int64",
          "type": "string"
        },
        "desiredShardSizeBytes": {
          "description": "DEPRECATED in favor of desired_bundle_size_bytes.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "SourceSplitOptions",
      "description": "Hints for splitting a Source into bundles (parts for parallel\nprocessing) using SourceSplitRequest."
    },
    "ReadInstruction": {
      "description": "An instruction that reads records.\nTakes no inputs, produces one output.",
      "type": "object",
      "properties": {
        "source": {
          "$ref": "Source",
          "description": "The source to read from."
        }
      },
      "id": "ReadInstruction"
    },
    "WorkerSettings": {
      "description": "Provides data to pass through to the worker harness.",
      "type": "object",
      "properties": {
        "servicePath": {
          "description": "The Cloud Dataflow service path relative to the root URL, for example,\n\"dataflow/v1b3/projects\".",
          "type": "string"
        },
        "shuffleServicePath": {
          "description": "The Shuffle service path relative to the root URL, for example,\n\"shuffle/v1beta1\".",
          "type": "string"
        },
        "workerId": {
          "description": "The ID of the worker running this pipeline.",
          "type": "string"
        },
        "tempStoragePrefix": {
          "description": "The prefix of the resources the system should use for temporary\nstorage.\n\nThe supported resource type is:\n\nGoogle Cloud Storage:\n\n  storage.googleapis.com/{bucket}/{object}\n  bucket.storage.googleapis.com/{object}",
          "type": "string"
        },
        "baseUrl": {
          "description": "The base URL for accessing Google Cloud APIs.\n\nWhen workers access Google Cloud APIs, they logically do so via\nrelative URLs.  If this field is specified, it supplies the base\nURL to use for resolving these relative URLs.  The normative\nalgorithm used is defined by RFC 1808, \"Relative Uniform Resource\nLocators\".\n\nIf not specified, the default value is \"http://www.googleapis.com/\"",
          "type": "string"
        },
        "reportingEnabled": {
          "description": "Whether to send work progress updates to the service.",
          "type": "boolean"
        }
      },
      "id": "WorkerSettings"
    },
    "StreamingStageLocation": {
      "description": "Identifies the location of a streaming computation stage, for\nstage-to-stage communication.",
      "type": "object",
      "properties": {
        "streamId": {
          "description": "Identifies the particular stream within the streaming Dataflow\njob.",
          "type": "string"
        }
      },
      "id": "StreamingStageLocation"
    },
    "DataDiskAssignment": {
      "description": "Data disk assignment for a given VM instance.",
      "type": "object",
      "properties": {
        "vmInstance": {
          "description": "VM instance name the data disks mounted to, for example\n\"myproject-1014-104817-4c2-harness-0\".",
          "type": "string"
        },
        "dataDisks": {
          "description": "Mounted data disks. The order is important a data disk's 0-based index in\nthis list defines which persistent directory the disk is mounted to, for\nexample the list of { \"myproject-1014-104817-4c2-harness-0-disk-0\" },\n{ \"myproject-1014-104817-4c2-harness-0-disk-1\" }.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "DataDiskAssignment"
    },
    "ApproximateSplitRequest": {
      "type": "object",
      "properties": {
        "position": {
          "$ref": "Position",
          "description": "A Position at which to split the work item."
        },
        "fractionOfRemainder": {
          "type": "number",
          "description": "The fraction of the remainder of work to split the work item at, from 0.0\n(split at the current position) to 1.0 (end of the input).",
          "format": "double"
        },
        "fractionConsumed": {
          "description": "A fraction at which to split the work item, from 0.0 (beginning of the\ninput) to 1.0 (end of the input).",
          "format": "double",
          "type": "number"
        }
      },
      "id": "ApproximateSplitRequest",
      "description": "A suggestion by the service to the worker to dynamically split the WorkItem."
    },
    "Status": {
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      },
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "ExecutionStageState": {
      "description": "A message describing the state of a particular execution stage.",
      "type": "object",
      "properties": {
        "executionStageName": {
          "description": "The name of the execution stage.",
          "type": "string"
        },
        "currentStateTime": {
          "description": "The time at which the stage transitioned to this state.",
          "format": "google-datetime",
          "type": "string"
        },
        "executionStageState": {
          "enum": [
            "JOB_STATE_UNKNOWN",
            "JOB_STATE_STOPPED",
            "JOB_STATE_RUNNING",
            "JOB_STATE_DONE",
            "JOB_STATE_FAILED",
            "JOB_STATE_CANCELLED",
            "JOB_STATE_UPDATED",
            "JOB_STATE_DRAINING",
            "JOB_STATE_DRAINED",
            "JOB_STATE_PENDING",
            "JOB_STATE_CANCELLING",
            "JOB_STATE_QUEUED"
          ],
          "description": "Executions stage states allow the same set of values as JobState.",
          "type": "string",
          "enumDescriptions": [
            "The job's run state isn't specified.",
            "`JOB_STATE_STOPPED` indicates that the job has not\nyet started to run.",
            "`JOB_STATE_RUNNING` indicates that the job is currently running.",
            "`JOB_STATE_DONE` indicates that the job has successfully completed.\nThis is a terminal job state.  This state may be set by the Cloud Dataflow\nservice, as a transition from `JOB_STATE_RUNNING`. It may also be set via a\nCloud Dataflow `UpdateJob` call, if the job has not yet reached a terminal\nstate.",
            "`JOB_STATE_FAILED` indicates that the job has failed.  This is a\nterminal job state.  This state may only be set by the Cloud Dataflow\nservice, and only as a transition from `JOB_STATE_RUNNING`.",
            "`JOB_STATE_CANCELLED` indicates that the job has been explicitly\ncancelled. This is a terminal job state. This state may only be\nset via a Cloud Dataflow `UpdateJob` call, and only if the job has not\nyet reached another terminal state.",
            "`JOB_STATE_UPDATED` indicates that the job was successfully updated,\nmeaning that this job was stopped and another job was started, inheriting\nstate from this one. This is a terminal job state. This state may only be\nset by the Cloud Dataflow service, and only as a transition from\n`JOB_STATE_RUNNING`.",
            "`JOB_STATE_DRAINING` indicates that the job is in the process of draining.\nA draining job has stopped pulling from its input sources and is processing\nany data that remains in-flight. This state may be set via a Cloud Dataflow\n`UpdateJob` call, but only as a transition from `JOB_STATE_RUNNING`. Jobs\nthat are draining may only transition to `JOB_STATE_DRAINED`,\n`JOB_STATE_CANCELLED`, or `JOB_STATE_FAILED`.",
            "`JOB_STATE_DRAINED` indicates that the job has been drained.\nA drained job terminated by stopping pulling from its input sources and\nprocessing any data that remained in-flight when draining was requested.\nThis state is a terminal state, may only be set by the Cloud Dataflow\nservice, and only as a transition from `JOB_STATE_DRAINING`.",
            "`JOB_STATE_PENDING` indicates that the job has been created but is not yet\nrunning.  Jobs that are pending may only transition to `JOB_STATE_RUNNING`,\nor `JOB_STATE_FAILED`.",
            "`JOB_STATE_CANCELLING` indicates that the job has been explicitly cancelled\nand is in the process of stopping.  Jobs that are cancelling may only\ntransition to `JOB_STATE_CANCELLED` or `JOB_STATE_FAILED`.",
            "`JOB_STATE_QUEUED` indicates that the job has been created but is being\ndelayed until launch. Jobs that are queued may only transition to\n`JOB_STATE_PENDING` or `JOB_STATE_CANCELLED`."
          ]
        }
      },
      "id": "ExecutionStageState"
    },
    "StreamLocation": {
      "description": "Describes a stream of data, either as input to be processed or as\noutput of a streaming Dataflow job.",
      "type": "object",
      "properties": {
        "customSourceLocation": {
          "description": "The stream is a custom source.",
          "$ref": "CustomSourceLocation"
        },
        "streamingStageLocation": {
          "$ref": "StreamingStageLocation",
          "description": "The stream is part of another computation within the current\nstreaming Dataflow job."
        },
        "pubsubLocation": {
          "$ref": "PubsubLocation",
          "description": "The stream is a pubsub stream."
        },
        "sideInputLocation": {
          "$ref": "StreamingSideInputLocation",
          "description": "The stream is a streaming side input."
        }
      },
      "id": "StreamLocation"
    },
    "WorkerLifecycleEvent": {
      "description": "A report of an event in a worker's lifecycle.\nThe proto contains one event, because the worker is expected to\nasynchronously send each message immediately after the event.\nDue to this asynchrony, messages may arrive out of order (or missing), and it\nis up to the consumer to interpret.\nThe timestamp of the event is in the enclosing WorkerMessage proto.",
      "type": "object",
      "properties": {
        "event": {
          "enumDescriptions": [
            "Invalid event.",
            "The time the VM started.",
            "Our container code starts running. Multiple containers could be\ndistinguished with WorkerMessage.labels if desired.",
            "The worker has a functional external network connection.",
            "Started downloading staging files.",
            "Finished downloading all staging files.",
            "For applicable SDKs, started installation of SDK and worker packages.",
            "Finished installing SDK."
          ],
          "enum": [
            "UNKNOWN_EVENT",
            "OS_START",
            "CONTAINER_START",
            "NETWORK_UP",
            "STAGING_FILES_DOWNLOAD_START",
            "STAGING_FILES_DOWNLOAD_FINISH",
            "SDK_INSTALL_START",
            "SDK_INSTALL_FINISH"
          ],
          "description": "The event being reported.",
          "type": "string"
        },
        "containerStartTime": {
          "description": "The start time of this container. All events will report this so that\nevents can be grouped together across container/VM restarts.",
          "format": "google-datetime",
          "type": "string"
        },
        "metadata": {
          "description": "Other stats that can accompany an event. E.g.\n{ \"downloaded_bytes\" : \"123456\" }",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "id": "WorkerLifecycleEvent"
    },
    "SendWorkerMessagesResponse": {
      "description": "The response to the worker messages.",
      "type": "object",
      "properties": {
        "workerMessageResponses": {
          "description": "The servers response to the worker messages.",
          "type": "array",
          "items": {
            "$ref": "WorkerMessageResponse"
          }
        }
      },
      "id": "SendWorkerMessagesResponse"
    },
    "TransformSummary": {
      "description": "Description of the type, names/ids, and input/outputs for a transform.",
      "type": "object",
      "properties": {
        "displayData": {
          "description": "Transform-specific display data.",
          "type": "array",
          "items": {
            "$ref": "DisplayData"
          }
        },
        "outputCollectionName": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "User  names for all collection outputs to this transform."
        },
        "kind": {
          "enumDescriptions": [
            "Unrecognized transform type.",
            "ParDo transform.",
            "Group By Key transform.",
            "Flatten transform.",
            "Read transform.",
            "Write transform.",
            "Constructs from a constant value, such as with Create.of.",
            "Creates a Singleton view of a collection.",
            "Opening or closing a shuffle session, often as part of a GroupByKey."
          ],
          "enum": [
            "UNKNOWN_KIND",
            "PAR_DO_KIND",
            "GROUP_BY_KEY_KIND",
            "FLATTEN_KIND",
            "READ_KIND",
            "WRITE_KIND",
            "CONSTANT_KIND",
            "SINGLETON_KIND",
            "SHUFFLE_KIND"
          ],
          "description": "Type of transform.",
          "type": "string"
        },
        "inputCollectionName": {
          "description": "User names for all collection inputs to this transform.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "description": "User provided name for this transform instance.",
          "type": "string"
        },
        "id": {
          "description": "SDK generated id of this transform instance.",
          "type": "string"
        }
      },
      "id": "TransformSummary"
    },
    "LeaseWorkItemResponse": {
      "description": "Response to a request to lease WorkItems.",
      "type": "object",
      "properties": {
        "unifiedWorkerResponse": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Untranslated bag-of-bytes WorkResponse for UnifiedWorker.",
          "type": "object"
        },
        "workItems": {
          "type": "array",
          "items": {
            "$ref": "WorkItem"
          },
          "description": "A list of the leased WorkItems."
        }
      },
      "id": "LeaseWorkItemResponse"
    },
    "StreamingComputationConfig": {
      "properties": {
        "computationId": {
          "description": "Unique identifier for this computation.",
          "type": "string"
        },
        "systemName": {
          "description": "System defined name for this computation.",
          "type": "string"
        },
        "stageName": {
          "description": "Stage name of this computation.",
          "type": "string"
        },
        "instructions": {
          "description": "Instructions that comprise the computation.",
          "type": "array",
          "items": {
            "$ref": "ParallelInstruction"
          }
        },
        "transformUserNameToStateFamily": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map from user name of stateful transforms in this stage to their state\nfamily.",
          "type": "object"
        }
      },
      "id": "StreamingComputationConfig",
      "description": "Configuration information for a single streaming computation.",
      "type": "object"
    },
    "Sink": {
      "description": "A sink that records can be encoded and written to.",
      "type": "object",
      "properties": {
        "codec": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "The codec to use to encode data written to the sink.",
          "type": "object"
        },
        "spec": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "The sink to write to, plus its parameters.",
          "type": "object"
        }
      },
      "id": "Sink"
    },
    "LaunchTemplateParameters": {
      "description": "Parameters to provide to the template being launched.",
      "type": "object",
      "properties": {
        "jobName": {
          "description": "Required. The job name to use for the created job.",
          "type": "string"
        },
        "transformNameMapping": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Only applicable when updating a pipeline. Map of transform name prefixes of\nthe job to be replaced to the corresponding name prefixes of the new job.",
          "type": "object"
        },
        "environment": {
          "$ref": "RuntimeEnvironment",
          "description": "The runtime environment for the job."
        },
        "update": {
          "description": "If set, replace the existing pipeline with the name specified by jobName\nwith this pipeline, preserving state.",
          "type": "boolean"
        },
        "parameters": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The runtime parameters to pass to the job.",
          "type": "object"
        }
      },
      "id": "LaunchTemplateParameters"
    },
    "FlattenInstruction": {
      "description": "An instruction that copies its inputs (zero or more) to its (single) output.",
      "type": "object",
      "properties": {
        "inputs": {
          "description": "Describes the inputs to the flatten instruction.",
          "type": "array",
          "items": {
            "$ref": "InstructionInput"
          }
        }
      },
      "id": "FlattenInstruction"
    },
    "PartialGroupByKeyInstruction": {
      "properties": {
        "inputElementCodec": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "The codec to use for interpreting an element in the input PTable.",
          "type": "object"
        },
        "valueCombiningFn": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "description": "The value combining function to invoke.",
          "type": "object"
        },
        "originalCombineValuesInputStoreName": {
          "type": "string",
          "description": "If this instruction includes a combining function this is the name of the\nintermediate store between the GBK and the CombineValues."
        },
        "sideInputs": {
          "description": "Zero or more side inputs.",
          "type": "array",
          "items": {
            "$ref": "SideInputInfo"
          }
        },
        "originalCombineValuesStepName": {
          "description": "If this instruction includes a combining function, this is the name of the\nCombineValues instruction lifted into this instruction.",
          "type": "string"
        },
        "input": {
          "$ref": "InstructionInput",
          "description": "Describes the input to the partial group-by-key instruction."
        }
      },
      "id": "PartialGroupByKeyInstruction",
      "description": "An instruction that does a partial group-by-key.\nOne input and one output.",
      "type": "object"
    },
    "InstructionInput": {
      "description": "An input of an instruction, as a reference to an output of a\nproducer instruction.",
      "type": "object",
      "properties": {
        "producerInstructionIndex": {
          "description": "The index (origin zero) of the parallel instruction that produces\nthe output to be consumed by this input.  This index is relative\nto the list of instructions in this input's instruction's\ncontaining MapTask.",
          "format": "int32",
          "type": "integer"
        },
        "outputNum": {
          "description": "The output index (origin zero) within the producer.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "InstructionInput"
    },
    "StageSource": {
      "properties": {
        "name": {
          "description": "Dataflow service generated name for this source.",
          "type": "string"
        },
        "sizeBytes": {
          "description": "Size of the source, if measurable.",
          "format": "int64",
          "type": "string"
        },
        "userName": {
          "type": "string",
          "description": "Human-readable name for this source; may be user or system generated."
        },
        "originalTransformOrCollection": {
          "type": "string",
          "description": "User name for the original user transform or collection with which this\nsource is most closely associated."
        }
      },
      "id": "StageSource",
      "description": "Description of an input or output of an execution stage.",
      "type": "object"
    },
    "StringList": {
      "description": "A metric value representing a list of strings.",
      "type": "object",
      "properties": {
        "elements": {
          "description": "Elements of the list.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "StringList"
    },
    "DisplayData": {
      "description": "Data provided with a pipeline or transform to provide descriptive info.",
      "type": "object",
      "properties": {
        "timestampValue": {
          "description": "Contains value if the data is of timestamp type.",
          "format": "google-datetime",
          "type": "string"
        },
        "boolValue": {
          "description": "Contains value if the data is of a boolean type.",
          "type": "boolean"
        },
        "javaClassValue": {
          "description": "Contains value if the data is of java class type.",
          "type": "string"
        },
        "strValue": {
          "type": "string",
          "description": "Contains value if the data is of string type."
        },
        "durationValue": {
          "description": "Contains value if the data is of duration type.",
          "format": "google-duration",
          "type": "string"
        },
        "int64Value": {
          "description": "Contains value if the data is of int64 type.",
          "format": "int64",
          "type": "string"
        },
        "namespace": {
          "type": "string",
          "description": "The namespace for the key. This is usually a class name or programming\nlanguage namespace (i.e. python module) which defines the display data.\nThis allows a dax monitoring system to specially handle the data\nand perform custom rendering."
        },
        "floatValue": {
          "description": "Contains value if the data is of float type.",
          "format": "float",
          "type": "number"
        },
        "key": {
          "description": "The key identifying the display data.\nThis is intended to be used as a label for the display data\nwhen viewed in a dax monitoring system.",
          "type": "string"
        },
        "shortStrValue": {
          "description": "A possible additional shorter value to display.\nFor example a java_class_name_value of com.mypackage.MyDoFn\nwill be stored with MyDoFn as the short_str_value and\ncom.mypackage.MyDoFn as the java_class_name value.\nshort_str_value can be displayed and java_class_name_value\nwill be displayed as a tooltip.",
          "type": "string"
        },
        "label": {
          "description": "An optional label to display in a dax UI for the element.",
          "type": "string"
        },
        "url": {
          "description": "An optional full URL.",
          "type": "string"
        }
      },
      "id": "DisplayData"
    },
    "LeaseWorkItemRequest": {
      "description": "Request to lease WorkItems.",
      "type": "object",
      "properties": {
        "unifiedWorkerRequest": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Untranslated bag-of-bytes WorkRequest from UnifiedWorker."
        },
        "workerCapabilities": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Worker capabilities. WorkItems might be limited to workers with specific\ncapabilities."
        },
        "workerId": {
          "description": "Identifies the worker leasing work -- typically the ID of the\nvirtual machine running the worker.",
          "type": "string"
        },
        "requestedLeaseDuration": {
          "description": "The initial lease period.",
          "format": "google-duration",
          "type": "string"
        },
        "currentWorkerTime": {
          "description": "The current timestamp at the worker.",
          "format": "google-datetime",
          "type": "string"
        },
        "workItemTypes": {
          "description": "Filter for WorkItem type.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "location": {
          "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains the WorkItem's job.",
          "type": "string"
        }
      },
      "id": "LeaseWorkItemRequest"
    },
    "GetDebugConfigRequest": {
      "id": "GetDebugConfigRequest",
      "description": "Request to get updated debug configuration for component.",
      "type": "object",
      "properties": {
        "componentId": {
          "description": "The internal component id for which debug configuration is\nrequested.",
          "type": "string"
        },
        "workerId": {
          "description": "The worker id, i.e., VM hostname.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains the job specified by job_id."
        }
      }
    },
    "GetTemplateResponse": {
      "description": "The response to a GetTemplate request.",
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "TemplateMetadata",
          "description": "The template metadata describing the template name, available\nparameters, etc."
        },
        "runtimeMetadata": {
          "description": "Describes the runtime metadata with SDKInfo and available parameters.",
          "$ref": "RuntimeMetadata"
        },
        "status": {
          "$ref": "Status",
          "description": "The status of the get template request. Any problems with the\nrequest will be indicated in the error_details."
        },
        "templateType": {
          "enum": [
            "UNKNOWN",
            "LEGACY",
            "FLEX"
          ],
          "description": "Template Type.",
          "type": "string",
          "enumDescriptions": [
            "Unknown Template Type.",
            "Legacy Template.",
            "Flex Template."
          ]
        }
      },
      "id": "GetTemplateResponse"
    },
    "Parameter": {
      "description": "Structured data associated with this message.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Value for this parameter.",
          "type": "any"
        },
        "key": {
          "type": "string",
          "description": "Key or name for this parameter."
        }
      },
      "id": "Parameter"
    },
    "Snapshot": {
      "description": "Represents a snapshot of a job.",
      "type": "object",
      "properties": {
        "diskSizeBytes": {
          "description": "The disk byte size of the snapshot. Only available for snapshots in READY\nstate.",
          "format": "int64",
          "type": "string"
        },
        "description": {
          "description": "User specified description of the snapshot. Maybe empty.",
          "type": "string"
        },
        "pubsubMetadata": {
          "type": "array",
          "items": {
            "$ref": "PubsubSnapshotMetadata"
          },
          "description": "PubSub snapshot metadata."
        },
        "creationTime": {
          "description": "The time this snapshot was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "sourceJobId": {
          "description": "The job this snapshot was created from.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "Unknown state.",
            "Snapshot intent to create has been persisted, snapshotting of state has not\nyet started.",
            "Snapshotting is being performed.",
            "Snapshot has been created and is ready to be used.",
            "Snapshot failed to be created.",
            "Snapshot has been deleted."
          ],
          "enum": [
            "UNKNOWN_SNAPSHOT_STATE",
            "PENDING",
            "RUNNING",
            "READY",
            "FAILED",
            "DELETED"
          ],
          "description": "State of the snapshot."
        },
        "projectId": {
          "description": "The project this snapshot belongs to.",
          "type": "string"
        },
        "ttl": {
          "description": "The time after which this snapshot will be automatically deleted.",
          "format": "google-duration",
          "type": "string"
        },
        "id": {
          "description": "The unique ID of this snapshot.",
          "type": "string"
        }
      },
      "id": "Snapshot"
    },
    "ReportWorkItemStatusRequest": {
      "id": "ReportWorkItemStatusRequest",
      "description": "Request to report the status of WorkItems.",
      "type": "object",
      "properties": {
        "unifiedWorkerRequest": {
          "description": "Untranslated bag-of-bytes WorkProgressUpdateRequest from UnifiedWorker.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "workerId": {
          "type": "string",
          "description": "The ID of the worker reporting the WorkItem status.  If this\ndoes not match the ID of the worker which the Dataflow service\nbelieves currently has the lease on the WorkItem, the report\nwill be dropped (with an error response)."
        },
        "currentWorkerTime": {
          "description": "The current timestamp at the worker.",
          "format": "google-datetime",
          "type": "string"
        },
        "location": {
          "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains the WorkItem's job.",
          "type": "string"
        },
        "workItemStatuses": {
          "description": "The order is unimportant, except that the order of the\nWorkItemServiceState messages in the ReportWorkItemStatusResponse\ncorresponds to the order of WorkItemStatus messages here.",
          "type": "array",
          "items": {
            "$ref": "WorkItemStatus"
          }
        }
      }
    },
    "StreamingConfigTask": {
      "properties": {
        "streamingComputationConfigs": {
          "description": "Set of computation configuration information.",
          "type": "array",
          "items": {
            "$ref": "StreamingComputationConfig"
          }
        },
        "maxWorkItemCommitBytes": {
          "description": "Maximum size for work item commit supported windmill storage layer.",
          "format": "int64",
          "type": "string"
        },
        "windmillServicePort": {
          "description": "If present, the worker must use this port to communicate with Windmill\nService dispatchers. Only applicable when windmill_service_endpoint is\nspecified.",
          "format": "int64",
          "type": "string"
        },
        "getDataStreamChunkSizeBytes": {
          "description": "Chunk size for get data streams from the harness to windmill.",
          "format": "int64",
          "type": "string"
        },
        "commitStreamChunkSizeBytes": {
          "description": "Chunk size for commit streams from the harness to windmill.",
          "format": "int64",
          "type": "string"
        },
        "windmillServiceEndpoint": {
          "description": "If present, the worker must use this endpoint to communicate with Windmill\nService dispatchers, otherwise the worker must continue to use whatever\nendpoint it had been using.",
          "type": "string"
        },
        "userStepToStateFamilyNameMap": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map from user step names to state families.",
          "type": "object"
        }
      },
      "id": "StreamingConfigTask",
      "description": "A task that carries configuration information for streaming computations.",
      "type": "object"
    },
    "PipelineDescription": {
      "description": "A descriptive representation of submitted pipeline as well as the executed\nform.  This data is provided by the Dataflow service for ease of visualizing\nthe pipeline and interpreting Dataflow provided metrics.",
      "type": "object",
      "properties": {
        "originalPipelineTransform": {
          "type": "array",
          "items": {
            "$ref": "TransformSummary"
          },
          "description": "Description of each transform in the pipeline and collections between them."
        },
        "displayData": {
          "description": "Pipeline level display data.",
          "type": "array",
          "items": {
            "$ref": "DisplayData"
          }
        },
        "executionPipelineStage": {
          "description": "Description of each stage of execution of the pipeline.",
          "type": "array",
          "items": {
            "$ref": "ExecutionStageSummary"
          }
        }
      },
      "id": "PipelineDescription"
    },
    "Step": {
      "properties": {
        "name": {
          "description": "The name that identifies the step. This must be unique for each\nstep with respect to all other steps in the Cloud Dataflow job.",
          "type": "string"
        },
        "kind": {
          "description": "The kind of step in the Cloud Dataflow job.",
          "type": "string"
        },
        "properties": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Named properties associated with the step. Each kind of\npredefined step has its own required set of properties.\nMust be provided on Create.  Only retrieved with JOB_VIEW_ALL.",
          "type": "object"
        }
      },
      "id": "Step",
      "description": "Defines a particular step within a Cloud Dataflow job.\n\nA job consists of multiple steps, each of which performs some\nspecific operation as part of the overall job.  Data is typically\npassed from one step to another as part of the job.\n\nHere's an example of a sequence of steps which together implement a\nMap-Reduce job:\n\n  * Read a collection of data from some source, parsing the\n    collection's elements.\n\n  * Validate the elements.\n\n  * Apply a user-defined function to map each element to some value\n    and extract an element-specific key value.\n\n  * Group elements with the same key into a single element with\n    that key, transforming a multiply-keyed collection into a\n    uniquely-keyed collection.\n\n  * Write the elements out to some data sink.\n\nNote that the Cloud Dataflow service may be used to run many different\ntypes of jobs, not just Map-Reduce.",
      "type": "object"
    },
    "JobExecutionInfo": {
      "description": "Additional information about how a Cloud Dataflow job will be executed that\nisn't contained in the submitted job.",
      "type": "object",
      "properties": {
        "stages": {
          "description": "A mapping from each stage to the information about that stage.",
          "type": "object",
          "additionalProperties": {
            "$ref": "JobExecutionStageInfo"
          }
        }
      },
      "id": "JobExecutionInfo"
    },
    "FailedLocation": {
      "description": "Indicates which [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) failed\nto respond to a request for data.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\nfailed to respond.",
          "type": "string"
        }
      },
      "id": "FailedLocation"
    },
    "Disk": {
      "id": "Disk",
      "description": "Describes the data disk used by a workflow job.",
      "type": "object",
      "properties": {
        "sizeGb": {
          "description": "Size of disk in GB.  If zero or unspecified, the service will\nattempt to choose a reasonable default.",
          "format": "int32",
          "type": "integer"
        },
        "diskType": {
          "type": "string",
          "description": "Disk storage type, as defined by Google Compute Engine.  This\nmust be a disk type appropriate to the project and zone in which\nthe workers will run.  If unknown or unspecified, the service\nwill attempt to choose a reasonable default.\n\nFor example, the standard persistent disk type is a resource name\ntypically ending in \"pd-standard\".  If SSD persistent disks are\navailable, the resource name typically ends with \"pd-ssd\".  The\nactual valid values are defined the Google Compute Engine API,\nnot by the Cloud Dataflow API; consult the Google Compute Engine\ndocumentation for more information about determining the set of\navailable disk types for a particular project and zone.\n\nGoogle Compute Engine Disk types are local to a particular\nproject in a particular zone, and so the resource name will\ntypically look something like this:\n\ncompute.googleapis.com/projects/project-id/zones/zone/diskTypes/pd-standard"
        },
        "mountPoint": {
          "description": "Directory in a VM where disk is mounted.",
          "type": "string"
        }
      }
    },
    "HotKeyDetection": {
      "type": "object",
      "properties": {
        "systemName": {
          "description": "System-defined name of the step containing this hot key.\nUnique across the workflow.",
          "type": "string"
        },
        "hotKeyAge": {
          "description": "The age of the hot key measured from when it was first detected.",
          "format": "google-duration",
          "type": "string"
        },
        "userStepName": {
          "description": "User-provided name of the step that contains this hot key.",
          "type": "string"
        }
      },
      "id": "HotKeyDetection",
      "description": "Proto describing a hot key detected on a given WorkItem."
    },
    "ListJobMessagesResponse": {
      "description": "Response to a request to list job messages.",
      "type": "object",
      "properties": {
        "autoscalingEvents": {
          "description": "Autoscaling events in ascending timestamp order.",
          "type": "array",
          "items": {
            "$ref": "AutoscalingEvent"
          }
        },
        "jobMessages": {
          "description": "Messages in ascending timestamp order.",
          "type": "array",
          "items": {
            "$ref": "JobMessage"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token to obtain the next page of results if there are more."
        }
      },
      "id": "ListJobMessagesResponse"
    },
    "CounterMetadata": {
      "description": "CounterMetadata includes all static non-name non-value counter attributes.",
      "type": "object",
      "properties": {
        "kind": {
          "enumDescriptions": [
            "Counter aggregation kind was not set.",
            "Aggregated value is the sum of all contributed values.",
            "Aggregated value is the max of all contributed values.",
            "Aggregated value is the min of all contributed values.",
            "Aggregated value is the mean of all contributed values.",
            "Aggregated value represents the logical 'or' of all contributed values.",
            "Aggregated value represents the logical 'and' of all contributed values.",
            "Aggregated value is a set of unique contributed values.",
            "Aggregated value captures statistics about a distribution.",
            "Aggregated value tracks the latest value of a variable."
          ],
          "enum": [
            "INVALID",
            "SUM",
            "MAX",
            "MIN",
            "MEAN",
            "OR",
            "AND",
            "SET",
            "DISTRIBUTION",
            "LATEST_VALUE"
          ],
          "description": "Counter aggregation kind.",
          "type": "string"
        },
        "description": {
          "description": "Human-readable description of the counter semantics.",
          "type": "string"
        },
        "standardUnits": {
          "enumDescriptions": [
            "Counter returns a value in bytes.",
            "Counter returns a value in bytes per second.",
            "Counter returns a value in milliseconds.",
            "Counter returns a value in microseconds.",
            "Counter returns a value in nanoseconds.",
            "Counter returns a timestamp in milliseconds.",
            "Counter returns a timestamp in microseconds.",
            "Counter returns a timestamp in nanoseconds."
          ],
          "enum": [
            "BYTES",
            "BYTES_PER_SEC",
            "MILLISECONDS",
            "MICROSECONDS",
            "NANOSECONDS",
            "TIMESTAMP_MSEC",
            "TIMESTAMP_USEC",
            "TIMESTAMP_NSEC"
          ],
          "description": "System defined Units, see above enum.",
          "type": "string"
        },
        "otherUnits": {
          "description": "A string referring to the unit type.",
          "type": "string"
        }
      },
      "id": "CounterMetadata"
    },
    "ApproximateReportedProgress": {
      "id": "ApproximateReportedProgress",
      "description": "A progress measurement of a WorkItem by a worker.",
      "type": "object",
      "properties": {
        "fractionConsumed": {
          "type": "number",
          "description": "Completion as fraction of the input consumed, from 0.0 (beginning, nothing\nconsumed), to 1.0 (end of the input, entire input consumed).",
          "format": "double"
        },
        "consumedParallelism": {
          "$ref": "ReportedParallelism",
          "description": "Total amount of parallelism in the portion of input of this task that has\nalready been consumed and is no longer active. In the first two examples\nabove (see remaining_parallelism), the value should be 29 or 2\nrespectively.  The sum of remaining_parallelism and consumed_parallelism\nshould equal the total amount of parallelism in this work item.  If\nspecified, must be finite."
        },
        "remainingParallelism": {
          "description": "Total amount of parallelism in the input of this task that remains,\n(i.e. can be delegated to this task and any new tasks via dynamic\nsplitting). Always at least 1 for non-finished work items and 0 for\nfinished.\n\n\"Amount of parallelism\" refers to how many non-empty parts of the input\ncan be read in parallel. This does not necessarily equal number\nof records. An input that can be read in parallel down to the\nindividual records is called \"perfectly splittable\".\nAn example of non-perfectly parallelizable input is a block-compressed\nfile format where a block of records has to be read as a whole,\nbut different blocks can be read in parallel.\n\nExamples:\n* If we are processing record #30 (starting at 1) out of 50 in a perfectly\n  splittable 50-record input, this value should be 21 (20 remaining + 1\n  current).\n* If we are reading through block 3 in a block-compressed file consisting\n  of 5 blocks, this value should be 3 (since blocks 4 and 5 can be\n  processed in parallel by new tasks via dynamic splitting and the current\n  task remains processing block 3).\n* If we are reading through the last block in a block-compressed file,\n  or reading or processing the last record in a perfectly splittable\n  input, this value should be 1, because apart from the current task, no\n  additional remainder can be split off.",
          "$ref": "ReportedParallelism"
        },
        "position": {
          "description": "A Position within the work to represent a progress.",
          "$ref": "Position"
        }
      }
    },
    "StateFamilyConfig": {
      "type": "object",
      "properties": {
        "stateFamily": {
          "description": "The state family value.",
          "type": "string"
        },
        "isRead": {
          "description": "If true, this family corresponds to a read operation.",
          "type": "boolean"
        }
      },
      "id": "StateFamilyConfig",
      "description": "State family configuration."
    },
    "IntegerList": {
      "description": "A metric value representing a list of integers.",
      "type": "object",
      "properties": {
        "elements": {
          "description": "Elements of the list.",
          "type": "array",
          "items": {
            "$ref": "SplitInt64"
          }
        }
      },
      "id": "IntegerList"
    },
    "ResourceUtilizationReportResponse": {
      "description": "Service-side response to WorkerMessage reporting resource utilization.",
      "type": "object",
      "properties": {},
      "id": "ResourceUtilizationReportResponse"
    },
    "SourceSplitResponse": {
      "type": "object",
      "properties": {
        "outcome": {
          "enum": [
            "SOURCE_SPLIT_OUTCOME_UNKNOWN",
            "SOURCE_SPLIT_OUTCOME_USE_CURRENT",
            "SOURCE_SPLIT_OUTCOME_SPLITTING_HAPPENED"
          ],
          "description": "Indicates whether splitting happened and produced a list of bundles.\nIf this is USE_CURRENT_SOURCE_AS_IS, the current source should\nbe processed \"as is\" without splitting. \"bundles\" is ignored in this case.\nIf this is SPLITTING_HAPPENED, then \"bundles\" contains a list of\nbundles into which the source was split.",
          "type": "string",
          "enumDescriptions": [
            "The source split outcome is unknown, or unspecified.",
            "The current source should be processed \"as is\" without splitting.",
            "Splitting produced a list of bundles."
          ]
        },
        "bundles": {
          "description": "If outcome is SPLITTING_HAPPENED, then this is a list of bundles\ninto which the source was split. Otherwise this field is ignored.\nThis list can be empty, which means the source represents an empty input.",
          "type": "array",
          "items": {
            "$ref": "DerivedSource"
          }
        },
        "shards": {
          "description": "DEPRECATED in favor of bundles.",
          "type": "array",
          "items": {
            "$ref": "SourceSplitShard"
          }
        }
      },
      "id": "SourceSplitResponse",
      "description": "The response to a SourceSplitRequest."
    },
    "ParallelInstruction": {
      "description": "Describes a particular operation comprising a MapTask.",
      "type": "object",
      "properties": {
        "read": {
          "$ref": "ReadInstruction",
          "description": "Additional information for Read instructions."
        },
        "parDo": {
          "$ref": "ParDoInstruction",
          "description": "Additional information for ParDo instructions."
        },
        "flatten": {
          "$ref": "FlattenInstruction",
          "description": "Additional information for Flatten instructions."
        },
        "originalName": {
          "description": "System-defined name for the operation in the original workflow graph.",
          "type": "string"
        },
        "systemName": {
          "type": "string",
          "description": "System-defined name of this operation.\nUnique across the workflow."
        },
        "write": {
          "$ref": "WriteInstruction",
          "description": "Additional information for Write instructions."
        },
        "partialGroupByKey": {
          "description": "Additional information for PartialGroupByKey instructions.",
          "$ref": "PartialGroupByKeyInstruction"
        },
        "outputs": {
          "description": "Describes the outputs of the instruction.",
          "type": "array",
          "items": {
            "$ref": "InstructionOutput"
          }
        },
        "name": {
          "description": "User-provided name of this operation.",
          "type": "string"
        }
      },
      "id": "ParallelInstruction"
    },
    "PubSubIODetails": {
      "description": "Metadata for a PubSub connector used by the job.",
      "type": "object",
      "properties": {
        "topic": {
          "description": "Topic accessed in the connection.",
          "type": "string"
        },
        "subscription": {
          "description": "Subscription used in the connection.",
          "type": "string"
        }
      },
      "id": "PubSubIODetails"
    },
    "KeyRangeDataDiskAssignment": {
      "type": "object",
      "properties": {
        "start": {
          "description": "The start (inclusive) of the key range.",
          "type": "string"
        },
        "dataDisk": {
          "type": "string",
          "description": "The name of the data disk where data for this range is stored.\nThis name is local to the Google Cloud Platform project and uniquely\nidentifies the disk within that project, for example\n\"myproject-1014-104817-4c2-harness-0-disk-1\"."
        },
        "end": {
          "description": "The end (exclusive) of the key range.",
          "type": "string"
        }
      },
      "id": "KeyRangeDataDiskAssignment",
      "description": "Data disk assignment information for a specific key-range of a sharded\ncomputation.\nCurrently we only support UTF-8 character splits to simplify encoding into\nJSON."
    },
    "Package": {
      "properties": {
        "location": {
          "description": "The resource to read the package from. The supported resource type is:\n\nGoogle Cloud Storage:\n\n  storage.googleapis.com/{bucket}\n  bucket.storage.googleapis.com/",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name of the package."
        }
      },
      "id": "Package",
      "description": "The packages that must be installed in order for a worker to run the\nsteps of the Cloud Dataflow job that will be assigned to its worker\npool.\n\nThis is the mechanism by which the Cloud Dataflow SDK causes code to\nbe loaded onto the workers. For example, the Cloud Dataflow Java SDK\nmight use this to install jars containing the user's code and all of the\nvarious dependencies (libraries, data files, etc.) required in order\nfor that code to run.",
      "type": "object"
    },
    "ParDoInstruction": {
      "description": "An instruction that does a ParDo operation.\nTakes one main input and zero or more side inputs, and produces\nzero or more outputs.\nRuns user code.",
      "type": "object",
      "properties": {
        "sideInputs": {
          "description": "Zero or more side inputs.",
          "type": "array",
          "items": {
            "$ref": "SideInputInfo"
          }
        },
        "multiOutputInfos": {
          "type": "array",
          "items": {
            "$ref": "MultiOutputInfo"
          },
          "description": "Information about each of the outputs, if user_fn is a  MultiDoFn."
        },
        "userFn": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "The user function to invoke.",
          "type": "object"
        },
        "input": {
          "$ref": "InstructionInput",
          "description": "The input."
        },
        "numOutputs": {
          "description": "The number of outputs.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "ParDoInstruction"
    },
    "WorkerShutdownNotice": {
      "description": "Shutdown notification from workers. This is to be sent by the shutdown\nscript of the worker VM so that the backend knows that the VM is being\nshut down.",
      "type": "object",
      "properties": {
        "reason": {
          "description": "The reason for the worker shutdown.\nCurrent possible values are:\n  \"UNKNOWN\": shutdown reason is unknown.\n  \"PREEMPTION\": shutdown reason is preemption.\nOther possible reasons may be added in the future.",
          "type": "string"
        }
      },
      "id": "WorkerShutdownNotice"
    },
    "MetricUpdate": {
      "id": "MetricUpdate",
      "description": "Describes the state of a metric.",
      "type": "object",
      "properties": {
        "scalar": {
          "type": "any",
          "description": "Worker-computed aggregate value for aggregation kinds \"Sum\", \"Max\", \"Min\",\n\"And\", and \"Or\".  The possible value types are Long, Double, and Boolean."
        },
        "meanCount": {
          "description": "Worker-computed aggregate value for the \"Mean\" aggregation kind.\nThis holds the count of the aggregated values and is used in combination\nwith mean_sum above to obtain the actual mean aggregate value.\nThe only possible value type is Long.",
          "type": "any"
        },
        "meanSum": {
          "type": "any",
          "description": "Worker-computed aggregate value for the \"Mean\" aggregation kind.\nThis holds the sum of the aggregated values and is used in combination\nwith mean_count below to obtain the actual mean aggregate value.\nThe only possible value types are Long and Double."
        },
        "updateTime": {
          "description": "Timestamp associated with the metric value. Optional when workers are\nreporting work progress; it will be filled in responses from the\nmetrics API.",
          "format": "google-datetime",
          "type": "string"
        },
        "name": {
          "$ref": "MetricStructuredName",
          "description": "Name of the metric."
        },
        "distribution": {
          "type": "any",
          "description": "A struct value describing properties of a distribution of numeric values."
        },
        "set": {
          "description": "Worker-computed aggregate value for the \"Set\" aggregation kind.  The only\npossible value type is a list of Values whose type can be Long, Double,\nor String, according to the metric's type.  All Values in the list must\nbe of the same type.",
          "type": "any"
        },
        "gauge": {
          "description": "A struct value describing properties of a Gauge.\nMetrics of gauge type show the value of a metric across time, and is\naggregated based on the newest value.",
          "type": "any"
        },
        "cumulative": {
          "description": "True if this metric is reported as the total cumulative aggregate\nvalue accumulated since the worker started working on this WorkItem.\nBy default this is false, indicating that this metric is reported\nas a delta that is not associated with any WorkItem.",
          "type": "boolean"
        },
        "internal": {
          "description": "Worker-computed aggregate value for internal use by the Dataflow\nservice.",
          "type": "any"
        },
        "kind": {
          "type": "string",
          "description": "Metric aggregation kind.  The possible metric aggregation kinds are\n\"Sum\", \"Max\", \"Min\", \"Mean\", \"Set\", \"And\", \"Or\", and \"Distribution\".\nThe specified aggregation kind is case-insensitive.\n\nIf omitted, this is not an aggregated value but instead\na single metric sample value."
        }
      }
    },
    "CounterStructuredName": {
      "description": "Identifies a counter within a per-job namespace. Counters whose structured\nnames are the same get merged into a single value for the job.",
      "type": "object",
      "properties": {
        "workerId": {
          "type": "string",
          "description": "ID of a particular worker."
        },
        "originNamespace": {
          "description": "A string containing a more specific namespace of the counter's origin.",
          "type": "string"
        },
        "origin": {
          "enumDescriptions": [
            "Counter was created by the Dataflow system.",
            "Counter was created by the user."
          ],
          "enum": [
            "SYSTEM",
            "USER"
          ],
          "description": "One of the standard Origins defined above.",
          "type": "string"
        },
        "name": {
          "description": "Counter name. Not necessarily globally-unique, but unique within the\ncontext of the other fields.\nRequired.",
          "type": "string"
        },
        "executionStepName": {
          "description": "Name of the stage. An execution step contains multiple component steps.",
          "type": "string"
        },
        "originalRequestingStepName": {
          "type": "string",
          "description": "The step name requesting an operation, such as GBK.\nI.e. the ParDo causing a read/write from shuffle to occur, or a\nread from side inputs."
        },
        "inputIndex": {
          "description": "Index of an input collection that's being read from/written to as a side\ninput.\nThe index identifies a step's side inputs starting by 1 (e.g. the first\nside input has input_index 1, the third has input_index 3).\nSide inputs are identified by a pair of (original_step_name, input_index).\nThis field helps uniquely identify them.",
          "format": "int32",
          "type": "integer"
        },
        "componentStepName": {
          "description": "Name of the optimized step being executed by the workers.",
          "type": "string"
        },
        "portion": {
          "type": "string",
          "enumDescriptions": [
            "Counter portion has not been set.",
            "Counter reports a key.",
            "Counter reports a value."
          ],
          "enum": [
            "ALL",
            "KEY",
            "VALUE"
          ],
          "description": "Portion of this counter, either key or value."
        },
        "originalStepName": {
          "description": "System generated name of the original step in the user's graph, before\noptimization.",
          "type": "string"
        }
      },
      "id": "CounterStructuredName"
    },
    "ApproximateProgress": {
      "description": "Obsolete in favor of ApproximateReportedProgress and ApproximateSplitRequest.",
      "type": "object",
      "properties": {
        "percentComplete": {
          "description": "Obsolete.",
          "format": "float",
          "type": "number"
        },
        "remainingTime": {
          "type": "string",
          "description": "Obsolete.",
          "format": "google-duration"
        },
        "position": {
          "$ref": "Position",
          "description": "Obsolete."
        }
      },
      "id": "ApproximateProgress"
    },
    "WorkerMessageResponse": {
      "type": "object",
      "properties": {
        "workerMetricsResponse": {
          "$ref": "ResourceUtilizationReportResponse",
          "description": "Service's response to reporting worker metrics (currently empty)."
        },
        "workerShutdownNoticeResponse": {
          "description": "Service's response to shutdown notice (currently empty).",
          "$ref": "WorkerShutdownNoticeResponse"
        },
        "workerHealthReportResponse": {
          "description": "The service's response to a worker's health report.",
          "$ref": "WorkerHealthReportResponse"
        }
      },
      "id": "WorkerMessageResponse",
      "description": "A worker_message response allows the server to pass information to the\nsender."
    },
    "TemplateMetadata": {
      "description": "Metadata describing a template.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. The name of the template.",
          "type": "string"
        },
        "parameters": {
          "description": "The parameters for the template.",
          "type": "array",
          "items": {
            "$ref": "ParameterMetadata"
          }
        },
        "description": {
          "type": "string",
          "description": "Optional. A description of the template."
        }
      },
      "id": "TemplateMetadata"
    },
    "WorkerMessage": {
      "description": "WorkerMessage provides information to the backend about a worker.",
      "type": "object",
      "properties": {
        "time": {
          "description": "The timestamp of the worker_message.",
          "format": "google-datetime",
          "type": "string"
        },
        "workerLifecycleEvent": {
          "description": "Record of worker lifecycle events.",
          "$ref": "WorkerLifecycleEvent"
        },
        "workerShutdownNotice": {
          "$ref": "WorkerShutdownNotice",
          "description": "Shutdown notice by workers."
        },
        "workerHealthReport": {
          "$ref": "WorkerHealthReport",
          "description": "The health of a worker."
        },
        "workerMessageCode": {
          "description": "A worker message code.",
          "$ref": "WorkerMessageCode"
        },
        "workerMetrics": {
          "$ref": "ResourceUtilizationReport",
          "description": "Resource metrics reported by workers."
        },
        "labels": {
          "description": "Labels are used to group WorkerMessages.\nFor example, a worker_message about a particular container\nmight have the labels:\n{ \"JOB_ID\": \"2015-04-22\",\n  \"WORKER_ID\": \"wordcount-vm-2015…\"\n  \"CONTAINER_TYPE\": \"worker\",\n  \"CONTAINER_ID\": \"ac1234def\"}\nLabel tags typically correspond to Label enum values. However, for ease\nof development other strings can be used as tags. LABEL_UNSPECIFIED should\nnot be used here.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "id": "WorkerMessage"
    },
    "WorkerShutdownNoticeResponse": {
      "description": "Service-side response to WorkerMessage issuing shutdown notice.",
      "type": "object",
      "properties": {},
      "id": "WorkerShutdownNoticeResponse"
    },
    "JobMetrics": {
      "id": "JobMetrics",
      "description": "JobMetrics contains a collection of metrics describing the detailed progress\nof a Dataflow job. Metrics correspond to user-defined and system-defined\nmetrics in the job.\n\nThis resource captures only the most recent values of each metric;\ntime-series data can be queried for them (under the same metric names)\nfrom Cloud Monitoring.",
      "type": "object",
      "properties": {
        "metricTime": {
          "type": "string",
          "description": "Timestamp as of which metric values are current.",
          "format": "google-datetime"
        },
        "metrics": {
          "description": "All metrics for this job.",
          "type": "array",
          "items": {
            "$ref": "MetricUpdate"
          }
        }
      }
    },
    "FloatingPointList": {
      "description": "A metric value representing a list of floating point numbers.",
      "type": "object",
      "properties": {
        "elements": {
          "description": "Elements of the list.",
          "type": "array",
          "items": {
            "format": "double",
            "type": "number"
          }
        }
      },
      "id": "FloatingPointList"
    },
    "CounterUpdate": {
      "description": "An update to a Counter sent from a worker.",
      "type": "object",
      "properties": {
        "integerGauge": {
          "$ref": "IntegerGauge",
          "description": "Gauge data"
        },
        "floatingPointList": {
          "$ref": "FloatingPointList",
          "description": "List of floating point numbers, for Set."
        },
        "integer": {
          "$ref": "SplitInt64",
          "description": "Integer value for Sum, Max, Min."
        },
        "structuredNameAndMetadata": {
          "$ref": "CounterStructuredNameAndMetadata",
          "description": "Counter structured name and metadata."
        },
        "integerList": {
          "description": "List of integers, for Set.",
          "$ref": "IntegerList"
        },
        "integerMean": {
          "description": "Integer mean aggregation value for Mean.",
          "$ref": "IntegerMean"
        },
        "floatingPoint": {
          "type": "number",
          "description": "Floating point value for Sum, Max, Min.",
          "format": "double"
        },
        "cumulative": {
          "description": "True if this counter is reported as the total cumulative aggregate\nvalue accumulated since the worker started working on this WorkItem.\nBy default this is false, indicating that this counter is reported\nas a delta.",
          "type": "boolean"
        },
        "internal": {
          "description": "Value for internally-defined counters used by the Dataflow service.",
          "type": "any"
        },
        "floatingPointMean": {
          "$ref": "FloatingPointMean",
          "description": "Floating point mean aggregation value for Mean."
        },
        "boolean": {
          "description": "Boolean value for And, Or.",
          "type": "boolean"
        },
        "nameAndKind": {
          "description": "Counter name and aggregation type.",
          "$ref": "NameAndKind"
        },
        "stringList": {
          "$ref": "StringList",
          "description": "List of strings, for Set."
        },
        "distribution": {
          "description": "Distribution data",
          "$ref": "DistributionUpdate"
        },
        "shortId": {
          "description": "The service-generated short identifier for this counter.\nThe short_id -\u003e (name, metadata) mapping is constant for the lifetime of\na job.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "CounterUpdate"
    },
    "SourceMetadata": {
      "description": "Metadata about a Source useful for automatically optimizing\nand tuning the pipeline, etc.",
      "type": "object",
      "properties": {
        "producesSortedKeys": {
          "description": "Whether this source is known to produce key/value pairs with\nthe (encoded) keys in lexicographically sorted order.",
          "type": "boolean"
        },
        "infinite": {
          "description": "Specifies that the size of this source is known to be infinite\n(this is a streaming source).",
          "type": "boolean"
        },
        "estimatedSizeBytes": {
          "type": "string",
          "description": "An estimate of the total size (in bytes) of the data that would be\nread from this source.  This estimate is in terms of external storage\nsize, before any decompression or other processing done by the reader.",
          "format": "int64"
        }
      },
      "id": "SourceMetadata"
    },
    "DistributionUpdate": {
      "description": "A metric value representing a distribution.",
      "type": "object",
      "properties": {
        "min": {
          "description": "The minimum value present in the distribution.",
          "$ref": "SplitInt64"
        },
        "sumOfSquares": {
          "description": "Use a double since the sum of squares is likely to overflow int64.",
          "format": "double",
          "type": "number"
        },
        "sum": {
          "$ref": "SplitInt64",
          "description": "Use an int64 since we'd prefer the added precision. If overflow is a common\nproblem we can detect it and use an additional int64 or a double."
        },
        "histogram": {
          "$ref": "Histogram",
          "description": "(Optional) Histogram of value counts for the distribution."
        },
        "max": {
          "$ref": "SplitInt64",
          "description": "The maximum value present in the distribution."
        },
        "count": {
          "description": "The count of the number of elements present in the distribution.",
          "$ref": "SplitInt64"
        }
      },
      "id": "DistributionUpdate"
    },
    "WorkerHealthReportResponse": {
      "description": "WorkerHealthReportResponse contains information returned to the worker\nin response to a health ping.",
      "type": "object",
      "properties": {
        "reportInterval": {
          "description": "A positive value indicates the worker should change its reporting interval\nto the specified value.\n\nThe default value of zero means no change in report rate is requested by\nthe server.",
          "format": "google-duration",
          "type": "string"
        }
      },
      "id": "WorkerHealthReportResponse"
    },
    "SourceFork": {
      "id": "SourceFork",
      "description": "DEPRECATED in favor of DynamicSourceSplit.",
      "type": "object",
      "properties": {
        "residualSource": {
          "$ref": "DerivedSource",
          "description": "DEPRECATED"
        },
        "primary": {
          "$ref": "SourceSplitShard",
          "description": "DEPRECATED"
        },
        "primarySource": {
          "description": "DEPRECATED",
          "$ref": "DerivedSource"
        },
        "residual": {
          "$ref": "SourceSplitShard",
          "description": "DEPRECATED"
        }
      }
    },
    "WorkItemStatus": {
      "description": "Conveys a worker's progress through the work described by a WorkItem.",
      "type": "object",
      "properties": {
        "progress": {
          "$ref": "ApproximateProgress",
          "description": "DEPRECATED in favor of reported_progress."
        },
        "requestedLeaseDuration": {
          "description": "Amount of time the worker requests for its lease.",
          "format": "google-duration",
          "type": "string"
        },
        "reportIndex": {
          "description": "The report index.  When a WorkItem is leased, the lease will\ncontain an initial report index.  When a WorkItem's status is\nreported to the system, the report should be sent with\nthat report index, and the response will contain the index the\nworker should use for the next report.  Reports received with\nunexpected index values will be rejected by the service.\n\nIn order to preserve idempotency, the worker should not alter the\ncontents of a report, even if the worker must submit the same\nreport multiple times before getting back a response.  The worker\nshould not submit a subsequent report until the response for the\nprevious report had been received from the service.",
          "format": "int64",
          "type": "string"
        },
        "stopPosition": {
          "$ref": "Position",
          "description": "A worker may split an active map task in two parts, \"primary\" and\n\"residual\", continuing to process the primary part and returning the\nresidual part into the pool of available work.\nThis event is called a \"dynamic split\" and is critical to the dynamic\nwork rebalancing feature. The two obtained sub-tasks are called\n\"parts\" of the split.\nThe parts, if concatenated, must represent the same input as would\nbe read by the current task if the split did not happen.\nThe exact way in which the original task is decomposed into the two\nparts is specified either as a position demarcating them\n(stop_position), or explicitly as two DerivedSources, if this\ntask consumes a user-defined source type (dynamic_source_split).\n\nThe \"current\" task is adjusted as a result of the split: after a task\nwith range [A, B) sends a stop_position update at C, its range is\nconsidered to be [A, C), e.g.:\n* Progress should be interpreted relative to the new range, e.g.\n  \"75% completed\" means \"75% of [A, C) completed\"\n* The worker should interpret proposed_stop_position relative to the\n  new range, e.g. \"split at 68%\" should be interpreted as\n  \"split at 68% of [A, C)\".\n* If the worker chooses to split again using stop_position, only\n  stop_positions in [A, C) will be accepted.\n* Etc.\ndynamic_source_split has similar semantics: e.g., if a task with\nsource S splits using dynamic_source_split into {P, R}\n(where P and R must be together equivalent to S), then subsequent\nprogress and proposed_stop_position should be interpreted relative\nto P, and in a potential subsequent dynamic_source_split into {P', R'},\nP' and R' must be together equivalent to P, etc."
        },
        "completed": {
          "description": "True if the WorkItem was completed (successfully or unsuccessfully).",
          "type": "boolean"
        },
        "reportedProgress": {
          "description": "The worker's progress through this WorkItem.",
          "$ref": "ApproximateReportedProgress"
        },
        "sourceFork": {
          "$ref": "SourceFork",
          "description": "DEPRECATED in favor of dynamic_source_split."
        },
        "totalThrottlerWaitTimeSeconds": {
          "description": "Total time the worker spent being throttled by external systems.",
          "format": "double",
          "type": "number"
        },
        "counterUpdates": {
          "description": "Worker output counters for this WorkItem.",
          "type": "array",
          "items": {
            "$ref": "CounterUpdate"
          }
        },
        "workItemId": {
          "type": "string",
          "description": "Identifies the WorkItem."
        },
        "metricUpdates": {
          "description": "DEPRECATED in favor of counter_updates.",
          "type": "array",
          "items": {
            "$ref": "MetricUpdate"
          }
        },
        "errors": {
          "description": "Specifies errors which occurred during processing.  If errors are\nprovided, and completed = true, then the WorkItem is considered\nto have failed.",
          "type": "array",
          "items": {
            "$ref": "Status"
          }
        },
        "dynamicSourceSplit": {
          "$ref": "DynamicSourceSplit",
          "description": "See documentation of stop_position."
        },
        "sourceOperationResponse": {
          "description": "If the work item represented a SourceOperationRequest, and the work\nis completed, contains the result of the operation.",
          "$ref": "SourceOperationResponse"
        }
      },
      "id": "WorkItemStatus"
    },
    "ComponentSource": {
      "id": "ComponentSource",
      "description": "Description of an interstitial value between transforms in an execution\nstage.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Dataflow service generated name for this source.",
          "type": "string"
        },
        "userName": {
          "description": "Human-readable name for this transform; may be user or system generated.",
          "type": "string"
        },
        "originalTransformOrCollection": {
          "description": "User name for the original user transform or collection with which this\nsource is most closely associated.",
          "type": "string"
        }
      }
    },
    "Histogram": {
      "description": "Histogram of value counts for a distribution.\n\nBuckets have an inclusive lower bound and exclusive upper bound and use\n\"1,2,5 bucketing\": The first bucket range is from [0,1) and all subsequent\nbucket boundaries are powers of ten multiplied by 1, 2, or 5. Thus, bucket\nboundaries are 0, 1, 2, 5, 10, 20, 50, 100, 200, 500, 1000, ...\nNegative values are not supported.",
      "type": "object",
      "properties": {
        "bucketCounts": {
          "description": "Counts of values in each bucket. For efficiency, prefix and trailing\nbuckets with count = 0 are elided. Buckets can store the full range of\nvalues of an unsigned long, with ULLONG_MAX falling into the 59th bucket\nwith range [1e19, 2e19).",
          "type": "array",
          "items": {
            "format": "int64",
            "type": "string"
          }
        },
        "firstBucketOffset": {
          "description": "Starting index of first stored bucket. The non-inclusive upper-bound of\nthe ith bucket is given by:\n  pow(10,(i-first_bucket_offset)/3) * (1,2,5)[(i-first_bucket_offset)%3]",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "Histogram"
    },
    "WorkItemServiceState": {
      "properties": {
        "leaseExpireTime": {
          "description": "Time at which the current lease will expire.",
          "format": "google-datetime",
          "type": "string"
        },
        "metricShortId": {
          "description": "The short ids that workers should use in subsequent metric updates.\nWorkers should strive to use short ids whenever possible, but it is ok\nto request the short_id again if a worker lost track of it\n(e.g. if the worker is recovering from a crash).\nNOTE: it is possible that the response may have short ids for a subset\nof the metrics.",
          "type": "array",
          "items": {
            "$ref": "MetricShortId"
          }
        },
        "nextReportIndex": {
          "description": "The index value to use for the next report sent by the worker.\nNote: If the report call fails for whatever reason, the worker should\nreuse this index for subsequent report attempts.",
          "format": "int64",
          "type": "string"
        },
        "suggestedStopPoint": {
          "description": "DEPRECATED in favor of split_request.",
          "$ref": "ApproximateProgress"
        },
        "hotKeyDetection": {
          "$ref": "HotKeyDetection",
          "description": "A hot key is a symptom of poor data distribution in which there are enough\nelements mapped to a single key to impact pipeline performance. When\npresent, this field includes metadata associated with any hot key."
        },
        "splitRequest": {
          "$ref": "ApproximateSplitRequest",
          "description": "The progress point in the WorkItem where the Dataflow service\nsuggests that the worker truncate the task."
        },
        "reportStatusInterval": {
          "type": "string",
          "description": "New recommended reporting interval.",
          "format": "google-duration"
        },
        "suggestedStopPosition": {
          "description": "Obsolete, always empty.",
          "$ref": "Position"
        },
        "harnessData": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Other data returned by the service, specific to the particular\nworker harness."
        }
      },
      "id": "WorkItemServiceState",
      "description": "The Dataflow service's idea of the current state of a WorkItem\nbeing processed by a worker.",
      "type": "object"
    },
    "MetricStructuredName": {
      "type": "object",
      "properties": {
        "context": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Zero or more labeled fields which identify the part of the job this\nmetric is associated with, such as the name of a step or collection.\n\nFor example, built-in counters associated with steps will have\ncontext['step'] = \u003cstep-name\u003e. Counters associated with PCollections\nin the SDK will have context['pcollection'] = \u003cpcollection-name\u003e.",
          "type": "object"
        },
        "origin": {
          "description": "Origin (namespace) of metric name. May be blank for user-define metrics;\nwill be \"dataflow\" for metrics defined by the Dataflow service or SDK.",
          "type": "string"
        },
        "name": {
          "description": "Worker-defined metric name.",
          "type": "string"
        }
      },
      "id": "MetricStructuredName",
      "description": "Identifies a metric, by describing the source which generated the\nmetric."
    },
    "SeqMapTaskOutputInfo": {
      "id": "SeqMapTaskOutputInfo",
      "description": "Information about an output of a SeqMapTask.",
      "type": "object",
      "properties": {
        "sink": {
          "description": "The sink to write the output value to.",
          "$ref": "Sink"
        },
        "tag": {
          "description": "The id of the TupleTag the user code will tag the output value by.",
          "type": "string"
        }
      }
    },
    "JobExecutionStageInfo": {
      "description": "Contains information about how a particular\ngoogle.dataflow.v1beta3.Step will be executed.",
      "type": "object",
      "properties": {
        "stepName": {
          "description": "The steps associated with the execution stage.\nNote that stages may have several steps, and that a given step\nmight be run by more than one stage.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "JobExecutionStageInfo"
    },
    "KeyRangeLocation": {
      "id": "KeyRangeLocation",
      "description": "Location information for a specific key-range of a sharded computation.\nCurrently we only support UTF-8 character splits to simplify encoding into\nJSON.",
      "type": "object",
      "properties": {
        "deprecatedPersistentDirectory": {
          "description": "DEPRECATED. The location of the persistent state for this range, as a\npersistent directory in the worker local filesystem.",
          "type": "string"
        },
        "deliveryEndpoint": {
          "description": "The physical location of this range assignment to be used for\nstreaming computation cross-worker message delivery.",
          "type": "string"
        },
        "start": {
          "description": "The start (inclusive) of the key range.",
          "type": "string"
        },
        "dataDisk": {
          "type": "string",
          "description": "The name of the data disk where data for this range is stored.\nThis name is local to the Google Cloud Platform project and uniquely\nidentifies the disk within that project, for example\n\"myproject-1014-104817-4c2-harness-0-disk-1\"."
        },
        "end": {
          "type": "string",
          "description": "The end (exclusive) of the key range."
        }
      }
    },
    "SourceGetMetadataRequest": {
      "description": "A request to compute the SourceMetadata of a Source.",
      "type": "object",
      "properties": {
        "source": {
          "$ref": "Source",
          "description": "Specification of the source whose metadata should be computed."
        }
      },
      "id": "SourceGetMetadataRequest"
    },
    "NameAndKind": {
      "description": "Basic metadata about a counter.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the counter.",
          "type": "string"
        },
        "kind": {
          "enum": [
            "INVALID",
            "SUM",
            "MAX",
            "MIN",
            "MEAN",
            "OR",
            "AND",
            "SET",
            "DISTRIBUTION",
            "LATEST_VALUE"
          ],
          "description": "Counter aggregation kind.",
          "type": "string",
          "enumDescriptions": [
            "Counter aggregation kind was not set.",
            "Aggregated value is the sum of all contributed values.",
            "Aggregated value is the max of all contributed values.",
            "Aggregated value is the min of all contributed values.",
            "Aggregated value is the mean of all contributed values.",
            "Aggregated value represents the logical 'or' of all contributed values.",
            "Aggregated value represents the logical 'and' of all contributed values.",
            "Aggregated value is a set of unique contributed values.",
            "Aggregated value captures statistics about a distribution.",
            "Aggregated value tracks the latest value of a variable."
          ]
        }
      },
      "id": "NameAndKind"
    },
    "SeqMapTask": {
      "type": "object",
      "properties": {
        "userFn": {
          "description": "The user function to invoke.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "name": {
          "description": "The user-provided name of the SeqDo operation.",
          "type": "string"
        },
        "outputInfos": {
          "type": "array",
          "items": {
            "$ref": "SeqMapTaskOutputInfo"
          },
          "description": "Information about each of the outputs."
        },
        "inputs": {
          "description": "Information about each of the inputs.",
          "type": "array",
          "items": {
            "$ref": "SideInputInfo"
          }
        },
        "stageName": {
          "description": "System-defined name of the stage containing the SeqDo operation.\nUnique across the workflow.",
          "type": "string"
        },
        "systemName": {
          "description": "System-defined name of the SeqDo operation.\nUnique across the workflow.",
          "type": "string"
        }
      },
      "id": "SeqMapTask",
      "description": "Describes a particular function to invoke."
    },
    "SDKInfo": {
      "description": "SDK Information.",
      "type": "object",
      "properties": {
        "language": {
          "description": "Required. The SDK Language.",
          "type": "string",
          "enumDescriptions": [
            "UNKNOWN Language.",
            "Java.",
            "Python."
          ],
          "enum": [
            "UNKNOWN",
            "JAVA",
            "PYTHON"
          ]
        },
        "version": {
          "description": "Optional. The SDK version.",
          "type": "string"
        }
      },
      "id": "SDKInfo"
    },
    "WorkerMessageCode": {
      "description": "A message code is used to report status and error messages to the service.\nThe message codes are intended to be machine readable. The service will\ntake care of translating these into user understandable messages if\nnecessary.\n\nExample use cases:\n  1. Worker processes reporting successful startup.\n  2. Worker processes reporting specific errors (e.g. package staging\n     failure).",
      "type": "object",
      "properties": {
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Parameters contains specific information about the code.\n\nThis is a struct to allow parameters of different types.\n\nExamples:\n 1. For a \"HARNESS_STARTED\" message parameters might provide the name\n    of the worker and additional data like timing information.\n 2. For a \"GCS_DOWNLOAD_ERROR\" parameters might contain fields listing\n    the GCS objects being downloaded and fields containing errors.\n\nIn general complex data structures should be avoided. If a worker\nneeds to send a specific and complicated data structure then please\nconsider defining a new proto and adding it to the data oneof in\nWorkerMessageResponse.\n\nConventions:\n Parameters should only be used for information that isn't typically passed\n as a label.\n hostname and other worker identifiers should almost always be passed\n as labels since they will be included on most messages."
        },
        "code": {
          "description": "The code is a string intended for consumption by a machine that identifies\nthe type of message being sent.\nExamples:\n 1. \"HARNESS_STARTED\" might be used to indicate the worker harness has\n     started.\n 2. \"GCS_DOWNLOAD_ERROR\" might be used to indicate an error downloading\n    a GCS file as part of the boot process of one of the worker containers.\n\nThis is a string and not an enum to make it easy to add new codes without\nwaiting for an API change.",
          "type": "string"
        }
      },
      "id": "WorkerMessageCode"
    },
    "DatastoreIODetails": {
      "id": "DatastoreIODetails",
      "description": "Metadata for a Datastore connector used by the job.",
      "type": "object",
      "properties": {
        "projectId": {
          "description": "ProjectId accessed in the connection.",
          "type": "string"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace used in the connection."
        }
      }
    },
    "CustomSourceLocation": {
      "description": "Identifies the location of a custom souce.",
      "type": "object",
      "properties": {
        "stateful": {
          "description": "Whether this source is stateful.",
          "type": "boolean"
        }
      },
      "id": "CustomSourceLocation"
    },
    "MapTask": {
      "description": "MapTask consists of an ordered set of instructions, each of which\ndescribes one particular low-level operation for the worker to\nperform in order to accomplish the MapTask's WorkItem.\n\nEach instruction must appear in the list before any instructions which\ndepends on its output.",
      "type": "object",
      "properties": {
        "systemName": {
          "description": "System-defined name of this MapTask.\nUnique across the workflow.",
          "type": "string"
        },
        "stageName": {
          "description": "System-defined name of the stage containing this MapTask.\nUnique across the workflow.",
          "type": "string"
        },
        "instructions": {
          "description": "The instructions in the MapTask.",
          "type": "array",
          "items": {
            "$ref": "ParallelInstruction"
          }
        },
        "counterPrefix": {
          "description": "Counter prefix that can be used to prefix counters. Not currently used in\nDataflow.",
          "type": "string"
        }
      },
      "id": "MapTask"
    },
    "RuntimeMetadata": {
      "description": "RuntimeMetadata describing a runtime environment.",
      "type": "object",
      "properties": {
        "parameters": {
          "description": "The parameters for the template.",
          "type": "array",
          "items": {
            "$ref": "ParameterMetadata"
          }
        },
        "sdkInfo": {
          "$ref": "SDKInfo",
          "description": "SDK Info for the template."
        }
      },
      "id": "RuntimeMetadata"
    },
    "StreamingApplianceSnapshotConfig": {
      "id": "StreamingApplianceSnapshotConfig",
      "description": "Streaming appliance snapshot configuration.",
      "type": "object",
      "properties": {
        "importStateEndpoint": {
          "description": "Indicates which endpoint is used to import appliance state.",
          "type": "string"
        },
        "snapshotId": {
          "description": "If set, indicates the snapshot id for the snapshot being performed.",
          "type": "string"
        }
      }
    },
    "FloatingPointMean": {
      "description": "A representation of a floating point mean metric contribution.",
      "type": "object",
      "properties": {
        "count": {
          "$ref": "SplitInt64",
          "description": "The number of values being aggregated."
        },
        "sum": {
          "description": "The sum of all values being aggregated.",
          "format": "double",
          "type": "number"
        }
      },
      "id": "FloatingPointMean"
    },
    "ReportWorkItemStatusResponse": {
      "type": "object",
      "properties": {
        "unifiedWorkerResponse": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Untranslated bag-of-bytes WorkProgressUpdateResponse for UnifiedWorker.",
          "type": "object"
        },
        "workItemServiceStates": {
          "description": "A set of messages indicating the service-side state for each\nWorkItem whose status was reported, in the same order as the\nWorkItemStatus messages in the ReportWorkItemStatusRequest which\nresulting in this response.",
          "type": "array",
          "items": {
            "$ref": "WorkItemServiceState"
          }
        }
      },
      "id": "ReportWorkItemStatusResponse",
      "description": "Response from a request to report the status of WorkItems."
    },
    "InstructionOutput": {
      "description": "An output of an instruction.",
      "type": "object",
      "properties": {
        "systemName": {
          "description": "System-defined name of this output.\nUnique across the workflow.",
          "type": "string"
        },
        "onlyCountKeyBytes": {
          "description": "For system-generated byte and mean byte metrics, certain instructions\nshould only report the key size.",
          "type": "boolean"
        },
        "onlyCountValueBytes": {
          "description": "For system-generated byte and mean byte metrics, certain instructions\nshould only report the value size.",
          "type": "boolean"
        },
        "codec": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "The codec to use to encode data being written via this output.",
          "type": "object"
        },
        "name": {
          "type": "string",
          "description": "The user-provided name of this output."
        },
        "originalName": {
          "description": "System-defined name for this output in the original workflow graph.\nOutputs that do not contribute to an original instruction do not set this.",
          "type": "string"
        }
      },
      "id": "InstructionOutput"
    },
    "SdkVersion": {
      "type": "object",
      "properties": {
        "versionDisplayName": {
          "description": "A readable string describing the version of the SDK.",
          "type": "string"
        },
        "sdkSupportStatus": {
          "description": "The support status for this SDK version.",
          "type": "string",
          "enumDescriptions": [
            "Cloud Dataflow is unaware of this version.",
            "This is a known version of an SDK, and is supported.",
            "A newer version of the SDK family exists, and an update is recommended.",
            "This version of the SDK is deprecated and will eventually be no\nlonger supported.",
            "Support for this SDK version has ended and it should no longer be used."
          ],
          "enum": [
            "UNKNOWN",
            "SUPPORTED",
            "STALE",
            "DEPRECATED",
            "UNSUPPORTED"
          ]
        },
        "version": {
          "description": "The version of the SDK used to run the job.",
          "type": "string"
        }
      },
      "id": "SdkVersion",
      "description": "The version of the SDK used to run the job."
    },
    "IntegerGauge": {
      "description": "A metric value representing temporal values of a variable.",
      "type": "object",
      "properties": {
        "value": {
          "$ref": "SplitInt64",
          "description": "The value of the variable represented by this gauge."
        },
        "timestamp": {
          "description": "The time at which this value was measured. Measured as msecs from epoch.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "IntegerGauge"
    },
    "CreateJobFromTemplateRequest": {
      "description": "A request to create a Cloud Dataflow job from a template.",
      "type": "object",
      "properties": {
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The runtime parameters to pass to the job."
        },
        "jobName": {
          "description": "Required. The job name to use for the created job.",
          "type": "string"
        },
        "gcsPath": {
          "description": "Required. A Cloud Storage path to the template from which to\ncreate the job.\nMust be a valid Cloud Storage URL, beginning with `gs://`.",
          "type": "string"
        },
        "environment": {
          "$ref": "RuntimeEnvironment",
          "description": "The runtime environment for the job."
        },
        "location": {
          "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to\nwhich to direct the request.",
          "type": "string"
        }
      },
      "id": "CreateJobFromTemplateRequest"
    },
    "BigQueryIODetails": {
      "type": "object",
      "properties": {
        "projectId": {
          "description": "Project accessed in the connection.",
          "type": "string"
        },
        "query": {
          "description": "Query used to access data in the connection.",
          "type": "string"
        },
        "table": {
          "description": "Table accessed in the connection.",
          "type": "string"
        },
        "dataset": {
          "description": "Dataset accessed in the connection.",
          "type": "string"
        }
      },
      "id": "BigQueryIODetails",
      "description": "Metadata for a BigQuery connector used by the job."
    },
    "IntegerMean": {
      "id": "IntegerMean",
      "description": "A representation of an integer mean metric contribution.",
      "type": "object",
      "properties": {
        "sum": {
          "$ref": "SplitInt64",
          "description": "The sum of all values being aggregated."
        },
        "count": {
          "$ref": "SplitInt64",
          "description": "The number of values being aggregated."
        }
      }
    },
    "SnapshotJobRequest": {
      "properties": {
        "ttl": {
          "description": "TTL for the snapshot.",
          "format": "google-duration",
          "type": "string"
        },
        "location": {
          "description": "The location that contains this job.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "User specified description of the snapshot. Maybe empty."
        },
        "snapshotSources": {
          "description": "If true, perform snapshots for sources which support this.",
          "type": "boolean"
        }
      },
      "id": "SnapshotJobRequest",
      "description": "Request to create a snapshot of a job.",
      "type": "object"
    },
    "ListJobsResponse": {
      "description": "Response to a request to list Cloud Dataflow jobs in a project. This might\nbe a partial response, depending on the page size in the ListJobsRequest.\nHowever, if the project does not have any jobs, an instance of\nListJobsResponse is not returned and the requests's response\nbody is empty {}.",
      "type": "object",
      "properties": {
        "jobs": {
          "description": "A subset of the requested job information.",
          "type": "array",
          "items": {
            "$ref": "Job"
          }
        },
        "nextPageToken": {
          "description": "Set if there may be more results than fit in this response.",
          "type": "string"
        },
        "failedLocation": {
          "description": "Zero or more messages describing the [regional endpoints]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\nfailed to respond.",
          "type": "array",
          "items": {
            "$ref": "FailedLocation"
          }
        }
      },
      "id": "ListJobsResponse"
    },
    "LaunchFlexTemplateParameter": {
      "description": "Launch FlexTemplate Parameter.",
      "type": "object",
      "properties": {
        "containerSpec": {
          "$ref": "ContainerSpec",
          "description": "Spec about the container image to launch."
        },
        "containerSpecGcsPath": {
          "description": "Gcs path to a file with json serialized ContainerSpec as content.",
          "type": "string"
        },
        "parameters": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The parameters for FlexTemplate.\nEx. {\"num_workers\":\"5\"}",
          "type": "object"
        },
        "jobName": {
          "description": "Required. The job name to use for the created job.",
          "type": "string"
        }
      },
      "id": "LaunchFlexTemplateParameter"
    },
    "ComputationTopology": {
      "description": "All configuration data for a particular Computation.",
      "type": "object",
      "properties": {
        "stateFamilies": {
          "description": "The state family values.",
          "type": "array",
          "items": {
            "$ref": "StateFamilyConfig"
          }
        },
        "outputs": {
          "description": "The outputs from the computation.",
          "type": "array",
          "items": {
            "$ref": "StreamLocation"
          }
        },
        "systemStageName": {
          "description": "The system stage name.",
          "type": "string"
        },
        "inputs": {
          "description": "The inputs to the computation.",
          "type": "array",
          "items": {
            "$ref": "StreamLocation"
          }
        },
        "computationId": {
          "type": "string",
          "description": "The ID of the computation."
        },
        "keyRanges": {
          "description": "The key ranges processed by the computation.",
          "type": "array",
          "items": {
            "$ref": "KeyRangeLocation"
          }
        }
      },
      "id": "ComputationTopology"
    },
    "RuntimeEnvironment": {
      "description": "The environment values to set at runtime.",
      "type": "object",
      "properties": {
        "subnetwork": {
          "description": "Subnetwork to which VMs will be assigned, if desired.  Expected to be of\nthe form \"regions/REGION/subnetworks/SUBNETWORK\".",
          "type": "string"
        },
        "ipConfiguration": {
          "enum": [
            "WORKER_IP_UNSPECIFIED",
            "WORKER_IP_PUBLIC",
            "WORKER_IP_PRIVATE"
          ],
          "description": "Configuration for VM IPs.",
          "type": "string",
          "enumDescriptions": [
            "The configuration is unknown, or unspecified.",
            "Workers should have public IP addresses.",
            "Workers should have private IP addresses."
          ]
        },
        "kmsKeyName": {
          "description": "Optional. Name for the Cloud KMS key for the job.\nKey format is:\nprojects/\u003cproject\u003e/locations/\u003clocation\u003e/keyRings/\u003ckeyring\u003e/cryptoKeys/\u003ckey\u003e",
          "type": "string"
        },
        "bypassTempDirValidation": {
          "description": "Whether to bypass the safety checks for the job's temporary directory.\nUse with caution.",
          "type": "boolean"
        },
        "tempLocation": {
          "description": "The Cloud Storage path to use for temporary files.\nMust be a valid Cloud Storage URL, beginning with `gs://`.",
          "type": "string"
        },
        "network": {
          "type": "string",
          "description": "Network to which VMs will be assigned.  If empty or unspecified,\nthe service will use the network \"default\"."
        },
        "workerRegion": {
          "description": "The Compute Engine region\n(https://cloud.google.com/compute/docs/regions-zones/regions-zones) in\nwhich worker processing should occur, e.g. \"us-west1\". Mutually exclusive\nwith worker_zone. If neither worker_region nor worker_zone is specified,\ndefault to the control plane's region.",
          "type": "string"
        },
        "zone": {
          "description": "The Compute Engine [availability\nzone](https://cloud.google.com/compute/docs/regions-zones/regions-zones)\nfor launching worker instances to run your pipeline.\nIn the future, worker_zone will take precedence.",
          "type": "string"
        },
        "numWorkers": {
          "description": "The initial number of Google Compute Engine instnaces for the job.",
          "format": "int32",
          "type": "integer"
        },
        "workerZone": {
          "description": "The Compute Engine zone\n(https://cloud.google.com/compute/docs/regions-zones/regions-zones) in\nwhich worker processing should occur, e.g. \"us-west1-a\". Mutually exclusive\nwith worker_region. If neither worker_region nor worker_zone is specified,\na zone in the control plane's region is chosen based on available capacity.\nIf both `worker_zone` and `zone` are set, `worker_zone` takes precedence.",
          "type": "string"
        },
        "additionalUserLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Additional user labels to be specified for the job.\nKeys and values should follow the restrictions specified in the [labeling\nrestrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions)\npage."
        },
        "additionalExperiments": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Additional experiment flags for the job."
        },
        "maxWorkers": {
          "description": "The maximum number of Google Compute Engine instances to be made\navailable to your pipeline during execution, from 1 to 1000.",
          "format": "int32",
          "type": "integer"
        },
        "serviceAccountEmail": {
          "description": "The email address of the service account to run the job as.",
          "type": "string"
        },
        "machineType": {
          "description": "The machine type to use for the job. Defaults to the value from the\ntemplate if not specified.",
          "type": "string"
        }
      },
      "id": "RuntimeEnvironment"
    },
    "StreamingSideInputLocation": {
      "description": "Identifies the location of a streaming side input.",
      "type": "object",
      "properties": {
        "stateFamily": {
          "description": "Identifies the state family where this side input is stored.",
          "type": "string"
        },
        "tag": {
          "description": "Identifies the particular side input within the streaming Dataflow job.",
          "type": "string"
        }
      },
      "id": "StreamingSideInputLocation"
    },
    "MountedDataDisk": {
      "description": "Describes mounted data disk.",
      "type": "object",
      "properties": {
        "dataDisk": {
          "description": "The name of the data disk.\nThis name is local to the Google Cloud Platform project and uniquely\nidentifies the disk within that project, for example\n\"myproject-1014-104817-4c2-harness-0-disk-1\".",
          "type": "string"
        }
      },
      "id": "MountedDataDisk"
    },
    "LaunchTemplateResponse": {
      "description": "Response to the request to launch a template.",
      "type": "object",
      "properties": {
        "job": {
          "$ref": "Job",
          "description": "The job that was launched, if the request was not a dry run and\nthe job was successfully launched."
        }
      },
      "id": "LaunchTemplateResponse"
    },
    "JobMetadata": {
      "description": "Metadata available primarily for filtering jobs. Will be included in the\nListJob response and Job SUMMARY view.",
      "type": "object",
      "properties": {
        "pubsubDetails": {
          "description": "Identification of a PubSub source used in the Dataflow job.",
          "type": "array",
          "items": {
            "$ref": "PubSubIODetails"
          }
        },
        "bigTableDetails": {
          "description": "Identification of a BigTable source used in the Dataflow job.",
          "type": "array",
          "items": {
            "$ref": "BigTableIODetails"
          }
        },
        "spannerDetails": {
          "description": "Identification of a Spanner source used in the Dataflow job.",
          "type": "array",
          "items": {
            "$ref": "SpannerIODetails"
          }
        },
        "datastoreDetails": {
          "description": "Identification of a Datastore source used in the Dataflow job.",
          "type": "array",
          "items": {
            "$ref": "DatastoreIODetails"
          }
        },
        "sdkVersion": {
          "$ref": "SdkVersion",
          "description": "The SDK version used to run the job."
        },
        "bigqueryDetails": {
          "description": "Identification of a BigQuery source used in the Dataflow job.",
          "type": "array",
          "items": {
            "$ref": "BigQueryIODetails"
          }
        },
        "fileDetails": {
          "description": "Identification of a File source used in the Dataflow job.",
          "type": "array",
          "items": {
            "$ref": "FileIODetails"
          }
        }
      },
      "id": "JobMetadata"
    },
    "DerivedSource": {
      "description": "Specification of one of the bundles produced as a result of splitting\na Source (e.g. when executing a SourceSplitRequest, or when\nsplitting an active task using WorkItemStatus.dynamic_source_split),\nrelative to the source being split.",
      "type": "object",
      "properties": {
        "derivationMode": {
          "enum": [
            "SOURCE_DERIVATION_MODE_UNKNOWN",
            "SOURCE_DERIVATION_MODE_INDEPENDENT",
            "SOURCE_DERIVATION_MODE_CHILD_OF_CURRENT",
            "SOURCE_DERIVATION_MODE_SIBLING_OF_CURRENT"
          ],
          "description": "What source to base the produced source on (if any).",
          "type": "string",
          "enumDescriptions": [
            "The source derivation is unknown, or unspecified.",
            "Produce a completely independent Source with no base.",
            "Produce a Source based on the Source being split.",
            "Produce a Source based on the base of the Source being split."
          ]
        },
        "source": {
          "$ref": "Source",
          "description": "Specification of the source."
        }
      },
      "id": "DerivedSource"
    },
    "DynamicSourceSplit": {
      "description": "When a task splits using WorkItemStatus.dynamic_source_split, this\nmessage describes the two parts of the split relative to the\ndescription of the current task's input.",
      "type": "object",
      "properties": {
        "primary": {
          "$ref": "DerivedSource",
          "description": "Primary part (continued to be processed by worker).\nSpecified relative to the previously-current source.\nBecomes current."
        },
        "residual": {
          "$ref": "DerivedSource",
          "description": "Residual part (returned to the pool of work).\nSpecified relative to the previously-current source."
        }
      },
      "id": "DynamicSourceSplit"
    },
    "Job": {
      "description": "Defines a job to be run by the Cloud Dataflow service.",
      "type": "object",
      "properties": {
        "stepsLocation": {
          "description": "The GCS location where the steps are stored.",
          "type": "string"
        },
        "createTime": {
          "description": "The timestamp when the job was initially created. Immutable and set by the\nCloud Dataflow service.",
          "format": "google-datetime",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "User-defined labels for this job.\n\nThe labels map can contain no more than 64 entries.  Entries of the labels\nmap are UTF8 strings that comply with the following restrictions:\n\n* Keys must conform to regexp:  \\p{Ll}\\p{Lo}{0,62}\n* Values must conform to regexp:  [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63}\n* Both keys and values are additionally constrained to be \u003c= 128 bytes in\nsize.",
          "type": "object"
        },
        "requestedState": {
          "description": "The job's requested state.\n\n`UpdateJob` may be used to switch between the `JOB_STATE_STOPPED` and\n`JOB_STATE_RUNNING` states, by setting requested_state.  `UpdateJob` may\nalso be used to directly set a job's requested state to\n`JOB_STATE_CANCELLED` or `JOB_STATE_DONE`, irrevocably terminating the\njob if it has not already reached a terminal state.",
          "type": "string",
          "enumDescriptions": [
            "The job's run state isn't specified.",
            "`JOB_STATE_STOPPED` indicates that the job has not\nyet started to run.",
            "`JOB_STATE_RUNNING` indicates that the job is currently running.",
            "`JOB_STATE_DONE` indicates that the job has successfully completed.\nThis is a terminal job state.  This state may be set by the Cloud Dataflow\nservice, as a transition from `JOB_STATE_RUNNING`. It may also be set via a\nCloud Dataflow `UpdateJob` call, if the job has not yet reached a terminal\nstate.",
            "`JOB_STATE_FAILED` indicates that the job has failed.  This is a\nterminal job state.  This state may only be set by the Cloud Dataflow\nservice, and only as a transition from `JOB_STATE_RUNNING`.",
            "`JOB_STATE_CANCELLED` indicates that the job has been explicitly\ncancelled. This is a terminal job state. This state may only be\nset via a Cloud Dataflow `UpdateJob` call, and only if the job has not\nyet reached another terminal state.",
            "`JOB_STATE_UPDATED` indicates that the job was successfully updated,\nmeaning that this job was stopped and another job was started, inheriting\nstate from this one. This is a terminal job state. This state may only be\nset by the Cloud Dataflow service, and only as a transition from\n`JOB_STATE_RUNNING`.",
            "`JOB_STATE_DRAINING` indicates that the job is in the process of draining.\nA draining job has stopped pulling from its input sources and is processing\nany data that remains in-flight. This state may be set via a Cloud Dataflow\n`UpdateJob` call, but only as a transition from `JOB_STATE_RUNNING`. Jobs\nthat are draining may only transition to `JOB_STATE_DRAINED`,\n`JOB_STATE_CANCELLED`, or `JOB_STATE_FAILED`.",
            "`JOB_STATE_DRAINED` indicates that the job has been drained.\nA drained job terminated by stopping pulling from its input sources and\nprocessing any data that remained in-flight when draining was requested.\nThis state is a terminal state, may only be set by the Cloud Dataflow\nservice, and only as a transition from `JOB_STATE_DRAINING`.",
            "`JOB_STATE_PENDING` indicates that the job has been created but is not yet\nrunning.  Jobs that are pending may only transition to `JOB_STATE_RUNNING`,\nor `JOB_STATE_FAILED`.",
            "`JOB_STATE_CANCELLING` indicates that the job has been explicitly cancelled\nand is in the process of stopping.  Jobs that are cancelling may only\ntransition to `JOB_STATE_CANCELLED` or `JOB_STATE_FAILED`.",
            "`JOB_STATE_QUEUED` indicates that the job has been created but is being\ndelayed until launch. Jobs that are queued may only transition to\n`JOB_STATE_PENDING` or `JOB_STATE_CANCELLED`."
          ],
          "enum": [
            "JOB_STATE_UNKNOWN",
            "JOB_STATE_STOPPED",
            "JOB_STATE_RUNNING",
            "JOB_STATE_DONE",
            "JOB_STATE_FAILED",
            "JOB_STATE_CANCELLED",
            "JOB_STATE_UPDATED",
            "JOB_STATE_DRAINING",
            "JOB_STATE_DRAINED",
            "JOB_STATE_PENDING",
            "JOB_STATE_CANCELLING",
            "JOB_STATE_QUEUED"
          ]
        },
        "clientRequestId": {
          "description": "The client's unique identifier of the job, re-used across retried attempts.\nIf this field is set, the service will ensure its uniqueness.\nThe request to create a job will fail if the service has knowledge of a\npreviously submitted job with the same client's ID and job name.\nThe caller may use this field to ensure idempotence of job\ncreation across retried attempts to create a job.\nBy default, the field is empty and, in that case, the service ignores it.",
          "type": "string"
        },
        "id": {
          "description": "The unique ID of this job.\n\nThis field is set by the Cloud Dataflow service when the Job is\ncreated, and is immutable for the life of the job.",
          "type": "string"
        },
        "currentStateTime": {
          "description": "The timestamp associated with the current state.",
          "format": "google-datetime",
          "type": "string"
        },
        "transformNameMapping": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The map of transform name prefixes of the job to be replaced to the\ncorresponding name prefixes of the new job.",
          "type": "object"
        },
        "environment": {
          "$ref": "Environment",
          "description": "The environment for the job."
        },
        "stageStates": {
          "description": "This field may be mutated by the Cloud Dataflow service;\ncallers cannot mutate it.",
          "type": "array",
          "items": {
            "$ref": "ExecutionStageState"
          }
        },
        "jobMetadata": {
          "$ref": "JobMetadata",
          "description": "This field is populated by the Dataflow service to support filtering jobs\nby the metadata values provided here. Populated for ListJobs and all GetJob\nviews SUMMARY and higher."
        },
        "createdFromSnapshotId": {
          "description": "If this is specified, the job's initial state is populated from the given\nsnapshot.",
          "type": "string"
        },
        "projectId": {
          "type": "string",
          "description": "The ID of the Cloud Platform project that the job belongs to."
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "The type of the job is unspecified, or unknown.",
            "A batch job with a well-defined end point: data is read, data is\nprocessed, data is written, and the job is done.",
            "A continuously streaming job with no end: data is read,\nprocessed, and written continuously."
          ],
          "enum": [
            "JOB_TYPE_UNKNOWN",
            "JOB_TYPE_BATCH",
            "JOB_TYPE_STREAMING"
          ],
          "description": "The type of Cloud Dataflow job."
        },
        "pipelineDescription": {
          "$ref": "PipelineDescription",
          "description": "Preliminary field: The format of this data may change at any time.\nA description of the user pipeline and stages through which it is executed.\nCreated by Cloud Dataflow service.  Only retrieved with\nJOB_VIEW_DESCRIPTION or JOB_VIEW_ALL."
        },
        "replaceJobId": {
          "description": "If this job is an update of an existing job, this field is the job ID\nof the job it replaced.\n\nWhen sending a `CreateJobRequest`, you can update a job by specifying it\nhere. The job named here is stopped, and its intermediate state is\ntransferred to this job.",
          "type": "string"
        },
        "tempFiles": {
          "description": "A set of files the system should be aware of that are used\nfor temporary storage. These temporary files will be\nremoved on job completion.\nNo duplicates are allowed.\nNo file patterns are supported.\n\nThe supported files are:\n\nGoogle Cloud Storage:\n\n   storage.googleapis.com/{bucket}/{object}\n   bucket.storage.googleapis.com/{object}",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "description": "The user-specified Cloud Dataflow job name.\n\nOnly one Job with a given name may exist in a project at any\ngiven time. If a caller attempts to create a Job with the same\nname as an already-existing Job, the attempt returns the\nexisting Job.\n\nThe name must match the regular expression\n`[a-z]([-a-z0-9]{0,38}[a-z0-9])?`",
          "type": "string"
        },
        "steps": {
          "description": "Exactly one of step or steps_location should be specified.\n\nThe top-level steps that constitute the entire job.",
          "type": "array",
          "items": {
            "$ref": "Step"
          }
        },
        "replacedByJobId": {
          "description": "If another job is an update of this job (and thus, this job is in\n`JOB_STATE_UPDATED`), this field contains the ID of that job.",
          "type": "string"
        },
        "executionInfo": {
          "$ref": "JobExecutionInfo",
          "description": "Deprecated."
        },
        "currentState": {
          "description": "The current state of the job.\n\nJobs are created in the `JOB_STATE_STOPPED` state unless otherwise\nspecified.\n\nA job in the `JOB_STATE_RUNNING` state may asynchronously enter a\nterminal state. After a job has reached a terminal state, no\nfurther state updates may be made.\n\nThis field may be mutated by the Cloud Dataflow service;\ncallers cannot mutate it.",
          "type": "string",
          "enumDescriptions": [
            "The job's run state isn't specified.",
            "`JOB_STATE_STOPPED` indicates that the job has not\nyet started to run.",
            "`JOB_STATE_RUNNING` indicates that the job is currently running.",
            "`JOB_STATE_DONE` indicates that the job has successfully completed.\nThis is a terminal job state.  This state may be set by the Cloud Dataflow\nservice, as a transition from `JOB_STATE_RUNNING`. It may also be set via a\nCloud Dataflow `UpdateJob` call, if the job has not yet reached a terminal\nstate.",
            "`JOB_STATE_FAILED` indicates that the job has failed.  This is a\nterminal job state.  This state may only be set by the Cloud Dataflow\nservice, and only as a transition from `JOB_STATE_RUNNING`.",
            "`JOB_STATE_CANCELLED` indicates that the job has been explicitly\ncancelled. This is a terminal job state. This state may only be\nset via a Cloud Dataflow `UpdateJob` call, and only if the job has not\nyet reached another terminal state.",
            "`JOB_STATE_UPDATED` indicates that the job was successfully updated,\nmeaning that this job was stopped and another job was started, inheriting\nstate from this one. This is a terminal job state. This state may only be\nset by the Cloud Dataflow service, and only as a transition from\n`JOB_STATE_RUNNING`.",
            "`JOB_STATE_DRAINING` indicates that the job is in the process of draining.\nA draining job has stopped pulling from its input sources and is processing\nany data that remains in-flight. This state may be set via a Cloud Dataflow\n`UpdateJob` call, but only as a transition from `JOB_STATE_RUNNING`. Jobs\nthat are draining may only transition to `JOB_STATE_DRAINED`,\n`JOB_STATE_CANCELLED`, or `JOB_STATE_FAILED`.",
            "`JOB_STATE_DRAINED` indicates that the job has been drained.\nA drained job terminated by stopping pulling from its input sources and\nprocessing any data that remained in-flight when draining was requested.\nThis state is a terminal state, may only be set by the Cloud Dataflow\nservice, and only as a transition from `JOB_STATE_DRAINING`.",
            "`JOB_STATE_PENDING` indicates that the job has been created but is not yet\nrunning.  Jobs that are pending may only transition to `JOB_STATE_RUNNING`,\nor `JOB_STATE_FAILED`.",
            "`JOB_STATE_CANCELLING` indicates that the job has been explicitly cancelled\nand is in the process of stopping.  Jobs that are cancelling may only\ntransition to `JOB_STATE_CANCELLED` or `JOB_STATE_FAILED`.",
            "`JOB_STATE_QUEUED` indicates that the job has been created but is being\ndelayed until launch. Jobs that are queued may only transition to\n`JOB_STATE_PENDING` or `JOB_STATE_CANCELLED`."
          ],
          "enum": [
            "JOB_STATE_UNKNOWN",
            "JOB_STATE_STOPPED",
            "JOB_STATE_RUNNING",
            "JOB_STATE_DONE",
            "JOB_STATE_FAILED",
            "JOB_STATE_CANCELLED",
            "JOB_STATE_UPDATED",
            "JOB_STATE_DRAINING",
            "JOB_STATE_DRAINED",
            "JOB_STATE_PENDING",
            "JOB_STATE_CANCELLING",
            "JOB_STATE_QUEUED"
          ]
        },
        "location": {
          "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains this job.",
          "type": "string"
        },
        "startTime": {
          "description": "The timestamp when the job was started (transitioned to JOB_STATE_PENDING).\nFlexible resource scheduling jobs are started with some delay after job\ncreation, so start_time is unset before start and is updated when the\njob is started by the Cloud Dataflow service. For other jobs, start_time\nalways equals to create_time and is immutable and set by the Cloud Dataflow\nservice.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "Job"
    },
    "FileIODetails": {
      "id": "FileIODetails",
      "description": "Metadata for a File connector used by the job.",
      "type": "object",
      "properties": {
        "filePattern": {
          "description": "File Pattern used to access files by the connector.",
          "type": "string"
        }
      }
    },
    "SourceOperationResponse": {
      "description": "The result of a SourceOperationRequest, specified in\nReportWorkItemStatusRequest.source_operation when the work item\nis completed.",
      "type": "object",
      "properties": {
        "getMetadata": {
          "description": "A response to a request to get metadata about a source.",
          "$ref": "SourceGetMetadataResponse"
        },
        "split": {
          "description": "A response to a request to split a source.",
          "$ref": "SourceSplitResponse"
        }
      },
      "id": "SourceOperationResponse"
    },
    "SendDebugCaptureResponse": {
      "type": "object",
      "properties": {},
      "id": "SendDebugCaptureResponse",
      "description": "Response to a send capture request.\nnothing"
    },
    "SideInputInfo": {
      "id": "SideInputInfo",
      "description": "Information about a side input of a DoFn or an input of a SeqDoFn.",
      "type": "object",
      "properties": {
        "sources": {
          "description": "The source(s) to read element(s) from to get the value of this side input.\nIf more than one source, then the elements are taken from the\nsources, in the specified order if order matters.\nAt least one source is required.",
          "type": "array",
          "items": {
            "$ref": "Source"
          }
        },
        "kind": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "How to interpret the source element(s) as a side input value.",
          "type": "object"
        },
        "tag": {
          "description": "The id of the tag the user code will access this side input by;\nthis should correspond to the tag of some MultiOutputInfo.",
          "type": "string"
        }
      }
    },
    "ListSnapshotsResponse": {
      "type": "object",
      "properties": {
        "snapshots": {
          "description": "Returned snapshots.",
          "type": "array",
          "items": {
            "$ref": "Snapshot"
          }
        }
      },
      "id": "ListSnapshotsResponse",
      "description": "List of snapshots."
    },
    "ConcatPosition": {
      "type": "object",
      "properties": {
        "position": {
          "description": "Position within the inner source.",
          "$ref": "Position"
        },
        "index": {
          "description": "Index of the inner source.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "ConcatPosition",
      "description": "A position that encapsulates an inner position and an index for the inner\nposition. A ConcatPosition can be used by a reader of a source that\nencapsulates a set of other sources."
    },
    "CounterStructuredNameAndMetadata": {
      "type": "object",
      "properties": {
        "name": {
          "$ref": "CounterStructuredName",
          "description": "Structured name of the counter."
        },
        "metadata": {
          "$ref": "CounterMetadata",
          "description": "Metadata associated with a counter"
        }
      },
      "id": "CounterStructuredNameAndMetadata",
      "description": "A single message which encapsulates structured name and metadata for a given\ncounter."
    },
    "ValidateResponse": {
      "description": "Response to the validation request.",
      "type": "object",
      "properties": {
        "errorMessage": {
          "type": "string",
          "description": "Will be empty if validation succeeds."
        }
      },
      "id": "ValidateResponse"
    },
    "WriteInstruction": {
      "description": "An instruction that writes records.\nTakes one input, produces no outputs.",
      "type": "object",
      "properties": {
        "sink": {
          "description": "The sink to write to.",
          "$ref": "Sink"
        },
        "input": {
          "$ref": "InstructionInput",
          "description": "The input."
        }
      },
      "id": "WriteInstruction"
    },
    "AutoscalingSettings": {
      "description": "Settings for WorkerPool autoscaling.",
      "type": "object",
      "properties": {
        "algorithm": {
          "description": "The algorithm to use for autoscaling.",
          "type": "string",
          "enumDescriptions": [
            "The algorithm is unknown, or unspecified.",
            "Disable autoscaling.",
            "Increase worker count over time to reduce job execution time."
          ],
          "enum": [
            "AUTOSCALING_ALGORITHM_UNKNOWN",
            "AUTOSCALING_ALGORITHM_NONE",
            "AUTOSCALING_ALGORITHM_BASIC"
          ]
        },
        "maxNumWorkers": {
          "type": "integer",
          "description": "The maximum number of workers to cap scaling at.",
          "format": "int32"
        }
      },
      "id": "AutoscalingSettings"
    },
    "StreamingComputationRanges": {
      "description": "Describes full or partial data disk assignment information of the computation\nranges.",
      "type": "object",
      "properties": {
        "computationId": {
          "description": "The ID of the computation.",
          "type": "string"
        },
        "rangeAssignments": {
          "description": "Data disk assignments for ranges from this computation.",
          "type": "array",
          "items": {
            "$ref": "KeyRangeDataDiskAssignment"
          }
        }
      },
      "id": "StreamingComputationRanges"
    },
    "ExecutionStageSummary": {
      "description": "Description of the composing transforms, names/ids, and input/outputs of a\nstage of execution.  Some composing transforms and sources may have been\ngenerated by the Dataflow service during execution planning.",
      "type": "object",
      "properties": {
        "outputSource": {
          "description": "Output sources for this stage.",
          "type": "array",
          "items": {
            "$ref": "StageSource"
          }
        },
        "name": {
          "type": "string",
          "description": "Dataflow service generated name for this stage."
        },
        "inputSource": {
          "description": "Input sources for this stage.",
          "type": "array",
          "items": {
            "$ref": "StageSource"
          }
        },
        "id": {
          "description": "Dataflow service generated id for this stage.",
          "type": "string"
        },
        "componentTransform": {
          "description": "Transforms that comprise this execution stage.",
          "type": "array",
          "items": {
            "$ref": "ComponentTransform"
          }
        },
        "componentSource": {
          "type": "array",
          "items": {
            "$ref": "ComponentSource"
          },
          "description": "Collections produced and consumed by component transforms of this stage."
        },
        "kind": {
          "description": "Type of tranform this stage is executing.",
          "type": "string",
          "enumDescriptions": [
            "Unrecognized transform type.",
            "ParDo transform.",
            "Group By Key transform.",
            "Flatten transform.",
            "Read transform.",
            "Write transform.",
            "Constructs from a constant value, such as with Create.of.",
            "Creates a Singleton view of a collection.",
            "Opening or closing a shuffle session, often as part of a GroupByKey."
          ],
          "enum": [
            "UNKNOWN_KIND",
            "PAR_DO_KIND",
            "GROUP_BY_KEY_KIND",
            "FLATTEN_KIND",
            "READ_KIND",
            "WRITE_KIND",
            "CONSTANT_KIND",
            "SINGLETON_KIND",
            "SHUFFLE_KIND"
          ]
        }
      },
      "id": "ExecutionStageSummary"
    },
    "SdkHarnessContainerImage": {
      "description": "Defines a SDK harness container for executing Dataflow pipelines.",
      "type": "object",
      "properties": {
        "containerImage": {
          "description": "A docker container image that resides in Google Container Registry.",
          "type": "string"
        },
        "useSingleCorePerContainer": {
          "description": "If true, recommends the Dataflow service to use only one core per SDK\ncontainer instance with this image. If false (or unset) recommends using\nmore than one core per SDK container instance with this image for\nefficiency. Note that Dataflow service may choose to override this property\nif needed.",
          "type": "boolean"
        }
      },
      "id": "SdkHarnessContainerImage"
    },
    "SendWorkerMessagesRequest": {
      "type": "object",
      "properties": {
        "location": {
          "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains the job.",
          "type": "string"
        },
        "workerMessages": {
          "description": "The WorkerMessages to send.",
          "type": "array",
          "items": {
            "$ref": "WorkerMessage"
          }
        }
      },
      "id": "SendWorkerMessagesRequest",
      "description": "A request for sending worker messages to the service."
    },
    "SourceSplitShard": {
      "description": "DEPRECATED in favor of DerivedSource.",
      "type": "object",
      "properties": {
        "derivationMode": {
          "type": "string",
          "enumDescriptions": [
            "The source derivation is unknown, or unspecified.",
            "Produce a completely independent Source with no base.",
            "Produce a Source based on the Source being split.",
            "Produce a Source based on the base of the Source being split."
          ],
          "enum": [
            "SOURCE_DERIVATION_MODE_UNKNOWN",
            "SOURCE_DERIVATION_MODE_INDEPENDENT",
            "SOURCE_DERIVATION_MODE_CHILD_OF_CURRENT",
            "SOURCE_DERIVATION_MODE_SIBLING_OF_CURRENT"
          ],
          "description": "DEPRECATED"
        },
        "source": {
          "$ref": "Source",
          "description": "DEPRECATED"
        }
      },
      "id": "SourceSplitShard"
    },
    "CPUTime": {
      "description": "Modeled after information exposed by /proc/stat.",
      "type": "object",
      "properties": {
        "totalMs": {
          "description": "Total active CPU time across all cores (ie., non-idle) in milliseconds\nsince start-up.",
          "format": "uint64",
          "type": "string"
        },
        "rate": {
          "description": "Average CPU utilization rate (% non-idle cpu / second) since previous\nsample.",
          "format": "double",
          "type": "number"
        },
        "timestamp": {
          "description": "Timestamp of the measurement.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "CPUTime"
    },
    "Environment": {
      "type": "object",
      "properties": {
        "version": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "A structure describing which components and their versions of the service\nare required in order to run the job.",
          "type": "object"
        },
        "serviceAccountEmail": {
          "description": "Identity to run virtual machines as. Defaults to the default account.",
          "type": "string"
        },
        "sdkPipelineOptions": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "The Cloud Dataflow SDK pipeline options specified by the user. These\noptions are passed through the service and are used to recreate the\nSDK pipeline options on the worker in a language agnostic and platform\nindependent way.",
          "type": "object"
        },
        "flexResourceSchedulingGoal": {
          "enum": [
            "FLEXRS_UNSPECIFIED",
            "FLEXRS_SPEED_OPTIMIZED",
            "FLEXRS_COST_OPTIMIZED"
          ],
          "description": "Which Flexible Resource Scheduling mode to run in.",
          "type": "string",
          "enumDescriptions": [
            "Run in the default mode.",
            "Optimize for lower execution time.",
            "Optimize for lower cost."
          ]
        },
        "workerPools": {
          "description": "The worker pools. At least one \"harness\" worker pool must be\nspecified in order for the job to have workers.",
          "type": "array",
          "items": {
            "$ref": "WorkerPool"
          }
        },
        "dataset": {
          "description": "The dataset for the current project where various workflow\nrelated tables are stored.\n\nThe supported resource type is:\n\nGoogle BigQuery:\n  bigquery.googleapis.com/{dataset}",
          "type": "string"
        },
        "internalExperiments": {
          "description": "Experimental settings.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "serviceKmsKeyName": {
          "type": "string",
          "description": "If set, contains the Cloud KMS key identifier used to encrypt data\nat rest, AKA a Customer Managed Encryption Key (CMEK).\n\nFormat:\n  projects/PROJECT_ID/locations/LOCATION/keyRings/KEY_RING/cryptoKeys/KEY"
        },
        "workerRegion": {
          "description": "The Compute Engine region\n(https://cloud.google.com/compute/docs/regions-zones/regions-zones) in\nwhich worker processing should occur, e.g. \"us-west1\". Mutually exclusive\nwith worker_zone. If neither worker_region nor worker_zone is specified,\ndefault to the control plane's region.",
          "type": "string"
        },
        "userAgent": {
          "description": "A description of the process that generated the request.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "workerZone": {
          "description": "The Compute Engine zone\n(https://cloud.google.com/compute/docs/regions-zones/regions-zones) in\nwhich worker processing should occur, e.g. \"us-west1-a\". Mutually exclusive\nwith worker_region. If neither worker_region nor worker_zone is specified,\na zone in the control plane's region is chosen based on available capacity.",
          "type": "string"
        },
        "clusterManagerApiService": {
          "description": "The type of cluster manager API to use.  If unknown or\nunspecified, the service will attempt to choose a reasonable\ndefault.  This should be in the form of the API service name,\ne.g. \"compute.googleapis.com\".",
          "type": "string"
        },
        "tempStoragePrefix": {
          "description": "The prefix of the resources the system should use for temporary\nstorage.  The system will append the suffix \"/temp-{JOBNAME} to\nthis resource prefix, where {JOBNAME} is the value of the\njob_name field.  The resulting bucket and object prefix is used\nas the prefix of the resources used to store temporary data\nneeded during the job execution.  NOTE: This will override the\nvalue in taskrunner_settings.\nThe supported resource type is:\n\nGoogle Cloud Storage:\n\n  storage.googleapis.com/{bucket}/{object}\n  bucket.storage.googleapis.com/{object}",
          "type": "string"
        },
        "experiments": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of experiments to enable."
        }
      },
      "id": "Environment",
      "description": "Describes the environment in which a Dataflow Job runs."
    },
    "StreamingComputationTask": {
      "type": "object",
      "properties": {
        "dataDisks": {
          "description": "Describes the set of data disks this task should apply to.",
          "type": "array",
          "items": {
            "$ref": "MountedDataDisk"
          }
        },
        "taskType": {
          "enumDescriptions": [
            "The streaming computation task is unknown, or unspecified.",
            "Stop processing specified streaming computation range(s).",
            "Start processing specified streaming computation range(s)."
          ],
          "enum": [
            "STREAMING_COMPUTATION_TASK_UNKNOWN",
            "STREAMING_COMPUTATION_TASK_STOP",
            "STREAMING_COMPUTATION_TASK_START"
          ],
          "description": "A type of streaming computation task.",
          "type": "string"
        },
        "computationRanges": {
          "description": "Contains ranges of a streaming computation this task should apply to.",
          "type": "array",
          "items": {
            "$ref": "StreamingComputationRanges"
          }
        }
      },
      "id": "StreamingComputationTask",
      "description": "A task which describes what action should be performed for the specified\nstreaming computation ranges."
    },
    "BigTableIODetails": {
      "description": "Metadata for a BigTable connector used by the job.",
      "type": "object",
      "properties": {
        "projectId": {
          "description": "ProjectId accessed in the connection.",
          "type": "string"
        },
        "instanceId": {
          "type": "string",
          "description": "InstanceId accessed in the connection."
        },
        "tableId": {
          "description": "TableId accessed in the connection.",
          "type": "string"
        }
      },
      "id": "BigTableIODetails"
    },
    "LaunchFlexTemplateRequest": {
      "description": "A request to launch a Cloud Dataflow job from a FlexTemplate.",
      "type": "object",
      "properties": {
        "validateOnly": {
          "description": "If true, the request is validated but not actually executed.\nDefaults to false.",
          "type": "boolean"
        },
        "launchParameter": {
          "description": "Required. Parameter to launch a job form Flex Template.",
          "$ref": "LaunchFlexTemplateParameter"
        }
      },
      "id": "LaunchFlexTemplateRequest"
    },
    "SendDebugCaptureRequest": {
      "properties": {
        "data": {
          "description": "The encoded debug information.",
          "type": "string"
        },
        "componentId": {
          "type": "string",
          "description": "The internal component id for which debug information is sent."
        },
        "workerId": {
          "description": "The worker id, i.e., VM hostname.",
          "type": "string"
        },
        "location": {
          "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains the job specified by job_id.",
          "type": "string"
        }
      },
      "id": "SendDebugCaptureRequest",
      "description": "Request to send encoded debug information.",
      "type": "object"
    },
    "GetDebugConfigResponse": {
      "description": "Response to a get debug configuration request.",
      "type": "object",
      "properties": {
        "config": {
          "type": "string",
          "description": "The encoded debug configuration for the requested component."
        }
      },
      "id": "GetDebugConfigResponse"
    },
    "ComponentTransform": {
      "id": "ComponentTransform",
      "description": "Description of a transform executed as part of an execution stage.",
      "type": "object",
      "properties": {
        "originalTransform": {
          "description": "User name for the original user transform with which this transform is\nmost closely associated.",
          "type": "string"
        },
        "name": {
          "description": "Dataflow service generated name for this source.",
          "type": "string"
        },
        "userName": {
          "description": "Human-readable name for this transform; may be user or system generated.",
          "type": "string"
        }
      }
    },
    "StreamingSetupTask": {
      "type": "object",
      "properties": {
        "streamingComputationTopology": {
          "description": "The global topology of the streaming Dataflow job.",
          "$ref": "TopologyConfig"
        },
        "snapshotConfig": {
          "$ref": "StreamingApplianceSnapshotConfig",
          "description": "Configures streaming appliance snapshot."
        },
        "workerHarnessPort": {
          "description": "The TCP port used by the worker to communicate with the Dataflow\nworker harness.",
          "format": "int32",
          "type": "integer"
        },
        "drain": {
          "description": "The user has requested drain.",
          "type": "boolean"
        },
        "receiveWorkPort": {
          "description": "The TCP port on which the worker should listen for messages from\nother streaming computation workers.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "StreamingSetupTask",
      "description": "A task which initializes part of a streaming Dataflow job."
    },
    "PubsubLocation": {
      "description": "Identifies a pubsub location to use for transferring data into or\nout of a streaming Dataflow job.",
      "type": "object",
      "properties": {
        "subscription": {
          "description": "A pubsub subscription, in the form of\n\"pubsub.googleapis.com/subscriptions/\u003cproject-id\u003e/\u003csubscription-name\u003e\"",
          "type": "string"
        },
        "dropLateData": {
          "description": "Indicates whether the pipeline allows late-arriving data.",
          "type": "boolean"
        },
        "trackingSubscription": {
          "description": "If set, specifies the pubsub subscription that will be used for tracking\ncustom time timestamps for watermark estimation.",
          "type": "string"
        },
        "withAttributes": {
          "description": "If true, then the client has requested to get pubsub attributes.",
          "type": "boolean"
        },
        "idLabel": {
          "type": "string",
          "description": "If set, contains a pubsub label from which to extract record ids.\nIf left empty, record deduplication will be strictly best effort."
        },
        "topic": {
          "description": "A pubsub topic, in the form of\n\"pubsub.googleapis.com/topics/\u003cproject-id\u003e/\u003ctopic-name\u003e\"",
          "type": "string"
        },
        "timestampLabel": {
          "description": "If set, contains a pubsub label from which to extract record timestamps.\nIf left empty, record timestamps will be generated upon arrival.",
          "type": "string"
        }
      },
      "id": "PubsubLocation"
    },
    "WorkerHealthReport": {
      "id": "WorkerHealthReport",
      "description": "WorkerHealthReport contains information about the health of a worker.\n\nThe VM should be identified by the labels attached to the WorkerMessage that\nthis health ping belongs to.",
      "type": "object",
      "properties": {
        "pods": {
          "description": "The pods running on the worker. See:\nhttp://kubernetes.io/v1.1/docs/api-reference/v1/definitions.html#_v1_pod\n\nThis field is used by the worker to send the status of the indvidual\ncontainers running on each worker.",
          "type": "array",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object.",
              "type": "any"
            },
            "type": "object"
          }
        },
        "reportInterval": {
          "description": "The interval at which the worker is sending health reports.\nThe default value of 0 should be interpreted as the field is not being\nexplicitly set by the worker.",
          "format": "google-duration",
          "type": "string"
        },
        "vmIsHealthy": {
          "description": "Whether the VM is currently healthy.",
          "type": "boolean"
        },
        "vmIsBroken": {
          "description": "Whether the VM is in a permanently broken state.\nBroken VMs should be abandoned or deleted ASAP to avoid assigning or\ncompleting any work.",
          "type": "boolean"
        },
        "vmStartupTime": {
          "description": "The time the VM was booted.",
          "format": "google-datetime",
          "type": "string"
        },
        "msg": {
          "description": "A message describing any unusual health reports.",
          "type": "string"
        }
      }
    },
    "LaunchFlexTemplateResponse": {
      "id": "LaunchFlexTemplateResponse",
      "description": "Response to the request to launch a job from Flex Template.",
      "type": "object",
      "properties": {
        "job": {
          "$ref": "Job",
          "description": "The job that was launched, if the request was not a dry run and\nthe job was successfully launched."
        }
      }
    },
    "JobMessage": {
      "description": "A particular message pertaining to a Dataflow job.",
      "type": "object",
      "properties": {
        "messageText": {
          "description": "The text of the message.",
          "type": "string"
        },
        "messageImportance": {
          "enumDescriptions": [
            "The message importance isn't specified, or is unknown.",
            "The message is at the 'debug' level: typically only useful for\nsoftware engineers working on the code the job is running.\nTypically, Dataflow pipeline runners do not display log messages\nat this level by default.",
            "The message is at the 'detailed' level: somewhat verbose, but\npotentially useful to users.  Typically, Dataflow pipeline\nrunners do not display log messages at this level by default.\nThese messages are displayed by default in the Dataflow\nmonitoring UI.",
            "The message is at the 'basic' level: useful for keeping\ntrack of the execution of a Dataflow pipeline.  Typically,\nDataflow pipeline runners display log messages at this level by\ndefault, and these messages are displayed by default in the\nDataflow monitoring UI.",
            "The message is at the 'warning' level: indicating a condition\npertaining to a job which may require human intervention.\nTypically, Dataflow pipeline runners display log messages at this\nlevel by default, and these messages are displayed by default in\nthe Dataflow monitoring UI.",
            "The message is at the 'error' level: indicating a condition\npreventing a job from succeeding.  Typically, Dataflow pipeline\nrunners display log messages at this level by default, and these\nmessages are displayed by default in the Dataflow monitoring UI."
          ],
          "enum": [
            "JOB_MESSAGE_IMPORTANCE_UNKNOWN",
            "JOB_MESSAGE_DEBUG",
            "JOB_MESSAGE_DETAILED",
            "JOB_MESSAGE_BASIC",
            "JOB_MESSAGE_WARNING",
            "JOB_MESSAGE_ERROR"
          ],
          "description": "Importance level of the message.",
          "type": "string"
        },
        "time": {
          "description": "The timestamp of the message.",
          "format": "google-datetime",
          "type": "string"
        },
        "id": {
          "description": "Deprecated.",
          "type": "string"
        }
      },
      "id": "JobMessage"
    },
    "ParameterMetadata": {
      "description": "Metadata for a specific parameter.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. The name of the parameter.",
          "type": "string"
        },
        "regexes": {
          "description": "Optional. Regexes that the parameter must match.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isOptional": {
          "description": "Optional. Whether the parameter is optional. Defaults to false.",
          "type": "boolean"
        },
        "label": {
          "description": "Required. The label to display for the parameter.",
          "type": "string"
        },
        "paramType": {
          "description": "Optional. The type of the parameter.\nUsed for selecting input picker.",
          "type": "string",
          "enumDescriptions": [
            "Default input type.",
            "The parameter specifies generic text input.",
            "The parameter specifies a GCS Bucket to read from.",
            "The parameter specifies a GCS Bucket to write to.",
            "The parameter specifies a GCS file path to read from.",
            "The parameter specifies a GCS file path to write to.",
            "The parameter specifies a GCS folder path to read from.",
            "The parameter specifies a GCS folder to write to.",
            "The parameter specifies a Pub/Sub Topic.",
            "The parameter specifies a Pub/Sub Subscription."
          ],
          "enum": [
            "DEFAULT",
            "TEXT",
            "GCS_READ_BUCKET",
            "GCS_WRITE_BUCKET",
            "GCS_READ_FILE",
            "GCS_WRITE_FILE",
            "GCS_READ_FOLDER",
            "GCS_WRITE_FOLDER",
            "PUBSUB_TOPIC",
            "PUBSUB_SUBSCRIPTION"
          ]
        },
        "helpText": {
          "description": "Required. The help text to display for the parameter.",
          "type": "string"
        }
      },
      "id": "ParameterMetadata"
    },
    "SpannerIODetails": {
      "properties": {
        "projectId": {
          "description": "ProjectId accessed in the connection.",
          "type": "string"
        },
        "databaseId": {
          "description": "DatabaseId accessed in the connection.",
          "type": "string"
        },
        "instanceId": {
          "description": "InstanceId accessed in the connection.",
          "type": "string"
        }
      },
      "id": "SpannerIODetails",
      "description": "Metadata for a Spanner connector used by the job.",
      "type": "object"
    },
    "MultiOutputInfo": {
      "type": "object",
      "properties": {
        "tag": {
          "description": "The id of the tag the user code will emit to this output by; this\nshould correspond to the tag of some SideInputInfo.",
          "type": "string"
        }
      },
      "id": "MultiOutputInfo",
      "description": "Information about an output of a multi-output DoFn."
    },
    "SourceSplitRequest": {
      "type": "object",
      "properties": {
        "source": {
          "$ref": "Source",
          "description": "Specification of the source to be split."
        },
        "options": {
          "$ref": "SourceSplitOptions",
          "description": "Hints for tuning the splitting process."
        }
      },
      "id": "SourceSplitRequest",
      "description": "Represents the operation to split a high-level Source specification\ninto bundles (parts for parallel processing).\n\nAt a high level, splitting of a source into bundles happens as follows:\nSourceSplitRequest is applied to the source. If it returns\nSOURCE_SPLIT_OUTCOME_USE_CURRENT, no further splitting happens and the source\nis used \"as is\". Otherwise, splitting is applied recursively to each\nproduced DerivedSource.\n\nAs an optimization, for any Source, if its does_not_need_splitting is\ntrue, the framework assumes that splitting this source would return\nSOURCE_SPLIT_OUTCOME_USE_CURRENT, and doesn't initiate a SourceSplitRequest.\nThis applies both to the initial source being split and to bundles\nproduced from it."
    },
    "SourceGetMetadataResponse": {
      "id": "SourceGetMetadataResponse",
      "description": "The result of a SourceGetMetadataOperation.",
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "SourceMetadata",
          "description": "The computed metadata."
        }
      }
    },
    "MemInfo": {
      "description": "Information about the memory usage of a worker or a container within a\nworker.",
      "type": "object",
      "properties": {
        "totalGbMs": {
          "description": "Total memory (RSS) usage since start up in GB * ms.",
          "format": "uint64",
          "type": "string"
        },
        "timestamp": {
          "description": "Timestamp of the measurement.",
          "format": "google-datetime",
          "type": "string"
        },
        "currentRssBytes": {
          "description": "Instantenous memory (RSS) size in bytes.",
          "format": "uint64",
          "type": "string"
        },
        "currentLimitBytes": {
          "description": "Instantenous memory limit in bytes.",
          "format": "uint64",
          "type": "string"
        }
      },
      "id": "MemInfo"
    },
    "ContainerSpec": {
      "description": "Container Spec.",
      "type": "object",
      "properties": {
        "image": {
          "description": "Name of the docker container image. E.g., gcr.io/project/some-image",
          "type": "string"
        },
        "metadata": {
          "$ref": "TemplateMetadata",
          "description": "Metadata describing a template including description and validation rules."
        },
        "sdkInfo": {
          "$ref": "SDKInfo",
          "description": "Required. SDK info of the Flex Template."
        }
      },
      "id": "ContainerSpec"
    },
    "ShellTask": {
      "id": "ShellTask",
      "description": "A task which consists of a shell command for the worker to execute.",
      "type": "object",
      "properties": {
        "exitCode": {
          "type": "integer",
          "description": "Exit code for the task.",
          "format": "int32"
        },
        "command": {
          "description": "The shell command to run.",
          "type": "string"
        }
      }
    },
    "MetricShortId": {
      "description": "The metric short id is returned to the user alongside an offset into\nReportWorkItemStatusRequest",
      "type": "object",
      "properties": {
        "metricIndex": {
          "type": "integer",
          "description": "The index of the corresponding metric in\nthe ReportWorkItemStatusRequest. Required.",
          "format": "int32"
        },
        "shortId": {
          "description": "The service-generated short identifier for the metric.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "MetricShortId"
    },
    "AutoscalingEvent": {
      "description": "A structured message reporting an autoscaling decision made by the Dataflow\nservice.",
      "type": "object",
      "properties": {
        "time": {
          "description": "The time this event was emitted to indicate a new target or current\nnum_workers value.",
          "format": "google-datetime",
          "type": "string"
        },
        "description": {
          "$ref": "StructuredMessage",
          "description": "A message describing why the system decided to adjust the current\nnumber of workers, why it failed, or why the system decided to\nnot make any changes to the number of workers."
        },
        "workerPool": {
          "description": "A short and friendly name for the worker pool this event refers to,\npopulated from the value of PoolStageRelation::user_pool_name.",
          "type": "string"
        },
        "targetNumWorkers": {
          "description": "The target number of workers the worker pool wants to resize to use.",
          "format": "int64",
          "type": "string"
        },
        "eventType": {
          "enumDescriptions": [
            "Default type for the enum.  Value should never be returned.",
            "The TARGET_NUM_WORKERS_CHANGED type should be used when the target\nworker pool size has changed at the start of an actuation. An event\nshould always be specified as TARGET_NUM_WORKERS_CHANGED if it reflects\na change in the target_num_workers.",
            "The CURRENT_NUM_WORKERS_CHANGED type should be used when actual worker\npool size has been changed, but the target_num_workers has not changed.",
            "The ACTUATION_FAILURE type should be used when we want to report\nan error to the user indicating why the current number of workers\nin the pool could not be changed.\nDisplayed in the current status and history widgets.",
            "Used when we want to report to the user a reason why we are\nnot currently adjusting the number of workers.\nShould specify both target_num_workers, current_num_workers and a\ndecision_message."
          ],
          "enum": [
            "TYPE_UNKNOWN",
            "TARGET_NUM_WORKERS_CHANGED",
            "CURRENT_NUM_WORKERS_CHANGED",
            "ACTUATION_FAILURE",
            "NO_CHANGE"
          ],
          "description": "The type of autoscaling event to report.",
          "type": "string"
        },
        "currentNumWorkers": {
          "type": "string",
          "description": "The current number of workers the job has.",
          "format": "int64"
        }
      },
      "id": "AutoscalingEvent"
    },
    "TaskRunnerSettings": {
      "id": "TaskRunnerSettings",
      "description": "Taskrunner configuration settings.",
      "type": "object",
      "properties": {
        "taskGroup": {
          "description": "The UNIX group ID on the worker VM to use for tasks launched by\ntaskrunner; e.g. \"wheel\".",
          "type": "string"
        },
        "harnessCommand": {
          "description": "The command to launch the worker harness.",
          "type": "string"
        },
        "logDir": {
          "description": "The directory on the VM to store logs.",
          "type": "string"
        },
        "oauthScopes": {
          "description": "The OAuth2 scopes to be requested by the taskrunner in order to\naccess the Cloud Dataflow API.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dataflowApiVersion": {
          "description": "The API version of endpoint, e.g. \"v1b3\"",
          "type": "string"
        },
        "logUploadLocation": {
          "description": "Indicates where to put logs.  If this is not specified, the logs\nwill not be uploaded.\n\nThe supported resource type is:\n\nGoogle Cloud Storage:\n  storage.googleapis.com/{bucket}/{object}\n  bucket.storage.googleapis.com/{object}",
          "type": "string"
        },
        "streamingWorkerMainClass": {
          "description": "The streaming worker main class name.",
          "type": "string"
        },
        "workflowFileName": {
          "description": "The file to store the workflow in.",
          "type": "string"
        },
        "languageHint": {
          "description": "The suggested backend language.",
          "type": "string"
        },
        "commandlinesFileName": {
          "description": "The file to store preprocessing commands in.",
          "type": "string"
        },
        "tempStoragePrefix": {
          "description": "The prefix of the resources the taskrunner should use for\ntemporary storage.\n\nThe supported resource type is:\n\nGoogle Cloud Storage:\n  storage.googleapis.com/{bucket}/{object}\n  bucket.storage.googleapis.com/{object}",
          "type": "string"
        },
        "baseTaskDir": {
          "description": "The location on the worker for task-specific subdirectories.",
          "type": "string"
        },
        "baseUrl": {
          "description": "The base URL for the taskrunner to use when accessing Google Cloud APIs.\n\nWhen workers access Google Cloud APIs, they logically do so via\nrelative URLs.  If this field is specified, it supplies the base\nURL to use for resolving these relative URLs.  The normative\nalgorithm used is defined by RFC 1808, \"Relative Uniform Resource\nLocators\".\n\nIf not specified, the default value is \"http://www.googleapis.com/\"",
          "type": "string"
        },
        "logToSerialconsole": {
          "description": "Whether to send taskrunner log info to Google Compute Engine VM serial\nconsole.",
          "type": "boolean"
        },
        "continueOnException": {
          "description": "Whether to continue taskrunner if an exception is hit.",
          "type": "boolean"
        },
        "parallelWorkerSettings": {
          "description": "The settings to pass to the parallel worker harness.",
          "$ref": "WorkerSettings"
        },
        "taskUser": {
          "description": "The UNIX user ID on the worker VM to use for tasks launched by\ntaskrunner; e.g. \"root\".",
          "type": "string"
        },
        "vmId": {
          "description": "The ID string of the VM.",
          "type": "string"
        },
        "alsologtostderr": {
          "description": "Whether to also send taskrunner log info to stderr.",
          "type": "boolean"
        }
      }
    },
    "Position": {
      "description": "Position defines a position within a collection of data.  The value\ncan be either the end position, a key (used with ordered\ncollections), a byte offset, or a record index.",
      "type": "object",
      "properties": {
        "recordIndex": {
          "description": "Position is a record index.",
          "format": "int64",
          "type": "string"
        },
        "shufflePosition": {
          "description": "CloudPosition is a base64 encoded BatchShufflePosition (with FIXED\nsharding).",
          "type": "string"
        },
        "concatPosition": {
          "description": "CloudPosition is a concat position.",
          "$ref": "ConcatPosition"
        },
        "byteOffset": {
          "description": "Position is a byte offset.",
          "format": "int64",
          "type": "string"
        },
        "end": {
          "description": "Position is past all other positions. Also useful for the end\nposition of an unbounded range.",
          "type": "boolean"
        },
        "key": {
          "description": "Position is a string key, ordered lexicographically.",
          "type": "string"
        }
      },
      "id": "Position"
    },
    "DeleteSnapshotResponse": {
      "id": "DeleteSnapshotResponse",
      "description": "Response from deleting a snapshot.",
      "type": "object",
      "properties": {}
    },
    "Source": {
      "description": "A source that records can be read and decoded from.",
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "SourceMetadata",
          "description": "Optionally, metadata for this source can be supplied right away,\navoiding a SourceGetMetadataOperation roundtrip\n(see SourceOperationRequest).\n\nThis field is meaningful only in the Source objects populated\nby the user (e.g. when filling in a DerivedSource).\nSource objects supplied by the framework to the user don't have\nthis field populated."
        },
        "baseSpecs": {
          "description": "While splitting, sources may specify the produced bundles\nas differences against another source, in order to save backend-side\nmemory and allow bigger jobs. For details, see SourceSplitRequest.\nTo support this use case, the full set of parameters of the source\nis logically obtained by taking the latest explicitly specified value\nof each parameter in the order:\nbase_specs (later items win), spec (overrides anything in base_specs).",
          "type": "array",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object.",
              "type": "any"
            },
            "type": "object"
          }
        },
        "codec": {
          "description": "The codec to use to decode data read from the source.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "doesNotNeedSplitting": {
          "description": "Setting this value to true hints to the framework that the source\ndoesn't need splitting, and using SourceSplitRequest on it would\nyield SOURCE_SPLIT_OUTCOME_USE_CURRENT.\n\nE.g. a file splitter may set this to true when splitting a single file\ninto a set of byte ranges of appropriate size, and set this\nto false when splitting a filepattern into individual files.\nHowever, for efficiency, a file splitter may decide to produce\nfile subranges directly from the filepattern to avoid a splitting\nround-trip.\n\nSee SourceSplitRequest for an overview of the splitting process.\n\nThis field is meaningful only in the Source objects populated\nby the user (e.g. when filling in a DerivedSource).\nSource objects supplied by the framework to the user don't have\nthis field populated.",
          "type": "boolean"
        },
        "spec": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "description": "The source to read from, plus its parameters.",
          "type": "object"
        }
      },
      "id": "Source"
    },
    "SplitInt64": {
      "description": "A representation of an int64, n, that is immune to precision loss when\nencoded in JSON.",
      "type": "object",
      "properties": {
        "lowBits": {
          "description": "The low order bits: n & 0xffffffff.",
          "format": "uint32",
          "type": "integer"
        },
        "highBits": {
          "description": "The high order bits, including the sign: n \u003e\u003e 32.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "SplitInt64"
    },
    "WorkerPool": {
      "properties": {
        "poolArgs": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Extra arguments for this worker pool.",
          "type": "object"
        },
        "diskSizeGb": {
          "description": "Size of root disk for VMs, in GB.  If zero or unspecified, the service will\nattempt to choose a reasonable default.",
          "format": "int32",
          "type": "integer"
        },
        "workerHarnessContainerImage": {
          "description": "Required. Docker container image that executes the Cloud Dataflow worker\nharness, residing in Google Container Registry.\n\nDeprecated for the Fn API path. Use sdk_harness_container_images instead.",
          "type": "string"
        },
        "diskType": {
          "description": "Type of root disk for VMs.  If empty or unspecified, the service will\nattempt to choose a reasonable default.",
          "type": "string"
        },
        "machineType": {
          "description": "Machine type (e.g. \"n1-standard-1\").  If empty or unspecified, the\nservice will attempt to choose a reasonable default.",
          "type": "string"
        },
        "kind": {
          "description": "The kind of the worker pool; currently only `harness` and `shuffle`\nare supported.",
          "type": "string"
        },
        "sdkHarnessContainerImages": {
          "description": "Set of SDK harness containers needed to execute this pipeline. This will\nonly be set in the Fn API path. For non-cross-language pipelines this\nshould have only one entry. Cross-language pipelines will have two or more\nentries.",
          "type": "array",
          "items": {
            "$ref": "SdkHarnessContainerImage"
          }
        },
        "dataDisks": {
          "type": "array",
          "items": {
            "$ref": "Disk"
          },
          "description": "Data disks that are used by a VM in this workflow."
        },
        "subnetwork": {
          "type": "string",
          "description": "Subnetwork to which VMs will be assigned, if desired.  Expected to be of\nthe form \"regions/REGION/subnetworks/SUBNETWORK\"."
        },
        "ipConfiguration": {
          "enumDescriptions": [
            "The configuration is unknown, or unspecified.",
            "Workers should have public IP addresses.",
            "Workers should have private IP addresses."
          ],
          "enum": [
            "WORKER_IP_UNSPECIFIED",
            "WORKER_IP_PUBLIC",
            "WORKER_IP_PRIVATE"
          ],
          "description": "Configuration for VM IPs.",
          "type": "string"
        },
        "autoscalingSettings": {
          "$ref": "AutoscalingSettings",
          "description": "Settings for autoscaling of this WorkerPool."
        },
        "taskrunnerSettings": {
          "description": "Settings passed through to Google Compute Engine workers when\nusing the standard Dataflow task runner.  Users should ignore\nthis field.",
          "$ref": "TaskRunnerSettings"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Metadata to set on the Google Compute Engine VMs."
        },
        "defaultPackageSet": {
          "description": "The default package set to install.  This allows the service to\nselect a default set of packages which are useful to worker\nharnesses written in a particular language.",
          "type": "string",
          "enumDescriptions": [
            "The default set of packages to stage is unknown, or unspecified.",
            "Indicates that no packages should be staged at the worker unless\nexplicitly specified by the job.",
            "Stage packages typically useful to workers written in Java.",
            "Stage pacakges typically useful to workers written in Python."
          ],
          "enum": [
            "DEFAULT_PACKAGE_SET_UNKNOWN",
            "DEFAULT_PACKAGE_SET_NONE",
            "DEFAULT_PACKAGE_SET_JAVA",
            "DEFAULT_PACKAGE_SET_PYTHON"
          ]
        },
        "network": {
          "description": "Network to which VMs will be assigned.  If empty or unspecified,\nthe service will use the network \"default\".",
          "type": "string"
        },
        "zone": {
          "description": "Zone to run the worker pools in.  If empty or unspecified, the service\nwill attempt to choose a reasonable default.",
          "type": "string"
        },
        "numWorkers": {
          "type": "integer",
          "description": "Number of Google Compute Engine workers in this pool needed to\nexecute the job.  If zero or unspecified, the service will\nattempt to choose a reasonable default.",
          "format": "int32"
        },
        "numThreadsPerWorker": {
          "type": "integer",
          "description": "The number of threads per worker harness. If empty or unspecified, the\nservice will choose a number of threads (according to the number of cores\non the selected machine type for batch, or 1 by convention for streaming).",
          "format": "int32"
        },
        "diskSourceImage": {
          "description": "Fully qualified source image for disks.",
          "type": "string"
        },
        "packages": {
          "description": "Packages to be installed on workers.",
          "type": "array",
          "items": {
            "$ref": "Package"
          }
        },
        "teardownPolicy": {
          "type": "string",
          "enumDescriptions": [
            "The teardown policy isn't specified, or is unknown.",
            "Always teardown the resource.",
            "Teardown the resource on success. This is useful for debugging\nfailures.",
            "Never teardown the resource. This is useful for debugging and\ndevelopment."
          ],
          "enum": [
            "TEARDOWN_POLICY_UNKNOWN",
            "TEARDOWN_ALWAYS",
            "TEARDOWN_ON_SUCCESS",
            "TEARDOWN_NEVER"
          ],
          "description": "Sets the policy for determining when to turndown worker pool.\nAllowed values are: `TEARDOWN_ALWAYS`, `TEARDOWN_ON_SUCCESS`, and\n`TEARDOWN_NEVER`.\n`TEARDOWN_ALWAYS` means workers are always torn down regardless of whether\nthe job succeeds. `TEARDOWN_ON_SUCCESS` means workers are torn down\nif the job succeeds. `TEARDOWN_NEVER` means the workers are never torn\ndown.\n\nIf the workers are not torn down by the service, they will\ncontinue to run and use Google Compute Engine VM resources in the\nuser's project until they are explicitly terminated by the user.\nBecause of this, Google recommends using the `TEARDOWN_ALWAYS`\npolicy except for small, manually supervised test jobs.\n\nIf unknown or unspecified, the service will attempt to choose a reasonable\ndefault."
        },
        "onHostMaintenance": {
          "description": "The action to take on host maintenance, as defined by the Google\nCompute Engine API.",
          "type": "string"
        }
      },
      "id": "WorkerPool",
      "description": "Describes one particular pool of Cloud Dataflow workers to be\ninstantiated by the Cloud Dataflow service in order to perform the\ncomputations required by a job.  Note that a workflow job may use\nmultiple pools, in order to match the various computational\nrequirements of the various stages of the job.",
      "type": "object"
    },
    "SourceOperationRequest": {
      "type": "object",
      "properties": {
        "originalName": {
          "description": "System-defined name for the Read instruction for this source\nin the original workflow graph.",
          "type": "string"
        },
        "systemName": {
          "description": "System-defined name of the Read instruction for this source.\nUnique across the workflow.",
          "type": "string"
        },
        "stageName": {
          "description": "System-defined name of the stage containing the source operation.\nUnique across the workflow.",
          "type": "string"
        },
        "getMetadata": {
          "$ref": "SourceGetMetadataRequest",
          "description": "Information about a request to get metadata about a source."
        },
        "split": {
          "description": "Information about a request to split a source.",
          "$ref": "SourceSplitRequest"
        },
        "name": {
          "type": "string",
          "description": "User-provided name of the Read instruction for this source."
        }
      },
      "id": "SourceOperationRequest",
      "description": "A work item that represents the different operations that can be\nperformed on a user-defined Source specification."
    }
  },
  "protocol": "rest",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "version": "v1b3",
  "baseUrl": "https://dataflow.googleapis.com/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/userinfo.email": {
          "description": "View your email address"
        },
        "https://www.googleapis.com/auth/compute.readonly": {
          "description": "View your Google Compute Engine resources"
        },
        "https://www.googleapis.com/auth/compute": {
          "description": "View and manage your Google Compute Engine resources"
        },
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  }
}
