/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Represents datetime. It can be @sys.date, @sys.time or, in some cases, @sys.date-time. Our
 * platform doesn't track seconds, so this field is omitted. Number of seconds should be considered
 * 0. Hour and minute can be 0 in case of dates. In case of time and dateTime, hours and minutes
 * will represent actual time, even if both of them are 0.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class NlpSemanticParsingProtoActionsOnGoogleDateTime extends com.google.api.client.json.GenericJson {

  /**
   * Date value. Note, that month and day are 1 based. If this DateTime is a PARTIAL datetime, then
   * fields have value -1, which means these fields are inferred rather than derived directly from
   * query.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleTypeDate date;

  /**
   * Property of this DateTime value that can be used to match user specification of parameters,
   * e.g. date.recent.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private NlpSemanticParsingProtoActionsOnGoogleDateTimeProperty property;

  /**
   * Time value. Only hours and minutes are used. Hours are in 24h format.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleTypeTimeOfDay time;

  /**
   * Timezone field specified only if this DateTime has type TIME or DATETIME.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleTypeTimeZone timeZone;

  /**
   * Date value. Note, that month and day are 1 based. If this DateTime is a PARTIAL datetime, then
   * fields have value -1, which means these fields are inferred rather than derived directly from
   * query.
   * @return value or {@code null} for none
   */
  public GoogleTypeDate getDate() {
    return date;
  }

  /**
   * Date value. Note, that month and day are 1 based. If this DateTime is a PARTIAL datetime, then
   * fields have value -1, which means these fields are inferred rather than derived directly from
   * query.
   * @param date date or {@code null} for none
   */
  public NlpSemanticParsingProtoActionsOnGoogleDateTime setDate(GoogleTypeDate date) {
    this.date = date;
    return this;
  }

  /**
   * Property of this DateTime value that can be used to match user specification of parameters,
   * e.g. date.recent.
   * @return value or {@code null} for none
   */
  public NlpSemanticParsingProtoActionsOnGoogleDateTimeProperty getProperty() {
    return property;
  }

  /**
   * Property of this DateTime value that can be used to match user specification of parameters,
   * e.g. date.recent.
   * @param property property or {@code null} for none
   */
  public NlpSemanticParsingProtoActionsOnGoogleDateTime setProperty(NlpSemanticParsingProtoActionsOnGoogleDateTimeProperty property) {
    this.property = property;
    return this;
  }

  /**
   * Time value. Only hours and minutes are used. Hours are in 24h format.
   * @return value or {@code null} for none
   */
  public GoogleTypeTimeOfDay getTime() {
    return time;
  }

  /**
   * Time value. Only hours and minutes are used. Hours are in 24h format.
   * @param time time or {@code null} for none
   */
  public NlpSemanticParsingProtoActionsOnGoogleDateTime setTime(GoogleTypeTimeOfDay time) {
    this.time = time;
    return this;
  }

  /**
   * Timezone field specified only if this DateTime has type TIME or DATETIME.
   * @return value or {@code null} for none
   */
  public GoogleTypeTimeZone getTimeZone() {
    return timeZone;
  }

  /**
   * Timezone field specified only if this DateTime has type TIME or DATETIME.
   * @param timeZone timeZone or {@code null} for none
   */
  public NlpSemanticParsingProtoActionsOnGoogleDateTime setTimeZone(GoogleTypeTimeZone timeZone) {
    this.timeZone = timeZone;
    return this;
  }

  @Override
  public NlpSemanticParsingProtoActionsOnGoogleDateTime set(String fieldName, Object value) {
    return (NlpSemanticParsingProtoActionsOnGoogleDateTime) super.set(fieldName, value);
  }

  @Override
  public NlpSemanticParsingProtoActionsOnGoogleDateTime clone() {
    return (NlpSemanticParsingProtoActionsOnGoogleDateTime) super.clone();
  }

}
