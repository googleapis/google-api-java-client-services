/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.places.v1.model;

/**
 * Information about parking options for the place. A parking lot could support more than one option
 * at the same time.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Places API (New). For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleMapsPlacesV1PlaceParkingOptions extends com.google.api.client.json.GenericJson {

  /**
   * Place offers free garage parking.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean freeGarageParking;

  /**
   * Place offers free parking lots.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean freeParkingLot;

  /**
   * Place offers free street parking.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean freeStreetParking;

  /**
   * Place offers paid garage parking.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean paidGarageParking;

  /**
   * Place offers paid parking lots.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean paidParkingLot;

  /**
   * Place offers paid street parking.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean paidStreetParking;

  /**
   * Place offers valet parking.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean valetParking;

  /**
   * Place offers free garage parking.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getFreeGarageParking() {
    return freeGarageParking;
  }

  /**
   * Place offers free garage parking.
   * @param freeGarageParking freeGarageParking or {@code null} for none
   */
  public GoogleMapsPlacesV1PlaceParkingOptions setFreeGarageParking(java.lang.Boolean freeGarageParking) {
    this.freeGarageParking = freeGarageParking;
    return this;
  }

  /**
   * Place offers free parking lots.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getFreeParkingLot() {
    return freeParkingLot;
  }

  /**
   * Place offers free parking lots.
   * @param freeParkingLot freeParkingLot or {@code null} for none
   */
  public GoogleMapsPlacesV1PlaceParkingOptions setFreeParkingLot(java.lang.Boolean freeParkingLot) {
    this.freeParkingLot = freeParkingLot;
    return this;
  }

  /**
   * Place offers free street parking.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getFreeStreetParking() {
    return freeStreetParking;
  }

  /**
   * Place offers free street parking.
   * @param freeStreetParking freeStreetParking or {@code null} for none
   */
  public GoogleMapsPlacesV1PlaceParkingOptions setFreeStreetParking(java.lang.Boolean freeStreetParking) {
    this.freeStreetParking = freeStreetParking;
    return this;
  }

  /**
   * Place offers paid garage parking.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getPaidGarageParking() {
    return paidGarageParking;
  }

  /**
   * Place offers paid garage parking.
   * @param paidGarageParking paidGarageParking or {@code null} for none
   */
  public GoogleMapsPlacesV1PlaceParkingOptions setPaidGarageParking(java.lang.Boolean paidGarageParking) {
    this.paidGarageParking = paidGarageParking;
    return this;
  }

  /**
   * Place offers paid parking lots.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getPaidParkingLot() {
    return paidParkingLot;
  }

  /**
   * Place offers paid parking lots.
   * @param paidParkingLot paidParkingLot or {@code null} for none
   */
  public GoogleMapsPlacesV1PlaceParkingOptions setPaidParkingLot(java.lang.Boolean paidParkingLot) {
    this.paidParkingLot = paidParkingLot;
    return this;
  }

  /**
   * Place offers paid street parking.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getPaidStreetParking() {
    return paidStreetParking;
  }

  /**
   * Place offers paid street parking.
   * @param paidStreetParking paidStreetParking or {@code null} for none
   */
  public GoogleMapsPlacesV1PlaceParkingOptions setPaidStreetParking(java.lang.Boolean paidStreetParking) {
    this.paidStreetParking = paidStreetParking;
    return this;
  }

  /**
   * Place offers valet parking.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getValetParking() {
    return valetParking;
  }

  /**
   * Place offers valet parking.
   * @param valetParking valetParking or {@code null} for none
   */
  public GoogleMapsPlacesV1PlaceParkingOptions setValetParking(java.lang.Boolean valetParking) {
    this.valetParking = valetParking;
    return this;
  }

  @Override
  public GoogleMapsPlacesV1PlaceParkingOptions set(String fieldName, Object value) {
    return (GoogleMapsPlacesV1PlaceParkingOptions) super.set(fieldName, value);
  }

  @Override
  public GoogleMapsPlacesV1PlaceParkingOptions clone() {
    return (GoogleMapsPlacesV1PlaceParkingOptions) super.clone();
  }

}
