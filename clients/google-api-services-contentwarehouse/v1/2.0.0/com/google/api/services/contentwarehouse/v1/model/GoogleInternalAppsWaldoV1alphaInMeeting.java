/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * The status indicating the user is in a meeting.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleInternalAppsWaldoV1alphaInMeeting extends com.google.api.client.json.GenericJson {

  /**
   * The time when the user will stop being committed, i.e., when their status will be neither of
   * InMeeting, DoNotDisturb or OutOfOffice < Xh. Note that the goal of this field is to provide
   * information to help users decide how to communicate with a user (see also
   * http://shortn/_wXYXtZScgh).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String committedUntil;

  /**
   * Whether the status of the user until committed_until has more than one status type (e.g.
   * InMeeting + DoNotDisturb).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean committedUntilIsMixed;

  /**
   * The summary of the corresponding event in Calendar.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String eventSummary;

  /**
   * The time when the user will stop being in a meeting.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String inMeetingsUntil;

  /**
   * The next time when the user will be available, i.e., when their status will be neither
   * InMeeting, CalendarBusy, DoNotDisturb, OutsideWorkingHours, nor OutOfOffice.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String nextAvailable;

  /**
   * The time when the user will stop being occupied, i.e., when their status will be neither
   * InMeeting, Busy nor DoNotDisturb.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String occupiedUntil;

  /**
   * The time when the user will stop being committed, i.e., when their status will be neither of
   * InMeeting, DoNotDisturb or OutOfOffice < Xh. Note that the goal of this field is to provide
   * information to help users decide how to communicate with a user (see also
   * http://shortn/_wXYXtZScgh).
   * @return value or {@code null} for none
   */
  public String getCommittedUntil() {
    return committedUntil;
  }

  /**
   * The time when the user will stop being committed, i.e., when their status will be neither of
   * InMeeting, DoNotDisturb or OutOfOffice < Xh. Note that the goal of this field is to provide
   * information to help users decide how to communicate with a user (see also
   * http://shortn/_wXYXtZScgh).
   * @param committedUntil committedUntil or {@code null} for none
   */
  public GoogleInternalAppsWaldoV1alphaInMeeting setCommittedUntil(String committedUntil) {
    this.committedUntil = committedUntil;
    return this;
  }

  /**
   * Whether the status of the user until committed_until has more than one status type (e.g.
   * InMeeting + DoNotDisturb).
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getCommittedUntilIsMixed() {
    return committedUntilIsMixed;
  }

  /**
   * Whether the status of the user until committed_until has more than one status type (e.g.
   * InMeeting + DoNotDisturb).
   * @param committedUntilIsMixed committedUntilIsMixed or {@code null} for none
   */
  public GoogleInternalAppsWaldoV1alphaInMeeting setCommittedUntilIsMixed(java.lang.Boolean committedUntilIsMixed) {
    this.committedUntilIsMixed = committedUntilIsMixed;
    return this;
  }

  /**
   * The summary of the corresponding event in Calendar.
   * @return value or {@code null} for none
   */
  public java.lang.String getEventSummary() {
    return eventSummary;
  }

  /**
   * The summary of the corresponding event in Calendar.
   * @param eventSummary eventSummary or {@code null} for none
   */
  public GoogleInternalAppsWaldoV1alphaInMeeting setEventSummary(java.lang.String eventSummary) {
    this.eventSummary = eventSummary;
    return this;
  }

  /**
   * The time when the user will stop being in a meeting.
   * @return value or {@code null} for none
   */
  public String getInMeetingsUntil() {
    return inMeetingsUntil;
  }

  /**
   * The time when the user will stop being in a meeting.
   * @param inMeetingsUntil inMeetingsUntil or {@code null} for none
   */
  public GoogleInternalAppsWaldoV1alphaInMeeting setInMeetingsUntil(String inMeetingsUntil) {
    this.inMeetingsUntil = inMeetingsUntil;
    return this;
  }

  /**
   * The next time when the user will be available, i.e., when their status will be neither
   * InMeeting, CalendarBusy, DoNotDisturb, OutsideWorkingHours, nor OutOfOffice.
   * @return value or {@code null} for none
   */
  public String getNextAvailable() {
    return nextAvailable;
  }

  /**
   * The next time when the user will be available, i.e., when their status will be neither
   * InMeeting, CalendarBusy, DoNotDisturb, OutsideWorkingHours, nor OutOfOffice.
   * @param nextAvailable nextAvailable or {@code null} for none
   */
  public GoogleInternalAppsWaldoV1alphaInMeeting setNextAvailable(String nextAvailable) {
    this.nextAvailable = nextAvailable;
    return this;
  }

  /**
   * The time when the user will stop being occupied, i.e., when their status will be neither
   * InMeeting, Busy nor DoNotDisturb.
   * @return value or {@code null} for none
   */
  public String getOccupiedUntil() {
    return occupiedUntil;
  }

  /**
   * The time when the user will stop being occupied, i.e., when their status will be neither
   * InMeeting, Busy nor DoNotDisturb.
   * @param occupiedUntil occupiedUntil or {@code null} for none
   */
  public GoogleInternalAppsWaldoV1alphaInMeeting setOccupiedUntil(String occupiedUntil) {
    this.occupiedUntil = occupiedUntil;
    return this;
  }

  @Override
  public GoogleInternalAppsWaldoV1alphaInMeeting set(String fieldName, Object value) {
    return (GoogleInternalAppsWaldoV1alphaInMeeting) super.set(fieldName, value);
  }

  @Override
  public GoogleInternalAppsWaldoV1alphaInMeeting clone() {
    return (GoogleInternalAppsWaldoV1alphaInMeeting) super.clone();
  }

}
