/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * The metadata returned with each transcode. Next available field: 9
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ImageRepositoryApiItagSpecificMetadata extends com.google.api.client.json.GenericJson {

  /**
   * Timestamp (measured in seconds since epoch) after which Amarna will delete the serving
   * transcode.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long expirationTimestampSec;

  /**
   * The Venom Genus that this transcode was produced for.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String genus;

  /**
   * Indicates the state in Venom for this transcode type.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * transcode type which are available for the video.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer transcodeItag;

  /**
   * The Venom ID that this transcode was produced for.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private VideoAssetsVenomVideoId videoId;

  /**
   * Indicates xtags if present. Xtag makes the different transcode. For transcode
   * "MP4_AVCBASE640_AAC/af=sq" (itag 18 with xtag), "af=sq" is the xtag part. This is a different
   * transcode than "MP4_AVCBASE640_AAC" (itag 18).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ImageRepositoryApiXtagList xtagsList;

  /**
   * Timestamp (measured in seconds since epoch) after which Amarna will delete the serving
   * transcode.
   * @return value or {@code null} for none
   */
  public java.lang.Long getExpirationTimestampSec() {
    return expirationTimestampSec;
  }

  /**
   * Timestamp (measured in seconds since epoch) after which Amarna will delete the serving
   * transcode.
   * @param expirationTimestampSec expirationTimestampSec or {@code null} for none
   */
  public ImageRepositoryApiItagSpecificMetadata setExpirationTimestampSec(java.lang.Long expirationTimestampSec) {
    this.expirationTimestampSec = expirationTimestampSec;
    return this;
  }

  /**
   * The Venom Genus that this transcode was produced for.
   * @return value or {@code null} for none
   */
  public java.lang.String getGenus() {
    return genus;
  }

  /**
   * The Venom Genus that this transcode was produced for.
   * @param genus genus or {@code null} for none
   */
  public ImageRepositoryApiItagSpecificMetadata setGenus(java.lang.String genus) {
    this.genus = genus;
    return this;
  }

  /**
   * Indicates the state in Venom for this transcode type.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Indicates the state in Venom for this transcode type.
   * @param state state or {@code null} for none
   */
  public ImageRepositoryApiItagSpecificMetadata setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * transcode type which are available for the video.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getTranscodeItag() {
    return transcodeItag;
  }

  /**
   * transcode type which are available for the video.
   * @param transcodeItag transcodeItag or {@code null} for none
   */
  public ImageRepositoryApiItagSpecificMetadata setTranscodeItag(java.lang.Integer transcodeItag) {
    this.transcodeItag = transcodeItag;
    return this;
  }

  /**
   * The Venom ID that this transcode was produced for.
   * @return value or {@code null} for none
   */
  public VideoAssetsVenomVideoId getVideoId() {
    return videoId;
  }

  /**
   * The Venom ID that this transcode was produced for.
   * @param videoId videoId or {@code null} for none
   */
  public ImageRepositoryApiItagSpecificMetadata setVideoId(VideoAssetsVenomVideoId videoId) {
    this.videoId = videoId;
    return this;
  }

  /**
   * Indicates xtags if present. Xtag makes the different transcode. For transcode
   * "MP4_AVCBASE640_AAC/af=sq" (itag 18 with xtag), "af=sq" is the xtag part. This is a different
   * transcode than "MP4_AVCBASE640_AAC" (itag 18).
   * @return value or {@code null} for none
   */
  public ImageRepositoryApiXtagList getXtagsList() {
    return xtagsList;
  }

  /**
   * Indicates xtags if present. Xtag makes the different transcode. For transcode
   * "MP4_AVCBASE640_AAC/af=sq" (itag 18 with xtag), "af=sq" is the xtag part. This is a different
   * transcode than "MP4_AVCBASE640_AAC" (itag 18).
   * @param xtagsList xtagsList or {@code null} for none
   */
  public ImageRepositoryApiItagSpecificMetadata setXtagsList(ImageRepositoryApiXtagList xtagsList) {
    this.xtagsList = xtagsList;
    return this;
  }

  @Override
  public ImageRepositoryApiItagSpecificMetadata set(String fieldName, Object value) {
    return (ImageRepositoryApiItagSpecificMetadata) super.set(fieldName, value);
  }

  @Override
  public ImageRepositoryApiItagSpecificMetadata clone() {
    return (ImageRepositoryApiItagSpecificMetadata) super.clone();
  }

}
