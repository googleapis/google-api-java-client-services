/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.content.model;

/**
 * Flow that can be selected for an action. When merchant selects a flow, application should open a
 * dialog with more information and input form.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Content API for Shopping. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ActionFlow extends com.google.api.client.json.GenericJson {

  /**
   * Label for the button to trigger the action from the action dialog. For example: "Request
   * review"
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String dialogButtonLabel;

  /**
   * Important message to be highlighted in the request dialog. For example: "You can only request a
   * review for disagreeing with this issue once. If it's not approved, you'll need to fix the issue
   * and wait a few days before you can request another review."
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Callout dialogCallout;

  /**
   * Message displayed in the request dialog. For example: "Make sure you've fixed all your country-
   * specific issues. If not, you may have to wait 7 days to request another review". There may be
   * an more information to be shown in a tooltip.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private TextWithTooltip dialogMessage;

  /**
   * Title of the request dialog. For example: "Before you request a review"
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String dialogTitle;

  /**
   * Not for display but need to be sent back for the selected action flow.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String id;

  /**
   * A list of input fields.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<InputField> inputs;

  /**
   * Text value describing the intent for the action flow. It can be used as an input label if
   * merchant needs to pick one of multiple flows. For example: "I disagree with the issue"
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String label;

  /**
   * Label for the button to trigger the action from the action dialog. For example: "Request
   * review"
   * @return value or {@code null} for none
   */
  public java.lang.String getDialogButtonLabel() {
    return dialogButtonLabel;
  }

  /**
   * Label for the button to trigger the action from the action dialog. For example: "Request
   * review"
   * @param dialogButtonLabel dialogButtonLabel or {@code null} for none
   */
  public ActionFlow setDialogButtonLabel(java.lang.String dialogButtonLabel) {
    this.dialogButtonLabel = dialogButtonLabel;
    return this;
  }

  /**
   * Important message to be highlighted in the request dialog. For example: "You can only request a
   * review for disagreeing with this issue once. If it's not approved, you'll need to fix the issue
   * and wait a few days before you can request another review."
   * @return value or {@code null} for none
   */
  public Callout getDialogCallout() {
    return dialogCallout;
  }

  /**
   * Important message to be highlighted in the request dialog. For example: "You can only request a
   * review for disagreeing with this issue once. If it's not approved, you'll need to fix the issue
   * and wait a few days before you can request another review."
   * @param dialogCallout dialogCallout or {@code null} for none
   */
  public ActionFlow setDialogCallout(Callout dialogCallout) {
    this.dialogCallout = dialogCallout;
    return this;
  }

  /**
   * Message displayed in the request dialog. For example: "Make sure you've fixed all your country-
   * specific issues. If not, you may have to wait 7 days to request another review". There may be
   * an more information to be shown in a tooltip.
   * @return value or {@code null} for none
   */
  public TextWithTooltip getDialogMessage() {
    return dialogMessage;
  }

  /**
   * Message displayed in the request dialog. For example: "Make sure you've fixed all your country-
   * specific issues. If not, you may have to wait 7 days to request another review". There may be
   * an more information to be shown in a tooltip.
   * @param dialogMessage dialogMessage or {@code null} for none
   */
  public ActionFlow setDialogMessage(TextWithTooltip dialogMessage) {
    this.dialogMessage = dialogMessage;
    return this;
  }

  /**
   * Title of the request dialog. For example: "Before you request a review"
   * @return value or {@code null} for none
   */
  public java.lang.String getDialogTitle() {
    return dialogTitle;
  }

  /**
   * Title of the request dialog. For example: "Before you request a review"
   * @param dialogTitle dialogTitle or {@code null} for none
   */
  public ActionFlow setDialogTitle(java.lang.String dialogTitle) {
    this.dialogTitle = dialogTitle;
    return this;
  }

  /**
   * Not for display but need to be sent back for the selected action flow.
   * @return value or {@code null} for none
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * Not for display but need to be sent back for the selected action flow.
   * @param id id or {@code null} for none
   */
  public ActionFlow setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  /**
   * A list of input fields.
   * @return value or {@code null} for none
   */
  public java.util.List<InputField> getInputs() {
    return inputs;
  }

  /**
   * A list of input fields.
   * @param inputs inputs or {@code null} for none
   */
  public ActionFlow setInputs(java.util.List<InputField> inputs) {
    this.inputs = inputs;
    return this;
  }

  /**
   * Text value describing the intent for the action flow. It can be used as an input label if
   * merchant needs to pick one of multiple flows. For example: "I disagree with the issue"
   * @return value or {@code null} for none
   */
  public java.lang.String getLabel() {
    return label;
  }

  /**
   * Text value describing the intent for the action flow. It can be used as an input label if
   * merchant needs to pick one of multiple flows. For example: "I disagree with the issue"
   * @param label label or {@code null} for none
   */
  public ActionFlow setLabel(java.lang.String label) {
    this.label = label;
    return this;
  }

  @Override
  public ActionFlow set(String fieldName, Object value) {
    return (ActionFlow) super.set(fieldName, value);
  }

  @Override
  public ActionFlow clone() {
    return (ActionFlow) super.clone();
  }

}
