/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudbilling.v1beta.model;

/**
 * Estimated cost for usage on a SKU.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Billing API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class SkuCostEstimate extends com.google.api.client.json.GenericJson {

  /**
   * The estimated cost for the usage on this SKU.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private CostEstimate costEstimate;

  /**
   * The resource name for the SKU. Example: "services/DA34-426B-A397/skus/AA95-CD31-42FE" More
   * information about the SKU can be found in the `skus` field of the `CostEstimationResult`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String sku;

  /**
   * The amount of usage on this SKU.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double usageAmount;

  /**
   * The unit for the usage on this SKU.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String usageUnit;

  /**
   * The estimated cost for the usage on this SKU.
   * @return value or {@code null} for none
   */
  public CostEstimate getCostEstimate() {
    return costEstimate;
  }

  /**
   * The estimated cost for the usage on this SKU.
   * @param costEstimate costEstimate or {@code null} for none
   */
  public SkuCostEstimate setCostEstimate(CostEstimate costEstimate) {
    this.costEstimate = costEstimate;
    return this;
  }

  /**
   * The resource name for the SKU. Example: "services/DA34-426B-A397/skus/AA95-CD31-42FE" More
   * information about the SKU can be found in the `skus` field of the `CostEstimationResult`.
   * @return value or {@code null} for none
   */
  public java.lang.String getSku() {
    return sku;
  }

  /**
   * The resource name for the SKU. Example: "services/DA34-426B-A397/skus/AA95-CD31-42FE" More
   * information about the SKU can be found in the `skus` field of the `CostEstimationResult`.
   * @param sku sku or {@code null} for none
   */
  public SkuCostEstimate setSku(java.lang.String sku) {
    this.sku = sku;
    return this;
  }

  /**
   * The amount of usage on this SKU.
   * @return value or {@code null} for none
   */
  public java.lang.Double getUsageAmount() {
    return usageAmount;
  }

  /**
   * The amount of usage on this SKU.
   * @param usageAmount usageAmount or {@code null} for none
   */
  public SkuCostEstimate setUsageAmount(java.lang.Double usageAmount) {
    this.usageAmount = usageAmount;
    return this;
  }

  /**
   * The unit for the usage on this SKU.
   * @return value or {@code null} for none
   */
  public java.lang.String getUsageUnit() {
    return usageUnit;
  }

  /**
   * The unit for the usage on this SKU.
   * @param usageUnit usageUnit or {@code null} for none
   */
  public SkuCostEstimate setUsageUnit(java.lang.String usageUnit) {
    this.usageUnit = usageUnit;
    return this;
  }

  @Override
  public SkuCostEstimate set(String fieldName, Object value) {
    return (SkuCostEstimate) super.set(fieldName, value);
  }

  @Override
  public SkuCostEstimate clone() {
    return (SkuCostEstimate) super.clone();
  }

}
