/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.chromemanagement.v1.model;

/**
 * Configures how the telemetry data should be filtered.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Chrome Management API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleChromeManagementV1TelemetryNotificationFilter extends com.google.api.client.json.GenericJson {

  /**
   * If set, only sends notifications for telemetry data coming from this device.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String deviceId;

  /**
   * If set, only sends notifications for telemetry data coming from devices in this org unit.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String deviceOrgUnitId;

  /**
   * Only sends notifications for the telemetry events matching this filter.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleChromeManagementV1TelemetryEventNotificationFilter telemetryEventNotificationFilter;

  /**
   * If set, only sends notifications for telemetry data coming from devices owned by this user.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String userEmail;

  /**
   * If set, only sends notifications for telemetry data coming from devices owned by users in this
   * org unit.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String userOrgUnitId;

  /**
   * If set, only sends notifications for telemetry data coming from this device.
   * @return value or {@code null} for none
   */
  public java.lang.String getDeviceId() {
    return deviceId;
  }

  /**
   * If set, only sends notifications for telemetry data coming from this device.
   * @param deviceId deviceId or {@code null} for none
   */
  public GoogleChromeManagementV1TelemetryNotificationFilter setDeviceId(java.lang.String deviceId) {
    this.deviceId = deviceId;
    return this;
  }

  /**
   * If set, only sends notifications for telemetry data coming from devices in this org unit.
   * @return value or {@code null} for none
   */
  public java.lang.String getDeviceOrgUnitId() {
    return deviceOrgUnitId;
  }

  /**
   * If set, only sends notifications for telemetry data coming from devices in this org unit.
   * @param deviceOrgUnitId deviceOrgUnitId or {@code null} for none
   */
  public GoogleChromeManagementV1TelemetryNotificationFilter setDeviceOrgUnitId(java.lang.String deviceOrgUnitId) {
    this.deviceOrgUnitId = deviceOrgUnitId;
    return this;
  }

  /**
   * Only sends notifications for the telemetry events matching this filter.
   * @return value or {@code null} for none
   */
  public GoogleChromeManagementV1TelemetryEventNotificationFilter getTelemetryEventNotificationFilter() {
    return telemetryEventNotificationFilter;
  }

  /**
   * Only sends notifications for the telemetry events matching this filter.
   * @param telemetryEventNotificationFilter telemetryEventNotificationFilter or {@code null} for none
   */
  public GoogleChromeManagementV1TelemetryNotificationFilter setTelemetryEventNotificationFilter(GoogleChromeManagementV1TelemetryEventNotificationFilter telemetryEventNotificationFilter) {
    this.telemetryEventNotificationFilter = telemetryEventNotificationFilter;
    return this;
  }

  /**
   * If set, only sends notifications for telemetry data coming from devices owned by this user.
   * @return value or {@code null} for none
   */
  public java.lang.String getUserEmail() {
    return userEmail;
  }

  /**
   * If set, only sends notifications for telemetry data coming from devices owned by this user.
   * @param userEmail userEmail or {@code null} for none
   */
  public GoogleChromeManagementV1TelemetryNotificationFilter setUserEmail(java.lang.String userEmail) {
    this.userEmail = userEmail;
    return this;
  }

  /**
   * If set, only sends notifications for telemetry data coming from devices owned by users in this
   * org unit.
   * @return value or {@code null} for none
   */
  public java.lang.String getUserOrgUnitId() {
    return userOrgUnitId;
  }

  /**
   * If set, only sends notifications for telemetry data coming from devices owned by users in this
   * org unit.
   * @param userOrgUnitId userOrgUnitId or {@code null} for none
   */
  public GoogleChromeManagementV1TelemetryNotificationFilter setUserOrgUnitId(java.lang.String userOrgUnitId) {
    this.userOrgUnitId = userOrgUnitId;
    return this;
  }

  @Override
  public GoogleChromeManagementV1TelemetryNotificationFilter set(String fieldName, Object value) {
    return (GoogleChromeManagementV1TelemetryNotificationFilter) super.set(fieldName, value);
  }

  @Override
  public GoogleChromeManagementV1TelemetryNotificationFilter clone() {
    return (GoogleChromeManagementV1TelemetryNotificationFilter) super.clone();
  }

}
