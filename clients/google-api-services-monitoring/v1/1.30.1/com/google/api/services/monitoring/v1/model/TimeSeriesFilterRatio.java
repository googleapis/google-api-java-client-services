/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.monitoring.v1.model;

/**
 * A pair of time series filters that define a ratio computation. The output time series is the
 * pair-wise division of each aligned element from the numerator and denominator time series.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Monitoring API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class TimeSeriesFilterRatio extends com.google.api.client.json.GenericJson {

  /**
   * The denominator of the ratio.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private RatioPart denominator;

  /**
   * The numerator of the ratio.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private RatioPart numerator;

  /**
   * Ranking based time series filter.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private PickTimeSeriesFilter pickTimeSeriesFilter;

  /**
   * Apply a second aggregation after the ratio is computed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Aggregation secondaryAggregation;

  /**
   * Statistics based time series filter. Note: This field is deprecated and completely ignored by
   * the API.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private StatisticalTimeSeriesFilter statisticalTimeSeriesFilter;

  /**
   * The denominator of the ratio.
   * @return value or {@code null} for none
   */
  public RatioPart getDenominator() {
    return denominator;
  }

  /**
   * The denominator of the ratio.
   * @param denominator denominator or {@code null} for none
   */
  public TimeSeriesFilterRatio setDenominator(RatioPart denominator) {
    this.denominator = denominator;
    return this;
  }

  /**
   * The numerator of the ratio.
   * @return value or {@code null} for none
   */
  public RatioPart getNumerator() {
    return numerator;
  }

  /**
   * The numerator of the ratio.
   * @param numerator numerator or {@code null} for none
   */
  public TimeSeriesFilterRatio setNumerator(RatioPart numerator) {
    this.numerator = numerator;
    return this;
  }

  /**
   * Ranking based time series filter.
   * @return value or {@code null} for none
   */
  public PickTimeSeriesFilter getPickTimeSeriesFilter() {
    return pickTimeSeriesFilter;
  }

  /**
   * Ranking based time series filter.
   * @param pickTimeSeriesFilter pickTimeSeriesFilter or {@code null} for none
   */
  public TimeSeriesFilterRatio setPickTimeSeriesFilter(PickTimeSeriesFilter pickTimeSeriesFilter) {
    this.pickTimeSeriesFilter = pickTimeSeriesFilter;
    return this;
  }

  /**
   * Apply a second aggregation after the ratio is computed.
   * @return value or {@code null} for none
   */
  public Aggregation getSecondaryAggregation() {
    return secondaryAggregation;
  }

  /**
   * Apply a second aggregation after the ratio is computed.
   * @param secondaryAggregation secondaryAggregation or {@code null} for none
   */
  public TimeSeriesFilterRatio setSecondaryAggregation(Aggregation secondaryAggregation) {
    this.secondaryAggregation = secondaryAggregation;
    return this;
  }

  /**
   * Statistics based time series filter. Note: This field is deprecated and completely ignored by
   * the API.
   * @return value or {@code null} for none
   */
  public StatisticalTimeSeriesFilter getStatisticalTimeSeriesFilter() {
    return statisticalTimeSeriesFilter;
  }

  /**
   * Statistics based time series filter. Note: This field is deprecated and completely ignored by
   * the API.
   * @param statisticalTimeSeriesFilter statisticalTimeSeriesFilter or {@code null} for none
   */
  public TimeSeriesFilterRatio setStatisticalTimeSeriesFilter(StatisticalTimeSeriesFilter statisticalTimeSeriesFilter) {
    this.statisticalTimeSeriesFilter = statisticalTimeSeriesFilter;
    return this;
  }

  @Override
  public TimeSeriesFilterRatio set(String fieldName, Object value) {
    return (TimeSeriesFilterRatio) super.set(fieldName, value);
  }

  @Override
  public TimeSeriesFilterRatio clone() {
    return (TimeSeriesFilterRatio) super.clone();
  }

}
