/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.identitytoolkit.v1.model;

/**
 * Request message for SignUp.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Identity Toolkit API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudIdentitytoolkitV1SignUpRequest extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String captchaChallenge;

  /**
   * The reCAPTCHA token provided by the reCAPTCHA client-side integration. reCAPTCHA Enterprise
   * uses it for assessment. Required when reCAPTCHA enterprise is enabled.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String captchaResponse;

  /**
   * Whether the user will be disabled upon creation. Disabled accounts are inaccessible except for
   * requests bearing a Google OAuth2 credential with proper [permissions](https://cloud.google.com
   * /identity-platform/docs/access-control).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean disabled;

  /**
   * The display name of the user to be created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * The email to assign to the created user. The length of the email should be less than 256
   * characters and in the format of `name@domain.tld`. The email should also match the [RFC
   * 822](https://tools.ietf.org/html/rfc822) addr-spec production. An anonymous user will be
   * created if not provided.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String email;

  /**
   * Whether the user's email is verified. Specifying this field requires a Google OAuth 2.0
   * credential with the proper [permissions](https://cloud.google.com/identity-platform/docs
   * /access-control).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean emailVerified;

  /**
   * A valid ID token for an Identity Platform user. If set, this request will link the
   * authentication credential to the user represented by this ID token. For a non-admin request,
   * both the `email` and `password` fields must be set. For an admin request, `local_id` must not
   * be set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String idToken;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String instanceId;

  /**
   * The ID of the user to create. The ID must be unique within the project that the user is being
   * created under. Specifying this field requires a Google OAuth 2.0 credential with the proper
   * [permissions](https://cloud.google.com/identity-platform/docs/access-control).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String localId;

  /**
   * The multi-factor authentication providers for the user to create.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudIdentitytoolkitV1MfaFactor> mfaInfo;

  static {
    // hack to force ProGuard to consider GoogleCloudIdentitytoolkitV1MfaFactor used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(GoogleCloudIdentitytoolkitV1MfaFactor.class);
  }

  /**
   * The password to assign to the created user. The password must be be at least 6 characters long.
   * If set, the `email` field must also be set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String password;

  /**
   * The phone number of the user to create. Specifying this field requires a Google OAuth 2.0
   * credential with the proper [permissions](https://cloud.google.com/identity-platform/docs
   * /access-control).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String phoneNumber;

  /**
   * The profile photo url of the user to create.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String photoUrl;

  /**
   * The project ID of the project which the user should belong to. Specifying this field requires a
   * Google OAuth 2.0 credential with the proper [permissions](https://cloud.google.com/identity-
   * platform/docs/access-control). If this is not set, the target project is inferred from the
   * scope associated to the Bearer access token.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String targetProjectId;

  /**
   * The ID of the Identity Platform tenant to create a user under. If not set, the user will be
   * created under the default Identity Platform project.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String tenantId;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getCaptchaChallenge() {
    return captchaChallenge;
  }

  /**
   * @param captchaChallenge captchaChallenge or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV1SignUpRequest setCaptchaChallenge(java.lang.String captchaChallenge) {
    this.captchaChallenge = captchaChallenge;
    return this;
  }

  /**
   * The reCAPTCHA token provided by the reCAPTCHA client-side integration. reCAPTCHA Enterprise
   * uses it for assessment. Required when reCAPTCHA enterprise is enabled.
   * @return value or {@code null} for none
   */
  public java.lang.String getCaptchaResponse() {
    return captchaResponse;
  }

  /**
   * The reCAPTCHA token provided by the reCAPTCHA client-side integration. reCAPTCHA Enterprise
   * uses it for assessment. Required when reCAPTCHA enterprise is enabled.
   * @param captchaResponse captchaResponse or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV1SignUpRequest setCaptchaResponse(java.lang.String captchaResponse) {
    this.captchaResponse = captchaResponse;
    return this;
  }

  /**
   * Whether the user will be disabled upon creation. Disabled accounts are inaccessible except for
   * requests bearing a Google OAuth2 credential with proper [permissions](https://cloud.google.com
   * /identity-platform/docs/access-control).
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getDisabled() {
    return disabled;
  }

  /**
   * Whether the user will be disabled upon creation. Disabled accounts are inaccessible except for
   * requests bearing a Google OAuth2 credential with proper [permissions](https://cloud.google.com
   * /identity-platform/docs/access-control).
   * @param disabled disabled or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV1SignUpRequest setDisabled(java.lang.Boolean disabled) {
    this.disabled = disabled;
    return this;
  }

  /**
   * The display name of the user to be created.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * The display name of the user to be created.
   * @param displayName displayName or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV1SignUpRequest setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * The email to assign to the created user. The length of the email should be less than 256
   * characters and in the format of `name@domain.tld`. The email should also match the [RFC
   * 822](https://tools.ietf.org/html/rfc822) addr-spec production. An anonymous user will be
   * created if not provided.
   * @return value or {@code null} for none
   */
  public java.lang.String getEmail() {
    return email;
  }

  /**
   * The email to assign to the created user. The length of the email should be less than 256
   * characters and in the format of `name@domain.tld`. The email should also match the [RFC
   * 822](https://tools.ietf.org/html/rfc822) addr-spec production. An anonymous user will be
   * created if not provided.
   * @param email email or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV1SignUpRequest setEmail(java.lang.String email) {
    this.email = email;
    return this;
  }

  /**
   * Whether the user's email is verified. Specifying this field requires a Google OAuth 2.0
   * credential with the proper [permissions](https://cloud.google.com/identity-platform/docs
   * /access-control).
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getEmailVerified() {
    return emailVerified;
  }

  /**
   * Whether the user's email is verified. Specifying this field requires a Google OAuth 2.0
   * credential with the proper [permissions](https://cloud.google.com/identity-platform/docs
   * /access-control).
   * @param emailVerified emailVerified or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV1SignUpRequest setEmailVerified(java.lang.Boolean emailVerified) {
    this.emailVerified = emailVerified;
    return this;
  }

  /**
   * A valid ID token for an Identity Platform user. If set, this request will link the
   * authentication credential to the user represented by this ID token. For a non-admin request,
   * both the `email` and `password` fields must be set. For an admin request, `local_id` must not
   * be set.
   * @return value or {@code null} for none
   */
  public java.lang.String getIdToken() {
    return idToken;
  }

  /**
   * A valid ID token for an Identity Platform user. If set, this request will link the
   * authentication credential to the user represented by this ID token. For a non-admin request,
   * both the `email` and `password` fields must be set. For an admin request, `local_id` must not
   * be set.
   * @param idToken idToken or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV1SignUpRequest setIdToken(java.lang.String idToken) {
    this.idToken = idToken;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getInstanceId() {
    return instanceId;
  }

  /**
   * @param instanceId instanceId or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV1SignUpRequest setInstanceId(java.lang.String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

  /**
   * The ID of the user to create. The ID must be unique within the project that the user is being
   * created under. Specifying this field requires a Google OAuth 2.0 credential with the proper
   * [permissions](https://cloud.google.com/identity-platform/docs/access-control).
   * @return value or {@code null} for none
   */
  public java.lang.String getLocalId() {
    return localId;
  }

  /**
   * The ID of the user to create. The ID must be unique within the project that the user is being
   * created under. Specifying this field requires a Google OAuth 2.0 credential with the proper
   * [permissions](https://cloud.google.com/identity-platform/docs/access-control).
   * @param localId localId or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV1SignUpRequest setLocalId(java.lang.String localId) {
    this.localId = localId;
    return this;
  }

  /**
   * The multi-factor authentication providers for the user to create.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudIdentitytoolkitV1MfaFactor> getMfaInfo() {
    return mfaInfo;
  }

  /**
   * The multi-factor authentication providers for the user to create.
   * @param mfaInfo mfaInfo or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV1SignUpRequest setMfaInfo(java.util.List<GoogleCloudIdentitytoolkitV1MfaFactor> mfaInfo) {
    this.mfaInfo = mfaInfo;
    return this;
  }

  /**
   * The password to assign to the created user. The password must be be at least 6 characters long.
   * If set, the `email` field must also be set.
   * @return value or {@code null} for none
   */
  public java.lang.String getPassword() {
    return password;
  }

  /**
   * The password to assign to the created user. The password must be be at least 6 characters long.
   * If set, the `email` field must also be set.
   * @param password password or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV1SignUpRequest setPassword(java.lang.String password) {
    this.password = password;
    return this;
  }

  /**
   * The phone number of the user to create. Specifying this field requires a Google OAuth 2.0
   * credential with the proper [permissions](https://cloud.google.com/identity-platform/docs
   * /access-control).
   * @return value or {@code null} for none
   */
  public java.lang.String getPhoneNumber() {
    return phoneNumber;
  }

  /**
   * The phone number of the user to create. Specifying this field requires a Google OAuth 2.0
   * credential with the proper [permissions](https://cloud.google.com/identity-platform/docs
   * /access-control).
   * @param phoneNumber phoneNumber or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV1SignUpRequest setPhoneNumber(java.lang.String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

  /**
   * The profile photo url of the user to create.
   * @return value or {@code null} for none
   */
  public java.lang.String getPhotoUrl() {
    return photoUrl;
  }

  /**
   * The profile photo url of the user to create.
   * @param photoUrl photoUrl or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV1SignUpRequest setPhotoUrl(java.lang.String photoUrl) {
    this.photoUrl = photoUrl;
    return this;
  }

  /**
   * The project ID of the project which the user should belong to. Specifying this field requires a
   * Google OAuth 2.0 credential with the proper [permissions](https://cloud.google.com/identity-
   * platform/docs/access-control). If this is not set, the target project is inferred from the
   * scope associated to the Bearer access token.
   * @return value or {@code null} for none
   */
  public java.lang.String getTargetProjectId() {
    return targetProjectId;
  }

  /**
   * The project ID of the project which the user should belong to. Specifying this field requires a
   * Google OAuth 2.0 credential with the proper [permissions](https://cloud.google.com/identity-
   * platform/docs/access-control). If this is not set, the target project is inferred from the
   * scope associated to the Bearer access token.
   * @param targetProjectId targetProjectId or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV1SignUpRequest setTargetProjectId(java.lang.String targetProjectId) {
    this.targetProjectId = targetProjectId;
    return this;
  }

  /**
   * The ID of the Identity Platform tenant to create a user under. If not set, the user will be
   * created under the default Identity Platform project.
   * @return value or {@code null} for none
   */
  public java.lang.String getTenantId() {
    return tenantId;
  }

  /**
   * The ID of the Identity Platform tenant to create a user under. If not set, the user will be
   * created under the default Identity Platform project.
   * @param tenantId tenantId or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV1SignUpRequest setTenantId(java.lang.String tenantId) {
    this.tenantId = tenantId;
    return this;
  }

  @Override
  public GoogleCloudIdentitytoolkitV1SignUpRequest set(String fieldName, Object value) {
    return (GoogleCloudIdentitytoolkitV1SignUpRequest) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudIdentitytoolkitV1SignUpRequest clone() {
    return (GoogleCloudIdentitytoolkitV1SignUpRequest) super.clone();
  }

}
