/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * A segment path describes a path through a short set of segments. The segment path can be used for
 * any purpose. At the moment, only TYPE_ROAD_SIGN features can have associated segment paths: The
 * segment path lists the segments that refer to the sign. These are the segments for which the sign
 * is applicable. The sign's physical location is independent of the segments in the path.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GeostoreSegmentPathProto extends com.google.api.client.json.GenericJson {

  /**
   * Specifies a sequence of feature ids of GeoStore segments. The feature ids are ordered. The path
   * "AB" is not the same as the path "BA". The segments along the path are assumed to be connected
   * via the appropriate intersections. The segment features that are referenced by this subpath
   * refer to this feature back via the road_sign field in segment proto extension.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GeostoreFeatureIdProto> subpath;

  static {
    // hack to force ProGuard to consider GeostoreFeatureIdProto used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(GeostoreFeatureIdProto.class);
  }

  /**
   * Specifies a sequence of feature ids of GeoStore segments. The feature ids are ordered. The path
   * "AB" is not the same as the path "BA". The segments along the path are assumed to be connected
   * via the appropriate intersections. The segment features that are referenced by this subpath
   * refer to this feature back via the road_sign field in segment proto extension.
   * @return value or {@code null} for none
   */
  public java.util.List<GeostoreFeatureIdProto> getSubpath() {
    return subpath;
  }

  /**
   * Specifies a sequence of feature ids of GeoStore segments. The feature ids are ordered. The path
   * "AB" is not the same as the path "BA". The segments along the path are assumed to be connected
   * via the appropriate intersections. The segment features that are referenced by this subpath
   * refer to this feature back via the road_sign field in segment proto extension.
   * @param subpath subpath or {@code null} for none
   */
  public GeostoreSegmentPathProto setSubpath(java.util.List<GeostoreFeatureIdProto> subpath) {
    this.subpath = subpath;
    return this;
  }

  @Override
  public GeostoreSegmentPathProto set(String fieldName, Object value) {
    return (GeostoreSegmentPathProto) super.set(fieldName, value);
  }

  @Override
  public GeostoreSegmentPathProto clone() {
    return (GeostoreSegmentPathProto) super.clone();
  }

}
