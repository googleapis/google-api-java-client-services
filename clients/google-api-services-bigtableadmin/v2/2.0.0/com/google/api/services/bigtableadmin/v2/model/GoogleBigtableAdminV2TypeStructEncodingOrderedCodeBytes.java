/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.bigtableadmin.v2.model;

/**
 * Fields are encoded independently and concatenated with the fixed byte pair {0x00, 0x01} in
 * between. Any null (0x00) byte in an encoded field is replaced by the fixed byte pair {0x00,
 * 0xFF}. Fields that encode to the empty string "" have special handling: - If *every* field
 * encodes to "", or if the STRUCT has no fields defined, then the STRUCT is encoded as the fixed
 * byte pair {0x00, 0x00}. - Otherwise, the STRUCT only encodes until the last non-empty field,
 * omitting any trailing empty fields. Any empty fields that aren't omitted are replaced with the
 * fixed byte pair {0x00, 0x00}. Examples: - STRUCT() -> "\00\00" - STRUCT("") -> "\00\00" -
 * STRUCT("", "") -> "\00\00" - STRUCT("", "B") -> "\00\00" + "\00\01" + "B" - STRUCT("A", "") ->
 * "A" - STRUCT("", "B", "") -> "\00\00" + "\00\01" + "B" - STRUCT("A", "", "C") -> "A" + "\00\01" +
 * "\00\00" + "\00\01" + "C" Since null bytes are always escaped, this encoding can cause size
 * blowup for encodings like `Int64.BigEndianBytes` that are likely to produce many such bytes.
 * Sorted mode: - Fields are encoded in sorted mode. - All values supported by the field encodings
 * are allowed - Element-wise order is preserved: `A < B` if `A[0] < B[0]`, or if `A[0] == B[0] &&
 * A[1] < B[1]`, etc. Strict prefixes sort first. Distinct mode: - Fields are encoded in distinct
 * mode. - All values supported by the field encodings are allowed.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Bigtable Admin API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleBigtableAdminV2TypeStructEncodingOrderedCodeBytes extends com.google.api.client.json.GenericJson {

  @Override
  public GoogleBigtableAdminV2TypeStructEncodingOrderedCodeBytes set(String fieldName, Object value) {
    return (GoogleBigtableAdminV2TypeStructEncodingOrderedCodeBytes) super.set(fieldName, value);
  }

  @Override
  public GoogleBigtableAdminV2TypeStructEncodingOrderedCodeBytes clone() {
    return (GoogleBigtableAdminV2TypeStructEncodingOrderedCodeBytes) super.clone();
  }

}
