/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.pollen.v1.model;

/**
 * This object contains data representing specific pollen index value, category and description.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Pollen API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class IndexInfo extends com.google.api.client.json.GenericJson {

  /**
   * Text classification of index numerical score interpretation. The index consists of six
   * categories: * 0: "None" * 1: "Very low" * 2: "Low" * 3: "Moderate" * 4: "High" * 5: "Very high
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String category;

  /**
   * The index's code. This field represents the index for programming purposes by using snake cases
   * instead of spaces. Example: "UPI".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String code;

  /**
   * The color used to represent the Pollen Index numeric score.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Color color;

  /**
   * A human readable representation of the index name. Example: "Universal Pollen Index".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Textual explanation of current index level.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String indexDescription;

  /**
   * The index's numeric score. Numeric range is between 0 and 5.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer value;

  /**
   * Text classification of index numerical score interpretation. The index consists of six
   * categories: * 0: "None" * 1: "Very low" * 2: "Low" * 3: "Moderate" * 4: "High" * 5: "Very high
   * @return value or {@code null} for none
   */
  public java.lang.String getCategory() {
    return category;
  }

  /**
   * Text classification of index numerical score interpretation. The index consists of six
   * categories: * 0: "None" * 1: "Very low" * 2: "Low" * 3: "Moderate" * 4: "High" * 5: "Very high
   * @param category category or {@code null} for none
   */
  public IndexInfo setCategory(java.lang.String category) {
    this.category = category;
    return this;
  }

  /**
   * The index's code. This field represents the index for programming purposes by using snake cases
   * instead of spaces. Example: "UPI".
   * @return value or {@code null} for none
   */
  public java.lang.String getCode() {
    return code;
  }

  /**
   * The index's code. This field represents the index for programming purposes by using snake cases
   * instead of spaces. Example: "UPI".
   * @param code code or {@code null} for none
   */
  public IndexInfo setCode(java.lang.String code) {
    this.code = code;
    return this;
  }

  /**
   * The color used to represent the Pollen Index numeric score.
   * @return value or {@code null} for none
   */
  public Color getColor() {
    return color;
  }

  /**
   * The color used to represent the Pollen Index numeric score.
   * @param color color or {@code null} for none
   */
  public IndexInfo setColor(Color color) {
    this.color = color;
    return this;
  }

  /**
   * A human readable representation of the index name. Example: "Universal Pollen Index".
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * A human readable representation of the index name. Example: "Universal Pollen Index".
   * @param displayName displayName or {@code null} for none
   */
  public IndexInfo setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Textual explanation of current index level.
   * @return value or {@code null} for none
   */
  public java.lang.String getIndexDescription() {
    return indexDescription;
  }

  /**
   * Textual explanation of current index level.
   * @param indexDescription indexDescription or {@code null} for none
   */
  public IndexInfo setIndexDescription(java.lang.String indexDescription) {
    this.indexDescription = indexDescription;
    return this;
  }

  /**
   * The index's numeric score. Numeric range is between 0 and 5.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getValue() {
    return value;
  }

  /**
   * The index's numeric score. Numeric range is between 0 and 5.
   * @param value value or {@code null} for none
   */
  public IndexInfo setValue(java.lang.Integer value) {
    this.value = value;
    return this;
  }

  @Override
  public IndexInfo set(String fieldName, Object value) {
    return (IndexInfo) super.set(fieldName, value);
  }

  @Override
  public IndexInfo clone() {
    return (IndexInfo) super.clone();
  }

}
