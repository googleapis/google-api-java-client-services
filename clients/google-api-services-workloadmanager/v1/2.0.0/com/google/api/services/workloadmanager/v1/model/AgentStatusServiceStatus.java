/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.workloadmanager.v1.model;

/**
 * The status of a service (process metrics, host metrics, etc.).
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Workload Manager API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AgentStatusServiceStatus extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The configuration values for the service.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AgentStatusConfigValue> configValues;

  static {
    // hack to force ProGuard to consider AgentStatusConfigValue used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(AgentStatusConfigValue.class);
  }

  /**
   * Output only. The error message for the service if it is not fully functional.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String errorMessage;

  /**
   * Output only. Whether the service is fully functional (all checks passed).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String fullyFunctional;

  /**
   * Output only. The permissions required for the service.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AgentStatusIAMPermission> iamPermissions;

  static {
    // hack to force ProGuard to consider AgentStatusIAMPermission used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(AgentStatusIAMPermission.class);
  }

  /**
   * Output only. The name of the service.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. The state of the service (enabled or disabled in the configuration).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Output only. The message to display when the service state is unspecified.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String unspecifiedStateMessage;

  /**
   * Output only. The configuration values for the service.
   * @return value or {@code null} for none
   */
  public java.util.List<AgentStatusConfigValue> getConfigValues() {
    return configValues;
  }

  /**
   * Output only. The configuration values for the service.
   * @param configValues configValues or {@code null} for none
   */
  public AgentStatusServiceStatus setConfigValues(java.util.List<AgentStatusConfigValue> configValues) {
    this.configValues = configValues;
    return this;
  }

  /**
   * Output only. The error message for the service if it is not fully functional.
   * @return value or {@code null} for none
   */
  public java.lang.String getErrorMessage() {
    return errorMessage;
  }

  /**
   * Output only. The error message for the service if it is not fully functional.
   * @param errorMessage errorMessage or {@code null} for none
   */
  public AgentStatusServiceStatus setErrorMessage(java.lang.String errorMessage) {
    this.errorMessage = errorMessage;
    return this;
  }

  /**
   * Output only. Whether the service is fully functional (all checks passed).
   * @return value or {@code null} for none
   */
  public java.lang.String getFullyFunctional() {
    return fullyFunctional;
  }

  /**
   * Output only. Whether the service is fully functional (all checks passed).
   * @param fullyFunctional fullyFunctional or {@code null} for none
   */
  public AgentStatusServiceStatus setFullyFunctional(java.lang.String fullyFunctional) {
    this.fullyFunctional = fullyFunctional;
    return this;
  }

  /**
   * Output only. The permissions required for the service.
   * @return value or {@code null} for none
   */
  public java.util.List<AgentStatusIAMPermission> getIamPermissions() {
    return iamPermissions;
  }

  /**
   * Output only. The permissions required for the service.
   * @param iamPermissions iamPermissions or {@code null} for none
   */
  public AgentStatusServiceStatus setIamPermissions(java.util.List<AgentStatusIAMPermission> iamPermissions) {
    this.iamPermissions = iamPermissions;
    return this;
  }

  /**
   * Output only. The name of the service.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. The name of the service.
   * @param name name or {@code null} for none
   */
  public AgentStatusServiceStatus setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. The state of the service (enabled or disabled in the configuration).
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. The state of the service (enabled or disabled in the configuration).
   * @param state state or {@code null} for none
   */
  public AgentStatusServiceStatus setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Output only. The message to display when the service state is unspecified.
   * @return value or {@code null} for none
   */
  public java.lang.String getUnspecifiedStateMessage() {
    return unspecifiedStateMessage;
  }

  /**
   * Output only. The message to display when the service state is unspecified.
   * @param unspecifiedStateMessage unspecifiedStateMessage or {@code null} for none
   */
  public AgentStatusServiceStatus setUnspecifiedStateMessage(java.lang.String unspecifiedStateMessage) {
    this.unspecifiedStateMessage = unspecifiedStateMessage;
    return this;
  }

  @Override
  public AgentStatusServiceStatus set(String fieldName, Object value) {
    return (AgentStatusServiceStatus) super.set(fieldName, value);
  }

  @Override
  public AgentStatusServiceStatus clone() {
    return (AgentStatusServiceStatus) super.clone();
  }

}
