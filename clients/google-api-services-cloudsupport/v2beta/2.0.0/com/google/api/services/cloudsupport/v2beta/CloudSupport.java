/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudsupport.v2beta;

/**
 * Service definition for CloudSupport (v2beta).
 *
 * <p>
 * Manages Google Cloud technical support cases for Customer Care support offerings. 
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/support/docs/apis" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link CloudSupportRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class CloudSupport extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        (com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1))) ||
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION >= 2,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "2.0.0 of the Google Cloud Support API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://cloudsupport.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://cloudsupport.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public CloudSupport(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  CloudSupport(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the CaseClassifications collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code CloudSupport cloudsupport = new CloudSupport(...);}
   *   {@code CloudSupport.CaseClassifications.List request = cloudsupport.caseClassifications().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public CaseClassifications caseClassifications() {
    return new CaseClassifications();
  }

  /**
   * The "caseClassifications" collection of methods.
   */
  public class CaseClassifications {

    /**
     * Retrieve valid classifications to be used when creating a support case. The classications are
     * hierarchical, with each classification containing all levels of the hierarchy, separated by " >
     * ". For example "Technical Issue > Compute > Compute Engine".
     *
     * Create a request for the method "caseClassifications.search".
     *
     * This request holds the parameters needed by the cloudsupport server.  After setting any optional
     * parameters, call the {@link Search#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public Search search() throws java.io.IOException {
      Search result = new Search();
      initialize(result);
      return result;
    }

    public class Search extends CloudSupportRequest<com.google.api.services.cloudsupport.v2beta.model.SearchCaseClassificationsResponse> {

      private static final String REST_PATH = "v2beta/caseClassifications:search";

      /**
       * Retrieve valid classifications to be used when creating a support case. The classications are
       * hierarchical, with each classification containing all levels of the hierarchy, separated by " >
       * ". For example "Technical Issue > Compute > Compute Engine".
       *
       * Create a request for the method "caseClassifications.search".
       *
       * This request holds the parameters needed by the the cloudsupport server.  After setting any
       * optional parameters, call the {@link Search#execute()} method to invoke the remote operation.
       * <p> {@link
       * Search#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected Search() {
        super(CloudSupport.this, "GET", REST_PATH, null, com.google.api.services.cloudsupport.v2beta.model.SearchCaseClassificationsResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Search set$Xgafv(java.lang.String $Xgafv) {
        return (Search) super.set$Xgafv($Xgafv);
      }

      @Override
      public Search setAccessToken(java.lang.String accessToken) {
        return (Search) super.setAccessToken(accessToken);
      }

      @Override
      public Search setAlt(java.lang.String alt) {
        return (Search) super.setAlt(alt);
      }

      @Override
      public Search setCallback(java.lang.String callback) {
        return (Search) super.setCallback(callback);
      }

      @Override
      public Search setFields(java.lang.String fields) {
        return (Search) super.setFields(fields);
      }

      @Override
      public Search setKey(java.lang.String key) {
        return (Search) super.setKey(key);
      }

      @Override
      public Search setOauthToken(java.lang.String oauthToken) {
        return (Search) super.setOauthToken(oauthToken);
      }

      @Override
      public Search setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Search) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Search setQuotaUser(java.lang.String quotaUser) {
        return (Search) super.setQuotaUser(quotaUser);
      }

      @Override
      public Search setUploadType(java.lang.String uploadType) {
        return (Search) super.setUploadType(uploadType);
      }

      @Override
      public Search setUploadProtocol(java.lang.String uploadProtocol) {
        return (Search) super.setUploadProtocol(uploadProtocol);
      }

      /** The maximum number of cases fetched with each request. */
      @com.google.api.client.util.Key
      private java.lang.Integer pageSize;

      /** The maximum number of cases fetched with each request.
       */
      public java.lang.Integer getPageSize() {
        return pageSize;
      }

      /** The maximum number of cases fetched with each request. */
      public Search setPageSize(java.lang.Integer pageSize) {
        this.pageSize = pageSize;
        return this;
      }

      /**
       * A token identifying the page of results to return. If unspecified, the first page is
       * retrieved.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** A token identifying the page of results to return. If unspecified, the first page is retrieved.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * A token identifying the page of results to return. If unspecified, the first page is
       * retrieved.
       */
      public Search setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      /**
       * An expression written in the Cloud filter language. If non-empty, then only cases whose
       * fields match the filter are returned. If empty, then no messages are filtered out.
       */
      @com.google.api.client.util.Key
      private java.lang.String query;

      /** An expression written in the Cloud filter language. If non-empty, then only cases whose fields
     match the filter are returned. If empty, then no messages are filtered out.
       */
      public java.lang.String getQuery() {
        return query;
      }

      /**
       * An expression written in the Cloud filter language. If non-empty, then only cases whose
       * fields match the filter are returned. If empty, then no messages are filtered out.
       */
      public Search setQuery(java.lang.String query) {
        this.query = query;
        return this;
      }

      @Override
      public Search set(String parameterName, Object value) {
        return (Search) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Cases collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code CloudSupport cloudsupport = new CloudSupport(...);}
   *   {@code CloudSupport.Cases.List request = cloudsupport.cases().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Cases cases() {
    return new Cases();
  }

  /**
   * The "cases" collection of methods.
   */
  public class Cases {

    /**
     * Close the specified case.
     *
     * Create a request for the method "cases.close".
     *
     * This request holds the parameters needed by the cloudsupport server.  After setting any optional
     * parameters, call the {@link Close#execute()} method to invoke the remote operation.
     *
     * @param name Required. The fully qualified name of the case resource to be closed.
     * @param content the {@link com.google.api.services.cloudsupport.v2beta.model.CloseCaseRequest}
     * @return the request
     */
    public Close close(java.lang.String name, com.google.api.services.cloudsupport.v2beta.model.CloseCaseRequest content) throws java.io.IOException {
      Close result = new Close(name, content);
      initialize(result);
      return result;
    }

    public class Close extends CloudSupportRequest<com.google.api.services.cloudsupport.v2beta.model.CloudSupportCase> {

      private static final String REST_PATH = "v2beta/{+name}:close";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^[^/]+/[^/]+/cases/[^/]+$");

      /**
       * Close the specified case.
       *
       * Create a request for the method "cases.close".
       *
       * This request holds the parameters needed by the the cloudsupport server.  After setting any
       * optional parameters, call the {@link Close#execute()} method to invoke the remote operation.
       * <p> {@link
       * Close#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Required. The fully qualified name of the case resource to be closed.
       * @param content the {@link com.google.api.services.cloudsupport.v2beta.model.CloseCaseRequest}
       * @since 1.13
       */
      protected Close(java.lang.String name, com.google.api.services.cloudsupport.v2beta.model.CloseCaseRequest content) {
        super(CloudSupport.this, "POST", REST_PATH, content, com.google.api.services.cloudsupport.v2beta.model.CloudSupportCase.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^[^/]+/[^/]+/cases/[^/]+$");
        }
      }

      @Override
      public Close set$Xgafv(java.lang.String $Xgafv) {
        return (Close) super.set$Xgafv($Xgafv);
      }

      @Override
      public Close setAccessToken(java.lang.String accessToken) {
        return (Close) super.setAccessToken(accessToken);
      }

      @Override
      public Close setAlt(java.lang.String alt) {
        return (Close) super.setAlt(alt);
      }

      @Override
      public Close setCallback(java.lang.String callback) {
        return (Close) super.setCallback(callback);
      }

      @Override
      public Close setFields(java.lang.String fields) {
        return (Close) super.setFields(fields);
      }

      @Override
      public Close setKey(java.lang.String key) {
        return (Close) super.setKey(key);
      }

      @Override
      public Close setOauthToken(java.lang.String oauthToken) {
        return (Close) super.setOauthToken(oauthToken);
      }

      @Override
      public Close setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Close) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Close setQuotaUser(java.lang.String quotaUser) {
        return (Close) super.setQuotaUser(quotaUser);
      }

      @Override
      public Close setUploadType(java.lang.String uploadType) {
        return (Close) super.setUploadType(uploadType);
      }

      @Override
      public Close setUploadProtocol(java.lang.String uploadProtocol) {
        return (Close) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The fully qualified name of the case resource to be closed. */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. The fully qualified name of the case resource to be closed.
       */
      public java.lang.String getName() {
        return name;
      }

      /** Required. The fully qualified name of the case resource to be closed. */
      public Close setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^[^/]+/[^/]+/cases/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Close set(String parameterName, Object value) {
        return (Close) super.set(parameterName, value);
      }
    }
    /**
     * Create a new case and associate it with the given Cloud resource. The case object must have the
     * following fields set: display_name, description, classification, and severity.
     *
     * Create a request for the method "cases.create".
     *
     * This request holds the parameters needed by the cloudsupport server.  After setting any optional
     * parameters, call the {@link Create#execute()} method to invoke the remote operation.
     *
     * @param parent Required. The name of the Cloud resource under which the case should be created.
     * @param content the {@link com.google.api.services.cloudsupport.v2beta.model.CloudSupportCase}
     * @return the request
     */
    public Create create(java.lang.String parent, com.google.api.services.cloudsupport.v2beta.model.CloudSupportCase content) throws java.io.IOException {
      Create result = new Create(parent, content);
      initialize(result);
      return result;
    }

    public class Create extends CloudSupportRequest<com.google.api.services.cloudsupport.v2beta.model.CloudSupportCase> {

      private static final String REST_PATH = "v2beta/{+parent}/cases";

      private final java.util.regex.Pattern PARENT_PATTERN =
          java.util.regex.Pattern.compile("^[^/]+/[^/]+$");

      /**
       * Create a new case and associate it with the given Cloud resource. The case object must have the
       * following fields set: display_name, description, classification, and severity.
       *
       * Create a request for the method "cases.create".
       *
       * This request holds the parameters needed by the the cloudsupport server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       * <p> {@link
       * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param parent Required. The name of the Cloud resource under which the case should be created.
       * @param content the {@link com.google.api.services.cloudsupport.v2beta.model.CloudSupportCase}
       * @since 1.13
       */
      protected Create(java.lang.String parent, com.google.api.services.cloudsupport.v2beta.model.CloudSupportCase content) {
        super(CloudSupport.this, "POST", REST_PATH, content, com.google.api.services.cloudsupport.v2beta.model.CloudSupportCase.class);
        this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^[^/]+/[^/]+$");
        }
      }

      @Override
      public Create set$Xgafv(java.lang.String $Xgafv) {
        return (Create) super.set$Xgafv($Xgafv);
      }

      @Override
      public Create setAccessToken(java.lang.String accessToken) {
        return (Create) super.setAccessToken(accessToken);
      }

      @Override
      public Create setAlt(java.lang.String alt) {
        return (Create) super.setAlt(alt);
      }

      @Override
      public Create setCallback(java.lang.String callback) {
        return (Create) super.setCallback(callback);
      }

      @Override
      public Create setFields(java.lang.String fields) {
        return (Create) super.setFields(fields);
      }

      @Override
      public Create setKey(java.lang.String key) {
        return (Create) super.setKey(key);
      }

      @Override
      public Create setOauthToken(java.lang.String oauthToken) {
        return (Create) super.setOauthToken(oauthToken);
      }

      @Override
      public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Create) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Create setQuotaUser(java.lang.String quotaUser) {
        return (Create) super.setQuotaUser(quotaUser);
      }

      @Override
      public Create setUploadType(java.lang.String uploadType) {
        return (Create) super.setUploadType(uploadType);
      }

      @Override
      public Create setUploadProtocol(java.lang.String uploadProtocol) {
        return (Create) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The name of the Cloud resource under which the case should be created. */
      @com.google.api.client.util.Key
      private java.lang.String parent;

      /** Required. The name of the Cloud resource under which the case should be created.
       */
      public java.lang.String getParent() {
        return parent;
      }

      /** Required. The name of the Cloud resource under which the case should be created. */
      public Create setParent(java.lang.String parent) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^[^/]+/[^/]+$");
        }
        this.parent = parent;
        return this;
      }

      @Override
      public Create set(String parameterName, Object value) {
        return (Create) super.set(parameterName, value);
      }
    }
    /**
     * Escalate a case. Escalating a case will initiate the Cloud Support escalation management process.
     * This operation is only available to certain Customer Care tiers. Go to
     * https://cloud.google.com/support and look for 'Technical support escalations' in the feature list
     * to find out which tiers are able to perform escalations.
     *
     * Create a request for the method "cases.escalate".
     *
     * This request holds the parameters needed by the cloudsupport server.  After setting any optional
     * parameters, call the {@link Escalate#execute()} method to invoke the remote operation.
     *
     * @param name Required. The fully qualified name of the Case resource to be escalated.
     * @param content the {@link com.google.api.services.cloudsupport.v2beta.model.EscalateCaseRequest}
     * @return the request
     */
    public Escalate escalate(java.lang.String name, com.google.api.services.cloudsupport.v2beta.model.EscalateCaseRequest content) throws java.io.IOException {
      Escalate result = new Escalate(name, content);
      initialize(result);
      return result;
    }

    public class Escalate extends CloudSupportRequest<com.google.api.services.cloudsupport.v2beta.model.CloudSupportCase> {

      private static final String REST_PATH = "v2beta/{+name}:escalate";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^[^/]+/[^/]+/cases/[^/]+$");

      /**
       * Escalate a case. Escalating a case will initiate the Cloud Support escalation management
       * process. This operation is only available to certain Customer Care tiers. Go to
       * https://cloud.google.com/support and look for 'Technical support escalations' in the feature
       * list to find out which tiers are able to perform escalations.
       *
       * Create a request for the method "cases.escalate".
       *
       * This request holds the parameters needed by the the cloudsupport server.  After setting any
       * optional parameters, call the {@link Escalate#execute()} method to invoke the remote operation.
       * <p> {@link
       * Escalate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Required. The fully qualified name of the Case resource to be escalated.
       * @param content the {@link com.google.api.services.cloudsupport.v2beta.model.EscalateCaseRequest}
       * @since 1.13
       */
      protected Escalate(java.lang.String name, com.google.api.services.cloudsupport.v2beta.model.EscalateCaseRequest content) {
        super(CloudSupport.this, "POST", REST_PATH, content, com.google.api.services.cloudsupport.v2beta.model.CloudSupportCase.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^[^/]+/[^/]+/cases/[^/]+$");
        }
      }

      @Override
      public Escalate set$Xgafv(java.lang.String $Xgafv) {
        return (Escalate) super.set$Xgafv($Xgafv);
      }

      @Override
      public Escalate setAccessToken(java.lang.String accessToken) {
        return (Escalate) super.setAccessToken(accessToken);
      }

      @Override
      public Escalate setAlt(java.lang.String alt) {
        return (Escalate) super.setAlt(alt);
      }

      @Override
      public Escalate setCallback(java.lang.String callback) {
        return (Escalate) super.setCallback(callback);
      }

      @Override
      public Escalate setFields(java.lang.String fields) {
        return (Escalate) super.setFields(fields);
      }

      @Override
      public Escalate setKey(java.lang.String key) {
        return (Escalate) super.setKey(key);
      }

      @Override
      public Escalate setOauthToken(java.lang.String oauthToken) {
        return (Escalate) super.setOauthToken(oauthToken);
      }

      @Override
      public Escalate setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Escalate) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Escalate setQuotaUser(java.lang.String quotaUser) {
        return (Escalate) super.setQuotaUser(quotaUser);
      }

      @Override
      public Escalate setUploadType(java.lang.String uploadType) {
        return (Escalate) super.setUploadType(uploadType);
      }

      @Override
      public Escalate setUploadProtocol(java.lang.String uploadProtocol) {
        return (Escalate) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The fully qualified name of the Case resource to be escalated. */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. The fully qualified name of the Case resource to be escalated.
       */
      public java.lang.String getName() {
        return name;
      }

      /** Required. The fully qualified name of the Case resource to be escalated. */
      public Escalate setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^[^/]+/[^/]+/cases/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Escalate set(String parameterName, Object value) {
        return (Escalate) super.set(parameterName, value);
      }
    }
    /**
     * Retrieve the specified case.
     *
     * Create a request for the method "cases.get".
     *
     * This request holds the parameters needed by the cloudsupport server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param name Required. The fully qualified name of a case to be retrieved.
     * @return the request
     */
    public Get get(java.lang.String name) throws java.io.IOException {
      Get result = new Get(name);
      initialize(result);
      return result;
    }

    public class Get extends CloudSupportRequest<com.google.api.services.cloudsupport.v2beta.model.CloudSupportCase> {

      private static final String REST_PATH = "v2beta/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^[^/]+/[^/]+/cases/[^/]+$");

      /**
       * Retrieve the specified case.
       *
       * Create a request for the method "cases.get".
       *
       * This request holds the parameters needed by the the cloudsupport server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
       * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Required. The fully qualified name of a case to be retrieved.
       * @since 1.13
       */
      protected Get(java.lang.String name) {
        super(CloudSupport.this, "GET", REST_PATH, null, com.google.api.services.cloudsupport.v2beta.model.CloudSupportCase.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^[^/]+/[^/]+/cases/[^/]+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The fully qualified name of a case to be retrieved. */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. The fully qualified name of a case to be retrieved.
       */
      public java.lang.String getName() {
        return name;
      }

      /** Required. The fully qualified name of a case to be retrieved. */
      public Get setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^[^/]+/[^/]+/cases/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Retrieve all cases under the specified parent. Note: Listing cases under an Organization returns
     * only the cases directly parented by that organization. To retrieve all cases under an
     * organization, including cases parented by projects under that organization, use `cases.search`.
     *
     * Create a request for the method "cases.list".
     *
     * This request holds the parameters needed by the cloudsupport server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param parent Required. The fully qualified name of parent resource to list cases under.
     * @return the request
     */
    public List list(java.lang.String parent) throws java.io.IOException {
      List result = new List(parent);
      initialize(result);
      return result;
    }

    public class List extends CloudSupportRequest<com.google.api.services.cloudsupport.v2beta.model.ListCasesResponse> {

      private static final String REST_PATH = "v2beta/{+parent}/cases";

      private final java.util.regex.Pattern PARENT_PATTERN =
          java.util.regex.Pattern.compile("^[^/]+/[^/]+$");

      /**
       * Retrieve all cases under the specified parent. Note: Listing cases under an Organization
       * returns only the cases directly parented by that organization. To retrieve all cases under an
       * organization, including cases parented by projects under that organization, use `cases.search`.
       *
       * Create a request for the method "cases.list".
       *
       * This request holds the parameters needed by the the cloudsupport server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
       * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param parent Required. The fully qualified name of parent resource to list cases under.
       * @since 1.13
       */
      protected List(java.lang.String parent) {
        super(CloudSupport.this, "GET", REST_PATH, null, com.google.api.services.cloudsupport.v2beta.model.ListCasesResponse.class);
        this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^[^/]+/[^/]+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The fully qualified name of parent resource to list cases under. */
      @com.google.api.client.util.Key
      private java.lang.String parent;

      /** Required. The fully qualified name of parent resource to list cases under.
       */
      public java.lang.String getParent() {
        return parent;
      }

      /** Required. The fully qualified name of parent resource to list cases under. */
      public List setParent(java.lang.String parent) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^[^/]+/[^/]+$");
        }
        this.parent = parent;
        return this;
      }

      /**
       * An expression written in filter language. If non-empty, the query returns the cases that
       * match the filter. Else, the query doesn't filter the cases. Filter expressions use the
       * following fields with the operators equals (`=`) and `AND`: - `state`: The accepted values
       * are `OPEN` or `CLOSED`. - `priority`: The accepted values are `P0`, `P1`, `P2`, `P3`, or
       * `P4`. You can specify multiple values for priority using the `OR` operator. For example,
       * `priority=P1 OR priority=P2`. - [DEPRECATED] `severity`: The accepted values are `S0`,
       * `S1`, `S2`, `S3`, or `S4`. - `creator.email`: The email address of the case creator.
       * Examples: - `state=CLOSED` - `state=OPEN AND creator.email="tester@example.com"` -
       * `state=OPEN AND (priority=P0 OR priority=P1)`
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** An expression written in filter language. If non-empty, the query returns the cases that match the
     filter. Else, the query doesn't filter the cases. Filter expressions use the following fields with
     the operators equals (`=`) and `AND`: - `state`: The accepted values are `OPEN` or `CLOSED`. -
     `priority`: The accepted values are `P0`, `P1`, `P2`, `P3`, or `P4`. You can specify multiple
     values for priority using the `OR` operator. For example, `priority=P1 OR priority=P2`. -
     [DEPRECATED] `severity`: The accepted values are `S0`, `S1`, `S2`, `S3`, or `S4`. -
     `creator.email`: The email address of the case creator. Examples: - `state=CLOSED` - `state=OPEN
     AND creator.email="tester@example.com"` - `state=OPEN AND (priority=P0 OR priority=P1)`
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * An expression written in filter language. If non-empty, the query returns the cases that
       * match the filter. Else, the query doesn't filter the cases. Filter expressions use the
       * following fields with the operators equals (`=`) and `AND`: - `state`: The accepted values
       * are `OPEN` or `CLOSED`. - `priority`: The accepted values are `P0`, `P1`, `P2`, `P3`, or
       * `P4`. You can specify multiple values for priority using the `OR` operator. For example,
       * `priority=P1 OR priority=P2`. - [DEPRECATED] `severity`: The accepted values are `S0`,
       * `S1`, `S2`, `S3`, or `S4`. - `creator.email`: The email address of the case creator.
       * Examples: - `state=CLOSED` - `state=OPEN AND creator.email="tester@example.com"` -
       * `state=OPEN AND (priority=P0 OR priority=P1)`
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /** The maximum number of cases fetched with each request. Defaults to 10. */
      @com.google.api.client.util.Key
      private java.lang.Integer pageSize;

      /** The maximum number of cases fetched with each request. Defaults to 10.
       */
      public java.lang.Integer getPageSize() {
        return pageSize;
      }

      /** The maximum number of cases fetched with each request. Defaults to 10. */
      public List setPageSize(java.lang.Integer pageSize) {
        this.pageSize = pageSize;
        return this;
      }

      /**
       * A token identifying the page of results to return. If unspecified, the first page is
       * retrieved.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** A token identifying the page of results to return. If unspecified, the first page is retrieved.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * A token identifying the page of results to return. If unspecified, the first page is
       * retrieved.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Update the specified case. Only a subset of fields can be updated.
     *
     * Create a request for the method "cases.patch".
     *
     * This request holds the parameters needed by the cloudsupport server.  After setting any optional
     * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param name The resource name for the case.
     * @param content the {@link com.google.api.services.cloudsupport.v2beta.model.CloudSupportCase}
     * @return the request
     */
    public Patch patch(java.lang.String name, com.google.api.services.cloudsupport.v2beta.model.CloudSupportCase content) throws java.io.IOException {
      Patch result = new Patch(name, content);
      initialize(result);
      return result;
    }

    public class Patch extends CloudSupportRequest<com.google.api.services.cloudsupport.v2beta.model.CloudSupportCase> {

      private static final String REST_PATH = "v2beta/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^[^/]+/[^/]+/cases/[^/]+$");

      /**
       * Update the specified case. Only a subset of fields can be updated.
       *
       * Create a request for the method "cases.patch".
       *
       * This request holds the parameters needed by the the cloudsupport server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       * <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name The resource name for the case.
       * @param content the {@link com.google.api.services.cloudsupport.v2beta.model.CloudSupportCase}
       * @since 1.13
       */
      protected Patch(java.lang.String name, com.google.api.services.cloudsupport.v2beta.model.CloudSupportCase content) {
        super(CloudSupport.this, "PATCH", REST_PATH, content, com.google.api.services.cloudsupport.v2beta.model.CloudSupportCase.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^[^/]+/[^/]+/cases/[^/]+$");
        }
      }

      @Override
      public Patch set$Xgafv(java.lang.String $Xgafv) {
        return (Patch) super.set$Xgafv($Xgafv);
      }

      @Override
      public Patch setAccessToken(java.lang.String accessToken) {
        return (Patch) super.setAccessToken(accessToken);
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setCallback(java.lang.String callback) {
        return (Patch) super.setCallback(callback);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUploadType(java.lang.String uploadType) {
        return (Patch) super.setUploadType(uploadType);
      }

      @Override
      public Patch setUploadProtocol(java.lang.String uploadProtocol) {
        return (Patch) super.setUploadProtocol(uploadProtocol);
      }

      /** The resource name for the case. */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** The resource name for the case.
       */
      public java.lang.String getName() {
        return name;
      }

      /** The resource name for the case. */
      public Patch setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^[^/]+/[^/]+/cases/[^/]+$");
        }
        this.name = name;
        return this;
      }

      /**
       * A list of attributes of the case object that should be updated as part of this request.
       * Supported values are severity, display_name, and subscriber_email_addresses. If no fields
       * are specified, all supported fields are updated. WARNING: If you do not provide a field
       * mask, then you may accidentally clear some fields. For example, if you leave field mask
       * empty and do not provide a value for subscriber_email_addresses, then
       * subscriber_email_addresses is updated to empty.
       */
      @com.google.api.client.util.Key
      private String updateMask;

      /** A list of attributes of the case object that should be updated as part of this request. Supported
     values are severity, display_name, and subscriber_email_addresses. If no fields are specified, all
     supported fields are updated. WARNING: If you do not provide a field mask, then you may
     accidentally clear some fields. For example, if you leave field mask empty and do not provide a
     value for subscriber_email_addresses, then subscriber_email_addresses is updated to empty.
       */
      public String getUpdateMask() {
        return updateMask;
      }

      /**
       * A list of attributes of the case object that should be updated as part of this request.
       * Supported values are severity, display_name, and subscriber_email_addresses. If no fields
       * are specified, all supported fields are updated. WARNING: If you do not provide a field
       * mask, then you may accidentally clear some fields. For example, if you leave field mask
       * empty and do not provide a value for subscriber_email_addresses, then
       * subscriber_email_addresses is updated to empty.
       */
      public Patch setUpdateMask(String updateMask) {
        this.updateMask = updateMask;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }
    /**
     * Search cases using the specified query.
     *
     * Create a request for the method "cases.search".
     *
     * This request holds the parameters needed by the cloudsupport server.  After setting any optional
     * parameters, call the {@link Search#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public Search search() throws java.io.IOException {
      Search result = new Search();
      initialize(result);
      return result;
    }

    public class Search extends CloudSupportRequest<com.google.api.services.cloudsupport.v2beta.model.SearchCasesResponse> {

      private static final String REST_PATH = "v2beta/cases:search";

      /**
       * Search cases using the specified query.
       *
       * Create a request for the method "cases.search".
       *
       * This request holds the parameters needed by the the cloudsupport server.  After setting any
       * optional parameters, call the {@link Search#execute()} method to invoke the remote operation.
       * <p> {@link
       * Search#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected Search() {
        super(CloudSupport.this, "GET", REST_PATH, null, com.google.api.services.cloudsupport.v2beta.model.SearchCasesResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Search set$Xgafv(java.lang.String $Xgafv) {
        return (Search) super.set$Xgafv($Xgafv);
      }

      @Override
      public Search setAccessToken(java.lang.String accessToken) {
        return (Search) super.setAccessToken(accessToken);
      }

      @Override
      public Search setAlt(java.lang.String alt) {
        return (Search) super.setAlt(alt);
      }

      @Override
      public Search setCallback(java.lang.String callback) {
        return (Search) super.setCallback(callback);
      }

      @Override
      public Search setFields(java.lang.String fields) {
        return (Search) super.setFields(fields);
      }

      @Override
      public Search setKey(java.lang.String key) {
        return (Search) super.setKey(key);
      }

      @Override
      public Search setOauthToken(java.lang.String oauthToken) {
        return (Search) super.setOauthToken(oauthToken);
      }

      @Override
      public Search setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Search) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Search setQuotaUser(java.lang.String quotaUser) {
        return (Search) super.setQuotaUser(quotaUser);
      }

      @Override
      public Search setUploadType(java.lang.String uploadType) {
        return (Search) super.setUploadType(uploadType);
      }

      @Override
      public Search setUploadProtocol(java.lang.String uploadProtocol) {
        return (Search) super.setUploadProtocol(uploadProtocol);
      }

      /** The maximum number of cases fetched with each request. The default page size is 10. */
      @com.google.api.client.util.Key
      private java.lang.Integer pageSize;

      /** The maximum number of cases fetched with each request. The default page size is 10.
       */
      public java.lang.Integer getPageSize() {
        return pageSize;
      }

      /** The maximum number of cases fetched with each request. The default page size is 10. */
      public Search setPageSize(java.lang.Integer pageSize) {
        this.pageSize = pageSize;
        return this;
      }

      /**
       * A token identifying the page of results to return. If unspecified, the first page is
       * retrieved.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** A token identifying the page of results to return. If unspecified, the first page is retrieved.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * A token identifying the page of results to return. If unspecified, the first page is
       * retrieved.
       */
      public Search setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      /**
       * An expression written in filter language. A query uses the following fields with the
       * operators equals (`=`) and `AND`: - `organization`: An organization name in the form
       * `organizations/`. - `project`: A project name in the form `projects/`. - `state`: The
       * accepted values are `OPEN` or `CLOSED`. - `priority`: The accepted values are `P0`, `P1`,
       * `P2`, `P3`, or `P4`. You can specify multiple values for priority using the `OR` operator.
       * For example, `priority=P1 OR priority=P2`. - [DEPRECATED] `severity`: The accepted values
       * are `S0`, `S1`, `S2`, `S3`, or `S4`. - `creator.email`: The email address of the case
       * creator. - `billingAccount`: A billing account in the form `billingAccounts/` You must
       * specify eitehr `organization` or `project`. To search across `displayName`, `description`,
       * and comments, use a global restriction with no keyword or operator. For example, `"my
       * search"`. To search only cases updated after a certain date, use `update_time` retricted
       * with that particular date, time, and timezone in ISO datetime format. For example,
       * `update_time>"2020-01-01T00:00:00-05:00"`. `update_time` only supports the greater than
       * operator (`>`). Examples: - `organization="organizations/123456789"` - `project="projects
       * /my-project-id"` - `project="projects/123456789"` -
       * `billing_account="billingAccounts/123456-A0B0C0-CUZ789"` -
       * `organization="organizations/123456789" AND state=CLOSED` - `project="projects/my-project-
       * id" AND creator.email="tester@example.com"` - `project="projects/my-project-id" AND
       * (priority=P0 OR priority=P1)`
       */
      @com.google.api.client.util.Key
      private java.lang.String query;

      /** An expression written in filter language. A query uses the following fields with the operators
     equals (`=`) and `AND`: - `organization`: An organization name in the form `organizations/`. -
     `project`: A project name in the form `projects/`. - `state`: The accepted values are `OPEN` or
     `CLOSED`. - `priority`: The accepted values are `P0`, `P1`, `P2`, `P3`, or `P4`. You can specify
     multiple values for priority using the `OR` operator. For example, `priority=P1 OR priority=P2`. -
     [DEPRECATED] `severity`: The accepted values are `S0`, `S1`, `S2`, `S3`, or `S4`. -
     `creator.email`: The email address of the case creator. - `billingAccount`: A billing account in
     the form `billingAccounts/` You must specify eitehr `organization` or `project`. To search across
     `displayName`, `description`, and comments, use a global restriction with no keyword or operator.
     For example, `"my search"`. To search only cases updated after a certain date, use `update_time`
     retricted with that particular date, time, and timezone in ISO datetime format. For example,
     `update_time>"2020-01-01T00:00:00-05:00"`. `update_time` only supports the greater than operator
     (`>`). Examples: - `organization="organizations/123456789"` - `project="projects/my-project-id"` -
     `project="projects/123456789"` - `billing_account="billingAccounts/123456-A0B0C0-CUZ789"` -
     `organization="organizations/123456789" AND state=CLOSED` - `project="projects/my-project-id" AND
     creator.email="tester@example.com"` - `project="projects/my-project-id" AND (priority=P0 OR
     priority=P1)`
       */
      public java.lang.String getQuery() {
        return query;
      }

      /**
       * An expression written in filter language. A query uses the following fields with the
       * operators equals (`=`) and `AND`: - `organization`: An organization name in the form
       * `organizations/`. - `project`: A project name in the form `projects/`. - `state`: The
       * accepted values are `OPEN` or `CLOSED`. - `priority`: The accepted values are `P0`, `P1`,
       * `P2`, `P3`, or `P4`. You can specify multiple values for priority using the `OR` operator.
       * For example, `priority=P1 OR priority=P2`. - [DEPRECATED] `severity`: The accepted values
       * are `S0`, `S1`, `S2`, `S3`, or `S4`. - `creator.email`: The email address of the case
       * creator. - `billingAccount`: A billing account in the form `billingAccounts/` You must
       * specify eitehr `organization` or `project`. To search across `displayName`, `description`,
       * and comments, use a global restriction with no keyword or operator. For example, `"my
       * search"`. To search only cases updated after a certain date, use `update_time` retricted
       * with that particular date, time, and timezone in ISO datetime format. For example,
       * `update_time>"2020-01-01T00:00:00-05:00"`. `update_time` only supports the greater than
       * operator (`>`). Examples: - `organization="organizations/123456789"` - `project="projects
       * /my-project-id"` - `project="projects/123456789"` -
       * `billing_account="billingAccounts/123456-A0B0C0-CUZ789"` -
       * `organization="organizations/123456789" AND state=CLOSED` - `project="projects/my-project-
       * id" AND creator.email="tester@example.com"` - `project="projects/my-project-id" AND
       * (priority=P0 OR priority=P1)`
       */
      public Search setQuery(java.lang.String query) {
        this.query = query;
        return this;
      }

      @Override
      public Search set(String parameterName, Object value) {
        return (Search) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the Attachments collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code CloudSupport cloudsupport = new CloudSupport(...);}
     *   {@code CloudSupport.Attachments.List request = cloudsupport.attachments().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Attachments attachments() {
      return new Attachments();
    }

    /**
     * The "attachments" collection of methods.
     */
    public class Attachments {

      /**
       * Retrieve all attachments associated with a support case.
       *
       * Create a request for the method "attachments.list".
       *
       * This request holds the parameters needed by the cloudsupport server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The resource name of Case object for which attachments should be listed.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends CloudSupportRequest<com.google.api.services.cloudsupport.v2beta.model.ListAttachmentsResponse> {

        private static final String REST_PATH = "v2beta/{+parent}/attachments";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^[^/]+/[^/]+/cases/[^/]+$");

        /**
         * Retrieve all attachments associated with a support case.
         *
         * Create a request for the method "attachments.list".
         *
         * This request holds the parameters needed by the the cloudsupport server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The resource name of Case object for which attachments should be listed.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(CloudSupport.this, "GET", REST_PATH, null, com.google.api.services.cloudsupport.v2beta.model.ListAttachmentsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^[^/]+/[^/]+/cases/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The resource name of Case object for which attachments should be listed. */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The resource name of Case object for which attachments should be listed.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. The resource name of Case object for which attachments should be listed. */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^[^/]+/[^/]+/cases/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * The maximum number of attachments fetched with each request. If not provided, the default
         * is 10. The maximum page size that will be returned is 100.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of attachments fetched with each request. If not provided, the default is 10.
       The maximum page size that will be returned is 100.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * The maximum number of attachments fetched with each request. If not provided, the default
         * is 10. The maximum page size that will be returned is 100.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A token identifying the page of results to return. If unspecified, the first page is
         * retrieved.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A token identifying the page of results to return. If unspecified, the first page is retrieved.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A token identifying the page of results to return. If unspecified, the first page is
         * retrieved.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Comments collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code CloudSupport cloudsupport = new CloudSupport(...);}
     *   {@code CloudSupport.Comments.List request = cloudsupport.comments().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Comments comments() {
      return new Comments();
    }

    /**
     * The "comments" collection of methods.
     */
    public class Comments {

      /**
       * Add a new comment to the specified Case. The comment object must have the following fields set:
       * body.
       *
       * Create a request for the method "comments.create".
       *
       * This request holds the parameters needed by the cloudsupport server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The resource name of Case to which this comment should be added.
       * @param content the {@link com.google.api.services.cloudsupport.v2beta.model.Comment}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.cloudsupport.v2beta.model.Comment content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends CloudSupportRequest<com.google.api.services.cloudsupport.v2beta.model.Comment> {

        private static final String REST_PATH = "v2beta/{+parent}/comments";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^[^/]+/[^/]+/cases/[^/]+$");

        /**
         * Add a new comment to the specified Case. The comment object must have the following fields set:
         * body.
         *
         * Create a request for the method "comments.create".
         *
         * This request holds the parameters needed by the the cloudsupport server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The resource name of Case to which this comment should be added.
         * @param content the {@link com.google.api.services.cloudsupport.v2beta.model.Comment}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.cloudsupport.v2beta.model.Comment content) {
          super(CloudSupport.this, "POST", REST_PATH, content, com.google.api.services.cloudsupport.v2beta.model.Comment.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^[^/]+/[^/]+/cases/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The resource name of Case to which this comment should be added. */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The resource name of Case to which this comment should be added.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. The resource name of Case to which this comment should be added. */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^[^/]+/[^/]+/cases/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Retrieve all Comments associated with the Case object.
       *
       * Create a request for the method "comments.list".
       *
       * This request holds the parameters needed by the cloudsupport server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The resource name of Case object for which comments should be listed.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends CloudSupportRequest<com.google.api.services.cloudsupport.v2beta.model.ListCommentsResponse> {

        private static final String REST_PATH = "v2beta/{+parent}/comments";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^[^/]+/[^/]+/cases/[^/]+$");

        /**
         * Retrieve all Comments associated with the Case object.
         *
         * Create a request for the method "comments.list".
         *
         * This request holds the parameters needed by the the cloudsupport server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The resource name of Case object for which comments should be listed.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(CloudSupport.this, "GET", REST_PATH, null, com.google.api.services.cloudsupport.v2beta.model.ListCommentsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^[^/]+/[^/]+/cases/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The resource name of Case object for which comments should be listed. */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The resource name of Case object for which comments should be listed.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. The resource name of Case object for which comments should be listed. */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^[^/]+/[^/]+/cases/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** The maximum number of comments fetched with each request. Defaults to 10. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of comments fetched with each request. Defaults to 10.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The maximum number of comments fetched with each request. Defaults to 10. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A token identifying the page of results to return. If unspecified, the first page is
         * retrieved.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A token identifying the page of results to return. If unspecified, the first page is retrieved.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A token identifying the page of results to return. If unspecified, the first page is
         * retrieved.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * An accessor for creating requests from the Media collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code CloudSupport cloudsupport = new CloudSupport(...);}
   *   {@code CloudSupport.Media.List request = cloudsupport.media().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Media media() {
    return new Media();
  }

  /**
   * The "media" collection of methods.
   */
  public class Media {

    /**
     * Download a file attachment on a case. Note: HTTP requests must append "?alt=media" to the URL.
     *
     * Create a request for the method "media.download".
     *
     * This request holds the parameters needed by the cloudsupport server.  After setting any optional
     * parameters, call the {@link Download#execute()} method to invoke the remote operation.
     *
     * @param name The resource name of the attachment to be downloaded.
     * @return the request
     */
    public Download download(java.lang.String name) throws java.io.IOException {
      Download result = new Download(name);
      initialize(result);
      return result;
    }

    public class Download extends CloudSupportRequest<com.google.api.services.cloudsupport.v2beta.model.Media> {

      private static final String REST_PATH = "v2beta/{+name}:download";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^[^/]+/[^/]+/cases/[^/]+/attachments/[^/]+$");

      /**
       * Download a file attachment on a case. Note: HTTP requests must append "?alt=media" to the URL.
       *
       * Create a request for the method "media.download".
       *
       * This request holds the parameters needed by the the cloudsupport server.  After setting any
       * optional parameters, call the {@link Download#execute()} method to invoke the remote operation.
       * <p> {@link
       * Download#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name The resource name of the attachment to be downloaded.
       * @since 1.13
       */
      protected Download(java.lang.String name) {
        super(CloudSupport.this, "GET", REST_PATH, null, com.google.api.services.cloudsupport.v2beta.model.Media.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^[^/]+/[^/]+/cases/[^/]+/attachments/[^/]+$");
        }
        initializeMediaDownload();
      }

      @Override
      public void executeMediaAndDownloadTo(java.io.OutputStream outputStream) throws java.io.IOException {
        super.executeMediaAndDownloadTo(outputStream);
      }

      @Override
      public java.io.InputStream executeMediaAsInputStream() throws java.io.IOException {
        return super.executeMediaAsInputStream();
      }

      @Override
      public com.google.api.client.http.HttpResponse executeMedia() throws java.io.IOException {
        return super.executeMedia();
      }

      @Override
      public com.google.api.client.http.GenericUrl buildHttpRequestUrl() {
        java.lang.String baseUrl = ("media".equals(get("alt")) && getMediaHttpUploader() == null)
            ? getRootUrl() + "download/" + getServicePath() : getBaseUrl();
        return new com.google.api.client.http.GenericUrl(
            com.google.api.client.http.UriTemplate.expand(baseUrl, getUriTemplate(), this, true));
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Download set$Xgafv(java.lang.String $Xgafv) {
        return (Download) super.set$Xgafv($Xgafv);
      }

      @Override
      public Download setAccessToken(java.lang.String accessToken) {
        return (Download) super.setAccessToken(accessToken);
      }

      @Override
      public Download setAlt(java.lang.String alt) {
        return (Download) super.setAlt(alt);
      }

      @Override
      public Download setCallback(java.lang.String callback) {
        return (Download) super.setCallback(callback);
      }

      @Override
      public Download setFields(java.lang.String fields) {
        return (Download) super.setFields(fields);
      }

      @Override
      public Download setKey(java.lang.String key) {
        return (Download) super.setKey(key);
      }

      @Override
      public Download setOauthToken(java.lang.String oauthToken) {
        return (Download) super.setOauthToken(oauthToken);
      }

      @Override
      public Download setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Download) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Download setQuotaUser(java.lang.String quotaUser) {
        return (Download) super.setQuotaUser(quotaUser);
      }

      @Override
      public Download setUploadType(java.lang.String uploadType) {
        return (Download) super.setUploadType(uploadType);
      }

      @Override
      public Download setUploadProtocol(java.lang.String uploadProtocol) {
        return (Download) super.setUploadProtocol(uploadProtocol);
      }

      /** The resource name of the attachment to be downloaded. */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** The resource name of the attachment to be downloaded.
       */
      public java.lang.String getName() {
        return name;
      }

      /** The resource name of the attachment to be downloaded. */
      public Download setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^[^/]+/[^/]+/cases/[^/]+/attachments/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Download set(String parameterName, Object value) {
        return (Download) super.set(parameterName, value);
      }
    }
    /**
     * Create a file attachment on a case or Cloud resource. The attachment object must have the
     * following fields set: filename.
     *
     * Create a request for the method "media.upload".
     *
     * This request holds the parameters needed by the cloudsupport server.  After setting any optional
     * parameters, call the {@link Upload#execute()} method to invoke the remote operation.
     *
     * @param parent Required. The resource name of the case (or case parent) to which the attachment should be attached.
     * @param content the {@link com.google.api.services.cloudsupport.v2beta.model.CreateAttachmentRequest}
     * @return the request
     */
    public Upload upload(java.lang.String parent, com.google.api.services.cloudsupport.v2beta.model.CreateAttachmentRequest content) throws java.io.IOException {
      Upload result = new Upload(parent, content);
      initialize(result);
      return result;
    }

    /**
     * Create a file attachment on a case or Cloud resource. The attachment object must have the
     * following fields set: filename.
     *
     * Create a request for the method "media.upload".
     *
     * This request holds the parameters needed by the the cloudsupport server.  After setting any
     * optional parameters, call the {@link Upload#execute()} method to invoke the remote operation.
     *
     * <p>
     * This method should be used for uploading media content.
     * </p>
     *
     * @param parent Required. The resource name of the case (or case parent) to which the attachment should be attached.
     * @param content the {@link com.google.api.services.cloudsupport.v2beta.model.CreateAttachmentRequest} media metadata or {@code null} if none
     * @param mediaContent The media HTTP content or {@code null} if none.
     * @return the request
     * @throws java.io.IOException if the initialization of the request fails
     */
    public Upload upload(java.lang.String parent, com.google.api.services.cloudsupport.v2beta.model.CreateAttachmentRequest content, com.google.api.client.http.AbstractInputStreamContent mediaContent) throws java.io.IOException {
      Upload result = new Upload(parent, content, mediaContent);
      initialize(result);
      return result;
    }

    public class Upload extends CloudSupportRequest<com.google.api.services.cloudsupport.v2beta.model.Attachment> {

      private static final String REST_PATH = "v2beta/{+parent}/attachments";

      private final java.util.regex.Pattern PARENT_PATTERN =
          java.util.regex.Pattern.compile("^[^/]+/[^/]+/cases/[^/]+$");

      /**
       * Create a file attachment on a case or Cloud resource. The attachment object must have the
       * following fields set: filename.
       *
       * Create a request for the method "media.upload".
       *
       * This request holds the parameters needed by the the cloudsupport server.  After setting any
       * optional parameters, call the {@link Upload#execute()} method to invoke the remote operation.
       * <p> {@link
       * Upload#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param parent Required. The resource name of the case (or case parent) to which the attachment should be attached.
       * @param content the {@link com.google.api.services.cloudsupport.v2beta.model.CreateAttachmentRequest}
       * @since 1.13
       */
      protected Upload(java.lang.String parent, com.google.api.services.cloudsupport.v2beta.model.CreateAttachmentRequest content) {
        super(CloudSupport.this, "POST", REST_PATH, content, com.google.api.services.cloudsupport.v2beta.model.Attachment.class);
        this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^[^/]+/[^/]+/cases/[^/]+$");
        }
      }

      /**
       * Create a file attachment on a case or Cloud resource. The attachment object must have the
       * following fields set: filename.
       *
       * Create a request for the method "media.upload".
       *
       * This request holds the parameters needed by the the cloudsupport server.  After setting any
       * optional parameters, call the {@link Upload#execute()} method to invoke the remote operation.
       * <p> {@link
       * Upload#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * <p>
       * This constructor should be used for uploading media content.
       * </p>
       *
       * @param parent Required. The resource name of the case (or case parent) to which the attachment should be attached.
       * @param content the {@link com.google.api.services.cloudsupport.v2beta.model.CreateAttachmentRequest} media metadata or {@code null} if none
       * @param mediaContent The media HTTP content or {@code null} if none.
       * @since 1.13
       */
      protected Upload(java.lang.String parent, com.google.api.services.cloudsupport.v2beta.model.CreateAttachmentRequest content, com.google.api.client.http.AbstractInputStreamContent mediaContent) {
        super(CloudSupport.this, "POST", "/upload/" + getServicePath() + REST_PATH, content, com.google.api.services.cloudsupport.v2beta.model.Attachment.class);
        this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
        initializeMediaUpload(mediaContent);
      }

      @Override
      public Upload set$Xgafv(java.lang.String $Xgafv) {
        return (Upload) super.set$Xgafv($Xgafv);
      }

      @Override
      public Upload setAccessToken(java.lang.String accessToken) {
        return (Upload) super.setAccessToken(accessToken);
      }

      @Override
      public Upload setAlt(java.lang.String alt) {
        return (Upload) super.setAlt(alt);
      }

      @Override
      public Upload setCallback(java.lang.String callback) {
        return (Upload) super.setCallback(callback);
      }

      @Override
      public Upload setFields(java.lang.String fields) {
        return (Upload) super.setFields(fields);
      }

      @Override
      public Upload setKey(java.lang.String key) {
        return (Upload) super.setKey(key);
      }

      @Override
      public Upload setOauthToken(java.lang.String oauthToken) {
        return (Upload) super.setOauthToken(oauthToken);
      }

      @Override
      public Upload setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Upload) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Upload setQuotaUser(java.lang.String quotaUser) {
        return (Upload) super.setQuotaUser(quotaUser);
      }

      @Override
      public Upload setUploadType(java.lang.String uploadType) {
        return (Upload) super.setUploadType(uploadType);
      }

      @Override
      public Upload setUploadProtocol(java.lang.String uploadProtocol) {
        return (Upload) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The resource name of the case (or case parent) to which the attachment should be
       * attached.
       */
      @com.google.api.client.util.Key
      private java.lang.String parent;

      /** Required. The resource name of the case (or case parent) to which the attachment should be
     attached.
       */
      public java.lang.String getParent() {
        return parent;
      }

      /**
       * Required. The resource name of the case (or case parent) to which the attachment should be
       * attached.
       */
      public Upload setParent(java.lang.String parent) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^[^/]+/[^/]+/cases/[^/]+$");
        }
        this.parent = parent;
        return this;
      }

      @Override
      public Upload set(String parameterName, Object value) {
        return (Upload) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link CloudSupport}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link CloudSupport}. */
    @Override
    public CloudSupport build() {
      return new CloudSupport(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link CloudSupportRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setCloudSupportRequestInitializer(
        CloudSupportRequestInitializer cloudsupportRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(cloudsupportRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
