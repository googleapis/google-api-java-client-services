/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.baremetalsolution.v2.model;

/**
 * Network template.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Bare Metal Solution API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ServerNetworkTemplate extends com.google.api.client.json.GenericJson {

  /**
   * Instance types this template is applicable to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> applicableInstanceTypes;

  /**
   * Logical interfaces.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<LogicalInterface> logicalInterfaces;

  static {
    // hack to force ProGuard to consider LogicalInterface used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(LogicalInterface.class);
  }

  /**
   * Output only. Template's unique name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Instance types this template is applicable to.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getApplicableInstanceTypes() {
    return applicableInstanceTypes;
  }

  /**
   * Instance types this template is applicable to.
   * @param applicableInstanceTypes applicableInstanceTypes or {@code null} for none
   */
  public ServerNetworkTemplate setApplicableInstanceTypes(java.util.List<java.lang.String> applicableInstanceTypes) {
    this.applicableInstanceTypes = applicableInstanceTypes;
    return this;
  }

  /**
   * Logical interfaces.
   * @return value or {@code null} for none
   */
  public java.util.List<LogicalInterface> getLogicalInterfaces() {
    return logicalInterfaces;
  }

  /**
   * Logical interfaces.
   * @param logicalInterfaces logicalInterfaces or {@code null} for none
   */
  public ServerNetworkTemplate setLogicalInterfaces(java.util.List<LogicalInterface> logicalInterfaces) {
    this.logicalInterfaces = logicalInterfaces;
    return this;
  }

  /**
   * Output only. Template's unique name.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. Template's unique name.
   * @param name name or {@code null} for none
   */
  public ServerNetworkTemplate setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  @Override
  public ServerNetworkTemplate set(String fieldName, Object value) {
    return (ServerNetworkTemplate) super.set(fieldName, value);
  }

  @Override
  public ServerNetworkTemplate clone() {
    return (ServerNetworkTemplate) super.clone();
  }

}
