/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.aiplatform.v1.model;

/**
 * Configures the output of BatchPredictionJob. See Model.supported_output_storage_formats for
 * supported output formats, and how predictions are expressed via any of them.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Vertex AI API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudAiplatformV1BatchPredictionJobOutputConfig extends com.google.api.client.json.GenericJson {

  /**
   * The BigQuery project or dataset location where the output is to be written to. If project is
   * provided, a new dataset is created with name `prediction__` where is made BigQuery-dataset-name
   * compatible (for example, most special characters become underscores), and timestamp is in
   * YYYY_MM_DDThh_mm_ss_sssZ "based on ISO-8601" format. In the dataset two tables will be created,
   * `predictions`, and `errors`. If the Model has both instance and prediction schemata defined
   * then the tables have columns as follows: The `predictions` table contains instances for which
   * the prediction succeeded, it has columns as per a concatenation of the Model's instance and
   * prediction schemata. The `errors` table contains rows for which the prediction has failed, it
   * has instance columns, as per the instance schema, followed by a single "errors" column, which
   * as values has google.rpc.Status represented as a STRUCT, and containing only `code` and
   * `message`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1BigQueryDestination bigqueryDestination;

  /**
   * The Cloud Storage location of the directory where the output is to be written to. In the given
   * directory a new directory is created. Its name is `prediction--`, where timestamp is in YYYY-
   * MM-DDThh:mm:ss.sssZ ISO-8601 format. Inside of it files `predictions_0001.`,
   * `predictions_0002.`, ..., `predictions_N.` are created where `` depends on chosen
   * predictions_format, and N may equal 0001 and depends on the total number of successfully
   * predicted instances. If the Model has both instance and prediction schemata defined then each
   * such file contains predictions as per the predictions_format. If prediction for any instance
   * failed (partially or completely), then an additional `errors_0001.`, `errors_0002.`,...,
   * `errors_N.` files are created (N depends on total number of failed predictions). These files
   * contain the failed instances, as per their schema, followed by an additional `error` field
   * which as value has google.rpc.Status containing only `code` and `message` fields.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1GcsDestination gcsDestination;

  /**
   * Required. The format in which Vertex AI gives the predictions, must be one of the Model's
   * supported_output_storage_formats.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String predictionsFormat;

  /**
   * The BigQuery project or dataset location where the output is to be written to. If project is
   * provided, a new dataset is created with name `prediction__` where is made BigQuery-dataset-name
   * compatible (for example, most special characters become underscores), and timestamp is in
   * YYYY_MM_DDThh_mm_ss_sssZ "based on ISO-8601" format. In the dataset two tables will be created,
   * `predictions`, and `errors`. If the Model has both instance and prediction schemata defined
   * then the tables have columns as follows: The `predictions` table contains instances for which
   * the prediction succeeded, it has columns as per a concatenation of the Model's instance and
   * prediction schemata. The `errors` table contains rows for which the prediction has failed, it
   * has instance columns, as per the instance schema, followed by a single "errors" column, which
   * as values has google.rpc.Status represented as a STRUCT, and containing only `code` and
   * `message`.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1BigQueryDestination getBigqueryDestination() {
    return bigqueryDestination;
  }

  /**
   * The BigQuery project or dataset location where the output is to be written to. If project is
   * provided, a new dataset is created with name `prediction__` where is made BigQuery-dataset-name
   * compatible (for example, most special characters become underscores), and timestamp is in
   * YYYY_MM_DDThh_mm_ss_sssZ "based on ISO-8601" format. In the dataset two tables will be created,
   * `predictions`, and `errors`. If the Model has both instance and prediction schemata defined
   * then the tables have columns as follows: The `predictions` table contains instances for which
   * the prediction succeeded, it has columns as per a concatenation of the Model's instance and
   * prediction schemata. The `errors` table contains rows for which the prediction has failed, it
   * has instance columns, as per the instance schema, followed by a single "errors" column, which
   * as values has google.rpc.Status represented as a STRUCT, and containing only `code` and
   * `message`.
   * @param bigqueryDestination bigqueryDestination or {@code null} for none
   */
  public GoogleCloudAiplatformV1BatchPredictionJobOutputConfig setBigqueryDestination(GoogleCloudAiplatformV1BigQueryDestination bigqueryDestination) {
    this.bigqueryDestination = bigqueryDestination;
    return this;
  }

  /**
   * The Cloud Storage location of the directory where the output is to be written to. In the given
   * directory a new directory is created. Its name is `prediction--`, where timestamp is in YYYY-
   * MM-DDThh:mm:ss.sssZ ISO-8601 format. Inside of it files `predictions_0001.`,
   * `predictions_0002.`, ..., `predictions_N.` are created where `` depends on chosen
   * predictions_format, and N may equal 0001 and depends on the total number of successfully
   * predicted instances. If the Model has both instance and prediction schemata defined then each
   * such file contains predictions as per the predictions_format. If prediction for any instance
   * failed (partially or completely), then an additional `errors_0001.`, `errors_0002.`,...,
   * `errors_N.` files are created (N depends on total number of failed predictions). These files
   * contain the failed instances, as per their schema, followed by an additional `error` field
   * which as value has google.rpc.Status containing only `code` and `message` fields.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1GcsDestination getGcsDestination() {
    return gcsDestination;
  }

  /**
   * The Cloud Storage location of the directory where the output is to be written to. In the given
   * directory a new directory is created. Its name is `prediction--`, where timestamp is in YYYY-
   * MM-DDThh:mm:ss.sssZ ISO-8601 format. Inside of it files `predictions_0001.`,
   * `predictions_0002.`, ..., `predictions_N.` are created where `` depends on chosen
   * predictions_format, and N may equal 0001 and depends on the total number of successfully
   * predicted instances. If the Model has both instance and prediction schemata defined then each
   * such file contains predictions as per the predictions_format. If prediction for any instance
   * failed (partially or completely), then an additional `errors_0001.`, `errors_0002.`,...,
   * `errors_N.` files are created (N depends on total number of failed predictions). These files
   * contain the failed instances, as per their schema, followed by an additional `error` field
   * which as value has google.rpc.Status containing only `code` and `message` fields.
   * @param gcsDestination gcsDestination or {@code null} for none
   */
  public GoogleCloudAiplatformV1BatchPredictionJobOutputConfig setGcsDestination(GoogleCloudAiplatformV1GcsDestination gcsDestination) {
    this.gcsDestination = gcsDestination;
    return this;
  }

  /**
   * Required. The format in which Vertex AI gives the predictions, must be one of the Model's
   * supported_output_storage_formats.
   * @return value or {@code null} for none
   */
  public java.lang.String getPredictionsFormat() {
    return predictionsFormat;
  }

  /**
   * Required. The format in which Vertex AI gives the predictions, must be one of the Model's
   * supported_output_storage_formats.
   * @param predictionsFormat predictionsFormat or {@code null} for none
   */
  public GoogleCloudAiplatformV1BatchPredictionJobOutputConfig setPredictionsFormat(java.lang.String predictionsFormat) {
    this.predictionsFormat = predictionsFormat;
    return this;
  }

  @Override
  public GoogleCloudAiplatformV1BatchPredictionJobOutputConfig set(String fieldName, Object value) {
    return (GoogleCloudAiplatformV1BatchPredictionJobOutputConfig) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudAiplatformV1BatchPredictionJobOutputConfig clone() {
    return (GoogleCloudAiplatformV1BatchPredictionJobOutputConfig) super.clone();
  }

}
