/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.discoveryengine.v1.model;

/**
 * Unstructured data linked to this document.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Discovery Engine API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDiscoveryengineV1DocumentContent extends com.google.api.client.json.GenericJson {

  /**
   * The MIME type of the content. Supported types: * `application/pdf` (PDF, only native PDFs are
   * supported for now) * `text/html` (HTML) * `application/vnd.openxmlformats-
   * officedocument.wordprocessingml.document` (DOCX) * `application/vnd.openxmlformats-
   * officedocument.presentationml.presentation` (PPTX) * `text/plain` (TXT) See
   * https://www.iana.org/assignments/media-types/media-types.xhtml.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String mimeType;

  /**
   * The content represented as a stream of bytes. The maximum length is 1,000,000 bytes (1 MB /
   * ~0.95 MiB). Note: As with all `bytes` fields, this field is represented as pure binary in
   * Protocol Buffers and base64-encoded string in JSON. For example, `abc123!?$*&()'-=@~` should be
   * represented as `YWJjMTIzIT8kKiYoKSctPUB+` in JSON. See https://developers.google.com/protocol-
   * buffers/docs/proto3#json.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String rawBytes;

  /**
   * The URI of the content. Only Cloud Storage URIs (e.g. `gs://bucket-name/path/to/file`) are
   * supported. The maximum file size is 2.5 MB for text-based formats, 100 MB for other formats.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String uri;

  /**
   * The MIME type of the content. Supported types: * `application/pdf` (PDF, only native PDFs are
   * supported for now) * `text/html` (HTML) * `application/vnd.openxmlformats-
   * officedocument.wordprocessingml.document` (DOCX) * `application/vnd.openxmlformats-
   * officedocument.presentationml.presentation` (PPTX) * `text/plain` (TXT) See
   * https://www.iana.org/assignments/media-types/media-types.xhtml.
   * @return value or {@code null} for none
   */
  public java.lang.String getMimeType() {
    return mimeType;
  }

  /**
   * The MIME type of the content. Supported types: * `application/pdf` (PDF, only native PDFs are
   * supported for now) * `text/html` (HTML) * `application/vnd.openxmlformats-
   * officedocument.wordprocessingml.document` (DOCX) * `application/vnd.openxmlformats-
   * officedocument.presentationml.presentation` (PPTX) * `text/plain` (TXT) See
   * https://www.iana.org/assignments/media-types/media-types.xhtml.
   * @param mimeType mimeType or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1DocumentContent setMimeType(java.lang.String mimeType) {
    this.mimeType = mimeType;
    return this;
  }

  /**
   * The content represented as a stream of bytes. The maximum length is 1,000,000 bytes (1 MB /
   * ~0.95 MiB). Note: As with all `bytes` fields, this field is represented as pure binary in
   * Protocol Buffers and base64-encoded string in JSON. For example, `abc123!?$*&()'-=@~` should be
   * represented as `YWJjMTIzIT8kKiYoKSctPUB+` in JSON. See https://developers.google.com/protocol-
   * buffers/docs/proto3#json.
   * @see #decodeRawBytes()
   * @return value or {@code null} for none
   */
  public java.lang.String getRawBytes() {
    return rawBytes;
  }

  /**
   * The content represented as a stream of bytes. The maximum length is 1,000,000 bytes (1 MB /
   * ~0.95 MiB). Note: As with all `bytes` fields, this field is represented as pure binary in
   * Protocol Buffers and base64-encoded string in JSON. For example, `abc123!?$*&()'-=@~` should be
   * represented as `YWJjMTIzIT8kKiYoKSctPUB+` in JSON. See https://developers.google.com/protocol-
   * buffers/docs/proto3#json.
   * @see #getRawBytes()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeRawBytes() {
    return com.google.api.client.util.Base64.decodeBase64(rawBytes);
  }

  /**
   * The content represented as a stream of bytes. The maximum length is 1,000,000 bytes (1 MB /
   * ~0.95 MiB). Note: As with all `bytes` fields, this field is represented as pure binary in
   * Protocol Buffers and base64-encoded string in JSON. For example, `abc123!?$*&()'-=@~` should be
   * represented as `YWJjMTIzIT8kKiYoKSctPUB+` in JSON. See https://developers.google.com/protocol-
   * buffers/docs/proto3#json.
   * @see #encodeRawBytes()
   * @param rawBytes rawBytes or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1DocumentContent setRawBytes(java.lang.String rawBytes) {
    this.rawBytes = rawBytes;
    return this;
  }

  /**
   * The content represented as a stream of bytes. The maximum length is 1,000,000 bytes (1 MB /
   * ~0.95 MiB). Note: As with all `bytes` fields, this field is represented as pure binary in
   * Protocol Buffers and base64-encoded string in JSON. For example, `abc123!?$*&()'-=@~` should be
   * represented as `YWJjMTIzIT8kKiYoKSctPUB+` in JSON. See https://developers.google.com/protocol-
   * buffers/docs/proto3#json.
   * @see #setRawBytes()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public GoogleCloudDiscoveryengineV1DocumentContent encodeRawBytes(byte[] rawBytes) {
    this.rawBytes = com.google.api.client.util.Base64.encodeBase64URLSafeString(rawBytes);
    return this;
  }

  /**
   * The URI of the content. Only Cloud Storage URIs (e.g. `gs://bucket-name/path/to/file`) are
   * supported. The maximum file size is 2.5 MB for text-based formats, 100 MB for other formats.
   * @return value or {@code null} for none
   */
  public java.lang.String getUri() {
    return uri;
  }

  /**
   * The URI of the content. Only Cloud Storage URIs (e.g. `gs://bucket-name/path/to/file`) are
   * supported. The maximum file size is 2.5 MB for text-based formats, 100 MB for other formats.
   * @param uri uri or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1DocumentContent setUri(java.lang.String uri) {
    this.uri = uri;
    return this;
  }

  @Override
  public GoogleCloudDiscoveryengineV1DocumentContent set(String fieldName, Object value) {
    return (GoogleCloudDiscoveryengineV1DocumentContent) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDiscoveryengineV1DocumentContent clone() {
    return (GoogleCloudDiscoveryengineV1DocumentContent) super.clone();
  }

}
