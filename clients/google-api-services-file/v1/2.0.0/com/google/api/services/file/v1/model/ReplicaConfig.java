/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.file.v1.model;

/**
 * Replica configuration for the instance.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Filestore API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ReplicaConfig extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The timestamp of the latest replication snapshot taken on the active instance and
   * is already replicated safely.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String lastActiveSyncTime;

  /**
   * Optional. The peer instance.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String peerInstance;

  /**
   * Output only. The replica state.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Output only. Additional information about the replication state, if available.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> stateReasons;

  /**
   * Output only. The timestamp of the latest replication snapshot taken on the active instance and
   * is already replicated safely.
   * @return value or {@code null} for none
   */
  public String getLastActiveSyncTime() {
    return lastActiveSyncTime;
  }

  /**
   * Output only. The timestamp of the latest replication snapshot taken on the active instance and
   * is already replicated safely.
   * @param lastActiveSyncTime lastActiveSyncTime or {@code null} for none
   */
  public ReplicaConfig setLastActiveSyncTime(String lastActiveSyncTime) {
    this.lastActiveSyncTime = lastActiveSyncTime;
    return this;
  }

  /**
   * Optional. The peer instance.
   * @return value or {@code null} for none
   */
  public java.lang.String getPeerInstance() {
    return peerInstance;
  }

  /**
   * Optional. The peer instance.
   * @param peerInstance peerInstance or {@code null} for none
   */
  public ReplicaConfig setPeerInstance(java.lang.String peerInstance) {
    this.peerInstance = peerInstance;
    return this;
  }

  /**
   * Output only. The replica state.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. The replica state.
   * @param state state or {@code null} for none
   */
  public ReplicaConfig setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Output only. Additional information about the replication state, if available.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getStateReasons() {
    return stateReasons;
  }

  /**
   * Output only. Additional information about the replication state, if available.
   * @param stateReasons stateReasons or {@code null} for none
   */
  public ReplicaConfig setStateReasons(java.util.List<java.lang.String> stateReasons) {
    this.stateReasons = stateReasons;
    return this;
  }

  @Override
  public ReplicaConfig set(String fieldName, Object value) {
    return (ReplicaConfig) super.set(fieldName, value);
  }

  @Override
  public ReplicaConfig clone() {
    return (ReplicaConfig) super.clone();
  }

}
