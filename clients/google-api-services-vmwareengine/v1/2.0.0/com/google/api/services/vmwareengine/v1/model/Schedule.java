/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.vmwareengine.v1.model;

/**
 * Schedule for the upgrade.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the VMware Engine API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Schedule extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Output Only. Constraints applied to the schedule. These constraints should be
   * applicable at the time of any rescheduling.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Constraints constraints;

  /**
   * Output only. Output Only. The schedule is open for edits during this time interval or window.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Interval editWindow;

  /**
   * Output only. Output Only. Indicates who most recently edited the upgrade schedule. The value is
   * updated whenever the upgrade is rescheduled.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String lastEditor;

  /**
   * Required. The scheduled start time for the upgrade.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String startTime;

  /**
   * Required. Weekly time windows for upgrade activities. The server performs upgrade activities
   * during these time windows to minimize disruptions.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<TimeWindow> weeklyWindows;

  /**
   * Output only. Output Only. Constraints applied to the schedule. These constraints should be
   * applicable at the time of any rescheduling.
   * @return value or {@code null} for none
   */
  public Constraints getConstraints() {
    return constraints;
  }

  /**
   * Output only. Output Only. Constraints applied to the schedule. These constraints should be
   * applicable at the time of any rescheduling.
   * @param constraints constraints or {@code null} for none
   */
  public Schedule setConstraints(Constraints constraints) {
    this.constraints = constraints;
    return this;
  }

  /**
   * Output only. Output Only. The schedule is open for edits during this time interval or window.
   * @return value or {@code null} for none
   */
  public Interval getEditWindow() {
    return editWindow;
  }

  /**
   * Output only. Output Only. The schedule is open for edits during this time interval or window.
   * @param editWindow editWindow or {@code null} for none
   */
  public Schedule setEditWindow(Interval editWindow) {
    this.editWindow = editWindow;
    return this;
  }

  /**
   * Output only. Output Only. Indicates who most recently edited the upgrade schedule. The value is
   * updated whenever the upgrade is rescheduled.
   * @return value or {@code null} for none
   */
  public java.lang.String getLastEditor() {
    return lastEditor;
  }

  /**
   * Output only. Output Only. Indicates who most recently edited the upgrade schedule. The value is
   * updated whenever the upgrade is rescheduled.
   * @param lastEditor lastEditor or {@code null} for none
   */
  public Schedule setLastEditor(java.lang.String lastEditor) {
    this.lastEditor = lastEditor;
    return this;
  }

  /**
   * Required. The scheduled start time for the upgrade.
   * @return value or {@code null} for none
   */
  public String getStartTime() {
    return startTime;
  }

  /**
   * Required. The scheduled start time for the upgrade.
   * @param startTime startTime or {@code null} for none
   */
  public Schedule setStartTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Required. Weekly time windows for upgrade activities. The server performs upgrade activities
   * during these time windows to minimize disruptions.
   * @return value or {@code null} for none
   */
  public java.util.List<TimeWindow> getWeeklyWindows() {
    return weeklyWindows;
  }

  /**
   * Required. Weekly time windows for upgrade activities. The server performs upgrade activities
   * during these time windows to minimize disruptions.
   * @param weeklyWindows weeklyWindows or {@code null} for none
   */
  public Schedule setWeeklyWindows(java.util.List<TimeWindow> weeklyWindows) {
    this.weeklyWindows = weeklyWindows;
    return this;
  }

  @Override
  public Schedule set(String fieldName, Object value) {
    return (Schedule) super.set(fieldName, value);
  }

  @Override
  public Schedule clone() {
    return (Schedule) super.clone();
  }

}
