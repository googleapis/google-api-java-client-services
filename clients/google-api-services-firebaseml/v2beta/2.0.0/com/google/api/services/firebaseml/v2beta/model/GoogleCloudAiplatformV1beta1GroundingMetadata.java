/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.firebaseml.v2beta.model;

/**
 * Information about the sources that support the content of a response. When grounding is enabled,
 * the model returns citations for claims in the response. This object contains the retrieved
 * sources.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Firebase ML API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudAiplatformV1beta1GroundingMetadata extends com.google.api.client.json.GenericJson {

  /**
   * Optional. Output only. A token that can be used to render a Google Maps widget with the
   * contextual data. This field is populated only when the grounding source is Google Maps.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String googleMapsWidgetContextToken;

  /**
   * A list of supporting references retrieved from the grounding source. This field is populated
   * when the grounding source is Google Search, Vertex AI Search, or Google Maps.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudAiplatformV1beta1GroundingChunk> groundingChunks;

  static {
    // hack to force ProGuard to consider GoogleCloudAiplatformV1beta1GroundingChunk used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(GoogleCloudAiplatformV1beta1GroundingChunk.class);
  }

  /**
   * Optional. A list of grounding supports that connect the generated content to the grounding
   * chunks. This field is populated when the grounding source is Google Search or Vertex AI Search.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudAiplatformV1beta1GroundingSupport> groundingSupports;

  /**
   * Optional. Output only. Metadata related to the retrieval grounding source.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1beta1RetrievalMetadata retrievalMetadata;

  /**
   * Optional. The queries that were executed by the retrieval tools. This field is populated only
   * when the grounding source is a retrieval tool, such as Vertex AI Search.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> retrievalQueries;

  /**
   * Optional. A web search entry point that can be used to display search results. This field is
   * populated only when the grounding source is Google Search.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1beta1SearchEntryPoint searchEntryPoint;

  /**
   * Optional. Output only. A list of URIs that can be used to flag a place or review for
   * inappropriate content. This field is populated only when the grounding source is Google Maps.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudAiplatformV1beta1GroundingMetadataSourceFlaggingUri> sourceFlaggingUris;

  /**
   * Optional. The web search queries that were used to generate the content. This field is
   * populated only when the grounding source is Google Search.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> webSearchQueries;

  /**
   * Optional. Output only. A token that can be used to render a Google Maps widget with the
   * contextual data. This field is populated only when the grounding source is Google Maps.
   * @return value or {@code null} for none
   */
  public java.lang.String getGoogleMapsWidgetContextToken() {
    return googleMapsWidgetContextToken;
  }

  /**
   * Optional. Output only. A token that can be used to render a Google Maps widget with the
   * contextual data. This field is populated only when the grounding source is Google Maps.
   * @param googleMapsWidgetContextToken googleMapsWidgetContextToken or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1GroundingMetadata setGoogleMapsWidgetContextToken(java.lang.String googleMapsWidgetContextToken) {
    this.googleMapsWidgetContextToken = googleMapsWidgetContextToken;
    return this;
  }

  /**
   * A list of supporting references retrieved from the grounding source. This field is populated
   * when the grounding source is Google Search, Vertex AI Search, or Google Maps.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudAiplatformV1beta1GroundingChunk> getGroundingChunks() {
    return groundingChunks;
  }

  /**
   * A list of supporting references retrieved from the grounding source. This field is populated
   * when the grounding source is Google Search, Vertex AI Search, or Google Maps.
   * @param groundingChunks groundingChunks or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1GroundingMetadata setGroundingChunks(java.util.List<GoogleCloudAiplatformV1beta1GroundingChunk> groundingChunks) {
    this.groundingChunks = groundingChunks;
    return this;
  }

  /**
   * Optional. A list of grounding supports that connect the generated content to the grounding
   * chunks. This field is populated when the grounding source is Google Search or Vertex AI Search.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudAiplatformV1beta1GroundingSupport> getGroundingSupports() {
    return groundingSupports;
  }

  /**
   * Optional. A list of grounding supports that connect the generated content to the grounding
   * chunks. This field is populated when the grounding source is Google Search or Vertex AI Search.
   * @param groundingSupports groundingSupports or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1GroundingMetadata setGroundingSupports(java.util.List<GoogleCloudAiplatformV1beta1GroundingSupport> groundingSupports) {
    this.groundingSupports = groundingSupports;
    return this;
  }

  /**
   * Optional. Output only. Metadata related to the retrieval grounding source.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1RetrievalMetadata getRetrievalMetadata() {
    return retrievalMetadata;
  }

  /**
   * Optional. Output only. Metadata related to the retrieval grounding source.
   * @param retrievalMetadata retrievalMetadata or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1GroundingMetadata setRetrievalMetadata(GoogleCloudAiplatformV1beta1RetrievalMetadata retrievalMetadata) {
    this.retrievalMetadata = retrievalMetadata;
    return this;
  }

  /**
   * Optional. The queries that were executed by the retrieval tools. This field is populated only
   * when the grounding source is a retrieval tool, such as Vertex AI Search.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getRetrievalQueries() {
    return retrievalQueries;
  }

  /**
   * Optional. The queries that were executed by the retrieval tools. This field is populated only
   * when the grounding source is a retrieval tool, such as Vertex AI Search.
   * @param retrievalQueries retrievalQueries or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1GroundingMetadata setRetrievalQueries(java.util.List<java.lang.String> retrievalQueries) {
    this.retrievalQueries = retrievalQueries;
    return this;
  }

  /**
   * Optional. A web search entry point that can be used to display search results. This field is
   * populated only when the grounding source is Google Search.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1SearchEntryPoint getSearchEntryPoint() {
    return searchEntryPoint;
  }

  /**
   * Optional. A web search entry point that can be used to display search results. This field is
   * populated only when the grounding source is Google Search.
   * @param searchEntryPoint searchEntryPoint or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1GroundingMetadata setSearchEntryPoint(GoogleCloudAiplatformV1beta1SearchEntryPoint searchEntryPoint) {
    this.searchEntryPoint = searchEntryPoint;
    return this;
  }

  /**
   * Optional. Output only. A list of URIs that can be used to flag a place or review for
   * inappropriate content. This field is populated only when the grounding source is Google Maps.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudAiplatformV1beta1GroundingMetadataSourceFlaggingUri> getSourceFlaggingUris() {
    return sourceFlaggingUris;
  }

  /**
   * Optional. Output only. A list of URIs that can be used to flag a place or review for
   * inappropriate content. This field is populated only when the grounding source is Google Maps.
   * @param sourceFlaggingUris sourceFlaggingUris or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1GroundingMetadata setSourceFlaggingUris(java.util.List<GoogleCloudAiplatformV1beta1GroundingMetadataSourceFlaggingUri> sourceFlaggingUris) {
    this.sourceFlaggingUris = sourceFlaggingUris;
    return this;
  }

  /**
   * Optional. The web search queries that were used to generate the content. This field is
   * populated only when the grounding source is Google Search.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getWebSearchQueries() {
    return webSearchQueries;
  }

  /**
   * Optional. The web search queries that were used to generate the content. This field is
   * populated only when the grounding source is Google Search.
   * @param webSearchQueries webSearchQueries or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1GroundingMetadata setWebSearchQueries(java.util.List<java.lang.String> webSearchQueries) {
    this.webSearchQueries = webSearchQueries;
    return this;
  }

  @Override
  public GoogleCloudAiplatformV1beta1GroundingMetadata set(String fieldName, Object value) {
    return (GoogleCloudAiplatformV1beta1GroundingMetadata) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudAiplatformV1beta1GroundingMetadata clone() {
    return (GoogleCloudAiplatformV1beta1GroundingMetadata) super.clone();
  }

}
