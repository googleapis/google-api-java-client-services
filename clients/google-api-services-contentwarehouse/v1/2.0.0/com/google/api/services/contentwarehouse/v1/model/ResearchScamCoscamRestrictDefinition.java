/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * RestrictDefinition: the set of conjunctions and disjunctions that define a single OR-of-ANDs-of-
 * ORs restrict definition.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ResearchScamCoscamRestrictDefinition extends com.google.api.client.json.GenericJson {

  /**
   * conjunctions - each conjunction is an AND-of-ORs; if any of these conjunctions match, then the
   * entire restrict matches.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<ResearchScamCoscamConjunction> conjunctions;

  static {
    // hack to force ProGuard to consider ResearchScamCoscamConjunction used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(ResearchScamCoscamConjunction.class);
  }

  /**
   * disjunctions - each disjunction is an OR clause.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<ResearchScamCoscamDisjunction> disjunctions;

  static {
    // hack to force ProGuard to consider ResearchScamCoscamDisjunction used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(ResearchScamCoscamDisjunction.class);
  }

  /**
   * subs_key - ignore. Only used for testing.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.math.BigInteger subsKey;

  /**
   * conjunctions - each conjunction is an AND-of-ORs; if any of these conjunctions match, then the
   * entire restrict matches.
   * @return value or {@code null} for none
   */
  public java.util.List<ResearchScamCoscamConjunction> getConjunctions() {
    return conjunctions;
  }

  /**
   * conjunctions - each conjunction is an AND-of-ORs; if any of these conjunctions match, then the
   * entire restrict matches.
   * @param conjunctions conjunctions or {@code null} for none
   */
  public ResearchScamCoscamRestrictDefinition setConjunctions(java.util.List<ResearchScamCoscamConjunction> conjunctions) {
    this.conjunctions = conjunctions;
    return this;
  }

  /**
   * disjunctions - each disjunction is an OR clause.
   * @return value or {@code null} for none
   */
  public java.util.List<ResearchScamCoscamDisjunction> getDisjunctions() {
    return disjunctions;
  }

  /**
   * disjunctions - each disjunction is an OR clause.
   * @param disjunctions disjunctions or {@code null} for none
   */
  public ResearchScamCoscamRestrictDefinition setDisjunctions(java.util.List<ResearchScamCoscamDisjunction> disjunctions) {
    this.disjunctions = disjunctions;
    return this;
  }

  /**
   * subs_key - ignore. Only used for testing.
   * @return value or {@code null} for none
   */
  public java.math.BigInteger getSubsKey() {
    return subsKey;
  }

  /**
   * subs_key - ignore. Only used for testing.
   * @param subsKey subsKey or {@code null} for none
   */
  public ResearchScamCoscamRestrictDefinition setSubsKey(java.math.BigInteger subsKey) {
    this.subsKey = subsKey;
    return this;
  }

  @Override
  public ResearchScamCoscamRestrictDefinition set(String fieldName, Object value) {
    return (ResearchScamCoscamRestrictDefinition) super.set(fieldName, value);
  }

  @Override
  public ResearchScamCoscamRestrictDefinition clone() {
    return (ResearchScamCoscamRestrictDefinition) super.clone();
  }

}
