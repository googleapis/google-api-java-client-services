/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.aiplatform.v1.model;

/**
 * Model definition for LearningGenaiRootFilterMetadata.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Vertex AI API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class LearningGenaiRootFilterMetadata extends com.google.api.client.json.GenericJson {

  /**
   * Filter confidence.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String confidence;

  /**
   * Debug info for the message.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private LearningGenaiRootFilterMetadataFilterDebugInfo debugInfo;

  /**
   * A fallback message chosen by the applied filter.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String fallback;

  /**
   * Additional info for the filter.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String info;

  /**
   * Name of the filter that triggered.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Filter reason.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String reason;

  /**
   * The input query or generated response that is getting filtered.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String text;

  /**
   * Filter confidence.
   * @return value or {@code null} for none
   */
  public java.lang.String getConfidence() {
    return confidence;
  }

  /**
   * Filter confidence.
   * @param confidence confidence or {@code null} for none
   */
  public LearningGenaiRootFilterMetadata setConfidence(java.lang.String confidence) {
    this.confidence = confidence;
    return this;
  }

  /**
   * Debug info for the message.
   * @return value or {@code null} for none
   */
  public LearningGenaiRootFilterMetadataFilterDebugInfo getDebugInfo() {
    return debugInfo;
  }

  /**
   * Debug info for the message.
   * @param debugInfo debugInfo or {@code null} for none
   */
  public LearningGenaiRootFilterMetadata setDebugInfo(LearningGenaiRootFilterMetadataFilterDebugInfo debugInfo) {
    this.debugInfo = debugInfo;
    return this;
  }

  /**
   * A fallback message chosen by the applied filter.
   * @return value or {@code null} for none
   */
  public java.lang.String getFallback() {
    return fallback;
  }

  /**
   * A fallback message chosen by the applied filter.
   * @param fallback fallback or {@code null} for none
   */
  public LearningGenaiRootFilterMetadata setFallback(java.lang.String fallback) {
    this.fallback = fallback;
    return this;
  }

  /**
   * Additional info for the filter.
   * @return value or {@code null} for none
   */
  public java.lang.String getInfo() {
    return info;
  }

  /**
   * Additional info for the filter.
   * @param info info or {@code null} for none
   */
  public LearningGenaiRootFilterMetadata setInfo(java.lang.String info) {
    this.info = info;
    return this;
  }

  /**
   * Name of the filter that triggered.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Name of the filter that triggered.
   * @param name name or {@code null} for none
   */
  public LearningGenaiRootFilterMetadata setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Filter reason.
   * @return value or {@code null} for none
   */
  public java.lang.String getReason() {
    return reason;
  }

  /**
   * Filter reason.
   * @param reason reason or {@code null} for none
   */
  public LearningGenaiRootFilterMetadata setReason(java.lang.String reason) {
    this.reason = reason;
    return this;
  }

  /**
   * The input query or generated response that is getting filtered.
   * @return value or {@code null} for none
   */
  public java.lang.String getText() {
    return text;
  }

  /**
   * The input query or generated response that is getting filtered.
   * @param text text or {@code null} for none
   */
  public LearningGenaiRootFilterMetadata setText(java.lang.String text) {
    this.text = text;
    return this;
  }

  @Override
  public LearningGenaiRootFilterMetadata set(String fieldName, Object value) {
    return (LearningGenaiRootFilterMetadata) super.set(fieldName, value);
  }

  @Override
  public LearningGenaiRootFilterMetadata clone() {
    return (LearningGenaiRootFilterMetadata) super.clone();
  }

}
