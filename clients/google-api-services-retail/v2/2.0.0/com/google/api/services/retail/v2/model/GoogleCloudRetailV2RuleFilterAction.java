/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.retail.v2.model;

/**
 * * Rule Condition: - No Condition.query_terms provided is a global match. - 1 or more
 * Condition.query_terms provided are combined with OR operator. * Action Input: The request query
 * and filter that are applied to the retrieved products, in addition to any filters already
 * provided with the SearchRequest. The AND operator is used to combine the query's existing filters
 * with the filter rule(s). NOTE: May result in 0 results when filters conflict. * Action Result:
 * Filters the returned objects to be ONLY those that passed the filter.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Retail API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudRetailV2RuleFilterAction extends com.google.api.client.json.GenericJson {

  /**
   * A filter to apply on the matching condition results. Supported features: * filter must be set.
   * * Filter syntax is identical to SearchRequest.filter. For more information, see
   * [Filter](/retail/docs/filter-and-order#filter). * To filter products with product ID
   * "product_1" or "product_2", and color "Red" or "Blue": *(id: ANY("product_1", "product_2")) *
   * *AND * *(colorFamilies: ANY("Red", "Blue")) *
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String filter;

  /**
   * A filter to apply on the matching condition results. Supported features: * filter must be set.
   * * Filter syntax is identical to SearchRequest.filter. For more information, see
   * [Filter](/retail/docs/filter-and-order#filter). * To filter products with product ID
   * "product_1" or "product_2", and color "Red" or "Blue": *(id: ANY("product_1", "product_2")) *
   * *AND * *(colorFamilies: ANY("Red", "Blue")) *
   * @return value or {@code null} for none
   */
  public java.lang.String getFilter() {
    return filter;
  }

  /**
   * A filter to apply on the matching condition results. Supported features: * filter must be set.
   * * Filter syntax is identical to SearchRequest.filter. For more information, see
   * [Filter](/retail/docs/filter-and-order#filter). * To filter products with product ID
   * "product_1" or "product_2", and color "Red" or "Blue": *(id: ANY("product_1", "product_2")) *
   * *AND * *(colorFamilies: ANY("Red", "Blue")) *
   * @param filter filter or {@code null} for none
   */
  public GoogleCloudRetailV2RuleFilterAction setFilter(java.lang.String filter) {
    this.filter = filter;
    return this;
  }

  @Override
  public GoogleCloudRetailV2RuleFilterAction set(String fieldName, Object value) {
    return (GoogleCloudRetailV2RuleFilterAction) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudRetailV2RuleFilterAction clone() {
    return (GoogleCloudRetailV2RuleFilterAction) super.clone();
  }

}
