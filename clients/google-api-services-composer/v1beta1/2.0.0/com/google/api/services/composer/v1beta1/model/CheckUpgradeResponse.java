/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.composer.v1beta1.model;

/**
 * Message containing information about the result of an upgrade check operation.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Composer API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class CheckUpgradeResponse extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Url for a docker build log of an upgraded image.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String buildLogUri;

  /**
   * Output only. Whether build has succeeded or failed on modules conflicts.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String containsPypiModulesConflict;

  /**
   * Composer image for which the build was happening.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String imageVersion;

  /**
   * Output only. Extract from a docker image build log containing information about pypi modules
   * conflicts.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String pypiConflictBuildLogExtract;

  /**
   * Pypi dependencies specified in the environment configuration, at the time when the build was
   * triggered.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> pypiDependencies;

  /**
   * Output only. Url for a docker build log of an upgraded image.
   * @return value or {@code null} for none
   */
  public java.lang.String getBuildLogUri() {
    return buildLogUri;
  }

  /**
   * Output only. Url for a docker build log of an upgraded image.
   * @param buildLogUri buildLogUri or {@code null} for none
   */
  public CheckUpgradeResponse setBuildLogUri(java.lang.String buildLogUri) {
    this.buildLogUri = buildLogUri;
    return this;
  }

  /**
   * Output only. Whether build has succeeded or failed on modules conflicts.
   * @return value or {@code null} for none
   */
  public java.lang.String getContainsPypiModulesConflict() {
    return containsPypiModulesConflict;
  }

  /**
   * Output only. Whether build has succeeded or failed on modules conflicts.
   * @param containsPypiModulesConflict containsPypiModulesConflict or {@code null} for none
   */
  public CheckUpgradeResponse setContainsPypiModulesConflict(java.lang.String containsPypiModulesConflict) {
    this.containsPypiModulesConflict = containsPypiModulesConflict;
    return this;
  }

  /**
   * Composer image for which the build was happening.
   * @return value or {@code null} for none
   */
  public java.lang.String getImageVersion() {
    return imageVersion;
  }

  /**
   * Composer image for which the build was happening.
   * @param imageVersion imageVersion or {@code null} for none
   */
  public CheckUpgradeResponse setImageVersion(java.lang.String imageVersion) {
    this.imageVersion = imageVersion;
    return this;
  }

  /**
   * Output only. Extract from a docker image build log containing information about pypi modules
   * conflicts.
   * @return value or {@code null} for none
   */
  public java.lang.String getPypiConflictBuildLogExtract() {
    return pypiConflictBuildLogExtract;
  }

  /**
   * Output only. Extract from a docker image build log containing information about pypi modules
   * conflicts.
   * @param pypiConflictBuildLogExtract pypiConflictBuildLogExtract or {@code null} for none
   */
  public CheckUpgradeResponse setPypiConflictBuildLogExtract(java.lang.String pypiConflictBuildLogExtract) {
    this.pypiConflictBuildLogExtract = pypiConflictBuildLogExtract;
    return this;
  }

  /**
   * Pypi dependencies specified in the environment configuration, at the time when the build was
   * triggered.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getPypiDependencies() {
    return pypiDependencies;
  }

  /**
   * Pypi dependencies specified in the environment configuration, at the time when the build was
   * triggered.
   * @param pypiDependencies pypiDependencies or {@code null} for none
   */
  public CheckUpgradeResponse setPypiDependencies(java.util.Map<String, java.lang.String> pypiDependencies) {
    this.pypiDependencies = pypiDependencies;
    return this;
  }

  @Override
  public CheckUpgradeResponse set(String fieldName, Object value) {
    return (CheckUpgradeResponse) super.set(fieldName, value);
  }

  @Override
  public CheckUpgradeResponse clone() {
    return (CheckUpgradeResponse) super.clone();
  }

}
