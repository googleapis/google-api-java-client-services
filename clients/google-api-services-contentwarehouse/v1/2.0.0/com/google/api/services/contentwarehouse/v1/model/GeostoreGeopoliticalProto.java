/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Model definition for GeostoreGeopoliticalProto.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GeostoreGeopoliticalProto extends com.google.api.client.json.GenericJson {

  /**
   * If present, some aspect of this feature (usually name or geometry) can signify ownership of the
   * area by the region specified. The string, if present, will be a region code. E.g., suppose a
   * TYPE_POSTAL_CODE feature has a Russian format in Crimea (which is disputed by Ukraine), then
   * this field would be set to "RU".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String conveysAttributionTo;

  /**
   * Any specific handling of this feature's name from different regions' POVs.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GeostoreRegionSpecificNameProto> regionSpecificName;

  /**
   * If present, some aspect of this feature (usually name or geometry) can signify ownership of the
   * area by the region specified. The string, if present, will be a region code. E.g., suppose a
   * TYPE_POSTAL_CODE feature has a Russian format in Crimea (which is disputed by Ukraine), then
   * this field would be set to "RU".
   * @return value or {@code null} for none
   */
  public java.lang.String getConveysAttributionTo() {
    return conveysAttributionTo;
  }

  /**
   * If present, some aspect of this feature (usually name or geometry) can signify ownership of the
   * area by the region specified. The string, if present, will be a region code. E.g., suppose a
   * TYPE_POSTAL_CODE feature has a Russian format in Crimea (which is disputed by Ukraine), then
   * this field would be set to "RU".
   * @param conveysAttributionTo conveysAttributionTo or {@code null} for none
   */
  public GeostoreGeopoliticalProto setConveysAttributionTo(java.lang.String conveysAttributionTo) {
    this.conveysAttributionTo = conveysAttributionTo;
    return this;
  }

  /**
   * Any specific handling of this feature's name from different regions' POVs.
   * @return value or {@code null} for none
   */
  public java.util.List<GeostoreRegionSpecificNameProto> getRegionSpecificName() {
    return regionSpecificName;
  }

  /**
   * Any specific handling of this feature's name from different regions' POVs.
   * @param regionSpecificName regionSpecificName or {@code null} for none
   */
  public GeostoreGeopoliticalProto setRegionSpecificName(java.util.List<GeostoreRegionSpecificNameProto> regionSpecificName) {
    this.regionSpecificName = regionSpecificName;
    return this;
  }

  @Override
  public GeostoreGeopoliticalProto set(String fieldName, Object value) {
    return (GeostoreGeopoliticalProto) super.set(fieldName, value);
  }

  @Override
  public GeostoreGeopoliticalProto clone() {
    return (GeostoreGeopoliticalProto) super.clone();
  }

}
