/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.ml.v1.model;

/**
 * Represents an environment variable to be made available in a container. This message is a subset
 * of the [Kubernetes EnvVar v1 core specification](https://kubernetes.io/docs/reference/generated
 * /kubernetes-api/v1.18/#envvar-v1-core).
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the AI Platform Training & Prediction API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudMlV1EnvVar extends com.google.api.client.json.GenericJson {

  /**
   * Name of the environment variable. Must be a [valid C identifier](https://github.com/kubernetes/
   * kubernetes/blob/v1.18.8/staging/src/k8s.io/apimachinery/pkg/util/validation/validation.go#L258)
   * and must not begin with the prefix `AIP_`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Value of the environment variable. Defaults to an empty string. In this field, you can
   * reference [environment variables set by AI Platform Prediction](/ai-platform/prediction/docs
   * /custom-container-requirements#aip-variables) and environment variables set earlier in the same
   * env field as where this message occurs. You cannot reference environment variables set in the
   * Docker image. In order for environment variables to be expanded, reference them by using the
   * following syntax: $(VARIABLE_NAME) Note that this differs from Bash variable expansion, which
   * does not use parentheses. If a variable cannot be resolved, the reference in the input string
   * is used unchanged. To avoid variable expansion, you can escape this syntax with `$$`; for
   * example: $$(VARIABLE_NAME)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String value;

  /**
   * Name of the environment variable. Must be a [valid C identifier](https://github.com/kubernetes/
   * kubernetes/blob/v1.18.8/staging/src/k8s.io/apimachinery/pkg/util/validation/validation.go#L258)
   * and must not begin with the prefix `AIP_`.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Name of the environment variable. Must be a [valid C identifier](https://github.com/kubernetes/
   * kubernetes/blob/v1.18.8/staging/src/k8s.io/apimachinery/pkg/util/validation/validation.go#L258)
   * and must not begin with the prefix `AIP_`.
   * @param name name or {@code null} for none
   */
  public GoogleCloudMlV1EnvVar setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Value of the environment variable. Defaults to an empty string. In this field, you can
   * reference [environment variables set by AI Platform Prediction](/ai-platform/prediction/docs
   * /custom-container-requirements#aip-variables) and environment variables set earlier in the same
   * env field as where this message occurs. You cannot reference environment variables set in the
   * Docker image. In order for environment variables to be expanded, reference them by using the
   * following syntax: $(VARIABLE_NAME) Note that this differs from Bash variable expansion, which
   * does not use parentheses. If a variable cannot be resolved, the reference in the input string
   * is used unchanged. To avoid variable expansion, you can escape this syntax with `$$`; for
   * example: $$(VARIABLE_NAME)
   * @return value or {@code null} for none
   */
  public java.lang.String getValue() {
    return value;
  }

  /**
   * Value of the environment variable. Defaults to an empty string. In this field, you can
   * reference [environment variables set by AI Platform Prediction](/ai-platform/prediction/docs
   * /custom-container-requirements#aip-variables) and environment variables set earlier in the same
   * env field as where this message occurs. You cannot reference environment variables set in the
   * Docker image. In order for environment variables to be expanded, reference them by using the
   * following syntax: $(VARIABLE_NAME) Note that this differs from Bash variable expansion, which
   * does not use parentheses. If a variable cannot be resolved, the reference in the input string
   * is used unchanged. To avoid variable expansion, you can escape this syntax with `$$`; for
   * example: $$(VARIABLE_NAME)
   * @param value value or {@code null} for none
   */
  public GoogleCloudMlV1EnvVar setValue(java.lang.String value) {
    this.value = value;
    return this;
  }

  @Override
  public GoogleCloudMlV1EnvVar set(String fieldName, Object value) {
    return (GoogleCloudMlV1EnvVar) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudMlV1EnvVar clone() {
    return (GoogleCloudMlV1EnvVar) super.clone();
  }

}
