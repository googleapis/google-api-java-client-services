/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.developerconnect.v1.model;

/**
 * User represents a user connected to the service providers through a AccountConnector.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Developer Connect API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class User extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The timestamp when the user was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Output only. Developer Connect automatically converts user identity to some human readable
   * description, e.g., email address.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Output only. The timestamp when the token was last requested.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String lastTokenRequestTime;

  /**
   * Identifier. Resource name of the user, in the format
   * `projects/locations/accountConnectors/users`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. The timestamp when the user was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The timestamp when the user was created.
   * @param createTime createTime or {@code null} for none
   */
  public User setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Output only. Developer Connect automatically converts user identity to some human readable
   * description, e.g., email address.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Output only. Developer Connect automatically converts user identity to some human readable
   * description, e.g., email address.
   * @param displayName displayName or {@code null} for none
   */
  public User setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Output only. The timestamp when the token was last requested.
   * @return value or {@code null} for none
   */
  public String getLastTokenRequestTime() {
    return lastTokenRequestTime;
  }

  /**
   * Output only. The timestamp when the token was last requested.
   * @param lastTokenRequestTime lastTokenRequestTime or {@code null} for none
   */
  public User setLastTokenRequestTime(String lastTokenRequestTime) {
    this.lastTokenRequestTime = lastTokenRequestTime;
    return this;
  }

  /**
   * Identifier. Resource name of the user, in the format
   * `projects/locations/accountConnectors/users`.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Identifier. Resource name of the user, in the format
   * `projects/locations/accountConnectors/users`.
   * @param name name or {@code null} for none
   */
  public User setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  @Override
  public User set(String fieldName, Object value) {
    return (User) super.set(fieldName, value);
  }

  @Override
  public User clone() {
    return (User) super.clone();
  }

}
