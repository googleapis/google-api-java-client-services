/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.gkehub.v1alpha.model;

/**
 * Configuration for OIDC Auth flow.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the GKE Hub API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class IdentityServiceOidcConfig extends com.google.api.client.json.GenericJson {

  /**
   * PEM-encoded CA for OIDC provider.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String certificateAuthorityData;

  /**
   * ID for OIDC client application.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String clientId;

  /**
   * Flag to denote if reverse proxy is used to connect to auth provider. This flag should be set to
   * true when provider is not reachable by Google Cloud Console.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean deployCloudConsoleProxy;

  /**
   * Comma-separated list of key-value pairs.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String extraParams;

  /**
   * Prefix to prepend to group name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String groupPrefix;

  /**
   * Claim in OIDC ID token that holds group information.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String groupsClaim;

  /**
   * URI for the OIDC provider. This should point to the level below .well-known/openid-
   * configuration.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String issuerUri;

  /**
   * Registered redirect uri to redirect users going through OAuth flow using kubectl plugin.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String kubectlRedirectUri;

  /**
   * Comma-separated list of identifiers.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String scopes;

  /**
   * Claim in OIDC ID token that holds username.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String userClaim;

  /**
   * Prefix to prepend to user name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String userPrefix;

  /**
   * PEM-encoded CA for OIDC provider.
   * @return value or {@code null} for none
   */
  public java.lang.String getCertificateAuthorityData() {
    return certificateAuthorityData;
  }

  /**
   * PEM-encoded CA for OIDC provider.
   * @param certificateAuthorityData certificateAuthorityData or {@code null} for none
   */
  public IdentityServiceOidcConfig setCertificateAuthorityData(java.lang.String certificateAuthorityData) {
    this.certificateAuthorityData = certificateAuthorityData;
    return this;
  }

  /**
   * ID for OIDC client application.
   * @return value or {@code null} for none
   */
  public java.lang.String getClientId() {
    return clientId;
  }

  /**
   * ID for OIDC client application.
   * @param clientId clientId or {@code null} for none
   */
  public IdentityServiceOidcConfig setClientId(java.lang.String clientId) {
    this.clientId = clientId;
    return this;
  }

  /**
   * Flag to denote if reverse proxy is used to connect to auth provider. This flag should be set to
   * true when provider is not reachable by Google Cloud Console.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getDeployCloudConsoleProxy() {
    return deployCloudConsoleProxy;
  }

  /**
   * Flag to denote if reverse proxy is used to connect to auth provider. This flag should be set to
   * true when provider is not reachable by Google Cloud Console.
   * @param deployCloudConsoleProxy deployCloudConsoleProxy or {@code null} for none
   */
  public IdentityServiceOidcConfig setDeployCloudConsoleProxy(java.lang.Boolean deployCloudConsoleProxy) {
    this.deployCloudConsoleProxy = deployCloudConsoleProxy;
    return this;
  }

  /**
   * Comma-separated list of key-value pairs.
   * @return value or {@code null} for none
   */
  public java.lang.String getExtraParams() {
    return extraParams;
  }

  /**
   * Comma-separated list of key-value pairs.
   * @param extraParams extraParams or {@code null} for none
   */
  public IdentityServiceOidcConfig setExtraParams(java.lang.String extraParams) {
    this.extraParams = extraParams;
    return this;
  }

  /**
   * Prefix to prepend to group name.
   * @return value or {@code null} for none
   */
  public java.lang.String getGroupPrefix() {
    return groupPrefix;
  }

  /**
   * Prefix to prepend to group name.
   * @param groupPrefix groupPrefix or {@code null} for none
   */
  public IdentityServiceOidcConfig setGroupPrefix(java.lang.String groupPrefix) {
    this.groupPrefix = groupPrefix;
    return this;
  }

  /**
   * Claim in OIDC ID token that holds group information.
   * @return value or {@code null} for none
   */
  public java.lang.String getGroupsClaim() {
    return groupsClaim;
  }

  /**
   * Claim in OIDC ID token that holds group information.
   * @param groupsClaim groupsClaim or {@code null} for none
   */
  public IdentityServiceOidcConfig setGroupsClaim(java.lang.String groupsClaim) {
    this.groupsClaim = groupsClaim;
    return this;
  }

  /**
   * URI for the OIDC provider. This should point to the level below .well-known/openid-
   * configuration.
   * @return value or {@code null} for none
   */
  public java.lang.String getIssuerUri() {
    return issuerUri;
  }

  /**
   * URI for the OIDC provider. This should point to the level below .well-known/openid-
   * configuration.
   * @param issuerUri issuerUri or {@code null} for none
   */
  public IdentityServiceOidcConfig setIssuerUri(java.lang.String issuerUri) {
    this.issuerUri = issuerUri;
    return this;
  }

  /**
   * Registered redirect uri to redirect users going through OAuth flow using kubectl plugin.
   * @return value or {@code null} for none
   */
  public java.lang.String getKubectlRedirectUri() {
    return kubectlRedirectUri;
  }

  /**
   * Registered redirect uri to redirect users going through OAuth flow using kubectl plugin.
   * @param kubectlRedirectUri kubectlRedirectUri or {@code null} for none
   */
  public IdentityServiceOidcConfig setKubectlRedirectUri(java.lang.String kubectlRedirectUri) {
    this.kubectlRedirectUri = kubectlRedirectUri;
    return this;
  }

  /**
   * Comma-separated list of identifiers.
   * @return value or {@code null} for none
   */
  public java.lang.String getScopes() {
    return scopes;
  }

  /**
   * Comma-separated list of identifiers.
   * @param scopes scopes or {@code null} for none
   */
  public IdentityServiceOidcConfig setScopes(java.lang.String scopes) {
    this.scopes = scopes;
    return this;
  }

  /**
   * Claim in OIDC ID token that holds username.
   * @return value or {@code null} for none
   */
  public java.lang.String getUserClaim() {
    return userClaim;
  }

  /**
   * Claim in OIDC ID token that holds username.
   * @param userClaim userClaim or {@code null} for none
   */
  public IdentityServiceOidcConfig setUserClaim(java.lang.String userClaim) {
    this.userClaim = userClaim;
    return this;
  }

  /**
   * Prefix to prepend to user name.
   * @return value or {@code null} for none
   */
  public java.lang.String getUserPrefix() {
    return userPrefix;
  }

  /**
   * Prefix to prepend to user name.
   * @param userPrefix userPrefix or {@code null} for none
   */
  public IdentityServiceOidcConfig setUserPrefix(java.lang.String userPrefix) {
    this.userPrefix = userPrefix;
    return this;
  }

  @Override
  public IdentityServiceOidcConfig set(String fieldName, Object value) {
    return (IdentityServiceOidcConfig) super.set(fieldName, value);
  }

  @Override
  public IdentityServiceOidcConfig clone() {
    return (IdentityServiceOidcConfig) super.clone();
  }

}
