/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.beyondcorp.v1alpha.model;

/**
 * ConnectorInstanceConfig defines the instance config of a connector.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the BeyondCorp API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ConnectorInstanceConfig extends com.google.api.client.json.GenericJson {

  /**
   * ImageConfig defines the GCR images to run for the remote agent's control plane.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ImageConfig imageConfig;

  /**
   * The SLM instance agent configuration.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.Object> instanceConfig;

  /**
   * NotificationConfig defines the notification mechanism that the remote instance should subscribe
   * to in order to receive notification.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private NotificationConfig notificationConfig;

  /**
   * Required. A monotonically increasing number generated and maintained by the API provider. Every
   * time a config changes in the backend, the sequenceNumber should be bumped up to reflect the
   * change.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long sequenceNumber;

  /**
   * ImageConfig defines the GCR images to run for the remote agent's control plane.
   * @return value or {@code null} for none
   */
  public ImageConfig getImageConfig() {
    return imageConfig;
  }

  /**
   * ImageConfig defines the GCR images to run for the remote agent's control plane.
   * @param imageConfig imageConfig or {@code null} for none
   */
  public ConnectorInstanceConfig setImageConfig(ImageConfig imageConfig) {
    this.imageConfig = imageConfig;
    return this;
  }

  /**
   * The SLM instance agent configuration.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.Object> getInstanceConfig() {
    return instanceConfig;
  }

  /**
   * The SLM instance agent configuration.
   * @param instanceConfig instanceConfig or {@code null} for none
   */
  public ConnectorInstanceConfig setInstanceConfig(java.util.Map<String, java.lang.Object> instanceConfig) {
    this.instanceConfig = instanceConfig;
    return this;
  }

  /**
   * NotificationConfig defines the notification mechanism that the remote instance should subscribe
   * to in order to receive notification.
   * @return value or {@code null} for none
   */
  public NotificationConfig getNotificationConfig() {
    return notificationConfig;
  }

  /**
   * NotificationConfig defines the notification mechanism that the remote instance should subscribe
   * to in order to receive notification.
   * @param notificationConfig notificationConfig or {@code null} for none
   */
  public ConnectorInstanceConfig setNotificationConfig(NotificationConfig notificationConfig) {
    this.notificationConfig = notificationConfig;
    return this;
  }

  /**
   * Required. A monotonically increasing number generated and maintained by the API provider. Every
   * time a config changes in the backend, the sequenceNumber should be bumped up to reflect the
   * change.
   * @return value or {@code null} for none
   */
  public java.lang.Long getSequenceNumber() {
    return sequenceNumber;
  }

  /**
   * Required. A monotonically increasing number generated and maintained by the API provider. Every
   * time a config changes in the backend, the sequenceNumber should be bumped up to reflect the
   * change.
   * @param sequenceNumber sequenceNumber or {@code null} for none
   */
  public ConnectorInstanceConfig setSequenceNumber(java.lang.Long sequenceNumber) {
    this.sequenceNumber = sequenceNumber;
    return this;
  }

  @Override
  public ConnectorInstanceConfig set(String fieldName, Object value) {
    return (ConnectorInstanceConfig) super.set(fieldName, value);
  }

  @Override
  public ConnectorInstanceConfig clone() {
    return (ConnectorInstanceConfig) super.clone();
  }

}
