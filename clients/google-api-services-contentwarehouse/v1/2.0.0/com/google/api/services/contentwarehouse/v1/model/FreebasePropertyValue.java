/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * A PropertyValue associates properties with values in the context of a topic.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class FreebasePropertyValue extends com.google.api.client.json.GenericJson {

  /**
   * The id of the property.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private FreebaseId property;

  /**
   * Indicates the total values that exist for this property, even if they aren't all present in the
   * value field, due to truncation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long totalValueCount;

  /**
   * The value associated with the property for the containing topic.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<FreebaseValue> value;

  /**
   * If ValueStatus is not set at all, the implication is that there are well-known value(s),
   * specified in the "value" field. (It should be considered malformed data to have value_status
   * set when len(values) > 0.)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String valueStatus;

  /**
   * The id of the property.
   * @return value or {@code null} for none
   */
  public FreebaseId getProperty() {
    return property;
  }

  /**
   * The id of the property.
   * @param property property or {@code null} for none
   */
  public FreebasePropertyValue setProperty(FreebaseId property) {
    this.property = property;
    return this;
  }

  /**
   * Indicates the total values that exist for this property, even if they aren't all present in the
   * value field, due to truncation.
   * @return value or {@code null} for none
   */
  public java.lang.Long getTotalValueCount() {
    return totalValueCount;
  }

  /**
   * Indicates the total values that exist for this property, even if they aren't all present in the
   * value field, due to truncation.
   * @param totalValueCount totalValueCount or {@code null} for none
   */
  public FreebasePropertyValue setTotalValueCount(java.lang.Long totalValueCount) {
    this.totalValueCount = totalValueCount;
    return this;
  }

  /**
   * The value associated with the property for the containing topic.
   * @return value or {@code null} for none
   */
  public java.util.List<FreebaseValue> getValue() {
    return value;
  }

  /**
   * The value associated with the property for the containing topic.
   * @param value value or {@code null} for none
   */
  public FreebasePropertyValue setValue(java.util.List<FreebaseValue> value) {
    this.value = value;
    return this;
  }

  /**
   * If ValueStatus is not set at all, the implication is that there are well-known value(s),
   * specified in the "value" field. (It should be considered malformed data to have value_status
   * set when len(values) > 0.)
   * @return value or {@code null} for none
   */
  public java.lang.String getValueStatus() {
    return valueStatus;
  }

  /**
   * If ValueStatus is not set at all, the implication is that there are well-known value(s),
   * specified in the "value" field. (It should be considered malformed data to have value_status
   * set when len(values) > 0.)
   * @param valueStatus valueStatus or {@code null} for none
   */
  public FreebasePropertyValue setValueStatus(java.lang.String valueStatus) {
    this.valueStatus = valueStatus;
    return this;
  }

  @Override
  public FreebasePropertyValue set(String fieldName, Object value) {
    return (FreebasePropertyValue) super.set(fieldName, value);
  }

  @Override
  public FreebasePropertyValue clone() {
    return (FreebasePropertyValue) super.clone();
  }

}
