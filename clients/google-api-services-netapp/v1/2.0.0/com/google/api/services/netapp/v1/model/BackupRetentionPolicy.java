/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.netapp.v1.model;

/**
 * Retention policy for backups in the backup vault
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the NetApp API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class BackupRetentionPolicy extends com.google.api.client.json.GenericJson {

  /**
   * Required. Minimum retention duration in days for backups in the backup vault.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer backupMinimumEnforcedRetentionDays;

  /**
   * Optional. Indicates if the daily backups are immutable. Atleast one of daily_backup_immutable,
   * weekly_backup_immutable, monthly_backup_immutable and manual_backup_immutable must be true.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean dailyBackupImmutable;

  /**
   * Optional. Indicates if the manual backups are immutable. Atleast one of daily_backup_immutable,
   * weekly_backup_immutable, monthly_backup_immutable and manual_backup_immutable must be true.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean manualBackupImmutable;

  /**
   * Optional. Indicates if the monthly backups are immutable. Atleast one of
   * daily_backup_immutable, weekly_backup_immutable, monthly_backup_immutable and
   * manual_backup_immutable must be true.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean monthlyBackupImmutable;

  /**
   * Optional. Indicates if the weekly backups are immutable. Atleast one of daily_backup_immutable,
   * weekly_backup_immutable, monthly_backup_immutable and manual_backup_immutable must be true.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean weeklyBackupImmutable;

  /**
   * Required. Minimum retention duration in days for backups in the backup vault.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getBackupMinimumEnforcedRetentionDays() {
    return backupMinimumEnforcedRetentionDays;
  }

  /**
   * Required. Minimum retention duration in days for backups in the backup vault.
   * @param backupMinimumEnforcedRetentionDays backupMinimumEnforcedRetentionDays or {@code null} for none
   */
  public BackupRetentionPolicy setBackupMinimumEnforcedRetentionDays(java.lang.Integer backupMinimumEnforcedRetentionDays) {
    this.backupMinimumEnforcedRetentionDays = backupMinimumEnforcedRetentionDays;
    return this;
  }

  /**
   * Optional. Indicates if the daily backups are immutable. Atleast one of daily_backup_immutable,
   * weekly_backup_immutable, monthly_backup_immutable and manual_backup_immutable must be true.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getDailyBackupImmutable() {
    return dailyBackupImmutable;
  }

  /**
   * Optional. Indicates if the daily backups are immutable. Atleast one of daily_backup_immutable,
   * weekly_backup_immutable, monthly_backup_immutable and manual_backup_immutable must be true.
   * @param dailyBackupImmutable dailyBackupImmutable or {@code null} for none
   */
  public BackupRetentionPolicy setDailyBackupImmutable(java.lang.Boolean dailyBackupImmutable) {
    this.dailyBackupImmutable = dailyBackupImmutable;
    return this;
  }

  /**
   * Optional. Indicates if the manual backups are immutable. Atleast one of daily_backup_immutable,
   * weekly_backup_immutable, monthly_backup_immutable and manual_backup_immutable must be true.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getManualBackupImmutable() {
    return manualBackupImmutable;
  }

  /**
   * Optional. Indicates if the manual backups are immutable. Atleast one of daily_backup_immutable,
   * weekly_backup_immutable, monthly_backup_immutable and manual_backup_immutable must be true.
   * @param manualBackupImmutable manualBackupImmutable or {@code null} for none
   */
  public BackupRetentionPolicy setManualBackupImmutable(java.lang.Boolean manualBackupImmutable) {
    this.manualBackupImmutable = manualBackupImmutable;
    return this;
  }

  /**
   * Optional. Indicates if the monthly backups are immutable. Atleast one of
   * daily_backup_immutable, weekly_backup_immutable, monthly_backup_immutable and
   * manual_backup_immutable must be true.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getMonthlyBackupImmutable() {
    return monthlyBackupImmutable;
  }

  /**
   * Optional. Indicates if the monthly backups are immutable. Atleast one of
   * daily_backup_immutable, weekly_backup_immutable, monthly_backup_immutable and
   * manual_backup_immutable must be true.
   * @param monthlyBackupImmutable monthlyBackupImmutable or {@code null} for none
   */
  public BackupRetentionPolicy setMonthlyBackupImmutable(java.lang.Boolean monthlyBackupImmutable) {
    this.monthlyBackupImmutable = monthlyBackupImmutable;
    return this;
  }

  /**
   * Optional. Indicates if the weekly backups are immutable. Atleast one of daily_backup_immutable,
   * weekly_backup_immutable, monthly_backup_immutable and manual_backup_immutable must be true.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getWeeklyBackupImmutable() {
    return weeklyBackupImmutable;
  }

  /**
   * Optional. Indicates if the weekly backups are immutable. Atleast one of daily_backup_immutable,
   * weekly_backup_immutable, monthly_backup_immutable and manual_backup_immutable must be true.
   * @param weeklyBackupImmutable weeklyBackupImmutable or {@code null} for none
   */
  public BackupRetentionPolicy setWeeklyBackupImmutable(java.lang.Boolean weeklyBackupImmutable) {
    this.weeklyBackupImmutable = weeklyBackupImmutable;
    return this;
  }

  @Override
  public BackupRetentionPolicy set(String fieldName, Object value) {
    return (BackupRetentionPolicy) super.set(fieldName, value);
  }

  @Override
  public BackupRetentionPolicy clone() {
    return (BackupRetentionPolicy) super.clone();
  }

}
