/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * A representation of a person other than the current user, who may have created the reminder for
 * the current user, or will receive it from them.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class QualityActionsReminderPerson extends com.google.api.client.json.GenericJson {

  /**
   * REQUIRED. Their full name, which will be shown/spoken when referring to this person informally,
   * e.g. "You have 2 reminders from Dave Smith."
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * OPTIONAL. Their email address.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String emailAddress;

  /**
   * REQUIRED. Their gaia id (used by the backend for CRUD operations).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long gaiaId;

  /**
   * REQUIRED. Their given name, which will be shown/spoken when referring to this person
   * informally, e.g. "You have 2 reminders from Dave."
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String givenName;

  /**
   * OPTIONAL. The URL of the photo. This field is read from photo field from go/people-api. Also
   * see go/khdgk for URL formats. This field might be missing if user does not have photo URL
   * available.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String photoUrl;

  /**
   * REQUIRED. Their full name, which will be shown/spoken when referring to this person informally,
   * e.g. "You have 2 reminders from Dave Smith."
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * REQUIRED. Their full name, which will be shown/spoken when referring to this person informally,
   * e.g. "You have 2 reminders from Dave Smith."
   * @param displayName displayName or {@code null} for none
   */
  public QualityActionsReminderPerson setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * OPTIONAL. Their email address.
   * @return value or {@code null} for none
   */
  public java.lang.String getEmailAddress() {
    return emailAddress;
  }

  /**
   * OPTIONAL. Their email address.
   * @param emailAddress emailAddress or {@code null} for none
   */
  public QualityActionsReminderPerson setEmailAddress(java.lang.String emailAddress) {
    this.emailAddress = emailAddress;
    return this;
  }

  /**
   * REQUIRED. Their gaia id (used by the backend for CRUD operations).
   * @return value or {@code null} for none
   */
  public java.lang.Long getGaiaId() {
    return gaiaId;
  }

  /**
   * REQUIRED. Their gaia id (used by the backend for CRUD operations).
   * @param gaiaId gaiaId or {@code null} for none
   */
  public QualityActionsReminderPerson setGaiaId(java.lang.Long gaiaId) {
    this.gaiaId = gaiaId;
    return this;
  }

  /**
   * REQUIRED. Their given name, which will be shown/spoken when referring to this person
   * informally, e.g. "You have 2 reminders from Dave."
   * @return value or {@code null} for none
   */
  public java.lang.String getGivenName() {
    return givenName;
  }

  /**
   * REQUIRED. Their given name, which will be shown/spoken when referring to this person
   * informally, e.g. "You have 2 reminders from Dave."
   * @param givenName givenName or {@code null} for none
   */
  public QualityActionsReminderPerson setGivenName(java.lang.String givenName) {
    this.givenName = givenName;
    return this;
  }

  /**
   * OPTIONAL. The URL of the photo. This field is read from photo field from go/people-api. Also
   * see go/khdgk for URL formats. This field might be missing if user does not have photo URL
   * available.
   * @return value or {@code null} for none
   */
  public java.lang.String getPhotoUrl() {
    return photoUrl;
  }

  /**
   * OPTIONAL. The URL of the photo. This field is read from photo field from go/people-api. Also
   * see go/khdgk for URL formats. This field might be missing if user does not have photo URL
   * available.
   * @param photoUrl photoUrl or {@code null} for none
   */
  public QualityActionsReminderPerson setPhotoUrl(java.lang.String photoUrl) {
    this.photoUrl = photoUrl;
    return this;
  }

  @Override
  public QualityActionsReminderPerson set(String fieldName, Object value) {
    return (QualityActionsReminderPerson) super.set(fieldName, value);
  }

  @Override
  public QualityActionsReminderPerson clone() {
    return (QualityActionsReminderPerson) super.clone();
  }

}
