/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.tagmanager;

/**
 * Service definition for TagManager (v1).
 *
 * <p>
 * Accesses Tag Manager accounts and containers.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://developers.google.com/tag-manager/api/v1/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link TagManagerRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class TagManager extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.28.0 of the Tag Manager API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://www.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "tagmanager/v1/";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch/tagmanager/v1";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public TagManager(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  TagManager(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Accounts collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code TagManager tagmanager = new TagManager(...);}
   *   {@code TagManager.Accounts.List request = tagmanager.accounts().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Accounts accounts() {
    return new Accounts();
  }

  /**
   * The "accounts" collection of methods.
   */
  public class Accounts {

    /**
     * Gets a GTM Account.
     *
     * Create a request for the method "accounts.get".
     *
     * This request holds the parameters needed by the tagmanager server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param accountId The GTM Account ID.
     * @return the request
     */
    public Get get(java.lang.String accountId) throws java.io.IOException {
      Get result = new Get(accountId);
      initialize(result);
      return result;
    }

    public class Get extends TagManagerRequest<com.google.api.services.tagmanager.model.Account> {

      private static final String REST_PATH = "accounts/{accountId}";

      /**
       * Gets a GTM Account.
       *
       * Create a request for the method "accounts.get".
       *
       * This request holds the parameters needed by the the tagmanager server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
       * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param accountId The GTM Account ID.
       * @since 1.13
       */
      protected Get(java.lang.String accountId) {
        super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.Account.class);
        this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** The GTM Account ID. */
      @com.google.api.client.util.Key
      private java.lang.String accountId;

      /** The GTM Account ID.
       */
      public java.lang.String getAccountId() {
        return accountId;
      }

      /** The GTM Account ID. */
      public Get setAccountId(java.lang.String accountId) {
        this.accountId = accountId;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Lists all GTM Accounts that a user has access to.
     *
     * Create a request for the method "accounts.list".
     *
     * This request holds the parameters needed by the tagmanager server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public List list() throws java.io.IOException {
      List result = new List();
      initialize(result);
      return result;
    }

    public class List extends TagManagerRequest<com.google.api.services.tagmanager.model.ListAccountsResponse> {

      private static final String REST_PATH = "accounts";

      /**
       * Lists all GTM Accounts that a user has access to.
       *
       * Create a request for the method "accounts.list".
       *
       * This request holds the parameters needed by the the tagmanager server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
       * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected List() {
        super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.ListAccountsResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Updates a GTM Account.
     *
     * Create a request for the method "accounts.update".
     *
     * This request holds the parameters needed by the tagmanager server.  After setting any optional
     * parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param accountId The GTM Account ID.
     * @param content the {@link com.google.api.services.tagmanager.model.Account}
     * @return the request
     */
    public Update update(java.lang.String accountId, com.google.api.services.tagmanager.model.Account content) throws java.io.IOException {
      Update result = new Update(accountId, content);
      initialize(result);
      return result;
    }

    public class Update extends TagManagerRequest<com.google.api.services.tagmanager.model.Account> {

      private static final String REST_PATH = "accounts/{accountId}";

      /**
       * Updates a GTM Account.
       *
       * Create a request for the method "accounts.update".
       *
       * This request holds the parameters needed by the the tagmanager server.  After setting any
       * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
       * <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param accountId The GTM Account ID.
       * @param content the {@link com.google.api.services.tagmanager.model.Account}
       * @since 1.13
       */
      protected Update(java.lang.String accountId, com.google.api.services.tagmanager.model.Account content) {
        super(TagManager.this, "PUT", REST_PATH, content, com.google.api.services.tagmanager.model.Account.class);
        this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setFields(java.lang.String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(java.lang.String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(java.lang.String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUserIp(java.lang.String userIp) {
        return (Update) super.setUserIp(userIp);
      }

      /** The GTM Account ID. */
      @com.google.api.client.util.Key
      private java.lang.String accountId;

      /** The GTM Account ID.
       */
      public java.lang.String getAccountId() {
        return accountId;
      }

      /** The GTM Account ID. */
      public Update setAccountId(java.lang.String accountId) {
        this.accountId = accountId;
        return this;
      }

      /** When provided, this fingerprint must match the fingerprint of the account in storage. */
      @com.google.api.client.util.Key
      private java.lang.String fingerprint;

      /** When provided, this fingerprint must match the fingerprint of the account in storage.
       */
      public java.lang.String getFingerprint() {
        return fingerprint;
      }

      /** When provided, this fingerprint must match the fingerprint of the account in storage. */
      public Update setFingerprint(java.lang.String fingerprint) {
        this.fingerprint = fingerprint;
        return this;
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the Containers collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code TagManager tagmanager = new TagManager(...);}
     *   {@code TagManager.Containers.List request = tagmanager.containers().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Containers containers() {
      return new Containers();
    }

    /**
     * The "containers" collection of methods.
     */
    public class Containers {

      /**
       * Creates a Container.
       *
       * Create a request for the method "containers.create".
       *
       * This request holds the parameters needed by the tagmanager server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param accountId The GTM Account ID.
       * @param content the {@link com.google.api.services.tagmanager.model.Container}
       * @return the request
       */
      public Create create(java.lang.String accountId, com.google.api.services.tagmanager.model.Container content) throws java.io.IOException {
        Create result = new Create(accountId, content);
        initialize(result);
        return result;
      }

      public class Create extends TagManagerRequest<com.google.api.services.tagmanager.model.Container> {

        private static final String REST_PATH = "accounts/{accountId}/containers";

        /**
         * Creates a Container.
         *
         * Create a request for the method "containers.create".
         *
         * This request holds the parameters needed by the the tagmanager server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param accountId The GTM Account ID.
         * @param content the {@link com.google.api.services.tagmanager.model.Container}
         * @since 1.13
         */
        protected Create(java.lang.String accountId, com.google.api.services.tagmanager.model.Container content) {
          super(TagManager.this, "POST", REST_PATH, content, com.google.api.services.tagmanager.model.Container.class);
          this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
          checkRequiredParameter(content, "content");
          checkRequiredParameter(content.getName(), "Container.getName()");
          checkRequiredParameter(content, "content");
          checkRequiredParameter(content.getTimeZoneCountryId(), "Container.getTimeZoneCountryId()");
          checkRequiredParameter(content, "content");
          checkRequiredParameter(content.getTimeZoneId(), "Container.getTimeZoneId()");
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUserIp(java.lang.String userIp) {
          return (Create) super.setUserIp(userIp);
        }

        /** The GTM Account ID. */
        @com.google.api.client.util.Key
        private java.lang.String accountId;

        /** The GTM Account ID.
         */
        public java.lang.String getAccountId() {
          return accountId;
        }

        /** The GTM Account ID. */
        public Create setAccountId(java.lang.String accountId) {
          this.accountId = accountId;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a Container.
       *
       * Create a request for the method "containers.delete".
       *
       * This request holds the parameters needed by the tagmanager server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param accountId The GTM Account ID.
       * @param containerId The GTM Container ID.
       * @return the request
       */
      public Delete delete(java.lang.String accountId, java.lang.String containerId) throws java.io.IOException {
        Delete result = new Delete(accountId, containerId);
        initialize(result);
        return result;
      }

      public class Delete extends TagManagerRequest<Void> {

        private static final String REST_PATH = "accounts/{accountId}/containers/{containerId}";

        /**
         * Deletes a Container.
         *
         * Create a request for the method "containers.delete".
         *
         * This request holds the parameters needed by the the tagmanager server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param accountId The GTM Account ID.
         * @param containerId The GTM Container ID.
         * @since 1.13
         */
        protected Delete(java.lang.String accountId, java.lang.String containerId) {
          super(TagManager.this, "DELETE", REST_PATH, null, Void.class);
          this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
          this.containerId = com.google.api.client.util.Preconditions.checkNotNull(containerId, "Required parameter containerId must be specified.");
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUserIp(java.lang.String userIp) {
          return (Delete) super.setUserIp(userIp);
        }

        /** The GTM Account ID. */
        @com.google.api.client.util.Key
        private java.lang.String accountId;

        /** The GTM Account ID.
         */
        public java.lang.String getAccountId() {
          return accountId;
        }

        /** The GTM Account ID. */
        public Delete setAccountId(java.lang.String accountId) {
          this.accountId = accountId;
          return this;
        }

        /** The GTM Container ID. */
        @com.google.api.client.util.Key
        private java.lang.String containerId;

        /** The GTM Container ID.
         */
        public java.lang.String getContainerId() {
          return containerId;
        }

        /** The GTM Container ID. */
        public Delete setContainerId(java.lang.String containerId) {
          this.containerId = containerId;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets a Container.
       *
       * Create a request for the method "containers.get".
       *
       * This request holds the parameters needed by the tagmanager server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param accountId The GTM Account ID.
       * @param containerId The GTM Container ID.
       * @return the request
       */
      public Get get(java.lang.String accountId, java.lang.String containerId) throws java.io.IOException {
        Get result = new Get(accountId, containerId);
        initialize(result);
        return result;
      }

      public class Get extends TagManagerRequest<com.google.api.services.tagmanager.model.Container> {

        private static final String REST_PATH = "accounts/{accountId}/containers/{containerId}";

        /**
         * Gets a Container.
         *
         * Create a request for the method "containers.get".
         *
         * This request holds the parameters needed by the the tagmanager server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param accountId The GTM Account ID.
         * @param containerId The GTM Container ID.
         * @since 1.13
         */
        protected Get(java.lang.String accountId, java.lang.String containerId) {
          super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.Container.class);
          this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
          this.containerId = com.google.api.client.util.Preconditions.checkNotNull(containerId, "Required parameter containerId must be specified.");
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUserIp(java.lang.String userIp) {
          return (Get) super.setUserIp(userIp);
        }

        /** The GTM Account ID. */
        @com.google.api.client.util.Key
        private java.lang.String accountId;

        /** The GTM Account ID.
         */
        public java.lang.String getAccountId() {
          return accountId;
        }

        /** The GTM Account ID. */
        public Get setAccountId(java.lang.String accountId) {
          this.accountId = accountId;
          return this;
        }

        /** The GTM Container ID. */
        @com.google.api.client.util.Key
        private java.lang.String containerId;

        /** The GTM Container ID.
         */
        public java.lang.String getContainerId() {
          return containerId;
        }

        /** The GTM Container ID. */
        public Get setContainerId(java.lang.String containerId) {
          this.containerId = containerId;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists all Containers that belongs to a GTM Account.
       *
       * Create a request for the method "containers.list".
       *
       * This request holds the parameters needed by the tagmanager server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param accountId The GTM Account ID.
       * @return the request
       */
      public List list(java.lang.String accountId) throws java.io.IOException {
        List result = new List(accountId);
        initialize(result);
        return result;
      }

      public class List extends TagManagerRequest<com.google.api.services.tagmanager.model.ListContainersResponse> {

        private static final String REST_PATH = "accounts/{accountId}/containers";

        /**
         * Lists all Containers that belongs to a GTM Account.
         *
         * Create a request for the method "containers.list".
         *
         * This request holds the parameters needed by the the tagmanager server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param accountId The GTM Account ID.
         * @since 1.13
         */
        protected List(java.lang.String accountId) {
          super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.ListContainersResponse.class);
          this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUserIp(java.lang.String userIp) {
          return (List) super.setUserIp(userIp);
        }

        /** The GTM Account ID. */
        @com.google.api.client.util.Key
        private java.lang.String accountId;

        /** The GTM Account ID.
         */
        public java.lang.String getAccountId() {
          return accountId;
        }

        /** The GTM Account ID. */
        public List setAccountId(java.lang.String accountId) {
          this.accountId = accountId;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a Container.
       *
       * Create a request for the method "containers.update".
       *
       * This request holds the parameters needed by the tagmanager server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation.
       *
       * @param accountId The GTM Account ID.
       * @param containerId The GTM Container ID.
       * @param content the {@link com.google.api.services.tagmanager.model.Container}
       * @return the request
       */
      public Update update(java.lang.String accountId, java.lang.String containerId, com.google.api.services.tagmanager.model.Container content) throws java.io.IOException {
        Update result = new Update(accountId, containerId, content);
        initialize(result);
        return result;
      }

      public class Update extends TagManagerRequest<com.google.api.services.tagmanager.model.Container> {

        private static final String REST_PATH = "accounts/{accountId}/containers/{containerId}";

        /**
         * Updates a Container.
         *
         * Create a request for the method "containers.update".
         *
         * This request holds the parameters needed by the the tagmanager server.  After setting any
         * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
         * <p> {@link
         * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param accountId The GTM Account ID.
         * @param containerId The GTM Container ID.
         * @param content the {@link com.google.api.services.tagmanager.model.Container}
         * @since 1.13
         */
        protected Update(java.lang.String accountId, java.lang.String containerId, com.google.api.services.tagmanager.model.Container content) {
          super(TagManager.this, "PUT", REST_PATH, content, com.google.api.services.tagmanager.model.Container.class);
          this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
          this.containerId = com.google.api.client.util.Preconditions.checkNotNull(containerId, "Required parameter containerId must be specified.");
        }

        @Override
        public Update setAlt(java.lang.String alt) {
          return (Update) super.setAlt(alt);
        }

        @Override
        public Update setFields(java.lang.String fields) {
          return (Update) super.setFields(fields);
        }

        @Override
        public Update setKey(java.lang.String key) {
          return (Update) super.setKey(key);
        }

        @Override
        public Update setOauthToken(java.lang.String oauthToken) {
          return (Update) super.setOauthToken(oauthToken);
        }

        @Override
        public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Update) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Update setQuotaUser(java.lang.String quotaUser) {
          return (Update) super.setQuotaUser(quotaUser);
        }

        @Override
        public Update setUserIp(java.lang.String userIp) {
          return (Update) super.setUserIp(userIp);
        }

        /** The GTM Account ID. */
        @com.google.api.client.util.Key
        private java.lang.String accountId;

        /** The GTM Account ID.
         */
        public java.lang.String getAccountId() {
          return accountId;
        }

        /** The GTM Account ID. */
        public Update setAccountId(java.lang.String accountId) {
          this.accountId = accountId;
          return this;
        }

        /** The GTM Container ID. */
        @com.google.api.client.util.Key
        private java.lang.String containerId;

        /** The GTM Container ID.
         */
        public java.lang.String getContainerId() {
          return containerId;
        }

        /** The GTM Container ID. */
        public Update setContainerId(java.lang.String containerId) {
          this.containerId = containerId;
          return this;
        }

        /**
         * When provided, this fingerprint must match the fingerprint of the container in storage.
         */
        @com.google.api.client.util.Key
        private java.lang.String fingerprint;

        /** When provided, this fingerprint must match the fingerprint of the container in storage.
         */
        public java.lang.String getFingerprint() {
          return fingerprint;
        }

        /**
         * When provided, this fingerprint must match the fingerprint of the container in storage.
         */
        public Update setFingerprint(java.lang.String fingerprint) {
          this.fingerprint = fingerprint;
          return this;
        }

        @Override
        public Update set(String parameterName, Object value) {
          return (Update) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Environments collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code TagManager tagmanager = new TagManager(...);}
       *   {@code TagManager.Environments.List request = tagmanager.environments().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Environments environments() {
        return new Environments();
      }

      /**
       * The "environments" collection of methods.
       */
      public class Environments {

        /**
         * Creates a GTM Environment.
         *
         * Create a request for the method "environments.create".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param accountId The GTM Account ID.
         * @param containerId The GTM Container ID.
         * @param content the {@link com.google.api.services.tagmanager.model.Environment}
         * @return the request
         */
        public Create create(java.lang.String accountId, java.lang.String containerId, com.google.api.services.tagmanager.model.Environment content) throws java.io.IOException {
          Create result = new Create(accountId, containerId, content);
          initialize(result);
          return result;
        }

        public class Create extends TagManagerRequest<com.google.api.services.tagmanager.model.Environment> {

          private static final String REST_PATH = "accounts/{accountId}/containers/{containerId}/environments";

          /**
           * Creates a GTM Environment.
           *
           * Create a request for the method "environments.create".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param accountId The GTM Account ID.
           * @param containerId The GTM Container ID.
           * @param content the {@link com.google.api.services.tagmanager.model.Environment}
           * @since 1.13
           */
          protected Create(java.lang.String accountId, java.lang.String containerId, com.google.api.services.tagmanager.model.Environment content) {
            super(TagManager.this, "POST", REST_PATH, content, com.google.api.services.tagmanager.model.Environment.class);
            this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
            this.containerId = com.google.api.client.util.Preconditions.checkNotNull(containerId, "Required parameter containerId must be specified.");
            checkRequiredParameter(content, "content");
            checkRequiredParameter(content.getName(), "Environment.getName()");
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUserIp(java.lang.String userIp) {
            return (Create) super.setUserIp(userIp);
          }

          /** The GTM Account ID. */
          @com.google.api.client.util.Key
          private java.lang.String accountId;

          /** The GTM Account ID.
           */
          public java.lang.String getAccountId() {
            return accountId;
          }

          /** The GTM Account ID. */
          public Create setAccountId(java.lang.String accountId) {
            this.accountId = accountId;
            return this;
          }

          /** The GTM Container ID. */
          @com.google.api.client.util.Key
          private java.lang.String containerId;

          /** The GTM Container ID.
           */
          public java.lang.String getContainerId() {
            return containerId;
          }

          /** The GTM Container ID. */
          public Create setContainerId(java.lang.String containerId) {
            this.containerId = containerId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a GTM Environment.
         *
         * Create a request for the method "environments.delete".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param accountId The GTM Account ID.
         * @param containerId The GTM Container ID.
         * @param environmentId The GTM Environment ID.
         * @return the request
         */
        public Delete delete(java.lang.String accountId, java.lang.String containerId, java.lang.String environmentId) throws java.io.IOException {
          Delete result = new Delete(accountId, containerId, environmentId);
          initialize(result);
          return result;
        }

        public class Delete extends TagManagerRequest<Void> {

          private static final String REST_PATH = "accounts/{accountId}/containers/{containerId}/environments/{environmentId}";

          /**
           * Deletes a GTM Environment.
           *
           * Create a request for the method "environments.delete".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param accountId The GTM Account ID.
           * @param containerId The GTM Container ID.
           * @param environmentId The GTM Environment ID.
           * @since 1.13
           */
          protected Delete(java.lang.String accountId, java.lang.String containerId, java.lang.String environmentId) {
            super(TagManager.this, "DELETE", REST_PATH, null, Void.class);
            this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
            this.containerId = com.google.api.client.util.Preconditions.checkNotNull(containerId, "Required parameter containerId must be specified.");
            this.environmentId = com.google.api.client.util.Preconditions.checkNotNull(environmentId, "Required parameter environmentId must be specified.");
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUserIp(java.lang.String userIp) {
            return (Delete) super.setUserIp(userIp);
          }

          /** The GTM Account ID. */
          @com.google.api.client.util.Key
          private java.lang.String accountId;

          /** The GTM Account ID.
           */
          public java.lang.String getAccountId() {
            return accountId;
          }

          /** The GTM Account ID. */
          public Delete setAccountId(java.lang.String accountId) {
            this.accountId = accountId;
            return this;
          }

          /** The GTM Container ID. */
          @com.google.api.client.util.Key
          private java.lang.String containerId;

          /** The GTM Container ID.
           */
          public java.lang.String getContainerId() {
            return containerId;
          }

          /** The GTM Container ID. */
          public Delete setContainerId(java.lang.String containerId) {
            this.containerId = containerId;
            return this;
          }

          /** The GTM Environment ID. */
          @com.google.api.client.util.Key
          private java.lang.String environmentId;

          /** The GTM Environment ID.
           */
          public java.lang.String getEnvironmentId() {
            return environmentId;
          }

          /** The GTM Environment ID. */
          public Delete setEnvironmentId(java.lang.String environmentId) {
            this.environmentId = environmentId;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a GTM Environment.
         *
         * Create a request for the method "environments.get".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param accountId The GTM Account ID.
         * @param containerId The GTM Container ID.
         * @param environmentId The GTM Environment ID.
         * @return the request
         */
        public Get get(java.lang.String accountId, java.lang.String containerId, java.lang.String environmentId) throws java.io.IOException {
          Get result = new Get(accountId, containerId, environmentId);
          initialize(result);
          return result;
        }

        public class Get extends TagManagerRequest<com.google.api.services.tagmanager.model.Environment> {

          private static final String REST_PATH = "accounts/{accountId}/containers/{containerId}/environments/{environmentId}";

          /**
           * Gets a GTM Environment.
           *
           * Create a request for the method "environments.get".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param accountId The GTM Account ID.
           * @param containerId The GTM Container ID.
           * @param environmentId The GTM Environment ID.
           * @since 1.13
           */
          protected Get(java.lang.String accountId, java.lang.String containerId, java.lang.String environmentId) {
            super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.Environment.class);
            this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
            this.containerId = com.google.api.client.util.Preconditions.checkNotNull(containerId, "Required parameter containerId must be specified.");
            this.environmentId = com.google.api.client.util.Preconditions.checkNotNull(environmentId, "Required parameter environmentId must be specified.");
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUserIp(java.lang.String userIp) {
            return (Get) super.setUserIp(userIp);
          }

          /** The GTM Account ID. */
          @com.google.api.client.util.Key
          private java.lang.String accountId;

          /** The GTM Account ID.
           */
          public java.lang.String getAccountId() {
            return accountId;
          }

          /** The GTM Account ID. */
          public Get setAccountId(java.lang.String accountId) {
            this.accountId = accountId;
            return this;
          }

          /** The GTM Container ID. */
          @com.google.api.client.util.Key
          private java.lang.String containerId;

          /** The GTM Container ID.
           */
          public java.lang.String getContainerId() {
            return containerId;
          }

          /** The GTM Container ID. */
          public Get setContainerId(java.lang.String containerId) {
            this.containerId = containerId;
            return this;
          }

          /** The GTM Environment ID. */
          @com.google.api.client.util.Key
          private java.lang.String environmentId;

          /** The GTM Environment ID.
           */
          public java.lang.String getEnvironmentId() {
            return environmentId;
          }

          /** The GTM Environment ID. */
          public Get setEnvironmentId(java.lang.String environmentId) {
            this.environmentId = environmentId;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists all GTM Environments of a GTM Container.
         *
         * Create a request for the method "environments.list".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param accountId The GTM Account ID.
         * @param containerId The GTM Container ID.
         * @return the request
         */
        public List list(java.lang.String accountId, java.lang.String containerId) throws java.io.IOException {
          List result = new List(accountId, containerId);
          initialize(result);
          return result;
        }

        public class List extends TagManagerRequest<com.google.api.services.tagmanager.model.ListEnvironmentsResponse> {

          private static final String REST_PATH = "accounts/{accountId}/containers/{containerId}/environments";

          /**
           * Lists all GTM Environments of a GTM Container.
           *
           * Create a request for the method "environments.list".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param accountId The GTM Account ID.
           * @param containerId The GTM Container ID.
           * @since 1.13
           */
          protected List(java.lang.String accountId, java.lang.String containerId) {
            super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.ListEnvironmentsResponse.class);
            this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
            this.containerId = com.google.api.client.util.Preconditions.checkNotNull(containerId, "Required parameter containerId must be specified.");
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUserIp(java.lang.String userIp) {
            return (List) super.setUserIp(userIp);
          }

          /** The GTM Account ID. */
          @com.google.api.client.util.Key
          private java.lang.String accountId;

          /** The GTM Account ID.
           */
          public java.lang.String getAccountId() {
            return accountId;
          }

          /** The GTM Account ID. */
          public List setAccountId(java.lang.String accountId) {
            this.accountId = accountId;
            return this;
          }

          /** The GTM Container ID. */
          @com.google.api.client.util.Key
          private java.lang.String containerId;

          /** The GTM Container ID.
           */
          public java.lang.String getContainerId() {
            return containerId;
          }

          /** The GTM Container ID. */
          public List setContainerId(java.lang.String containerId) {
            this.containerId = containerId;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates a GTM Environment. This method supports patch semantics.
         *
         * Create a request for the method "environments.patch".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param accountId The GTM Account ID.
         * @param containerId The GTM Container ID.
         * @param environmentId The GTM Environment ID.
         * @param content the {@link com.google.api.services.tagmanager.model.Environment}
         * @return the request
         */
        public Patch patch(java.lang.String accountId, java.lang.String containerId, java.lang.String environmentId, com.google.api.services.tagmanager.model.Environment content) throws java.io.IOException {
          Patch result = new Patch(accountId, containerId, environmentId, content);
          initialize(result);
          return result;
        }

        public class Patch extends TagManagerRequest<com.google.api.services.tagmanager.model.Environment> {

          private static final String REST_PATH = "accounts/{accountId}/containers/{containerId}/environments/{environmentId}";

          /**
           * Updates a GTM Environment. This method supports patch semantics.
           *
           * Create a request for the method "environments.patch".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param accountId The GTM Account ID.
           * @param containerId The GTM Container ID.
           * @param environmentId The GTM Environment ID.
           * @param content the {@link com.google.api.services.tagmanager.model.Environment}
           * @since 1.13
           */
          protected Patch(java.lang.String accountId, java.lang.String containerId, java.lang.String environmentId, com.google.api.services.tagmanager.model.Environment content) {
            super(TagManager.this, "PATCH", REST_PATH, content, com.google.api.services.tagmanager.model.Environment.class);
            this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
            this.containerId = com.google.api.client.util.Preconditions.checkNotNull(containerId, "Required parameter containerId must be specified.");
            this.environmentId = com.google.api.client.util.Preconditions.checkNotNull(environmentId, "Required parameter environmentId must be specified.");
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUserIp(java.lang.String userIp) {
            return (Patch) super.setUserIp(userIp);
          }

          /** The GTM Account ID. */
          @com.google.api.client.util.Key
          private java.lang.String accountId;

          /** The GTM Account ID.
           */
          public java.lang.String getAccountId() {
            return accountId;
          }

          /** The GTM Account ID. */
          public Patch setAccountId(java.lang.String accountId) {
            this.accountId = accountId;
            return this;
          }

          /** The GTM Container ID. */
          @com.google.api.client.util.Key
          private java.lang.String containerId;

          /** The GTM Container ID.
           */
          public java.lang.String getContainerId() {
            return containerId;
          }

          /** The GTM Container ID. */
          public Patch setContainerId(java.lang.String containerId) {
            this.containerId = containerId;
            return this;
          }

          /** The GTM Environment ID. */
          @com.google.api.client.util.Key
          private java.lang.String environmentId;

          /** The GTM Environment ID.
           */
          public java.lang.String getEnvironmentId() {
            return environmentId;
          }

          /** The GTM Environment ID. */
          public Patch setEnvironmentId(java.lang.String environmentId) {
            this.environmentId = environmentId;
            return this;
          }

          /**
           * When provided, this fingerprint must match the fingerprint of the environment in
           * storage.
           */
          @com.google.api.client.util.Key
          private java.lang.String fingerprint;

          /** When provided, this fingerprint must match the fingerprint of the environment in storage.
           */
          public java.lang.String getFingerprint() {
            return fingerprint;
          }

          /**
           * When provided, this fingerprint must match the fingerprint of the environment in
           * storage.
           */
          public Patch setFingerprint(java.lang.String fingerprint) {
            this.fingerprint = fingerprint;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Updates a GTM Environment.
         *
         * Create a request for the method "environments.update".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param accountId The GTM Account ID.
         * @param containerId The GTM Container ID.
         * @param environmentId The GTM Environment ID.
         * @param content the {@link com.google.api.services.tagmanager.model.Environment}
         * @return the request
         */
        public Update update(java.lang.String accountId, java.lang.String containerId, java.lang.String environmentId, com.google.api.services.tagmanager.model.Environment content) throws java.io.IOException {
          Update result = new Update(accountId, containerId, environmentId, content);
          initialize(result);
          return result;
        }

        public class Update extends TagManagerRequest<com.google.api.services.tagmanager.model.Environment> {

          private static final String REST_PATH = "accounts/{accountId}/containers/{containerId}/environments/{environmentId}";

          /**
           * Updates a GTM Environment.
           *
           * Create a request for the method "environments.update".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
           * <p> {@link
           * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param accountId The GTM Account ID.
           * @param containerId The GTM Container ID.
           * @param environmentId The GTM Environment ID.
           * @param content the {@link com.google.api.services.tagmanager.model.Environment}
           * @since 1.13
           */
          protected Update(java.lang.String accountId, java.lang.String containerId, java.lang.String environmentId, com.google.api.services.tagmanager.model.Environment content) {
            super(TagManager.this, "PUT", REST_PATH, content, com.google.api.services.tagmanager.model.Environment.class);
            this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
            this.containerId = com.google.api.client.util.Preconditions.checkNotNull(containerId, "Required parameter containerId must be specified.");
            this.environmentId = com.google.api.client.util.Preconditions.checkNotNull(environmentId, "Required parameter environmentId must be specified.");
            checkRequiredParameter(content, "content");
            checkRequiredParameter(content.getName(), "Environment.getName()");
          }

          @Override
          public Update setAlt(java.lang.String alt) {
            return (Update) super.setAlt(alt);
          }

          @Override
          public Update setFields(java.lang.String fields) {
            return (Update) super.setFields(fields);
          }

          @Override
          public Update setKey(java.lang.String key) {
            return (Update) super.setKey(key);
          }

          @Override
          public Update setOauthToken(java.lang.String oauthToken) {
            return (Update) super.setOauthToken(oauthToken);
          }

          @Override
          public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Update) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Update setQuotaUser(java.lang.String quotaUser) {
            return (Update) super.setQuotaUser(quotaUser);
          }

          @Override
          public Update setUserIp(java.lang.String userIp) {
            return (Update) super.setUserIp(userIp);
          }

          /** The GTM Account ID. */
          @com.google.api.client.util.Key
          private java.lang.String accountId;

          /** The GTM Account ID.
           */
          public java.lang.String getAccountId() {
            return accountId;
          }

          /** The GTM Account ID. */
          public Update setAccountId(java.lang.String accountId) {
            this.accountId = accountId;
            return this;
          }

          /** The GTM Container ID. */
          @com.google.api.client.util.Key
          private java.lang.String containerId;

          /** The GTM Container ID.
           */
          public java.lang.String getContainerId() {
            return containerId;
          }

          /** The GTM Container ID. */
          public Update setContainerId(java.lang.String containerId) {
            this.containerId = containerId;
            return this;
          }

          /** The GTM Environment ID. */
          @com.google.api.client.util.Key
          private java.lang.String environmentId;

          /** The GTM Environment ID.
           */
          public java.lang.String getEnvironmentId() {
            return environmentId;
          }

          /** The GTM Environment ID. */
          public Update setEnvironmentId(java.lang.String environmentId) {
            this.environmentId = environmentId;
            return this;
          }

          /**
           * When provided, this fingerprint must match the fingerprint of the environment in
           * storage.
           */
          @com.google.api.client.util.Key
          private java.lang.String fingerprint;

          /** When provided, this fingerprint must match the fingerprint of the environment in storage.
           */
          public java.lang.String getFingerprint() {
            return fingerprint;
          }

          /**
           * When provided, this fingerprint must match the fingerprint of the environment in
           * storage.
           */
          public Update setFingerprint(java.lang.String fingerprint) {
            this.fingerprint = fingerprint;
            return this;
          }

          @Override
          public Update set(String parameterName, Object value) {
            return (Update) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Folders collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code TagManager tagmanager = new TagManager(...);}
       *   {@code TagManager.Folders.List request = tagmanager.folders().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Folders folders() {
        return new Folders();
      }

      /**
       * The "folders" collection of methods.
       */
      public class Folders {

        /**
         * Creates a GTM Folder.
         *
         * Create a request for the method "folders.create".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param accountId The GTM Account ID.
         * @param containerId The GTM Container ID.
         * @param content the {@link com.google.api.services.tagmanager.model.Folder}
         * @return the request
         */
        public Create create(java.lang.String accountId, java.lang.String containerId, com.google.api.services.tagmanager.model.Folder content) throws java.io.IOException {
          Create result = new Create(accountId, containerId, content);
          initialize(result);
          return result;
        }

        public class Create extends TagManagerRequest<com.google.api.services.tagmanager.model.Folder> {

          private static final String REST_PATH = "accounts/{accountId}/containers/{containerId}/folders";

          /**
           * Creates a GTM Folder.
           *
           * Create a request for the method "folders.create".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param accountId The GTM Account ID.
           * @param containerId The GTM Container ID.
           * @param content the {@link com.google.api.services.tagmanager.model.Folder}
           * @since 1.13
           */
          protected Create(java.lang.String accountId, java.lang.String containerId, com.google.api.services.tagmanager.model.Folder content) {
            super(TagManager.this, "POST", REST_PATH, content, com.google.api.services.tagmanager.model.Folder.class);
            this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
            this.containerId = com.google.api.client.util.Preconditions.checkNotNull(containerId, "Required parameter containerId must be specified.");
            checkRequiredParameter(content, "content");
            checkRequiredParameter(content.getName(), "Folder.getName()");
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUserIp(java.lang.String userIp) {
            return (Create) super.setUserIp(userIp);
          }

          /** The GTM Account ID. */
          @com.google.api.client.util.Key
          private java.lang.String accountId;

          /** The GTM Account ID.
           */
          public java.lang.String getAccountId() {
            return accountId;
          }

          /** The GTM Account ID. */
          public Create setAccountId(java.lang.String accountId) {
            this.accountId = accountId;
            return this;
          }

          /** The GTM Container ID. */
          @com.google.api.client.util.Key
          private java.lang.String containerId;

          /** The GTM Container ID.
           */
          public java.lang.String getContainerId() {
            return containerId;
          }

          /** The GTM Container ID. */
          public Create setContainerId(java.lang.String containerId) {
            this.containerId = containerId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a GTM Folder.
         *
         * Create a request for the method "folders.delete".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param accountId The GTM Account ID.
         * @param containerId The GTM Container ID.
         * @param folderId The GTM Folder ID.
         * @return the request
         */
        public Delete delete(java.lang.String accountId, java.lang.String containerId, java.lang.String folderId) throws java.io.IOException {
          Delete result = new Delete(accountId, containerId, folderId);
          initialize(result);
          return result;
        }

        public class Delete extends TagManagerRequest<Void> {

          private static final String REST_PATH = "accounts/{accountId}/containers/{containerId}/folders/{folderId}";

          /**
           * Deletes a GTM Folder.
           *
           * Create a request for the method "folders.delete".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param accountId The GTM Account ID.
           * @param containerId The GTM Container ID.
           * @param folderId The GTM Folder ID.
           * @since 1.13
           */
          protected Delete(java.lang.String accountId, java.lang.String containerId, java.lang.String folderId) {
            super(TagManager.this, "DELETE", REST_PATH, null, Void.class);
            this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
            this.containerId = com.google.api.client.util.Preconditions.checkNotNull(containerId, "Required parameter containerId must be specified.");
            this.folderId = com.google.api.client.util.Preconditions.checkNotNull(folderId, "Required parameter folderId must be specified.");
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUserIp(java.lang.String userIp) {
            return (Delete) super.setUserIp(userIp);
          }

          /** The GTM Account ID. */
          @com.google.api.client.util.Key
          private java.lang.String accountId;

          /** The GTM Account ID.
           */
          public java.lang.String getAccountId() {
            return accountId;
          }

          /** The GTM Account ID. */
          public Delete setAccountId(java.lang.String accountId) {
            this.accountId = accountId;
            return this;
          }

          /** The GTM Container ID. */
          @com.google.api.client.util.Key
          private java.lang.String containerId;

          /** The GTM Container ID.
           */
          public java.lang.String getContainerId() {
            return containerId;
          }

          /** The GTM Container ID. */
          public Delete setContainerId(java.lang.String containerId) {
            this.containerId = containerId;
            return this;
          }

          /** The GTM Folder ID. */
          @com.google.api.client.util.Key
          private java.lang.String folderId;

          /** The GTM Folder ID.
           */
          public java.lang.String getFolderId() {
            return folderId;
          }

          /** The GTM Folder ID. */
          public Delete setFolderId(java.lang.String folderId) {
            this.folderId = folderId;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a GTM Folder.
         *
         * Create a request for the method "folders.get".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param accountId The GTM Account ID.
         * @param containerId The GTM Container ID.
         * @param folderId The GTM Folder ID.
         * @return the request
         */
        public Get get(java.lang.String accountId, java.lang.String containerId, java.lang.String folderId) throws java.io.IOException {
          Get result = new Get(accountId, containerId, folderId);
          initialize(result);
          return result;
        }

        public class Get extends TagManagerRequest<com.google.api.services.tagmanager.model.Folder> {

          private static final String REST_PATH = "accounts/{accountId}/containers/{containerId}/folders/{folderId}";

          /**
           * Gets a GTM Folder.
           *
           * Create a request for the method "folders.get".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param accountId The GTM Account ID.
           * @param containerId The GTM Container ID.
           * @param folderId The GTM Folder ID.
           * @since 1.13
           */
          protected Get(java.lang.String accountId, java.lang.String containerId, java.lang.String folderId) {
            super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.Folder.class);
            this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
            this.containerId = com.google.api.client.util.Preconditions.checkNotNull(containerId, "Required parameter containerId must be specified.");
            this.folderId = com.google.api.client.util.Preconditions.checkNotNull(folderId, "Required parameter folderId must be specified.");
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUserIp(java.lang.String userIp) {
            return (Get) super.setUserIp(userIp);
          }

          /** The GTM Account ID. */
          @com.google.api.client.util.Key
          private java.lang.String accountId;

          /** The GTM Account ID.
           */
          public java.lang.String getAccountId() {
            return accountId;
          }

          /** The GTM Account ID. */
          public Get setAccountId(java.lang.String accountId) {
            this.accountId = accountId;
            return this;
          }

          /** The GTM Container ID. */
          @com.google.api.client.util.Key
          private java.lang.String containerId;

          /** The GTM Container ID.
           */
          public java.lang.String getContainerId() {
            return containerId;
          }

          /** The GTM Container ID. */
          public Get setContainerId(java.lang.String containerId) {
            this.containerId = containerId;
            return this;
          }

          /** The GTM Folder ID. */
          @com.google.api.client.util.Key
          private java.lang.String folderId;

          /** The GTM Folder ID.
           */
          public java.lang.String getFolderId() {
            return folderId;
          }

          /** The GTM Folder ID. */
          public Get setFolderId(java.lang.String folderId) {
            this.folderId = folderId;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists all GTM Folders of a Container.
         *
         * Create a request for the method "folders.list".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param accountId The GTM Account ID.
         * @param containerId The GTM Container ID.
         * @return the request
         */
        public List list(java.lang.String accountId, java.lang.String containerId) throws java.io.IOException {
          List result = new List(accountId, containerId);
          initialize(result);
          return result;
        }

        public class List extends TagManagerRequest<com.google.api.services.tagmanager.model.ListFoldersResponse> {

          private static final String REST_PATH = "accounts/{accountId}/containers/{containerId}/folders";

          /**
           * Lists all GTM Folders of a Container.
           *
           * Create a request for the method "folders.list".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param accountId The GTM Account ID.
           * @param containerId The GTM Container ID.
           * @since 1.13
           */
          protected List(java.lang.String accountId, java.lang.String containerId) {
            super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.ListFoldersResponse.class);
            this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
            this.containerId = com.google.api.client.util.Preconditions.checkNotNull(containerId, "Required parameter containerId must be specified.");
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUserIp(java.lang.String userIp) {
            return (List) super.setUserIp(userIp);
          }

          /** The GTM Account ID. */
          @com.google.api.client.util.Key
          private java.lang.String accountId;

          /** The GTM Account ID.
           */
          public java.lang.String getAccountId() {
            return accountId;
          }

          /** The GTM Account ID. */
          public List setAccountId(java.lang.String accountId) {
            this.accountId = accountId;
            return this;
          }

          /** The GTM Container ID. */
          @com.google.api.client.util.Key
          private java.lang.String containerId;

          /** The GTM Container ID.
           */
          public java.lang.String getContainerId() {
            return containerId;
          }

          /** The GTM Container ID. */
          public List setContainerId(java.lang.String containerId) {
            this.containerId = containerId;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates a GTM Folder.
         *
         * Create a request for the method "folders.update".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param accountId The GTM Account ID.
         * @param containerId The GTM Container ID.
         * @param folderId The GTM Folder ID.
         * @param content the {@link com.google.api.services.tagmanager.model.Folder}
         * @return the request
         */
        public Update update(java.lang.String accountId, java.lang.String containerId, java.lang.String folderId, com.google.api.services.tagmanager.model.Folder content) throws java.io.IOException {
          Update result = new Update(accountId, containerId, folderId, content);
          initialize(result);
          return result;
        }

        public class Update extends TagManagerRequest<com.google.api.services.tagmanager.model.Folder> {

          private static final String REST_PATH = "accounts/{accountId}/containers/{containerId}/folders/{folderId}";

          /**
           * Updates a GTM Folder.
           *
           * Create a request for the method "folders.update".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
           * <p> {@link
           * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param accountId The GTM Account ID.
           * @param containerId The GTM Container ID.
           * @param folderId The GTM Folder ID.
           * @param content the {@link com.google.api.services.tagmanager.model.Folder}
           * @since 1.13
           */
          protected Update(java.lang.String accountId, java.lang.String containerId, java.lang.String folderId, com.google.api.services.tagmanager.model.Folder content) {
            super(TagManager.this, "PUT", REST_PATH, content, com.google.api.services.tagmanager.model.Folder.class);
            this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
            this.containerId = com.google.api.client.util.Preconditions.checkNotNull(containerId, "Required parameter containerId must be specified.");
            this.folderId = com.google.api.client.util.Preconditions.checkNotNull(folderId, "Required parameter folderId must be specified.");
            checkRequiredParameter(content, "content");
            checkRequiredParameter(content.getName(), "Folder.getName()");
          }

          @Override
          public Update setAlt(java.lang.String alt) {
            return (Update) super.setAlt(alt);
          }

          @Override
          public Update setFields(java.lang.String fields) {
            return (Update) super.setFields(fields);
          }

          @Override
          public Update setKey(java.lang.String key) {
            return (Update) super.setKey(key);
          }

          @Override
          public Update setOauthToken(java.lang.String oauthToken) {
            return (Update) super.setOauthToken(oauthToken);
          }

          @Override
          public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Update) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Update setQuotaUser(java.lang.String quotaUser) {
            return (Update) super.setQuotaUser(quotaUser);
          }

          @Override
          public Update setUserIp(java.lang.String userIp) {
            return (Update) super.setUserIp(userIp);
          }

          /** The GTM Account ID. */
          @com.google.api.client.util.Key
          private java.lang.String accountId;

          /** The GTM Account ID.
           */
          public java.lang.String getAccountId() {
            return accountId;
          }

          /** The GTM Account ID. */
          public Update setAccountId(java.lang.String accountId) {
            this.accountId = accountId;
            return this;
          }

          /** The GTM Container ID. */
          @com.google.api.client.util.Key
          private java.lang.String containerId;

          /** The GTM Container ID.
           */
          public java.lang.String getContainerId() {
            return containerId;
          }

          /** The GTM Container ID. */
          public Update setContainerId(java.lang.String containerId) {
            this.containerId = containerId;
            return this;
          }

          /** The GTM Folder ID. */
          @com.google.api.client.util.Key
          private java.lang.String folderId;

          /** The GTM Folder ID.
           */
          public java.lang.String getFolderId() {
            return folderId;
          }

          /** The GTM Folder ID. */
          public Update setFolderId(java.lang.String folderId) {
            this.folderId = folderId;
            return this;
          }

          /**
           * When provided, this fingerprint must match the fingerprint of the folder in storage.
           */
          @com.google.api.client.util.Key
          private java.lang.String fingerprint;

          /** When provided, this fingerprint must match the fingerprint of the folder in storage.
           */
          public java.lang.String getFingerprint() {
            return fingerprint;
          }

          /**
           * When provided, this fingerprint must match the fingerprint of the folder in storage.
           */
          public Update setFingerprint(java.lang.String fingerprint) {
            this.fingerprint = fingerprint;
            return this;
          }

          @Override
          public Update set(String parameterName, Object value) {
            return (Update) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Entities collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code TagManager tagmanager = new TagManager(...);}
         *   {@code TagManager.Entities.List request = tagmanager.entities().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Entities entities() {
          return new Entities();
        }

        /**
         * The "entities" collection of methods.
         */
        public class Entities {

          /**
           * List all entities in a GTM Folder.
           *
           * Create a request for the method "entities.list".
           *
           * This request holds the parameters needed by the tagmanager server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param accountId The GTM Account ID.
           * @param containerId The GTM Container ID.
           * @param folderId The GTM Folder ID.
           * @return the request
           */
          public List list(java.lang.String accountId, java.lang.String containerId, java.lang.String folderId) throws java.io.IOException {
            List result = new List(accountId, containerId, folderId);
            initialize(result);
            return result;
          }

          public class List extends TagManagerRequest<com.google.api.services.tagmanager.model.FolderEntities> {

            private static final String REST_PATH = "accounts/{accountId}/containers/{containerId}/folders/{folderId}/entities";

            /**
             * List all entities in a GTM Folder.
             *
             * Create a request for the method "entities.list".
             *
             * This request holds the parameters needed by the the tagmanager server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param accountId The GTM Account ID.
             * @param containerId The GTM Container ID.
             * @param folderId The GTM Folder ID.
             * @since 1.13
             */
            protected List(java.lang.String accountId, java.lang.String containerId, java.lang.String folderId) {
              super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.FolderEntities.class);
              this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
              this.containerId = com.google.api.client.util.Preconditions.checkNotNull(containerId, "Required parameter containerId must be specified.");
              this.folderId = com.google.api.client.util.Preconditions.checkNotNull(folderId, "Required parameter folderId must be specified.");
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUserIp(java.lang.String userIp) {
              return (List) super.setUserIp(userIp);
            }

            /** The GTM Account ID. */
            @com.google.api.client.util.Key
            private java.lang.String accountId;

            /** The GTM Account ID.
             */
            public java.lang.String getAccountId() {
              return accountId;
            }

            /** The GTM Account ID. */
            public List setAccountId(java.lang.String accountId) {
              this.accountId = accountId;
              return this;
            }

            /** The GTM Container ID. */
            @com.google.api.client.util.Key
            private java.lang.String containerId;

            /** The GTM Container ID.
             */
            public java.lang.String getContainerId() {
              return containerId;
            }

            /** The GTM Container ID. */
            public List setContainerId(java.lang.String containerId) {
              this.containerId = containerId;
              return this;
            }

            /** The GTM Folder ID. */
            @com.google.api.client.util.Key
            private java.lang.String folderId;

            /** The GTM Folder ID.
             */
            public java.lang.String getFolderId() {
              return folderId;
            }

            /** The GTM Folder ID. */
            public List setFolderId(java.lang.String folderId) {
              this.folderId = folderId;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the MoveFolders collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code TagManager tagmanager = new TagManager(...);}
       *   {@code TagManager.MoveFolders.List request = tagmanager.moveFolders().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public MoveFolders moveFolders() {
        return new MoveFolders();
      }

      /**
       * The "move_folders" collection of methods.
       */
      public class MoveFolders {

        /**
         * Moves entities to a GTM Folder.
         *
         * Create a request for the method "move_folders.update".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param accountId The GTM Account ID.
         * @param containerId The GTM Container ID.
         * @param folderId The GTM Folder ID.
         * @param content the {@link com.google.api.services.tagmanager.model.Folder}
         * @return the request
         */
        public Update update(java.lang.String accountId, java.lang.String containerId, java.lang.String folderId, com.google.api.services.tagmanager.model.Folder content) throws java.io.IOException {
          Update result = new Update(accountId, containerId, folderId, content);
          initialize(result);
          return result;
        }

        public class Update extends TagManagerRequest<Void> {

          private static final String REST_PATH = "accounts/{accountId}/containers/{containerId}/move_folders/{folderId}";

          /**
           * Moves entities to a GTM Folder.
           *
           * Create a request for the method "move_folders.update".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
           * <p> {@link
           * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param accountId The GTM Account ID.
           * @param containerId The GTM Container ID.
           * @param folderId The GTM Folder ID.
           * @param content the {@link com.google.api.services.tagmanager.model.Folder}
           * @since 1.13
           */
          protected Update(java.lang.String accountId, java.lang.String containerId, java.lang.String folderId, com.google.api.services.tagmanager.model.Folder content) {
            super(TagManager.this, "PUT", REST_PATH, content, Void.class);
            this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
            this.containerId = com.google.api.client.util.Preconditions.checkNotNull(containerId, "Required parameter containerId must be specified.");
            this.folderId = com.google.api.client.util.Preconditions.checkNotNull(folderId, "Required parameter folderId must be specified.");
          }

          @Override
          public Update setAlt(java.lang.String alt) {
            return (Update) super.setAlt(alt);
          }

          @Override
          public Update setFields(java.lang.String fields) {
            return (Update) super.setFields(fields);
          }

          @Override
          public Update setKey(java.lang.String key) {
            return (Update) super.setKey(key);
          }

          @Override
          public Update setOauthToken(java.lang.String oauthToken) {
            return (Update) super.setOauthToken(oauthToken);
          }

          @Override
          public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Update) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Update setQuotaUser(java.lang.String quotaUser) {
            return (Update) super.setQuotaUser(quotaUser);
          }

          @Override
          public Update setUserIp(java.lang.String userIp) {
            return (Update) super.setUserIp(userIp);
          }

          /** The GTM Account ID. */
          @com.google.api.client.util.Key
          private java.lang.String accountId;

          /** The GTM Account ID.
           */
          public java.lang.String getAccountId() {
            return accountId;
          }

          /** The GTM Account ID. */
          public Update setAccountId(java.lang.String accountId) {
            this.accountId = accountId;
            return this;
          }

          /** The GTM Container ID. */
          @com.google.api.client.util.Key
          private java.lang.String containerId;

          /** The GTM Container ID.
           */
          public java.lang.String getContainerId() {
            return containerId;
          }

          /** The GTM Container ID. */
          public Update setContainerId(java.lang.String containerId) {
            this.containerId = containerId;
            return this;
          }

          /** The GTM Folder ID. */
          @com.google.api.client.util.Key
          private java.lang.String folderId;

          /** The GTM Folder ID.
           */
          public java.lang.String getFolderId() {
            return folderId;
          }

          /** The GTM Folder ID. */
          public Update setFolderId(java.lang.String folderId) {
            this.folderId = folderId;
            return this;
          }

          /** The tags to be moved to the folder. */
          @com.google.api.client.util.Key
          private java.util.List<java.lang.String> tagId;

          /** The tags to be moved to the folder.
           */
          public java.util.List<java.lang.String> getTagId() {
            return tagId;
          }

          /** The tags to be moved to the folder. */
          public Update setTagId(java.util.List<java.lang.String> tagId) {
            this.tagId = tagId;
            return this;
          }

          /** The triggers to be moved to the folder. */
          @com.google.api.client.util.Key
          private java.util.List<java.lang.String> triggerId;

          /** The triggers to be moved to the folder.
           */
          public java.util.List<java.lang.String> getTriggerId() {
            return triggerId;
          }

          /** The triggers to be moved to the folder. */
          public Update setTriggerId(java.util.List<java.lang.String> triggerId) {
            this.triggerId = triggerId;
            return this;
          }

          /** The variables to be moved to the folder. */
          @com.google.api.client.util.Key
          private java.util.List<java.lang.String> variableId;

          /** The variables to be moved to the folder.
           */
          public java.util.List<java.lang.String> getVariableId() {
            return variableId;
          }

          /** The variables to be moved to the folder. */
          public Update setVariableId(java.util.List<java.lang.String> variableId) {
            this.variableId = variableId;
            return this;
          }

          @Override
          public Update set(String parameterName, Object value) {
            return (Update) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the ReauthorizeEnvironments collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code TagManager tagmanager = new TagManager(...);}
       *   {@code TagManager.ReauthorizeEnvironments.List request = tagmanager.reauthorizeEnvironments().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public ReauthorizeEnvironments reauthorizeEnvironments() {
        return new ReauthorizeEnvironments();
      }

      /**
       * The "reauthorize_environments" collection of methods.
       */
      public class ReauthorizeEnvironments {

        /**
         * Re-generates the authorization code for a GTM Environment.
         *
         * Create a request for the method "reauthorize_environments.update".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param accountId The GTM Account ID.
         * @param containerId The GTM Container ID.
         * @param environmentId The GTM Environment ID.
         * @param content the {@link com.google.api.services.tagmanager.model.Environment}
         * @return the request
         */
        public Update update(java.lang.String accountId, java.lang.String containerId, java.lang.String environmentId, com.google.api.services.tagmanager.model.Environment content) throws java.io.IOException {
          Update result = new Update(accountId, containerId, environmentId, content);
          initialize(result);
          return result;
        }

        public class Update extends TagManagerRequest<com.google.api.services.tagmanager.model.Environment> {

          private static final String REST_PATH = "accounts/{accountId}/containers/{containerId}/reauthorize_environments/{environmentId}";

          /**
           * Re-generates the authorization code for a GTM Environment.
           *
           * Create a request for the method "reauthorize_environments.update".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
           * <p> {@link
           * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param accountId The GTM Account ID.
           * @param containerId The GTM Container ID.
           * @param environmentId The GTM Environment ID.
           * @param content the {@link com.google.api.services.tagmanager.model.Environment}
           * @since 1.13
           */
          protected Update(java.lang.String accountId, java.lang.String containerId, java.lang.String environmentId, com.google.api.services.tagmanager.model.Environment content) {
            super(TagManager.this, "PUT", REST_PATH, content, com.google.api.services.tagmanager.model.Environment.class);
            this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
            this.containerId = com.google.api.client.util.Preconditions.checkNotNull(containerId, "Required parameter containerId must be specified.");
            this.environmentId = com.google.api.client.util.Preconditions.checkNotNull(environmentId, "Required parameter environmentId must be specified.");
          }

          @Override
          public Update setAlt(java.lang.String alt) {
            return (Update) super.setAlt(alt);
          }

          @Override
          public Update setFields(java.lang.String fields) {
            return (Update) super.setFields(fields);
          }

          @Override
          public Update setKey(java.lang.String key) {
            return (Update) super.setKey(key);
          }

          @Override
          public Update setOauthToken(java.lang.String oauthToken) {
            return (Update) super.setOauthToken(oauthToken);
          }

          @Override
          public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Update) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Update setQuotaUser(java.lang.String quotaUser) {
            return (Update) super.setQuotaUser(quotaUser);
          }

          @Override
          public Update setUserIp(java.lang.String userIp) {
            return (Update) super.setUserIp(userIp);
          }

          /** The GTM Account ID. */
          @com.google.api.client.util.Key
          private java.lang.String accountId;

          /** The GTM Account ID.
           */
          public java.lang.String getAccountId() {
            return accountId;
          }

          /** The GTM Account ID. */
          public Update setAccountId(java.lang.String accountId) {
            this.accountId = accountId;
            return this;
          }

          /** The GTM Container ID. */
          @com.google.api.client.util.Key
          private java.lang.String containerId;

          /** The GTM Container ID.
           */
          public java.lang.String getContainerId() {
            return containerId;
          }

          /** The GTM Container ID. */
          public Update setContainerId(java.lang.String containerId) {
            this.containerId = containerId;
            return this;
          }

          /** The GTM Environment ID. */
          @com.google.api.client.util.Key
          private java.lang.String environmentId;

          /** The GTM Environment ID.
           */
          public java.lang.String getEnvironmentId() {
            return environmentId;
          }

          /** The GTM Environment ID. */
          public Update setEnvironmentId(java.lang.String environmentId) {
            this.environmentId = environmentId;
            return this;
          }

          @Override
          public Update set(String parameterName, Object value) {
            return (Update) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Tags collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code TagManager tagmanager = new TagManager(...);}
       *   {@code TagManager.Tags.List request = tagmanager.tags().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Tags tags() {
        return new Tags();
      }

      /**
       * The "tags" collection of methods.
       */
      public class Tags {

        /**
         * Creates a GTM Tag.
         *
         * Create a request for the method "tags.create".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param accountId The GTM Account ID.
         * @param containerId The GTM Container ID.
         * @param content the {@link com.google.api.services.tagmanager.model.Tag}
         * @return the request
         */
        public Create create(java.lang.String accountId, java.lang.String containerId, com.google.api.services.tagmanager.model.Tag content) throws java.io.IOException {
          Create result = new Create(accountId, containerId, content);
          initialize(result);
          return result;
        }

        public class Create extends TagManagerRequest<com.google.api.services.tagmanager.model.Tag> {

          private static final String REST_PATH = "accounts/{accountId}/containers/{containerId}/tags";

          /**
           * Creates a GTM Tag.
           *
           * Create a request for the method "tags.create".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param accountId The GTM Account ID.
           * @param containerId The GTM Container ID.
           * @param content the {@link com.google.api.services.tagmanager.model.Tag}
           * @since 1.13
           */
          protected Create(java.lang.String accountId, java.lang.String containerId, com.google.api.services.tagmanager.model.Tag content) {
            super(TagManager.this, "POST", REST_PATH, content, com.google.api.services.tagmanager.model.Tag.class);
            this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
            this.containerId = com.google.api.client.util.Preconditions.checkNotNull(containerId, "Required parameter containerId must be specified.");
            checkRequiredParameter(content, "content");
            checkRequiredParameter(content.getName(), "Tag.getName()");
            checkRequiredParameter(content, "content");
            checkRequiredParameter(content.getType(), "Tag.getType()");
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUserIp(java.lang.String userIp) {
            return (Create) super.setUserIp(userIp);
          }

          /** The GTM Account ID. */
          @com.google.api.client.util.Key
          private java.lang.String accountId;

          /** The GTM Account ID.
           */
          public java.lang.String getAccountId() {
            return accountId;
          }

          /** The GTM Account ID. */
          public Create setAccountId(java.lang.String accountId) {
            this.accountId = accountId;
            return this;
          }

          /** The GTM Container ID. */
          @com.google.api.client.util.Key
          private java.lang.String containerId;

          /** The GTM Container ID.
           */
          public java.lang.String getContainerId() {
            return containerId;
          }

          /** The GTM Container ID. */
          public Create setContainerId(java.lang.String containerId) {
            this.containerId = containerId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a GTM Tag.
         *
         * Create a request for the method "tags.delete".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param accountId The GTM Account ID.
         * @param containerId The GTM Container ID.
         * @param tagId The GTM Tag ID.
         * @return the request
         */
        public Delete delete(java.lang.String accountId, java.lang.String containerId, java.lang.String tagId) throws java.io.IOException {
          Delete result = new Delete(accountId, containerId, tagId);
          initialize(result);
          return result;
        }

        public class Delete extends TagManagerRequest<Void> {

          private static final String REST_PATH = "accounts/{accountId}/containers/{containerId}/tags/{tagId}";

          /**
           * Deletes a GTM Tag.
           *
           * Create a request for the method "tags.delete".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param accountId The GTM Account ID.
           * @param containerId The GTM Container ID.
           * @param tagId The GTM Tag ID.
           * @since 1.13
           */
          protected Delete(java.lang.String accountId, java.lang.String containerId, java.lang.String tagId) {
            super(TagManager.this, "DELETE", REST_PATH, null, Void.class);
            this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
            this.containerId = com.google.api.client.util.Preconditions.checkNotNull(containerId, "Required parameter containerId must be specified.");
            this.tagId = com.google.api.client.util.Preconditions.checkNotNull(tagId, "Required parameter tagId must be specified.");
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUserIp(java.lang.String userIp) {
            return (Delete) super.setUserIp(userIp);
          }

          /** The GTM Account ID. */
          @com.google.api.client.util.Key
          private java.lang.String accountId;

          /** The GTM Account ID.
           */
          public java.lang.String getAccountId() {
            return accountId;
          }

          /** The GTM Account ID. */
          public Delete setAccountId(java.lang.String accountId) {
            this.accountId = accountId;
            return this;
          }

          /** The GTM Container ID. */
          @com.google.api.client.util.Key
          private java.lang.String containerId;

          /** The GTM Container ID.
           */
          public java.lang.String getContainerId() {
            return containerId;
          }

          /** The GTM Container ID. */
          public Delete setContainerId(java.lang.String containerId) {
            this.containerId = containerId;
            return this;
          }

          /** The GTM Tag ID. */
          @com.google.api.client.util.Key
          private java.lang.String tagId;

          /** The GTM Tag ID.
           */
          public java.lang.String getTagId() {
            return tagId;
          }

          /** The GTM Tag ID. */
          public Delete setTagId(java.lang.String tagId) {
            this.tagId = tagId;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a GTM Tag.
         *
         * Create a request for the method "tags.get".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param accountId The GTM Account ID.
         * @param containerId The GTM Container ID.
         * @param tagId The GTM Tag ID.
         * @return the request
         */
        public Get get(java.lang.String accountId, java.lang.String containerId, java.lang.String tagId) throws java.io.IOException {
          Get result = new Get(accountId, containerId, tagId);
          initialize(result);
          return result;
        }

        public class Get extends TagManagerRequest<com.google.api.services.tagmanager.model.Tag> {

          private static final String REST_PATH = "accounts/{accountId}/containers/{containerId}/tags/{tagId}";

          /**
           * Gets a GTM Tag.
           *
           * Create a request for the method "tags.get".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param accountId The GTM Account ID.
           * @param containerId The GTM Container ID.
           * @param tagId The GTM Tag ID.
           * @since 1.13
           */
          protected Get(java.lang.String accountId, java.lang.String containerId, java.lang.String tagId) {
            super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.Tag.class);
            this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
            this.containerId = com.google.api.client.util.Preconditions.checkNotNull(containerId, "Required parameter containerId must be specified.");
            this.tagId = com.google.api.client.util.Preconditions.checkNotNull(tagId, "Required parameter tagId must be specified.");
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUserIp(java.lang.String userIp) {
            return (Get) super.setUserIp(userIp);
          }

          /** The GTM Account ID. */
          @com.google.api.client.util.Key
          private java.lang.String accountId;

          /** The GTM Account ID.
           */
          public java.lang.String getAccountId() {
            return accountId;
          }

          /** The GTM Account ID. */
          public Get setAccountId(java.lang.String accountId) {
            this.accountId = accountId;
            return this;
          }

          /** The GTM Container ID. */
          @com.google.api.client.util.Key
          private java.lang.String containerId;

          /** The GTM Container ID.
           */
          public java.lang.String getContainerId() {
            return containerId;
          }

          /** The GTM Container ID. */
          public Get setContainerId(java.lang.String containerId) {
            this.containerId = containerId;
            return this;
          }

          /** The GTM Tag ID. */
          @com.google.api.client.util.Key
          private java.lang.String tagId;

          /** The GTM Tag ID.
           */
          public java.lang.String getTagId() {
            return tagId;
          }

          /** The GTM Tag ID. */
          public Get setTagId(java.lang.String tagId) {
            this.tagId = tagId;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists all GTM Tags of a Container.
         *
         * Create a request for the method "tags.list".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param accountId The GTM Account ID.
         * @param containerId The GTM Container ID.
         * @return the request
         */
        public List list(java.lang.String accountId, java.lang.String containerId) throws java.io.IOException {
          List result = new List(accountId, containerId);
          initialize(result);
          return result;
        }

        public class List extends TagManagerRequest<com.google.api.services.tagmanager.model.ListTagsResponse> {

          private static final String REST_PATH = "accounts/{accountId}/containers/{containerId}/tags";

          /**
           * Lists all GTM Tags of a Container.
           *
           * Create a request for the method "tags.list".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param accountId The GTM Account ID.
           * @param containerId The GTM Container ID.
           * @since 1.13
           */
          protected List(java.lang.String accountId, java.lang.String containerId) {
            super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.ListTagsResponse.class);
            this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
            this.containerId = com.google.api.client.util.Preconditions.checkNotNull(containerId, "Required parameter containerId must be specified.");
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUserIp(java.lang.String userIp) {
            return (List) super.setUserIp(userIp);
          }

          /** The GTM Account ID. */
          @com.google.api.client.util.Key
          private java.lang.String accountId;

          /** The GTM Account ID.
           */
          public java.lang.String getAccountId() {
            return accountId;
          }

          /** The GTM Account ID. */
          public List setAccountId(java.lang.String accountId) {
            this.accountId = accountId;
            return this;
          }

          /** The GTM Container ID. */
          @com.google.api.client.util.Key
          private java.lang.String containerId;

          /** The GTM Container ID.
           */
          public java.lang.String getContainerId() {
            return containerId;
          }

          /** The GTM Container ID. */
          public List setContainerId(java.lang.String containerId) {
            this.containerId = containerId;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates a GTM Tag.
         *
         * Create a request for the method "tags.update".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param accountId The GTM Account ID.
         * @param containerId The GTM Container ID.
         * @param tagId The GTM Tag ID.
         * @param content the {@link com.google.api.services.tagmanager.model.Tag}
         * @return the request
         */
        public Update update(java.lang.String accountId, java.lang.String containerId, java.lang.String tagId, com.google.api.services.tagmanager.model.Tag content) throws java.io.IOException {
          Update result = new Update(accountId, containerId, tagId, content);
          initialize(result);
          return result;
        }

        public class Update extends TagManagerRequest<com.google.api.services.tagmanager.model.Tag> {

          private static final String REST_PATH = "accounts/{accountId}/containers/{containerId}/tags/{tagId}";

          /**
           * Updates a GTM Tag.
           *
           * Create a request for the method "tags.update".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
           * <p> {@link
           * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param accountId The GTM Account ID.
           * @param containerId The GTM Container ID.
           * @param tagId The GTM Tag ID.
           * @param content the {@link com.google.api.services.tagmanager.model.Tag}
           * @since 1.13
           */
          protected Update(java.lang.String accountId, java.lang.String containerId, java.lang.String tagId, com.google.api.services.tagmanager.model.Tag content) {
            super(TagManager.this, "PUT", REST_PATH, content, com.google.api.services.tagmanager.model.Tag.class);
            this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
            this.containerId = com.google.api.client.util.Preconditions.checkNotNull(containerId, "Required parameter containerId must be specified.");
            this.tagId = com.google.api.client.util.Preconditions.checkNotNull(tagId, "Required parameter tagId must be specified.");
            checkRequiredParameter(content, "content");
            checkRequiredParameter(content.getName(), "Tag.getName()");
          }

          @Override
          public Update setAlt(java.lang.String alt) {
            return (Update) super.setAlt(alt);
          }

          @Override
          public Update setFields(java.lang.String fields) {
            return (Update) super.setFields(fields);
          }

          @Override
          public Update setKey(java.lang.String key) {
            return (Update) super.setKey(key);
          }

          @Override
          public Update setOauthToken(java.lang.String oauthToken) {
            return (Update) super.setOauthToken(oauthToken);
          }

          @Override
          public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Update) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Update setQuotaUser(java.lang.String quotaUser) {
            return (Update) super.setQuotaUser(quotaUser);
          }

          @Override
          public Update setUserIp(java.lang.String userIp) {
            return (Update) super.setUserIp(userIp);
          }

          /** The GTM Account ID. */
          @com.google.api.client.util.Key
          private java.lang.String accountId;

          /** The GTM Account ID.
           */
          public java.lang.String getAccountId() {
            return accountId;
          }

          /** The GTM Account ID. */
          public Update setAccountId(java.lang.String accountId) {
            this.accountId = accountId;
            return this;
          }

          /** The GTM Container ID. */
          @com.google.api.client.util.Key
          private java.lang.String containerId;

          /** The GTM Container ID.
           */
          public java.lang.String getContainerId() {
            return containerId;
          }

          /** The GTM Container ID. */
          public Update setContainerId(java.lang.String containerId) {
            this.containerId = containerId;
            return this;
          }

          /** The GTM Tag ID. */
          @com.google.api.client.util.Key
          private java.lang.String tagId;

          /** The GTM Tag ID.
           */
          public java.lang.String getTagId() {
            return tagId;
          }

          /** The GTM Tag ID. */
          public Update setTagId(java.lang.String tagId) {
            this.tagId = tagId;
            return this;
          }

          /** When provided, this fingerprint must match the fingerprint of the tag in storage. */
          @com.google.api.client.util.Key
          private java.lang.String fingerprint;

          /** When provided, this fingerprint must match the fingerprint of the tag in storage.
           */
          public java.lang.String getFingerprint() {
            return fingerprint;
          }

          /** When provided, this fingerprint must match the fingerprint of the tag in storage. */
          public Update setFingerprint(java.lang.String fingerprint) {
            this.fingerprint = fingerprint;
            return this;
          }

          @Override
          public Update set(String parameterName, Object value) {
            return (Update) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Triggers collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code TagManager tagmanager = new TagManager(...);}
       *   {@code TagManager.Triggers.List request = tagmanager.triggers().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Triggers triggers() {
        return new Triggers();
      }

      /**
       * The "triggers" collection of methods.
       */
      public class Triggers {

        /**
         * Creates a GTM Trigger.
         *
         * Create a request for the method "triggers.create".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param accountId The GTM Account ID.
         * @param containerId The GTM Container ID.
         * @param content the {@link com.google.api.services.tagmanager.model.Trigger}
         * @return the request
         */
        public Create create(java.lang.String accountId, java.lang.String containerId, com.google.api.services.tagmanager.model.Trigger content) throws java.io.IOException {
          Create result = new Create(accountId, containerId, content);
          initialize(result);
          return result;
        }

        public class Create extends TagManagerRequest<com.google.api.services.tagmanager.model.Trigger> {

          private static final String REST_PATH = "accounts/{accountId}/containers/{containerId}/triggers";

          /**
           * Creates a GTM Trigger.
           *
           * Create a request for the method "triggers.create".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param accountId The GTM Account ID.
           * @param containerId The GTM Container ID.
           * @param content the {@link com.google.api.services.tagmanager.model.Trigger}
           * @since 1.13
           */
          protected Create(java.lang.String accountId, java.lang.String containerId, com.google.api.services.tagmanager.model.Trigger content) {
            super(TagManager.this, "POST", REST_PATH, content, com.google.api.services.tagmanager.model.Trigger.class);
            this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
            this.containerId = com.google.api.client.util.Preconditions.checkNotNull(containerId, "Required parameter containerId must be specified.");
            checkRequiredParameter(content, "content");
            checkRequiredParameter(content.getName(), "Trigger.getName()");
            checkRequiredParameter(content, "content");
            checkRequiredParameter(content.getType(), "Trigger.getType()");
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUserIp(java.lang.String userIp) {
            return (Create) super.setUserIp(userIp);
          }

          /** The GTM Account ID. */
          @com.google.api.client.util.Key
          private java.lang.String accountId;

          /** The GTM Account ID.
           */
          public java.lang.String getAccountId() {
            return accountId;
          }

          /** The GTM Account ID. */
          public Create setAccountId(java.lang.String accountId) {
            this.accountId = accountId;
            return this;
          }

          /** The GTM Container ID. */
          @com.google.api.client.util.Key
          private java.lang.String containerId;

          /** The GTM Container ID.
           */
          public java.lang.String getContainerId() {
            return containerId;
          }

          /** The GTM Container ID. */
          public Create setContainerId(java.lang.String containerId) {
            this.containerId = containerId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a GTM Trigger.
         *
         * Create a request for the method "triggers.delete".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param accountId The GTM Account ID.
         * @param containerId The GTM Container ID.
         * @param triggerId The GTM Trigger ID.
         * @return the request
         */
        public Delete delete(java.lang.String accountId, java.lang.String containerId, java.lang.String triggerId) throws java.io.IOException {
          Delete result = new Delete(accountId, containerId, triggerId);
          initialize(result);
          return result;
        }

        public class Delete extends TagManagerRequest<Void> {

          private static final String REST_PATH = "accounts/{accountId}/containers/{containerId}/triggers/{triggerId}";

          /**
           * Deletes a GTM Trigger.
           *
           * Create a request for the method "triggers.delete".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param accountId The GTM Account ID.
           * @param containerId The GTM Container ID.
           * @param triggerId The GTM Trigger ID.
           * @since 1.13
           */
          protected Delete(java.lang.String accountId, java.lang.String containerId, java.lang.String triggerId) {
            super(TagManager.this, "DELETE", REST_PATH, null, Void.class);
            this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
            this.containerId = com.google.api.client.util.Preconditions.checkNotNull(containerId, "Required parameter containerId must be specified.");
            this.triggerId = com.google.api.client.util.Preconditions.checkNotNull(triggerId, "Required parameter triggerId must be specified.");
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUserIp(java.lang.String userIp) {
            return (Delete) super.setUserIp(userIp);
          }

          /** The GTM Account ID. */
          @com.google.api.client.util.Key
          private java.lang.String accountId;

          /** The GTM Account ID.
           */
          public java.lang.String getAccountId() {
            return accountId;
          }

          /** The GTM Account ID. */
          public Delete setAccountId(java.lang.String accountId) {
            this.accountId = accountId;
            return this;
          }

          /** The GTM Container ID. */
          @com.google.api.client.util.Key
          private java.lang.String containerId;

          /** The GTM Container ID.
           */
          public java.lang.String getContainerId() {
            return containerId;
          }

          /** The GTM Container ID. */
          public Delete setContainerId(java.lang.String containerId) {
            this.containerId = containerId;
            return this;
          }

          /** The GTM Trigger ID. */
          @com.google.api.client.util.Key
          private java.lang.String triggerId;

          /** The GTM Trigger ID.
           */
          public java.lang.String getTriggerId() {
            return triggerId;
          }

          /** The GTM Trigger ID. */
          public Delete setTriggerId(java.lang.String triggerId) {
            this.triggerId = triggerId;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a GTM Trigger.
         *
         * Create a request for the method "triggers.get".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param accountId The GTM Account ID.
         * @param containerId The GTM Container ID.
         * @param triggerId The GTM Trigger ID.
         * @return the request
         */
        public Get get(java.lang.String accountId, java.lang.String containerId, java.lang.String triggerId) throws java.io.IOException {
          Get result = new Get(accountId, containerId, triggerId);
          initialize(result);
          return result;
        }

        public class Get extends TagManagerRequest<com.google.api.services.tagmanager.model.Trigger> {

          private static final String REST_PATH = "accounts/{accountId}/containers/{containerId}/triggers/{triggerId}";

          /**
           * Gets a GTM Trigger.
           *
           * Create a request for the method "triggers.get".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param accountId The GTM Account ID.
           * @param containerId The GTM Container ID.
           * @param triggerId The GTM Trigger ID.
           * @since 1.13
           */
          protected Get(java.lang.String accountId, java.lang.String containerId, java.lang.String triggerId) {
            super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.Trigger.class);
            this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
            this.containerId = com.google.api.client.util.Preconditions.checkNotNull(containerId, "Required parameter containerId must be specified.");
            this.triggerId = com.google.api.client.util.Preconditions.checkNotNull(triggerId, "Required parameter triggerId must be specified.");
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUserIp(java.lang.String userIp) {
            return (Get) super.setUserIp(userIp);
          }

          /** The GTM Account ID. */
          @com.google.api.client.util.Key
          private java.lang.String accountId;

          /** The GTM Account ID.
           */
          public java.lang.String getAccountId() {
            return accountId;
          }

          /** The GTM Account ID. */
          public Get setAccountId(java.lang.String accountId) {
            this.accountId = accountId;
            return this;
          }

          /** The GTM Container ID. */
          @com.google.api.client.util.Key
          private java.lang.String containerId;

          /** The GTM Container ID.
           */
          public java.lang.String getContainerId() {
            return containerId;
          }

          /** The GTM Container ID. */
          public Get setContainerId(java.lang.String containerId) {
            this.containerId = containerId;
            return this;
          }

          /** The GTM Trigger ID. */
          @com.google.api.client.util.Key
          private java.lang.String triggerId;

          /** The GTM Trigger ID.
           */
          public java.lang.String getTriggerId() {
            return triggerId;
          }

          /** The GTM Trigger ID. */
          public Get setTriggerId(java.lang.String triggerId) {
            this.triggerId = triggerId;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists all GTM Triggers of a Container.
         *
         * Create a request for the method "triggers.list".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param accountId The GTM Account ID.
         * @param containerId The GTM Container ID.
         * @return the request
         */
        public List list(java.lang.String accountId, java.lang.String containerId) throws java.io.IOException {
          List result = new List(accountId, containerId);
          initialize(result);
          return result;
        }

        public class List extends TagManagerRequest<com.google.api.services.tagmanager.model.ListTriggersResponse> {

          private static final String REST_PATH = "accounts/{accountId}/containers/{containerId}/triggers";

          /**
           * Lists all GTM Triggers of a Container.
           *
           * Create a request for the method "triggers.list".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param accountId The GTM Account ID.
           * @param containerId The GTM Container ID.
           * @since 1.13
           */
          protected List(java.lang.String accountId, java.lang.String containerId) {
            super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.ListTriggersResponse.class);
            this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
            this.containerId = com.google.api.client.util.Preconditions.checkNotNull(containerId, "Required parameter containerId must be specified.");
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUserIp(java.lang.String userIp) {
            return (List) super.setUserIp(userIp);
          }

          /** The GTM Account ID. */
          @com.google.api.client.util.Key
          private java.lang.String accountId;

          /** The GTM Account ID.
           */
          public java.lang.String getAccountId() {
            return accountId;
          }

          /** The GTM Account ID. */
          public List setAccountId(java.lang.String accountId) {
            this.accountId = accountId;
            return this;
          }

          /** The GTM Container ID. */
          @com.google.api.client.util.Key
          private java.lang.String containerId;

          /** The GTM Container ID.
           */
          public java.lang.String getContainerId() {
            return containerId;
          }

          /** The GTM Container ID. */
          public List setContainerId(java.lang.String containerId) {
            this.containerId = containerId;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates a GTM Trigger.
         *
         * Create a request for the method "triggers.update".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param accountId The GTM Account ID.
         * @param containerId The GTM Container ID.
         * @param triggerId The GTM Trigger ID.
         * @param content the {@link com.google.api.services.tagmanager.model.Trigger}
         * @return the request
         */
        public Update update(java.lang.String accountId, java.lang.String containerId, java.lang.String triggerId, com.google.api.services.tagmanager.model.Trigger content) throws java.io.IOException {
          Update result = new Update(accountId, containerId, triggerId, content);
          initialize(result);
          return result;
        }

        public class Update extends TagManagerRequest<com.google.api.services.tagmanager.model.Trigger> {

          private static final String REST_PATH = "accounts/{accountId}/containers/{containerId}/triggers/{triggerId}";

          /**
           * Updates a GTM Trigger.
           *
           * Create a request for the method "triggers.update".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
           * <p> {@link
           * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param accountId The GTM Account ID.
           * @param containerId The GTM Container ID.
           * @param triggerId The GTM Trigger ID.
           * @param content the {@link com.google.api.services.tagmanager.model.Trigger}
           * @since 1.13
           */
          protected Update(java.lang.String accountId, java.lang.String containerId, java.lang.String triggerId, com.google.api.services.tagmanager.model.Trigger content) {
            super(TagManager.this, "PUT", REST_PATH, content, com.google.api.services.tagmanager.model.Trigger.class);
            this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
            this.containerId = com.google.api.client.util.Preconditions.checkNotNull(containerId, "Required parameter containerId must be specified.");
            this.triggerId = com.google.api.client.util.Preconditions.checkNotNull(triggerId, "Required parameter triggerId must be specified.");
            checkRequiredParameter(content, "content");
            checkRequiredParameter(content.getName(), "Trigger.getName()");
          }

          @Override
          public Update setAlt(java.lang.String alt) {
            return (Update) super.setAlt(alt);
          }

          @Override
          public Update setFields(java.lang.String fields) {
            return (Update) super.setFields(fields);
          }

          @Override
          public Update setKey(java.lang.String key) {
            return (Update) super.setKey(key);
          }

          @Override
          public Update setOauthToken(java.lang.String oauthToken) {
            return (Update) super.setOauthToken(oauthToken);
          }

          @Override
          public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Update) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Update setQuotaUser(java.lang.String quotaUser) {
            return (Update) super.setQuotaUser(quotaUser);
          }

          @Override
          public Update setUserIp(java.lang.String userIp) {
            return (Update) super.setUserIp(userIp);
          }

          /** The GTM Account ID. */
          @com.google.api.client.util.Key
          private java.lang.String accountId;

          /** The GTM Account ID.
           */
          public java.lang.String getAccountId() {
            return accountId;
          }

          /** The GTM Account ID. */
          public Update setAccountId(java.lang.String accountId) {
            this.accountId = accountId;
            return this;
          }

          /** The GTM Container ID. */
          @com.google.api.client.util.Key
          private java.lang.String containerId;

          /** The GTM Container ID.
           */
          public java.lang.String getContainerId() {
            return containerId;
          }

          /** The GTM Container ID. */
          public Update setContainerId(java.lang.String containerId) {
            this.containerId = containerId;
            return this;
          }

          /** The GTM Trigger ID. */
          @com.google.api.client.util.Key
          private java.lang.String triggerId;

          /** The GTM Trigger ID.
           */
          public java.lang.String getTriggerId() {
            return triggerId;
          }

          /** The GTM Trigger ID. */
          public Update setTriggerId(java.lang.String triggerId) {
            this.triggerId = triggerId;
            return this;
          }

          /**
           * When provided, this fingerprint must match the fingerprint of the trigger in storage.
           */
          @com.google.api.client.util.Key
          private java.lang.String fingerprint;

          /** When provided, this fingerprint must match the fingerprint of the trigger in storage.
           */
          public java.lang.String getFingerprint() {
            return fingerprint;
          }

          /**
           * When provided, this fingerprint must match the fingerprint of the trigger in storage.
           */
          public Update setFingerprint(java.lang.String fingerprint) {
            this.fingerprint = fingerprint;
            return this;
          }

          @Override
          public Update set(String parameterName, Object value) {
            return (Update) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Variables collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code TagManager tagmanager = new TagManager(...);}
       *   {@code TagManager.Variables.List request = tagmanager.variables().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Variables variables() {
        return new Variables();
      }

      /**
       * The "variables" collection of methods.
       */
      public class Variables {

        /**
         * Creates a GTM Variable.
         *
         * Create a request for the method "variables.create".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param accountId The GTM Account ID.
         * @param containerId The GTM Container ID.
         * @param content the {@link com.google.api.services.tagmanager.model.Variable}
         * @return the request
         */
        public Create create(java.lang.String accountId, java.lang.String containerId, com.google.api.services.tagmanager.model.Variable content) throws java.io.IOException {
          Create result = new Create(accountId, containerId, content);
          initialize(result);
          return result;
        }

        public class Create extends TagManagerRequest<com.google.api.services.tagmanager.model.Variable> {

          private static final String REST_PATH = "accounts/{accountId}/containers/{containerId}/variables";

          /**
           * Creates a GTM Variable.
           *
           * Create a request for the method "variables.create".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param accountId The GTM Account ID.
           * @param containerId The GTM Container ID.
           * @param content the {@link com.google.api.services.tagmanager.model.Variable}
           * @since 1.13
           */
          protected Create(java.lang.String accountId, java.lang.String containerId, com.google.api.services.tagmanager.model.Variable content) {
            super(TagManager.this, "POST", REST_PATH, content, com.google.api.services.tagmanager.model.Variable.class);
            this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
            this.containerId = com.google.api.client.util.Preconditions.checkNotNull(containerId, "Required parameter containerId must be specified.");
            checkRequiredParameter(content, "content");
            checkRequiredParameter(content.getName(), "Variable.getName()");
            checkRequiredParameter(content, "content");
            checkRequiredParameter(content.getType(), "Variable.getType()");
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUserIp(java.lang.String userIp) {
            return (Create) super.setUserIp(userIp);
          }

          /** The GTM Account ID. */
          @com.google.api.client.util.Key
          private java.lang.String accountId;

          /** The GTM Account ID.
           */
          public java.lang.String getAccountId() {
            return accountId;
          }

          /** The GTM Account ID. */
          public Create setAccountId(java.lang.String accountId) {
            this.accountId = accountId;
            return this;
          }

          /** The GTM Container ID. */
          @com.google.api.client.util.Key
          private java.lang.String containerId;

          /** The GTM Container ID.
           */
          public java.lang.String getContainerId() {
            return containerId;
          }

          /** The GTM Container ID. */
          public Create setContainerId(java.lang.String containerId) {
            this.containerId = containerId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a GTM Variable.
         *
         * Create a request for the method "variables.delete".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param accountId The GTM Account ID.
         * @param containerId The GTM Container ID.
         * @param variableId The GTM Variable ID.
         * @return the request
         */
        public Delete delete(java.lang.String accountId, java.lang.String containerId, java.lang.String variableId) throws java.io.IOException {
          Delete result = new Delete(accountId, containerId, variableId);
          initialize(result);
          return result;
        }

        public class Delete extends TagManagerRequest<Void> {

          private static final String REST_PATH = "accounts/{accountId}/containers/{containerId}/variables/{variableId}";

          /**
           * Deletes a GTM Variable.
           *
           * Create a request for the method "variables.delete".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param accountId The GTM Account ID.
           * @param containerId The GTM Container ID.
           * @param variableId The GTM Variable ID.
           * @since 1.13
           */
          protected Delete(java.lang.String accountId, java.lang.String containerId, java.lang.String variableId) {
            super(TagManager.this, "DELETE", REST_PATH, null, Void.class);
            this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
            this.containerId = com.google.api.client.util.Preconditions.checkNotNull(containerId, "Required parameter containerId must be specified.");
            this.variableId = com.google.api.client.util.Preconditions.checkNotNull(variableId, "Required parameter variableId must be specified.");
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUserIp(java.lang.String userIp) {
            return (Delete) super.setUserIp(userIp);
          }

          /** The GTM Account ID. */
          @com.google.api.client.util.Key
          private java.lang.String accountId;

          /** The GTM Account ID.
           */
          public java.lang.String getAccountId() {
            return accountId;
          }

          /** The GTM Account ID. */
          public Delete setAccountId(java.lang.String accountId) {
            this.accountId = accountId;
            return this;
          }

          /** The GTM Container ID. */
          @com.google.api.client.util.Key
          private java.lang.String containerId;

          /** The GTM Container ID.
           */
          public java.lang.String getContainerId() {
            return containerId;
          }

          /** The GTM Container ID. */
          public Delete setContainerId(java.lang.String containerId) {
            this.containerId = containerId;
            return this;
          }

          /** The GTM Variable ID. */
          @com.google.api.client.util.Key
          private java.lang.String variableId;

          /** The GTM Variable ID.
           */
          public java.lang.String getVariableId() {
            return variableId;
          }

          /** The GTM Variable ID. */
          public Delete setVariableId(java.lang.String variableId) {
            this.variableId = variableId;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a GTM Variable.
         *
         * Create a request for the method "variables.get".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param accountId The GTM Account ID.
         * @param containerId The GTM Container ID.
         * @param variableId The GTM Variable ID.
         * @return the request
         */
        public Get get(java.lang.String accountId, java.lang.String containerId, java.lang.String variableId) throws java.io.IOException {
          Get result = new Get(accountId, containerId, variableId);
          initialize(result);
          return result;
        }

        public class Get extends TagManagerRequest<com.google.api.services.tagmanager.model.Variable> {

          private static final String REST_PATH = "accounts/{accountId}/containers/{containerId}/variables/{variableId}";

          /**
           * Gets a GTM Variable.
           *
           * Create a request for the method "variables.get".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param accountId The GTM Account ID.
           * @param containerId The GTM Container ID.
           * @param variableId The GTM Variable ID.
           * @since 1.13
           */
          protected Get(java.lang.String accountId, java.lang.String containerId, java.lang.String variableId) {
            super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.Variable.class);
            this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
            this.containerId = com.google.api.client.util.Preconditions.checkNotNull(containerId, "Required parameter containerId must be specified.");
            this.variableId = com.google.api.client.util.Preconditions.checkNotNull(variableId, "Required parameter variableId must be specified.");
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUserIp(java.lang.String userIp) {
            return (Get) super.setUserIp(userIp);
          }

          /** The GTM Account ID. */
          @com.google.api.client.util.Key
          private java.lang.String accountId;

          /** The GTM Account ID.
           */
          public java.lang.String getAccountId() {
            return accountId;
          }

          /** The GTM Account ID. */
          public Get setAccountId(java.lang.String accountId) {
            this.accountId = accountId;
            return this;
          }

          /** The GTM Container ID. */
          @com.google.api.client.util.Key
          private java.lang.String containerId;

          /** The GTM Container ID.
           */
          public java.lang.String getContainerId() {
            return containerId;
          }

          /** The GTM Container ID. */
          public Get setContainerId(java.lang.String containerId) {
            this.containerId = containerId;
            return this;
          }

          /** The GTM Variable ID. */
          @com.google.api.client.util.Key
          private java.lang.String variableId;

          /** The GTM Variable ID.
           */
          public java.lang.String getVariableId() {
            return variableId;
          }

          /** The GTM Variable ID. */
          public Get setVariableId(java.lang.String variableId) {
            this.variableId = variableId;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists all GTM Variables of a Container.
         *
         * Create a request for the method "variables.list".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param accountId The GTM Account ID.
         * @param containerId The GTM Container ID.
         * @return the request
         */
        public List list(java.lang.String accountId, java.lang.String containerId) throws java.io.IOException {
          List result = new List(accountId, containerId);
          initialize(result);
          return result;
        }

        public class List extends TagManagerRequest<com.google.api.services.tagmanager.model.ListVariablesResponse> {

          private static final String REST_PATH = "accounts/{accountId}/containers/{containerId}/variables";

          /**
           * Lists all GTM Variables of a Container.
           *
           * Create a request for the method "variables.list".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param accountId The GTM Account ID.
           * @param containerId The GTM Container ID.
           * @since 1.13
           */
          protected List(java.lang.String accountId, java.lang.String containerId) {
            super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.ListVariablesResponse.class);
            this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
            this.containerId = com.google.api.client.util.Preconditions.checkNotNull(containerId, "Required parameter containerId must be specified.");
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUserIp(java.lang.String userIp) {
            return (List) super.setUserIp(userIp);
          }

          /** The GTM Account ID. */
          @com.google.api.client.util.Key
          private java.lang.String accountId;

          /** The GTM Account ID.
           */
          public java.lang.String getAccountId() {
            return accountId;
          }

          /** The GTM Account ID. */
          public List setAccountId(java.lang.String accountId) {
            this.accountId = accountId;
            return this;
          }

          /** The GTM Container ID. */
          @com.google.api.client.util.Key
          private java.lang.String containerId;

          /** The GTM Container ID.
           */
          public java.lang.String getContainerId() {
            return containerId;
          }

          /** The GTM Container ID. */
          public List setContainerId(java.lang.String containerId) {
            this.containerId = containerId;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates a GTM Variable.
         *
         * Create a request for the method "variables.update".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param accountId The GTM Account ID.
         * @param containerId The GTM Container ID.
         * @param variableId The GTM Variable ID.
         * @param content the {@link com.google.api.services.tagmanager.model.Variable}
         * @return the request
         */
        public Update update(java.lang.String accountId, java.lang.String containerId, java.lang.String variableId, com.google.api.services.tagmanager.model.Variable content) throws java.io.IOException {
          Update result = new Update(accountId, containerId, variableId, content);
          initialize(result);
          return result;
        }

        public class Update extends TagManagerRequest<com.google.api.services.tagmanager.model.Variable> {

          private static final String REST_PATH = "accounts/{accountId}/containers/{containerId}/variables/{variableId}";

          /**
           * Updates a GTM Variable.
           *
           * Create a request for the method "variables.update".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
           * <p> {@link
           * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param accountId The GTM Account ID.
           * @param containerId The GTM Container ID.
           * @param variableId The GTM Variable ID.
           * @param content the {@link com.google.api.services.tagmanager.model.Variable}
           * @since 1.13
           */
          protected Update(java.lang.String accountId, java.lang.String containerId, java.lang.String variableId, com.google.api.services.tagmanager.model.Variable content) {
            super(TagManager.this, "PUT", REST_PATH, content, com.google.api.services.tagmanager.model.Variable.class);
            this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
            this.containerId = com.google.api.client.util.Preconditions.checkNotNull(containerId, "Required parameter containerId must be specified.");
            this.variableId = com.google.api.client.util.Preconditions.checkNotNull(variableId, "Required parameter variableId must be specified.");
            checkRequiredParameter(content, "content");
            checkRequiredParameter(content.getName(), "Variable.getName()");
            checkRequiredParameter(content, "content");
            checkRequiredParameter(content.getType(), "Variable.getType()");
          }

          @Override
          public Update setAlt(java.lang.String alt) {
            return (Update) super.setAlt(alt);
          }

          @Override
          public Update setFields(java.lang.String fields) {
            return (Update) super.setFields(fields);
          }

          @Override
          public Update setKey(java.lang.String key) {
            return (Update) super.setKey(key);
          }

          @Override
          public Update setOauthToken(java.lang.String oauthToken) {
            return (Update) super.setOauthToken(oauthToken);
          }

          @Override
          public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Update) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Update setQuotaUser(java.lang.String quotaUser) {
            return (Update) super.setQuotaUser(quotaUser);
          }

          @Override
          public Update setUserIp(java.lang.String userIp) {
            return (Update) super.setUserIp(userIp);
          }

          /** The GTM Account ID. */
          @com.google.api.client.util.Key
          private java.lang.String accountId;

          /** The GTM Account ID.
           */
          public java.lang.String getAccountId() {
            return accountId;
          }

          /** The GTM Account ID. */
          public Update setAccountId(java.lang.String accountId) {
            this.accountId = accountId;
            return this;
          }

          /** The GTM Container ID. */
          @com.google.api.client.util.Key
          private java.lang.String containerId;

          /** The GTM Container ID.
           */
          public java.lang.String getContainerId() {
            return containerId;
          }

          /** The GTM Container ID. */
          public Update setContainerId(java.lang.String containerId) {
            this.containerId = containerId;
            return this;
          }

          /** The GTM Variable ID. */
          @com.google.api.client.util.Key
          private java.lang.String variableId;

          /** The GTM Variable ID.
           */
          public java.lang.String getVariableId() {
            return variableId;
          }

          /** The GTM Variable ID. */
          public Update setVariableId(java.lang.String variableId) {
            this.variableId = variableId;
            return this;
          }

          /**
           * When provided, this fingerprint must match the fingerprint of the variable in storage.
           */
          @com.google.api.client.util.Key
          private java.lang.String fingerprint;

          /** When provided, this fingerprint must match the fingerprint of the variable in storage.
           */
          public java.lang.String getFingerprint() {
            return fingerprint;
          }

          /**
           * When provided, this fingerprint must match the fingerprint of the variable in storage.
           */
          public Update setFingerprint(java.lang.String fingerprint) {
            this.fingerprint = fingerprint;
            return this;
          }

          @Override
          public Update set(String parameterName, Object value) {
            return (Update) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Versions collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code TagManager tagmanager = new TagManager(...);}
       *   {@code TagManager.Versions.List request = tagmanager.versions().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Versions versions() {
        return new Versions();
      }

      /**
       * The "versions" collection of methods.
       */
      public class Versions {

        /**
         * Creates a Container Version.
         *
         * Create a request for the method "versions.create".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param accountId The GTM Account ID.
         * @param containerId The GTM Container ID.
         * @param content the {@link com.google.api.services.tagmanager.model.CreateContainerVersionRequestVersionOptions}
         * @return the request
         */
        public Create create(java.lang.String accountId, java.lang.String containerId, com.google.api.services.tagmanager.model.CreateContainerVersionRequestVersionOptions content) throws java.io.IOException {
          Create result = new Create(accountId, containerId, content);
          initialize(result);
          return result;
        }

        public class Create extends TagManagerRequest<com.google.api.services.tagmanager.model.CreateContainerVersionResponse> {

          private static final String REST_PATH = "accounts/{accountId}/containers/{containerId}/versions";

          /**
           * Creates a Container Version.
           *
           * Create a request for the method "versions.create".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param accountId The GTM Account ID.
           * @param containerId The GTM Container ID.
           * @param content the {@link com.google.api.services.tagmanager.model.CreateContainerVersionRequestVersionOptions}
           * @since 1.13
           */
          protected Create(java.lang.String accountId, java.lang.String containerId, com.google.api.services.tagmanager.model.CreateContainerVersionRequestVersionOptions content) {
            super(TagManager.this, "POST", REST_PATH, content, com.google.api.services.tagmanager.model.CreateContainerVersionResponse.class);
            this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
            this.containerId = com.google.api.client.util.Preconditions.checkNotNull(containerId, "Required parameter containerId must be specified.");
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUserIp(java.lang.String userIp) {
            return (Create) super.setUserIp(userIp);
          }

          /** The GTM Account ID. */
          @com.google.api.client.util.Key
          private java.lang.String accountId;

          /** The GTM Account ID.
           */
          public java.lang.String getAccountId() {
            return accountId;
          }

          /** The GTM Account ID. */
          public Create setAccountId(java.lang.String accountId) {
            this.accountId = accountId;
            return this;
          }

          /** The GTM Container ID. */
          @com.google.api.client.util.Key
          private java.lang.String containerId;

          /** The GTM Container ID.
           */
          public java.lang.String getContainerId() {
            return containerId;
          }

          /** The GTM Container ID. */
          public Create setContainerId(java.lang.String containerId) {
            this.containerId = containerId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a Container Version.
         *
         * Create a request for the method "versions.delete".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param accountId The GTM Account ID.
         * @param containerId The GTM Container ID.
         * @param containerVersionId The GTM Container Version ID.
         * @return the request
         */
        public Delete delete(java.lang.String accountId, java.lang.String containerId, java.lang.String containerVersionId) throws java.io.IOException {
          Delete result = new Delete(accountId, containerId, containerVersionId);
          initialize(result);
          return result;
        }

        public class Delete extends TagManagerRequest<Void> {

          private static final String REST_PATH = "accounts/{accountId}/containers/{containerId}/versions/{containerVersionId}";

          /**
           * Deletes a Container Version.
           *
           * Create a request for the method "versions.delete".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param accountId The GTM Account ID.
           * @param containerId The GTM Container ID.
           * @param containerVersionId The GTM Container Version ID.
           * @since 1.13
           */
          protected Delete(java.lang.String accountId, java.lang.String containerId, java.lang.String containerVersionId) {
            super(TagManager.this, "DELETE", REST_PATH, null, Void.class);
            this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
            this.containerId = com.google.api.client.util.Preconditions.checkNotNull(containerId, "Required parameter containerId must be specified.");
            this.containerVersionId = com.google.api.client.util.Preconditions.checkNotNull(containerVersionId, "Required parameter containerVersionId must be specified.");
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUserIp(java.lang.String userIp) {
            return (Delete) super.setUserIp(userIp);
          }

          /** The GTM Account ID. */
          @com.google.api.client.util.Key
          private java.lang.String accountId;

          /** The GTM Account ID.
           */
          public java.lang.String getAccountId() {
            return accountId;
          }

          /** The GTM Account ID. */
          public Delete setAccountId(java.lang.String accountId) {
            this.accountId = accountId;
            return this;
          }

          /** The GTM Container ID. */
          @com.google.api.client.util.Key
          private java.lang.String containerId;

          /** The GTM Container ID.
           */
          public java.lang.String getContainerId() {
            return containerId;
          }

          /** The GTM Container ID. */
          public Delete setContainerId(java.lang.String containerId) {
            this.containerId = containerId;
            return this;
          }

          /** The GTM Container Version ID. */
          @com.google.api.client.util.Key
          private java.lang.String containerVersionId;

          /** The GTM Container Version ID.
           */
          public java.lang.String getContainerVersionId() {
            return containerVersionId;
          }

          /** The GTM Container Version ID. */
          public Delete setContainerVersionId(java.lang.String containerVersionId) {
            this.containerVersionId = containerVersionId;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a Container Version.
         *
         * Create a request for the method "versions.get".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param accountId The GTM Account ID.
         * @param containerId The GTM Container ID.
         * @param containerVersionId The GTM Container Version ID. Specify published to retrieve the currently published version.
         * @return the request
         */
        public Get get(java.lang.String accountId, java.lang.String containerId, java.lang.String containerVersionId) throws java.io.IOException {
          Get result = new Get(accountId, containerId, containerVersionId);
          initialize(result);
          return result;
        }

        public class Get extends TagManagerRequest<com.google.api.services.tagmanager.model.ContainerVersion> {

          private static final String REST_PATH = "accounts/{accountId}/containers/{containerId}/versions/{containerVersionId}";

          /**
           * Gets a Container Version.
           *
           * Create a request for the method "versions.get".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param accountId The GTM Account ID.
           * @param containerId The GTM Container ID.
           * @param containerVersionId The GTM Container Version ID. Specify published to retrieve the currently published version.
           * @since 1.13
           */
          protected Get(java.lang.String accountId, java.lang.String containerId, java.lang.String containerVersionId) {
            super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.ContainerVersion.class);
            this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
            this.containerId = com.google.api.client.util.Preconditions.checkNotNull(containerId, "Required parameter containerId must be specified.");
            this.containerVersionId = com.google.api.client.util.Preconditions.checkNotNull(containerVersionId, "Required parameter containerVersionId must be specified.");
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUserIp(java.lang.String userIp) {
            return (Get) super.setUserIp(userIp);
          }

          /** The GTM Account ID. */
          @com.google.api.client.util.Key
          private java.lang.String accountId;

          /** The GTM Account ID.
           */
          public java.lang.String getAccountId() {
            return accountId;
          }

          /** The GTM Account ID. */
          public Get setAccountId(java.lang.String accountId) {
            this.accountId = accountId;
            return this;
          }

          /** The GTM Container ID. */
          @com.google.api.client.util.Key
          private java.lang.String containerId;

          /** The GTM Container ID.
           */
          public java.lang.String getContainerId() {
            return containerId;
          }

          /** The GTM Container ID. */
          public Get setContainerId(java.lang.String containerId) {
            this.containerId = containerId;
            return this;
          }

          /**
           * The GTM Container Version ID. Specify published to retrieve the currently published
           * version.
           */
          @com.google.api.client.util.Key
          private java.lang.String containerVersionId;

          /** The GTM Container Version ID. Specify published to retrieve the currently published version.
           */
          public java.lang.String getContainerVersionId() {
            return containerVersionId;
          }

          /**
           * The GTM Container Version ID. Specify published to retrieve the currently published
           * version.
           */
          public Get setContainerVersionId(java.lang.String containerVersionId) {
            this.containerVersionId = containerVersionId;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists all Container Versions of a GTM Container.
         *
         * Create a request for the method "versions.list".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param accountId The GTM Account ID.
         * @param containerId The GTM Container ID.
         * @return the request
         */
        public List list(java.lang.String accountId, java.lang.String containerId) throws java.io.IOException {
          List result = new List(accountId, containerId);
          initialize(result);
          return result;
        }

        public class List extends TagManagerRequest<com.google.api.services.tagmanager.model.ListContainerVersionsResponse> {

          private static final String REST_PATH = "accounts/{accountId}/containers/{containerId}/versions";

          /**
           * Lists all Container Versions of a GTM Container.
           *
           * Create a request for the method "versions.list".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param accountId The GTM Account ID.
           * @param containerId The GTM Container ID.
           * @since 1.13
           */
          protected List(java.lang.String accountId, java.lang.String containerId) {
            super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.ListContainerVersionsResponse.class);
            this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
            this.containerId = com.google.api.client.util.Preconditions.checkNotNull(containerId, "Required parameter containerId must be specified.");
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUserIp(java.lang.String userIp) {
            return (List) super.setUserIp(userIp);
          }

          /** The GTM Account ID. */
          @com.google.api.client.util.Key
          private java.lang.String accountId;

          /** The GTM Account ID.
           */
          public java.lang.String getAccountId() {
            return accountId;
          }

          /** The GTM Account ID. */
          public List setAccountId(java.lang.String accountId) {
            this.accountId = accountId;
            return this;
          }

          /** The GTM Container ID. */
          @com.google.api.client.util.Key
          private java.lang.String containerId;

          /** The GTM Container ID.
           */
          public java.lang.String getContainerId() {
            return containerId;
          }

          /** The GTM Container ID. */
          public List setContainerId(java.lang.String containerId) {
            this.containerId = containerId;
            return this;
          }

          /** Retrieve headers only when true. */
          @com.google.api.client.util.Key
          private java.lang.Boolean headers;

          /** Retrieve headers only when true. [default: false]
           */
          public java.lang.Boolean getHeaders() {
            return headers;
          }

          /** Retrieve headers only when true. */
          public List setHeaders(java.lang.Boolean headers) {
            this.headers = headers;
            return this;
          }

          /**
           * Convenience method that returns only {@link Boolean#TRUE} or {@link Boolean#FALSE}.
           *
           * <p>
           * Boolean properties can have four possible values:
           * {@code null}, {@link com.google.api.client.util.Data#NULL_BOOLEAN}, {@link Boolean#TRUE}
           * or {@link Boolean#FALSE}.
           * </p>
           *
           * <p>
           * This method returns {@link Boolean#TRUE} if the default of the property is {@link Boolean#TRUE}
           * and it is {@code null} or {@link com.google.api.client.util.Data#NULL_BOOLEAN}.
           * {@link Boolean#FALSE} is returned if the default of the property is {@link Boolean#FALSE} and
           * it is {@code null} or {@link com.google.api.client.util.Data#NULL_BOOLEAN}.
           * </p>
           *
           * <p>
           * Retrieve headers only when true.
           * </p>
           */
          public boolean isHeaders() {
            if (headers == null || headers == com.google.api.client.util.Data.NULL_BOOLEAN) {
              return false;
            }
            return headers;
          }

          /** Also retrieve deleted (archived) versions when true. */
          @com.google.api.client.util.Key
          private java.lang.Boolean includeDeleted;

          /** Also retrieve deleted (archived) versions when true. [default: false]
           */
          public java.lang.Boolean getIncludeDeleted() {
            return includeDeleted;
          }

          /** Also retrieve deleted (archived) versions when true. */
          public List setIncludeDeleted(java.lang.Boolean includeDeleted) {
            this.includeDeleted = includeDeleted;
            return this;
          }

          /**
           * Convenience method that returns only {@link Boolean#TRUE} or {@link Boolean#FALSE}.
           *
           * <p>
           * Boolean properties can have four possible values:
           * {@code null}, {@link com.google.api.client.util.Data#NULL_BOOLEAN}, {@link Boolean#TRUE}
           * or {@link Boolean#FALSE}.
           * </p>
           *
           * <p>
           * This method returns {@link Boolean#TRUE} if the default of the property is {@link Boolean#TRUE}
           * and it is {@code null} or {@link com.google.api.client.util.Data#NULL_BOOLEAN}.
           * {@link Boolean#FALSE} is returned if the default of the property is {@link Boolean#FALSE} and
           * it is {@code null} or {@link com.google.api.client.util.Data#NULL_BOOLEAN}.
           * </p>
           *
           * <p>
           * Also retrieve deleted (archived) versions when true.
           * </p>
           */
          public boolean isIncludeDeleted() {
            if (includeDeleted == null || includeDeleted == com.google.api.client.util.Data.NULL_BOOLEAN) {
              return false;
            }
            return includeDeleted;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Publishes a Container Version.
         *
         * Create a request for the method "versions.publish".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Publish#execute()} method to invoke the remote operation.
         *
         * @param accountId The GTM Account ID.
         * @param containerId The GTM Container ID.
         * @param containerVersionId The GTM Container Version ID.
         * @return the request
         */
        public Publish publish(java.lang.String accountId, java.lang.String containerId, java.lang.String containerVersionId) throws java.io.IOException {
          Publish result = new Publish(accountId, containerId, containerVersionId);
          initialize(result);
          return result;
        }

        public class Publish extends TagManagerRequest<com.google.api.services.tagmanager.model.PublishContainerVersionResponse> {

          private static final String REST_PATH = "accounts/{accountId}/containers/{containerId}/versions/{containerVersionId}/publish";

          /**
           * Publishes a Container Version.
           *
           * Create a request for the method "versions.publish".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Publish#execute()} method to invoke the remote operation.
           * <p> {@link
           * Publish#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param accountId The GTM Account ID.
           * @param containerId The GTM Container ID.
           * @param containerVersionId The GTM Container Version ID.
           * @since 1.13
           */
          protected Publish(java.lang.String accountId, java.lang.String containerId, java.lang.String containerVersionId) {
            super(TagManager.this, "POST", REST_PATH, null, com.google.api.services.tagmanager.model.PublishContainerVersionResponse.class);
            this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
            this.containerId = com.google.api.client.util.Preconditions.checkNotNull(containerId, "Required parameter containerId must be specified.");
            this.containerVersionId = com.google.api.client.util.Preconditions.checkNotNull(containerVersionId, "Required parameter containerVersionId must be specified.");
          }

          @Override
          public Publish setAlt(java.lang.String alt) {
            return (Publish) super.setAlt(alt);
          }

          @Override
          public Publish setFields(java.lang.String fields) {
            return (Publish) super.setFields(fields);
          }

          @Override
          public Publish setKey(java.lang.String key) {
            return (Publish) super.setKey(key);
          }

          @Override
          public Publish setOauthToken(java.lang.String oauthToken) {
            return (Publish) super.setOauthToken(oauthToken);
          }

          @Override
          public Publish setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Publish) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Publish setQuotaUser(java.lang.String quotaUser) {
            return (Publish) super.setQuotaUser(quotaUser);
          }

          @Override
          public Publish setUserIp(java.lang.String userIp) {
            return (Publish) super.setUserIp(userIp);
          }

          /** The GTM Account ID. */
          @com.google.api.client.util.Key
          private java.lang.String accountId;

          /** The GTM Account ID.
           */
          public java.lang.String getAccountId() {
            return accountId;
          }

          /** The GTM Account ID. */
          public Publish setAccountId(java.lang.String accountId) {
            this.accountId = accountId;
            return this;
          }

          /** The GTM Container ID. */
          @com.google.api.client.util.Key
          private java.lang.String containerId;

          /** The GTM Container ID.
           */
          public java.lang.String getContainerId() {
            return containerId;
          }

          /** The GTM Container ID. */
          public Publish setContainerId(java.lang.String containerId) {
            this.containerId = containerId;
            return this;
          }

          /** The GTM Container Version ID. */
          @com.google.api.client.util.Key
          private java.lang.String containerVersionId;

          /** The GTM Container Version ID.
           */
          public java.lang.String getContainerVersionId() {
            return containerVersionId;
          }

          /** The GTM Container Version ID. */
          public Publish setContainerVersionId(java.lang.String containerVersionId) {
            this.containerVersionId = containerVersionId;
            return this;
          }

          /**
           * When provided, this fingerprint must match the fingerprint of the container version in
           * storage.
           */
          @com.google.api.client.util.Key
          private java.lang.String fingerprint;

          /** When provided, this fingerprint must match the fingerprint of the container version in storage.
           */
          public java.lang.String getFingerprint() {
            return fingerprint;
          }

          /**
           * When provided, this fingerprint must match the fingerprint of the container version in
           * storage.
           */
          public Publish setFingerprint(java.lang.String fingerprint) {
            this.fingerprint = fingerprint;
            return this;
          }

          @Override
          public Publish set(String parameterName, Object value) {
            return (Publish) super.set(parameterName, value);
          }
        }
        /**
         * Restores a Container Version. This will overwrite the container's current configuration
         * (including its variables, triggers and tags). The operation will not have any effect on the
         * version that is being served (i.e. the published version).
         *
         * Create a request for the method "versions.restore".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Restore#execute()} method to invoke the remote operation.
         *
         * @param accountId The GTM Account ID.
         * @param containerId The GTM Container ID.
         * @param containerVersionId The GTM Container Version ID.
         * @return the request
         */
        public Restore restore(java.lang.String accountId, java.lang.String containerId, java.lang.String containerVersionId) throws java.io.IOException {
          Restore result = new Restore(accountId, containerId, containerVersionId);
          initialize(result);
          return result;
        }

        public class Restore extends TagManagerRequest<com.google.api.services.tagmanager.model.ContainerVersion> {

          private static final String REST_PATH = "accounts/{accountId}/containers/{containerId}/versions/{containerVersionId}/restore";

          /**
           * Restores a Container Version. This will overwrite the container's current configuration
           * (including its variables, triggers and tags). The operation will not have any effect on the
           * version that is being served (i.e. the published version).
           *
           * Create a request for the method "versions.restore".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Restore#execute()} method to invoke the remote operation.
           * <p> {@link
           * Restore#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param accountId The GTM Account ID.
           * @param containerId The GTM Container ID.
           * @param containerVersionId The GTM Container Version ID.
           * @since 1.13
           */
          protected Restore(java.lang.String accountId, java.lang.String containerId, java.lang.String containerVersionId) {
            super(TagManager.this, "POST", REST_PATH, null, com.google.api.services.tagmanager.model.ContainerVersion.class);
            this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
            this.containerId = com.google.api.client.util.Preconditions.checkNotNull(containerId, "Required parameter containerId must be specified.");
            this.containerVersionId = com.google.api.client.util.Preconditions.checkNotNull(containerVersionId, "Required parameter containerVersionId must be specified.");
          }

          @Override
          public Restore setAlt(java.lang.String alt) {
            return (Restore) super.setAlt(alt);
          }

          @Override
          public Restore setFields(java.lang.String fields) {
            return (Restore) super.setFields(fields);
          }

          @Override
          public Restore setKey(java.lang.String key) {
            return (Restore) super.setKey(key);
          }

          @Override
          public Restore setOauthToken(java.lang.String oauthToken) {
            return (Restore) super.setOauthToken(oauthToken);
          }

          @Override
          public Restore setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Restore) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Restore setQuotaUser(java.lang.String quotaUser) {
            return (Restore) super.setQuotaUser(quotaUser);
          }

          @Override
          public Restore setUserIp(java.lang.String userIp) {
            return (Restore) super.setUserIp(userIp);
          }

          /** The GTM Account ID. */
          @com.google.api.client.util.Key
          private java.lang.String accountId;

          /** The GTM Account ID.
           */
          public java.lang.String getAccountId() {
            return accountId;
          }

          /** The GTM Account ID. */
          public Restore setAccountId(java.lang.String accountId) {
            this.accountId = accountId;
            return this;
          }

          /** The GTM Container ID. */
          @com.google.api.client.util.Key
          private java.lang.String containerId;

          /** The GTM Container ID.
           */
          public java.lang.String getContainerId() {
            return containerId;
          }

          /** The GTM Container ID. */
          public Restore setContainerId(java.lang.String containerId) {
            this.containerId = containerId;
            return this;
          }

          /** The GTM Container Version ID. */
          @com.google.api.client.util.Key
          private java.lang.String containerVersionId;

          /** The GTM Container Version ID.
           */
          public java.lang.String getContainerVersionId() {
            return containerVersionId;
          }

          /** The GTM Container Version ID. */
          public Restore setContainerVersionId(java.lang.String containerVersionId) {
            this.containerVersionId = containerVersionId;
            return this;
          }

          @Override
          public Restore set(String parameterName, Object value) {
            return (Restore) super.set(parameterName, value);
          }
        }
        /**
         * Undeletes a Container Version.
         *
         * Create a request for the method "versions.undelete".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Undelete#execute()} method to invoke the remote operation.
         *
         * @param accountId The GTM Account ID.
         * @param containerId The GTM Container ID.
         * @param containerVersionId The GTM Container Version ID.
         * @return the request
         */
        public Undelete undelete(java.lang.String accountId, java.lang.String containerId, java.lang.String containerVersionId) throws java.io.IOException {
          Undelete result = new Undelete(accountId, containerId, containerVersionId);
          initialize(result);
          return result;
        }

        public class Undelete extends TagManagerRequest<com.google.api.services.tagmanager.model.ContainerVersion> {

          private static final String REST_PATH = "accounts/{accountId}/containers/{containerId}/versions/{containerVersionId}/undelete";

          /**
           * Undeletes a Container Version.
           *
           * Create a request for the method "versions.undelete".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Undelete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Undelete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param accountId The GTM Account ID.
           * @param containerId The GTM Container ID.
           * @param containerVersionId The GTM Container Version ID.
           * @since 1.13
           */
          protected Undelete(java.lang.String accountId, java.lang.String containerId, java.lang.String containerVersionId) {
            super(TagManager.this, "POST", REST_PATH, null, com.google.api.services.tagmanager.model.ContainerVersion.class);
            this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
            this.containerId = com.google.api.client.util.Preconditions.checkNotNull(containerId, "Required parameter containerId must be specified.");
            this.containerVersionId = com.google.api.client.util.Preconditions.checkNotNull(containerVersionId, "Required parameter containerVersionId must be specified.");
          }

          @Override
          public Undelete setAlt(java.lang.String alt) {
            return (Undelete) super.setAlt(alt);
          }

          @Override
          public Undelete setFields(java.lang.String fields) {
            return (Undelete) super.setFields(fields);
          }

          @Override
          public Undelete setKey(java.lang.String key) {
            return (Undelete) super.setKey(key);
          }

          @Override
          public Undelete setOauthToken(java.lang.String oauthToken) {
            return (Undelete) super.setOauthToken(oauthToken);
          }

          @Override
          public Undelete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Undelete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Undelete setQuotaUser(java.lang.String quotaUser) {
            return (Undelete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Undelete setUserIp(java.lang.String userIp) {
            return (Undelete) super.setUserIp(userIp);
          }

          /** The GTM Account ID. */
          @com.google.api.client.util.Key
          private java.lang.String accountId;

          /** The GTM Account ID.
           */
          public java.lang.String getAccountId() {
            return accountId;
          }

          /** The GTM Account ID. */
          public Undelete setAccountId(java.lang.String accountId) {
            this.accountId = accountId;
            return this;
          }

          /** The GTM Container ID. */
          @com.google.api.client.util.Key
          private java.lang.String containerId;

          /** The GTM Container ID.
           */
          public java.lang.String getContainerId() {
            return containerId;
          }

          /** The GTM Container ID. */
          public Undelete setContainerId(java.lang.String containerId) {
            this.containerId = containerId;
            return this;
          }

          /** The GTM Container Version ID. */
          @com.google.api.client.util.Key
          private java.lang.String containerVersionId;

          /** The GTM Container Version ID.
           */
          public java.lang.String getContainerVersionId() {
            return containerVersionId;
          }

          /** The GTM Container Version ID. */
          public Undelete setContainerVersionId(java.lang.String containerVersionId) {
            this.containerVersionId = containerVersionId;
            return this;
          }

          @Override
          public Undelete set(String parameterName, Object value) {
            return (Undelete) super.set(parameterName, value);
          }
        }
        /**
         * Updates a Container Version.
         *
         * Create a request for the method "versions.update".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param accountId The GTM Account ID.
         * @param containerId The GTM Container ID.
         * @param containerVersionId The GTM Container Version ID.
         * @param content the {@link com.google.api.services.tagmanager.model.ContainerVersion}
         * @return the request
         */
        public Update update(java.lang.String accountId, java.lang.String containerId, java.lang.String containerVersionId, com.google.api.services.tagmanager.model.ContainerVersion content) throws java.io.IOException {
          Update result = new Update(accountId, containerId, containerVersionId, content);
          initialize(result);
          return result;
        }

        public class Update extends TagManagerRequest<com.google.api.services.tagmanager.model.ContainerVersion> {

          private static final String REST_PATH = "accounts/{accountId}/containers/{containerId}/versions/{containerVersionId}";

          /**
           * Updates a Container Version.
           *
           * Create a request for the method "versions.update".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
           * <p> {@link
           * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param accountId The GTM Account ID.
           * @param containerId The GTM Container ID.
           * @param containerVersionId The GTM Container Version ID.
           * @param content the {@link com.google.api.services.tagmanager.model.ContainerVersion}
           * @since 1.13
           */
          protected Update(java.lang.String accountId, java.lang.String containerId, java.lang.String containerVersionId, com.google.api.services.tagmanager.model.ContainerVersion content) {
            super(TagManager.this, "PUT", REST_PATH, content, com.google.api.services.tagmanager.model.ContainerVersion.class);
            this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
            this.containerId = com.google.api.client.util.Preconditions.checkNotNull(containerId, "Required parameter containerId must be specified.");
            this.containerVersionId = com.google.api.client.util.Preconditions.checkNotNull(containerVersionId, "Required parameter containerVersionId must be specified.");
          }

          @Override
          public Update setAlt(java.lang.String alt) {
            return (Update) super.setAlt(alt);
          }

          @Override
          public Update setFields(java.lang.String fields) {
            return (Update) super.setFields(fields);
          }

          @Override
          public Update setKey(java.lang.String key) {
            return (Update) super.setKey(key);
          }

          @Override
          public Update setOauthToken(java.lang.String oauthToken) {
            return (Update) super.setOauthToken(oauthToken);
          }

          @Override
          public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Update) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Update setQuotaUser(java.lang.String quotaUser) {
            return (Update) super.setQuotaUser(quotaUser);
          }

          @Override
          public Update setUserIp(java.lang.String userIp) {
            return (Update) super.setUserIp(userIp);
          }

          /** The GTM Account ID. */
          @com.google.api.client.util.Key
          private java.lang.String accountId;

          /** The GTM Account ID.
           */
          public java.lang.String getAccountId() {
            return accountId;
          }

          /** The GTM Account ID. */
          public Update setAccountId(java.lang.String accountId) {
            this.accountId = accountId;
            return this;
          }

          /** The GTM Container ID. */
          @com.google.api.client.util.Key
          private java.lang.String containerId;

          /** The GTM Container ID.
           */
          public java.lang.String getContainerId() {
            return containerId;
          }

          /** The GTM Container ID. */
          public Update setContainerId(java.lang.String containerId) {
            this.containerId = containerId;
            return this;
          }

          /** The GTM Container Version ID. */
          @com.google.api.client.util.Key
          private java.lang.String containerVersionId;

          /** The GTM Container Version ID.
           */
          public java.lang.String getContainerVersionId() {
            return containerVersionId;
          }

          /** The GTM Container Version ID. */
          public Update setContainerVersionId(java.lang.String containerVersionId) {
            this.containerVersionId = containerVersionId;
            return this;
          }

          /**
           * When provided, this fingerprint must match the fingerprint of the container version in
           * storage.
           */
          @com.google.api.client.util.Key
          private java.lang.String fingerprint;

          /** When provided, this fingerprint must match the fingerprint of the container version in storage.
           */
          public java.lang.String getFingerprint() {
            return fingerprint;
          }

          /**
           * When provided, this fingerprint must match the fingerprint of the container version in
           * storage.
           */
          public Update setFingerprint(java.lang.String fingerprint) {
            this.fingerprint = fingerprint;
            return this;
          }

          @Override
          public Update set(String parameterName, Object value) {
            return (Update) super.set(parameterName, value);
          }
        }

      }
    }
    /**
     * An accessor for creating requests from the Permissions collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code TagManager tagmanager = new TagManager(...);}
     *   {@code TagManager.Permissions.List request = tagmanager.permissions().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Permissions permissions() {
      return new Permissions();
    }

    /**
     * The "permissions" collection of methods.
     */
    public class Permissions {

      /**
       * Creates a user's Account & Container Permissions.
       *
       * Create a request for the method "permissions.create".
       *
       * This request holds the parameters needed by the tagmanager server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param accountId The GTM Account ID.
       * @param content the {@link com.google.api.services.tagmanager.model.UserAccess}
       * @return the request
       */
      public Create create(java.lang.String accountId, com.google.api.services.tagmanager.model.UserAccess content) throws java.io.IOException {
        Create result = new Create(accountId, content);
        initialize(result);
        return result;
      }

      public class Create extends TagManagerRequest<com.google.api.services.tagmanager.model.UserAccess> {

        private static final String REST_PATH = "accounts/{accountId}/permissions";

        /**
         * Creates a user's Account & Container Permissions.
         *
         * Create a request for the method "permissions.create".
         *
         * This request holds the parameters needed by the the tagmanager server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param accountId The GTM Account ID.
         * @param content the {@link com.google.api.services.tagmanager.model.UserAccess}
         * @since 1.13
         */
        protected Create(java.lang.String accountId, com.google.api.services.tagmanager.model.UserAccess content) {
          super(TagManager.this, "POST", REST_PATH, content, com.google.api.services.tagmanager.model.UserAccess.class);
          this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
          checkRequiredParameter(content, "content");
          checkRequiredParameter(content.getEmailAddress(), "UserAccess.getEmailAddress()");
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUserIp(java.lang.String userIp) {
          return (Create) super.setUserIp(userIp);
        }

        /** The GTM Account ID. */
        @com.google.api.client.util.Key
        private java.lang.String accountId;

        /** The GTM Account ID.
         */
        public java.lang.String getAccountId() {
          return accountId;
        }

        /** The GTM Account ID. */
        public Create setAccountId(java.lang.String accountId) {
          this.accountId = accountId;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Removes a user from the account, revoking access to it and all of its containers.
       *
       * Create a request for the method "permissions.delete".
       *
       * This request holds the parameters needed by the tagmanager server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param accountId The GTM Account ID.
       * @param permissionId The GTM User ID.
       * @return the request
       */
      public Delete delete(java.lang.String accountId, java.lang.String permissionId) throws java.io.IOException {
        Delete result = new Delete(accountId, permissionId);
        initialize(result);
        return result;
      }

      public class Delete extends TagManagerRequest<Void> {

        private static final String REST_PATH = "accounts/{accountId}/permissions/{permissionId}";

        /**
         * Removes a user from the account, revoking access to it and all of its containers.
         *
         * Create a request for the method "permissions.delete".
         *
         * This request holds the parameters needed by the the tagmanager server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param accountId The GTM Account ID.
         * @param permissionId The GTM User ID.
         * @since 1.13
         */
        protected Delete(java.lang.String accountId, java.lang.String permissionId) {
          super(TagManager.this, "DELETE", REST_PATH, null, Void.class);
          this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
          this.permissionId = com.google.api.client.util.Preconditions.checkNotNull(permissionId, "Required parameter permissionId must be specified.");
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUserIp(java.lang.String userIp) {
          return (Delete) super.setUserIp(userIp);
        }

        /** The GTM Account ID. */
        @com.google.api.client.util.Key
        private java.lang.String accountId;

        /** The GTM Account ID.
         */
        public java.lang.String getAccountId() {
          return accountId;
        }

        /** The GTM Account ID. */
        public Delete setAccountId(java.lang.String accountId) {
          this.accountId = accountId;
          return this;
        }

        /** The GTM User ID. */
        @com.google.api.client.util.Key
        private java.lang.String permissionId;

        /** The GTM User ID.
         */
        public java.lang.String getPermissionId() {
          return permissionId;
        }

        /** The GTM User ID. */
        public Delete setPermissionId(java.lang.String permissionId) {
          this.permissionId = permissionId;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets a user's Account & Container Permissions.
       *
       * Create a request for the method "permissions.get".
       *
       * This request holds the parameters needed by the tagmanager server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param accountId The GTM Account ID.
       * @param permissionId The GTM User ID.
       * @return the request
       */
      public Get get(java.lang.String accountId, java.lang.String permissionId) throws java.io.IOException {
        Get result = new Get(accountId, permissionId);
        initialize(result);
        return result;
      }

      public class Get extends TagManagerRequest<com.google.api.services.tagmanager.model.UserAccess> {

        private static final String REST_PATH = "accounts/{accountId}/permissions/{permissionId}";

        /**
         * Gets a user's Account & Container Permissions.
         *
         * Create a request for the method "permissions.get".
         *
         * This request holds the parameters needed by the the tagmanager server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param accountId The GTM Account ID.
         * @param permissionId The GTM User ID.
         * @since 1.13
         */
        protected Get(java.lang.String accountId, java.lang.String permissionId) {
          super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.UserAccess.class);
          this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
          this.permissionId = com.google.api.client.util.Preconditions.checkNotNull(permissionId, "Required parameter permissionId must be specified.");
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUserIp(java.lang.String userIp) {
          return (Get) super.setUserIp(userIp);
        }

        /** The GTM Account ID. */
        @com.google.api.client.util.Key
        private java.lang.String accountId;

        /** The GTM Account ID.
         */
        public java.lang.String getAccountId() {
          return accountId;
        }

        /** The GTM Account ID. */
        public Get setAccountId(java.lang.String accountId) {
          this.accountId = accountId;
          return this;
        }

        /** The GTM User ID. */
        @com.google.api.client.util.Key
        private java.lang.String permissionId;

        /** The GTM User ID.
         */
        public java.lang.String getPermissionId() {
          return permissionId;
        }

        /** The GTM User ID. */
        public Get setPermissionId(java.lang.String permissionId) {
          this.permissionId = permissionId;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * List all users that have access to the account along with Account and Container Permissions
       * granted to each of them.
       *
       * Create a request for the method "permissions.list".
       *
       * This request holds the parameters needed by the tagmanager server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param accountId The GTM Account ID. @required tagmanager.accounts.permissions.list
       * @return the request
       */
      public List list(java.lang.String accountId) throws java.io.IOException {
        List result = new List(accountId);
        initialize(result);
        return result;
      }

      public class List extends TagManagerRequest<com.google.api.services.tagmanager.model.ListAccountUsersResponse> {

        private static final String REST_PATH = "accounts/{accountId}/permissions";

        /**
         * List all users that have access to the account along with Account and Container Permissions
         * granted to each of them.
         *
         * Create a request for the method "permissions.list".
         *
         * This request holds the parameters needed by the the tagmanager server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param accountId The GTM Account ID. @required tagmanager.accounts.permissions.list
         * @since 1.13
         */
        protected List(java.lang.String accountId) {
          super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.ListAccountUsersResponse.class);
          this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUserIp(java.lang.String userIp) {
          return (List) super.setUserIp(userIp);
        }

        /** The GTM Account ID. @required tagmanager.accounts.permissions.list */
        @com.google.api.client.util.Key
        private java.lang.String accountId;

        /** The GTM Account ID. @required tagmanager.accounts.permissions.list
         */
        public java.lang.String getAccountId() {
          return accountId;
        }

        /** The GTM Account ID. @required tagmanager.accounts.permissions.list */
        public List setAccountId(java.lang.String accountId) {
          this.accountId = accountId;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a user's Account & Container Permissions.
       *
       * Create a request for the method "permissions.update".
       *
       * This request holds the parameters needed by the tagmanager server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation.
       *
       * @param accountId The GTM Account ID.
       * @param permissionId The GTM User ID.
       * @param content the {@link com.google.api.services.tagmanager.model.UserAccess}
       * @return the request
       */
      public Update update(java.lang.String accountId, java.lang.String permissionId, com.google.api.services.tagmanager.model.UserAccess content) throws java.io.IOException {
        Update result = new Update(accountId, permissionId, content);
        initialize(result);
        return result;
      }

      public class Update extends TagManagerRequest<com.google.api.services.tagmanager.model.UserAccess> {

        private static final String REST_PATH = "accounts/{accountId}/permissions/{permissionId}";

        /**
         * Updates a user's Account & Container Permissions.
         *
         * Create a request for the method "permissions.update".
         *
         * This request holds the parameters needed by the the tagmanager server.  After setting any
         * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
         * <p> {@link
         * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param accountId The GTM Account ID.
         * @param permissionId The GTM User ID.
         * @param content the {@link com.google.api.services.tagmanager.model.UserAccess}
         * @since 1.13
         */
        protected Update(java.lang.String accountId, java.lang.String permissionId, com.google.api.services.tagmanager.model.UserAccess content) {
          super(TagManager.this, "PUT", REST_PATH, content, com.google.api.services.tagmanager.model.UserAccess.class);
          this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
          this.permissionId = com.google.api.client.util.Preconditions.checkNotNull(permissionId, "Required parameter permissionId must be specified.");
        }

        @Override
        public Update setAlt(java.lang.String alt) {
          return (Update) super.setAlt(alt);
        }

        @Override
        public Update setFields(java.lang.String fields) {
          return (Update) super.setFields(fields);
        }

        @Override
        public Update setKey(java.lang.String key) {
          return (Update) super.setKey(key);
        }

        @Override
        public Update setOauthToken(java.lang.String oauthToken) {
          return (Update) super.setOauthToken(oauthToken);
        }

        @Override
        public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Update) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Update setQuotaUser(java.lang.String quotaUser) {
          return (Update) super.setQuotaUser(quotaUser);
        }

        @Override
        public Update setUserIp(java.lang.String userIp) {
          return (Update) super.setUserIp(userIp);
        }

        /** The GTM Account ID. */
        @com.google.api.client.util.Key
        private java.lang.String accountId;

        /** The GTM Account ID.
         */
        public java.lang.String getAccountId() {
          return accountId;
        }

        /** The GTM Account ID. */
        public Update setAccountId(java.lang.String accountId) {
          this.accountId = accountId;
          return this;
        }

        /** The GTM User ID. */
        @com.google.api.client.util.Key
        private java.lang.String permissionId;

        /** The GTM User ID.
         */
        public java.lang.String getPermissionId() {
          return permissionId;
        }

        /** The GTM User ID. */
        public Update setPermissionId(java.lang.String permissionId) {
          this.permissionId = permissionId;
          return this;
        }

        @Override
        public Update set(String parameterName, Object value) {
          return (Update) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * Builder for {@link TagManager}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link TagManager}. */
    @Override
    public TagManager build() {
      return new TagManager(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link TagManagerRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setTagManagerRequestInitializer(
        TagManagerRequestInitializer tagmanagerRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(tagmanagerRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
