/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.redis.v1beta1.model;

/**
 * Cross cluster replication config.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Cloud Memorystore for Redis API. For a
 * detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class CrossClusterReplicationConfig extends com.google.api.client.json.GenericJson {

  /**
   * The role of the cluster in cross cluster replication.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String clusterRole;

  /**
   * Output only. An output only view of all the member clusters participating in the cross cluster
   * replication. This view will be provided by every member cluster irrespective of its cluster
   * role(primary or secondary). A primary cluster can provide information about all the secondary
   * clusters replicating from it. However, a secondary cluster only knows about the primary cluster
   * from which it is replicating. However, for scenarios, where the primary cluster is
   * unavailable(e.g. regional outage), a GetCluster request can be sent to any other member cluster
   * and this field will list all the member clusters participating in cross cluster replication.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Membership membership;

  /**
   * Details of the primary cluster that is used as the replication source for this secondary
   * cluster. This field is only set for a secondary cluster.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private RemoteCluster primaryCluster;

  /**
   * List of secondary clusters that are replicating from this primary cluster. This field is only
   * set for a primary cluster.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<RemoteCluster> secondaryClusters;

  /**
   * Output only. The last time cross cluster replication config was updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * The role of the cluster in cross cluster replication.
   * @return value or {@code null} for none
   */
  public java.lang.String getClusterRole() {
    return clusterRole;
  }

  /**
   * The role of the cluster in cross cluster replication.
   * @param clusterRole clusterRole or {@code null} for none
   */
  public CrossClusterReplicationConfig setClusterRole(java.lang.String clusterRole) {
    this.clusterRole = clusterRole;
    return this;
  }

  /**
   * Output only. An output only view of all the member clusters participating in the cross cluster
   * replication. This view will be provided by every member cluster irrespective of its cluster
   * role(primary or secondary). A primary cluster can provide information about all the secondary
   * clusters replicating from it. However, a secondary cluster only knows about the primary cluster
   * from which it is replicating. However, for scenarios, where the primary cluster is
   * unavailable(e.g. regional outage), a GetCluster request can be sent to any other member cluster
   * and this field will list all the member clusters participating in cross cluster replication.
   * @return value or {@code null} for none
   */
  public Membership getMembership() {
    return membership;
  }

  /**
   * Output only. An output only view of all the member clusters participating in the cross cluster
   * replication. This view will be provided by every member cluster irrespective of its cluster
   * role(primary or secondary). A primary cluster can provide information about all the secondary
   * clusters replicating from it. However, a secondary cluster only knows about the primary cluster
   * from which it is replicating. However, for scenarios, where the primary cluster is
   * unavailable(e.g. regional outage), a GetCluster request can be sent to any other member cluster
   * and this field will list all the member clusters participating in cross cluster replication.
   * @param membership membership or {@code null} for none
   */
  public CrossClusterReplicationConfig setMembership(Membership membership) {
    this.membership = membership;
    return this;
  }

  /**
   * Details of the primary cluster that is used as the replication source for this secondary
   * cluster. This field is only set for a secondary cluster.
   * @return value or {@code null} for none
   */
  public RemoteCluster getPrimaryCluster() {
    return primaryCluster;
  }

  /**
   * Details of the primary cluster that is used as the replication source for this secondary
   * cluster. This field is only set for a secondary cluster.
   * @param primaryCluster primaryCluster or {@code null} for none
   */
  public CrossClusterReplicationConfig setPrimaryCluster(RemoteCluster primaryCluster) {
    this.primaryCluster = primaryCluster;
    return this;
  }

  /**
   * List of secondary clusters that are replicating from this primary cluster. This field is only
   * set for a primary cluster.
   * @return value or {@code null} for none
   */
  public java.util.List<RemoteCluster> getSecondaryClusters() {
    return secondaryClusters;
  }

  /**
   * List of secondary clusters that are replicating from this primary cluster. This field is only
   * set for a primary cluster.
   * @param secondaryClusters secondaryClusters or {@code null} for none
   */
  public CrossClusterReplicationConfig setSecondaryClusters(java.util.List<RemoteCluster> secondaryClusters) {
    this.secondaryClusters = secondaryClusters;
    return this;
  }

  /**
   * Output only. The last time cross cluster replication config was updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. The last time cross cluster replication config was updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public CrossClusterReplicationConfig setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public CrossClusterReplicationConfig set(String fieldName, Object value) {
    return (CrossClusterReplicationConfig) super.set(fieldName, value);
  }

  @Override
  public CrossClusterReplicationConfig clone() {
    return (CrossClusterReplicationConfig) super.clone();
  }

}
