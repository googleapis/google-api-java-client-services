/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.netapp.v1beta1.model;

/**
 * EstablishVolumePeeringRequest establishes cluster and svm peerings between the source and
 * destination clusters.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the NetApp API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class EstablishVolumePeeringRequest extends com.google.api.client.json.GenericJson {

  /**
   * Required. Name of the user's local source cluster to be peered with the destination cluster.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String peerClusterName;

  /**
   * Optional. List of IPv4 ip addresses to be used for peering.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> peerIpAddresses;

  /**
   * Required. Name of the user's local source vserver svm to be peered with the destination vserver
   * svm.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String peerSvmName;

  /**
   * Required. Name of the user's local source volume to be peered with the destination volume.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String peerVolumeName;

  /**
   * Required. Name of the user's local source cluster to be peered with the destination cluster.
   * @return value or {@code null} for none
   */
  public java.lang.String getPeerClusterName() {
    return peerClusterName;
  }

  /**
   * Required. Name of the user's local source cluster to be peered with the destination cluster.
   * @param peerClusterName peerClusterName or {@code null} for none
   */
  public EstablishVolumePeeringRequest setPeerClusterName(java.lang.String peerClusterName) {
    this.peerClusterName = peerClusterName;
    return this;
  }

  /**
   * Optional. List of IPv4 ip addresses to be used for peering.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getPeerIpAddresses() {
    return peerIpAddresses;
  }

  /**
   * Optional. List of IPv4 ip addresses to be used for peering.
   * @param peerIpAddresses peerIpAddresses or {@code null} for none
   */
  public EstablishVolumePeeringRequest setPeerIpAddresses(java.util.List<java.lang.String> peerIpAddresses) {
    this.peerIpAddresses = peerIpAddresses;
    return this;
  }

  /**
   * Required. Name of the user's local source vserver svm to be peered with the destination vserver
   * svm.
   * @return value or {@code null} for none
   */
  public java.lang.String getPeerSvmName() {
    return peerSvmName;
  }

  /**
   * Required. Name of the user's local source vserver svm to be peered with the destination vserver
   * svm.
   * @param peerSvmName peerSvmName or {@code null} for none
   */
  public EstablishVolumePeeringRequest setPeerSvmName(java.lang.String peerSvmName) {
    this.peerSvmName = peerSvmName;
    return this;
  }

  /**
   * Required. Name of the user's local source volume to be peered with the destination volume.
   * @return value or {@code null} for none
   */
  public java.lang.String getPeerVolumeName() {
    return peerVolumeName;
  }

  /**
   * Required. Name of the user's local source volume to be peered with the destination volume.
   * @param peerVolumeName peerVolumeName or {@code null} for none
   */
  public EstablishVolumePeeringRequest setPeerVolumeName(java.lang.String peerVolumeName) {
    this.peerVolumeName = peerVolumeName;
    return this;
  }

  @Override
  public EstablishVolumePeeringRequest set(String fieldName, Object value) {
    return (EstablishVolumePeeringRequest) super.set(fieldName, value);
  }

  @Override
  public EstablishVolumePeeringRequest clone() {
    return (EstablishVolumePeeringRequest) super.clone();
  }

}
