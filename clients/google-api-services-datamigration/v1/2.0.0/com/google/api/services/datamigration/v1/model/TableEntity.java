/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.datamigration.v1.model;

/**
 * Table's parent is a schema.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Database Migration API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class TableEntity extends com.google.api.client.json.GenericJson {

  /**
   * Table Columns.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<ColumnEntity> columns;

  static {
    // hack to force ProGuard to consider ColumnEntity used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(ColumnEntity.class);
  }

  /**
   * Comment associated with the table
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String comment;

  /**
   * Table Constraints.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<ConstraintEntity> constraints;

  static {
    // hack to force ProGuard to consider ConstraintEntity used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(ConstraintEntity.class);
  }

  /**
   * Custom engine specific features
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.Object> customFeatures;

  /**
   * Table Indices.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<IndexEntity> indices;

  static {
    // hack to force ProGuard to consider IndexEntity used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(IndexEntity.class);
  }

  /**
   * Table triggers.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<TriggerEntity> triggers;

  /**
   * Table Columns.
   * @return value or {@code null} for none
   */
  public java.util.List<ColumnEntity> getColumns() {
    return columns;
  }

  /**
   * Table Columns.
   * @param columns columns or {@code null} for none
   */
  public TableEntity setColumns(java.util.List<ColumnEntity> columns) {
    this.columns = columns;
    return this;
  }

  /**
   * Comment associated with the table
   * @return value or {@code null} for none
   */
  public java.lang.String getComment() {
    return comment;
  }

  /**
   * Comment associated with the table
   * @param comment comment or {@code null} for none
   */
  public TableEntity setComment(java.lang.String comment) {
    this.comment = comment;
    return this;
  }

  /**
   * Table Constraints.
   * @return value or {@code null} for none
   */
  public java.util.List<ConstraintEntity> getConstraints() {
    return constraints;
  }

  /**
   * Table Constraints.
   * @param constraints constraints or {@code null} for none
   */
  public TableEntity setConstraints(java.util.List<ConstraintEntity> constraints) {
    this.constraints = constraints;
    return this;
  }

  /**
   * Custom engine specific features
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.Object> getCustomFeatures() {
    return customFeatures;
  }

  /**
   * Custom engine specific features
   * @param customFeatures customFeatures or {@code null} for none
   */
  public TableEntity setCustomFeatures(java.util.Map<String, java.lang.Object> customFeatures) {
    this.customFeatures = customFeatures;
    return this;
  }

  /**
   * Table Indices.
   * @return value or {@code null} for none
   */
  public java.util.List<IndexEntity> getIndices() {
    return indices;
  }

  /**
   * Table Indices.
   * @param indices indices or {@code null} for none
   */
  public TableEntity setIndices(java.util.List<IndexEntity> indices) {
    this.indices = indices;
    return this;
  }

  /**
   * Table triggers.
   * @return value or {@code null} for none
   */
  public java.util.List<TriggerEntity> getTriggers() {
    return triggers;
  }

  /**
   * Table triggers.
   * @param triggers triggers or {@code null} for none
   */
  public TableEntity setTriggers(java.util.List<TriggerEntity> triggers) {
    this.triggers = triggers;
    return this;
  }

  @Override
  public TableEntity set(String fieldName, Object value) {
    return (TableEntity) super.set(fieldName, value);
  }

  @Override
  public TableEntity clone() {
    return (TableEntity) super.clone();
  }

}
