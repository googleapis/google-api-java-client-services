/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.transcoder.v1beta1.model;

/**
 * Encoding of an input file such as an audio, video, or text track. Elementary streams must be
 * packaged before mapping and sharing between different output formats.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Transcoder API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ElementaryStream extends com.google.api.client.json.GenericJson {

  /**
   * Encoding of an audio stream.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AudioStream audioStream;

  /**
   * A unique key for this elementary stream.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String key;

  /**
   * Encoding of a text stream. For example, closed captions or subtitles.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private TextStream textStream;

  /**
   * Encoding of a video stream.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private VideoStream videoStream;

  /**
   * Encoding of an audio stream.
   * @return value or {@code null} for none
   */
  public AudioStream getAudioStream() {
    return audioStream;
  }

  /**
   * Encoding of an audio stream.
   * @param audioStream audioStream or {@code null} for none
   */
  public ElementaryStream setAudioStream(AudioStream audioStream) {
    this.audioStream = audioStream;
    return this;
  }

  /**
   * A unique key for this elementary stream.
   * @return value or {@code null} for none
   */
  public java.lang.String getKey() {
    return key;
  }

  /**
   * A unique key for this elementary stream.
   * @param key key or {@code null} for none
   */
  public ElementaryStream setKey(java.lang.String key) {
    this.key = key;
    return this;
  }

  /**
   * Encoding of a text stream. For example, closed captions or subtitles.
   * @return value or {@code null} for none
   */
  public TextStream getTextStream() {
    return textStream;
  }

  /**
   * Encoding of a text stream. For example, closed captions or subtitles.
   * @param textStream textStream or {@code null} for none
   */
  public ElementaryStream setTextStream(TextStream textStream) {
    this.textStream = textStream;
    return this;
  }

  /**
   * Encoding of a video stream.
   * @return value or {@code null} for none
   */
  public VideoStream getVideoStream() {
    return videoStream;
  }

  /**
   * Encoding of a video stream.
   * @param videoStream videoStream or {@code null} for none
   */
  public ElementaryStream setVideoStream(VideoStream videoStream) {
    this.videoStream = videoStream;
    return this;
  }

  @Override
  public ElementaryStream set(String fieldName, Object value) {
    return (ElementaryStream) super.set(fieldName, value);
  }

  @Override
  public ElementaryStream clone() {
    return (ElementaryStream) super.clone();
  }

}
