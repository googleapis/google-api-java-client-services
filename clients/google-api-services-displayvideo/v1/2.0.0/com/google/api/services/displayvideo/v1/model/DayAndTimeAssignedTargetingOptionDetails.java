/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.displayvideo.v1.model;

/**
 * Representation of a segment of time defined on a specific day of the week and with a start and
 * end time. The time represented by `start_hour` must be before the time represented by `end_hour`.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Display & Video 360 API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class DayAndTimeAssignedTargetingOptionDetails extends com.google.api.client.json.GenericJson {

  /**
   * Required. The day of the week for this day and time targeting setting.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String dayOfWeek;

  /**
   * Required. The end hour for day and time targeting. Must be between 1 (1 hour after start of
   * day) and 24 (end of day).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer endHour;

  /**
   * Required. The start hour for day and time targeting. Must be between 0 (start of day) and 23 (1
   * hour before end of day).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer startHour;

  /**
   * Required. The mechanism used to determine which timezone to use for this day and time targeting
   * setting.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String timeZoneResolution;

  /**
   * Required. The day of the week for this day and time targeting setting.
   * @return value or {@code null} for none
   */
  public java.lang.String getDayOfWeek() {
    return dayOfWeek;
  }

  /**
   * Required. The day of the week for this day and time targeting setting.
   * @param dayOfWeek dayOfWeek or {@code null} for none
   */
  public DayAndTimeAssignedTargetingOptionDetails setDayOfWeek(java.lang.String dayOfWeek) {
    this.dayOfWeek = dayOfWeek;
    return this;
  }

  /**
   * Required. The end hour for day and time targeting. Must be between 1 (1 hour after start of
   * day) and 24 (end of day).
   * @return value or {@code null} for none
   */
  public java.lang.Integer getEndHour() {
    return endHour;
  }

  /**
   * Required. The end hour for day and time targeting. Must be between 1 (1 hour after start of
   * day) and 24 (end of day).
   * @param endHour endHour or {@code null} for none
   */
  public DayAndTimeAssignedTargetingOptionDetails setEndHour(java.lang.Integer endHour) {
    this.endHour = endHour;
    return this;
  }

  /**
   * Required. The start hour for day and time targeting. Must be between 0 (start of day) and 23 (1
   * hour before end of day).
   * @return value or {@code null} for none
   */
  public java.lang.Integer getStartHour() {
    return startHour;
  }

  /**
   * Required. The start hour for day and time targeting. Must be between 0 (start of day) and 23 (1
   * hour before end of day).
   * @param startHour startHour or {@code null} for none
   */
  public DayAndTimeAssignedTargetingOptionDetails setStartHour(java.lang.Integer startHour) {
    this.startHour = startHour;
    return this;
  }

  /**
   * Required. The mechanism used to determine which timezone to use for this day and time targeting
   * setting.
   * @return value or {@code null} for none
   */
  public java.lang.String getTimeZoneResolution() {
    return timeZoneResolution;
  }

  /**
   * Required. The mechanism used to determine which timezone to use for this day and time targeting
   * setting.
   * @param timeZoneResolution timeZoneResolution or {@code null} for none
   */
  public DayAndTimeAssignedTargetingOptionDetails setTimeZoneResolution(java.lang.String timeZoneResolution) {
    this.timeZoneResolution = timeZoneResolution;
    return this;
  }

  @Override
  public DayAndTimeAssignedTargetingOptionDetails set(String fieldName, Object value) {
    return (DayAndTimeAssignedTargetingOptionDetails) super.set(fieldName, value);
  }

  @Override
  public DayAndTimeAssignedTargetingOptionDetails clone() {
    return (DayAndTimeAssignedTargetingOptionDetails) super.clone();
  }

}
