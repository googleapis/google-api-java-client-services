/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.oracledatabase.v1.model;

/**
 * The request for `AutonomousDatabase.GenerateWallet`.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Oracle Database@Google Cloud API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GenerateAutonomousDatabaseWalletRequest extends com.google.api.client.json.GenericJson {

  /**
   * Optional. True when requesting regional connection strings in PDB connect info, applicable to
   * cross-region Data Guard only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isRegional;

  /**
   * Required. The password used to encrypt the keys inside the wallet. The password must be a
   * minimum of 8 characters.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String password;

  /**
   * Optional. The type of wallet generation for the Autonomous Database. The default value is
   * SINGLE.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * Optional. True when requesting regional connection strings in PDB connect info, applicable to
   * cross-region Data Guard only.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsRegional() {
    return isRegional;
  }

  /**
   * Optional. True when requesting regional connection strings in PDB connect info, applicable to
   * cross-region Data Guard only.
   * @param isRegional isRegional or {@code null} for none
   */
  public GenerateAutonomousDatabaseWalletRequest setIsRegional(java.lang.Boolean isRegional) {
    this.isRegional = isRegional;
    return this;
  }

  /**
   * Required. The password used to encrypt the keys inside the wallet. The password must be a
   * minimum of 8 characters.
   * @return value or {@code null} for none
   */
  public java.lang.String getPassword() {
    return password;
  }

  /**
   * Required. The password used to encrypt the keys inside the wallet. The password must be a
   * minimum of 8 characters.
   * @param password password or {@code null} for none
   */
  public GenerateAutonomousDatabaseWalletRequest setPassword(java.lang.String password) {
    this.password = password;
    return this;
  }

  /**
   * Optional. The type of wallet generation for the Autonomous Database. The default value is
   * SINGLE.
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * Optional. The type of wallet generation for the Autonomous Database. The default value is
   * SINGLE.
   * @param type type or {@code null} for none
   */
  public GenerateAutonomousDatabaseWalletRequest setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  @Override
  public GenerateAutonomousDatabaseWalletRequest set(String fieldName, Object value) {
    return (GenerateAutonomousDatabaseWalletRequest) super.set(fieldName, value);
  }

  @Override
  public GenerateAutonomousDatabaseWalletRequest clone() {
    return (GenerateAutonomousDatabaseWalletRequest) super.clone();
  }

}
