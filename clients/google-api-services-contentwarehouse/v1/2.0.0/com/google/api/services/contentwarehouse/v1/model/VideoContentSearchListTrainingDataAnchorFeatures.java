/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Anchor-level metadata about the description anchors used as list items to build training data for
 * list anchors.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class VideoContentSearchListTrainingDataAnchorFeatures extends com.google.api.client.json.GenericJson {

  /**
   * The timestamp of when the description anchor is annotated to appear in the video in ms.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer descriptionAnchorTimeMs;

  /**
   * The time gap of when the description anchor is annotated to appear in the video
   * (description_anchor_time_ms) from when it's matched in the ASR as the list anchor.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long descriptionAnchorTimeToMatchedTimeMs;

  /**
   * Closest edit distance between the anchor generated by description span and the description
   * anchor where the span anchor must be within small threshold time difference of the description
   * anchor timestamp.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer editDistance;

  /**
   * edit_distance over the description anchor's label length.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float editDistanceRatio;

  /**
   * The description anchor text used for matching to Span anchor text.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String matchedDescriptionText;

  /**
   * The description span anchor text that was the best match for the nearby description anchor.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String matchedSpanText;

  /**
   * The timestamp of when the description anchor is annotated to appear in the video in ms.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getDescriptionAnchorTimeMs() {
    return descriptionAnchorTimeMs;
  }

  /**
   * The timestamp of when the description anchor is annotated to appear in the video in ms.
   * @param descriptionAnchorTimeMs descriptionAnchorTimeMs or {@code null} for none
   */
  public VideoContentSearchListTrainingDataAnchorFeatures setDescriptionAnchorTimeMs(java.lang.Integer descriptionAnchorTimeMs) {
    this.descriptionAnchorTimeMs = descriptionAnchorTimeMs;
    return this;
  }

  /**
   * The time gap of when the description anchor is annotated to appear in the video
   * (description_anchor_time_ms) from when it's matched in the ASR as the list anchor.
   * @return value or {@code null} for none
   */
  public java.lang.Long getDescriptionAnchorTimeToMatchedTimeMs() {
    return descriptionAnchorTimeToMatchedTimeMs;
  }

  /**
   * The time gap of when the description anchor is annotated to appear in the video
   * (description_anchor_time_ms) from when it's matched in the ASR as the list anchor.
   * @param descriptionAnchorTimeToMatchedTimeMs descriptionAnchorTimeToMatchedTimeMs or {@code null} for none
   */
  public VideoContentSearchListTrainingDataAnchorFeatures setDescriptionAnchorTimeToMatchedTimeMs(java.lang.Long descriptionAnchorTimeToMatchedTimeMs) {
    this.descriptionAnchorTimeToMatchedTimeMs = descriptionAnchorTimeToMatchedTimeMs;
    return this;
  }

  /**
   * Closest edit distance between the anchor generated by description span and the description
   * anchor where the span anchor must be within small threshold time difference of the description
   * anchor timestamp.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getEditDistance() {
    return editDistance;
  }

  /**
   * Closest edit distance between the anchor generated by description span and the description
   * anchor where the span anchor must be within small threshold time difference of the description
   * anchor timestamp.
   * @param editDistance editDistance or {@code null} for none
   */
  public VideoContentSearchListTrainingDataAnchorFeatures setEditDistance(java.lang.Integer editDistance) {
    this.editDistance = editDistance;
    return this;
  }

  /**
   * edit_distance over the description anchor's label length.
   * @return value or {@code null} for none
   */
  public java.lang.Float getEditDistanceRatio() {
    return editDistanceRatio;
  }

  /**
   * edit_distance over the description anchor's label length.
   * @param editDistanceRatio editDistanceRatio or {@code null} for none
   */
  public VideoContentSearchListTrainingDataAnchorFeatures setEditDistanceRatio(java.lang.Float editDistanceRatio) {
    this.editDistanceRatio = editDistanceRatio;
    return this;
  }

  /**
   * The description anchor text used for matching to Span anchor text.
   * @return value or {@code null} for none
   */
  public java.lang.String getMatchedDescriptionText() {
    return matchedDescriptionText;
  }

  /**
   * The description anchor text used for matching to Span anchor text.
   * @param matchedDescriptionText matchedDescriptionText or {@code null} for none
   */
  public VideoContentSearchListTrainingDataAnchorFeatures setMatchedDescriptionText(java.lang.String matchedDescriptionText) {
    this.matchedDescriptionText = matchedDescriptionText;
    return this;
  }

  /**
   * The description span anchor text that was the best match for the nearby description anchor.
   * @return value or {@code null} for none
   */
  public java.lang.String getMatchedSpanText() {
    return matchedSpanText;
  }

  /**
   * The description span anchor text that was the best match for the nearby description anchor.
   * @param matchedSpanText matchedSpanText or {@code null} for none
   */
  public VideoContentSearchListTrainingDataAnchorFeatures setMatchedSpanText(java.lang.String matchedSpanText) {
    this.matchedSpanText = matchedSpanText;
    return this;
  }

  @Override
  public VideoContentSearchListTrainingDataAnchorFeatures set(String fieldName, Object value) {
    return (VideoContentSearchListTrainingDataAnchorFeatures) super.set(fieldName, value);
  }

  @Override
  public VideoContentSearchListTrainingDataAnchorFeatures clone() {
    return (VideoContentSearchListTrainingDataAnchorFeatures) super.clone();
  }

}
