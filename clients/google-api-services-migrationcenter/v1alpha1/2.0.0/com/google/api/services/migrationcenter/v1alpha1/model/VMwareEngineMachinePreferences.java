/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.migrationcenter.v1alpha1.model;

/**
 * The type of machines to consider when calculating virtual machine migration insights and
 * recommendations for VMware Engine. Not all machine types are available in all zones and regions.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Migration Center API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class VMwareEngineMachinePreferences extends com.google.api.client.json.GenericJson {

  /**
   * Optional. VMware Engine on Google Cloud machine series to consider for insights and
   * recommendations. If empty, no restriction is applied on the machine series.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<MachineSeries> allowedMachineSeries;

  static {
    // hack to force ProGuard to consider MachineSeries used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(MachineSeries.class);
  }

  /**
   * Optional. Whether to use VMware Engine Protected offering.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String protectedNodes;

  /**
   * Optional. Whether to use storage-only nodes, if those are available.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String storageOnlyNodes;

  /**
   * Optional. VMware Engine on Google Cloud machine series to consider for insights and
   * recommendations. If empty, no restriction is applied on the machine series.
   * @return value or {@code null} for none
   */
  public java.util.List<MachineSeries> getAllowedMachineSeries() {
    return allowedMachineSeries;
  }

  /**
   * Optional. VMware Engine on Google Cloud machine series to consider for insights and
   * recommendations. If empty, no restriction is applied on the machine series.
   * @param allowedMachineSeries allowedMachineSeries or {@code null} for none
   */
  public VMwareEngineMachinePreferences setAllowedMachineSeries(java.util.List<MachineSeries> allowedMachineSeries) {
    this.allowedMachineSeries = allowedMachineSeries;
    return this;
  }

  /**
   * Optional. Whether to use VMware Engine Protected offering.
   * @return value or {@code null} for none
   */
  public java.lang.String getProtectedNodes() {
    return protectedNodes;
  }

  /**
   * Optional. Whether to use VMware Engine Protected offering.
   * @param protectedNodes protectedNodes or {@code null} for none
   */
  public VMwareEngineMachinePreferences setProtectedNodes(java.lang.String protectedNodes) {
    this.protectedNodes = protectedNodes;
    return this;
  }

  /**
   * Optional. Whether to use storage-only nodes, if those are available.
   * @return value or {@code null} for none
   */
  public java.lang.String getStorageOnlyNodes() {
    return storageOnlyNodes;
  }

  /**
   * Optional. Whether to use storage-only nodes, if those are available.
   * @param storageOnlyNodes storageOnlyNodes or {@code null} for none
   */
  public VMwareEngineMachinePreferences setStorageOnlyNodes(java.lang.String storageOnlyNodes) {
    this.storageOnlyNodes = storageOnlyNodes;
    return this;
  }

  @Override
  public VMwareEngineMachinePreferences set(String fieldName, Object value) {
    return (VMwareEngineMachinePreferences) super.set(fieldName, value);
  }

  @Override
  public VMwareEngineMachinePreferences clone() {
    return (VMwareEngineMachinePreferences) super.clone();
  }

}
