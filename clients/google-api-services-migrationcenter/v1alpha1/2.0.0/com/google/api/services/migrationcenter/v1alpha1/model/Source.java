/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.migrationcenter.v1alpha1.model;

/**
 * Source represents an object from which asset information is streamed to Migration Center.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Migration Center API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Source extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The timestamp when the source was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Free-text description.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * User-friendly display name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Output only. The number of frames that were reported by the source and contained errors.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer errorFrameCount;

  /**
   * If `true`, the source is managed by other service(s).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isManaged;

  /**
   * Output only. The full name of the source.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. Number of frames that are still being processed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer pendingFrameCount;

  /**
   * The information confidence of the source. The higher the value, the higher the confidence.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer priority;

  /**
   * Output only. The state of the source.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Data source type.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * Output only. The timestamp when the source was last updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Output only. The timestamp when the source was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The timestamp when the source was created.
   * @param createTime createTime or {@code null} for none
   */
  public Source setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Free-text description.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Free-text description.
   * @param description description or {@code null} for none
   */
  public Source setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * User-friendly display name.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * User-friendly display name.
   * @param displayName displayName or {@code null} for none
   */
  public Source setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Output only. The number of frames that were reported by the source and contained errors.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getErrorFrameCount() {
    return errorFrameCount;
  }

  /**
   * Output only. The number of frames that were reported by the source and contained errors.
   * @param errorFrameCount errorFrameCount or {@code null} for none
   */
  public Source setErrorFrameCount(java.lang.Integer errorFrameCount) {
    this.errorFrameCount = errorFrameCount;
    return this;
  }

  /**
   * If `true`, the source is managed by other service(s).
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsManaged() {
    return isManaged;
  }

  /**
   * If `true`, the source is managed by other service(s).
   * @param isManaged isManaged or {@code null} for none
   */
  public Source setIsManaged(java.lang.Boolean isManaged) {
    this.isManaged = isManaged;
    return this;
  }

  /**
   * Output only. The full name of the source.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. The full name of the source.
   * @param name name or {@code null} for none
   */
  public Source setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. Number of frames that are still being processed.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getPendingFrameCount() {
    return pendingFrameCount;
  }

  /**
   * Output only. Number of frames that are still being processed.
   * @param pendingFrameCount pendingFrameCount or {@code null} for none
   */
  public Source setPendingFrameCount(java.lang.Integer pendingFrameCount) {
    this.pendingFrameCount = pendingFrameCount;
    return this;
  }

  /**
   * The information confidence of the source. The higher the value, the higher the confidence.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getPriority() {
    return priority;
  }

  /**
   * The information confidence of the source. The higher the value, the higher the confidence.
   * @param priority priority or {@code null} for none
   */
  public Source setPriority(java.lang.Integer priority) {
    this.priority = priority;
    return this;
  }

  /**
   * Output only. The state of the source.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. The state of the source.
   * @param state state or {@code null} for none
   */
  public Source setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Data source type.
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * Data source type.
   * @param type type or {@code null} for none
   */
  public Source setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  /**
   * Output only. The timestamp when the source was last updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. The timestamp when the source was last updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public Source setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public Source set(String fieldName, Object value) {
    return (Source) super.set(fieldName, value);
  }

  @Override
  public Source clone() {
    return (Source) super.clone();
  }

}
