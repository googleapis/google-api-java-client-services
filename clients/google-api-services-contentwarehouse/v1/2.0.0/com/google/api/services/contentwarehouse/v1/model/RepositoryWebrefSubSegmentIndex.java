/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * LINT.IfChange Some document segments may consist of multiple sub-segments (e.g. a document might
 * have multiple anchors or navboost queries). SubSegmentIndex contains all information needed to
 * identify the sub-segment (e.g. specific query, query feature or or anchor) where the mention is
 * located.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class RepositoryWebrefSubSegmentIndex extends com.google.api.client.json.GenericJson {

  /**
   * Pointer to the exact set of anchors in the cdoc.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private RepositoryWebrefAnchorIndices anchorIndex;

  /**
   * Pointer to the Webref-internal Segment indices. Can't be mapped back to the CDoc.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private RepositoryWebrefGenericIndices genericIndex;

  /**
   * Pointer to the exact set of image navboost queries in the cdoc.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private RepositoryWebrefImageQueryIndices imageQueryIndex;

  /**
   * Pointer to the proto in the cdoc and index within the proto for Spore.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private RepositoryWebrefJuggernautIndices jgnIndex;

  /**
   * Pointer to the exact set of queries in the cdoc.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private RepositoryWebrefQueryIndices queryIndex;

  /**
   * Pointer to the exact set of anchors in the cdoc.
   * @return value or {@code null} for none
   */
  public RepositoryWebrefAnchorIndices getAnchorIndex() {
    return anchorIndex;
  }

  /**
   * Pointer to the exact set of anchors in the cdoc.
   * @param anchorIndex anchorIndex or {@code null} for none
   */
  public RepositoryWebrefSubSegmentIndex setAnchorIndex(RepositoryWebrefAnchorIndices anchorIndex) {
    this.anchorIndex = anchorIndex;
    return this;
  }

  /**
   * Pointer to the Webref-internal Segment indices. Can't be mapped back to the CDoc.
   * @return value or {@code null} for none
   */
  public RepositoryWebrefGenericIndices getGenericIndex() {
    return genericIndex;
  }

  /**
   * Pointer to the Webref-internal Segment indices. Can't be mapped back to the CDoc.
   * @param genericIndex genericIndex or {@code null} for none
   */
  public RepositoryWebrefSubSegmentIndex setGenericIndex(RepositoryWebrefGenericIndices genericIndex) {
    this.genericIndex = genericIndex;
    return this;
  }

  /**
   * Pointer to the exact set of image navboost queries in the cdoc.
   * @return value or {@code null} for none
   */
  public RepositoryWebrefImageQueryIndices getImageQueryIndex() {
    return imageQueryIndex;
  }

  /**
   * Pointer to the exact set of image navboost queries in the cdoc.
   * @param imageQueryIndex imageQueryIndex or {@code null} for none
   */
  public RepositoryWebrefSubSegmentIndex setImageQueryIndex(RepositoryWebrefImageQueryIndices imageQueryIndex) {
    this.imageQueryIndex = imageQueryIndex;
    return this;
  }

  /**
   * Pointer to the proto in the cdoc and index within the proto for Spore.
   * @return value or {@code null} for none
   */
  public RepositoryWebrefJuggernautIndices getJgnIndex() {
    return jgnIndex;
  }

  /**
   * Pointer to the proto in the cdoc and index within the proto for Spore.
   * @param jgnIndex jgnIndex or {@code null} for none
   */
  public RepositoryWebrefSubSegmentIndex setJgnIndex(RepositoryWebrefJuggernautIndices jgnIndex) {
    this.jgnIndex = jgnIndex;
    return this;
  }

  /**
   * Pointer to the exact set of queries in the cdoc.
   * @return value or {@code null} for none
   */
  public RepositoryWebrefQueryIndices getQueryIndex() {
    return queryIndex;
  }

  /**
   * Pointer to the exact set of queries in the cdoc.
   * @param queryIndex queryIndex or {@code null} for none
   */
  public RepositoryWebrefSubSegmentIndex setQueryIndex(RepositoryWebrefQueryIndices queryIndex) {
    this.queryIndex = queryIndex;
    return this;
  }

  @Override
  public RepositoryWebrefSubSegmentIndex set(String fieldName, Object value) {
    return (RepositoryWebrefSubSegmentIndex) super.set(fieldName, value);
  }

  @Override
  public RepositoryWebrefSubSegmentIndex clone() {
    return (RepositoryWebrefSubSegmentIndex) super.clone();
  }

}
