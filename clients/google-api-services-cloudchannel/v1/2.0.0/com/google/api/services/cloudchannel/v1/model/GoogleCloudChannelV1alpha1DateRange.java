/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudchannel.v1.model;

/**
 * A representation of usage or invoice date ranges.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Channel API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudChannelV1alpha1DateRange extends com.google.api.client.json.GenericJson {

  /**
   * The latest invoice date (exclusive). If your product uses monthly invoices, and this value is
   * not the beginning of a month, this will adjust the date to the first day of the following
   * month.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleTypeDate invoiceEndDate;

  /**
   * The earliest invoice date (inclusive). If your product uses monthly invoices, and this value is
   * not the beginning of a month, this will adjust the date to the first day of the given month.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleTypeDate invoiceStartDate;

  /**
   * The latest usage date time (exclusive). If you use time groupings (daily, weekly, etc), each
   * group uses midnight to midnight (Pacific time). The usage end date is rounded down to include
   * all usage from the specified date. We recommend that clients pass `usage_start_date_time` in
   * Pacific time.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleTypeDateTime usageEndDateTime;

  /**
   * The earliest usage date time (inclusive). If you use time groupings (daily, weekly, etc), each
   * group uses midnight to midnight (Pacific time). The usage start date is rounded down to include
   * all usage from the specified date. We recommend that clients pass `usage_start_date_time` in
   * Pacific time.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleTypeDateTime usageStartDateTime;

  /**
   * The latest invoice date (exclusive). If your product uses monthly invoices, and this value is
   * not the beginning of a month, this will adjust the date to the first day of the following
   * month.
   * @return value or {@code null} for none
   */
  public GoogleTypeDate getInvoiceEndDate() {
    return invoiceEndDate;
  }

  /**
   * The latest invoice date (exclusive). If your product uses monthly invoices, and this value is
   * not the beginning of a month, this will adjust the date to the first day of the following
   * month.
   * @param invoiceEndDate invoiceEndDate or {@code null} for none
   */
  public GoogleCloudChannelV1alpha1DateRange setInvoiceEndDate(GoogleTypeDate invoiceEndDate) {
    this.invoiceEndDate = invoiceEndDate;
    return this;
  }

  /**
   * The earliest invoice date (inclusive). If your product uses monthly invoices, and this value is
   * not the beginning of a month, this will adjust the date to the first day of the given month.
   * @return value or {@code null} for none
   */
  public GoogleTypeDate getInvoiceStartDate() {
    return invoiceStartDate;
  }

  /**
   * The earliest invoice date (inclusive). If your product uses monthly invoices, and this value is
   * not the beginning of a month, this will adjust the date to the first day of the given month.
   * @param invoiceStartDate invoiceStartDate or {@code null} for none
   */
  public GoogleCloudChannelV1alpha1DateRange setInvoiceStartDate(GoogleTypeDate invoiceStartDate) {
    this.invoiceStartDate = invoiceStartDate;
    return this;
  }

  /**
   * The latest usage date time (exclusive). If you use time groupings (daily, weekly, etc), each
   * group uses midnight to midnight (Pacific time). The usage end date is rounded down to include
   * all usage from the specified date. We recommend that clients pass `usage_start_date_time` in
   * Pacific time.
   * @return value or {@code null} for none
   */
  public GoogleTypeDateTime getUsageEndDateTime() {
    return usageEndDateTime;
  }

  /**
   * The latest usage date time (exclusive). If you use time groupings (daily, weekly, etc), each
   * group uses midnight to midnight (Pacific time). The usage end date is rounded down to include
   * all usage from the specified date. We recommend that clients pass `usage_start_date_time` in
   * Pacific time.
   * @param usageEndDateTime usageEndDateTime or {@code null} for none
   */
  public GoogleCloudChannelV1alpha1DateRange setUsageEndDateTime(GoogleTypeDateTime usageEndDateTime) {
    this.usageEndDateTime = usageEndDateTime;
    return this;
  }

  /**
   * The earliest usage date time (inclusive). If you use time groupings (daily, weekly, etc), each
   * group uses midnight to midnight (Pacific time). The usage start date is rounded down to include
   * all usage from the specified date. We recommend that clients pass `usage_start_date_time` in
   * Pacific time.
   * @return value or {@code null} for none
   */
  public GoogleTypeDateTime getUsageStartDateTime() {
    return usageStartDateTime;
  }

  /**
   * The earliest usage date time (inclusive). If you use time groupings (daily, weekly, etc), each
   * group uses midnight to midnight (Pacific time). The usage start date is rounded down to include
   * all usage from the specified date. We recommend that clients pass `usage_start_date_time` in
   * Pacific time.
   * @param usageStartDateTime usageStartDateTime or {@code null} for none
   */
  public GoogleCloudChannelV1alpha1DateRange setUsageStartDateTime(GoogleTypeDateTime usageStartDateTime) {
    this.usageStartDateTime = usageStartDateTime;
    return this;
  }

  @Override
  public GoogleCloudChannelV1alpha1DateRange set(String fieldName, Object value) {
    return (GoogleCloudChannelV1alpha1DateRange) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudChannelV1alpha1DateRange clone() {
    return (GoogleCloudChannelV1alpha1DateRange) super.clone();
  }

}
