/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.language.v2.model;

/**
 * Model definition for XPSTableSpec.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Natural Language API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class XPSTableSpec extends com.google.api.client.json.GenericJson {

  /**
   * Mapping from column id to column spec.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, XPSColumnSpec> columnSpecs;

  static {
    // hack to force ProGuard to consider XPSColumnSpec used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(XPSColumnSpec.class);
  }

  /**
   * The total size of imported data of the table.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long importedDataSizeInBytes;

  /**
   * The number of rows in the table.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long rowCount;

  /**
   * The id of the time column.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer timeColumnId;

  /**
   * The number of valid rows.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long validRowCount;

  /**
   * Mapping from column id to column spec.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, XPSColumnSpec> getColumnSpecs() {
    return columnSpecs;
  }

  /**
   * Mapping from column id to column spec.
   * @param columnSpecs columnSpecs or {@code null} for none
   */
  public XPSTableSpec setColumnSpecs(java.util.Map<String, XPSColumnSpec> columnSpecs) {
    this.columnSpecs = columnSpecs;
    return this;
  }

  /**
   * The total size of imported data of the table.
   * @return value or {@code null} for none
   */
  public java.lang.Long getImportedDataSizeInBytes() {
    return importedDataSizeInBytes;
  }

  /**
   * The total size of imported data of the table.
   * @param importedDataSizeInBytes importedDataSizeInBytes or {@code null} for none
   */
  public XPSTableSpec setImportedDataSizeInBytes(java.lang.Long importedDataSizeInBytes) {
    this.importedDataSizeInBytes = importedDataSizeInBytes;
    return this;
  }

  /**
   * The number of rows in the table.
   * @return value or {@code null} for none
   */
  public java.lang.Long getRowCount() {
    return rowCount;
  }

  /**
   * The number of rows in the table.
   * @param rowCount rowCount or {@code null} for none
   */
  public XPSTableSpec setRowCount(java.lang.Long rowCount) {
    this.rowCount = rowCount;
    return this;
  }

  /**
   * The id of the time column.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getTimeColumnId() {
    return timeColumnId;
  }

  /**
   * The id of the time column.
   * @param timeColumnId timeColumnId or {@code null} for none
   */
  public XPSTableSpec setTimeColumnId(java.lang.Integer timeColumnId) {
    this.timeColumnId = timeColumnId;
    return this;
  }

  /**
   * The number of valid rows.
   * @return value or {@code null} for none
   */
  public java.lang.Long getValidRowCount() {
    return validRowCount;
  }

  /**
   * The number of valid rows.
   * @param validRowCount validRowCount or {@code null} for none
   */
  public XPSTableSpec setValidRowCount(java.lang.Long validRowCount) {
    this.validRowCount = validRowCount;
    return this;
  }

  @Override
  public XPSTableSpec set(String fieldName, Object value) {
    return (XPSTableSpec) super.set(fieldName, value);
  }

  @Override
  public XPSTableSpec clone() {
    return (XPSTableSpec) super.clone();
  }

}
