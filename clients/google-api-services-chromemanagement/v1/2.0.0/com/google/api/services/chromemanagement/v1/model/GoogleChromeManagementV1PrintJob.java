/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.chromemanagement.v1.model;

/**
 * Represents a request to print a document that has been submitted to a printer.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Chrome Management API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleChromeManagementV1PrintJob extends com.google.api.client.json.GenericJson {

  /**
   * Color mode.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String colorMode;

  /**
   * Print job completion timestamp.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String completeTime;

  /**
   * Number of copies.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer copyCount;

  /**
   * Print job creation timestamp.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Number of pages in the document.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer documentPageCount;

  /**
   * Duplex mode.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String duplexMode;

  /**
   * Unique ID of the print job.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String id;

  /**
   * Name of the printer used for printing.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String printer;

  /**
   * API ID of the printer used for printing.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String printerId;

  /**
   * The final state of the job.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * The title of the document.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String title;

  /**
   * The primary e-mail address of the user who submitted the print job.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String userEmail;

  /**
   * The unique Directory API ID of the user who submitted the print job.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String userId;

  /**
   * Color mode.
   * @return value or {@code null} for none
   */
  public java.lang.String getColorMode() {
    return colorMode;
  }

  /**
   * Color mode.
   * @param colorMode colorMode or {@code null} for none
   */
  public GoogleChromeManagementV1PrintJob setColorMode(java.lang.String colorMode) {
    this.colorMode = colorMode;
    return this;
  }

  /**
   * Print job completion timestamp.
   * @return value or {@code null} for none
   */
  public String getCompleteTime() {
    return completeTime;
  }

  /**
   * Print job completion timestamp.
   * @param completeTime completeTime or {@code null} for none
   */
  public GoogleChromeManagementV1PrintJob setCompleteTime(String completeTime) {
    this.completeTime = completeTime;
    return this;
  }

  /**
   * Number of copies.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getCopyCount() {
    return copyCount;
  }

  /**
   * Number of copies.
   * @param copyCount copyCount or {@code null} for none
   */
  public GoogleChromeManagementV1PrintJob setCopyCount(java.lang.Integer copyCount) {
    this.copyCount = copyCount;
    return this;
  }

  /**
   * Print job creation timestamp.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Print job creation timestamp.
   * @param createTime createTime or {@code null} for none
   */
  public GoogleChromeManagementV1PrintJob setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Number of pages in the document.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getDocumentPageCount() {
    return documentPageCount;
  }

  /**
   * Number of pages in the document.
   * @param documentPageCount documentPageCount or {@code null} for none
   */
  public GoogleChromeManagementV1PrintJob setDocumentPageCount(java.lang.Integer documentPageCount) {
    this.documentPageCount = documentPageCount;
    return this;
  }

  /**
   * Duplex mode.
   * @return value or {@code null} for none
   */
  public java.lang.String getDuplexMode() {
    return duplexMode;
  }

  /**
   * Duplex mode.
   * @param duplexMode duplexMode or {@code null} for none
   */
  public GoogleChromeManagementV1PrintJob setDuplexMode(java.lang.String duplexMode) {
    this.duplexMode = duplexMode;
    return this;
  }

  /**
   * Unique ID of the print job.
   * @return value or {@code null} for none
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * Unique ID of the print job.
   * @param id id or {@code null} for none
   */
  public GoogleChromeManagementV1PrintJob setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  /**
   * Name of the printer used for printing.
   * @return value or {@code null} for none
   */
  public java.lang.String getPrinter() {
    return printer;
  }

  /**
   * Name of the printer used for printing.
   * @param printer printer or {@code null} for none
   */
  public GoogleChromeManagementV1PrintJob setPrinter(java.lang.String printer) {
    this.printer = printer;
    return this;
  }

  /**
   * API ID of the printer used for printing.
   * @return value or {@code null} for none
   */
  public java.lang.String getPrinterId() {
    return printerId;
  }

  /**
   * API ID of the printer used for printing.
   * @param printerId printerId or {@code null} for none
   */
  public GoogleChromeManagementV1PrintJob setPrinterId(java.lang.String printerId) {
    this.printerId = printerId;
    return this;
  }

  /**
   * The final state of the job.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * The final state of the job.
   * @param state state or {@code null} for none
   */
  public GoogleChromeManagementV1PrintJob setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * The title of the document.
   * @return value or {@code null} for none
   */
  public java.lang.String getTitle() {
    return title;
  }

  /**
   * The title of the document.
   * @param title title or {@code null} for none
   */
  public GoogleChromeManagementV1PrintJob setTitle(java.lang.String title) {
    this.title = title;
    return this;
  }

  /**
   * The primary e-mail address of the user who submitted the print job.
   * @return value or {@code null} for none
   */
  public java.lang.String getUserEmail() {
    return userEmail;
  }

  /**
   * The primary e-mail address of the user who submitted the print job.
   * @param userEmail userEmail or {@code null} for none
   */
  public GoogleChromeManagementV1PrintJob setUserEmail(java.lang.String userEmail) {
    this.userEmail = userEmail;
    return this;
  }

  /**
   * The unique Directory API ID of the user who submitted the print job.
   * @return value or {@code null} for none
   */
  public java.lang.String getUserId() {
    return userId;
  }

  /**
   * The unique Directory API ID of the user who submitted the print job.
   * @param userId userId or {@code null} for none
   */
  public GoogleChromeManagementV1PrintJob setUserId(java.lang.String userId) {
    this.userId = userId;
    return this;
  }

  @Override
  public GoogleChromeManagementV1PrintJob set(String fieldName, Object value) {
    return (GoogleChromeManagementV1PrintJob) super.set(fieldName, value);
  }

  @Override
  public GoogleChromeManagementV1PrintJob clone() {
    return (GoogleChromeManagementV1PrintJob) super.clone();
  }

}
