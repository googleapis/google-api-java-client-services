/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.aiplatform.v1.model;

/**
 * NotebookExecutionJob represents an instance of a notebook execution.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Vertex AI API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudAiplatformV1NotebookExecutionJob extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Timestamp when this NotebookExecutionJob was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * The custom compute configuration for an execution job.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1NotebookExecutionJobCustomEnvironmentSpec customEnvironmentSpec;

  /**
   * The Dataform Repository pointing to a single file notebook repository.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1NotebookExecutionJobDataformRepositorySource dataformRepositorySource;

  /**
   * The contents of an input notebook file.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1NotebookExecutionJobDirectNotebookSource directNotebookSource;

  /**
   * The display name of the NotebookExecutionJob. The name can be up to 128 characters long and can
   * consist of any UTF-8 characters.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Customer-managed encryption key spec for the notebook execution job. This field is auto-
   * populated if the NotebookRuntimeTemplate has an encryption spec.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1EncryptionSpec encryptionSpec;

  /**
   * Max running time of the execution job in seconds (default 86400s / 24 hrs).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String executionTimeout;

  /**
   * The user email to run the execution as. Only supported by Colab runtimes.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String executionUser;

  /**
   * The Cloud Storage url pointing to the ipynb file. Format: `gs://bucket/notebook_file.ipynb`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1NotebookExecutionJobGcsNotebookSource gcsNotebookSource;

  /**
   * The Cloud Storage location to upload the result to. Format: `gs://bucket-name`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String gcsOutputUri;

  /**
   * Output only. The state of the NotebookExecutionJob.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String jobState;

  /**
   * The name of the kernel to use during notebook execution. If unset, the default kernel is used.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String kernelName;

  /**
   * The labels with user-defined metadata to organize NotebookExecutionJobs. Label keys and values
   * can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters,
   * numeric characters, underscores and dashes. International characters are allowed. See
   * https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys
   * are prefixed with "aiplatform.googleapis.com/" and are immutable.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Output only. The resource name of this NotebookExecutionJob. Format:
   * `projects/{project_id}/locations/{location}/notebookExecutionJobs/{job_id}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * The NotebookRuntimeTemplate to source compute configuration from.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String notebookRuntimeTemplateResourceName;

  /**
   * The Schedule resource name if this job is triggered by one. Format:
   * `projects/{project_id}/locations/{location}/schedules/{schedule_id}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String scheduleResourceName;

  /**
   * The service account to run the execution as.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String serviceAccount;

  /**
   * Output only. Populated when the NotebookExecutionJob is completed. When there is an error
   * during notebook execution, the error details are populated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleRpcStatus status;

  /**
   * Output only. Timestamp when this NotebookExecutionJob was most recently updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * The Workbench runtime configuration to use for the notebook execution.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1NotebookExecutionJobWorkbenchRuntime workbenchRuntime;

  /**
   * Output only. Timestamp when this NotebookExecutionJob was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. Timestamp when this NotebookExecutionJob was created.
   * @param createTime createTime or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookExecutionJob setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * The custom compute configuration for an execution job.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookExecutionJobCustomEnvironmentSpec getCustomEnvironmentSpec() {
    return customEnvironmentSpec;
  }

  /**
   * The custom compute configuration for an execution job.
   * @param customEnvironmentSpec customEnvironmentSpec or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookExecutionJob setCustomEnvironmentSpec(GoogleCloudAiplatformV1NotebookExecutionJobCustomEnvironmentSpec customEnvironmentSpec) {
    this.customEnvironmentSpec = customEnvironmentSpec;
    return this;
  }

  /**
   * The Dataform Repository pointing to a single file notebook repository.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookExecutionJobDataformRepositorySource getDataformRepositorySource() {
    return dataformRepositorySource;
  }

  /**
   * The Dataform Repository pointing to a single file notebook repository.
   * @param dataformRepositorySource dataformRepositorySource or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookExecutionJob setDataformRepositorySource(GoogleCloudAiplatformV1NotebookExecutionJobDataformRepositorySource dataformRepositorySource) {
    this.dataformRepositorySource = dataformRepositorySource;
    return this;
  }

  /**
   * The contents of an input notebook file.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookExecutionJobDirectNotebookSource getDirectNotebookSource() {
    return directNotebookSource;
  }

  /**
   * The contents of an input notebook file.
   * @param directNotebookSource directNotebookSource or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookExecutionJob setDirectNotebookSource(GoogleCloudAiplatformV1NotebookExecutionJobDirectNotebookSource directNotebookSource) {
    this.directNotebookSource = directNotebookSource;
    return this;
  }

  /**
   * The display name of the NotebookExecutionJob. The name can be up to 128 characters long and can
   * consist of any UTF-8 characters.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * The display name of the NotebookExecutionJob. The name can be up to 128 characters long and can
   * consist of any UTF-8 characters.
   * @param displayName displayName or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookExecutionJob setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Customer-managed encryption key spec for the notebook execution job. This field is auto-
   * populated if the NotebookRuntimeTemplate has an encryption spec.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1EncryptionSpec getEncryptionSpec() {
    return encryptionSpec;
  }

  /**
   * Customer-managed encryption key spec for the notebook execution job. This field is auto-
   * populated if the NotebookRuntimeTemplate has an encryption spec.
   * @param encryptionSpec encryptionSpec or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookExecutionJob setEncryptionSpec(GoogleCloudAiplatformV1EncryptionSpec encryptionSpec) {
    this.encryptionSpec = encryptionSpec;
    return this;
  }

  /**
   * Max running time of the execution job in seconds (default 86400s / 24 hrs).
   * @return value or {@code null} for none
   */
  public String getExecutionTimeout() {
    return executionTimeout;
  }

  /**
   * Max running time of the execution job in seconds (default 86400s / 24 hrs).
   * @param executionTimeout executionTimeout or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookExecutionJob setExecutionTimeout(String executionTimeout) {
    this.executionTimeout = executionTimeout;
    return this;
  }

  /**
   * The user email to run the execution as. Only supported by Colab runtimes.
   * @return value or {@code null} for none
   */
  public java.lang.String getExecutionUser() {
    return executionUser;
  }

  /**
   * The user email to run the execution as. Only supported by Colab runtimes.
   * @param executionUser executionUser or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookExecutionJob setExecutionUser(java.lang.String executionUser) {
    this.executionUser = executionUser;
    return this;
  }

  /**
   * The Cloud Storage url pointing to the ipynb file. Format: `gs://bucket/notebook_file.ipynb`
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookExecutionJobGcsNotebookSource getGcsNotebookSource() {
    return gcsNotebookSource;
  }

  /**
   * The Cloud Storage url pointing to the ipynb file. Format: `gs://bucket/notebook_file.ipynb`
   * @param gcsNotebookSource gcsNotebookSource or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookExecutionJob setGcsNotebookSource(GoogleCloudAiplatformV1NotebookExecutionJobGcsNotebookSource gcsNotebookSource) {
    this.gcsNotebookSource = gcsNotebookSource;
    return this;
  }

  /**
   * The Cloud Storage location to upload the result to. Format: `gs://bucket-name`
   * @return value or {@code null} for none
   */
  public java.lang.String getGcsOutputUri() {
    return gcsOutputUri;
  }

  /**
   * The Cloud Storage location to upload the result to. Format: `gs://bucket-name`
   * @param gcsOutputUri gcsOutputUri or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookExecutionJob setGcsOutputUri(java.lang.String gcsOutputUri) {
    this.gcsOutputUri = gcsOutputUri;
    return this;
  }

  /**
   * Output only. The state of the NotebookExecutionJob.
   * @return value or {@code null} for none
   */
  public java.lang.String getJobState() {
    return jobState;
  }

  /**
   * Output only. The state of the NotebookExecutionJob.
   * @param jobState jobState or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookExecutionJob setJobState(java.lang.String jobState) {
    this.jobState = jobState;
    return this;
  }

  /**
   * The name of the kernel to use during notebook execution. If unset, the default kernel is used.
   * @return value or {@code null} for none
   */
  public java.lang.String getKernelName() {
    return kernelName;
  }

  /**
   * The name of the kernel to use during notebook execution. If unset, the default kernel is used.
   * @param kernelName kernelName or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookExecutionJob setKernelName(java.lang.String kernelName) {
    this.kernelName = kernelName;
    return this;
  }

  /**
   * The labels with user-defined metadata to organize NotebookExecutionJobs. Label keys and values
   * can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters,
   * numeric characters, underscores and dashes. International characters are allowed. See
   * https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys
   * are prefixed with "aiplatform.googleapis.com/" and are immutable.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * The labels with user-defined metadata to organize NotebookExecutionJobs. Label keys and values
   * can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters,
   * numeric characters, underscores and dashes. International characters are allowed. See
   * https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys
   * are prefixed with "aiplatform.googleapis.com/" and are immutable.
   * @param labels labels or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookExecutionJob setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Output only. The resource name of this NotebookExecutionJob. Format:
   * `projects/{project_id}/locations/{location}/notebookExecutionJobs/{job_id}`
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. The resource name of this NotebookExecutionJob. Format:
   * `projects/{project_id}/locations/{location}/notebookExecutionJobs/{job_id}`
   * @param name name or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookExecutionJob setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * The NotebookRuntimeTemplate to source compute configuration from.
   * @return value or {@code null} for none
   */
  public java.lang.String getNotebookRuntimeTemplateResourceName() {
    return notebookRuntimeTemplateResourceName;
  }

  /**
   * The NotebookRuntimeTemplate to source compute configuration from.
   * @param notebookRuntimeTemplateResourceName notebookRuntimeTemplateResourceName or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookExecutionJob setNotebookRuntimeTemplateResourceName(java.lang.String notebookRuntimeTemplateResourceName) {
    this.notebookRuntimeTemplateResourceName = notebookRuntimeTemplateResourceName;
    return this;
  }

  /**
   * The Schedule resource name if this job is triggered by one. Format:
   * `projects/{project_id}/locations/{location}/schedules/{schedule_id}`
   * @return value or {@code null} for none
   */
  public java.lang.String getScheduleResourceName() {
    return scheduleResourceName;
  }

  /**
   * The Schedule resource name if this job is triggered by one. Format:
   * `projects/{project_id}/locations/{location}/schedules/{schedule_id}`
   * @param scheduleResourceName scheduleResourceName or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookExecutionJob setScheduleResourceName(java.lang.String scheduleResourceName) {
    this.scheduleResourceName = scheduleResourceName;
    return this;
  }

  /**
   * The service account to run the execution as.
   * @return value or {@code null} for none
   */
  public java.lang.String getServiceAccount() {
    return serviceAccount;
  }

  /**
   * The service account to run the execution as.
   * @param serviceAccount serviceAccount or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookExecutionJob setServiceAccount(java.lang.String serviceAccount) {
    this.serviceAccount = serviceAccount;
    return this;
  }

  /**
   * Output only. Populated when the NotebookExecutionJob is completed. When there is an error
   * during notebook execution, the error details are populated.
   * @return value or {@code null} for none
   */
  public GoogleRpcStatus getStatus() {
    return status;
  }

  /**
   * Output only. Populated when the NotebookExecutionJob is completed. When there is an error
   * during notebook execution, the error details are populated.
   * @param status status or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookExecutionJob setStatus(GoogleRpcStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Output only. Timestamp when this NotebookExecutionJob was most recently updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. Timestamp when this NotebookExecutionJob was most recently updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookExecutionJob setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  /**
   * The Workbench runtime configuration to use for the notebook execution.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookExecutionJobWorkbenchRuntime getWorkbenchRuntime() {
    return workbenchRuntime;
  }

  /**
   * The Workbench runtime configuration to use for the notebook execution.
   * @param workbenchRuntime workbenchRuntime or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookExecutionJob setWorkbenchRuntime(GoogleCloudAiplatformV1NotebookExecutionJobWorkbenchRuntime workbenchRuntime) {
    this.workbenchRuntime = workbenchRuntime;
    return this;
  }

  @Override
  public GoogleCloudAiplatformV1NotebookExecutionJob set(String fieldName, Object value) {
    return (GoogleCloudAiplatformV1NotebookExecutionJob) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudAiplatformV1NotebookExecutionJob clone() {
    return (GoogleCloudAiplatformV1NotebookExecutionJob) super.clone();
  }

}
