/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Uniquely identifies a semantic role. When this role corresponds to a slot in a registered user
 * intent (see go/assistant-intent-catalog), then the SemanticRoleId maps precisely onto that slot
 * in the intent catalog. However, not all semantic roles corresponds to such user intent slots.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AttentionalEntitiesSemanticRoleId extends com.google.api.client.json.GenericJson {

  /**
   * Semantic roles will be defined locally, within the context of a single task/feature. The
   * |intent_id| is a unique identifier for such a local cluster. In most cases, this should be
   * exactly the same as the name of the intent used for TaskState (see go/assistant-intent-
   * catalog). In cases where the intent isn't well-defined, this can be an arbitrary, feature-
   * defined identifier.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String intentId;

  /**
   * Identifier for a semantic role, unique within the namespace of |intent_id|. When this role
   * corresponds to a slot in the intent, the |role_id| should be equal to the name of that
   * argument. For example, consider an entry in the intent catalog: core_intent { id { id:
   * "BookARide" } slot { name: "provider" type { string_type { } } } slot { name: "num_riders" type
   * { number_type { } } } } Then, the |role_id| would be "provider" or "num_riders" when referring
   * to one of these slots. NOTE: when responding to the user, the Assistant may actually make use
   * of other roles such as "ETA" or "driver" that are not part of the intent declaration. These
   * should still be assigned consistent semantic roles. For example, a dialog with the Shopping
   * feature: User: Where can I buy XYZ? Google: [Best Buy in Sunnyvale] has [XYZ] in stock. User:
   * Great! Give me directions. In this case, both "Best Buy" and "XYZ" would be pushed to
   * attentional entities. Best Buy, in this case, may not be an argument in the
   * ShoppingItemStockInquiry intent, but should still have a consistent |role_id| such as
   * "possessing_business".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String roleId;

  /**
   * Semantic roles will be defined locally, within the context of a single task/feature. The
   * |intent_id| is a unique identifier for such a local cluster. In most cases, this should be
   * exactly the same as the name of the intent used for TaskState (see go/assistant-intent-
   * catalog). In cases where the intent isn't well-defined, this can be an arbitrary, feature-
   * defined identifier.
   * @return value or {@code null} for none
   */
  public java.lang.String getIntentId() {
    return intentId;
  }

  /**
   * Semantic roles will be defined locally, within the context of a single task/feature. The
   * |intent_id| is a unique identifier for such a local cluster. In most cases, this should be
   * exactly the same as the name of the intent used for TaskState (see go/assistant-intent-
   * catalog). In cases where the intent isn't well-defined, this can be an arbitrary, feature-
   * defined identifier.
   * @param intentId intentId or {@code null} for none
   */
  public AttentionalEntitiesSemanticRoleId setIntentId(java.lang.String intentId) {
    this.intentId = intentId;
    return this;
  }

  /**
   * Identifier for a semantic role, unique within the namespace of |intent_id|. When this role
   * corresponds to a slot in the intent, the |role_id| should be equal to the name of that
   * argument. For example, consider an entry in the intent catalog: core_intent { id { id:
   * "BookARide" } slot { name: "provider" type { string_type { } } } slot { name: "num_riders" type
   * { number_type { } } } } Then, the |role_id| would be "provider" or "num_riders" when referring
   * to one of these slots. NOTE: when responding to the user, the Assistant may actually make use
   * of other roles such as "ETA" or "driver" that are not part of the intent declaration. These
   * should still be assigned consistent semantic roles. For example, a dialog with the Shopping
   * feature: User: Where can I buy XYZ? Google: [Best Buy in Sunnyvale] has [XYZ] in stock. User:
   * Great! Give me directions. In this case, both "Best Buy" and "XYZ" would be pushed to
   * attentional entities. Best Buy, in this case, may not be an argument in the
   * ShoppingItemStockInquiry intent, but should still have a consistent |role_id| such as
   * "possessing_business".
   * @return value or {@code null} for none
   */
  public java.lang.String getRoleId() {
    return roleId;
  }

  /**
   * Identifier for a semantic role, unique within the namespace of |intent_id|. When this role
   * corresponds to a slot in the intent, the |role_id| should be equal to the name of that
   * argument. For example, consider an entry in the intent catalog: core_intent { id { id:
   * "BookARide" } slot { name: "provider" type { string_type { } } } slot { name: "num_riders" type
   * { number_type { } } } } Then, the |role_id| would be "provider" or "num_riders" when referring
   * to one of these slots. NOTE: when responding to the user, the Assistant may actually make use
   * of other roles such as "ETA" or "driver" that are not part of the intent declaration. These
   * should still be assigned consistent semantic roles. For example, a dialog with the Shopping
   * feature: User: Where can I buy XYZ? Google: [Best Buy in Sunnyvale] has [XYZ] in stock. User:
   * Great! Give me directions. In this case, both "Best Buy" and "XYZ" would be pushed to
   * attentional entities. Best Buy, in this case, may not be an argument in the
   * ShoppingItemStockInquiry intent, but should still have a consistent |role_id| such as
   * "possessing_business".
   * @param roleId roleId or {@code null} for none
   */
  public AttentionalEntitiesSemanticRoleId setRoleId(java.lang.String roleId) {
    this.roleId = roleId;
    return this;
  }

  @Override
  public AttentionalEntitiesSemanticRoleId set(String fieldName, Object value) {
    return (AttentionalEntitiesSemanticRoleId) super.set(fieldName, value);
  }

  @Override
  public AttentionalEntitiesSemanticRoleId clone() {
    return (AttentionalEntitiesSemanticRoleId) super.clone();
  }

}
