/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Settings related to speech detection. See go/hotword-settings-on-cloud for more info. Next ID: 16
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AssistantApiSettingsSpeechSettings extends com.google.api.client.json.GenericJson {

  /**
   * Indicates whether Continued Conversation is enabled for this device.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean continuedConversationEnabled;

  /**
   * Stores the device model type e.g Pixel.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String deviceModelType;

  /**
   * Whether the device has DSP chip to enable always on hotword detection.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean dspAvailable;

  /**
   * Whether hotword has been enabled by the user during navigation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String hotwordInNavigationEnabled;

  /**
   * Stores hotword setting status for the locales which don't support voice match.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String hotwordSetting;

  /**
   * Whether pin/pattern lockscreen has been enabled by the user.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean lockscreenEnabled;

  /**
   * Stores if Assistant is available for the user's device/locale, where Enabled means it is
   * available and disabled means it is not.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String opaEligibilityState;

  /**
   * Stores if Assistant is available for the user's device/locale. Deprecated as bools do not give
   * accurate true/false ratios due to old clients reporting the default value.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean opaEligible;

  /**
   * Stores the Android SDK version. This comes from android.os.Build.VERSION.SDK_INT.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer sdkVersion;

  /**
   * Whether speaker ID model is present for the user.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean speakerIdModelPresent;

  /**
   * Indicates whether the user has enabled speaker-id (fromAnyScreen/alwaysOn) for this device.
   * Deprecated - use voice_match_setting instead
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean speakerIdRecognitionEnabled;

  /**
   * Indicates whether the user has enabled trusted voice for this device.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean trustedVoiceEnabled;

  /**
   * A bool indicating whether device supports unlocking device with hotword.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean unlockWithHotwordAvailable;

  /**
   * Stores if user was migrated from undecided to declined as apart of Mariko project. Used for
   * potential growth targeting.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean userMigratedToDeclined;

  /**
   * Stores the hotword/voice match setting status for the locales which support voice match.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String voiceMatchSetting;

  /**
   * Indicates whether Continued Conversation is enabled for this device.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getContinuedConversationEnabled() {
    return continuedConversationEnabled;
  }

  /**
   * Indicates whether Continued Conversation is enabled for this device.
   * @param continuedConversationEnabled continuedConversationEnabled or {@code null} for none
   */
  public AssistantApiSettingsSpeechSettings setContinuedConversationEnabled(java.lang.Boolean continuedConversationEnabled) {
    this.continuedConversationEnabled = continuedConversationEnabled;
    return this;
  }

  /**
   * Stores the device model type e.g Pixel.
   * @return value or {@code null} for none
   */
  public java.lang.String getDeviceModelType() {
    return deviceModelType;
  }

  /**
   * Stores the device model type e.g Pixel.
   * @param deviceModelType deviceModelType or {@code null} for none
   */
  public AssistantApiSettingsSpeechSettings setDeviceModelType(java.lang.String deviceModelType) {
    this.deviceModelType = deviceModelType;
    return this;
  }

  /**
   * Whether the device has DSP chip to enable always on hotword detection.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getDspAvailable() {
    return dspAvailable;
  }

  /**
   * Whether the device has DSP chip to enable always on hotword detection.
   * @param dspAvailable dspAvailable or {@code null} for none
   */
  public AssistantApiSettingsSpeechSettings setDspAvailable(java.lang.Boolean dspAvailable) {
    this.dspAvailable = dspAvailable;
    return this;
  }

  /**
   * Whether hotword has been enabled by the user during navigation.
   * @return value or {@code null} for none
   */
  public java.lang.String getHotwordInNavigationEnabled() {
    return hotwordInNavigationEnabled;
  }

  /**
   * Whether hotword has been enabled by the user during navigation.
   * @param hotwordInNavigationEnabled hotwordInNavigationEnabled or {@code null} for none
   */
  public AssistantApiSettingsSpeechSettings setHotwordInNavigationEnabled(java.lang.String hotwordInNavigationEnabled) {
    this.hotwordInNavigationEnabled = hotwordInNavigationEnabled;
    return this;
  }

  /**
   * Stores hotword setting status for the locales which don't support voice match.
   * @return value or {@code null} for none
   */
  public java.lang.String getHotwordSetting() {
    return hotwordSetting;
  }

  /**
   * Stores hotword setting status for the locales which don't support voice match.
   * @param hotwordSetting hotwordSetting or {@code null} for none
   */
  public AssistantApiSettingsSpeechSettings setHotwordSetting(java.lang.String hotwordSetting) {
    this.hotwordSetting = hotwordSetting;
    return this;
  }

  /**
   * Whether pin/pattern lockscreen has been enabled by the user.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getLockscreenEnabled() {
    return lockscreenEnabled;
  }

  /**
   * Whether pin/pattern lockscreen has been enabled by the user.
   * @param lockscreenEnabled lockscreenEnabled or {@code null} for none
   */
  public AssistantApiSettingsSpeechSettings setLockscreenEnabled(java.lang.Boolean lockscreenEnabled) {
    this.lockscreenEnabled = lockscreenEnabled;
    return this;
  }

  /**
   * Stores if Assistant is available for the user's device/locale, where Enabled means it is
   * available and disabled means it is not.
   * @return value or {@code null} for none
   */
  public java.lang.String getOpaEligibilityState() {
    return opaEligibilityState;
  }

  /**
   * Stores if Assistant is available for the user's device/locale, where Enabled means it is
   * available and disabled means it is not.
   * @param opaEligibilityState opaEligibilityState or {@code null} for none
   */
  public AssistantApiSettingsSpeechSettings setOpaEligibilityState(java.lang.String opaEligibilityState) {
    this.opaEligibilityState = opaEligibilityState;
    return this;
  }

  /**
   * Stores if Assistant is available for the user's device/locale. Deprecated as bools do not give
   * accurate true/false ratios due to old clients reporting the default value.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getOpaEligible() {
    return opaEligible;
  }

  /**
   * Stores if Assistant is available for the user's device/locale. Deprecated as bools do not give
   * accurate true/false ratios due to old clients reporting the default value.
   * @param opaEligible opaEligible or {@code null} for none
   */
  public AssistantApiSettingsSpeechSettings setOpaEligible(java.lang.Boolean opaEligible) {
    this.opaEligible = opaEligible;
    return this;
  }

  /**
   * Stores the Android SDK version. This comes from android.os.Build.VERSION.SDK_INT.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getSdkVersion() {
    return sdkVersion;
  }

  /**
   * Stores the Android SDK version. This comes from android.os.Build.VERSION.SDK_INT.
   * @param sdkVersion sdkVersion or {@code null} for none
   */
  public AssistantApiSettingsSpeechSettings setSdkVersion(java.lang.Integer sdkVersion) {
    this.sdkVersion = sdkVersion;
    return this;
  }

  /**
   * Whether speaker ID model is present for the user.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSpeakerIdModelPresent() {
    return speakerIdModelPresent;
  }

  /**
   * Whether speaker ID model is present for the user.
   * @param speakerIdModelPresent speakerIdModelPresent or {@code null} for none
   */
  public AssistantApiSettingsSpeechSettings setSpeakerIdModelPresent(java.lang.Boolean speakerIdModelPresent) {
    this.speakerIdModelPresent = speakerIdModelPresent;
    return this;
  }

  /**
   * Indicates whether the user has enabled speaker-id (fromAnyScreen/alwaysOn) for this device.
   * Deprecated - use voice_match_setting instead
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSpeakerIdRecognitionEnabled() {
    return speakerIdRecognitionEnabled;
  }

  /**
   * Indicates whether the user has enabled speaker-id (fromAnyScreen/alwaysOn) for this device.
   * Deprecated - use voice_match_setting instead
   * @param speakerIdRecognitionEnabled speakerIdRecognitionEnabled or {@code null} for none
   */
  public AssistantApiSettingsSpeechSettings setSpeakerIdRecognitionEnabled(java.lang.Boolean speakerIdRecognitionEnabled) {
    this.speakerIdRecognitionEnabled = speakerIdRecognitionEnabled;
    return this;
  }

  /**
   * Indicates whether the user has enabled trusted voice for this device.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getTrustedVoiceEnabled() {
    return trustedVoiceEnabled;
  }

  /**
   * Indicates whether the user has enabled trusted voice for this device.
   * @param trustedVoiceEnabled trustedVoiceEnabled or {@code null} for none
   */
  public AssistantApiSettingsSpeechSettings setTrustedVoiceEnabled(java.lang.Boolean trustedVoiceEnabled) {
    this.trustedVoiceEnabled = trustedVoiceEnabled;
    return this;
  }

  /**
   * A bool indicating whether device supports unlocking device with hotword.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getUnlockWithHotwordAvailable() {
    return unlockWithHotwordAvailable;
  }

  /**
   * A bool indicating whether device supports unlocking device with hotword.
   * @param unlockWithHotwordAvailable unlockWithHotwordAvailable or {@code null} for none
   */
  public AssistantApiSettingsSpeechSettings setUnlockWithHotwordAvailable(java.lang.Boolean unlockWithHotwordAvailable) {
    this.unlockWithHotwordAvailable = unlockWithHotwordAvailable;
    return this;
  }

  /**
   * Stores if user was migrated from undecided to declined as apart of Mariko project. Used for
   * potential growth targeting.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getUserMigratedToDeclined() {
    return userMigratedToDeclined;
  }

  /**
   * Stores if user was migrated from undecided to declined as apart of Mariko project. Used for
   * potential growth targeting.
   * @param userMigratedToDeclined userMigratedToDeclined or {@code null} for none
   */
  public AssistantApiSettingsSpeechSettings setUserMigratedToDeclined(java.lang.Boolean userMigratedToDeclined) {
    this.userMigratedToDeclined = userMigratedToDeclined;
    return this;
  }

  /**
   * Stores the hotword/voice match setting status for the locales which support voice match.
   * @return value or {@code null} for none
   */
  public java.lang.String getVoiceMatchSetting() {
    return voiceMatchSetting;
  }

  /**
   * Stores the hotword/voice match setting status for the locales which support voice match.
   * @param voiceMatchSetting voiceMatchSetting or {@code null} for none
   */
  public AssistantApiSettingsSpeechSettings setVoiceMatchSetting(java.lang.String voiceMatchSetting) {
    this.voiceMatchSetting = voiceMatchSetting;
    return this;
  }

  @Override
  public AssistantApiSettingsSpeechSettings set(String fieldName, Object value) {
    return (AssistantApiSettingsSpeechSettings) super.set(fieldName, value);
  }

  @Override
  public AssistantApiSettingsSpeechSettings clone() {
    return (AssistantApiSettingsSpeechSettings) super.clone();
  }

}
