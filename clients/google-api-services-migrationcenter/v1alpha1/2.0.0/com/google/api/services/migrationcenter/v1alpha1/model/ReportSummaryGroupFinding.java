/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.migrationcenter.v1alpha1.model;

/**
 * Summary Findings for a specific Group.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Migration Center API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ReportSummaryGroupFinding extends com.google.api.client.json.GenericJson {

  /**
   * Summary statistics for all the assets in this group.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ReportSummaryAssetAggregateStats assetAggregateStats;

  /**
   * Output only. Asset type for the group finding.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String assetType;

  /**
   * Output only. Source asset database type for the group finding. Only present for databases.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String databaseType;

  /**
   * Description for this group finding.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Display Name for this group finding.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Output only. Full name of the group.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String group;

  /**
   * This field is deprecated, do not rely on it having a value.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long overlappingAssetCount;

  /**
   * Findings for each of the PreferenceSets for this group.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<ReportSummaryGroupPreferenceSetFinding> preferenceSetFindings;

  /**
   * Summary statistics for all the assets in this group.
   * @return value or {@code null} for none
   */
  public ReportSummaryAssetAggregateStats getAssetAggregateStats() {
    return assetAggregateStats;
  }

  /**
   * Summary statistics for all the assets in this group.
   * @param assetAggregateStats assetAggregateStats or {@code null} for none
   */
  public ReportSummaryGroupFinding setAssetAggregateStats(ReportSummaryAssetAggregateStats assetAggregateStats) {
    this.assetAggregateStats = assetAggregateStats;
    return this;
  }

  /**
   * Output only. Asset type for the group finding.
   * @return value or {@code null} for none
   */
  public java.lang.String getAssetType() {
    return assetType;
  }

  /**
   * Output only. Asset type for the group finding.
   * @param assetType assetType or {@code null} for none
   */
  public ReportSummaryGroupFinding setAssetType(java.lang.String assetType) {
    this.assetType = assetType;
    return this;
  }

  /**
   * Output only. Source asset database type for the group finding. Only present for databases.
   * @return value or {@code null} for none
   */
  public java.lang.String getDatabaseType() {
    return databaseType;
  }

  /**
   * Output only. Source asset database type for the group finding. Only present for databases.
   * @param databaseType databaseType or {@code null} for none
   */
  public ReportSummaryGroupFinding setDatabaseType(java.lang.String databaseType) {
    this.databaseType = databaseType;
    return this;
  }

  /**
   * Description for this group finding.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Description for this group finding.
   * @param description description or {@code null} for none
   */
  public ReportSummaryGroupFinding setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Display Name for this group finding.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Display Name for this group finding.
   * @param displayName displayName or {@code null} for none
   */
  public ReportSummaryGroupFinding setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Output only. Full name of the group.
   * @return value or {@code null} for none
   */
  public java.lang.String getGroup() {
    return group;
  }

  /**
   * Output only. Full name of the group.
   * @param group group or {@code null} for none
   */
  public ReportSummaryGroupFinding setGroup(java.lang.String group) {
    this.group = group;
    return this;
  }

  /**
   * This field is deprecated, do not rely on it having a value.
   * @return value or {@code null} for none
   */
  public java.lang.Long getOverlappingAssetCount() {
    return overlappingAssetCount;
  }

  /**
   * This field is deprecated, do not rely on it having a value.
   * @param overlappingAssetCount overlappingAssetCount or {@code null} for none
   */
  public ReportSummaryGroupFinding setOverlappingAssetCount(java.lang.Long overlappingAssetCount) {
    this.overlappingAssetCount = overlappingAssetCount;
    return this;
  }

  /**
   * Findings for each of the PreferenceSets for this group.
   * @return value or {@code null} for none
   */
  public java.util.List<ReportSummaryGroupPreferenceSetFinding> getPreferenceSetFindings() {
    return preferenceSetFindings;
  }

  /**
   * Findings for each of the PreferenceSets for this group.
   * @param preferenceSetFindings preferenceSetFindings or {@code null} for none
   */
  public ReportSummaryGroupFinding setPreferenceSetFindings(java.util.List<ReportSummaryGroupPreferenceSetFinding> preferenceSetFindings) {
    this.preferenceSetFindings = preferenceSetFindings;
    return this;
  }

  @Override
  public ReportSummaryGroupFinding set(String fieldName, Object value) {
    return (ReportSummaryGroupFinding) super.set(fieldName, value);
  }

  @Override
  public ReportSummaryGroupFinding clone() {
    return (ReportSummaryGroupFinding) super.clone();
  }

}
