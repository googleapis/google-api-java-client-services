/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dialogflow.v2beta1.model;

/**
 * Represents the selection of a suggestion.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Dialogflow API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDialogflowV2beta1SuggestionInput extends com.google.api.client.json.GenericJson {

  /**
   * Required. The ID of a suggestion selected by the human agent. The suggestion(s) were generated
   * in a previous call to request Dialogflow assist. The format is:
   * `projects//locations//answerRecords/` where is an alphanumeric string.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String answerRecord;

  /**
   * The intent to be triggered on V3 agent.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDialogflowV2beta1IntentInput intentInput;

  /**
   * In Dialogflow assist for v3, the user can submit a form by sending a SuggestionInput. The form
   * is uniquely determined by the answer_record field, which identifies a v3 QueryResult containing
   * the current page. The form parameters are specified via the parameters field. Depending on your
   * protocol or client library language, this is a map, associative array, symbol table,
   * dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: - MapKey type:
   * string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a
   * composite entity: map - Else: depending on parameter value type, could be one of string,
   * number, boolean, null, list or map - MapValue value: - If parameter's entity type is a
   * composite entity: map from composite entity property names to property values - Else: parameter
   * value
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.Object> parameters;

  /**
   * Optional. If the customer edited the suggestion before using it, include the revised text here.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDialogflowV2beta1TextInput textOverride;

  /**
   * Required. The ID of a suggestion selected by the human agent. The suggestion(s) were generated
   * in a previous call to request Dialogflow assist. The format is:
   * `projects//locations//answerRecords/` where is an alphanumeric string.
   * @return value or {@code null} for none
   */
  public java.lang.String getAnswerRecord() {
    return answerRecord;
  }

  /**
   * Required. The ID of a suggestion selected by the human agent. The suggestion(s) were generated
   * in a previous call to request Dialogflow assist. The format is:
   * `projects//locations//answerRecords/` where is an alphanumeric string.
   * @param answerRecord answerRecord or {@code null} for none
   */
  public GoogleCloudDialogflowV2beta1SuggestionInput setAnswerRecord(java.lang.String answerRecord) {
    this.answerRecord = answerRecord;
    return this;
  }

  /**
   * The intent to be triggered on V3 agent.
   * @return value or {@code null} for none
   */
  public GoogleCloudDialogflowV2beta1IntentInput getIntentInput() {
    return intentInput;
  }

  /**
   * The intent to be triggered on V3 agent.
   * @param intentInput intentInput or {@code null} for none
   */
  public GoogleCloudDialogflowV2beta1SuggestionInput setIntentInput(GoogleCloudDialogflowV2beta1IntentInput intentInput) {
    this.intentInput = intentInput;
    return this;
  }

  /**
   * In Dialogflow assist for v3, the user can submit a form by sending a SuggestionInput. The form
   * is uniquely determined by the answer_record field, which identifies a v3 QueryResult containing
   * the current page. The form parameters are specified via the parameters field. Depending on your
   * protocol or client library language, this is a map, associative array, symbol table,
   * dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: - MapKey type:
   * string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a
   * composite entity: map - Else: depending on parameter value type, could be one of string,
   * number, boolean, null, list or map - MapValue value: - If parameter's entity type is a
   * composite entity: map from composite entity property names to property values - Else: parameter
   * value
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.Object> getParameters() {
    return parameters;
  }

  /**
   * In Dialogflow assist for v3, the user can submit a form by sending a SuggestionInput. The form
   * is uniquely determined by the answer_record field, which identifies a v3 QueryResult containing
   * the current page. The form parameters are specified via the parameters field. Depending on your
   * protocol or client library language, this is a map, associative array, symbol table,
   * dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: - MapKey type:
   * string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a
   * composite entity: map - Else: depending on parameter value type, could be one of string,
   * number, boolean, null, list or map - MapValue value: - If parameter's entity type is a
   * composite entity: map from composite entity property names to property values - Else: parameter
   * value
   * @param parameters parameters or {@code null} for none
   */
  public GoogleCloudDialogflowV2beta1SuggestionInput setParameters(java.util.Map<String, java.lang.Object> parameters) {
    this.parameters = parameters;
    return this;
  }

  /**
   * Optional. If the customer edited the suggestion before using it, include the revised text here.
   * @return value or {@code null} for none
   */
  public GoogleCloudDialogflowV2beta1TextInput getTextOverride() {
    return textOverride;
  }

  /**
   * Optional. If the customer edited the suggestion before using it, include the revised text here.
   * @param textOverride textOverride or {@code null} for none
   */
  public GoogleCloudDialogflowV2beta1SuggestionInput setTextOverride(GoogleCloudDialogflowV2beta1TextInput textOverride) {
    this.textOverride = textOverride;
    return this;
  }

  @Override
  public GoogleCloudDialogflowV2beta1SuggestionInput set(String fieldName, Object value) {
    return (GoogleCloudDialogflowV2beta1SuggestionInput) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDialogflowV2beta1SuggestionInput clone() {
    return (GoogleCloudDialogflowV2beta1SuggestionInput) super.clone();
  }

}
