/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Next Tag: 9
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ImageRepositoryS3LangIdSignals extends com.google.api.client.json.GenericJson {

  /**
   * Whether this audio chunk has speech or not.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean containsSpeech;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long endSec;

  /**
   * S3 langID result. We keep langid_result even if contains_speech = false.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SpeechS3LanguageIdentificationResult langidResult;

  /**
   * Converted version of the langid_result field, so that we have the YT compatible version of the
   * langID result.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private VideoTimedtextS4ALIResults languageIdentification;

  /**
   * The version of the model used for S3 LangID service.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String modelVersion;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer speechFrameCount;

  /**
   * The audio chunk which corresponds to this langID result expressed as a start_sec and end_sec.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long startSec;

  /**
   * Count the number of total frames in the audio chunk as well as the number of speech frames.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer totalFrameCount;

  /**
   * Whether this audio chunk has speech or not.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getContainsSpeech() {
    return containsSpeech;
  }

  /**
   * Whether this audio chunk has speech or not.
   * @param containsSpeech containsSpeech or {@code null} for none
   */
  public ImageRepositoryS3LangIdSignals setContainsSpeech(java.lang.Boolean containsSpeech) {
    this.containsSpeech = containsSpeech;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getEndSec() {
    return endSec;
  }

  /**
   * @param endSec endSec or {@code null} for none
   */
  public ImageRepositoryS3LangIdSignals setEndSec(java.lang.Long endSec) {
    this.endSec = endSec;
    return this;
  }

  /**
   * S3 langID result. We keep langid_result even if contains_speech = false.
   * @return value or {@code null} for none
   */
  public SpeechS3LanguageIdentificationResult getLangidResult() {
    return langidResult;
  }

  /**
   * S3 langID result. We keep langid_result even if contains_speech = false.
   * @param langidResult langidResult or {@code null} for none
   */
  public ImageRepositoryS3LangIdSignals setLangidResult(SpeechS3LanguageIdentificationResult langidResult) {
    this.langidResult = langidResult;
    return this;
  }

  /**
   * Converted version of the langid_result field, so that we have the YT compatible version of the
   * langID result.
   * @return value or {@code null} for none
   */
  public VideoTimedtextS4ALIResults getLanguageIdentification() {
    return languageIdentification;
  }

  /**
   * Converted version of the langid_result field, so that we have the YT compatible version of the
   * langID result.
   * @param languageIdentification languageIdentification or {@code null} for none
   */
  public ImageRepositoryS3LangIdSignals setLanguageIdentification(VideoTimedtextS4ALIResults languageIdentification) {
    this.languageIdentification = languageIdentification;
    return this;
  }

  /**
   * The version of the model used for S3 LangID service.
   * @return value or {@code null} for none
   */
  public java.lang.String getModelVersion() {
    return modelVersion;
  }

  /**
   * The version of the model used for S3 LangID service.
   * @param modelVersion modelVersion or {@code null} for none
   */
  public ImageRepositoryS3LangIdSignals setModelVersion(java.lang.String modelVersion) {
    this.modelVersion = modelVersion;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getSpeechFrameCount() {
    return speechFrameCount;
  }

  /**
   * @param speechFrameCount speechFrameCount or {@code null} for none
   */
  public ImageRepositoryS3LangIdSignals setSpeechFrameCount(java.lang.Integer speechFrameCount) {
    this.speechFrameCount = speechFrameCount;
    return this;
  }

  /**
   * The audio chunk which corresponds to this langID result expressed as a start_sec and end_sec.
   * @return value or {@code null} for none
   */
  public java.lang.Long getStartSec() {
    return startSec;
  }

  /**
   * The audio chunk which corresponds to this langID result expressed as a start_sec and end_sec.
   * @param startSec startSec or {@code null} for none
   */
  public ImageRepositoryS3LangIdSignals setStartSec(java.lang.Long startSec) {
    this.startSec = startSec;
    return this;
  }

  /**
   * Count the number of total frames in the audio chunk as well as the number of speech frames.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getTotalFrameCount() {
    return totalFrameCount;
  }

  /**
   * Count the number of total frames in the audio chunk as well as the number of speech frames.
   * @param totalFrameCount totalFrameCount or {@code null} for none
   */
  public ImageRepositoryS3LangIdSignals setTotalFrameCount(java.lang.Integer totalFrameCount) {
    this.totalFrameCount = totalFrameCount;
    return this;
  }

  @Override
  public ImageRepositoryS3LangIdSignals set(String fieldName, Object value) {
    return (ImageRepositoryS3LangIdSignals) super.set(fieldName, value);
  }

  @Override
  public ImageRepositoryS3LangIdSignals clone() {
    return (ImageRepositoryS3LangIdSignals) super.clone();
  }

}
