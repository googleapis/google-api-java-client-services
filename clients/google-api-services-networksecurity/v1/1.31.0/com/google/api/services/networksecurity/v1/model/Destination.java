/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.networksecurity.v1.model;

/**
 * Specification of traffic destination attributes.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Network Security API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Destination extends com.google.api.client.json.GenericJson {

  /**
   * Required. List of host names to match. Matched against the ":authority" header in http
   * requests. At least one host should match. Each host can be an exact match, or a prefix match
   * (example "mydomain.*") or a suffix match (example // *.myorg.com") or a presence(any) match
   * "*".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> hosts;

  /**
   * Optional. Match against key:value pair in http header. Provides a flexible match based on HTTP
   * headers, for potentially advanced use cases. At least one header should match. Avoid using
   * header matches to make authorization decisions unless there is a strong guarantee that requests
   * arrive through a trusted client or proxy.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private HttpHeaderMatch httpHeaderMatch;

  /**
   * Optional. A list of HTTP methods to match. At least one method should match. Should not be set
   * for gRPC services.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> methods;

  /**
   * Required. List of destination ports to match. At least one port should match.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.Long> ports;

  /**
   * Required. List of host names to match. Matched against the ":authority" header in http
   * requests. At least one host should match. Each host can be an exact match, or a prefix match
   * (example "mydomain.*") or a suffix match (example // *.myorg.com") or a presence(any) match
   * "*".
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getHosts() {
    return hosts;
  }

  /**
   * Required. List of host names to match. Matched against the ":authority" header in http
   * requests. At least one host should match. Each host can be an exact match, or a prefix match
   * (example "mydomain.*") or a suffix match (example // *.myorg.com") or a presence(any) match
   * "*".
   * @param hosts hosts or {@code null} for none
   */
  public Destination setHosts(java.util.List<java.lang.String> hosts) {
    this.hosts = hosts;
    return this;
  }

  /**
   * Optional. Match against key:value pair in http header. Provides a flexible match based on HTTP
   * headers, for potentially advanced use cases. At least one header should match. Avoid using
   * header matches to make authorization decisions unless there is a strong guarantee that requests
   * arrive through a trusted client or proxy.
   * @return value or {@code null} for none
   */
  public HttpHeaderMatch getHttpHeaderMatch() {
    return httpHeaderMatch;
  }

  /**
   * Optional. Match against key:value pair in http header. Provides a flexible match based on HTTP
   * headers, for potentially advanced use cases. At least one header should match. Avoid using
   * header matches to make authorization decisions unless there is a strong guarantee that requests
   * arrive through a trusted client or proxy.
   * @param httpHeaderMatch httpHeaderMatch or {@code null} for none
   */
  public Destination setHttpHeaderMatch(HttpHeaderMatch httpHeaderMatch) {
    this.httpHeaderMatch = httpHeaderMatch;
    return this;
  }

  /**
   * Optional. A list of HTTP methods to match. At least one method should match. Should not be set
   * for gRPC services.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getMethods() {
    return methods;
  }

  /**
   * Optional. A list of HTTP methods to match. At least one method should match. Should not be set
   * for gRPC services.
   * @param methods methods or {@code null} for none
   */
  public Destination setMethods(java.util.List<java.lang.String> methods) {
    this.methods = methods;
    return this;
  }

  /**
   * Required. List of destination ports to match. At least one port should match.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Long> getPorts() {
    return ports;
  }

  /**
   * Required. List of destination ports to match. At least one port should match.
   * @param ports ports or {@code null} for none
   */
  public Destination setPorts(java.util.List<java.lang.Long> ports) {
    this.ports = ports;
    return this;
  }

  @Override
  public Destination set(String fieldName, Object value) {
    return (Destination) super.set(fieldName, value);
  }

  @Override
  public Destination clone() {
    return (Destination) super.clone();
  }

}
