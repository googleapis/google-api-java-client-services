/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.healthcare.v1alpha;

/**
 * Service definition for CloudHealthcare (v1alpha).
 *
 * <p>
 * 
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/healthcare" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link CloudHealthcareRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class CloudHealthcare extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.27.0 of the Cloud Healthcare API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://healthcare.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public CloudHealthcare(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  CloudHealthcare(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code CloudHealthcare healthcare = new CloudHealthcare(...);}
   *   {@code CloudHealthcare.Projects.List request = healthcare.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the Locations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code CloudHealthcare healthcare = new CloudHealthcare(...);}
     *   {@code CloudHealthcare.Locations.List request = healthcare.locations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Locations locations() {
      return new Locations();
    }

    /**
     * The "locations" collection of methods.
     */
    public class Locations {

      /**
       * Gets information about a location.
       *
       * Create a request for the method "locations.get".
       *
       * This request holds the parameters needed by the healthcare server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Resource name for the location.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.Location> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

        /**
         * Gets information about a location.
         *
         * Create a request for the method "locations.get".
         *
         * This request holds the parameters needed by the the healthcare server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Resource name for the location.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1alpha.model.Location.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Resource name for the location. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Resource name for the location.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Resource name for the location. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists information about the supported locations for this service.
       *
       * Create a request for the method "locations.list".
       *
       * This request holds the parameters needed by the healthcare server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param name The resource that owns the locations collection, if applicable.
       * @return the request
       */
      public List list(java.lang.String name) throws java.io.IOException {
        List result = new List(name);
        initialize(result);
        return result;
      }

      public class List extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.ListLocationsResponse> {

        private static final String REST_PATH = "v1alpha/{+name}/locations";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Lists information about the supported locations for this service.
         *
         * Create a request for the method "locations.list".
         *
         * This request holds the parameters needed by the the healthcare server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The resource that owns the locations collection, if applicable.
         * @since 1.13
         */
        protected List(java.lang.String name) {
          super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1alpha.model.ListLocationsResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** The resource that owns the locations collection, if applicable. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The resource that owns the locations collection, if applicable.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The resource that owns the locations collection, if applicable. */
        public List setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /** The standard list filter. */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** The standard list filter.
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /** The standard list filter. */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /** The standard list page size. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The standard list page size.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The standard list page size. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** The standard list page token. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** The standard list page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** The standard list page token. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Datasets collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code CloudHealthcare healthcare = new CloudHealthcare(...);}
       *   {@code CloudHealthcare.Datasets.List request = healthcare.datasets().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Datasets datasets() {
        return new Datasets();
      }

      /**
       * The "datasets" collection of methods.
       */
      public class Datasets {

        /**
         * Creates a new health dataset.
         *
         * Create a request for the method "datasets.create".
         *
         * This request holds the parameters needed by the healthcare server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent The name of the project in which the dataset should be created (e.g.,
         *        `projects/{project_id}/locations/{location_id}`).
         * @param content the {@link com.google.api.services.healthcare.v1alpha.model.Dataset}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.healthcare.v1alpha.model.Dataset content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.Dataset> {

          private static final String REST_PATH = "v1alpha/{+parent}/datasets";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a new health dataset.
           *
           * Create a request for the method "datasets.create".
           *
           * This request holds the parameters needed by the the healthcare server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent The name of the project in which the dataset should be created (e.g.,
         *        `projects/{project_id}/locations/{location_id}`).
           * @param content the {@link com.google.api.services.healthcare.v1alpha.model.Dataset}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.healthcare.v1alpha.model.Dataset content) {
            super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1alpha.model.Dataset.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The name of the project in which the dataset should be created (e.g.,
           * `projects/{project_id}/locations/{location_id}`).
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** The name of the project in which the dataset should be created (e.g.,
         `projects/{project_id}/locations/{location_id}`).
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * The name of the project in which the dataset should be created (e.g.,
           * `projects/{project_id}/locations/{location_id}`).
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * The ID of the dataset that is being created. The string must match the following regex:
           * `[\p{L}\p{N}_\-\.]{1,256}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String datasetId;

          /** The ID of the dataset that is being created. The string must match the following regex:
         `[\p{L}\p{N}_\-\.]{1,256}`.
           */
          public java.lang.String getDatasetId() {
            return datasetId;
          }

          /**
           * The ID of the dataset that is being created. The string must match the following regex:
           * `[\p{L}\p{N}_\-\.]{1,256}`.
           */
          public Create setDatasetId(java.lang.String datasetId) {
            this.datasetId = datasetId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Creates a new dataset containing de-identified data from the source dataset. The metadata field
         * type is OperationMetadata. If the request is successful, the response field type is
         * DeidentifySummary. If errors occur, details field type is DeidentifyErrorDetails.
         *
         * Create a request for the method "datasets.deidentify".
         *
         * This request holds the parameters needed by the healthcare server.  After setting any optional
         * parameters, call the {@link Deidentify#execute()} method to invoke the remote operation.
         *
         * @param sourceDataset Source dataset resource name. (e.g.,
         *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`).
         * @param content the {@link com.google.api.services.healthcare.v1alpha.model.DeidentifyDatasetRequest}
         * @return the request
         */
        public Deidentify deidentify(java.lang.String sourceDataset, com.google.api.services.healthcare.v1alpha.model.DeidentifyDatasetRequest content) throws java.io.IOException {
          Deidentify result = new Deidentify(sourceDataset, content);
          initialize(result);
          return result;
        }

        public class Deidentify extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.Operation> {

          private static final String REST_PATH = "v1alpha/{+sourceDataset}:deidentify";

          private final java.util.regex.Pattern SOURCE_DATASET_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");

          /**
           * Creates a new dataset containing de-identified data from the source dataset. The metadata field
           * type is OperationMetadata. If the request is successful, the response field type is
           * DeidentifySummary. If errors occur, details field type is DeidentifyErrorDetails.
           *
           * Create a request for the method "datasets.deidentify".
           *
           * This request holds the parameters needed by the the healthcare server.  After setting any
           * optional parameters, call the {@link Deidentify#execute()} method to invoke the remote
           * operation. <p> {@link
           * Deidentify#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param sourceDataset Source dataset resource name. (e.g.,
         *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`).
           * @param content the {@link com.google.api.services.healthcare.v1alpha.model.DeidentifyDatasetRequest}
           * @since 1.13
           */
          protected Deidentify(java.lang.String sourceDataset, com.google.api.services.healthcare.v1alpha.model.DeidentifyDatasetRequest content) {
            super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1alpha.model.Operation.class);
            this.sourceDataset = com.google.api.client.util.Preconditions.checkNotNull(sourceDataset, "Required parameter sourceDataset must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(SOURCE_DATASET_PATTERN.matcher(sourceDataset).matches(),
                  "Parameter sourceDataset must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
            }
          }

          @Override
          public Deidentify set$Xgafv(java.lang.String $Xgafv) {
            return (Deidentify) super.set$Xgafv($Xgafv);
          }

          @Override
          public Deidentify setAccessToken(java.lang.String accessToken) {
            return (Deidentify) super.setAccessToken(accessToken);
          }

          @Override
          public Deidentify setAlt(java.lang.String alt) {
            return (Deidentify) super.setAlt(alt);
          }

          @Override
          public Deidentify setCallback(java.lang.String callback) {
            return (Deidentify) super.setCallback(callback);
          }

          @Override
          public Deidentify setFields(java.lang.String fields) {
            return (Deidentify) super.setFields(fields);
          }

          @Override
          public Deidentify setKey(java.lang.String key) {
            return (Deidentify) super.setKey(key);
          }

          @Override
          public Deidentify setOauthToken(java.lang.String oauthToken) {
            return (Deidentify) super.setOauthToken(oauthToken);
          }

          @Override
          public Deidentify setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Deidentify) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Deidentify setQuotaUser(java.lang.String quotaUser) {
            return (Deidentify) super.setQuotaUser(quotaUser);
          }

          @Override
          public Deidentify setUploadType(java.lang.String uploadType) {
            return (Deidentify) super.setUploadType(uploadType);
          }

          @Override
          public Deidentify setUploadProtocol(java.lang.String uploadProtocol) {
            return (Deidentify) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Source dataset resource name. (e.g.,
           * `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`).
           */
          @com.google.api.client.util.Key
          private java.lang.String sourceDataset;

          /** Source dataset resource name. (e.g.,
         `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`).
           */
          public java.lang.String getSourceDataset() {
            return sourceDataset;
          }

          /**
           * Source dataset resource name. (e.g.,
           * `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`).
           */
          public Deidentify setSourceDataset(java.lang.String sourceDataset) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(SOURCE_DATASET_PATTERN.matcher(sourceDataset).matches(),
                  "Parameter sourceDataset must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
            }
            this.sourceDataset = sourceDataset;
            return this;
          }

          @Override
          public Deidentify set(String parameterName, Object value) {
            return (Deidentify) super.set(parameterName, value);
          }
        }
        /**
         * Deletes the specified health dataset and all data contained in the dataset. Deleting a dataset
         * does not affect the sources from which the dataset was imported (if any).
         *
         * Create a request for the method "datasets.delete".
         *
         * This request holds the parameters needed by the healthcare server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name The name of the dataset to delete (e.g.,
         *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`).
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.Empty> {

          private static final String REST_PATH = "v1alpha/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");

          /**
           * Deletes the specified health dataset and all data contained in the dataset. Deleting a dataset
           * does not affect the sources from which the dataset was imported (if any).
           *
           * Create a request for the method "datasets.delete".
           *
           * This request holds the parameters needed by the the healthcare server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the dataset to delete (e.g.,
         *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`).
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(CloudHealthcare.this, "DELETE", REST_PATH, null, com.google.api.services.healthcare.v1alpha.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The name of the dataset to delete (e.g.,
           * `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`).
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the dataset to delete (e.g.,
         `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`).
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The name of the dataset to delete (e.g.,
           * `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`).
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets any metadata associated with a dataset.
         *
         * Create a request for the method "datasets.get".
         *
         * This request holds the parameters needed by the healthcare server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name The name of the dataset to read (e.g.,
         *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`).
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.Dataset> {

          private static final String REST_PATH = "v1alpha/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");

          /**
           * Gets any metadata associated with a dataset.
           *
           * Create a request for the method "datasets.get".
           *
           * This request holds the parameters needed by the the healthcare server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the dataset to read (e.g.,
         *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`).
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1alpha.model.Dataset.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The name of the dataset to read (e.g.,
           * `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`).
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the dataset to read (e.g.,
         `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`).
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The name of the dataset to read (e.g.,
           * `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`).
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
         * does not have a policy set.
         *
         * Create a request for the method "datasets.getIamPolicy".
         *
         * This request holds the parameters needed by the healthcare server.  After setting any optional
         * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being requested.
        See the operation documentation for
         *        the appropriate value for this field.
         * @return the request
         */
        public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
          GetIamPolicy result = new GetIamPolicy(resource);
          initialize(result);
          return result;
        }

        public class GetIamPolicy extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.Policy> {

          private static final String REST_PATH = "v1alpha/{+resource}:getIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");

          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists
           * and does not have a policy set.
           *
           * Create a request for the method "datasets.getIamPolicy".
           *
           * This request holds the parameters needed by the the healthcare server.  After setting any
           * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being requested.
        See the operation documentation for
         *        the appropriate value for this field.
           * @since 1.13
           */
          protected GetIamPolicy(java.lang.String resource) {
            super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1alpha.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (GetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (GetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public GetIamPolicy setAlt(java.lang.String alt) {
            return (GetIamPolicy) super.setAlt(alt);
          }

          @Override
          public GetIamPolicy setCallback(java.lang.String callback) {
            return (GetIamPolicy) super.setCallback(callback);
          }

          @Override
          public GetIamPolicy setFields(java.lang.String fields) {
            return (GetIamPolicy) super.setFields(fields);
          }

          @Override
          public GetIamPolicy setKey(java.lang.String key) {
            return (GetIamPolicy) super.setKey(key);
          }

          @Override
          public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (GetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (GetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetIamPolicy setUploadType(java.lang.String uploadType) {
            return (GetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See the operation
           * documentation for the appropriate value for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being requested. See the operation documentation for
         the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See the operation
           * documentation for the appropriate value for this field.
           */
          public GetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public GetIamPolicy set(String parameterName, Object value) {
            return (GetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Lists the health datasets in the current project.
         *
         * Create a request for the method "datasets.list".
         *
         * This request holds the parameters needed by the healthcare server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent The name of the project whose datasets should be listed (e.g.,
         *        `projects/{project_id}/locations/{location_id}`).
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.ListDatasetsResponse> {

          private static final String REST_PATH = "v1alpha/{+parent}/datasets";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists the health datasets in the current project.
           *
           * Create a request for the method "datasets.list".
           *
           * This request holds the parameters needed by the the healthcare server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent The name of the project whose datasets should be listed (e.g.,
         *        `projects/{project_id}/locations/{location_id}`).
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1alpha.model.ListDatasetsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The name of the project whose datasets should be listed (e.g.,
           * `projects/{project_id}/locations/{location_id}`).
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** The name of the project whose datasets should be listed (e.g.,
         `projects/{project_id}/locations/{location_id}`).
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * The name of the project whose datasets should be listed (e.g.,
           * `projects/{project_id}/locations/{location_id}`).
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * The maximum number of items to return. Capped to 100 if not specified. May not be
           * larger than 1000.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of items to return. Capped to 100 if not specified. May not be larger than 1000.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * The maximum number of items to return. Capped to 100 if not specified. May not be
           * larger than 1000.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The next_page_token value returned from a previous List request, if any. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The next_page_token value returned from a previous List request, if any.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The next_page_token value returned from a previous List request, if any. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates dataset metadata.
         *
         * Create a request for the method "datasets.patch".
         *
         * This request holds the parameters needed by the healthcare server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Output only. Resource name of the dataset, of the form
         *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`.
         * @param content the {@link com.google.api.services.healthcare.v1alpha.model.Dataset}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.healthcare.v1alpha.model.Dataset content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.Dataset> {

          private static final String REST_PATH = "v1alpha/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");

          /**
           * Updates dataset metadata.
           *
           * Create a request for the method "datasets.patch".
           *
           * This request holds the parameters needed by the the healthcare server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Output only. Resource name of the dataset, of the form
         *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`.
           * @param content the {@link com.google.api.services.healthcare.v1alpha.model.Dataset}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.healthcare.v1alpha.model.Dataset content) {
            super(CloudHealthcare.this, "PATCH", REST_PATH, content, com.google.api.services.healthcare.v1alpha.model.Dataset.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Output only. Resource name of the dataset, of the form
           * `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Output only. Resource name of the dataset, of the form
         `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Output only. Resource name of the dataset, of the form
           * `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`.
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * The update mask applies to the resource. For the `FieldMask` definition, see
           * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** The update mask applies to the resource. For the `FieldMask` definition, see
         https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * The update mask applies to the resource. For the `FieldMask` definition, see
           * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Sets the access control policy on the specified resource. Replaces any existing policy.
         *
         * Create a request for the method "datasets.setIamPolicy".
         *
         * This request holds the parameters needed by the healthcare server.  After setting any optional
         * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being specified.
        See the operation documentation for
         *        the appropriate value for this field.
         * @param content the {@link com.google.api.services.healthcare.v1alpha.model.SetIamPolicyRequest}
         * @return the request
         */
        public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.healthcare.v1alpha.model.SetIamPolicyRequest content) throws java.io.IOException {
          SetIamPolicy result = new SetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class SetIamPolicy extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.Policy> {

          private static final String REST_PATH = "v1alpha/{+resource}:setIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");

          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy.
           *
           * Create a request for the method "datasets.setIamPolicy".
           *
           * This request holds the parameters needed by the the healthcare server.  After setting any
           * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being specified.
        See the operation documentation for
         *        the appropriate value for this field.
           * @param content the {@link com.google.api.services.healthcare.v1alpha.model.SetIamPolicyRequest}
           * @since 1.13
           */
          protected SetIamPolicy(java.lang.String resource, com.google.api.services.healthcare.v1alpha.model.SetIamPolicyRequest content) {
            super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1alpha.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
            }
          }

          @Override
          public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (SetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public SetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (SetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public SetIamPolicy setAlt(java.lang.String alt) {
            return (SetIamPolicy) super.setAlt(alt);
          }

          @Override
          public SetIamPolicy setCallback(java.lang.String callback) {
            return (SetIamPolicy) super.setCallback(callback);
          }

          @Override
          public SetIamPolicy setFields(java.lang.String fields) {
            return (SetIamPolicy) super.setFields(fields);
          }

          @Override
          public SetIamPolicy setKey(java.lang.String key) {
            return (SetIamPolicy) super.setKey(key);
          }

          @Override
          public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (SetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (SetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public SetIamPolicy setUploadType(java.lang.String uploadType) {
            return (SetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See the operation
           * documentation for the appropriate value for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being specified. See the operation documentation for
         the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See the operation
           * documentation for the appropriate value for this field.
           */
          public SetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public SetIamPolicy set(String parameterName, Object value) {
            return (SetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Returns permissions that a caller has on the specified resource. If the resource does not exist,
         * this will return an empty set of permissions, not a NOT_FOUND error.
         *
         * Note: This operation is designed to be used for building permission-aware UIs and command-line
         * tools, not for authorization checking. This operation may "fail open" without warning.
         *
         * Create a request for the method "datasets.testIamPermissions".
         *
         * This request holds the parameters needed by the healthcare server.  After setting any optional
         * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested.
        See the operation
         *        documentation for the appropriate value for this field.
         * @param content the {@link com.google.api.services.healthcare.v1alpha.model.TestIamPermissionsRequest}
         * @return the request
         */
        public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.healthcare.v1alpha.model.TestIamPermissionsRequest content) throws java.io.IOException {
          TestIamPermissions result = new TestIamPermissions(resource, content);
          initialize(result);
          return result;
        }

        public class TestIamPermissions extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.TestIamPermissionsResponse> {

          private static final String REST_PATH = "v1alpha/{+resource}:testIamPermissions";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");

          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not
           * exist, this will return an empty set of permissions, not a NOT_FOUND error.
           *
           * Note: This operation is designed to be used for building permission-aware UIs and command-line
           * tools, not for authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "datasets.testIamPermissions".
           *
           * This request holds the parameters needed by the the healthcare server.  After setting any
           * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
           * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
           * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested.
        See the operation
         *        documentation for the appropriate value for this field.
           * @param content the {@link com.google.api.services.healthcare.v1alpha.model.TestIamPermissionsRequest}
           * @since 1.13
           */
          protected TestIamPermissions(java.lang.String resource, com.google.api.services.healthcare.v1alpha.model.TestIamPermissionsRequest content) {
            super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1alpha.model.TestIamPermissionsResponse.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
            }
          }

          @Override
          public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
            return (TestIamPermissions) super.set$Xgafv($Xgafv);
          }

          @Override
          public TestIamPermissions setAccessToken(java.lang.String accessToken) {
            return (TestIamPermissions) super.setAccessToken(accessToken);
          }

          @Override
          public TestIamPermissions setAlt(java.lang.String alt) {
            return (TestIamPermissions) super.setAlt(alt);
          }

          @Override
          public TestIamPermissions setCallback(java.lang.String callback) {
            return (TestIamPermissions) super.setCallback(callback);
          }

          @Override
          public TestIamPermissions setFields(java.lang.String fields) {
            return (TestIamPermissions) super.setFields(fields);
          }

          @Override
          public TestIamPermissions setKey(java.lang.String key) {
            return (TestIamPermissions) super.setKey(key);
          }

          @Override
          public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
            return (TestIamPermissions) super.setOauthToken(oauthToken);
          }

          @Override
          public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
            return (TestIamPermissions) super.setQuotaUser(quotaUser);
          }

          @Override
          public TestIamPermissions setUploadType(java.lang.String uploadType) {
            return (TestIamPermissions) super.setUploadType(uploadType);
          }

          @Override
          public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
            return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See the
           * operation documentation for the appropriate value for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy detail is being requested. See the operation
         documentation for the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See the
           * operation documentation for the appropriate value for this field.
           */
          public TestIamPermissions setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public TestIamPermissions set(String parameterName, Object value) {
            return (TestIamPermissions) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the AnnotationStores collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code CloudHealthcare healthcare = new CloudHealthcare(...);}
         *   {@code CloudHealthcare.AnnotationStores.List request = healthcare.annotationStores().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public AnnotationStores annotationStores() {
          return new AnnotationStores();
        }

        /**
         * The "annotationStores" collection of methods.
         */
        public class AnnotationStores {

          /**
           * Creates a new Annotation store within the parent dataset.
           *
           * Create a request for the method "annotationStores.create".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent The name of the dataset this Annotation store belongs to.
           * @param content the {@link com.google.api.services.healthcare.v1alpha.model.AnnotationStore}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.healthcare.v1alpha.model.AnnotationStore content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.AnnotationStore> {

            private static final String REST_PATH = "v1alpha/{+parent}/annotationStores";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");

            /**
             * Creates a new Annotation store within the parent dataset.
             *
             * Create a request for the method "annotationStores.create".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent The name of the dataset this Annotation store belongs to.
             * @param content the {@link com.google.api.services.healthcare.v1alpha.model.AnnotationStore}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.healthcare.v1alpha.model.AnnotationStore content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1alpha.model.AnnotationStore.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the dataset this Annotation store belongs to. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** The name of the dataset this Annotation store belongs to.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** The name of the dataset this Annotation store belongs to. */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * The ID of the Annotation store that is being created. The string must match the
             * following regex: `[\p{L}\p{N}_\-\.]{1,256}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String annotationStoreId;

            /** The ID of the Annotation store that is being created. The string must match the following regex:
           `[\p{L}\p{N}_\-\.]{1,256}`.
             */
            public java.lang.String getAnnotationStoreId() {
              return annotationStoreId;
            }

            /**
             * The ID of the Annotation store that is being created. The string must match the
             * following regex: `[\p{L}\p{N}_\-\.]{1,256}`.
             */
            public Create setAnnotationStoreId(java.lang.String annotationStoreId) {
              this.annotationStoreId = annotationStoreId;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes the specified Annotation store and removes all annotations that are contained within it.
           *
           * Create a request for the method "annotationStores.delete".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name The resource name of the Annotation store to delete.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.Empty> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+$");

            /**
             * Deletes the specified Annotation store and removes all annotations that are contained within
             * it.
             *
             * Create a request for the method "annotationStores.delete".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The resource name of the Annotation store to delete.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(CloudHealthcare.this, "DELETE", REST_PATH, null, com.google.api.services.healthcare.v1alpha.model.Empty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** The resource name of the Annotation store to delete. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The resource name of the Annotation store to delete.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The resource name of the Annotation store to delete. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets the specified Annotation store or returns NOT_FOUND if it does not exist.
           *
           * Create a request for the method "annotationStores.get".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name The resource name of the Annotation store to get.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.AnnotationStore> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+$");

            /**
             * Gets the specified Annotation store or returns NOT_FOUND if it does not exist.
             *
             * Create a request for the method "annotationStores.get".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The resource name of the Annotation store to get.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1alpha.model.AnnotationStore.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** The resource name of the Annotation store to get. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The resource name of the Annotation store to get.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The resource name of the Annotation store to get. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Gets the access control policy for a resource. Returns NOT_FOUND error if the resource does not
           * exist. Returns an empty policy if the resource exists but does not have a policy set.
           *
           * Authorization requires the Google IAM permission `healthcare.AnnotationStores.getIamPolicy` on
           * the specified resource
           *
           * Create a request for the method "annotationStores.getIamPolicy".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy is being requested.
          See the operation documentation for
           *        the appropriate value for this field.
           * @param content the {@link com.google.api.services.healthcare.v1alpha.model.GetIamPolicyRequest}
           * @return the request
           */
          public GetIamPolicy getIamPolicy(java.lang.String resource, com.google.api.services.healthcare.v1alpha.model.GetIamPolicyRequest content) throws java.io.IOException {
            GetIamPolicy result = new GetIamPolicy(resource, content);
            initialize(result);
            return result;
          }

          public class GetIamPolicy extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.Policy> {

            private static final String REST_PATH = "v1alpha/{+resource}:getIamPolicy";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+$");

            /**
             * Gets the access control policy for a resource. Returns NOT_FOUND error if the resource does not
             * exist. Returns an empty policy if the resource exists but does not have a policy set.
             *
             * Authorization requires the Google IAM permission `healthcare.AnnotationStores.getIamPolicy` on
             * the specified resource
             *
             * Create a request for the method "annotationStores.getIamPolicy".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
             * operation. <p> {@link
             * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy is being requested.
          See the operation documentation for
           *        the appropriate value for this field.
             * @param content the {@link com.google.api.services.healthcare.v1alpha.model.GetIamPolicyRequest}
             * @since 1.13
             */
            protected GetIamPolicy(java.lang.String resource, com.google.api.services.healthcare.v1alpha.model.GetIamPolicyRequest content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1alpha.model.Policy.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+$");
              }
            }

            @Override
            public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
              return (GetIamPolicy) super.set$Xgafv($Xgafv);
            }

            @Override
            public GetIamPolicy setAccessToken(java.lang.String accessToken) {
              return (GetIamPolicy) super.setAccessToken(accessToken);
            }

            @Override
            public GetIamPolicy setAlt(java.lang.String alt) {
              return (GetIamPolicy) super.setAlt(alt);
            }

            @Override
            public GetIamPolicy setCallback(java.lang.String callback) {
              return (GetIamPolicy) super.setCallback(callback);
            }

            @Override
            public GetIamPolicy setFields(java.lang.String fields) {
              return (GetIamPolicy) super.setFields(fields);
            }

            @Override
            public GetIamPolicy setKey(java.lang.String key) {
              return (GetIamPolicy) super.setKey(key);
            }

            @Override
            public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
              return (GetIamPolicy) super.setOauthToken(oauthToken);
            }

            @Override
            public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
              return (GetIamPolicy) super.setQuotaUser(quotaUser);
            }

            @Override
            public GetIamPolicy setUploadType(java.lang.String uploadType) {
              return (GetIamPolicy) super.setUploadType(uploadType);
            }

            @Override
            public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
              return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy is being requested. See the operation
             * documentation for the appropriate value for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy is being requested. See the operation documentation for
           the appropriate value for this field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy is being requested. See the operation
             * documentation for the appropriate value for this field.
             */
            public GetIamPolicy setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public GetIamPolicy set(String parameterName, Object value) {
              return (GetIamPolicy) super.set(parameterName, value);
            }
          }
          /**
           * Lists the Annotation stores in the given dataset for a source store.
           *
           * Create a request for the method "annotationStores.list".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Name of the dataset.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.ListAnnotationStoresResponse> {

            private static final String REST_PATH = "v1alpha/{+parent}/annotationStores";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");

            /**
             * Lists the Annotation stores in the given dataset for a source store.
             *
             * Create a request for the method "annotationStores.list".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Name of the dataset.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1alpha.model.ListAnnotationStoresResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** Name of the dataset. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Name of the dataset.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Name of the dataset. */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Restricts stores returned to those matching a filter. Syntax:
             * https://cloud.google.com/appengine/docs/standard/python/search/query_strings Only
             * filtering on labels is supported, for example `labels.key=value`.
             */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Restricts stores returned to those matching a filter. Syntax:
           https://cloud.google.com/appengine/docs/standard/python/search/query_strings Only filtering on
           labels is supported, for example `labels.key=value`.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /**
             * Restricts stores returned to those matching a filter. Syntax:
             * https://cloud.google.com/appengine/docs/standard/python/search/query_strings Only
             * filtering on labels is supported, for example `labels.key=value`.
             */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /**
             * Limit on the number of Annotation stores to return in a single response. If zero the
             * default page size of 100 is used.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Limit on the number of Annotation stores to return in a single response. If zero the default page
           size of 100 is used.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Limit on the number of Annotation stores to return in a single response. If zero the
             * default page size of 100 is used.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The next_page_token value returned from the previous List request, if any. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The next_page_token value returned from the previous List request, if any.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The next_page_token value returned from the previous List request, if any. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates the specified Annotation store.
           *
           * Create a request for the method "annotationStores.patch".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Output only. Resource name of the Annotation store, of the form
          `projects/{project_id}/locations/{lo
           *        cation_id}/datasets/{dataset_id}/annotationStores/{annotation_store_id}`.
           * @param content the {@link com.google.api.services.healthcare.v1alpha.model.AnnotationStore}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.healthcare.v1alpha.model.AnnotationStore content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.AnnotationStore> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+$");

            /**
             * Updates the specified Annotation store.
             *
             * Create a request for the method "annotationStores.patch".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Output only. Resource name of the Annotation store, of the form
          `projects/{project_id}/locations/{lo
           *        cation_id}/datasets/{dataset_id}/annotationStores/{annotation_store_id}`.
             * @param content the {@link com.google.api.services.healthcare.v1alpha.model.AnnotationStore}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.healthcare.v1alpha.model.AnnotationStore content) {
              super(CloudHealthcare.this, "PATCH", REST_PATH, content, com.google.api.services.healthcare.v1alpha.model.AnnotationStore.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Output only. Resource name of the Annotation store, of the form `projects/{project_id
             * }/locations/{location_id}/datasets/{dataset_id}/annotationStores/{annotation_store_id
             * }`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Output only. Resource name of the Annotation store, of the form `projects/{project_id}/locations/{l
           ocation_id}/datasets/{dataset_id}/annotationStores/{annotation_store_id}`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Output only. Resource name of the Annotation store, of the form `projects/{project_id
             * }/locations/{location_id}/datasets/{dataset_id}/annotationStores/{annotation_store_id
             * }`.
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * The update mask applies to the resource. For the `FieldMask` definition, see
             * https://developers.google.com/protocol-
             * buffers/docs/reference/google.protobuf#fieldmask
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** The update mask applies to the resource. For the `FieldMask` definition, see
           https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * The update mask applies to the resource. For the `FieldMask` definition, see
             * https://developers.google.com/protocol-
             * buffers/docs/reference/google.protobuf#fieldmask
             */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }
          /**
           * POLICIES Sets the access control policy for a resource. Replaces any existing policy.
           *
           * Authorization requires the Google IAM permission 'healthcare.annotationStores.setIamPolicy' on
           * the specified resource
           *
           * Create a request for the method "annotationStores.setIamPolicy".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy is being specified.
          See the operation documentation for
           *        the appropriate value for this field.
           * @param content the {@link com.google.api.services.healthcare.v1alpha.model.SetIamPolicyRequest}
           * @return the request
           */
          public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.healthcare.v1alpha.model.SetIamPolicyRequest content) throws java.io.IOException {
            SetIamPolicy result = new SetIamPolicy(resource, content);
            initialize(result);
            return result;
          }

          public class SetIamPolicy extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.Policy> {

            private static final String REST_PATH = "v1alpha/{+resource}:setIamPolicy";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+$");

            /**
             * POLICIES Sets the access control policy for a resource. Replaces any existing policy.
             *
             * Authorization requires the Google IAM permission 'healthcare.annotationStores.setIamPolicy' on
             * the specified resource
             *
             * Create a request for the method "annotationStores.setIamPolicy".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
             * operation. <p> {@link
             * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy is being specified.
          See the operation documentation for
           *        the appropriate value for this field.
             * @param content the {@link com.google.api.services.healthcare.v1alpha.model.SetIamPolicyRequest}
             * @since 1.13
             */
            protected SetIamPolicy(java.lang.String resource, com.google.api.services.healthcare.v1alpha.model.SetIamPolicyRequest content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1alpha.model.Policy.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+$");
              }
            }

            @Override
            public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
              return (SetIamPolicy) super.set$Xgafv($Xgafv);
            }

            @Override
            public SetIamPolicy setAccessToken(java.lang.String accessToken) {
              return (SetIamPolicy) super.setAccessToken(accessToken);
            }

            @Override
            public SetIamPolicy setAlt(java.lang.String alt) {
              return (SetIamPolicy) super.setAlt(alt);
            }

            @Override
            public SetIamPolicy setCallback(java.lang.String callback) {
              return (SetIamPolicy) super.setCallback(callback);
            }

            @Override
            public SetIamPolicy setFields(java.lang.String fields) {
              return (SetIamPolicy) super.setFields(fields);
            }

            @Override
            public SetIamPolicy setKey(java.lang.String key) {
              return (SetIamPolicy) super.setKey(key);
            }

            @Override
            public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
              return (SetIamPolicy) super.setOauthToken(oauthToken);
            }

            @Override
            public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
              return (SetIamPolicy) super.setQuotaUser(quotaUser);
            }

            @Override
            public SetIamPolicy setUploadType(java.lang.String uploadType) {
              return (SetIamPolicy) super.setUploadType(uploadType);
            }

            @Override
            public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
              return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy is being specified. See the operation
             * documentation for the appropriate value for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy is being specified. See the operation documentation for
           the appropriate value for this field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy is being specified. See the operation
             * documentation for the appropriate value for this field.
             */
            public SetIamPolicy setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public SetIamPolicy set(String parameterName, Object value) {
              return (SetIamPolicy) super.set(parameterName, value);
            }
          }
          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not exist,
           * this will return an empty set of permissions, not a NOT_FOUND error.
           *
           * There is no permission required to make this API call.
           *
           * Create a request for the method "annotationStores.testIamPermissions".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested.
          See the operation
           *        documentation for the appropriate value for this field.
           * @param content the {@link com.google.api.services.healthcare.v1alpha.model.TestIamPermissionsRequest}
           * @return the request
           */
          public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.healthcare.v1alpha.model.TestIamPermissionsRequest content) throws java.io.IOException {
            TestIamPermissions result = new TestIamPermissions(resource, content);
            initialize(result);
            return result;
          }

          public class TestIamPermissions extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.TestIamPermissionsResponse> {

            private static final String REST_PATH = "v1alpha/{+resource}:testIamPermissions";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+$");

            /**
             * Returns permissions that a caller has on the specified resource. If the resource does not
             * exist, this will return an empty set of permissions, not a NOT_FOUND error.
             *
             * There is no permission required to make this API call.
             *
             * Create a request for the method "annotationStores.testIamPermissions".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
             * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
             * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy detail is being requested.
          See the operation
           *        documentation for the appropriate value for this field.
             * @param content the {@link com.google.api.services.healthcare.v1alpha.model.TestIamPermissionsRequest}
             * @since 1.13
             */
            protected TestIamPermissions(java.lang.String resource, com.google.api.services.healthcare.v1alpha.model.TestIamPermissionsRequest content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1alpha.model.TestIamPermissionsResponse.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+$");
              }
            }

            @Override
            public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
              return (TestIamPermissions) super.set$Xgafv($Xgafv);
            }

            @Override
            public TestIamPermissions setAccessToken(java.lang.String accessToken) {
              return (TestIamPermissions) super.setAccessToken(accessToken);
            }

            @Override
            public TestIamPermissions setAlt(java.lang.String alt) {
              return (TestIamPermissions) super.setAlt(alt);
            }

            @Override
            public TestIamPermissions setCallback(java.lang.String callback) {
              return (TestIamPermissions) super.setCallback(callback);
            }

            @Override
            public TestIamPermissions setFields(java.lang.String fields) {
              return (TestIamPermissions) super.setFields(fields);
            }

            @Override
            public TestIamPermissions setKey(java.lang.String key) {
              return (TestIamPermissions) super.setKey(key);
            }

            @Override
            public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
              return (TestIamPermissions) super.setOauthToken(oauthToken);
            }

            @Override
            public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
              return (TestIamPermissions) super.setQuotaUser(quotaUser);
            }

            @Override
            public TestIamPermissions setUploadType(java.lang.String uploadType) {
              return (TestIamPermissions) super.setUploadType(uploadType);
            }

            @Override
            public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
              return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy detail is being requested. See the
             * operation documentation for the appropriate value for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy detail is being requested. See the operation
           documentation for the appropriate value for this field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy detail is being requested. See the
             * operation documentation for the appropriate value for this field.
             */
            public TestIamPermissions setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public TestIamPermissions set(String parameterName, Object value) {
              return (TestIamPermissions) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the Annotations collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code CloudHealthcare healthcare = new CloudHealthcare(...);}
           *   {@code CloudHealthcare.Annotations.List request = healthcare.annotations().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Annotations annotations() {
            return new Annotations();
          }

          /**
           * The "annotations" collection of methods.
           */
          public class Annotations {

            /**
             * Creates a new Annotation record. It is valid to create Annotation objects for the same source
             * more than once since a unique ID is assigned to each record by this service.
             *
             * Create a request for the method "annotations.create".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Create#execute()} method to invoke the remote operation.
             *
             * @param parent The name of the Annotation store this annotation belongs to. For example,
            `projects/my-
             *        project/locations/us-central1/datasets/mydataset/annotationStores/myannotationstore`.
             * @param content the {@link com.google.api.services.healthcare.v1alpha.model.Annotation}
             * @return the request
             */
            public Create create(java.lang.String parent, com.google.api.services.healthcare.v1alpha.model.Annotation content) throws java.io.IOException {
              Create result = new Create(parent, content);
              initialize(result);
              return result;
            }

            public class Create extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.Annotation> {

              private static final String REST_PATH = "v1alpha/{+parent}/annotations";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+$");

              /**
               * Creates a new Annotation record. It is valid to create Annotation objects for the same source
               * more than once since a unique ID is assigned to each record by this service.
               *
               * Create a request for the method "annotations.create".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
               * <p> {@link
               * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent The name of the Annotation store this annotation belongs to. For example,
            `projects/my-
             *        project/locations/us-central1/datasets/mydataset/annotationStores/myannotationstore`.
               * @param content the {@link com.google.api.services.healthcare.v1alpha.model.Annotation}
               * @since 1.13
               */
              protected Create(java.lang.String parent, com.google.api.services.healthcare.v1alpha.model.Annotation content) {
                super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1alpha.model.Annotation.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+$");
                }
              }

              @Override
              public Create set$Xgafv(java.lang.String $Xgafv) {
                return (Create) super.set$Xgafv($Xgafv);
              }

              @Override
              public Create setAccessToken(java.lang.String accessToken) {
                return (Create) super.setAccessToken(accessToken);
              }

              @Override
              public Create setAlt(java.lang.String alt) {
                return (Create) super.setAlt(alt);
              }

              @Override
              public Create setCallback(java.lang.String callback) {
                return (Create) super.setCallback(callback);
              }

              @Override
              public Create setFields(java.lang.String fields) {
                return (Create) super.setFields(fields);
              }

              @Override
              public Create setKey(java.lang.String key) {
                return (Create) super.setKey(key);
              }

              @Override
              public Create setOauthToken(java.lang.String oauthToken) {
                return (Create) super.setOauthToken(oauthToken);
              }

              @Override
              public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Create) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Create setQuotaUser(java.lang.String quotaUser) {
                return (Create) super.setQuotaUser(quotaUser);
              }

              @Override
              public Create setUploadType(java.lang.String uploadType) {
                return (Create) super.setUploadType(uploadType);
              }

              @Override
              public Create setUploadProtocol(java.lang.String uploadProtocol) {
                return (Create) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * The name of the Annotation store this annotation belongs to. For example, `projects
               * /my-project/locations/us-
               * central1/datasets/mydataset/annotationStores/myannotationstore`.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** The name of the Annotation store this annotation belongs to. For example, `projects/my-
             project/locations/us-central1/datasets/mydataset/annotationStores/myannotationstore`.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * The name of the Annotation store this annotation belongs to. For example, `projects
               * /my-project/locations/us-
               * central1/datasets/mydataset/annotationStores/myannotationstore`.
               */
              public Create setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public Create set(String parameterName, Object value) {
                return (Create) super.set(parameterName, value);
              }
            }
            /**
             * Deletes an Annotation or returns NOT_FOUND if it does not exist.
             *
             * Create a request for the method "annotations.delete".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param name The resource name of the Annotation to delete.
             * @return the request
             */
            public Delete delete(java.lang.String name) throws java.io.IOException {
              Delete result = new Delete(name);
              initialize(result);
              return result;
            }

            public class Delete extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.Empty> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+/annotations/[^/]+$");

              /**
               * Deletes an Annotation or returns NOT_FOUND if it does not exist.
               *
               * Create a request for the method "annotations.delete".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               * <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The resource name of the Annotation to delete.
               * @since 1.13
               */
              protected Delete(java.lang.String name) {
                super(CloudHealthcare.this, "DELETE", REST_PATH, null, com.google.api.services.healthcare.v1alpha.model.Empty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+/annotations/[^/]+$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              /** The resource name of the Annotation to delete. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The resource name of the Annotation to delete.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The resource name of the Annotation to delete. */
              public Delete setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+/annotations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * Gets an Annotation.
             *
             * Create a request for the method "annotations.get".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name The resource name of the Annotation to retrieve.
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.Annotation> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+/annotations/[^/]+$");

              /**
               * Gets an Annotation.
               *
               * Create a request for the method "annotations.get".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The resource name of the Annotation to retrieve.
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1alpha.model.Annotation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+/annotations/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /** The resource name of the Annotation to retrieve. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The resource name of the Annotation to retrieve.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The resource name of the Annotation to retrieve. */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+/annotations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Lists the Annotations in the given Annotation store for a source resource.
             *
             * Create a request for the method "annotations.list".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Name of the Annotation store to retrieve Annotations from.
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.ListAnnotationsResponse> {

              private static final String REST_PATH = "v1alpha/{+parent}/annotations";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+$");

              /**
               * Lists the Annotations in the given Annotation store for a source resource.
               *
               * Create a request for the method "annotations.list".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Name of the Annotation store to retrieve Annotations from.
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1alpha.model.ListAnnotationsResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /** Name of the Annotation store to retrieve Annotations from. */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Name of the Annotation store to retrieve Annotations from.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /** Name of the Annotation store to retrieve Annotations from. */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Restricts Annotations returned to those matching a filter. Syntax:
               * https://cloud.google.com/appengine/docs/standard/python/search/query_strings
               * Fields/functions available for filtering are: - source_version
               */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** Restricts Annotations returned to those matching a filter. Syntax:
             https://cloud.google.com/appengine/docs/standard/python/search/query_strings Fields/functions
             available for filtering are: - source_version
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /**
               * Restricts Annotations returned to those matching a filter. Syntax:
               * https://cloud.google.com/appengine/docs/standard/python/search/query_strings
               * Fields/functions available for filtering are: - source_version
               */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /**
               * Limit on the number of Annotations to return in a single response. If zero the
               * default page size of 100 is used.
               */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** Limit on the number of Annotations to return in a single response. If zero the default page size of
             100 is used.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /**
               * Limit on the number of Annotations to return in a single response. If zero the
               * default page size of 100 is used.
               */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /** The next_page_token value returned from the previous List request, if any. */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** The next_page_token value returned from the previous List request, if any.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /** The next_page_token value returned from the previous List request, if any. */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }
            /**
             * Updates the Annotation.
             *
             * Create a request for the method "annotations.patch".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             *
             * @param name Output only. Resource name of the Annotation, of the form
            `projects/{project_id}/locations/{location
             *        _id}/datasets/{dataset_id}/annotationStores/{annotation_store_id}/annotations/{annotation_
             *        id}`.
             * @param content the {@link com.google.api.services.healthcare.v1alpha.model.Annotation}
             * @return the request
             */
            public Patch patch(java.lang.String name, com.google.api.services.healthcare.v1alpha.model.Annotation content) throws java.io.IOException {
              Patch result = new Patch(name, content);
              initialize(result);
              return result;
            }

            public class Patch extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.Annotation> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+/annotations/[^/]+$");

              /**
               * Updates the Annotation.
               *
               * Create a request for the method "annotations.patch".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
               * <p> {@link
               * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Output only. Resource name of the Annotation, of the form
            `projects/{project_id}/locations/{location
             *        _id}/datasets/{dataset_id}/annotationStores/{annotation_store_id}/annotations/{annotation_
             *        id}`.
               * @param content the {@link com.google.api.services.healthcare.v1alpha.model.Annotation}
               * @since 1.13
               */
              protected Patch(java.lang.String name, com.google.api.services.healthcare.v1alpha.model.Annotation content) {
                super(CloudHealthcare.this, "PATCH", REST_PATH, content, com.google.api.services.healthcare.v1alpha.model.Annotation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+/annotations/[^/]+$");
                }
              }

              @Override
              public Patch set$Xgafv(java.lang.String $Xgafv) {
                return (Patch) super.set$Xgafv($Xgafv);
              }

              @Override
              public Patch setAccessToken(java.lang.String accessToken) {
                return (Patch) super.setAccessToken(accessToken);
              }

              @Override
              public Patch setAlt(java.lang.String alt) {
                return (Patch) super.setAlt(alt);
              }

              @Override
              public Patch setCallback(java.lang.String callback) {
                return (Patch) super.setCallback(callback);
              }

              @Override
              public Patch setFields(java.lang.String fields) {
                return (Patch) super.setFields(fields);
              }

              @Override
              public Patch setKey(java.lang.String key) {
                return (Patch) super.setKey(key);
              }

              @Override
              public Patch setOauthToken(java.lang.String oauthToken) {
                return (Patch) super.setOauthToken(oauthToken);
              }

              @Override
              public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Patch) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Patch setQuotaUser(java.lang.String quotaUser) {
                return (Patch) super.setQuotaUser(quotaUser);
              }

              @Override
              public Patch setUploadType(java.lang.String uploadType) {
                return (Patch) super.setUploadType(uploadType);
              }

              @Override
              public Patch setUploadProtocol(java.lang.String uploadProtocol) {
                return (Patch) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Output only. Resource name of the Annotation, of the form `projects/{project_id}/lo
               * cations/{location_id}/datasets/{dataset_id}/annotationStores/{annotation_store_id}/
               * annotations/{annotation_id}`.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Output only. Resource name of the Annotation, of the form `projects/{project_id}/locations/{locatio
             n_id}/datasets/{dataset_id}/annotationStores/{annotation_store_id}/annotations/{annotation_id}`.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Output only. Resource name of the Annotation, of the form `projects/{project_id}/lo
               * cations/{location_id}/datasets/{dataset_id}/annotationStores/{annotation_store_id}/
               * annotations/{annotation_id}`.
               */
              public Patch setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+/annotations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * The update mask applies to the resource. For the `FieldMask` definition, see
               * https://developers.google.com/protocol-
               * buffers/docs/reference/google.protobuf#fieldmask
               */
              @com.google.api.client.util.Key
              private String updateMask;

              /** The update mask applies to the resource. For the `FieldMask` definition, see
             https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
               */
              public String getUpdateMask() {
                return updateMask;
              }

              /**
               * The update mask applies to the resource. For the `FieldMask` definition, see
               * https://developers.google.com/protocol-
               * buffers/docs/reference/google.protobuf#fieldmask
               */
              public Patch setUpdateMask(String updateMask) {
                this.updateMask = updateMask;
                return this;
              }

              @Override
              public Patch set(String parameterName, Object value) {
                return (Patch) super.set(parameterName, value);
              }
            }

          }
        }
        /**
         * An accessor for creating requests from the DicomStores collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code CloudHealthcare healthcare = new CloudHealthcare(...);}
         *   {@code CloudHealthcare.DicomStores.List request = healthcare.dicomStores().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public DicomStores dicomStores() {
          return new DicomStores();
        }

        /**
         * The "dicomStores" collection of methods.
         */
        public class DicomStores {

          /**
           * Creates a new DICOM store within the parent dataset.
           *
           * Create a request for the method "dicomStores.create".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent The name of the dataset this DICOM store belongs to.
           * @param content the {@link com.google.api.services.healthcare.v1alpha.model.DicomStore}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.healthcare.v1alpha.model.DicomStore content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.DicomStore> {

            private static final String REST_PATH = "v1alpha/{+parent}/dicomStores";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");

            /**
             * Creates a new DICOM store within the parent dataset.
             *
             * Create a request for the method "dicomStores.create".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent The name of the dataset this DICOM store belongs to.
             * @param content the {@link com.google.api.services.healthcare.v1alpha.model.DicomStore}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.healthcare.v1alpha.model.DicomStore content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1alpha.model.DicomStore.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the dataset this DICOM store belongs to. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** The name of the dataset this DICOM store belongs to.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** The name of the dataset this DICOM store belongs to. */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * The ID of the DICOM store that is being created. The string must match the following
             * regex: `[\p{L}\p{N}_\-\.]{1,256}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String dicomStoreId;

            /** The ID of the DICOM store that is being created. The string must match the following regex:
           `[\p{L}\p{N}_\-\.]{1,256}`.
             */
            public java.lang.String getDicomStoreId() {
              return dicomStoreId;
            }

            /**
             * The ID of the DICOM store that is being created. The string must match the following
             * regex: `[\p{L}\p{N}_\-\.]{1,256}`.
             */
            public Create setDicomStoreId(java.lang.String dicomStoreId) {
              this.dicomStoreId = dicomStoreId;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes the specified DICOM store and removes all images that are contained within it.
           *
           * Create a request for the method "dicomStores.delete".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name The resource name of the DICOM store to delete.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.Empty> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");

            /**
             * Deletes the specified DICOM store and removes all images that are contained within it.
             *
             * Create a request for the method "dicomStores.delete".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The resource name of the DICOM store to delete.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(CloudHealthcare.this, "DELETE", REST_PATH, null, com.google.api.services.healthcare.v1alpha.model.Empty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** The resource name of the DICOM store to delete. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The resource name of the DICOM store to delete.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The resource name of the DICOM store to delete. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Exports data to the specified destination by copying it from the DICOM store. The metadata field
           * type is OperationMetadata.
           *
           * Create a request for the method "dicomStores.export".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link Export#execute()} method to invoke the remote operation.
           *
           * @param name The DICOM store resource name from which the data should be exported (e.g.,
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
           *        ore_id}`).
           * @param content the {@link com.google.api.services.healthcare.v1alpha.model.ExportDicomDataRequest}
           * @return the request
           */
          public Export export(java.lang.String name, com.google.api.services.healthcare.v1alpha.model.ExportDicomDataRequest content) throws java.io.IOException {
            Export result = new Export(name, content);
            initialize(result);
            return result;
          }

          public class Export extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.Operation> {

            private static final String REST_PATH = "v1alpha/{+name}:export";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");

            /**
             * Exports data to the specified destination by copying it from the DICOM store. The metadata
             * field type is OperationMetadata.
             *
             * Create a request for the method "dicomStores.export".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link Export#execute()} method to invoke the remote operation.
             * <p> {@link
             * Export#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The DICOM store resource name from which the data should be exported (e.g.,
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
           *        ore_id}`).
             * @param content the {@link com.google.api.services.healthcare.v1alpha.model.ExportDicomDataRequest}
             * @since 1.13
             */
            protected Export(java.lang.String name, com.google.api.services.healthcare.v1alpha.model.ExportDicomDataRequest content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1alpha.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
            }

            @Override
            public Export set$Xgafv(java.lang.String $Xgafv) {
              return (Export) super.set$Xgafv($Xgafv);
            }

            @Override
            public Export setAccessToken(java.lang.String accessToken) {
              return (Export) super.setAccessToken(accessToken);
            }

            @Override
            public Export setAlt(java.lang.String alt) {
              return (Export) super.setAlt(alt);
            }

            @Override
            public Export setCallback(java.lang.String callback) {
              return (Export) super.setCallback(callback);
            }

            @Override
            public Export setFields(java.lang.String fields) {
              return (Export) super.setFields(fields);
            }

            @Override
            public Export setKey(java.lang.String key) {
              return (Export) super.setKey(key);
            }

            @Override
            public Export setOauthToken(java.lang.String oauthToken) {
              return (Export) super.setOauthToken(oauthToken);
            }

            @Override
            public Export setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Export) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Export setQuotaUser(java.lang.String quotaUser) {
              return (Export) super.setQuotaUser(quotaUser);
            }

            @Override
            public Export setUploadType(java.lang.String uploadType) {
              return (Export) super.setUploadType(uploadType);
            }

            @Override
            public Export setUploadProtocol(java.lang.String uploadProtocol) {
              return (Export) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * The DICOM store resource name from which the data should be exported (e.g., `projects
             * /{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_
             * id}`).
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The DICOM store resource name from which the data should be exported (e.g., `projects/{project_id}/
           locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * The DICOM store resource name from which the data should be exported (e.g., `projects
             * /{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_
             * id}`).
             */
            public Export setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Export set(String parameterName, Object value) {
              return (Export) super.set(parameterName, value);
            }
          }
          /**
           * Gets the specified DICOM store.
           *
           * Create a request for the method "dicomStores.get".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name The resource name of the DICOM store to get.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.DicomStore> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");

            /**
             * Gets the specified DICOM store.
             *
             * Create a request for the method "dicomStores.get".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The resource name of the DICOM store to get.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1alpha.model.DicomStore.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** The resource name of the DICOM store to get. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The resource name of the DICOM store to get.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The resource name of the DICOM store to get. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
           * does not have a policy set.
           *
           * Create a request for the method "dicomStores.getIamPolicy".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy is being requested.
          See the operation documentation for
           *        the appropriate value for this field.
           * @return the request
           */
          public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
            GetIamPolicy result = new GetIamPolicy(resource);
            initialize(result);
            return result;
          }

          public class GetIamPolicy extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.Policy> {

            private static final String REST_PATH = "v1alpha/{+resource}:getIamPolicy";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");

            /**
             * Gets the access control policy for a resource. Returns an empty policy if the resource exists
             * and does not have a policy set.
             *
             * Create a request for the method "dicomStores.getIamPolicy".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
             * operation. <p> {@link
             * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy is being requested.
          See the operation documentation for
           *        the appropriate value for this field.
             * @since 1.13
             */
            protected GetIamPolicy(java.lang.String resource) {
              super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1alpha.model.Policy.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
              return (GetIamPolicy) super.set$Xgafv($Xgafv);
            }

            @Override
            public GetIamPolicy setAccessToken(java.lang.String accessToken) {
              return (GetIamPolicy) super.setAccessToken(accessToken);
            }

            @Override
            public GetIamPolicy setAlt(java.lang.String alt) {
              return (GetIamPolicy) super.setAlt(alt);
            }

            @Override
            public GetIamPolicy setCallback(java.lang.String callback) {
              return (GetIamPolicy) super.setCallback(callback);
            }

            @Override
            public GetIamPolicy setFields(java.lang.String fields) {
              return (GetIamPolicy) super.setFields(fields);
            }

            @Override
            public GetIamPolicy setKey(java.lang.String key) {
              return (GetIamPolicy) super.setKey(key);
            }

            @Override
            public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
              return (GetIamPolicy) super.setOauthToken(oauthToken);
            }

            @Override
            public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
              return (GetIamPolicy) super.setQuotaUser(quotaUser);
            }

            @Override
            public GetIamPolicy setUploadType(java.lang.String uploadType) {
              return (GetIamPolicy) super.setUploadType(uploadType);
            }

            @Override
            public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
              return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy is being requested. See the operation
             * documentation for the appropriate value for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy is being requested. See the operation documentation for
           the appropriate value for this field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy is being requested. See the operation
             * documentation for the appropriate value for this field.
             */
            public GetIamPolicy setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public GetIamPolicy set(String parameterName, Object value) {
              return (GetIamPolicy) super.set(parameterName, value);
            }
          }
          /**
           * Imports data into the DICOM store by copying it from the specified source. For errors, the
           * Operation will be populated with error details (in the form of ImportDicomDataErrorDetails in
           * error.details), which will hold finer-grained error information. The metadata field type is
           * OperationMetadata.
           *
           * Create a request for the method "dicomStores.import".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link CloudHealthcareImport#execute()} method to invoke the remote
           * operation.
           *
           * @param name The name of the DICOM store resource into which the data is imported (e.g.,
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
           *        ore_id}`).
           * @param content the {@link com.google.api.services.healthcare.v1alpha.model.ImportDicomDataRequest}
           * @return the request
           */
          public CloudHealthcareImport healthcareImport(java.lang.String name, com.google.api.services.healthcare.v1alpha.model.ImportDicomDataRequest content) throws java.io.IOException {
            CloudHealthcareImport result = new CloudHealthcareImport(name, content);
            initialize(result);
            return result;
          }

          public class CloudHealthcareImport extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.Operation> {

            private static final String REST_PATH = "v1alpha/{+name}:import";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");

            /**
             * Imports data into the DICOM store by copying it from the specified source. For errors, the
             * Operation will be populated with error details (in the form of ImportDicomDataErrorDetails in
             * error.details), which will hold finer-grained error information. The metadata field type is
             * OperationMetadata.
             *
             * Create a request for the method "dicomStores.import".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link CloudHealthcareImport#execute()} method to invoke the
             * remote operation. <p> {@link CloudHealthcareImport#initialize(com.google.api.client.googleapis.
             * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
             * after invoking the constructor. </p>
             *
             * @param name The name of the DICOM store resource into which the data is imported (e.g.,
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
           *        ore_id}`).
             * @param content the {@link com.google.api.services.healthcare.v1alpha.model.ImportDicomDataRequest}
             * @since 1.13
             */
            protected CloudHealthcareImport(java.lang.String name, com.google.api.services.healthcare.v1alpha.model.ImportDicomDataRequest content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1alpha.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
            }

            @Override
            public CloudHealthcareImport set$Xgafv(java.lang.String $Xgafv) {
              return (CloudHealthcareImport) super.set$Xgafv($Xgafv);
            }

            @Override
            public CloudHealthcareImport setAccessToken(java.lang.String accessToken) {
              return (CloudHealthcareImport) super.setAccessToken(accessToken);
            }

            @Override
            public CloudHealthcareImport setAlt(java.lang.String alt) {
              return (CloudHealthcareImport) super.setAlt(alt);
            }

            @Override
            public CloudHealthcareImport setCallback(java.lang.String callback) {
              return (CloudHealthcareImport) super.setCallback(callback);
            }

            @Override
            public CloudHealthcareImport setFields(java.lang.String fields) {
              return (CloudHealthcareImport) super.setFields(fields);
            }

            @Override
            public CloudHealthcareImport setKey(java.lang.String key) {
              return (CloudHealthcareImport) super.setKey(key);
            }

            @Override
            public CloudHealthcareImport setOauthToken(java.lang.String oauthToken) {
              return (CloudHealthcareImport) super.setOauthToken(oauthToken);
            }

            @Override
            public CloudHealthcareImport setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (CloudHealthcareImport) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public CloudHealthcareImport setQuotaUser(java.lang.String quotaUser) {
              return (CloudHealthcareImport) super.setQuotaUser(quotaUser);
            }

            @Override
            public CloudHealthcareImport setUploadType(java.lang.String uploadType) {
              return (CloudHealthcareImport) super.setUploadType(uploadType);
            }

            @Override
            public CloudHealthcareImport setUploadProtocol(java.lang.String uploadProtocol) {
              return (CloudHealthcareImport) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * The name of the DICOM store resource into which the data is imported (e.g., `projects
             * /{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_
             * id}`).
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the DICOM store resource into which the data is imported (e.g., `projects/{project_id}/
           locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * The name of the DICOM store resource into which the data is imported (e.g., `projects
             * /{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_
             * id}`).
             */
            public CloudHealthcareImport setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public CloudHealthcareImport set(String parameterName, Object value) {
              return (CloudHealthcareImport) super.set(parameterName, value);
            }
          }
          /**
           * Lists the DICOM stores in the given dataset.
           *
           * Create a request for the method "dicomStores.list".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Name of the dataset.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.ListDicomStoresResponse> {

            private static final String REST_PATH = "v1alpha/{+parent}/dicomStores";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");

            /**
             * Lists the DICOM stores in the given dataset.
             *
             * Create a request for the method "dicomStores.list".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Name of the dataset.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1alpha.model.ListDicomStoresResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** Name of the dataset. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Name of the dataset.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Name of the dataset. */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Limit on the number of DICOM stores to return in a single response. If zero the
             * default page size of 100 is used.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Limit on the number of DICOM stores to return in a single response. If zero the default page size
           of 100 is used.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Limit on the number of DICOM stores to return in a single response. If zero the
             * default page size of 100 is used.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The next_page_token value returned from the previous List request, if any. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The next_page_token value returned from the previous List request, if any.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The next_page_token value returned from the previous List request, if any. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates the specified DICOM store.
           *
           * Create a request for the method "dicomStores.patch".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Output only. Resource name of the DICOM store, of the form
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
           *        ore_id}`.
           * @param content the {@link com.google.api.services.healthcare.v1alpha.model.DicomStore}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.healthcare.v1alpha.model.DicomStore content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.DicomStore> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");

            /**
             * Updates the specified DICOM store.
             *
             * Create a request for the method "dicomStores.patch".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Output only. Resource name of the DICOM store, of the form
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
           *        ore_id}`.
             * @param content the {@link com.google.api.services.healthcare.v1alpha.model.DicomStore}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.healthcare.v1alpha.model.DicomStore content) {
              super(CloudHealthcare.this, "PATCH", REST_PATH, content, com.google.api.services.healthcare.v1alpha.model.DicomStore.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Output only. Resource name of the DICOM store, of the form `projects/{project_id}/loc
             * ations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Output only. Resource name of the DICOM store, of the form
           `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Output only. Resource name of the DICOM store, of the form `projects/{project_id}/loc
             * ations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * The update mask applies to the resource. For the `FieldMask` definition, see
             * https://developers.google.com/protocol-
             * buffers/docs/reference/google.protobuf#fieldmask
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** The update mask applies to the resource. For the `FieldMask` definition, see
           https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * The update mask applies to the resource. For the `FieldMask` definition, see
             * https://developers.google.com/protocol-
             * buffers/docs/reference/google.protobuf#fieldmask
             */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }
          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy.
           *
           * Create a request for the method "dicomStores.setIamPolicy".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy is being specified.
          See the operation documentation for
           *        the appropriate value for this field.
           * @param content the {@link com.google.api.services.healthcare.v1alpha.model.SetIamPolicyRequest}
           * @return the request
           */
          public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.healthcare.v1alpha.model.SetIamPolicyRequest content) throws java.io.IOException {
            SetIamPolicy result = new SetIamPolicy(resource, content);
            initialize(result);
            return result;
          }

          public class SetIamPolicy extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.Policy> {

            private static final String REST_PATH = "v1alpha/{+resource}:setIamPolicy";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");

            /**
             * Sets the access control policy on the specified resource. Replaces any existing policy.
             *
             * Create a request for the method "dicomStores.setIamPolicy".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
             * operation. <p> {@link
             * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy is being specified.
          See the operation documentation for
           *        the appropriate value for this field.
             * @param content the {@link com.google.api.services.healthcare.v1alpha.model.SetIamPolicyRequest}
             * @since 1.13
             */
            protected SetIamPolicy(java.lang.String resource, com.google.api.services.healthcare.v1alpha.model.SetIamPolicyRequest content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1alpha.model.Policy.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
            }

            @Override
            public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
              return (SetIamPolicy) super.set$Xgafv($Xgafv);
            }

            @Override
            public SetIamPolicy setAccessToken(java.lang.String accessToken) {
              return (SetIamPolicy) super.setAccessToken(accessToken);
            }

            @Override
            public SetIamPolicy setAlt(java.lang.String alt) {
              return (SetIamPolicy) super.setAlt(alt);
            }

            @Override
            public SetIamPolicy setCallback(java.lang.String callback) {
              return (SetIamPolicy) super.setCallback(callback);
            }

            @Override
            public SetIamPolicy setFields(java.lang.String fields) {
              return (SetIamPolicy) super.setFields(fields);
            }

            @Override
            public SetIamPolicy setKey(java.lang.String key) {
              return (SetIamPolicy) super.setKey(key);
            }

            @Override
            public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
              return (SetIamPolicy) super.setOauthToken(oauthToken);
            }

            @Override
            public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
              return (SetIamPolicy) super.setQuotaUser(quotaUser);
            }

            @Override
            public SetIamPolicy setUploadType(java.lang.String uploadType) {
              return (SetIamPolicy) super.setUploadType(uploadType);
            }

            @Override
            public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
              return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy is being specified. See the operation
             * documentation for the appropriate value for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy is being specified. See the operation documentation for
           the appropriate value for this field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy is being specified. See the operation
             * documentation for the appropriate value for this field.
             */
            public SetIamPolicy setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public SetIamPolicy set(String parameterName, Object value) {
              return (SetIamPolicy) super.set(parameterName, value);
            }
          }
          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not exist,
           * this will return an empty set of permissions, not a NOT_FOUND error.
           *
           * Note: This operation is designed to be used for building permission-aware UIs and command-line
           * tools, not for authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "dicomStores.testIamPermissions".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested.
          See the operation
           *        documentation for the appropriate value for this field.
           * @param content the {@link com.google.api.services.healthcare.v1alpha.model.TestIamPermissionsRequest}
           * @return the request
           */
          public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.healthcare.v1alpha.model.TestIamPermissionsRequest content) throws java.io.IOException {
            TestIamPermissions result = new TestIamPermissions(resource, content);
            initialize(result);
            return result;
          }

          public class TestIamPermissions extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.TestIamPermissionsResponse> {

            private static final String REST_PATH = "v1alpha/{+resource}:testIamPermissions";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");

            /**
             * Returns permissions that a caller has on the specified resource. If the resource does not
             * exist, this will return an empty set of permissions, not a NOT_FOUND error.
             *
             * Note: This operation is designed to be used for building permission-aware UIs and command-line
             * tools, not for authorization checking. This operation may "fail open" without warning.
             *
             * Create a request for the method "dicomStores.testIamPermissions".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
             * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
             * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy detail is being requested.
          See the operation
           *        documentation for the appropriate value for this field.
             * @param content the {@link com.google.api.services.healthcare.v1alpha.model.TestIamPermissionsRequest}
             * @since 1.13
             */
            protected TestIamPermissions(java.lang.String resource, com.google.api.services.healthcare.v1alpha.model.TestIamPermissionsRequest content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1alpha.model.TestIamPermissionsResponse.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
            }

            @Override
            public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
              return (TestIamPermissions) super.set$Xgafv($Xgafv);
            }

            @Override
            public TestIamPermissions setAccessToken(java.lang.String accessToken) {
              return (TestIamPermissions) super.setAccessToken(accessToken);
            }

            @Override
            public TestIamPermissions setAlt(java.lang.String alt) {
              return (TestIamPermissions) super.setAlt(alt);
            }

            @Override
            public TestIamPermissions setCallback(java.lang.String callback) {
              return (TestIamPermissions) super.setCallback(callback);
            }

            @Override
            public TestIamPermissions setFields(java.lang.String fields) {
              return (TestIamPermissions) super.setFields(fields);
            }

            @Override
            public TestIamPermissions setKey(java.lang.String key) {
              return (TestIamPermissions) super.setKey(key);
            }

            @Override
            public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
              return (TestIamPermissions) super.setOauthToken(oauthToken);
            }

            @Override
            public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
              return (TestIamPermissions) super.setQuotaUser(quotaUser);
            }

            @Override
            public TestIamPermissions setUploadType(java.lang.String uploadType) {
              return (TestIamPermissions) super.setUploadType(uploadType);
            }

            @Override
            public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
              return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy detail is being requested. See the
             * operation documentation for the appropriate value for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy detail is being requested. See the operation
           documentation for the appropriate value for this field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy detail is being requested. See the
             * operation documentation for the appropriate value for this field.
             */
            public TestIamPermissions setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public TestIamPermissions set(String parameterName, Object value) {
              return (TestIamPermissions) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the DicomWeb collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code CloudHealthcare healthcare = new CloudHealthcare(...);}
           *   {@code CloudHealthcare.DicomWeb.List request = healthcare.dicomWeb().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public DicomWeb dicomWeb() {
            return new DicomWeb();
          }

          /**
           * The "dicomWeb" collection of methods.
           */
          public class DicomWeb {

            /**
             * Handles DELETE requests equivalent to the GET requests specified in the WADO-RS standard. Since
             * this implements an industry standard API, the dicom_web_path is interpreted directly by the
             * serving binary. For example, if the request is for `/v1alpha/projects/{project_id}/locations/{loc
             * ation_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}/dicomWeb/stu
             * dies/1.2`, then `/studies/1.2` is passed to the serving binary as the dicom_web_path.
             *
             * Create a request for the method "dicomWeb.dicomWebDelete".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link DicomWebDelete#execute()} method to invoke the remote operation.
             *
             * @param parent The name of the DICOM store that is being accessed (e.g.,
             *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
             *        ore_id}`).
             * @param dicomWebPath The path of the DICOMweb request, as specified in the WADO-RS standard.
             * @return the request
             */
            public DicomWebDelete dicomWebDelete(java.lang.String parent, java.lang.String dicomWebPath) throws java.io.IOException {
              DicomWebDelete result = new DicomWebDelete(parent, dicomWebPath);
              initialize(result);
              return result;
            }

            public class DicomWebDelete extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.Empty> {

              private static final String REST_PATH = "v1alpha/{+parent}/dicomWeb/{+dicomWebPath}";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");

              private final java.util.regex.Pattern DICOM_WEB_PATH_PATTERN =
                  java.util.regex.Pattern.compile("^.+$");

              /**
               * Handles DELETE requests equivalent to the GET requests specified in the WADO-RS standard. Since
               * this implements an industry standard API, the dicom_web_path is interpreted directly by the
               * serving binary. For example, if the request is for `/v1alpha/projects/{project_id}/locations/{l
               * ocation_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}/dicomWeb
               * /studies/1.2`, then `/studies/1.2` is passed to the serving binary as the dicom_web_path.
               *
               * Create a request for the method "dicomWeb.dicomWebDelete".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link DicomWebDelete#execute()} method to invoke the remote
               * operation. <p> {@link DicomWebDelete#initialize(com.google.api.client.googleapis.services.Abstr
               * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
               * the constructor. </p>
               *
               * @param parent The name of the DICOM store that is being accessed (e.g.,
             *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
             *        ore_id}`).
               * @param dicomWebPath The path of the DICOMweb request, as specified in the WADO-RS standard.
               * @since 1.13
               */
              protected DicomWebDelete(java.lang.String parent, java.lang.String dicomWebPath) {
                super(CloudHealthcare.this, "DELETE", REST_PATH, null, com.google.api.services.healthcare.v1alpha.model.Empty.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
                }
                this.dicomWebPath = com.google.api.client.util.Preconditions.checkNotNull(dicomWebPath, "Required parameter dicomWebPath must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                      "Parameter dicomWebPath must conform to the pattern " +
                      "^.+$");
                }
              }

              @Override
              public DicomWebDelete set$Xgafv(java.lang.String $Xgafv) {
                return (DicomWebDelete) super.set$Xgafv($Xgafv);
              }

              @Override
              public DicomWebDelete setAccessToken(java.lang.String accessToken) {
                return (DicomWebDelete) super.setAccessToken(accessToken);
              }

              @Override
              public DicomWebDelete setAlt(java.lang.String alt) {
                return (DicomWebDelete) super.setAlt(alt);
              }

              @Override
              public DicomWebDelete setCallback(java.lang.String callback) {
                return (DicomWebDelete) super.setCallback(callback);
              }

              @Override
              public DicomWebDelete setFields(java.lang.String fields) {
                return (DicomWebDelete) super.setFields(fields);
              }

              @Override
              public DicomWebDelete setKey(java.lang.String key) {
                return (DicomWebDelete) super.setKey(key);
              }

              @Override
              public DicomWebDelete setOauthToken(java.lang.String oauthToken) {
                return (DicomWebDelete) super.setOauthToken(oauthToken);
              }

              @Override
              public DicomWebDelete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (DicomWebDelete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public DicomWebDelete setQuotaUser(java.lang.String quotaUser) {
                return (DicomWebDelete) super.setQuotaUser(quotaUser);
              }

              @Override
              public DicomWebDelete setUploadType(java.lang.String uploadType) {
                return (DicomWebDelete) super.setUploadType(uploadType);
              }

              @Override
              public DicomWebDelete setUploadProtocol(java.lang.String uploadProtocol) {
                return (DicomWebDelete) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * The name of the DICOM store that is being accessed (e.g., `projects/{project_id}/lo
               * cations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** The name of the DICOM store that is being accessed (e.g., `projects/{project_id}/locations/{locatio
             n_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * The name of the DICOM store that is being accessed (e.g., `projects/{project_id}/lo
               * cations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
               */
              public DicomWebDelete setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /** The path of the DICOMweb request, as specified in the WADO-RS standard. */
              @com.google.api.client.util.Key
              private java.lang.String dicomWebPath;

              /** The path of the DICOMweb request, as specified in the WADO-RS standard.
               */
              public java.lang.String getDicomWebPath() {
                return dicomWebPath;
              }

              /** The path of the DICOMweb request, as specified in the WADO-RS standard. */
              public DicomWebDelete setDicomWebPath(java.lang.String dicomWebPath) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                      "Parameter dicomWebPath must conform to the pattern " +
                      "^.+$");
                }
                this.dicomWebPath = dicomWebPath;
                return this;
              }

              @Override
              public DicomWebDelete set(String parameterName, Object value) {
                return (DicomWebDelete) super.set(parameterName, value);
              }
            }
            /**
             * Handles the GET requests specified in the STOW-RS, WADO-RS, or QIDO-RS standard. Since this
             * implements an industry standard API, the dicom_web_path is interpreted directly by the serving
             * binary. For example, if the request is for `/v1alpha/projects/{project_id}/locations/{location_id
             * }/datasets/{dataset_id}/dicomStores/{dicom_store_id}/dicomWeb/studies/{study_id}/series?PatientNa
             * me={patient_name}`, then `studies/{study_id}/series` is passed to the serving binary as the
             * dicom_web_path.
             *
             * Create a request for the method "dicomWeb.dicomWebGet".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link DicomWebGet#execute()} method to invoke the remote operation.
             *
             * @param parent The name of the DICOM store that is being accessed (e.g.,
             *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
             *        ore_id}`).
             * @param dicomWebPath The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or
            QIDO-RS standard (e.g.,
             *        studies/{study_id}/series`).
             * @return the request
             */
            public DicomWebGet dicomWebGet(java.lang.String parent, java.lang.String dicomWebPath) throws java.io.IOException {
              DicomWebGet result = new DicomWebGet(parent, dicomWebPath);
              initialize(result);
              return result;
            }

            public class DicomWebGet extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.HttpBody> {

              private static final String REST_PATH = "v1alpha/{+parent}/dicomWeb/{+dicomWebPath}";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");

              private final java.util.regex.Pattern DICOM_WEB_PATH_PATTERN =
                  java.util.regex.Pattern.compile("^.+$");

              /**
               * Handles the GET requests specified in the STOW-RS, WADO-RS, or QIDO-RS standard. Since this
               * implements an industry standard API, the dicom_web_path is interpreted directly by the serving
               * binary. For example, if the request is for `/v1alpha/projects/{project_id}/locations/{location_
               * id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}/dicomWeb/studies/{study_id}/series?Patie
               * ntName={patient_name}`, then `studies/{study_id}/series` is passed to the serving binary as the
               * dicom_web_path.
               *
               * Create a request for the method "dicomWeb.dicomWebGet".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link DicomWebGet#execute()} method to invoke the remote
               * operation. <p> {@link
               * DicomWebGet#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent The name of the DICOM store that is being accessed (e.g.,
             *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
             *        ore_id}`).
               * @param dicomWebPath The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or
            QIDO-RS standard (e.g.,
             *        studies/{study_id}/series`).
               * @since 1.13
               */
              protected DicomWebGet(java.lang.String parent, java.lang.String dicomWebPath) {
                super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1alpha.model.HttpBody.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
                }
                this.dicomWebPath = com.google.api.client.util.Preconditions.checkNotNull(dicomWebPath, "Required parameter dicomWebPath must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                      "Parameter dicomWebPath must conform to the pattern " +
                      "^.+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public DicomWebGet set$Xgafv(java.lang.String $Xgafv) {
                return (DicomWebGet) super.set$Xgafv($Xgafv);
              }

              @Override
              public DicomWebGet setAccessToken(java.lang.String accessToken) {
                return (DicomWebGet) super.setAccessToken(accessToken);
              }

              @Override
              public DicomWebGet setAlt(java.lang.String alt) {
                return (DicomWebGet) super.setAlt(alt);
              }

              @Override
              public DicomWebGet setCallback(java.lang.String callback) {
                return (DicomWebGet) super.setCallback(callback);
              }

              @Override
              public DicomWebGet setFields(java.lang.String fields) {
                return (DicomWebGet) super.setFields(fields);
              }

              @Override
              public DicomWebGet setKey(java.lang.String key) {
                return (DicomWebGet) super.setKey(key);
              }

              @Override
              public DicomWebGet setOauthToken(java.lang.String oauthToken) {
                return (DicomWebGet) super.setOauthToken(oauthToken);
              }

              @Override
              public DicomWebGet setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (DicomWebGet) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public DicomWebGet setQuotaUser(java.lang.String quotaUser) {
                return (DicomWebGet) super.setQuotaUser(quotaUser);
              }

              @Override
              public DicomWebGet setUploadType(java.lang.String uploadType) {
                return (DicomWebGet) super.setUploadType(uploadType);
              }

              @Override
              public DicomWebGet setUploadProtocol(java.lang.String uploadProtocol) {
                return (DicomWebGet) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * The name of the DICOM store that is being accessed (e.g., `projects/{project_id}/lo
               * cations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** The name of the DICOM store that is being accessed (e.g., `projects/{project_id}/locations/{locatio
             n_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * The name of the DICOM store that is being accessed (e.g., `projects/{project_id}/lo
               * cations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
               */
              public DicomWebGet setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or QIDO-RS
               * standard (e.g., studies/{study_id}/series`).
               */
              @com.google.api.client.util.Key
              private java.lang.String dicomWebPath;

              /** The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or QIDO-RS standard (e.g.,
             studies/{study_id}/series`).
               */
              public java.lang.String getDicomWebPath() {
                return dicomWebPath;
              }

              /**
               * The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or QIDO-RS
               * standard (e.g., studies/{study_id}/series`).
               */
              public DicomWebGet setDicomWebPath(java.lang.String dicomWebPath) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                      "Parameter dicomWebPath must conform to the pattern " +
                      "^.+$");
                }
                this.dicomWebPath = dicomWebPath;
                return this;
              }

              @Override
              public DicomWebGet set(String parameterName, Object value) {
                return (DicomWebGet) super.set(parameterName, value);
              }
            }
            /**
             * Handles the POST requests specified in the STOW-RS, WADO-RS, or QIDO-RS standard. Since this
             * implements an industry standard API, the dicom_web_path is interpreted directly by the serving
             * binary. For example, if the request is for `/v1alpha/projects/{project_id}/locations/{location_id
             * }/datasets/{dataset_id}/dicomStores/{dicom_store_id}/dicomWeb/studies/{study_id}`, then
             * `/studies/{study_id}` is passed to the serving binary as the dicom_web_path.
             *
             * Create a request for the method "dicomWeb.dicomWebPost".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link DicomWebPost#execute()} method to invoke the remote operation.
             *
             * @param parent The name of the DICOM store that is being accessed (e.g.,
             *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
             *        ore_id}`).
             * @param dicomWebPath The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or
            QIDO-RS standard (e.g.,
             *        studies/{study_id}`).
             * @param content the {@link com.google.api.services.healthcare.v1alpha.model.HttpBody}
             * @return the request
             */
            public DicomWebPost dicomWebPost(java.lang.String parent, java.lang.String dicomWebPath, com.google.api.services.healthcare.v1alpha.model.HttpBody content) throws java.io.IOException {
              DicomWebPost result = new DicomWebPost(parent, dicomWebPath, content);
              initialize(result);
              return result;
            }

            public class DicomWebPost extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.HttpBody> {

              private static final String REST_PATH = "v1alpha/{+parent}/dicomWeb/{+dicomWebPath}";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");

              private final java.util.regex.Pattern DICOM_WEB_PATH_PATTERN =
                  java.util.regex.Pattern.compile("^.+$");

              /**
               * Handles the POST requests specified in the STOW-RS, WADO-RS, or QIDO-RS standard. Since this
               * implements an industry standard API, the dicom_web_path is interpreted directly by the serving
               * binary. For example, if the request is for `/v1alpha/projects/{project_id}/locations/{location_
               * id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}/dicomWeb/studies/{study_id}`, then
               * `/studies/{study_id}` is passed to the serving binary as the dicom_web_path.
               *
               * Create a request for the method "dicomWeb.dicomWebPost".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link DicomWebPost#execute()} method to invoke the remote
               * operation. <p> {@link
               * DicomWebPost#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent The name of the DICOM store that is being accessed (e.g.,
             *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
             *        ore_id}`).
               * @param dicomWebPath The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or
            QIDO-RS standard (e.g.,
             *        studies/{study_id}`).
               * @param content the {@link com.google.api.services.healthcare.v1alpha.model.HttpBody}
               * @since 1.13
               */
              protected DicomWebPost(java.lang.String parent, java.lang.String dicomWebPath, com.google.api.services.healthcare.v1alpha.model.HttpBody content) {
                super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1alpha.model.HttpBody.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
                }
                this.dicomWebPath = com.google.api.client.util.Preconditions.checkNotNull(dicomWebPath, "Required parameter dicomWebPath must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                      "Parameter dicomWebPath must conform to the pattern " +
                      "^.+$");
                }
              }

              @Override
              public DicomWebPost set$Xgafv(java.lang.String $Xgafv) {
                return (DicomWebPost) super.set$Xgafv($Xgafv);
              }

              @Override
              public DicomWebPost setAccessToken(java.lang.String accessToken) {
                return (DicomWebPost) super.setAccessToken(accessToken);
              }

              @Override
              public DicomWebPost setAlt(java.lang.String alt) {
                return (DicomWebPost) super.setAlt(alt);
              }

              @Override
              public DicomWebPost setCallback(java.lang.String callback) {
                return (DicomWebPost) super.setCallback(callback);
              }

              @Override
              public DicomWebPost setFields(java.lang.String fields) {
                return (DicomWebPost) super.setFields(fields);
              }

              @Override
              public DicomWebPost setKey(java.lang.String key) {
                return (DicomWebPost) super.setKey(key);
              }

              @Override
              public DicomWebPost setOauthToken(java.lang.String oauthToken) {
                return (DicomWebPost) super.setOauthToken(oauthToken);
              }

              @Override
              public DicomWebPost setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (DicomWebPost) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public DicomWebPost setQuotaUser(java.lang.String quotaUser) {
                return (DicomWebPost) super.setQuotaUser(quotaUser);
              }

              @Override
              public DicomWebPost setUploadType(java.lang.String uploadType) {
                return (DicomWebPost) super.setUploadType(uploadType);
              }

              @Override
              public DicomWebPost setUploadProtocol(java.lang.String uploadProtocol) {
                return (DicomWebPost) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * The name of the DICOM store that is being accessed (e.g., `projects/{project_id}/lo
               * cations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** The name of the DICOM store that is being accessed (e.g., `projects/{project_id}/locations/{locatio
             n_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * The name of the DICOM store that is being accessed (e.g., `projects/{project_id}/lo
               * cations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
               */
              public DicomWebPost setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or QIDO-RS
               * standard (e.g., studies/{study_id}`).
               */
              @com.google.api.client.util.Key
              private java.lang.String dicomWebPath;

              /** The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or QIDO-RS standard (e.g.,
             studies/{study_id}`).
               */
              public java.lang.String getDicomWebPath() {
                return dicomWebPath;
              }

              /**
               * The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or QIDO-RS
               * standard (e.g., studies/{study_id}`).
               */
              public DicomWebPost setDicomWebPath(java.lang.String dicomWebPath) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                      "Parameter dicomWebPath must conform to the pattern " +
                      "^.+$");
                }
                this.dicomWebPath = dicomWebPath;
                return this;
              }

              @Override
              public DicomWebPost set(String parameterName, Object value) {
                return (DicomWebPost) super.set(parameterName, value);
              }
            }

          }
        }
        /**
         * An accessor for creating requests from the FhirStores collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code CloudHealthcare healthcare = new CloudHealthcare(...);}
         *   {@code CloudHealthcare.FhirStores.List request = healthcare.fhirStores().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public FhirStores fhirStores() {
          return new FhirStores();
        }

        /**
         * The "fhirStores" collection of methods.
         */
        public class FhirStores {

          /**
           * Creates a new FHIR store within the parent dataset.
           *
           * Create a request for the method "fhirStores.create".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent The name of the dataset this FHIR store belongs to.
           * @param content the {@link com.google.api.services.healthcare.v1alpha.model.FhirStore}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.healthcare.v1alpha.model.FhirStore content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.FhirStore> {

            private static final String REST_PATH = "v1alpha/{+parent}/fhirStores";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");

            /**
             * Creates a new FHIR store within the parent dataset.
             *
             * Create a request for the method "fhirStores.create".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent The name of the dataset this FHIR store belongs to.
             * @param content the {@link com.google.api.services.healthcare.v1alpha.model.FhirStore}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.healthcare.v1alpha.model.FhirStore content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1alpha.model.FhirStore.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the dataset this FHIR store belongs to. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** The name of the dataset this FHIR store belongs to.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** The name of the dataset this FHIR store belongs to. */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * The ID of the FHIR store that is being created. The string must match the following
             * regex: `[\p{L}\p{N}_\-\.]{1,256}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String fhirStoreId;

            /** The ID of the FHIR store that is being created. The string must match the following regex:
           `[\p{L}\p{N}_\-\.]{1,256}`.
             */
            public java.lang.String getFhirStoreId() {
              return fhirStoreId;
            }

            /**
             * The ID of the FHIR store that is being created. The string must match the following
             * regex: `[\p{L}\p{N}_\-\.]{1,256}`.
             */
            public Create setFhirStoreId(java.lang.String fhirStoreId) {
              this.fhirStoreId = fhirStoreId;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes the FHIR store and removes all resources that are contained within it.
           *
           * Create a request for the method "fhirStores.delete".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name The resource name of the FHIR store to delete.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.Empty> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");

            /**
             * Deletes the FHIR store and removes all resources that are contained within it.
             *
             * Create a request for the method "fhirStores.delete".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The resource name of the FHIR store to delete.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(CloudHealthcare.this, "DELETE", REST_PATH, null, com.google.api.services.healthcare.v1alpha.model.Empty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** The resource name of the FHIR store to delete. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The resource name of the FHIR store to delete.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The resource name of the FHIR store to delete. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Executes all the requests in the given Bundle.
           *
           * Create a request for the method "fhirStores.executeBundle".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link ExecuteBundle#execute()} method to invoke the remote operation.
           *
           * @param parent Name of the FHIR store in which this bundle will be executed.
           * @param content the {@link com.google.api.services.healthcare.v1alpha.model.HttpBody}
           * @return the request
           */
          public ExecuteBundle executeBundle(java.lang.String parent, com.google.api.services.healthcare.v1alpha.model.HttpBody content) throws java.io.IOException {
            ExecuteBundle result = new ExecuteBundle(parent, content);
            initialize(result);
            return result;
          }

          public class ExecuteBundle extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.HttpBody> {

            private static final String REST_PATH = "v1alpha/{+parent}";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");

            /**
             * Executes all the requests in the given Bundle.
             *
             * Create a request for the method "fhirStores.executeBundle".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link ExecuteBundle#execute()} method to invoke the remote
             * operation. <p> {@link ExecuteBundle#initialize(com.google.api.client.googleapis.services.Abstra
             * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
             * the constructor. </p>
             *
             * @param parent Name of the FHIR store in which this bundle will be executed.
             * @param content the {@link com.google.api.services.healthcare.v1alpha.model.HttpBody}
             * @since 1.13
             */
            protected ExecuteBundle(java.lang.String parent, com.google.api.services.healthcare.v1alpha.model.HttpBody content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1alpha.model.HttpBody.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
            }

            @Override
            public ExecuteBundle set$Xgafv(java.lang.String $Xgafv) {
              return (ExecuteBundle) super.set$Xgafv($Xgafv);
            }

            @Override
            public ExecuteBundle setAccessToken(java.lang.String accessToken) {
              return (ExecuteBundle) super.setAccessToken(accessToken);
            }

            @Override
            public ExecuteBundle setAlt(java.lang.String alt) {
              return (ExecuteBundle) super.setAlt(alt);
            }

            @Override
            public ExecuteBundle setCallback(java.lang.String callback) {
              return (ExecuteBundle) super.setCallback(callback);
            }

            @Override
            public ExecuteBundle setFields(java.lang.String fields) {
              return (ExecuteBundle) super.setFields(fields);
            }

            @Override
            public ExecuteBundle setKey(java.lang.String key) {
              return (ExecuteBundle) super.setKey(key);
            }

            @Override
            public ExecuteBundle setOauthToken(java.lang.String oauthToken) {
              return (ExecuteBundle) super.setOauthToken(oauthToken);
            }

            @Override
            public ExecuteBundle setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (ExecuteBundle) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public ExecuteBundle setQuotaUser(java.lang.String quotaUser) {
              return (ExecuteBundle) super.setQuotaUser(quotaUser);
            }

            @Override
            public ExecuteBundle setUploadType(java.lang.String uploadType) {
              return (ExecuteBundle) super.setUploadType(uploadType);
            }

            @Override
            public ExecuteBundle setUploadProtocol(java.lang.String uploadProtocol) {
              return (ExecuteBundle) super.setUploadProtocol(uploadProtocol);
            }

            /** Name of the FHIR store in which this bundle will be executed. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Name of the FHIR store in which this bundle will be executed.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Name of the FHIR store in which this bundle will be executed. */
            public ExecuteBundle setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public ExecuteBundle set(String parameterName, Object value) {
              return (ExecuteBundle) super.set(parameterName, value);
            }
          }
          /**
           * Export resources from the FHIR store to the specified destination. Fatal errors will be populated
           * in the error field. Otherwise a detailed response will be returned as of type
           * ExportResourcesResponse contained in the response field when the operation finishes. The metadata
           * field type is OperationMetadata.
           *
           * Create a request for the method "fhirStores.export".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link Export#execute()} method to invoke the remote operation.
           *
           * @param name The FHIR store name to export from. The name should be in the format
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_stor
           *        e_id}`.
           * @param content the {@link com.google.api.services.healthcare.v1alpha.model.ExportResourcesRequest}
           * @return the request
           */
          public Export export(java.lang.String name, com.google.api.services.healthcare.v1alpha.model.ExportResourcesRequest content) throws java.io.IOException {
            Export result = new Export(name, content);
            initialize(result);
            return result;
          }

          public class Export extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.Operation> {

            private static final String REST_PATH = "v1alpha/{+name}:export";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");

            /**
             * Export resources from the FHIR store to the specified destination. Fatal errors will be
             * populated in the error field. Otherwise a detailed response will be returned as of type
             * ExportResourcesResponse contained in the response field when the operation finishes. The
             * metadata field type is OperationMetadata.
             *
             * Create a request for the method "fhirStores.export".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link Export#execute()} method to invoke the remote operation.
             * <p> {@link
             * Export#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The FHIR store name to export from. The name should be in the format
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_stor
           *        e_id}`.
             * @param content the {@link com.google.api.services.healthcare.v1alpha.model.ExportResourcesRequest}
             * @since 1.13
             */
            protected Export(java.lang.String name, com.google.api.services.healthcare.v1alpha.model.ExportResourcesRequest content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1alpha.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
            }

            @Override
            public Export set$Xgafv(java.lang.String $Xgafv) {
              return (Export) super.set$Xgafv($Xgafv);
            }

            @Override
            public Export setAccessToken(java.lang.String accessToken) {
              return (Export) super.setAccessToken(accessToken);
            }

            @Override
            public Export setAlt(java.lang.String alt) {
              return (Export) super.setAlt(alt);
            }

            @Override
            public Export setCallback(java.lang.String callback) {
              return (Export) super.setCallback(callback);
            }

            @Override
            public Export setFields(java.lang.String fields) {
              return (Export) super.setFields(fields);
            }

            @Override
            public Export setKey(java.lang.String key) {
              return (Export) super.setKey(key);
            }

            @Override
            public Export setOauthToken(java.lang.String oauthToken) {
              return (Export) super.setOauthToken(oauthToken);
            }

            @Override
            public Export setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Export) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Export setQuotaUser(java.lang.String quotaUser) {
              return (Export) super.setQuotaUser(quotaUser);
            }

            @Override
            public Export setUploadType(java.lang.String uploadType) {
              return (Export) super.setUploadType(uploadType);
            }

            @Override
            public Export setUploadProtocol(java.lang.String uploadProtocol) {
              return (Export) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * The FHIR store name to export from. The name should be in the format `projects/{proje
             * ct_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The FHIR store name to export from. The name should be in the format
           `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * The FHIR store name to export from. The name should be in the format `projects/{proje
             * ct_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
             */
            public Export setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Export set(String parameterName, Object value) {
              return (Export) super.set(parameterName, value);
            }
          }
          /**
           * Gets the specified FHIR store.
           *
           * Create a request for the method "fhirStores.get".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name The resource name of the FHIR store to get.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.FhirStore> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");

            /**
             * Gets the specified FHIR store.
             *
             * Create a request for the method "fhirStores.get".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The resource name of the FHIR store to get.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1alpha.model.FhirStore.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** The resource name of the FHIR store to get. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The resource name of the FHIR store to get.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The resource name of the FHIR store to get. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Gets the access control policy for a FHIR store or security label within a FHIR store. Returns
           * NOT_FOUND error if the resource does not exist. Returns an empty policy if the resource exists
           * but does not have a policy set.
           *
           * Authorization requires the Google IAM permission 'healthcare.fhirStores.getIamPolicy' for a FHIR
           * store or 'healthcare.securityLabels.getIamPolicy' for a security label
           *
           * Create a request for the method "fhirStores.getIamPolicy".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy is being requested.
          See the operation documentation for
           *        the appropriate value for this field.
           * @param content the {@link com.google.api.services.healthcare.v1alpha.model.GetIamPolicyRequest}
           * @return the request
           */
          public GetIamPolicy getIamPolicy(java.lang.String resource, com.google.api.services.healthcare.v1alpha.model.GetIamPolicyRequest content) throws java.io.IOException {
            GetIamPolicy result = new GetIamPolicy(resource, content);
            initialize(result);
            return result;
          }

          public class GetIamPolicy extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.Policy> {

            private static final String REST_PATH = "v1alpha/{+resource}:getIamPolicy";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");

            /**
             * Gets the access control policy for a FHIR store or security label within a FHIR store. Returns
             * NOT_FOUND error if the resource does not exist. Returns an empty policy if the resource exists
             * but does not have a policy set.
             *
             * Authorization requires the Google IAM permission 'healthcare.fhirStores.getIamPolicy' for a
             * FHIR store or 'healthcare.securityLabels.getIamPolicy' for a security label
             *
             * Create a request for the method "fhirStores.getIamPolicy".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
             * operation. <p> {@link
             * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy is being requested.
          See the operation documentation for
           *        the appropriate value for this field.
             * @param content the {@link com.google.api.services.healthcare.v1alpha.model.GetIamPolicyRequest}
             * @since 1.13
             */
            protected GetIamPolicy(java.lang.String resource, com.google.api.services.healthcare.v1alpha.model.GetIamPolicyRequest content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1alpha.model.Policy.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
            }

            @Override
            public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
              return (GetIamPolicy) super.set$Xgafv($Xgafv);
            }

            @Override
            public GetIamPolicy setAccessToken(java.lang.String accessToken) {
              return (GetIamPolicy) super.setAccessToken(accessToken);
            }

            @Override
            public GetIamPolicy setAlt(java.lang.String alt) {
              return (GetIamPolicy) super.setAlt(alt);
            }

            @Override
            public GetIamPolicy setCallback(java.lang.String callback) {
              return (GetIamPolicy) super.setCallback(callback);
            }

            @Override
            public GetIamPolicy setFields(java.lang.String fields) {
              return (GetIamPolicy) super.setFields(fields);
            }

            @Override
            public GetIamPolicy setKey(java.lang.String key) {
              return (GetIamPolicy) super.setKey(key);
            }

            @Override
            public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
              return (GetIamPolicy) super.setOauthToken(oauthToken);
            }

            @Override
            public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
              return (GetIamPolicy) super.setQuotaUser(quotaUser);
            }

            @Override
            public GetIamPolicy setUploadType(java.lang.String uploadType) {
              return (GetIamPolicy) super.setUploadType(uploadType);
            }

            @Override
            public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
              return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy is being requested. See the operation
             * documentation for the appropriate value for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy is being requested. See the operation documentation for
           the appropriate value for this field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy is being requested. See the operation
             * documentation for the appropriate value for this field.
             */
            public GetIamPolicy setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public GetIamPolicy set(String parameterName, Object value) {
              return (GetIamPolicy) super.set(parameterName, value);
            }
          }
          /**
           * Gets the capabilities statement for the store.
           *
           * Create a request for the method "fhirStores.getMetadata".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link GetMetadata#execute()} method to invoke the remote operation.
           *
           * @param name Name of the FHIR store to retrieve the capabilities for.
           * @return the request
           */
          public GetMetadata getMetadata(java.lang.String name) throws java.io.IOException {
            GetMetadata result = new GetMetadata(name);
            initialize(result);
            return result;
          }

          public class GetMetadata extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.HttpBody> {

            private static final String REST_PATH = "v1alpha/{+name}/metadata";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");

            /**
             * Gets the capabilities statement for the store.
             *
             * Create a request for the method "fhirStores.getMetadata".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link GetMetadata#execute()} method to invoke the remote
             * operation. <p> {@link
             * GetMetadata#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Name of the FHIR store to retrieve the capabilities for.
             * @since 1.13
             */
            protected GetMetadata(java.lang.String name) {
              super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1alpha.model.HttpBody.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public GetMetadata set$Xgafv(java.lang.String $Xgafv) {
              return (GetMetadata) super.set$Xgafv($Xgafv);
            }

            @Override
            public GetMetadata setAccessToken(java.lang.String accessToken) {
              return (GetMetadata) super.setAccessToken(accessToken);
            }

            @Override
            public GetMetadata setAlt(java.lang.String alt) {
              return (GetMetadata) super.setAlt(alt);
            }

            @Override
            public GetMetadata setCallback(java.lang.String callback) {
              return (GetMetadata) super.setCallback(callback);
            }

            @Override
            public GetMetadata setFields(java.lang.String fields) {
              return (GetMetadata) super.setFields(fields);
            }

            @Override
            public GetMetadata setKey(java.lang.String key) {
              return (GetMetadata) super.setKey(key);
            }

            @Override
            public GetMetadata setOauthToken(java.lang.String oauthToken) {
              return (GetMetadata) super.setOauthToken(oauthToken);
            }

            @Override
            public GetMetadata setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GetMetadata) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GetMetadata setQuotaUser(java.lang.String quotaUser) {
              return (GetMetadata) super.setQuotaUser(quotaUser);
            }

            @Override
            public GetMetadata setUploadType(java.lang.String uploadType) {
              return (GetMetadata) super.setUploadType(uploadType);
            }

            @Override
            public GetMetadata setUploadProtocol(java.lang.String uploadProtocol) {
              return (GetMetadata) super.setUploadProtocol(uploadProtocol);
            }

            /** Name of the FHIR store to retrieve the capabilities for. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Name of the FHIR store to retrieve the capabilities for.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Name of the FHIR store to retrieve the capabilities for. */
            public GetMetadata setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public GetMetadata set(String parameterName, Object value) {
              return (GetMetadata) super.set(parameterName, value);
            }
          }
          /**
           * Import resources to the FHIR store by loading data from the specified sources. Fatal errors will
           * be populated in the error field. Otherwise a detailed response will be returned as of type
           * ImportResourcesResponse contained in the response field when the operation finishes. The metadata
           * field type is OperationMetadata.
           *
           * Create a request for the method "fhirStores.import".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link CloudHealthcareImport#execute()} method to invoke the remote
           * operation.
           *
           * @param name The FHIR store name to import FHIR resources to. The name should be in the
          format
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_stor
           *        e_id}`.
           * @param content the {@link com.google.api.services.healthcare.v1alpha.model.ImportResourcesRequest}
           * @return the request
           */
          public CloudHealthcareImport healthcareImport(java.lang.String name, com.google.api.services.healthcare.v1alpha.model.ImportResourcesRequest content) throws java.io.IOException {
            CloudHealthcareImport result = new CloudHealthcareImport(name, content);
            initialize(result);
            return result;
          }

          public class CloudHealthcareImport extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.Operation> {

            private static final String REST_PATH = "v1alpha/{+name}:import";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");

            /**
             * Import resources to the FHIR store by loading data from the specified sources. Fatal errors
             * will be populated in the error field. Otherwise a detailed response will be returned as of type
             * ImportResourcesResponse contained in the response field when the operation finishes. The
             * metadata field type is OperationMetadata.
             *
             * Create a request for the method "fhirStores.import".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link CloudHealthcareImport#execute()} method to invoke the
             * remote operation. <p> {@link CloudHealthcareImport#initialize(com.google.api.client.googleapis.
             * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
             * after invoking the constructor. </p>
             *
             * @param name The FHIR store name to import FHIR resources to. The name should be in the
          format
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_stor
           *        e_id}`.
             * @param content the {@link com.google.api.services.healthcare.v1alpha.model.ImportResourcesRequest}
             * @since 1.13
             */
            protected CloudHealthcareImport(java.lang.String name, com.google.api.services.healthcare.v1alpha.model.ImportResourcesRequest content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1alpha.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
            }

            @Override
            public CloudHealthcareImport set$Xgafv(java.lang.String $Xgafv) {
              return (CloudHealthcareImport) super.set$Xgafv($Xgafv);
            }

            @Override
            public CloudHealthcareImport setAccessToken(java.lang.String accessToken) {
              return (CloudHealthcareImport) super.setAccessToken(accessToken);
            }

            @Override
            public CloudHealthcareImport setAlt(java.lang.String alt) {
              return (CloudHealthcareImport) super.setAlt(alt);
            }

            @Override
            public CloudHealthcareImport setCallback(java.lang.String callback) {
              return (CloudHealthcareImport) super.setCallback(callback);
            }

            @Override
            public CloudHealthcareImport setFields(java.lang.String fields) {
              return (CloudHealthcareImport) super.setFields(fields);
            }

            @Override
            public CloudHealthcareImport setKey(java.lang.String key) {
              return (CloudHealthcareImport) super.setKey(key);
            }

            @Override
            public CloudHealthcareImport setOauthToken(java.lang.String oauthToken) {
              return (CloudHealthcareImport) super.setOauthToken(oauthToken);
            }

            @Override
            public CloudHealthcareImport setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (CloudHealthcareImport) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public CloudHealthcareImport setQuotaUser(java.lang.String quotaUser) {
              return (CloudHealthcareImport) super.setQuotaUser(quotaUser);
            }

            @Override
            public CloudHealthcareImport setUploadType(java.lang.String uploadType) {
              return (CloudHealthcareImport) super.setUploadType(uploadType);
            }

            @Override
            public CloudHealthcareImport setUploadProtocol(java.lang.String uploadProtocol) {
              return (CloudHealthcareImport) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * The FHIR store name to import FHIR resources to. The name should be in the format `pr
             * ojects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_st
             * ore_id}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The FHIR store name to import FHIR resources to. The name should be in the format
           `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * The FHIR store name to import FHIR resources to. The name should be in the format `pr
             * ojects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_st
             * ore_id}`.
             */
            public CloudHealthcareImport setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public CloudHealthcareImport set(String parameterName, Object value) {
              return (CloudHealthcareImport) super.set(parameterName, value);
            }
          }
          /**
           * Lists the FHIR stores in the given dataset.
           *
           * Create a request for the method "fhirStores.list".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Name of the dataset.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.ListFhirStoresResponse> {

            private static final String REST_PATH = "v1alpha/{+parent}/fhirStores";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");

            /**
             * Lists the FHIR stores in the given dataset.
             *
             * Create a request for the method "fhirStores.list".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Name of the dataset.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1alpha.model.ListFhirStoresResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** Name of the dataset. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Name of the dataset.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Name of the dataset. */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Limit on the number of FHIR stores to return in a single response.  If zero the
             * default page size of 100 is used.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Limit on the number of FHIR stores to return in a single response.  If zero the default page size
           of 100 is used.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Limit on the number of FHIR stores to return in a single response.  If zero the
             * default page size of 100 is used.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The next_page_token value returned from the previous List request, if any. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The next_page_token value returned from the previous List request, if any.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The next_page_token value returned from the previous List request, if any. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates the FHIR store.
           *
           * Create a request for the method "fhirStores.patch".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Output only. Resource name of the FHIR store, of the form
           *        `projects/{project_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
           * @param content the {@link com.google.api.services.healthcare.v1alpha.model.FhirStore}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.healthcare.v1alpha.model.FhirStore content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.FhirStore> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");

            /**
             * Updates the FHIR store.
             *
             * Create a request for the method "fhirStores.patch".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Output only. Resource name of the FHIR store, of the form
           *        `projects/{project_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
             * @param content the {@link com.google.api.services.healthcare.v1alpha.model.FhirStore}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.healthcare.v1alpha.model.FhirStore content) {
              super(CloudHealthcare.this, "PATCH", REST_PATH, content, com.google.api.services.healthcare.v1alpha.model.FhirStore.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Output only. Resource name of the FHIR store, of the form
             * `projects/{project_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Output only. Resource name of the FHIR store, of the form
           `projects/{project_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Output only. Resource name of the FHIR store, of the form
             * `projects/{project_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * The update mask applies to the resource. For the `FieldMask` definition, see
             * https://developers.google.com/protocol-
             * buffers/docs/reference/google.protobuf#fieldmask
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** The update mask applies to the resource. For the `FieldMask` definition, see
           https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * The update mask applies to the resource. For the `FieldMask` definition, see
             * https://developers.google.com/protocol-
             * buffers/docs/reference/google.protobuf#fieldmask
             */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }
          /**
           * Sets the access control policy for a FHIR store or security label within a FHIR store. Replaces
           * any existing policy.
           *
           * Authorization requires the Google IAM permission 'healthcare.fhirStores.setIamPolicy' for a FHIR
           * store or 'healthcare.securityLabels.setIamPolicy' for a security label
           *
           * Create a request for the method "fhirStores.setIamPolicy".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy is being specified.
          See the operation documentation for
           *        the appropriate value for this field.
           * @param content the {@link com.google.api.services.healthcare.v1alpha.model.SetIamPolicyRequest}
           * @return the request
           */
          public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.healthcare.v1alpha.model.SetIamPolicyRequest content) throws java.io.IOException {
            SetIamPolicy result = new SetIamPolicy(resource, content);
            initialize(result);
            return result;
          }

          public class SetIamPolicy extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.Policy> {

            private static final String REST_PATH = "v1alpha/{+resource}:setIamPolicy";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");

            /**
             * Sets the access control policy for a FHIR store or security label within a FHIR store. Replaces
             * any existing policy.
             *
             * Authorization requires the Google IAM permission 'healthcare.fhirStores.setIamPolicy' for a
             * FHIR store or 'healthcare.securityLabels.setIamPolicy' for a security label
             *
             * Create a request for the method "fhirStores.setIamPolicy".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
             * operation. <p> {@link
             * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy is being specified.
          See the operation documentation for
           *        the appropriate value for this field.
             * @param content the {@link com.google.api.services.healthcare.v1alpha.model.SetIamPolicyRequest}
             * @since 1.13
             */
            protected SetIamPolicy(java.lang.String resource, com.google.api.services.healthcare.v1alpha.model.SetIamPolicyRequest content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1alpha.model.Policy.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
            }

            @Override
            public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
              return (SetIamPolicy) super.set$Xgafv($Xgafv);
            }

            @Override
            public SetIamPolicy setAccessToken(java.lang.String accessToken) {
              return (SetIamPolicy) super.setAccessToken(accessToken);
            }

            @Override
            public SetIamPolicy setAlt(java.lang.String alt) {
              return (SetIamPolicy) super.setAlt(alt);
            }

            @Override
            public SetIamPolicy setCallback(java.lang.String callback) {
              return (SetIamPolicy) super.setCallback(callback);
            }

            @Override
            public SetIamPolicy setFields(java.lang.String fields) {
              return (SetIamPolicy) super.setFields(fields);
            }

            @Override
            public SetIamPolicy setKey(java.lang.String key) {
              return (SetIamPolicy) super.setKey(key);
            }

            @Override
            public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
              return (SetIamPolicy) super.setOauthToken(oauthToken);
            }

            @Override
            public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
              return (SetIamPolicy) super.setQuotaUser(quotaUser);
            }

            @Override
            public SetIamPolicy setUploadType(java.lang.String uploadType) {
              return (SetIamPolicy) super.setUploadType(uploadType);
            }

            @Override
            public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
              return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy is being specified. See the operation
             * documentation for the appropriate value for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy is being specified. See the operation documentation for
           the appropriate value for this field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy is being specified. See the operation
             * documentation for the appropriate value for this field.
             */
            public SetIamPolicy setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public SetIamPolicy set(String parameterName, Object value) {
              return (SetIamPolicy) super.set(parameterName, value);
            }
          }
          /**
           * Returns permissions that a caller has on the specified resource.  If the resource does not exist,
           * this will return an empty set of permissions, not a NOT_FOUND error.
           *
           * There is no permission required to make this API call.
           *
           * Create a request for the method "fhirStores.testIamPermissions".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested.
          See the operation
           *        documentation for the appropriate value for this field.
           * @param content the {@link com.google.api.services.healthcare.v1alpha.model.TestIamPermissionsRequest}
           * @return the request
           */
          public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.healthcare.v1alpha.model.TestIamPermissionsRequest content) throws java.io.IOException {
            TestIamPermissions result = new TestIamPermissions(resource, content);
            initialize(result);
            return result;
          }

          public class TestIamPermissions extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.TestIamPermissionsResponse> {

            private static final String REST_PATH = "v1alpha/{+resource}:testIamPermissions";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/.+$");

            /**
             * Returns permissions that a caller has on the specified resource.  If the resource does not
             * exist, this will return an empty set of permissions, not a NOT_FOUND error.
             *
             * There is no permission required to make this API call.
             *
             * Create a request for the method "fhirStores.testIamPermissions".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
             * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
             * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy detail is being requested.
          See the operation
           *        documentation for the appropriate value for this field.
             * @param content the {@link com.google.api.services.healthcare.v1alpha.model.TestIamPermissionsRequest}
             * @since 1.13
             */
            protected TestIamPermissions(java.lang.String resource, com.google.api.services.healthcare.v1alpha.model.TestIamPermissionsRequest content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1alpha.model.TestIamPermissionsResponse.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/.+$");
              }
            }

            @Override
            public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
              return (TestIamPermissions) super.set$Xgafv($Xgafv);
            }

            @Override
            public TestIamPermissions setAccessToken(java.lang.String accessToken) {
              return (TestIamPermissions) super.setAccessToken(accessToken);
            }

            @Override
            public TestIamPermissions setAlt(java.lang.String alt) {
              return (TestIamPermissions) super.setAlt(alt);
            }

            @Override
            public TestIamPermissions setCallback(java.lang.String callback) {
              return (TestIamPermissions) super.setCallback(callback);
            }

            @Override
            public TestIamPermissions setFields(java.lang.String fields) {
              return (TestIamPermissions) super.setFields(fields);
            }

            @Override
            public TestIamPermissions setKey(java.lang.String key) {
              return (TestIamPermissions) super.setKey(key);
            }

            @Override
            public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
              return (TestIamPermissions) super.setOauthToken(oauthToken);
            }

            @Override
            public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
              return (TestIamPermissions) super.setQuotaUser(quotaUser);
            }

            @Override
            public TestIamPermissions setUploadType(java.lang.String uploadType) {
              return (TestIamPermissions) super.setUploadType(uploadType);
            }

            @Override
            public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
              return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy detail is being requested. See the
             * operation documentation for the appropriate value for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy detail is being requested. See the operation
           documentation for the appropriate value for this field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy detail is being requested. See the
             * operation documentation for the appropriate value for this field.
             */
            public TestIamPermissions setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/.+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public TestIamPermissions set(String parameterName, Object value) {
              return (TestIamPermissions) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the Resources collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code CloudHealthcare healthcare = new CloudHealthcare(...);}
           *   {@code CloudHealthcare.Resources.List request = healthcare.resources().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Resources resources() {
            return new Resources();
          }

          /**
           * The "resources" collection of methods.
           */
          public class Resources {

            /**
             * Searches resources in the given FHIR store.
             *
             * Create a request for the method "resources._search".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Search#execute()} method to invoke the remote operation.
             *
             * @param parent Name of the FHIR store to retrieve resources from.
             * @param content the {@link com.google.api.services.healthcare.v1alpha.model.SearchResourcesRequest}
             * @return the request
             */
            public Search search(java.lang.String parent, com.google.api.services.healthcare.v1alpha.model.SearchResourcesRequest content) throws java.io.IOException {
              Search result = new Search(parent, content);
              initialize(result);
              return result;
            }

            public class Search extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.HttpBody> {

              private static final String REST_PATH = "v1alpha/{+parent}/resources/_search";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");

              /**
               * Searches resources in the given FHIR store.
               *
               * Create a request for the method "resources._search".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Search#execute()} method to invoke the remote operation.
               * <p> {@link
               * Search#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Name of the FHIR store to retrieve resources from.
               * @param content the {@link com.google.api.services.healthcare.v1alpha.model.SearchResourcesRequest}
               * @since 1.13
               */
              protected Search(java.lang.String parent, com.google.api.services.healthcare.v1alpha.model.SearchResourcesRequest content) {
                super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1alpha.model.HttpBody.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
                }
              }

              @Override
              public Search set$Xgafv(java.lang.String $Xgafv) {
                return (Search) super.set$Xgafv($Xgafv);
              }

              @Override
              public Search setAccessToken(java.lang.String accessToken) {
                return (Search) super.setAccessToken(accessToken);
              }

              @Override
              public Search setAlt(java.lang.String alt) {
                return (Search) super.setAlt(alt);
              }

              @Override
              public Search setCallback(java.lang.String callback) {
                return (Search) super.setCallback(callback);
              }

              @Override
              public Search setFields(java.lang.String fields) {
                return (Search) super.setFields(fields);
              }

              @Override
              public Search setKey(java.lang.String key) {
                return (Search) super.setKey(key);
              }

              @Override
              public Search setOauthToken(java.lang.String oauthToken) {
                return (Search) super.setOauthToken(oauthToken);
              }

              @Override
              public Search setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Search) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Search setQuotaUser(java.lang.String quotaUser) {
                return (Search) super.setQuotaUser(quotaUser);
              }

              @Override
              public Search setUploadType(java.lang.String uploadType) {
                return (Search) super.setUploadType(uploadType);
              }

              @Override
              public Search setUploadProtocol(java.lang.String uploadProtocol) {
                return (Search) super.setUploadProtocol(uploadProtocol);
              }

              /** Name of the FHIR store to retrieve resources from. */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Name of the FHIR store to retrieve resources from.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /** Name of the FHIR store to retrieve resources from. */
              public Search setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public Search set(String parameterName, Object value) {
                return (Search) super.set(parameterName, value);
              }
            }
            /**
             * Deletes FHIR resources matching a search query. Note: unless resource versioning is disabled by
             * setting the disable_resource_versioning flag on the FHIR store, the deleted resources will be
             * moved to a history repository that can still be retrieved through GetResourceVersion and related
             * methods, unless they are removed by the DeleteResourceVersions method.
             *
             * Create a request for the method "resources.conditionalDeleteResource".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link ConditionalDeleteResource#execute()} method to invoke the remote
             * operation.
             *
             * @param parent The name of the FHIR store this resource belongs to.
             * @param type The type of the resource to update.
             * @return the request
             */
            public ConditionalDeleteResource conditionalDeleteResource(java.lang.String parent, java.lang.String type) throws java.io.IOException {
              ConditionalDeleteResource result = new ConditionalDeleteResource(parent, type);
              initialize(result);
              return result;
            }

            public class ConditionalDeleteResource extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.Empty> {

              private static final String REST_PATH = "v1alpha/{+parent}/resources/{+type}";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");

              private final java.util.regex.Pattern TYPE_PATTERN =
                  java.util.regex.Pattern.compile("^[^/]+$");

              /**
               * Deletes FHIR resources matching a search query. Note: unless resource versioning is disabled by
               * setting the disable_resource_versioning flag on the FHIR store, the deleted resources will be
               * moved to a history repository that can still be retrieved through GetResourceVersion and
               * related methods, unless they are removed by the DeleteResourceVersions method.
               *
               * Create a request for the method "resources.conditionalDeleteResource".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link ConditionalDeleteResource#execute()} method to invoke the
               * remote operation. <p> {@link ConditionalDeleteResource#initialize(com.google.api.client.googlea
               * pis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
               * immediately after invoking the constructor. </p>
               *
               * @param parent The name of the FHIR store this resource belongs to.
               * @param type The type of the resource to update.
               * @since 1.13
               */
              protected ConditionalDeleteResource(java.lang.String parent, java.lang.String type) {
                super(CloudHealthcare.this, "DELETE", REST_PATH, null, com.google.api.services.healthcare.v1alpha.model.Empty.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
                }
                this.type = com.google.api.client.util.Preconditions.checkNotNull(type, "Required parameter type must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(TYPE_PATTERN.matcher(type).matches(),
                      "Parameter type must conform to the pattern " +
                      "^[^/]+$");
                }
              }

              @Override
              public ConditionalDeleteResource set$Xgafv(java.lang.String $Xgafv) {
                return (ConditionalDeleteResource) super.set$Xgafv($Xgafv);
              }

              @Override
              public ConditionalDeleteResource setAccessToken(java.lang.String accessToken) {
                return (ConditionalDeleteResource) super.setAccessToken(accessToken);
              }

              @Override
              public ConditionalDeleteResource setAlt(java.lang.String alt) {
                return (ConditionalDeleteResource) super.setAlt(alt);
              }

              @Override
              public ConditionalDeleteResource setCallback(java.lang.String callback) {
                return (ConditionalDeleteResource) super.setCallback(callback);
              }

              @Override
              public ConditionalDeleteResource setFields(java.lang.String fields) {
                return (ConditionalDeleteResource) super.setFields(fields);
              }

              @Override
              public ConditionalDeleteResource setKey(java.lang.String key) {
                return (ConditionalDeleteResource) super.setKey(key);
              }

              @Override
              public ConditionalDeleteResource setOauthToken(java.lang.String oauthToken) {
                return (ConditionalDeleteResource) super.setOauthToken(oauthToken);
              }

              @Override
              public ConditionalDeleteResource setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (ConditionalDeleteResource) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public ConditionalDeleteResource setQuotaUser(java.lang.String quotaUser) {
                return (ConditionalDeleteResource) super.setQuotaUser(quotaUser);
              }

              @Override
              public ConditionalDeleteResource setUploadType(java.lang.String uploadType) {
                return (ConditionalDeleteResource) super.setUploadType(uploadType);
              }

              @Override
              public ConditionalDeleteResource setUploadProtocol(java.lang.String uploadProtocol) {
                return (ConditionalDeleteResource) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the FHIR store this resource belongs to. */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** The name of the FHIR store this resource belongs to.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /** The name of the FHIR store this resource belongs to. */
              public ConditionalDeleteResource setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /** The type of the resource to update. */
              @com.google.api.client.util.Key
              private java.lang.String type;

              /** The type of the resource to update.
               */
              public java.lang.String getType() {
                return type;
              }

              /** The type of the resource to update. */
              public ConditionalDeleteResource setType(java.lang.String type) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(TYPE_PATTERN.matcher(type).matches(),
                      "Parameter type must conform to the pattern " +
                      "^[^/]+$");
                }
                this.type = type;
                return this;
              }

              @Override
              public ConditionalDeleteResource set(String parameterName, Object value) {
                return (ConditionalDeleteResource) super.set(parameterName, value);
              }
            }
            /**
             * Updates parts of a resource if the resource exists based on the search criteria specified via
             * query parameters.
             *
             * Create a request for the method "resources.conditionalPatchResource".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link ConditionalPatchResource#execute()} method to invoke the remote
             * operation.
             *
             * @param parent The name of the FHIR store this resource belongs to.
             * @param type The type of the resource to update.
             * @param content the {@link com.google.api.services.healthcare.v1alpha.model.HttpBody}
             * @return the request
             */
            public ConditionalPatchResource conditionalPatchResource(java.lang.String parent, java.lang.String type, com.google.api.services.healthcare.v1alpha.model.HttpBody content) throws java.io.IOException {
              ConditionalPatchResource result = new ConditionalPatchResource(parent, type, content);
              initialize(result);
              return result;
            }

            public class ConditionalPatchResource extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.HttpBody> {

              private static final String REST_PATH = "v1alpha/{+parent}/resources/{+type}";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");

              private final java.util.regex.Pattern TYPE_PATTERN =
                  java.util.regex.Pattern.compile("^[^/]+$");

              /**
               * Updates parts of a resource if the resource exists based on the search criteria specified via
               * query parameters.
               *
               * Create a request for the method "resources.conditionalPatchResource".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link ConditionalPatchResource#execute()} method to invoke the
               * remote operation. <p> {@link ConditionalPatchResource#initialize(com.google.api.client.googleap
               * is.services.AbstractGoogleClientRequest)} must be called to initialize this instance
               * immediately after invoking the constructor. </p>
               *
               * @param parent The name of the FHIR store this resource belongs to.
               * @param type The type of the resource to update.
               * @param content the {@link com.google.api.services.healthcare.v1alpha.model.HttpBody}
               * @since 1.13
               */
              protected ConditionalPatchResource(java.lang.String parent, java.lang.String type, com.google.api.services.healthcare.v1alpha.model.HttpBody content) {
                super(CloudHealthcare.this, "PATCH", REST_PATH, content, com.google.api.services.healthcare.v1alpha.model.HttpBody.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
                }
                this.type = com.google.api.client.util.Preconditions.checkNotNull(type, "Required parameter type must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(TYPE_PATTERN.matcher(type).matches(),
                      "Parameter type must conform to the pattern " +
                      "^[^/]+$");
                }
              }

              @Override
              public ConditionalPatchResource set$Xgafv(java.lang.String $Xgafv) {
                return (ConditionalPatchResource) super.set$Xgafv($Xgafv);
              }

              @Override
              public ConditionalPatchResource setAccessToken(java.lang.String accessToken) {
                return (ConditionalPatchResource) super.setAccessToken(accessToken);
              }

              @Override
              public ConditionalPatchResource setAlt(java.lang.String alt) {
                return (ConditionalPatchResource) super.setAlt(alt);
              }

              @Override
              public ConditionalPatchResource setCallback(java.lang.String callback) {
                return (ConditionalPatchResource) super.setCallback(callback);
              }

              @Override
              public ConditionalPatchResource setFields(java.lang.String fields) {
                return (ConditionalPatchResource) super.setFields(fields);
              }

              @Override
              public ConditionalPatchResource setKey(java.lang.String key) {
                return (ConditionalPatchResource) super.setKey(key);
              }

              @Override
              public ConditionalPatchResource setOauthToken(java.lang.String oauthToken) {
                return (ConditionalPatchResource) super.setOauthToken(oauthToken);
              }

              @Override
              public ConditionalPatchResource setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (ConditionalPatchResource) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public ConditionalPatchResource setQuotaUser(java.lang.String quotaUser) {
                return (ConditionalPatchResource) super.setQuotaUser(quotaUser);
              }

              @Override
              public ConditionalPatchResource setUploadType(java.lang.String uploadType) {
                return (ConditionalPatchResource) super.setUploadType(uploadType);
              }

              @Override
              public ConditionalPatchResource setUploadProtocol(java.lang.String uploadProtocol) {
                return (ConditionalPatchResource) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the FHIR store this resource belongs to. */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** The name of the FHIR store this resource belongs to.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /** The name of the FHIR store this resource belongs to. */
              public ConditionalPatchResource setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /** The type of the resource to update. */
              @com.google.api.client.util.Key
              private java.lang.String type;

              /** The type of the resource to update.
               */
              public java.lang.String getType() {
                return type;
              }

              /** The type of the resource to update. */
              public ConditionalPatchResource setType(java.lang.String type) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(TYPE_PATTERN.matcher(type).matches(),
                      "Parameter type must conform to the pattern " +
                      "^[^/]+$");
                }
                this.type = type;
                return this;
              }

              @Override
              public ConditionalPatchResource set(String parameterName, Object value) {
                return (ConditionalPatchResource) super.set(parameterName, value);
              }
            }
            /**
             * Updates the entire resource if the resource exists based on the search criteria specified via
             * query parameters.
             *
             * Create a request for the method "resources.conditionalUpdateResource".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link ConditionalUpdateResource#execute()} method to invoke the remote
             * operation.
             *
             * @param parent The name of the FHIR store this resource belongs to.
             * @param type The type of the resource to update.
             * @param content the {@link com.google.api.services.healthcare.v1alpha.model.HttpBody}
             * @return the request
             */
            public ConditionalUpdateResource conditionalUpdateResource(java.lang.String parent, java.lang.String type, com.google.api.services.healthcare.v1alpha.model.HttpBody content) throws java.io.IOException {
              ConditionalUpdateResource result = new ConditionalUpdateResource(parent, type, content);
              initialize(result);
              return result;
            }

            public class ConditionalUpdateResource extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.HttpBody> {

              private static final String REST_PATH = "v1alpha/{+parent}/resources/{+type}";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");

              private final java.util.regex.Pattern TYPE_PATTERN =
                  java.util.regex.Pattern.compile("^[^/]+$");

              /**
               * Updates the entire resource if the resource exists based on the search criteria specified via
               * query parameters.
               *
               * Create a request for the method "resources.conditionalUpdateResource".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link ConditionalUpdateResource#execute()} method to invoke the
               * remote operation. <p> {@link ConditionalUpdateResource#initialize(com.google.api.client.googlea
               * pis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
               * immediately after invoking the constructor. </p>
               *
               * @param parent The name of the FHIR store this resource belongs to.
               * @param type The type of the resource to update.
               * @param content the {@link com.google.api.services.healthcare.v1alpha.model.HttpBody}
               * @since 1.13
               */
              protected ConditionalUpdateResource(java.lang.String parent, java.lang.String type, com.google.api.services.healthcare.v1alpha.model.HttpBody content) {
                super(CloudHealthcare.this, "PUT", REST_PATH, content, com.google.api.services.healthcare.v1alpha.model.HttpBody.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
                }
                this.type = com.google.api.client.util.Preconditions.checkNotNull(type, "Required parameter type must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(TYPE_PATTERN.matcher(type).matches(),
                      "Parameter type must conform to the pattern " +
                      "^[^/]+$");
                }
              }

              @Override
              public ConditionalUpdateResource set$Xgafv(java.lang.String $Xgafv) {
                return (ConditionalUpdateResource) super.set$Xgafv($Xgafv);
              }

              @Override
              public ConditionalUpdateResource setAccessToken(java.lang.String accessToken) {
                return (ConditionalUpdateResource) super.setAccessToken(accessToken);
              }

              @Override
              public ConditionalUpdateResource setAlt(java.lang.String alt) {
                return (ConditionalUpdateResource) super.setAlt(alt);
              }

              @Override
              public ConditionalUpdateResource setCallback(java.lang.String callback) {
                return (ConditionalUpdateResource) super.setCallback(callback);
              }

              @Override
              public ConditionalUpdateResource setFields(java.lang.String fields) {
                return (ConditionalUpdateResource) super.setFields(fields);
              }

              @Override
              public ConditionalUpdateResource setKey(java.lang.String key) {
                return (ConditionalUpdateResource) super.setKey(key);
              }

              @Override
              public ConditionalUpdateResource setOauthToken(java.lang.String oauthToken) {
                return (ConditionalUpdateResource) super.setOauthToken(oauthToken);
              }

              @Override
              public ConditionalUpdateResource setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (ConditionalUpdateResource) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public ConditionalUpdateResource setQuotaUser(java.lang.String quotaUser) {
                return (ConditionalUpdateResource) super.setQuotaUser(quotaUser);
              }

              @Override
              public ConditionalUpdateResource setUploadType(java.lang.String uploadType) {
                return (ConditionalUpdateResource) super.setUploadType(uploadType);
              }

              @Override
              public ConditionalUpdateResource setUploadProtocol(java.lang.String uploadProtocol) {
                return (ConditionalUpdateResource) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the FHIR store this resource belongs to. */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** The name of the FHIR store this resource belongs to.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /** The name of the FHIR store this resource belongs to. */
              public ConditionalUpdateResource setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /** The type of the resource to update. */
              @com.google.api.client.util.Key
              private java.lang.String type;

              /** The type of the resource to update.
               */
              public java.lang.String getType() {
                return type;
              }

              /** The type of the resource to update. */
              public ConditionalUpdateResource setType(java.lang.String type) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(TYPE_PATTERN.matcher(type).matches(),
                      "Parameter type must conform to the pattern " +
                      "^[^/]+$");
                }
                this.type = type;
                return this;
              }

              @Override
              public ConditionalUpdateResource set(String parameterName, Object value) {
                return (ConditionalUpdateResource) super.set(parameterName, value);
              }
            }
            /**
             * Creates a FHIR resource.
             *
             * Create a request for the method "resources.createResource".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link CreateResource#execute()} method to invoke the remote operation.
             *
             * @param parent The name of the FHIR store this resource belongs to.
             * @param type The type of the resource to create.
             * @param content the {@link com.google.api.services.healthcare.v1alpha.model.HttpBody}
             * @return the request
             */
            public CreateResource createResource(java.lang.String parent, java.lang.String type, com.google.api.services.healthcare.v1alpha.model.HttpBody content) throws java.io.IOException {
              CreateResource result = new CreateResource(parent, type, content);
              initialize(result);
              return result;
            }

            public class CreateResource extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.HttpBody> {

              private static final String REST_PATH = "v1alpha/{+parent}/resources/{+type}";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");

              private final java.util.regex.Pattern TYPE_PATTERN =
                  java.util.regex.Pattern.compile("^[^/]+$");

              /**
               * Creates a FHIR resource.
               *
               * Create a request for the method "resources.createResource".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link CreateResource#execute()} method to invoke the remote
               * operation. <p> {@link CreateResource#initialize(com.google.api.client.googleapis.services.Abstr
               * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
               * the constructor. </p>
               *
               * @param parent The name of the FHIR store this resource belongs to.
               * @param type The type of the resource to create.
               * @param content the {@link com.google.api.services.healthcare.v1alpha.model.HttpBody}
               * @since 1.13
               */
              protected CreateResource(java.lang.String parent, java.lang.String type, com.google.api.services.healthcare.v1alpha.model.HttpBody content) {
                super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1alpha.model.HttpBody.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
                }
                this.type = com.google.api.client.util.Preconditions.checkNotNull(type, "Required parameter type must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(TYPE_PATTERN.matcher(type).matches(),
                      "Parameter type must conform to the pattern " +
                      "^[^/]+$");
                }
              }

              @Override
              public CreateResource set$Xgafv(java.lang.String $Xgafv) {
                return (CreateResource) super.set$Xgafv($Xgafv);
              }

              @Override
              public CreateResource setAccessToken(java.lang.String accessToken) {
                return (CreateResource) super.setAccessToken(accessToken);
              }

              @Override
              public CreateResource setAlt(java.lang.String alt) {
                return (CreateResource) super.setAlt(alt);
              }

              @Override
              public CreateResource setCallback(java.lang.String callback) {
                return (CreateResource) super.setCallback(callback);
              }

              @Override
              public CreateResource setFields(java.lang.String fields) {
                return (CreateResource) super.setFields(fields);
              }

              @Override
              public CreateResource setKey(java.lang.String key) {
                return (CreateResource) super.setKey(key);
              }

              @Override
              public CreateResource setOauthToken(java.lang.String oauthToken) {
                return (CreateResource) super.setOauthToken(oauthToken);
              }

              @Override
              public CreateResource setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (CreateResource) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public CreateResource setQuotaUser(java.lang.String quotaUser) {
                return (CreateResource) super.setQuotaUser(quotaUser);
              }

              @Override
              public CreateResource setUploadType(java.lang.String uploadType) {
                return (CreateResource) super.setUploadType(uploadType);
              }

              @Override
              public CreateResource setUploadProtocol(java.lang.String uploadProtocol) {
                return (CreateResource) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the FHIR store this resource belongs to. */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** The name of the FHIR store this resource belongs to.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /** The name of the FHIR store this resource belongs to. */
              public CreateResource setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /** The type of the resource to create. */
              @com.google.api.client.util.Key
              private java.lang.String type;

              /** The type of the resource to create.
               */
              public java.lang.String getType() {
                return type;
              }

              /** The type of the resource to create. */
              public CreateResource setType(java.lang.String type) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(TYPE_PATTERN.matcher(type).matches(),
                      "Parameter type must conform to the pattern " +
                      "^[^/]+$");
                }
                this.type = type;
                return this;
              }

              @Override
              public CreateResource set(String parameterName, Object value) {
                return (CreateResource) super.set(parameterName, value);
              }
            }
            /**
             * Deletes a FHIR resource. Note: unless resource versioning is disabled by setting the
             * disable_resource_versioning flag on the FHIR store, the deleted resources will be moved to a
             * history repository that can still be retrieved through GetResourceVersion and related methods,
             * unless they are removed by the DeleteResourceVersions method.
             *
             * Create a request for the method "resources.delete".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param name The name of the resource to delete.
             * @return the request
             */
            public Delete delete(java.lang.String name) throws java.io.IOException {
              Delete result = new Delete(name);
              initialize(result);
              return result;
            }

            public class Delete extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.HttpBody> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/resources/[^/]+/[^/]+$");

              /**
               * Deletes a FHIR resource. Note: unless resource versioning is disabled by setting the
               * disable_resource_versioning flag on the FHIR store, the deleted resources will be moved to a
               * history repository that can still be retrieved through GetResourceVersion and related methods,
               * unless they are removed by the DeleteResourceVersions method.
               *
               * Create a request for the method "resources.delete".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               * <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the resource to delete.
               * @since 1.13
               */
              protected Delete(java.lang.String name) {
                super(CloudHealthcare.this, "DELETE", REST_PATH, null, com.google.api.services.healthcare.v1alpha.model.HttpBody.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/resources/[^/]+/[^/]+$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the resource to delete. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the resource to delete.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the resource to delete. */
              public Delete setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/resources/[^/]+/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * Deletes all the historical versions of a resource (excluding current version) from the FHIR
             * store. To remove all versions of a resource, first delete the current version and call this API.
             *
             * Create a request for the method "resources.delete$purge".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Delete$purge#execute()} method to invoke the remote operation.
             *
             * @param name The name of the resource to purge.
             * @return the request
             */
            public Delete$purge delete$purge(java.lang.String name) throws java.io.IOException {
              Delete$purge result = new Delete$purge(name);
              initialize(result);
              return result;
            }

            public class Delete$purge extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.Empty> {

              private static final String REST_PATH = "v1alpha/{+name}/$purge";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/resources/[^/]+/[^/]+$");

              /**
               * Deletes all the historical versions of a resource (excluding current version) from the FHIR
               * store. To remove all versions of a resource, first delete the current version and call this
               * API.
               *
               * Create a request for the method "resources.delete$purge".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Delete$purge#execute()} method to invoke the remote
               * operation. <p> {@link
               * Delete$purge#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the resource to purge.
               * @since 1.13
               */
              protected Delete$purge(java.lang.String name) {
                super(CloudHealthcare.this, "DELETE", REST_PATH, null, com.google.api.services.healthcare.v1alpha.model.Empty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/resources/[^/]+/[^/]+$");
                }
              }

              @Override
              public Delete$purge set$Xgafv(java.lang.String $Xgafv) {
                return (Delete$purge) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete$purge setAccessToken(java.lang.String accessToken) {
                return (Delete$purge) super.setAccessToken(accessToken);
              }

              @Override
              public Delete$purge setAlt(java.lang.String alt) {
                return (Delete$purge) super.setAlt(alt);
              }

              @Override
              public Delete$purge setCallback(java.lang.String callback) {
                return (Delete$purge) super.setCallback(callback);
              }

              @Override
              public Delete$purge setFields(java.lang.String fields) {
                return (Delete$purge) super.setFields(fields);
              }

              @Override
              public Delete$purge setKey(java.lang.String key) {
                return (Delete$purge) super.setKey(key);
              }

              @Override
              public Delete$purge setOauthToken(java.lang.String oauthToken) {
                return (Delete$purge) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete$purge setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete$purge) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete$purge setQuotaUser(java.lang.String quotaUser) {
                return (Delete$purge) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete$purge setUploadType(java.lang.String uploadType) {
                return (Delete$purge) super.setUploadType(uploadType);
              }

              @Override
              public Delete$purge setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete$purge) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the resource to purge. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the resource to purge.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the resource to purge. */
              public Delete$purge setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/resources/[^/]+/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Delete$purge set(String parameterName, Object value) {
                return (Delete$purge) super.set(parameterName, value);
              }
            }
            /**
             * Gets a FHIR resource.
             *
             * Create a request for the method "resources.get".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name The name of the resource to retrieve.
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.HttpBody> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/resources/[^/]+/[^/]+$");

              /**
               * Gets a FHIR resource.
               *
               * Create a request for the method "resources.get".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the resource to retrieve.
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1alpha.model.HttpBody.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/resources/[^/]+/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the resource to retrieve. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the resource to retrieve.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the resource to retrieve. */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/resources/[^/]+/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Gets the capabilities statement for the store.
             *
             * Create a request for the method "resources.getMetadata".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link GetMetadata#execute()} method to invoke the remote operation.
             *
             * @param name Name of the FHIR store to retrieve the capabilities for.
             * @return the request
             */
            public GetMetadata getMetadata(java.lang.String name) throws java.io.IOException {
              GetMetadata result = new GetMetadata(name);
              initialize(result);
              return result;
            }

            public class GetMetadata extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.HttpBody> {

              private static final String REST_PATH = "v1alpha/{+name}/resources/metadata";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");

              /**
               * Gets the capabilities statement for the store.
               *
               * Create a request for the method "resources.getMetadata".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link GetMetadata#execute()} method to invoke the remote
               * operation. <p> {@link
               * GetMetadata#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Name of the FHIR store to retrieve the capabilities for.
               * @since 1.13
               */
              protected GetMetadata(java.lang.String name) {
                super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1alpha.model.HttpBody.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public GetMetadata set$Xgafv(java.lang.String $Xgafv) {
                return (GetMetadata) super.set$Xgafv($Xgafv);
              }

              @Override
              public GetMetadata setAccessToken(java.lang.String accessToken) {
                return (GetMetadata) super.setAccessToken(accessToken);
              }

              @Override
              public GetMetadata setAlt(java.lang.String alt) {
                return (GetMetadata) super.setAlt(alt);
              }

              @Override
              public GetMetadata setCallback(java.lang.String callback) {
                return (GetMetadata) super.setCallback(callback);
              }

              @Override
              public GetMetadata setFields(java.lang.String fields) {
                return (GetMetadata) super.setFields(fields);
              }

              @Override
              public GetMetadata setKey(java.lang.String key) {
                return (GetMetadata) super.setKey(key);
              }

              @Override
              public GetMetadata setOauthToken(java.lang.String oauthToken) {
                return (GetMetadata) super.setOauthToken(oauthToken);
              }

              @Override
              public GetMetadata setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (GetMetadata) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public GetMetadata setQuotaUser(java.lang.String quotaUser) {
                return (GetMetadata) super.setQuotaUser(quotaUser);
              }

              @Override
              public GetMetadata setUploadType(java.lang.String uploadType) {
                return (GetMetadata) super.setUploadType(uploadType);
              }

              @Override
              public GetMetadata setUploadProtocol(java.lang.String uploadProtocol) {
                return (GetMetadata) super.setUploadProtocol(uploadProtocol);
              }

              /** Name of the FHIR store to retrieve the capabilities for. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Name of the FHIR store to retrieve the capabilities for.
               */
              public java.lang.String getName() {
                return name;
              }

              /** Name of the FHIR store to retrieve the capabilities for. */
              public GetMetadata setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public GetMetadata set(String parameterName, Object value) {
                return (GetMetadata) super.set(parameterName, value);
              }
            }
            /**
             * Updates part of an existing resource.
             *
             * Create a request for the method "resources.patch".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             *
             * @param name The name of the resource to update.
             * @param content the {@link com.google.api.services.healthcare.v1alpha.model.HttpBody}
             * @return the request
             */
            public Patch patch(java.lang.String name, com.google.api.services.healthcare.v1alpha.model.HttpBody content) throws java.io.IOException {
              Patch result = new Patch(name, content);
              initialize(result);
              return result;
            }

            public class Patch extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.HttpBody> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/resources/[^/]+/[^/]+$");

              /**
               * Updates part of an existing resource.
               *
               * Create a request for the method "resources.patch".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
               * <p> {@link
               * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the resource to update.
               * @param content the {@link com.google.api.services.healthcare.v1alpha.model.HttpBody}
               * @since 1.13
               */
              protected Patch(java.lang.String name, com.google.api.services.healthcare.v1alpha.model.HttpBody content) {
                super(CloudHealthcare.this, "PATCH", REST_PATH, content, com.google.api.services.healthcare.v1alpha.model.HttpBody.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/resources/[^/]+/[^/]+$");
                }
              }

              @Override
              public Patch set$Xgafv(java.lang.String $Xgafv) {
                return (Patch) super.set$Xgafv($Xgafv);
              }

              @Override
              public Patch setAccessToken(java.lang.String accessToken) {
                return (Patch) super.setAccessToken(accessToken);
              }

              @Override
              public Patch setAlt(java.lang.String alt) {
                return (Patch) super.setAlt(alt);
              }

              @Override
              public Patch setCallback(java.lang.String callback) {
                return (Patch) super.setCallback(callback);
              }

              @Override
              public Patch setFields(java.lang.String fields) {
                return (Patch) super.setFields(fields);
              }

              @Override
              public Patch setKey(java.lang.String key) {
                return (Patch) super.setKey(key);
              }

              @Override
              public Patch setOauthToken(java.lang.String oauthToken) {
                return (Patch) super.setOauthToken(oauthToken);
              }

              @Override
              public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Patch) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Patch setQuotaUser(java.lang.String quotaUser) {
                return (Patch) super.setQuotaUser(quotaUser);
              }

              @Override
              public Patch setUploadType(java.lang.String uploadType) {
                return (Patch) super.setUploadType(uploadType);
              }

              @Override
              public Patch setUploadProtocol(java.lang.String uploadProtocol) {
                return (Patch) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the resource to update. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the resource to update.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the resource to update. */
              public Patch setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/resources/[^/]+/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Patch set(String parameterName, Object value) {
                return (Patch) super.set(parameterName, value);
              }
            }
            /**
             * Searches resources in the given FHIR store.
             *
             * Create a request for the method "resources.searchResources".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link SearchResources#execute()} method to invoke the remote operation.
             *
             * @param parent Name of the FHIR store to retrieve resources from.
             * @param resourceType The type of the resource to search.
             * @return the request
             */
            public SearchResources searchResources(java.lang.String parent, java.lang.String resourceType) throws java.io.IOException {
              SearchResources result = new SearchResources(parent, resourceType);
              initialize(result);
              return result;
            }

            public class SearchResources extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.HttpBody> {

              private static final String REST_PATH = "v1alpha/{+parent}/resources/{+resourceType}";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");

              private final java.util.regex.Pattern RESOURCE_TYPE_PATTERN =
                  java.util.regex.Pattern.compile("^.+$");

              /**
               * Searches resources in the given FHIR store.
               *
               * Create a request for the method "resources.searchResources".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link SearchResources#execute()} method to invoke the remote
               * operation. <p> {@link SearchResources#initialize(com.google.api.client.googleapis.services.Abst
               * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
               * the constructor. </p>
               *
               * @param parent Name of the FHIR store to retrieve resources from.
               * @param resourceType The type of the resource to search.
               * @since 1.13
               */
              protected SearchResources(java.lang.String parent, java.lang.String resourceType) {
                super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1alpha.model.HttpBody.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
                }
                this.resourceType = com.google.api.client.util.Preconditions.checkNotNull(resourceType, "Required parameter resourceType must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(RESOURCE_TYPE_PATTERN.matcher(resourceType).matches(),
                      "Parameter resourceType must conform to the pattern " +
                      "^.+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public SearchResources set$Xgafv(java.lang.String $Xgafv) {
                return (SearchResources) super.set$Xgafv($Xgafv);
              }

              @Override
              public SearchResources setAccessToken(java.lang.String accessToken) {
                return (SearchResources) super.setAccessToken(accessToken);
              }

              @Override
              public SearchResources setAlt(java.lang.String alt) {
                return (SearchResources) super.setAlt(alt);
              }

              @Override
              public SearchResources setCallback(java.lang.String callback) {
                return (SearchResources) super.setCallback(callback);
              }

              @Override
              public SearchResources setFields(java.lang.String fields) {
                return (SearchResources) super.setFields(fields);
              }

              @Override
              public SearchResources setKey(java.lang.String key) {
                return (SearchResources) super.setKey(key);
              }

              @Override
              public SearchResources setOauthToken(java.lang.String oauthToken) {
                return (SearchResources) super.setOauthToken(oauthToken);
              }

              @Override
              public SearchResources setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (SearchResources) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public SearchResources setQuotaUser(java.lang.String quotaUser) {
                return (SearchResources) super.setQuotaUser(quotaUser);
              }

              @Override
              public SearchResources setUploadType(java.lang.String uploadType) {
                return (SearchResources) super.setUploadType(uploadType);
              }

              @Override
              public SearchResources setUploadProtocol(java.lang.String uploadProtocol) {
                return (SearchResources) super.setUploadProtocol(uploadProtocol);
              }

              /** Name of the FHIR store to retrieve resources from. */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Name of the FHIR store to retrieve resources from.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /** Name of the FHIR store to retrieve resources from. */
              public SearchResources setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /** The type of the resource to search. */
              @com.google.api.client.util.Key
              private java.lang.String resourceType;

              /** The type of the resource to search.
               */
              public java.lang.String getResourceType() {
                return resourceType;
              }

              /** The type of the resource to search. */
              public SearchResources setResourceType(java.lang.String resourceType) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(RESOURCE_TYPE_PATTERN.matcher(resourceType).matches(),
                      "Parameter resourceType must conform to the pattern " +
                      "^.+$");
                }
                this.resourceType = resourceType;
                return this;
              }

              @Override
              public SearchResources set(String parameterName, Object value) {
                return (SearchResources) super.set(parameterName, value);
              }
            }
            /**
             * Updates the entire resource or creates a new resource with a client specified ID if the resource
             * does not exist and the FHIR store has enable_update_create set.
             *
             * Create a request for the method "resources.update".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Update#execute()} method to invoke the remote operation.
             *
             * @param name The name of the resource to update.
             * @param content the {@link com.google.api.services.healthcare.v1alpha.model.HttpBody}
             * @return the request
             */
            public Update update(java.lang.String name, com.google.api.services.healthcare.v1alpha.model.HttpBody content) throws java.io.IOException {
              Update result = new Update(name, content);
              initialize(result);
              return result;
            }

            public class Update extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.HttpBody> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/resources/[^/]+/[^/]+$");

              /**
               * Updates the entire resource or creates a new resource with a client specified ID if the
               * resource does not exist and the FHIR store has enable_update_create set.
               *
               * Create a request for the method "resources.update".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
               * <p> {@link
               * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the resource to update.
               * @param content the {@link com.google.api.services.healthcare.v1alpha.model.HttpBody}
               * @since 1.13
               */
              protected Update(java.lang.String name, com.google.api.services.healthcare.v1alpha.model.HttpBody content) {
                super(CloudHealthcare.this, "PUT", REST_PATH, content, com.google.api.services.healthcare.v1alpha.model.HttpBody.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/resources/[^/]+/[^/]+$");
                }
              }

              @Override
              public Update set$Xgafv(java.lang.String $Xgafv) {
                return (Update) super.set$Xgafv($Xgafv);
              }

              @Override
              public Update setAccessToken(java.lang.String accessToken) {
                return (Update) super.setAccessToken(accessToken);
              }

              @Override
              public Update setAlt(java.lang.String alt) {
                return (Update) super.setAlt(alt);
              }

              @Override
              public Update setCallback(java.lang.String callback) {
                return (Update) super.setCallback(callback);
              }

              @Override
              public Update setFields(java.lang.String fields) {
                return (Update) super.setFields(fields);
              }

              @Override
              public Update setKey(java.lang.String key) {
                return (Update) super.setKey(key);
              }

              @Override
              public Update setOauthToken(java.lang.String oauthToken) {
                return (Update) super.setOauthToken(oauthToken);
              }

              @Override
              public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Update) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Update setQuotaUser(java.lang.String quotaUser) {
                return (Update) super.setQuotaUser(quotaUser);
              }

              @Override
              public Update setUploadType(java.lang.String uploadType) {
                return (Update) super.setUploadType(uploadType);
              }

              @Override
              public Update setUploadProtocol(java.lang.String uploadProtocol) {
                return (Update) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the resource to update. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the resource to update.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the resource to update. */
              public Update setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/resources/[^/]+/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Update set(String parameterName, Object value) {
                return (Update) super.set(parameterName, value);
              }
            }

            /**
             * An accessor for creating requests from the Patient collection.
             *
             * <p>The typical use is:</p>
             * <pre>
             *   {@code CloudHealthcare healthcare = new CloudHealthcare(...);}
             *   {@code CloudHealthcare.Patient.List request = healthcare.patient().list(parameters ...)}
             * </pre>
             *
             * @return the resource collection
             */
            public Patient patient() {
              return new Patient();
            }

            /**
             * The "Patient" collection of methods.
             */
            public class Patient {

              /**
               * Gets all the resources in the patient compartment.
               *
               * Create a request for the method "Patient.get$everything".
               *
               * This request holds the parameters needed by the healthcare server.  After setting any optional
               * parameters, call the {@link Get$everything#execute()} method to invoke the remote operation.
               *
               * @param name Name of the patient for which the information is required.
               * @return the request
               */
              public Get$everything get$everything(java.lang.String name) throws java.io.IOException {
                Get$everything result = new Get$everything(name);
                initialize(result);
                return result;
              }

              public class Get$everything extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.HttpBody> {

                private static final String REST_PATH = "v1alpha/{+name}/$everything";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/resources/Patient/[^/]+$");

                /**
                 * Gets all the resources in the patient compartment.
                 *
                 * Create a request for the method "Patient.get$everything".
                 *
                 * This request holds the parameters needed by the the healthcare server.  After setting any
                 * optional parameters, call the {@link Get$everything#execute()} method to invoke the remote
                 * operation. <p> {@link Get$everything#initialize(com.google.api.client.googleapis.services.Abstr
                 * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
                 * the constructor. </p>
                 *
                 * @param name Name of the patient for which the information is required.
                 * @since 1.13
                 */
                protected Get$everything(java.lang.String name) {
                  super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1alpha.model.HttpBody.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/resources/Patient/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public Get$everything set$Xgafv(java.lang.String $Xgafv) {
                  return (Get$everything) super.set$Xgafv($Xgafv);
                }

                @Override
                public Get$everything setAccessToken(java.lang.String accessToken) {
                  return (Get$everything) super.setAccessToken(accessToken);
                }

                @Override
                public Get$everything setAlt(java.lang.String alt) {
                  return (Get$everything) super.setAlt(alt);
                }

                @Override
                public Get$everything setCallback(java.lang.String callback) {
                  return (Get$everything) super.setCallback(callback);
                }

                @Override
                public Get$everything setFields(java.lang.String fields) {
                  return (Get$everything) super.setFields(fields);
                }

                @Override
                public Get$everything setKey(java.lang.String key) {
                  return (Get$everything) super.setKey(key);
                }

                @Override
                public Get$everything setOauthToken(java.lang.String oauthToken) {
                  return (Get$everything) super.setOauthToken(oauthToken);
                }

                @Override
                public Get$everything setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Get$everything) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Get$everything setQuotaUser(java.lang.String quotaUser) {
                  return (Get$everything) super.setQuotaUser(quotaUser);
                }

                @Override
                public Get$everything setUploadType(java.lang.String uploadType) {
                  return (Get$everything) super.setUploadType(uploadType);
                }

                @Override
                public Get$everything setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Get$everything) super.setUploadProtocol(uploadProtocol);
                }

                /** Name of the patient for which the information is required. */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** Name of the patient for which the information is required.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /** Name of the patient for which the information is required. */
                public Get$everything setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/resources/Patient/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                /**
                 * The response includes records prior to the end date. If no end date is provided,
                 * all records subsequent to the start date are in scope.
                 */
                @com.google.api.client.util.Key
                private java.lang.String end;

                /** The response includes records prior to the end date. If no end date is provided, all records
               subsequent to the start date are in scope.
                 */
                public java.lang.String getEnd() {
                  return end;
                }

                /**
                 * The response includes records prior to the end date. If no end date is provided,
                 * all records subsequent to the start date are in scope.
                 */
                public Get$everything setEnd(java.lang.String end) {
                  this.end = end;
                  return this;
                }

                /**
                 * The response includes records subsequent to the start date. If no start date is
                 * provided, all records prior to the end date are in scope.
                 */
                @com.google.api.client.util.Key
                private java.lang.String start;

                /** The response includes records subsequent to the start date. If no start date is provided, all
               records prior to the end date are in scope.
                 */
                public java.lang.String getStart() {
                  return start;
                }

                /**
                 * The response includes records subsequent to the start date. If no start date is
                 * provided, all records prior to the end date are in scope.
                 */
                public Get$everything setStart(java.lang.String start) {
                  this.start = start;
                  return this;
                }

                @Override
                public Get$everything set(String parameterName, Object value) {
                  return (Get$everything) super.set(parameterName, value);
                }
              }

            }
            /**
             * An accessor for creating requests from the History collection.
             *
             * <p>The typical use is:</p>
             * <pre>
             *   {@code CloudHealthcare healthcare = new CloudHealthcare(...);}
             *   {@code CloudHealthcare.History.List request = healthcare.history().list(parameters ...)}
             * </pre>
             *
             * @return the resource collection
             */
            public History history() {
              return new History();
            }

            /**
             * The "_history" collection of methods.
             */
            public class History {

              /**
               * Gets a version (current or historical) of FHIR resource by version id.
               *
               * Create a request for the method "_history.get".
               *
               * This request holds the parameters needed by the healthcare server.  After setting any optional
               * parameters, call the {@link Get#execute()} method to invoke the remote operation.
               *
               * @param name The name of the resource version to retrieve.
               * @return the request
               */
              public Get get(java.lang.String name) throws java.io.IOException {
                Get result = new Get(name);
                initialize(result);
                return result;
              }

              public class Get extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.HttpBody> {

                private static final String REST_PATH = "v1alpha/{+name}";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/resources/[^/]+/[^/]+/_history/[^/]+$");

                /**
                 * Gets a version (current or historical) of FHIR resource by version id.
                 *
                 * Create a request for the method "_history.get".
                 *
                 * This request holds the parameters needed by the the healthcare server.  After setting any
                 * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
                 * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name The name of the resource version to retrieve.
                 * @since 1.13
                 */
                protected Get(java.lang.String name) {
                  super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1alpha.model.HttpBody.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/resources/[^/]+/[^/]+/_history/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public Get set$Xgafv(java.lang.String $Xgafv) {
                  return (Get) super.set$Xgafv($Xgafv);
                }

                @Override
                public Get setAccessToken(java.lang.String accessToken) {
                  return (Get) super.setAccessToken(accessToken);
                }

                @Override
                public Get setAlt(java.lang.String alt) {
                  return (Get) super.setAlt(alt);
                }

                @Override
                public Get setCallback(java.lang.String callback) {
                  return (Get) super.setCallback(callback);
                }

                @Override
                public Get setFields(java.lang.String fields) {
                  return (Get) super.setFields(fields);
                }

                @Override
                public Get setKey(java.lang.String key) {
                  return (Get) super.setKey(key);
                }

                @Override
                public Get setOauthToken(java.lang.String oauthToken) {
                  return (Get) super.setOauthToken(oauthToken);
                }

                @Override
                public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Get) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Get setQuotaUser(java.lang.String quotaUser) {
                  return (Get) super.setQuotaUser(quotaUser);
                }

                @Override
                public Get setUploadType(java.lang.String uploadType) {
                  return (Get) super.setUploadType(uploadType);
                }

                @Override
                public Get setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Get) super.setUploadProtocol(uploadProtocol);
                }

                /** The name of the resource version to retrieve. */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** The name of the resource version to retrieve.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /** The name of the resource version to retrieve. */
                public Get setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/resources/[^/]+/[^/]+/_history/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                @Override
                public Get set(String parameterName, Object value) {
                  return (Get) super.set(parameterName, value);
                }
              }
              /**
               * Lists all the versions of a resource (including the current version and deleted versions) from
               * the FHIR store.
               *
               * Create a request for the method "_history.list".
               *
               * This request holds the parameters needed by the healthcare server.  After setting any optional
               * parameters, call the {@link List#execute()} method to invoke the remote operation.
               *
               * @param name The name of the resource to retrieve.
               * @return the request
               */
              public List list(java.lang.String name) throws java.io.IOException {
                List result = new List(name);
                initialize(result);
                return result;
              }

              public class List extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.HttpBody> {

                private static final String REST_PATH = "v1alpha/{+name}/_history";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/resources/[^/]+/[^/]+$");

                /**
                 * Lists all the versions of a resource (including the current version and deleted versions) from
                 * the FHIR store.
                 *
                 * Create a request for the method "_history.list".
                 *
                 * This request holds the parameters needed by the the healthcare server.  After setting any
                 * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
                 * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name The name of the resource to retrieve.
                 * @since 1.13
                 */
                protected List(java.lang.String name) {
                  super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1alpha.model.HttpBody.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/resources/[^/]+/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public List set$Xgafv(java.lang.String $Xgafv) {
                  return (List) super.set$Xgafv($Xgafv);
                }

                @Override
                public List setAccessToken(java.lang.String accessToken) {
                  return (List) super.setAccessToken(accessToken);
                }

                @Override
                public List setAlt(java.lang.String alt) {
                  return (List) super.setAlt(alt);
                }

                @Override
                public List setCallback(java.lang.String callback) {
                  return (List) super.setCallback(callback);
                }

                @Override
                public List setFields(java.lang.String fields) {
                  return (List) super.setFields(fields);
                }

                @Override
                public List setKey(java.lang.String key) {
                  return (List) super.setKey(key);
                }

                @Override
                public List setOauthToken(java.lang.String oauthToken) {
                  return (List) super.setOauthToken(oauthToken);
                }

                @Override
                public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (List) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public List setQuotaUser(java.lang.String quotaUser) {
                  return (List) super.setQuotaUser(quotaUser);
                }

                @Override
                public List setUploadType(java.lang.String uploadType) {
                  return (List) super.setUploadType(uploadType);
                }

                @Override
                public List setUploadProtocol(java.lang.String uploadProtocol) {
                  return (List) super.setUploadProtocol(uploadProtocol);
                }

                /** The name of the resource to retrieve. */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** The name of the resource to retrieve.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /** The name of the resource to retrieve. */
                public List setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/resources/[^/]+/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                /**
                 * Only include resource versions that were current at some point during the time
                 * period specified in the date time value. The date parameter format is yyyy-mm-
                 * ddThh:mm:ss[Z|(+|-)hh:mm] Clients may specify any of the following: An entire
                 * year: `_at=2019` An entire month: `_at=2019-01` A specific day: `_at=2019-01-20`
                 * A specific second: `_at=2018-12-31T23:59:58Z`
                 */
                @com.google.api.client.util.Key
                private java.lang.String at;

                /** Only include resource versions that were current at some point during the time period specified in
               the date time value. The date parameter format is yyyy-mm-ddThh:mm:ss[Z|(+|-)hh:mm] Clients may
               specify any of the following: An entire year: `_at=2019` An entire month: `_at=2019-01` A specific
               day: `_at=2019-01-20` A specific second: `_at=2018-12-31T23:59:58Z`
                 */
                public java.lang.String getAt() {
                  return at;
                }

                /**
                 * Only include resource versions that were current at some point during the time
                 * period specified in the date time value. The date parameter format is yyyy-mm-
                 * ddThh:mm:ss[Z|(+|-)hh:mm] Clients may specify any of the following: An entire
                 * year: `_at=2019` An entire month: `_at=2019-01` A specific day: `_at=2019-01-20`
                 * A specific second: `_at=2018-12-31T23:59:58Z`
                 */
                public List setAt(java.lang.String at) {
                  this.at = at;
                  return this;
                }

                /** The maximum number of search results on a page. */
                @com.google.api.client.util.Key
                private java.lang.Integer count;

                /** The maximum number of search results on a page.
                 */
                public java.lang.Integer getCount() {
                  return count;
                }

                /** The maximum number of search results on a page. */
                public List setCount(java.lang.Integer count) {
                  this.count = count;
                  return this;
                }

                /**
                 * Used to retrieve the first, previous, next, or last page of resource versions
                 * when using pagination. Value should be set to the value of the `link.url` field
                 * returned in the response to the previous request, where `link.relation` is
                 * "first", "previous", "next" or "last". Omit `page` if no previous request has
                 * been made.
                 */
                @com.google.api.client.util.Key
                private java.lang.String page;

                /** Used to retrieve the first, previous, next, or last page of resource versions when using
               pagination. Value should be set to the value of the `link.url` field returned in the response to
               the previous request, where `link.relation` is "first", "previous", "next" or "last". Omit `page`
               if no previous request has been made.
                 */
                public java.lang.String getPage() {
                  return page;
                }

                /**
                 * Used to retrieve the first, previous, next, or last page of resource versions
                 * when using pagination. Value should be set to the value of the `link.url` field
                 * returned in the response to the previous request, where `link.relation` is
                 * "first", "previous", "next" or "last". Omit `page` if no previous request has
                 * been made.
                 */
                public List setPage(java.lang.String page) {
                  this.page = page;
                  return this;
                }

                /**
                 * Only include resource versions that were created at or after the given instant in
                 * time. The instant in time uses the format YYYY-MM-DDThh:mm:ss.sss+zz:zz (for
                 * example 2015-02-07T13:28:17.239+02:00 or 2017-01-01T00:00:00Z). The time must be
                 * specified to the second and include a time zone.
                 */
                @com.google.api.client.util.Key
                private java.lang.String since;

                /** Only include resource versions that were created at or after the given instant in time. The instant
               in time uses the format YYYY-MM-DDThh:mm:ss.sss+zz:zz (for example 2015-02-07T13:28:17.239+02:00 or
               2017-01-01T00:00:00Z). The time must be specified to the second and include a time zone.
                 */
                public java.lang.String getSince() {
                  return since;
                }

                /**
                 * Only include resource versions that were created at or after the given instant in
                 * time. The instant in time uses the format YYYY-MM-DDThh:mm:ss.sss+zz:zz (for
                 * example 2015-02-07T13:28:17.239+02:00 or 2017-01-01T00:00:00Z). The time must be
                 * specified to the second and include a time zone.
                 */
                public List setSince(java.lang.String since) {
                  this.since = since;
                  return this;
                }

                @Override
                public List set(String parameterName, Object value) {
                  return (List) super.set(parameterName, value);
                }
              }

            }
          }
          /**
           * An accessor for creating requests from the SecurityLabels collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code CloudHealthcare healthcare = new CloudHealthcare(...);}
           *   {@code CloudHealthcare.SecurityLabels.List request = healthcare.securityLabels().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public SecurityLabels securityLabels() {
            return new SecurityLabels();
          }

          /**
           * The "securityLabels" collection of methods.
           */
          public class SecurityLabels {

            /**
             * Gets the access control policy for a FHIR store or security label within a FHIR store. Returns
             * NOT_FOUND error if the resource does not exist. Returns an empty policy if the resource exists
             * but does not have a policy set.
             *
             * Authorization requires the Google IAM permission 'healthcare.fhirStores.getIamPolicy' for a FHIR
             * store or 'healthcare.securityLabels.getIamPolicy' for a security label
             *
             * Create a request for the method "securityLabels.getIamPolicy".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
             *
             * @param resource REQUIRED: The resource for which the policy is being requested.
            See the operation documentation for
             *        the appropriate value for this field.
             * @param content the {@link com.google.api.services.healthcare.v1alpha.model.GetIamPolicyRequest}
             * @return the request
             */
            public GetIamPolicy getIamPolicy(java.lang.String resource, com.google.api.services.healthcare.v1alpha.model.GetIamPolicyRequest content) throws java.io.IOException {
              GetIamPolicy result = new GetIamPolicy(resource, content);
              initialize(result);
              return result;
            }

            public class GetIamPolicy extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.Policy> {

              private static final String REST_PATH = "v1alpha/{+resource}:getIamPolicy";

              private final java.util.regex.Pattern RESOURCE_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/securityLabels/[^/]+$");

              /**
               * Gets the access control policy for a FHIR store or security label within a FHIR store. Returns
               * NOT_FOUND error if the resource does not exist. Returns an empty policy if the resource exists
               * but does not have a policy set.
               *
               * Authorization requires the Google IAM permission 'healthcare.fhirStores.getIamPolicy' for a
               * FHIR store or 'healthcare.securityLabels.getIamPolicy' for a security label
               *
               * Create a request for the method "securityLabels.getIamPolicy".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
               * operation. <p> {@link
               * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param resource REQUIRED: The resource for which the policy is being requested.
            See the operation documentation for
             *        the appropriate value for this field.
               * @param content the {@link com.google.api.services.healthcare.v1alpha.model.GetIamPolicyRequest}
               * @since 1.13
               */
              protected GetIamPolicy(java.lang.String resource, com.google.api.services.healthcare.v1alpha.model.GetIamPolicyRequest content) {
                super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1alpha.model.Policy.class);
                this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                      "Parameter resource must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/securityLabels/[^/]+$");
                }
              }

              @Override
              public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
                return (GetIamPolicy) super.set$Xgafv($Xgafv);
              }

              @Override
              public GetIamPolicy setAccessToken(java.lang.String accessToken) {
                return (GetIamPolicy) super.setAccessToken(accessToken);
              }

              @Override
              public GetIamPolicy setAlt(java.lang.String alt) {
                return (GetIamPolicy) super.setAlt(alt);
              }

              @Override
              public GetIamPolicy setCallback(java.lang.String callback) {
                return (GetIamPolicy) super.setCallback(callback);
              }

              @Override
              public GetIamPolicy setFields(java.lang.String fields) {
                return (GetIamPolicy) super.setFields(fields);
              }

              @Override
              public GetIamPolicy setKey(java.lang.String key) {
                return (GetIamPolicy) super.setKey(key);
              }

              @Override
              public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
                return (GetIamPolicy) super.setOauthToken(oauthToken);
              }

              @Override
              public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
                return (GetIamPolicy) super.setQuotaUser(quotaUser);
              }

              @Override
              public GetIamPolicy setUploadType(java.lang.String uploadType) {
                return (GetIamPolicy) super.setUploadType(uploadType);
              }

              @Override
              public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
                return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * REQUIRED: The resource for which the policy is being requested. See the operation
               * documentation for the appropriate value for this field.
               */
              @com.google.api.client.util.Key
              private java.lang.String resource;

              /** REQUIRED: The resource for which the policy is being requested. See the operation documentation for
             the appropriate value for this field.
               */
              public java.lang.String getResource() {
                return resource;
              }

              /**
               * REQUIRED: The resource for which the policy is being requested. See the operation
               * documentation for the appropriate value for this field.
               */
              public GetIamPolicy setResource(java.lang.String resource) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                      "Parameter resource must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/securityLabels/[^/]+$");
                }
                this.resource = resource;
                return this;
              }

              @Override
              public GetIamPolicy set(String parameterName, Object value) {
                return (GetIamPolicy) super.set(parameterName, value);
              }
            }
            /**
             * Sets the access control policy for a FHIR store or security label within a FHIR store. Replaces
             * any existing policy.
             *
             * Authorization requires the Google IAM permission 'healthcare.fhirStores.setIamPolicy' for a FHIR
             * store or 'healthcare.securityLabels.setIamPolicy' for a security label
             *
             * Create a request for the method "securityLabels.setIamPolicy".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
             *
             * @param resource REQUIRED: The resource for which the policy is being specified.
            See the operation documentation for
             *        the appropriate value for this field.
             * @param content the {@link com.google.api.services.healthcare.v1alpha.model.SetIamPolicyRequest}
             * @return the request
             */
            public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.healthcare.v1alpha.model.SetIamPolicyRequest content) throws java.io.IOException {
              SetIamPolicy result = new SetIamPolicy(resource, content);
              initialize(result);
              return result;
            }

            public class SetIamPolicy extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.Policy> {

              private static final String REST_PATH = "v1alpha/{+resource}:setIamPolicy";

              private final java.util.regex.Pattern RESOURCE_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/securityLabels/[^/]+$");

              /**
               * Sets the access control policy for a FHIR store or security label within a FHIR store. Replaces
               * any existing policy.
               *
               * Authorization requires the Google IAM permission 'healthcare.fhirStores.setIamPolicy' for a
               * FHIR store or 'healthcare.securityLabels.setIamPolicy' for a security label
               *
               * Create a request for the method "securityLabels.setIamPolicy".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
               * operation. <p> {@link
               * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param resource REQUIRED: The resource for which the policy is being specified.
            See the operation documentation for
             *        the appropriate value for this field.
               * @param content the {@link com.google.api.services.healthcare.v1alpha.model.SetIamPolicyRequest}
               * @since 1.13
               */
              protected SetIamPolicy(java.lang.String resource, com.google.api.services.healthcare.v1alpha.model.SetIamPolicyRequest content) {
                super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1alpha.model.Policy.class);
                this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                      "Parameter resource must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/securityLabels/[^/]+$");
                }
              }

              @Override
              public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
                return (SetIamPolicy) super.set$Xgafv($Xgafv);
              }

              @Override
              public SetIamPolicy setAccessToken(java.lang.String accessToken) {
                return (SetIamPolicy) super.setAccessToken(accessToken);
              }

              @Override
              public SetIamPolicy setAlt(java.lang.String alt) {
                return (SetIamPolicy) super.setAlt(alt);
              }

              @Override
              public SetIamPolicy setCallback(java.lang.String callback) {
                return (SetIamPolicy) super.setCallback(callback);
              }

              @Override
              public SetIamPolicy setFields(java.lang.String fields) {
                return (SetIamPolicy) super.setFields(fields);
              }

              @Override
              public SetIamPolicy setKey(java.lang.String key) {
                return (SetIamPolicy) super.setKey(key);
              }

              @Override
              public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
                return (SetIamPolicy) super.setOauthToken(oauthToken);
              }

              @Override
              public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
                return (SetIamPolicy) super.setQuotaUser(quotaUser);
              }

              @Override
              public SetIamPolicy setUploadType(java.lang.String uploadType) {
                return (SetIamPolicy) super.setUploadType(uploadType);
              }

              @Override
              public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
                return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * REQUIRED: The resource for which the policy is being specified. See the operation
               * documentation for the appropriate value for this field.
               */
              @com.google.api.client.util.Key
              private java.lang.String resource;

              /** REQUIRED: The resource for which the policy is being specified. See the operation documentation for
             the appropriate value for this field.
               */
              public java.lang.String getResource() {
                return resource;
              }

              /**
               * REQUIRED: The resource for which the policy is being specified. See the operation
               * documentation for the appropriate value for this field.
               */
              public SetIamPolicy setResource(java.lang.String resource) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                      "Parameter resource must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/securityLabels/[^/]+$");
                }
                this.resource = resource;
                return this;
              }

              @Override
              public SetIamPolicy set(String parameterName, Object value) {
                return (SetIamPolicy) super.set(parameterName, value);
              }
            }

          }
        }
        /**
         * An accessor for creating requests from the Hl7V2Stores collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code CloudHealthcare healthcare = new CloudHealthcare(...);}
         *   {@code CloudHealthcare.Hl7V2Stores.List request = healthcare.hl7V2Stores().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Hl7V2Stores hl7V2Stores() {
          return new Hl7V2Stores();
        }

        /**
         * The "hl7V2Stores" collection of methods.
         */
        public class Hl7V2Stores {

          /**
           * Creates a new HL7v2 store within the parent dataset.
           *
           * Create a request for the method "hl7V2Stores.create".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent The name of the dataset this HL7v2 store belongs to.
           * @param content the {@link com.google.api.services.healthcare.v1alpha.model.Hl7V2Store}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.healthcare.v1alpha.model.Hl7V2Store content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.Hl7V2Store> {

            private static final String REST_PATH = "v1alpha/{+parent}/hl7V2Stores";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");

            /**
             * Creates a new HL7v2 store within the parent dataset.
             *
             * Create a request for the method "hl7V2Stores.create".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent The name of the dataset this HL7v2 store belongs to.
             * @param content the {@link com.google.api.services.healthcare.v1alpha.model.Hl7V2Store}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.healthcare.v1alpha.model.Hl7V2Store content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1alpha.model.Hl7V2Store.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the dataset this HL7v2 store belongs to. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** The name of the dataset this HL7v2 store belongs to.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** The name of the dataset this HL7v2 store belongs to. */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * The ID of the HL7v2 store that is being created. The string must match the following
             * regex: `[\p{L}\p{N}_\-\.]{1,256}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String hl7V2StoreId;

            /** The ID of the HL7v2 store that is being created. The string must match the following regex:
           `[\p{L}\p{N}_\-\.]{1,256}`.
             */
            public java.lang.String getHl7V2StoreId() {
              return hl7V2StoreId;
            }

            /**
             * The ID of the HL7v2 store that is being created. The string must match the following
             * regex: `[\p{L}\p{N}_\-\.]{1,256}`.
             */
            public Create setHl7V2StoreId(java.lang.String hl7V2StoreId) {
              this.hl7V2StoreId = hl7V2StoreId;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes the specified HL7v2 store and removes all messages that are contained within it.
           *
           * Create a request for the method "hl7V2Stores.delete".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name The resource name of the HL7v2 store to delete.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.Empty> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");

            /**
             * Deletes the specified HL7v2 store and removes all messages that are contained within it.
             *
             * Create a request for the method "hl7V2Stores.delete".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The resource name of the HL7v2 store to delete.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(CloudHealthcare.this, "DELETE", REST_PATH, null, com.google.api.services.healthcare.v1alpha.model.Empty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** The resource name of the HL7v2 store to delete. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The resource name of the HL7v2 store to delete.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The resource name of the HL7v2 store to delete. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets the specified HL7v2 store.
           *
           * Create a request for the method "hl7V2Stores.get".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name The resource name of the HL7v2 store to get.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.Hl7V2Store> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");

            /**
             * Gets the specified HL7v2 store.
             *
             * Create a request for the method "hl7V2Stores.get".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The resource name of the HL7v2 store to get.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1alpha.model.Hl7V2Store.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** The resource name of the HL7v2 store to get. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The resource name of the HL7v2 store to get.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The resource name of the HL7v2 store to get. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
           * does not have a policy set.
           *
           * Create a request for the method "hl7V2Stores.getIamPolicy".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy is being requested.
          See the operation documentation for
           *        the appropriate value for this field.
           * @return the request
           */
          public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
            GetIamPolicy result = new GetIamPolicy(resource);
            initialize(result);
            return result;
          }

          public class GetIamPolicy extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.Policy> {

            private static final String REST_PATH = "v1alpha/{+resource}:getIamPolicy";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");

            /**
             * Gets the access control policy for a resource. Returns an empty policy if the resource exists
             * and does not have a policy set.
             *
             * Create a request for the method "hl7V2Stores.getIamPolicy".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
             * operation. <p> {@link
             * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy is being requested.
          See the operation documentation for
           *        the appropriate value for this field.
             * @since 1.13
             */
            protected GetIamPolicy(java.lang.String resource) {
              super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1alpha.model.Policy.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
              return (GetIamPolicy) super.set$Xgafv($Xgafv);
            }

            @Override
            public GetIamPolicy setAccessToken(java.lang.String accessToken) {
              return (GetIamPolicy) super.setAccessToken(accessToken);
            }

            @Override
            public GetIamPolicy setAlt(java.lang.String alt) {
              return (GetIamPolicy) super.setAlt(alt);
            }

            @Override
            public GetIamPolicy setCallback(java.lang.String callback) {
              return (GetIamPolicy) super.setCallback(callback);
            }

            @Override
            public GetIamPolicy setFields(java.lang.String fields) {
              return (GetIamPolicy) super.setFields(fields);
            }

            @Override
            public GetIamPolicy setKey(java.lang.String key) {
              return (GetIamPolicy) super.setKey(key);
            }

            @Override
            public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
              return (GetIamPolicy) super.setOauthToken(oauthToken);
            }

            @Override
            public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
              return (GetIamPolicy) super.setQuotaUser(quotaUser);
            }

            @Override
            public GetIamPolicy setUploadType(java.lang.String uploadType) {
              return (GetIamPolicy) super.setUploadType(uploadType);
            }

            @Override
            public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
              return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy is being requested. See the operation
             * documentation for the appropriate value for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy is being requested. See the operation documentation for
           the appropriate value for this field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy is being requested. See the operation
             * documentation for the appropriate value for this field.
             */
            public GetIamPolicy setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public GetIamPolicy set(String parameterName, Object value) {
              return (GetIamPolicy) super.set(parameterName, value);
            }
          }
          /**
           * Lists the HL7v2 stores in the given dataset.
           *
           * Create a request for the method "hl7V2Stores.list".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Name of the dataset.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.ListHl7V2StoresResponse> {

            private static final String REST_PATH = "v1alpha/{+parent}/hl7V2Stores";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");

            /**
             * Lists the HL7v2 stores in the given dataset.
             *
             * Create a request for the method "hl7V2Stores.list".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Name of the dataset.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1alpha.model.ListHl7V2StoresResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** Name of the dataset. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Name of the dataset.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Name of the dataset. */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Limit on the number of HL7v2 stores to return in a single response. If zero the
             * default page size of 100 is used.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Limit on the number of HL7v2 stores to return in a single response. If zero the default page size
           of 100 is used.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Limit on the number of HL7v2 stores to return in a single response. If zero the
             * default page size of 100 is used.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The next_page_token value returned from the previous List request, if any. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The next_page_token value returned from the previous List request, if any.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The next_page_token value returned from the previous List request, if any. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates the HL7v2 store.
           *
           * Create a request for the method "hl7V2Stores.patch".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Output only. Resource name of the HL7v2 store, of the form
           *        `projects/{project_id}/datasets/{dataset_id}/hl7V2Stores/{hl7v2_store_id}`.
           * @param content the {@link com.google.api.services.healthcare.v1alpha.model.Hl7V2Store}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.healthcare.v1alpha.model.Hl7V2Store content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.Hl7V2Store> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");

            /**
             * Updates the HL7v2 store.
             *
             * Create a request for the method "hl7V2Stores.patch".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Output only. Resource name of the HL7v2 store, of the form
           *        `projects/{project_id}/datasets/{dataset_id}/hl7V2Stores/{hl7v2_store_id}`.
             * @param content the {@link com.google.api.services.healthcare.v1alpha.model.Hl7V2Store}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.healthcare.v1alpha.model.Hl7V2Store content) {
              super(CloudHealthcare.this, "PATCH", REST_PATH, content, com.google.api.services.healthcare.v1alpha.model.Hl7V2Store.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Output only. Resource name of the HL7v2 store, of the form
             * `projects/{project_id}/datasets/{dataset_id}/hl7V2Stores/{hl7v2_store_id}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Output only. Resource name of the HL7v2 store, of the form
           `projects/{project_id}/datasets/{dataset_id}/hl7V2Stores/{hl7v2_store_id}`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Output only. Resource name of the HL7v2 store, of the form
             * `projects/{project_id}/datasets/{dataset_id}/hl7V2Stores/{hl7v2_store_id}`.
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * The update mask applies to the resource. For the `FieldMask` definition, see
             * https://developers.google.com/protocol-
             * buffers/docs/reference/google.protobuf#fieldmask
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** The update mask applies to the resource. For the `FieldMask` definition, see
           https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * The update mask applies to the resource. For the `FieldMask` definition, see
             * https://developers.google.com/protocol-
             * buffers/docs/reference/google.protobuf#fieldmask
             */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }
          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy.
           *
           * Create a request for the method "hl7V2Stores.setIamPolicy".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy is being specified.
          See the operation documentation for
           *        the appropriate value for this field.
           * @param content the {@link com.google.api.services.healthcare.v1alpha.model.SetIamPolicyRequest}
           * @return the request
           */
          public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.healthcare.v1alpha.model.SetIamPolicyRequest content) throws java.io.IOException {
            SetIamPolicy result = new SetIamPolicy(resource, content);
            initialize(result);
            return result;
          }

          public class SetIamPolicy extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.Policy> {

            private static final String REST_PATH = "v1alpha/{+resource}:setIamPolicy";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");

            /**
             * Sets the access control policy on the specified resource. Replaces any existing policy.
             *
             * Create a request for the method "hl7V2Stores.setIamPolicy".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
             * operation. <p> {@link
             * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy is being specified.
          See the operation documentation for
           *        the appropriate value for this field.
             * @param content the {@link com.google.api.services.healthcare.v1alpha.model.SetIamPolicyRequest}
             * @since 1.13
             */
            protected SetIamPolicy(java.lang.String resource, com.google.api.services.healthcare.v1alpha.model.SetIamPolicyRequest content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1alpha.model.Policy.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");
              }
            }

            @Override
            public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
              return (SetIamPolicy) super.set$Xgafv($Xgafv);
            }

            @Override
            public SetIamPolicy setAccessToken(java.lang.String accessToken) {
              return (SetIamPolicy) super.setAccessToken(accessToken);
            }

            @Override
            public SetIamPolicy setAlt(java.lang.String alt) {
              return (SetIamPolicy) super.setAlt(alt);
            }

            @Override
            public SetIamPolicy setCallback(java.lang.String callback) {
              return (SetIamPolicy) super.setCallback(callback);
            }

            @Override
            public SetIamPolicy setFields(java.lang.String fields) {
              return (SetIamPolicy) super.setFields(fields);
            }

            @Override
            public SetIamPolicy setKey(java.lang.String key) {
              return (SetIamPolicy) super.setKey(key);
            }

            @Override
            public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
              return (SetIamPolicy) super.setOauthToken(oauthToken);
            }

            @Override
            public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
              return (SetIamPolicy) super.setQuotaUser(quotaUser);
            }

            @Override
            public SetIamPolicy setUploadType(java.lang.String uploadType) {
              return (SetIamPolicy) super.setUploadType(uploadType);
            }

            @Override
            public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
              return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy is being specified. See the operation
             * documentation for the appropriate value for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy is being specified. See the operation documentation for
           the appropriate value for this field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy is being specified. See the operation
             * documentation for the appropriate value for this field.
             */
            public SetIamPolicy setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public SetIamPolicy set(String parameterName, Object value) {
              return (SetIamPolicy) super.set(parameterName, value);
            }
          }
          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not exist,
           * this will return an empty set of permissions, not a NOT_FOUND error.
           *
           * Note: This operation is designed to be used for building permission-aware UIs and command-line
           * tools, not for authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "hl7V2Stores.testIamPermissions".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested.
          See the operation
           *        documentation for the appropriate value for this field.
           * @param content the {@link com.google.api.services.healthcare.v1alpha.model.TestIamPermissionsRequest}
           * @return the request
           */
          public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.healthcare.v1alpha.model.TestIamPermissionsRequest content) throws java.io.IOException {
            TestIamPermissions result = new TestIamPermissions(resource, content);
            initialize(result);
            return result;
          }

          public class TestIamPermissions extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.TestIamPermissionsResponse> {

            private static final String REST_PATH = "v1alpha/{+resource}:testIamPermissions";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");

            /**
             * Returns permissions that a caller has on the specified resource. If the resource does not
             * exist, this will return an empty set of permissions, not a NOT_FOUND error.
             *
             * Note: This operation is designed to be used for building permission-aware UIs and command-line
             * tools, not for authorization checking. This operation may "fail open" without warning.
             *
             * Create a request for the method "hl7V2Stores.testIamPermissions".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
             * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
             * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy detail is being requested.
          See the operation
           *        documentation for the appropriate value for this field.
             * @param content the {@link com.google.api.services.healthcare.v1alpha.model.TestIamPermissionsRequest}
             * @since 1.13
             */
            protected TestIamPermissions(java.lang.String resource, com.google.api.services.healthcare.v1alpha.model.TestIamPermissionsRequest content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1alpha.model.TestIamPermissionsResponse.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");
              }
            }

            @Override
            public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
              return (TestIamPermissions) super.set$Xgafv($Xgafv);
            }

            @Override
            public TestIamPermissions setAccessToken(java.lang.String accessToken) {
              return (TestIamPermissions) super.setAccessToken(accessToken);
            }

            @Override
            public TestIamPermissions setAlt(java.lang.String alt) {
              return (TestIamPermissions) super.setAlt(alt);
            }

            @Override
            public TestIamPermissions setCallback(java.lang.String callback) {
              return (TestIamPermissions) super.setCallback(callback);
            }

            @Override
            public TestIamPermissions setFields(java.lang.String fields) {
              return (TestIamPermissions) super.setFields(fields);
            }

            @Override
            public TestIamPermissions setKey(java.lang.String key) {
              return (TestIamPermissions) super.setKey(key);
            }

            @Override
            public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
              return (TestIamPermissions) super.setOauthToken(oauthToken);
            }

            @Override
            public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
              return (TestIamPermissions) super.setQuotaUser(quotaUser);
            }

            @Override
            public TestIamPermissions setUploadType(java.lang.String uploadType) {
              return (TestIamPermissions) super.setUploadType(uploadType);
            }

            @Override
            public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
              return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy detail is being requested. See the
             * operation documentation for the appropriate value for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy detail is being requested. See the operation
           documentation for the appropriate value for this field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy detail is being requested. See the
             * operation documentation for the appropriate value for this field.
             */
            public TestIamPermissions setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public TestIamPermissions set(String parameterName, Object value) {
              return (TestIamPermissions) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the Messages collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code CloudHealthcare healthcare = new CloudHealthcare(...);}
           *   {@code CloudHealthcare.Messages.List request = healthcare.messages().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Messages messages() {
            return new Messages();
          }

          /**
           * The "messages" collection of methods.
           */
          public class Messages {

            /**
             * Creates a message and sends a notification to the Cloud Pub/Sub topic. If configured, the MLLP
             * adapter listens to messages created by this method and sends those back to the hospital. A
             * successful response indicates the message has been persisted to storage and a Cloud Pub/Sub
             * notification has been sent. Sending to the hospital by the MLLP adapter happens asynchronously.
             *
             * Create a request for the method "messages.create".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Create#execute()} method to invoke the remote operation.
             *
             * @param parent The name of the dataset this message belongs to.
             * @param content the {@link com.google.api.services.healthcare.v1alpha.model.CreateMessageRequest}
             * @return the request
             */
            public Create create(java.lang.String parent, com.google.api.services.healthcare.v1alpha.model.CreateMessageRequest content) throws java.io.IOException {
              Create result = new Create(parent, content);
              initialize(result);
              return result;
            }

            public class Create extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.Message> {

              private static final String REST_PATH = "v1alpha/{+parent}/messages";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");

              /**
               * Creates a message and sends a notification to the Cloud Pub/Sub topic. If configured, the MLLP
               * adapter listens to messages created by this method and sends those back to the hospital. A
               * successful response indicates the message has been persisted to storage and a Cloud Pub/Sub
               * notification has been sent. Sending to the hospital by the MLLP adapter happens asynchronously.
               *
               * Create a request for the method "messages.create".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
               * <p> {@link
               * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent The name of the dataset this message belongs to.
               * @param content the {@link com.google.api.services.healthcare.v1alpha.model.CreateMessageRequest}
               * @since 1.13
               */
              protected Create(java.lang.String parent, com.google.api.services.healthcare.v1alpha.model.CreateMessageRequest content) {
                super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1alpha.model.Message.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");
                }
              }

              @Override
              public Create set$Xgafv(java.lang.String $Xgafv) {
                return (Create) super.set$Xgafv($Xgafv);
              }

              @Override
              public Create setAccessToken(java.lang.String accessToken) {
                return (Create) super.setAccessToken(accessToken);
              }

              @Override
              public Create setAlt(java.lang.String alt) {
                return (Create) super.setAlt(alt);
              }

              @Override
              public Create setCallback(java.lang.String callback) {
                return (Create) super.setCallback(callback);
              }

              @Override
              public Create setFields(java.lang.String fields) {
                return (Create) super.setFields(fields);
              }

              @Override
              public Create setKey(java.lang.String key) {
                return (Create) super.setKey(key);
              }

              @Override
              public Create setOauthToken(java.lang.String oauthToken) {
                return (Create) super.setOauthToken(oauthToken);
              }

              @Override
              public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Create) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Create setQuotaUser(java.lang.String quotaUser) {
                return (Create) super.setQuotaUser(quotaUser);
              }

              @Override
              public Create setUploadType(java.lang.String uploadType) {
                return (Create) super.setUploadType(uploadType);
              }

              @Override
              public Create setUploadProtocol(java.lang.String uploadProtocol) {
                return (Create) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the dataset this message belongs to. */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** The name of the dataset this message belongs to.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /** The name of the dataset this message belongs to. */
              public Create setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public Create set(String parameterName, Object value) {
                return (Create) super.set(parameterName, value);
              }
            }
            /**
             * Deletes an HL7v2 message.
             *
             * Create a request for the method "messages.delete".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param name The resource name of the HL7v2 message to delete.
             * @return the request
             */
            public Delete delete(java.lang.String name) throws java.io.IOException {
              Delete result = new Delete(name);
              initialize(result);
              return result;
            }

            public class Delete extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.Empty> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+/messages/[^/]+$");

              /**
               * Deletes an HL7v2 message.
               *
               * Create a request for the method "messages.delete".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               * <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The resource name of the HL7v2 message to delete.
               * @since 1.13
               */
              protected Delete(java.lang.String name) {
                super(CloudHealthcare.this, "DELETE", REST_PATH, null, com.google.api.services.healthcare.v1alpha.model.Empty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+/messages/[^/]+$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              /** The resource name of the HL7v2 message to delete. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The resource name of the HL7v2 message to delete.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The resource name of the HL7v2 message to delete. */
              public Delete setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+/messages/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * Gets an HL7v2 message.
             *
             * Create a request for the method "messages.get".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name The resource name of the HL7v2 message to retrieve.
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.Message> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+/messages/[^/]+$");

              /**
               * Gets an HL7v2 message.
               *
               * Create a request for the method "messages.get".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The resource name of the HL7v2 message to retrieve.
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1alpha.model.Message.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+/messages/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /** The resource name of the HL7v2 message to retrieve. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The resource name of the HL7v2 message to retrieve.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The resource name of the HL7v2 message to retrieve. */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+/messages/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * Specifies which parts of the Message resource should be returned in the response.
               */
              @com.google.api.client.util.Key
              private java.lang.String view;

              /** Specifies which parts of the Message resource should be returned in the response.
               */
              public java.lang.String getView() {
                return view;
              }

              /**
               * Specifies which parts of the Message resource should be returned in the response.
               */
              public Get setView(java.lang.String view) {
                this.view = view;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Ingests a new HL7v2 message from the hospital and sends a notification to the Cloud Pub/Sub
             * topic. Return is an HL7v2 ACK message if the message was successfully stored. Otherwise an error
             * is returned.  If an identical HL7v2 message is created twice only one resource is created on the
             * server and no error is reported.
             *
             * Create a request for the method "messages.ingest".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Ingest#execute()} method to invoke the remote operation.
             *
             * @param parent The name of the HL7v2 store this message belongs to.
             * @param content the {@link com.google.api.services.healthcare.v1alpha.model.IngestMessageRequest}
             * @return the request
             */
            public Ingest ingest(java.lang.String parent, com.google.api.services.healthcare.v1alpha.model.IngestMessageRequest content) throws java.io.IOException {
              Ingest result = new Ingest(parent, content);
              initialize(result);
              return result;
            }

            public class Ingest extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.IngestMessageResponse> {

              private static final String REST_PATH = "v1alpha/{+parent}/messages:ingest";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");

              /**
               * Ingests a new HL7v2 message from the hospital and sends a notification to the Cloud Pub/Sub
               * topic. Return is an HL7v2 ACK message if the message was successfully stored. Otherwise an
               * error is returned.  If an identical HL7v2 message is created twice only one resource is created
               * on the server and no error is reported.
               *
               * Create a request for the method "messages.ingest".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Ingest#execute()} method to invoke the remote operation.
               * <p> {@link
               * Ingest#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent The name of the HL7v2 store this message belongs to.
               * @param content the {@link com.google.api.services.healthcare.v1alpha.model.IngestMessageRequest}
               * @since 1.13
               */
              protected Ingest(java.lang.String parent, com.google.api.services.healthcare.v1alpha.model.IngestMessageRequest content) {
                super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1alpha.model.IngestMessageResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");
                }
              }

              @Override
              public Ingest set$Xgafv(java.lang.String $Xgafv) {
                return (Ingest) super.set$Xgafv($Xgafv);
              }

              @Override
              public Ingest setAccessToken(java.lang.String accessToken) {
                return (Ingest) super.setAccessToken(accessToken);
              }

              @Override
              public Ingest setAlt(java.lang.String alt) {
                return (Ingest) super.setAlt(alt);
              }

              @Override
              public Ingest setCallback(java.lang.String callback) {
                return (Ingest) super.setCallback(callback);
              }

              @Override
              public Ingest setFields(java.lang.String fields) {
                return (Ingest) super.setFields(fields);
              }

              @Override
              public Ingest setKey(java.lang.String key) {
                return (Ingest) super.setKey(key);
              }

              @Override
              public Ingest setOauthToken(java.lang.String oauthToken) {
                return (Ingest) super.setOauthToken(oauthToken);
              }

              @Override
              public Ingest setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Ingest) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Ingest setQuotaUser(java.lang.String quotaUser) {
                return (Ingest) super.setQuotaUser(quotaUser);
              }

              @Override
              public Ingest setUploadType(java.lang.String uploadType) {
                return (Ingest) super.setUploadType(uploadType);
              }

              @Override
              public Ingest setUploadProtocol(java.lang.String uploadProtocol) {
                return (Ingest) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the HL7v2 store this message belongs to. */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** The name of the HL7v2 store this message belongs to.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /** The name of the HL7v2 store this message belongs to. */
              public Ingest setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public Ingest set(String parameterName, Object value) {
                return (Ingest) super.set(parameterName, value);
              }
            }
            /**
             * Lists all the messages in the given HL7v2 store with support for filtering.
             *
             * Create a request for the method "messages.list".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Name of the HL7v2 store to retrieve messages from.
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.ListMessagesResponse> {

              private static final String REST_PATH = "v1alpha/{+parent}/messages";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");

              /**
               * Lists all the messages in the given HL7v2 store with support for filtering.
               *
               * Create a request for the method "messages.list".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Name of the HL7v2 store to retrieve messages from.
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1alpha.model.ListMessagesResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /** Name of the HL7v2 store to retrieve messages from. */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Name of the HL7v2 store to retrieve messages from.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /** Name of the HL7v2 store to retrieve messages from. */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Restricts messages returned to those matching a filter. Syntax:
               * https://cloud.google.com/appengine/docs/standard/python/search/query_strings
               * Fields/functions available for filtering are: - message_type, from the MSH-9
               * segment, e.g. 'NOT message_type = "ADT"' - send_date or sendDate, the YYYY-MM-DD
               * date the message was sent in the dataset's time_zone, from the MSH-7 segment; e.g.
               * 'send_date < "2017-01-02"' - send_time, the timestamp of when the message was sent,
               * using the RFC3339 time format for comparisons, from the MSH-7 segment; e.g.
               * 'send_time < "2017-01-02T00:00:00-05:00"' - send_facility, the hospital/trust that
               * the message came from, from the MSH-4 segment, e.g. 'send_facility = "RAL"' -
               * HL7RegExp(expr), which does regular expression matching of expr against the HL7
               * message payload using re2 (http://code.google.com/p/re2/) syntax; e.g.
               * 'HL7RegExp("^.*\|.*\|CERNER")' - PatientId(value, type), which matches if the
               * message lists a patient having an ID of the given value and type in the PID-2,
               * PID-3, or PID-4 segments; e.g. 'PatientId("123456", "MRN")' - HasLabel(x), a
               * boolean returning true if the message has a label with key x (having any value) set
               * using the labels map in Message; e.g. 'HasLabel("priority")' - Label(x), a string
               * value of the label with key x as set using the labels map in Message, e.g.
               * 'Label("priority") = "high"' Negation on the patient ID function and the label
               * function are not supported, e.g. invalid queries: 'NOT PatientId("123456", "MRN")',
               * 'NOT HasLabel("tag1")', 'NOT Label("tag2") = "val2"'. Conjunction of multiple
               * patient ID functions is not supported, e.g. an invalid query: 'PatientId("123456",
               * "MRN") AND PatientId("456789", "MRN")'. Conjunction of multiple label functions is
               * also not supported, e.g. an invalid query: 'HasLabel("tag1") AND Label("tag2") =
               * "val2"'. Conjunction of one patient ID function, one label function and other
               * fields is supported, e.g. a valid query: 'PatientId("123456", "MRN") AND
               * HasLabel("tag1") AND message_type = "ADT"'.
               */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** Restricts messages returned to those matching a filter. Syntax:
             https://cloud.google.com/appengine/docs/standard/python/search/query_strings Fields/functions
             available for filtering are: - message_type, from the MSH-9 segment, e.g. 'NOT message_type =
             "ADT"' - send_date or sendDate, the YYYY-MM-DD date the message was sent in the dataset's
             time_zone, from the MSH-7 segment; e.g. 'send_date < "2017-01-02"' - send_time, the timestamp of
             when the message was sent, using the RFC3339 time format for comparisons, from the MSH-7 segment;
             e.g. 'send_time < "2017-01-02T00:00:00-05:00"' - send_facility, the hospital/trust that the message
             came from, from the MSH-4 segment, e.g. 'send_facility = "RAL"' - HL7RegExp(expr), which does
             regular expression matching of expr against the HL7 message payload using re2
             (http://code.google.com/p/re2/) syntax; e.g. 'HL7RegExp("^.*\|.*\|CERNER")' - PatientId(value,
             type), which matches if the message lists a patient having an ID of the given value and type in the
             PID-2, PID-3, or PID-4 segments; e.g. 'PatientId("123456", "MRN")' - HasLabel(x), a boolean
             returning true if the message has a label with key x (having any value) set using the labels map in
             Message; e.g. 'HasLabel("priority")' - Label(x), a string value of the label with key x as set
             using the labels map in Message, e.g. 'Label("priority") = "high"' Negation on the patient ID
             function and the label function are not supported, e.g. invalid queries: 'NOT PatientId("123456",
             "MRN")', 'NOT HasLabel("tag1")', 'NOT Label("tag2") = "val2"'. Conjunction of multiple patient ID
             functions is not supported, e.g. an invalid query: 'PatientId("123456", "MRN") AND
             PatientId("456789", "MRN")'. Conjunction of multiple label functions is also not supported, e.g. an
             invalid query: 'HasLabel("tag1") AND Label("tag2") = "val2"'. Conjunction of one patient ID
             function, one label function and other fields is supported, e.g. a valid query:
             'PatientId("123456", "MRN") AND HasLabel("tag1") AND message_type = "ADT"'.
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /**
               * Restricts messages returned to those matching a filter. Syntax:
               * https://cloud.google.com/appengine/docs/standard/python/search/query_strings
               * Fields/functions available for filtering are: - message_type, from the MSH-9
               * segment, e.g. 'NOT message_type = "ADT"' - send_date or sendDate, the YYYY-MM-DD
               * date the message was sent in the dataset's time_zone, from the MSH-7 segment; e.g.
               * 'send_date < "2017-01-02"' - send_time, the timestamp of when the message was sent,
               * using the RFC3339 time format for comparisons, from the MSH-7 segment; e.g.
               * 'send_time < "2017-01-02T00:00:00-05:00"' - send_facility, the hospital/trust that
               * the message came from, from the MSH-4 segment, e.g. 'send_facility = "RAL"' -
               * HL7RegExp(expr), which does regular expression matching of expr against the HL7
               * message payload using re2 (http://code.google.com/p/re2/) syntax; e.g.
               * 'HL7RegExp("^.*\|.*\|CERNER")' - PatientId(value, type), which matches if the
               * message lists a patient having an ID of the given value and type in the PID-2,
               * PID-3, or PID-4 segments; e.g. 'PatientId("123456", "MRN")' - HasLabel(x), a
               * boolean returning true if the message has a label with key x (having any value) set
               * using the labels map in Message; e.g. 'HasLabel("priority")' - Label(x), a string
               * value of the label with key x as set using the labels map in Message, e.g.
               * 'Label("priority") = "high"' Negation on the patient ID function and the label
               * function are not supported, e.g. invalid queries: 'NOT PatientId("123456", "MRN")',
               * 'NOT HasLabel("tag1")', 'NOT Label("tag2") = "val2"'. Conjunction of multiple
               * patient ID functions is not supported, e.g. an invalid query: 'PatientId("123456",
               * "MRN") AND PatientId("456789", "MRN")'. Conjunction of multiple label functions is
               * also not supported, e.g. an invalid query: 'HasLabel("tag1") AND Label("tag2") =
               * "val2"'. Conjunction of one patient ID function, one label function and other
               * fields is supported, e.g. a valid query: 'PatientId("123456", "MRN") AND
               * HasLabel("tag1") AND message_type = "ADT"'.
               */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /**
               * Orders messages returned by the specified order_by clause. Syntax:
               * https://cloud.google.com/apis/design/design_patterns#sorting_order Fields available
               * for ordering are: - send_time
               */
              @com.google.api.client.util.Key
              private java.lang.String orderBy;

              /** Orders messages returned by the specified order_by clause. Syntax:
             https://cloud.google.com/apis/design/design_patterns#sorting_order Fields available for ordering
             are: - send_time
               */
              public java.lang.String getOrderBy() {
                return orderBy;
              }

              /**
               * Orders messages returned by the specified order_by clause. Syntax:
               * https://cloud.google.com/apis/design/design_patterns#sorting_order Fields available
               * for ordering are: - send_time
               */
              public List setOrderBy(java.lang.String orderBy) {
                this.orderBy = orderBy;
                return this;
              }

              /**
               * Limit on the number of messages to return in a single response. If zero the default
               * page size of 100 is used.
               */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** Limit on the number of messages to return in a single response. If zero the default page size of
             100 is used.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /**
               * Limit on the number of messages to return in a single response. If zero the default
               * page size of 100 is used.
               */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /** The next_page_token value returned from the previous List request, if any. */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** The next_page_token value returned from the previous List request, if any.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /** The next_page_token value returned from the previous List request, if any. */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }
            /**
             * Update the message.
             *
             * Create a request for the method "messages.patch".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             *
             * @param name Resource name of the Message, of the form
             *        `projects/{project_id}/datasets/{dataset_id}/hl7V2Stores/{hl7_v2_store_id}/messages/{messa
             *        ge_id}`.
            Assigned by the server.
             * @param content the {@link com.google.api.services.healthcare.v1alpha.model.Message}
             * @return the request
             */
            public Patch patch(java.lang.String name, com.google.api.services.healthcare.v1alpha.model.Message content) throws java.io.IOException {
              Patch result = new Patch(name, content);
              initialize(result);
              return result;
            }

            public class Patch extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.Message> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+/messages/[^/]+$");

              /**
               * Update the message.
               *
               * Create a request for the method "messages.patch".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
               * <p> {@link
               * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Resource name of the Message, of the form
             *        `projects/{project_id}/datasets/{dataset_id}/hl7V2Stores/{hl7_v2_store_id}/messages/{messa
             *        ge_id}`.
            Assigned by the server.
               * @param content the {@link com.google.api.services.healthcare.v1alpha.model.Message}
               * @since 1.13
               */
              protected Patch(java.lang.String name, com.google.api.services.healthcare.v1alpha.model.Message content) {
                super(CloudHealthcare.this, "PATCH", REST_PATH, content, com.google.api.services.healthcare.v1alpha.model.Message.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+/messages/[^/]+$");
                }
              }

              @Override
              public Patch set$Xgafv(java.lang.String $Xgafv) {
                return (Patch) super.set$Xgafv($Xgafv);
              }

              @Override
              public Patch setAccessToken(java.lang.String accessToken) {
                return (Patch) super.setAccessToken(accessToken);
              }

              @Override
              public Patch setAlt(java.lang.String alt) {
                return (Patch) super.setAlt(alt);
              }

              @Override
              public Patch setCallback(java.lang.String callback) {
                return (Patch) super.setCallback(callback);
              }

              @Override
              public Patch setFields(java.lang.String fields) {
                return (Patch) super.setFields(fields);
              }

              @Override
              public Patch setKey(java.lang.String key) {
                return (Patch) super.setKey(key);
              }

              @Override
              public Patch setOauthToken(java.lang.String oauthToken) {
                return (Patch) super.setOauthToken(oauthToken);
              }

              @Override
              public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Patch) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Patch setQuotaUser(java.lang.String quotaUser) {
                return (Patch) super.setQuotaUser(quotaUser);
              }

              @Override
              public Patch setUploadType(java.lang.String uploadType) {
                return (Patch) super.setUploadType(uploadType);
              }

              @Override
              public Patch setUploadProtocol(java.lang.String uploadProtocol) {
                return (Patch) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Resource name of the Message, of the form `projects/{project_id}/datasets/{dataset_
               * id}/hl7V2Stores/{hl7_v2_store_id}/messages/{message_id}`. Assigned by the server.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Resource name of the Message, of the form
             `projects/{project_id}/datasets/{dataset_id}/hl7V2Stores/{hl7_v2_store_id}/messages/{message_id}`.
             Assigned by the server.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Resource name of the Message, of the form `projects/{project_id}/datasets/{dataset_
               * id}/hl7V2Stores/{hl7_v2_store_id}/messages/{message_id}`. Assigned by the server.
               */
              public Patch setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+/messages/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * The update mask applies to the resource. For the `FieldMask` definition, see
               * https://developers.google.com/protocol-
               * buffers/docs/reference/google.protobuf#fieldmask Only the `labels` field is allowed
               * to be updated. The labels in the request will be merged with the existing set of
               * labels. Existing labels with the same keys will be updated.
               */
              @com.google.api.client.util.Key
              private String updateMask;

              /** The update mask applies to the resource. For the `FieldMask` definition, see
             https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask Only the
             `labels` field is allowed to be updated. The labels in the request will be merged with the existing
             set of labels. Existing labels with the same keys will be updated.
               */
              public String getUpdateMask() {
                return updateMask;
              }

              /**
               * The update mask applies to the resource. For the `FieldMask` definition, see
               * https://developers.google.com/protocol-
               * buffers/docs/reference/google.protobuf#fieldmask Only the `labels` field is allowed
               * to be updated. The labels in the request will be merged with the existing set of
               * labels. Existing labels with the same keys will be updated.
               */
              public Patch setUpdateMask(String updateMask) {
                this.updateMask = updateMask;
                return this;
              }

              @Override
              public Patch set(String parameterName, Object value) {
                return (Patch) super.set(parameterName, value);
              }
            }

          }
        }
        /**
         * An accessor for creating requests from the Operations collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code CloudHealthcare healthcare = new CloudHealthcare(...);}
         *   {@code CloudHealthcare.Operations.List request = healthcare.operations().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Operations operations() {
          return new Operations();
        }

        /**
         * The "operations" collection of methods.
         */
        public class Operations {

          /**
           * Gets the latest state of a long-running operation.  Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.Operation> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/operations/[^/]+$");

            /**
             * Gets the latest state of a long-running operation.  Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1alpha.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * NOTE: the `name` binding allows API services to override the binding to use different resource
           * name schemes, such as `users/operations`. To override the binding, API services can add a binding
           * such as `"/v1/{name=users}/operations"` to their service configuration. For backwards
           * compatibility, the default name includes the operations collection id, however overriding users
           * must ensure the name binding is the parent resource, without the operations collection id.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation's parent resource.
           * @return the request
           */
          public List list(java.lang.String name) throws java.io.IOException {
            List result = new List(name);
            initialize(result);
            return result;
          }

          public class List extends CloudHealthcareRequest<com.google.api.services.healthcare.v1alpha.model.ListOperationsResponse> {

            private static final String REST_PATH = "v1alpha/{+name}/operations";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");

            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * NOTE: the `name` binding allows API services to override the binding to use different resource
             * name schemes, such as `users/operations`. To override the binding, API services can add a
             * binding such as `"/v1/{name=users}/operations"` to their service configuration. For backwards
             * compatibility, the default name includes the operations collection id, however overriding users
             * must ensure the name binding is the parent resource, without the operations collection id.
             *
             * Create a request for the method "operations.list".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation's parent resource.
             * @since 1.13
             */
            protected List(java.lang.String name) {
              super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1alpha.model.ListOperationsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation's parent resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation's parent resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation's parent resource. */
            public List setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** The standard list filter. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** The standard list filter.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** The standard list filter. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** The standard list page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The standard list page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The standard list page size. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The standard list page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The standard list page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The standard list page token. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

        }
      }
    }
  }

  /**
   * Builder for {@link CloudHealthcare}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link CloudHealthcare}. */
    @Override
    public CloudHealthcare build() {
      return new CloudHealthcare(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link CloudHealthcareRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setCloudHealthcareRequestInitializer(
        CloudHealthcareRequestInitializer cloudhealthcareRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(cloudhealthcareRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
