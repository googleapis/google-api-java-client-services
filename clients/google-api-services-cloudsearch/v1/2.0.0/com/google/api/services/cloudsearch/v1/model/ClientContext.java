/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudsearch.v1.model;

/**
 * Represents the context of the client on behalf of which a HistoryRecord is produced. The
 * ClientContext message can be used to hold context about the service client (e.g. the internal
 * server making fusebox requests) or the user client (e.g. the IP address of the end user).
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Search API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ClientContext extends com.google.api.client.json.GenericJson {

  /**
   * The client operation to which this history record belongs. The notion of a client operation is
   * provided to keep track of client operations which might span multiple transactions in the lower
   * level.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String clientOperationId;

  /**
   * E.g. "pinto", "imap", "bigtop", "upload"
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String clientType;

  /**
   * Contains information about the session which created this history record. This will be empty if
   * the history record was generated by an internal request.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SessionContext sessionContext;

  /**
   * Textual representation of the user's IP address, if available.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String userIp;

  /**
   * The client operation to which this history record belongs. The notion of a client operation is
   * provided to keep track of client operations which might span multiple transactions in the lower
   * level.
   * @return value or {@code null} for none
   */
  public java.lang.String getClientOperationId() {
    return clientOperationId;
  }

  /**
   * The client operation to which this history record belongs. The notion of a client operation is
   * provided to keep track of client operations which might span multiple transactions in the lower
   * level.
   * @param clientOperationId clientOperationId or {@code null} for none
   */
  public ClientContext setClientOperationId(java.lang.String clientOperationId) {
    this.clientOperationId = clientOperationId;
    return this;
  }

  /**
   * E.g. "pinto", "imap", "bigtop", "upload"
   * @return value or {@code null} for none
   */
  public java.lang.String getClientType() {
    return clientType;
  }

  /**
   * E.g. "pinto", "imap", "bigtop", "upload"
   * @param clientType clientType or {@code null} for none
   */
  public ClientContext setClientType(java.lang.String clientType) {
    this.clientType = clientType;
    return this;
  }

  /**
   * Contains information about the session which created this history record. This will be empty if
   * the history record was generated by an internal request.
   * @return value or {@code null} for none
   */
  public SessionContext getSessionContext() {
    return sessionContext;
  }

  /**
   * Contains information about the session which created this history record. This will be empty if
   * the history record was generated by an internal request.
   * @param sessionContext sessionContext or {@code null} for none
   */
  public ClientContext setSessionContext(SessionContext sessionContext) {
    this.sessionContext = sessionContext;
    return this;
  }

  /**
   * Textual representation of the user's IP address, if available.
   * @return value or {@code null} for none
   */
  public java.lang.String getUserIp() {
    return userIp;
  }

  /**
   * Textual representation of the user's IP address, if available.
   * @param userIp userIp or {@code null} for none
   */
  public ClientContext setUserIp(java.lang.String userIp) {
    this.userIp = userIp;
    return this;
  }

  @Override
  public ClientContext set(String fieldName, Object value) {
    return (ClientContext) super.set(fieldName, value);
  }

  @Override
  public ClientContext clone() {
    return (ClientContext) super.clone();
  }

}
