/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.documentai.v1.model;

/**
 * Represents a chunk.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Document AI API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDocumentaiV1beta1DocumentChunkedDocumentChunk extends com.google.api.client.json.GenericJson {

  /**
   * ID of the chunk.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String chunkId;

  /**
   * Text content of the chunk.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String content;

  /**
   * Page footers associated with the chunk.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudDocumentaiV1beta1DocumentChunkedDocumentChunkChunkPageFooter> pageFooters;

  /**
   * Page headers associated with the chunk.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudDocumentaiV1beta1DocumentChunkedDocumentChunkChunkPageHeader> pageHeaders;

  /**
   * Page span of the chunk.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDocumentaiV1beta1DocumentChunkedDocumentChunkChunkPageSpan pageSpan;

  /**
   * Unused.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> sourceBlockIds;

  /**
   * ID of the chunk.
   * @return value or {@code null} for none
   */
  public java.lang.String getChunkId() {
    return chunkId;
  }

  /**
   * ID of the chunk.
   * @param chunkId chunkId or {@code null} for none
   */
  public GoogleCloudDocumentaiV1beta1DocumentChunkedDocumentChunk setChunkId(java.lang.String chunkId) {
    this.chunkId = chunkId;
    return this;
  }

  /**
   * Text content of the chunk.
   * @return value or {@code null} for none
   */
  public java.lang.String getContent() {
    return content;
  }

  /**
   * Text content of the chunk.
   * @param content content or {@code null} for none
   */
  public GoogleCloudDocumentaiV1beta1DocumentChunkedDocumentChunk setContent(java.lang.String content) {
    this.content = content;
    return this;
  }

  /**
   * Page footers associated with the chunk.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudDocumentaiV1beta1DocumentChunkedDocumentChunkChunkPageFooter> getPageFooters() {
    return pageFooters;
  }

  /**
   * Page footers associated with the chunk.
   * @param pageFooters pageFooters or {@code null} for none
   */
  public GoogleCloudDocumentaiV1beta1DocumentChunkedDocumentChunk setPageFooters(java.util.List<GoogleCloudDocumentaiV1beta1DocumentChunkedDocumentChunkChunkPageFooter> pageFooters) {
    this.pageFooters = pageFooters;
    return this;
  }

  /**
   * Page headers associated with the chunk.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudDocumentaiV1beta1DocumentChunkedDocumentChunkChunkPageHeader> getPageHeaders() {
    return pageHeaders;
  }

  /**
   * Page headers associated with the chunk.
   * @param pageHeaders pageHeaders or {@code null} for none
   */
  public GoogleCloudDocumentaiV1beta1DocumentChunkedDocumentChunk setPageHeaders(java.util.List<GoogleCloudDocumentaiV1beta1DocumentChunkedDocumentChunkChunkPageHeader> pageHeaders) {
    this.pageHeaders = pageHeaders;
    return this;
  }

  /**
   * Page span of the chunk.
   * @return value or {@code null} for none
   */
  public GoogleCloudDocumentaiV1beta1DocumentChunkedDocumentChunkChunkPageSpan getPageSpan() {
    return pageSpan;
  }

  /**
   * Page span of the chunk.
   * @param pageSpan pageSpan or {@code null} for none
   */
  public GoogleCloudDocumentaiV1beta1DocumentChunkedDocumentChunk setPageSpan(GoogleCloudDocumentaiV1beta1DocumentChunkedDocumentChunkChunkPageSpan pageSpan) {
    this.pageSpan = pageSpan;
    return this;
  }

  /**
   * Unused.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getSourceBlockIds() {
    return sourceBlockIds;
  }

  /**
   * Unused.
   * @param sourceBlockIds sourceBlockIds or {@code null} for none
   */
  public GoogleCloudDocumentaiV1beta1DocumentChunkedDocumentChunk setSourceBlockIds(java.util.List<java.lang.String> sourceBlockIds) {
    this.sourceBlockIds = sourceBlockIds;
    return this;
  }

  @Override
  public GoogleCloudDocumentaiV1beta1DocumentChunkedDocumentChunk set(String fieldName, Object value) {
    return (GoogleCloudDocumentaiV1beta1DocumentChunkedDocumentChunk) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDocumentaiV1beta1DocumentChunkedDocumentChunk clone() {
    return (GoogleCloudDocumentaiV1beta1DocumentChunkedDocumentChunk) super.clone();
  }

}
