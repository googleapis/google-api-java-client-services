/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.discoveryengine.v1alpha.model;

/**
 * Specification of the Vertex AI Search tool.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Discovery Engine API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDiscoveryengineV1alphaStreamAssistRequestToolsSpecVertexAiSearchSpec extends com.google.api.client.json.GenericJson {

  /**
   * Optional. Specs defining DataStores to filter on in a search call and configurations for those
   * data stores. This is only considered for Engines with multiple data stores.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudDiscoveryengineV1alphaSearchRequestDataStoreSpec> dataStoreSpecs;

  static {
    // hack to force ProGuard to consider GoogleCloudDiscoveryengineV1alphaSearchRequestDataStoreSpec used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(GoogleCloudDiscoveryengineV1alphaSearchRequestDataStoreSpec.class);
  }

  /**
   * Optional. The filter syntax consists of an expression language for constructing a predicate
   * from one or more fields of the documents being filtered. Filter expression is case-sensitive.
   * If this field is unrecognizable, an `INVALID_ARGUMENT` is returned. Filtering in Vertex AI
   * Search is done by mapping the LHS filter key to a key property defined in the Vertex AI Search
   * backend -- this mapping is defined by the customer in their schema. For example a media
   * customer might have a field 'name' in their schema. In this case the filter would look like
   * this: filter --> name:'ANY("king kong")' For more information about filtering including syntax
   * and filter operators, see [Filter](https://cloud.google.com/generative-ai-app-
   * builder/docs/filter-search-metadata)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String filter;

  /**
   * Optional. Specs defining DataStores to filter on in a search call and configurations for those
   * data stores. This is only considered for Engines with multiple data stores.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudDiscoveryengineV1alphaSearchRequestDataStoreSpec> getDataStoreSpecs() {
    return dataStoreSpecs;
  }

  /**
   * Optional. Specs defining DataStores to filter on in a search call and configurations for those
   * data stores. This is only considered for Engines with multiple data stores.
   * @param dataStoreSpecs dataStoreSpecs or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaStreamAssistRequestToolsSpecVertexAiSearchSpec setDataStoreSpecs(java.util.List<GoogleCloudDiscoveryengineV1alphaSearchRequestDataStoreSpec> dataStoreSpecs) {
    this.dataStoreSpecs = dataStoreSpecs;
    return this;
  }

  /**
   * Optional. The filter syntax consists of an expression language for constructing a predicate
   * from one or more fields of the documents being filtered. Filter expression is case-sensitive.
   * If this field is unrecognizable, an `INVALID_ARGUMENT` is returned. Filtering in Vertex AI
   * Search is done by mapping the LHS filter key to a key property defined in the Vertex AI Search
   * backend -- this mapping is defined by the customer in their schema. For example a media
   * customer might have a field 'name' in their schema. In this case the filter would look like
   * this: filter --> name:'ANY("king kong")' For more information about filtering including syntax
   * and filter operators, see [Filter](https://cloud.google.com/generative-ai-app-
   * builder/docs/filter-search-metadata)
   * @return value or {@code null} for none
   */
  public java.lang.String getFilter() {
    return filter;
  }

  /**
   * Optional. The filter syntax consists of an expression language for constructing a predicate
   * from one or more fields of the documents being filtered. Filter expression is case-sensitive.
   * If this field is unrecognizable, an `INVALID_ARGUMENT` is returned. Filtering in Vertex AI
   * Search is done by mapping the LHS filter key to a key property defined in the Vertex AI Search
   * backend -- this mapping is defined by the customer in their schema. For example a media
   * customer might have a field 'name' in their schema. In this case the filter would look like
   * this: filter --> name:'ANY("king kong")' For more information about filtering including syntax
   * and filter operators, see [Filter](https://cloud.google.com/generative-ai-app-
   * builder/docs/filter-search-metadata)
   * @param filter filter or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaStreamAssistRequestToolsSpecVertexAiSearchSpec setFilter(java.lang.String filter) {
    this.filter = filter;
    return this;
  }

  @Override
  public GoogleCloudDiscoveryengineV1alphaStreamAssistRequestToolsSpecVertexAiSearchSpec set(String fieldName, Object value) {
    return (GoogleCloudDiscoveryengineV1alphaStreamAssistRequestToolsSpecVertexAiSearchSpec) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDiscoveryengineV1alphaStreamAssistRequestToolsSpecVertexAiSearchSpec clone() {
    return (GoogleCloudDiscoveryengineV1alphaStreamAssistRequestToolsSpecVertexAiSearchSpec) super.clone();
  }

}
