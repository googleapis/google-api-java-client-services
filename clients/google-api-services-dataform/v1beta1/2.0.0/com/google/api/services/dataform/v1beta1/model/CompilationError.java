/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dataform.v1beta1.model;

/**
 * An error encountered when attempting to compile a Dataform project.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Dataform API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class CompilationError extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The identifier of the action where this error occurred, if available.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Target actionTarget;

  /**
   * Output only. The error's top level message.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String message;

  /**
   * Output only. The path of the file where this error occurred, if available, relative to the
   * project root.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String path;

  /**
   * Output only. The error's full stack trace.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String stack;

  /**
   * Output only. The identifier of the action where this error occurred, if available.
   * @return value or {@code null} for none
   */
  public Target getActionTarget() {
    return actionTarget;
  }

  /**
   * Output only. The identifier of the action where this error occurred, if available.
   * @param actionTarget actionTarget or {@code null} for none
   */
  public CompilationError setActionTarget(Target actionTarget) {
    this.actionTarget = actionTarget;
    return this;
  }

  /**
   * Output only. The error's top level message.
   * @return value or {@code null} for none
   */
  public java.lang.String getMessage() {
    return message;
  }

  /**
   * Output only. The error's top level message.
   * @param message message or {@code null} for none
   */
  public CompilationError setMessage(java.lang.String message) {
    this.message = message;
    return this;
  }

  /**
   * Output only. The path of the file where this error occurred, if available, relative to the
   * project root.
   * @return value or {@code null} for none
   */
  public java.lang.String getPath() {
    return path;
  }

  /**
   * Output only. The path of the file where this error occurred, if available, relative to the
   * project root.
   * @param path path or {@code null} for none
   */
  public CompilationError setPath(java.lang.String path) {
    this.path = path;
    return this;
  }

  /**
   * Output only. The error's full stack trace.
   * @return value or {@code null} for none
   */
  public java.lang.String getStack() {
    return stack;
  }

  /**
   * Output only. The error's full stack trace.
   * @param stack stack or {@code null} for none
   */
  public CompilationError setStack(java.lang.String stack) {
    this.stack = stack;
    return this;
  }

  @Override
  public CompilationError set(String fieldName, Object value) {
    return (CompilationError) super.set(fieldName, value);
  }

  @Override
  public CompilationError clone() {
    return (CompilationError) super.clone();
  }

}
