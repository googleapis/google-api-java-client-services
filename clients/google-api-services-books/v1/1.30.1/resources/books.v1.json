{
  "resources": {
    "dictionary": {
      "methods": {
        "listOfflineMetadata": {
          "httpMethod": "GET",
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "id": "books.dictionary.listOfflineMetadata",
          "path": "books/v1/dictionary/listOfflineMetadata",
          "parameters": {
            "cpksver": {
              "location": "query",
              "type": "string",
              "description": "The device/version ID from which to request the data."
            }
          },
          "description": "Returns a list of offline dictionary metadata available",
          "flatPath": "books/v1/dictionary/listOfflineMetadata",
          "response": {
            "$ref": "Metadata"
          }
        }
      }
    },
    "promooffer": {
      "methods": {
        "get": {
          "response": {
            "$ref": "Offers"
          },
          "parameters": {
            "model": {
              "location": "query",
              "type": "string",
              "description": "device model"
            },
            "manufacturer": {
              "description": "device manufacturer",
              "location": "query",
              "type": "string"
            },
            "androidId": {
              "type": "string",
              "description": "device android_id",
              "location": "query"
            },
            "serial": {
              "description": "device serial",
              "type": "string",
              "location": "query"
            },
            "product": {
              "location": "query",
              "description": "device product",
              "type": "string"
            },
            "device": {
              "description": "device device",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "id": "books.promooffer.get",
          "flatPath": "books/v1/promooffer/get",
          "httpMethod": "GET",
          "path": "books/v1/promooffer/get",
          "description": "Returns a list of promo offers available to the user"
        },
        "dismiss": {
          "path": "books/v1/promooffer/dismiss",
          "flatPath": "books/v1/promooffer/dismiss",
          "response": {
            "$ref": "Empty"
          },
          "id": "books.promooffer.dismiss",
          "parameterOrder": [],
          "httpMethod": "POST",
          "description": "Marks the promo offer as dismissed.",
          "parameters": {
            "androidId": {
              "location": "query",
              "description": "device android_id",
              "type": "string"
            },
            "model": {
              "description": "device model",
              "type": "string",
              "location": "query"
            },
            "product": {
              "type": "string",
              "description": "device product",
              "location": "query"
            },
            "serial": {
              "location": "query",
              "type": "string",
              "description": "device serial"
            },
            "manufacturer": {
              "type": "string",
              "location": "query",
              "description": "device manufacturer"
            },
            "device": {
              "description": "device device",
              "location": "query",
              "type": "string"
            },
            "offerId": {
              "location": "query",
              "type": "string",
              "description": "Offer to dimiss"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ]
        },
        "accept": {
          "parameters": {
            "product": {
              "description": "device product",
              "location": "query",
              "type": "string"
            },
            "offerId": {
              "type": "string",
              "location": "query"
            },
            "device": {
              "type": "string",
              "location": "query",
              "description": "device device"
            },
            "model": {
              "description": "device model",
              "type": "string",
              "location": "query"
            },
            "volumeId": {
              "type": "string",
              "location": "query",
              "description": "Volume id to exercise the offer"
            },
            "androidId": {
              "description": "device android_id",
              "type": "string",
              "location": "query"
            },
            "serial": {
              "type": "string",
              "location": "query",
              "description": "device serial"
            },
            "manufacturer": {
              "description": "device manufacturer",
              "type": "string",
              "location": "query"
            }
          },
          "description": "Accepts the promo offer.",
          "parameterOrder": [],
          "flatPath": "books/v1/promooffer/accept",
          "id": "books.promooffer.accept",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "response": {
            "$ref": "Empty"
          },
          "httpMethod": "POST",
          "path": "books/v1/promooffer/accept"
        }
      }
    },
    "cloudloading": {
      "methods": {
        "deleteBook": {
          "parameters": {
            "volumeId": {
              "type": "string",
              "location": "query",
              "description": "The id of the book to be removed."
            }
          },
          "flatPath": "books/v1/cloudloading/deleteBook",
          "id": "books.cloudloading.deleteBook",
          "path": "books/v1/cloudloading/deleteBook",
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "description": "Remove the book and its contents",
          "httpMethod": "POST",
          "response": {
            "$ref": "Empty"
          }
        },
        "addBook": {
          "path": "books/v1/cloudloading/addBook",
          "description": "Add a user-upload volume and triggers processing.",
          "parameters": {
            "name": {
              "description": "The document name. It can be set only if the drive_document_id is set.",
              "type": "string",
              "location": "query"
            },
            "upload_client_token": {
              "location": "query",
              "type": "string",
              "description": "Scotty upload token."
            },
            "mime_type": {
              "location": "query",
              "description": "The document MIME type. It can be set only if the drive_document_id is set.",
              "type": "string"
            },
            "drive_document_id": {
              "location": "query",
              "type": "string",
              "description": "A drive document id. The upload_client_token must not be set."
            }
          },
          "parameterOrder": [],
          "httpMethod": "POST",
          "id": "books.cloudloading.addBook",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/cloudloading/addBook",
          "response": {
            "$ref": "BooksCloudloadingResource"
          }
        },
        "updateBook": {
          "path": "books/v1/cloudloading/updateBook",
          "flatPath": "books/v1/cloudloading/updateBook",
          "description": "Updates a user-upload volume.",
          "request": {
            "$ref": "BooksCloudloadingResource"
          },
          "httpMethod": "POST",
          "id": "books.cloudloading.updateBook",
          "parameterOrder": [],
          "response": {
            "$ref": "BooksCloudloadingResource"
          },
          "parameters": {},
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ]
        }
      }
    },
    "layers": {
      "resources": {
        "annotationData": {
          "methods": {
            "list": {
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/data",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}/data",
              "response": {
                "$ref": "Annotationsdata"
              },
              "id": "books.layers.annotationData.list",
              "description": "Gets the annotation data for a volume and layer.",
              "httpMethod": "GET",
              "parameters": {
                "layerId": {
                  "description": "The ID for the layer to get the annotation data.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "w": {
                  "format": "int32",
                  "description": "The requested pixel width for any images. If width is provided height must also be provided.",
                  "location": "query",
                  "type": "integer"
                },
                "h": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The requested pixel height for any images. If height is provided width must also be provided.",
                  "location": "query"
                },
                "volumeId": {
                  "location": "path",
                  "description": "The volume to retrieve annotation data for.",
                  "required": true,
                  "type": "string"
                },
                "scale": {
                  "description": "The requested scale for the image.",
                  "location": "query",
                  "format": "int32",
                  "type": "integer"
                },
                "annotationDataId": {
                  "description": "The list of Annotation Data Ids to retrieve. Pagination is ignored if this is set.",
                  "location": "query",
                  "repeated": true,
                  "type": "string"
                },
                "pageToken": {
                  "location": "query",
                  "description": "The value of the nextToken from the previous page.",
                  "type": "string"
                },
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                },
                "maxResults": {
                  "type": "integer",
                  "location": "query",
                  "format": "uint32",
                  "description": "Maximum number of results to return"
                },
                "updatedMin": {
                  "type": "string",
                  "description": "RFC 3339 timestamp to restrict to items updated since this timestamp (inclusive).",
                  "location": "query"
                },
                "locale": {
                  "type": "string",
                  "location": "query",
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'."
                },
                "updatedMax": {
                  "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp (exclusive).",
                  "type": "string",
                  "location": "query"
                },
                "contentVersion": {
                  "description": "The content version for the requested volume.",
                  "type": "string",
                  "location": "query"
                }
              },
              "parameterOrder": [
                "volumeId",
                "layerId"
              ]
            },
            "get": {
              "parameters": {
                "locale": {
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'.",
                  "type": "string",
                  "location": "query"
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                },
                "annotationDataId": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "The ID of the annotation data to retrieve."
                },
                "h": {
                  "format": "int32",
                  "type": "integer",
                  "location": "query",
                  "description": "The requested pixel height for any images. If height is provided width must also be provided."
                },
                "contentVersion": {
                  "type": "string",
                  "location": "query",
                  "description": "The content version for the volume you are trying to retrieve."
                },
                "w": {
                  "format": "int32",
                  "location": "query",
                  "type": "integer",
                  "description": "The requested pixel width for any images. If width is provided height must also be provided."
                },
                "layerId": {
                  "description": "The ID for the layer to get the annotations.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "volumeId": {
                  "required": true,
                  "description": "The volume to retrieve annotations for.",
                  "type": "string",
                  "location": "path"
                },
                "allowWebDefinitions": {
                  "location": "query",
                  "description": "For the dictionary layer. Whether or not to allow web definitions.",
                  "type": "boolean"
                },
                "scale": {
                  "location": "query",
                  "format": "int32",
                  "type": "integer",
                  "description": "The requested scale for the image."
                }
              },
              "response": {
                "$ref": "DictionaryAnnotationdata"
              },
              "parameterOrder": [
                "volumeId",
                "layerId",
                "annotationDataId"
              ],
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/data/{annotationDataId}",
              "description": "Gets the annotation data.",
              "httpMethod": "GET",
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}/data/{annotationDataId}",
              "id": "books.layers.annotationData.get",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ]
            }
          }
        },
        "volumeAnnotations": {
          "methods": {
            "list": {
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}",
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "description": "The value of the nextToken from the previous page.",
                  "type": "string"
                },
                "contentVersion": {
                  "description": "The content version for the requested volume.",
                  "location": "query",
                  "type": "string"
                },
                "updatedMin": {
                  "description": "RFC 3339 timestamp to restrict to items updated since this timestamp (inclusive).",
                  "type": "string",
                  "location": "query"
                },
                "locale": {
                  "location": "query",
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'.",
                  "type": "string"
                },
                "maxResults": {
                  "format": "uint32",
                  "type": "integer",
                  "description": "Maximum number of results to return",
                  "location": "query"
                },
                "showDeleted": {
                  "location": "query",
                  "description": "Set to true to return deleted annotations. updatedMin must be in the request to use this. Defaults to false.",
                  "type": "boolean"
                },
                "layerId": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "The ID for the layer to get the annotations."
                },
                "endOffset": {
                  "description": "The end offset to end retrieving data from.",
                  "type": "string",
                  "location": "query"
                },
                "startPosition": {
                  "type": "string",
                  "location": "query",
                  "description": "The start position to start retrieving data from."
                },
                "endPosition": {
                  "type": "string",
                  "description": "The end position to end retrieving data from.",
                  "location": "query"
                },
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                },
                "volumeAnnotationsVersion": {
                  "location": "query",
                  "type": "string",
                  "description": "The version of the volume annotations that you are requesting."
                },
                "volumeId": {
                  "description": "The volume to retrieve annotations for.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "startOffset": {
                  "location": "query",
                  "description": "The start offset to start retrieving data from.",
                  "type": "string"
                },
                "updatedMax": {
                  "location": "query",
                  "type": "string",
                  "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp (exclusive)."
                }
              },
              "parameterOrder": [
                "volumeId",
                "layerId"
              ],
              "description": "Gets the volume annotations for a volume and layer.",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}",
              "response": {
                "$ref": "Volumeannotations"
              },
              "httpMethod": "GET",
              "id": "books.layers.volumeAnnotations.list"
            },
            "get": {
              "response": {
                "$ref": "Volumeannotation"
              },
              "id": "books.layers.volumeAnnotations.get",
              "httpMethod": "GET",
              "description": "Gets the volume annotation.",
              "parameterOrder": [
                "volumeId",
                "layerId",
                "annotationId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}/annotations/{annotationId}",
              "parameters": {
                "volumeId": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "The volume to retrieve annotations for."
                },
                "locale": {
                  "type": "string",
                  "location": "query",
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'."
                },
                "annotationId": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "The ID of the volume annotation to retrieve."
                },
                "layerId": {
                  "location": "path",
                  "type": "string",
                  "description": "The ID for the layer to get the annotations.",
                  "required": true
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                }
              },
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/annotations/{annotationId}"
            }
          }
        }
      },
      "methods": {
        "get": {
          "path": "books/v1/volumes/{volumeId}/layersummary/{summaryId}",
          "parameterOrder": [
            "volumeId",
            "summaryId"
          ],
          "parameters": {
            "volumeId": {
              "description": "The volume to retrieve layers for.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "source": {
              "location": "query",
              "description": "String to identify the originator of this request.",
              "type": "string"
            },
            "contentVersion": {
              "location": "query",
              "type": "string",
              "description": "The content version for the requested volume."
            },
            "summaryId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "The ID for the layer to get the summary for."
            }
          },
          "flatPath": "books/v1/volumes/{volumeId}/layersummary/{summaryId}",
          "id": "books.layers.get",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "response": {
            "$ref": "Layersummary"
          },
          "description": "Gets the layer summary for a volume.",
          "httpMethod": "GET"
        },
        "list": {
          "path": "books/v1/volumes/{volumeId}/layersummary",
          "id": "books.layers.list",
          "flatPath": "books/v1/volumes/{volumeId}/layersummary",
          "httpMethod": "GET",
          "response": {
            "$ref": "Layersummaries"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "description": "List the layer summaries for a volume.",
          "parameters": {
            "volumeId": {
              "description": "The volume to retrieve layers for.",
              "type": "string",
              "required": true,
              "location": "path"
            },
            "contentVersion": {
              "location": "query",
              "description": "The content version for the requested volume.",
              "type": "string"
            },
            "pageToken": {
              "type": "string",
              "description": "The value of the nextToken from the previous page.",
              "location": "query"
            },
            "maxResults": {
              "type": "integer",
              "description": "Maximum number of results to return",
              "location": "query",
              "format": "uint32"
            },
            "source": {
              "location": "query",
              "description": "String to identify the originator of this request.",
              "type": "string"
            }
          },
          "parameterOrder": [
            "volumeId"
          ]
        }
      }
    },
    "bookshelves": {
      "methods": {
        "get": {
          "parameters": {
            "source": {
              "type": "string",
              "location": "query",
              "description": "String to identify the originator of this request."
            },
            "shelf": {
              "type": "string",
              "description": "ID of bookshelf to retrieve.",
              "required": true,
              "location": "path"
            },
            "userId": {
              "required": true,
              "description": "ID of user for whom to retrieve bookshelves.",
              "type": "string",
              "location": "path"
            }
          },
          "flatPath": "books/v1/users/{userId}/bookshelves/{shelf}",
          "response": {
            "$ref": "Bookshelf"
          },
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "id": "books.bookshelves.get",
          "parameterOrder": [
            "userId",
            "shelf"
          ],
          "path": "books/v1/users/{userId}/bookshelves/{shelf}",
          "description": "Retrieves metadata for a specific bookshelf for the specified user."
        },
        "list": {
          "flatPath": "books/v1/users/{userId}/bookshelves",
          "parameters": {
            "userId": {
              "required": true,
              "description": "ID of user for whom to retrieve bookshelves.",
              "type": "string",
              "location": "path"
            },
            "source": {
              "description": "String to identify the originator of this request.",
              "location": "query",
              "type": "string"
            }
          },
          "path": "books/v1/users/{userId}/bookshelves",
          "parameterOrder": [
            "userId"
          ],
          "description": "Retrieves a list of public bookshelves for the specified user.",
          "id": "books.bookshelves.list",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "response": {
            "$ref": "Bookshelves"
          }
        }
      },
      "resources": {
        "volumes": {
          "methods": {
            "list": {
              "flatPath": "books/v1/users/{userId}/bookshelves/{shelf}/volumes",
              "id": "books.bookshelves.volumes.list",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "maxResults": {
                  "type": "integer",
                  "location": "query",
                  "format": "uint32",
                  "description": "Maximum number of results to return"
                },
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                },
                "userId": {
                  "description": "ID of user for whom to retrieve bookshelf volumes.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                },
                "startIndex": {
                  "format": "uint32",
                  "type": "integer",
                  "location": "query",
                  "description": "Index of the first element to return (starts at 0)"
                },
                "shelf": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "ID of bookshelf to retrieve volumes."
                },
                "showPreorders": {
                  "location": "query",
                  "type": "boolean",
                  "description": "Set to true to show pre-ordered books. Defaults to false."
                }
              },
              "response": {
                "$ref": "Volumes"
              },
              "path": "books/v1/users/{userId}/bookshelves/{shelf}/volumes",
              "httpMethod": "GET",
              "parameterOrder": [
                "userId",
                "shelf"
              ],
              "description": "Retrieves volumes in a specific bookshelf for the specified user."
            }
          }
        }
      }
    },
    "myconfig": {
      "methods": {
        "releaseDownloadAccess": {
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/myconfig/releaseDownloadAccess",
          "response": {
            "$ref": "DownloadAccesses"
          },
          "id": "books.myconfig.releaseDownloadAccess",
          "parameterOrder": [],
          "parameters": {
            "cpksver": {
              "type": "string",
              "location": "query",
              "description": "The device/version ID from which to release the restriction."
            },
            "locale": {
              "type": "string",
              "location": "query",
              "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US."
            },
            "volumeIds": {
              "description": "The volume(s) to release restrictions for.",
              "type": "string",
              "location": "query",
              "repeated": true
            },
            "source": {
              "type": "string",
              "location": "query",
              "description": "String to identify the originator of this request."
            }
          },
          "httpMethod": "POST",
          "flatPath": "books/v1/myconfig/releaseDownloadAccess",
          "description": "Release downloaded content access restriction."
        },
        "syncVolumeLicenses": {
          "httpMethod": "POST",
          "description": "Request downloaded content access for specified volumes on the My eBooks shelf.",
          "parameterOrder": [],
          "id": "books.myconfig.syncVolumeLicenses",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/myconfig/syncVolumeLicenses",
          "response": {
            "$ref": "Volumes"
          },
          "parameters": {
            "showPreorders": {
              "type": "boolean",
              "description": "Set to true to show pre-ordered books. Defaults to false.",
              "location": "query"
            },
            "locale": {
              "type": "string",
              "location": "query",
              "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US."
            },
            "source": {
              "description": "String to identify the originator of this request.",
              "type": "string",
              "location": "query"
            },
            "volumeIds": {
              "repeated": true,
              "description": "The volume(s) to request download restrictions for.",
              "location": "query",
              "type": "string"
            },
            "nonce": {
              "location": "query",
              "description": "The client nonce value.",
              "type": "string"
            },
            "includeNonComicsSeries": {
              "type": "boolean",
              "location": "query",
              "description": "Set to true to include non-comics series. Defaults to false."
            },
            "features": {
              "description": "List of features supported by the client, i.e., 'RENTALS'",
              "location": "query",
              "repeated": true,
              "type": "string",
              "enum": [
                "FEATURES_UNDEFINED",
                "RENTALS"
              ],
              "enumDescriptions": [
                "",
                "Client supports rentals."
              ]
            },
            "cpksver": {
              "description": "The device/version ID from which to release the restriction.",
              "location": "query",
              "type": "string"
            }
          },
          "path": "books/v1/myconfig/syncVolumeLicenses"
        },
        "updateUserSettings": {
          "httpMethod": "POST",
          "flatPath": "books/v1/myconfig/updateUserSettings",
          "request": {
            "$ref": "Usersettings"
          },
          "path": "books/v1/myconfig/updateUserSettings",
          "response": {
            "$ref": "Usersettings"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameters": {},
          "parameterOrder": [],
          "id": "books.myconfig.updateUserSettings",
          "description": "Sets the settings for the user. If a sub-object is specified, it will overwrite the existing sub-object stored in the server. Unspecified sub-objects will retain the existing value."
        },
        "requestAccess": {
          "path": "books/v1/myconfig/requestAccess",
          "response": {
            "$ref": "RequestAccessData"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/myconfig/requestAccess",
          "description": "Request concurrent and download access restrictions.",
          "httpMethod": "POST",
          "parameterOrder": [],
          "id": "books.myconfig.requestAccess",
          "parameters": {
            "source": {
              "location": "query",
              "type": "string",
              "description": "String to identify the originator of this request."
            },
            "cpksver": {
              "type": "string",
              "location": "query",
              "description": "The device/version ID from which to request the restrictions."
            },
            "volumeId": {
              "location": "query",
              "description": "The volume to request concurrent/download restrictions for.",
              "type": "string"
            },
            "nonce": {
              "location": "query",
              "description": "The client nonce value.",
              "type": "string"
            },
            "locale": {
              "location": "query",
              "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.",
              "type": "string"
            },
            "licenseTypes": {
              "description": "The type of access license to request. If not specified, the default is BOTH.",
              "type": "string",
              "location": "query",
              "enumDescriptions": [
                "",
                "Both concurrent and download licenses.",
                "Concurrent access license.",
                "Offline download access license."
              ],
              "enum": [
                "LICENSE_TYPES_UNDEFINED",
                "BOTH",
                "CONCURRENT",
                "DOWNLOAD"
              ]
            }
          }
        },
        "getUserSettings": {
          "response": {
            "$ref": "Usersettings"
          },
          "httpMethod": "GET",
          "id": "books.myconfig.getUserSettings",
          "parameterOrder": [],
          "path": "books/v1/myconfig/getUserSettings",
          "parameters": {
            "country": {
              "location": "query",
              "type": "string",
              "description": "Unused. Added only to workaround TEX mandatory request template requirement"
            }
          },
          "flatPath": "books/v1/myconfig/getUserSettings",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "description": "Gets the current settings for the user."
        }
      }
    },
    "familysharing": {
      "methods": {
        "unshare": {
          "httpMethod": "POST",
          "parameterOrder": [],
          "flatPath": "books/v1/familysharing/unshare",
          "description": "Initiates revoking content that has already been shared with the user's family. Empty response indicates success.",
          "response": {
            "$ref": "Empty"
          },
          "id": "books.familysharing.unshare",
          "parameters": {
            "source": {
              "location": "query",
              "description": "String to identify the originator of this request.",
              "type": "string"
            },
            "docId": {
              "location": "query",
              "type": "string",
              "description": "The docid to unshare."
            },
            "volumeId": {
              "description": "The volume to unshare.",
              "type": "string",
              "location": "query"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/familysharing/unshare"
        },
        "getFamilyInfo": {
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "description": "Gets information regarding the family that the user is part of.",
          "parameters": {
            "source": {
              "type": "string",
              "description": "String to identify the originator of this request.",
              "location": "query"
            }
          },
          "response": {
            "$ref": "FamilyInfo"
          },
          "flatPath": "books/v1/familysharing/getFamilyInfo",
          "id": "books.familysharing.getFamilyInfo",
          "parameterOrder": [],
          "path": "books/v1/familysharing/getFamilyInfo",
          "httpMethod": "GET"
        },
        "share": {
          "flatPath": "books/v1/familysharing/share",
          "httpMethod": "POST",
          "parameterOrder": [],
          "path": "books/v1/familysharing/share",
          "description": "Initiates sharing of the content with the user's family. Empty response indicates success.",
          "response": {
            "$ref": "Empty"
          },
          "parameters": {
            "source": {
              "description": "String to identify the originator of this request.",
              "type": "string",
              "location": "query"
            },
            "volumeId": {
              "description": "The volume to share.",
              "type": "string",
              "location": "query"
            },
            "docId": {
              "description": "The docid to share.",
              "location": "query",
              "type": "string"
            }
          },
          "id": "books.familysharing.share",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ]
        }
      }
    },
    "series": {
      "resources": {
        "membership": {
          "methods": {
            "get": {
              "flatPath": "books/v1/series/membership/get",
              "id": "books.series.membership.get",
              "httpMethod": "GET",
              "path": "books/v1/series/membership/get",
              "parameters": {
                "page_size": {
                  "description": "Number of maximum results per page to be included in the response.",
                  "type": "integer",
                  "format": "uint32",
                  "location": "query"
                },
                "series_id": {
                  "description": "String that identifies the series",
                  "location": "query",
                  "type": "string"
                },
                "page_token": {
                  "location": "query",
                  "description": "The value of the nextToken from the previous page.",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameterOrder": [],
              "description": "Returns Series membership data given the series id.",
              "response": {
                "$ref": "Seriesmembership"
              }
            }
          }
        }
      },
      "methods": {
        "get": {
          "description": "Returns Series metadata for the given series ids.",
          "path": "books/v1/series/get",
          "parameters": {
            "series_id": {
              "repeated": true,
              "location": "query",
              "type": "string",
              "description": "String that identifies the series"
            }
          },
          "flatPath": "books/v1/series/get",
          "response": {
            "$ref": "Series"
          },
          "id": "books.series.get",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameterOrder": [],
          "httpMethod": "GET"
        }
      }
    },
    "mylibrary": {
      "resources": {
        "annotations": {
          "methods": {
            "insert": {
              "httpMethod": "POST",
              "id": "books.mylibrary.annotations.insert",
              "flatPath": "books/v1/mylibrary/annotations",
              "request": {
                "$ref": "Annotation"
              },
              "description": "Inserts a new annotation.",
              "parameters": {
                "showOnlySummaryInResponse": {
                  "description": "Requests that only the summary of the specified layer be provided in the response.",
                  "type": "boolean",
                  "location": "query"
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                },
                "country": {
                  "location": "query",
                  "type": "string",
                  "description": "ISO-3166-1 code to override the IP-based location."
                },
                "annotationId": {
                  "type": "string",
                  "location": "query",
                  "description": "The ID for the annotation to insert."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameterOrder": [],
              "response": {
                "$ref": "Annotation"
              },
              "path": "books/v1/mylibrary/annotations"
            },
            "summary": {
              "flatPath": "books/v1/mylibrary/annotations/summary",
              "response": {
                "$ref": "AnnotationsSummary"
              },
              "parameterOrder": [],
              "httpMethod": "POST",
              "path": "books/v1/mylibrary/annotations/summary",
              "id": "books.mylibrary.annotations.summary",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "volumeId": {
                  "location": "query",
                  "type": "string",
                  "description": "Volume id to get the summary for."
                },
                "layerIds": {
                  "type": "string",
                  "repeated": true,
                  "description": "Array of layer IDs to get the summary for.",
                  "location": "query"
                }
              },
              "description": "Gets the summary of specified layers."
            },
            "delete": {
              "description": "Deletes an annotation.",
              "httpMethod": "DELETE",
              "flatPath": "books/v1/mylibrary/annotations/{annotationId}",
              "id": "books.mylibrary.annotations.delete",
              "path": "books/v1/mylibrary/annotations/{annotationId}",
              "parameterOrder": [
                "annotationId"
              ],
              "parameters": {
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                },
                "annotationId": {
                  "type": "string",
                  "description": "The ID for the annotation to delete.",
                  "required": true,
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "response": {
                "$ref": "Empty"
              }
            },
            "list": {
              "path": "books/v1/mylibrary/annotations",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "httpMethod": "GET",
              "response": {
                "$ref": "Annotations"
              },
              "parameterOrder": [],
              "description": "Retrieves a list of annotations, possibly filtered.",
              "parameters": {
                "updatedMax": {
                  "location": "query",
                  "type": "string",
                  "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp (exclusive)."
                },
                "layerIds": {
                  "location": "query",
                  "description": "The layer ID(s) to limit annotation by.",
                  "repeated": true,
                  "type": "string"
                },
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "The value of the nextToken from the previous page."
                },
                "contentVersion": {
                  "description": "The content version for the requested volume.",
                  "type": "string",
                  "location": "query"
                },
                "showDeleted": {
                  "location": "query",
                  "description": "Set to true to return deleted annotations. updatedMin must be in the request to use this. Defaults to false.",
                  "type": "boolean"
                },
                "maxResults": {
                  "format": "uint32",
                  "location": "query",
                  "type": "integer",
                  "description": "Maximum number of results to return"
                },
                "updatedMin": {
                  "type": "string",
                  "location": "query",
                  "description": "RFC 3339 timestamp to restrict to items updated since this timestamp (inclusive)."
                },
                "volumeId": {
                  "location": "query",
                  "type": "string",
                  "description": "The volume to restrict annotations to."
                },
                "layerId": {
                  "description": "The layer ID to limit annotation by.",
                  "type": "string",
                  "location": "query"
                }
              },
              "flatPath": "books/v1/mylibrary/annotations",
              "id": "books.mylibrary.annotations.list"
            },
            "update": {
              "id": "books.mylibrary.annotations.update",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "annotationId": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "The ID for the annotation to update."
                },
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                }
              },
              "description": "Updates an existing annotation.",
              "httpMethod": "PUT",
              "parameterOrder": [
                "annotationId"
              ],
              "response": {
                "$ref": "Annotation"
              },
              "path": "books/v1/mylibrary/annotations/{annotationId}",
              "request": {
                "$ref": "Annotation"
              },
              "flatPath": "books/v1/mylibrary/annotations/{annotationId}"
            }
          }
        },
        "bookshelves": {
          "resources": {
            "volumes": {
              "methods": {
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/books"
                  ],
                  "id": "books.mylibrary.bookshelves.volumes.list",
                  "parameters": {
                    "showPreorders": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Set to true to show pre-ordered books. Defaults to false."
                    },
                    "shelf": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "The bookshelf ID or name retrieve volumes for."
                    },
                    "source": {
                      "location": "query",
                      "type": "string",
                      "description": "String to identify the originator of this request."
                    },
                    "projection": {
                      "type": "string",
                      "enum": [
                        "PROJECTION_UNDEFINED",
                        "FULL",
                        "LITE"
                      ],
                      "location": "query",
                      "description": "Restrict information returned to a set of selected fields.",
                      "enumDescriptions": [
                        "",
                        "Includes all volume data.",
                        "Includes a subset of fields in volumeInfo and accessInfo."
                      ]
                    },
                    "maxResults": {
                      "location": "query",
                      "description": "Maximum number of results to return",
                      "format": "uint32",
                      "type": "integer"
                    },
                    "startIndex": {
                      "description": "Index of the first element to return (starts at 0)",
                      "format": "uint32",
                      "location": "query",
                      "type": "integer"
                    },
                    "q": {
                      "description": "Full-text search query string in this bookshelf.",
                      "location": "query",
                      "type": "string"
                    },
                    "country": {
                      "type": "string",
                      "description": "ISO-3166-1 code to override the IP-based location.",
                      "location": "query"
                    }
                  },
                  "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/volumes",
                  "description": "Gets volume information for volumes on a bookshelf.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Volumes"
                  },
                  "path": "books/v1/mylibrary/bookshelves/{shelf}/volumes",
                  "parameterOrder": [
                    "shelf"
                  ]
                }
              }
            }
          },
          "methods": {
            "list": {
              "httpMethod": "GET",
              "parameters": {
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameterOrder": [],
              "flatPath": "books/v1/mylibrary/bookshelves",
              "response": {
                "$ref": "Bookshelves"
              },
              "id": "books.mylibrary.bookshelves.list",
              "path": "books/v1/mylibrary/bookshelves",
              "description": "Retrieves a list of bookshelves belonging to the authenticated user."
            },
            "removeVolume": {
              "parameterOrder": [
                "shelf"
              ],
              "response": {
                "$ref": "Empty"
              },
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/removeVolume",
              "description": "Removes a volume from a bookshelf.",
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "volumeId": {
                  "location": "query",
                  "type": "string",
                  "description": "ID of volume to remove."
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                },
                "reason": {
                  "enum": [
                    "REASON_UNDEFINED",
                    "ONBOARDING"
                  ],
                  "location": "query",
                  "description": "The reason for which the book is removed from the library.",
                  "enumDescriptions": [
                    "",
                    "Samples removed from the Onboarding flow."
                  ],
                  "type": "string"
                },
                "shelf": {
                  "description": "ID of bookshelf from which to remove a volume.",
                  "type": "string",
                  "location": "path",
                  "required": true
                }
              },
              "path": "books/v1/mylibrary/bookshelves/{shelf}/removeVolume",
              "id": "books.mylibrary.bookshelves.removeVolume"
            },
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                },
                "shelf": {
                  "description": "ID of bookshelf to retrieve.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                }
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "shelf"
              ],
              "response": {
                "$ref": "Bookshelf"
              },
              "path": "books/v1/mylibrary/bookshelves/{shelf}",
              "id": "books.mylibrary.bookshelves.get",
              "description": "Retrieves metadata for a specific bookshelf belonging to the authenticated user.",
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}"
            },
            "clearVolumes": {
              "id": "books.mylibrary.bookshelves.clearVolumes",
              "parameterOrder": [
                "shelf"
              ],
              "path": "books/v1/mylibrary/bookshelves/{shelf}/clearVolumes",
              "description": "Clears all volumes from a bookshelf.",
              "parameters": {
                "shelf": {
                  "location": "path",
                  "description": "ID of bookshelf from which to remove a volume.",
                  "type": "string",
                  "required": true
                },
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                }
              },
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/clearVolumes",
              "httpMethod": "POST",
              "response": {
                "$ref": "Empty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ]
            },
            "moveVolume": {
              "path": "books/v1/mylibrary/bookshelves/{shelf}/moveVolume",
              "id": "books.mylibrary.bookshelves.moveVolume",
              "response": {
                "$ref": "Empty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "shelf": {
                  "type": "string",
                  "required": true,
                  "description": "ID of bookshelf with the volume.",
                  "location": "path"
                },
                "source": {
                  "location": "query",
                  "type": "string",
                  "description": "String to identify the originator of this request."
                },
                "volumeId": {
                  "type": "string",
                  "location": "query",
                  "description": "ID of volume to move."
                },
                "volumePosition": {
                  "location": "query",
                  "type": "integer",
                  "description": "Position on shelf to move the item (0 puts the item before the current first item, 1 puts it between the first and the second and so on.)",
                  "format": "int32"
                }
              },
              "httpMethod": "POST",
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/moveVolume",
              "parameterOrder": [
                "shelf"
              ],
              "description": "Moves a volume within a bookshelf."
            },
            "addVolume": {
              "parameterOrder": [
                "shelf"
              ],
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/addVolume",
              "description": "Adds a volume to a bookshelf.",
              "httpMethod": "POST",
              "parameters": {
                "shelf": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "ID of bookshelf to which to add a volume."
                },
                "volumeId": {
                  "type": "string",
                  "location": "query",
                  "description": "ID of volume to add."
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                },
                "reason": {
                  "enum": [
                    "REASON_UNDEFINED",
                    "IOS_PREX",
                    "IOS_SEARCH",
                    "ONBOARDING"
                  ],
                  "type": "string",
                  "description": "The reason for which the book is added to the library.",
                  "enumDescriptions": [
                    "",
                    "Volumes added from the PREX flow on iOS.",
                    "Volumes added from the Search flow on iOS.",
                    "Volumes added from the Onboarding flow."
                  ],
                  "location": "query"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "id": "books.mylibrary.bookshelves.addVolume",
              "response": {
                "$ref": "Empty"
              },
              "path": "books/v1/mylibrary/bookshelves/{shelf}/addVolume"
            }
          }
        },
        "readingpositions": {
          "methods": {
            "get": {
              "httpMethod": "GET",
              "parameterOrder": [
                "volumeId"
              ],
              "parameters": {
                "volumeId": {
                  "location": "path",
                  "description": "ID of volume for which to retrieve a reading position.",
                  "type": "string",
                  "required": true
                },
                "contentVersion": {
                  "description": "Volume content version for which this reading position is requested.",
                  "type": "string",
                  "location": "query"
                },
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                }
              },
              "path": "books/v1/mylibrary/readingpositions/{volumeId}",
              "id": "books.mylibrary.readingpositions.get",
              "response": {
                "$ref": "ReadingPosition"
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "flatPath": "books/v1/mylibrary/readingpositions/{volumeId}",
              "description": "Retrieves my reading position information for a volume."
            },
            "setPosition": {
              "parameterOrder": [
                "volumeId"
              ],
              "httpMethod": "POST",
              "description": "Sets my reading position information for a volume.",
              "path": "books/v1/mylibrary/readingpositions/{volumeId}/setPosition",
              "response": {
                "$ref": "Empty"
              },
              "parameters": {
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                },
                "action": {
                  "enumDescriptions": [
                    "",
                    "User chose bookmark within volume.",
                    "User selected chapter from list.",
                    "Next page event.",
                    "Previous page event.",
                    "User navigated to page.",
                    "User chose search results within volume."
                  ],
                  "description": "Action that caused this reading position to be set.",
                  "location": "query",
                  "type": "string",
                  "enum": [
                    "ACTION_UNDEFINED",
                    "bookmark",
                    "chapter",
                    "next-page",
                    "prev-page",
                    "scroll",
                    "search"
                  ]
                },
                "volumeId": {
                  "location": "path",
                  "required": true,
                  "description": "ID of volume for which to update the reading position.",
                  "type": "string"
                },
                "contentVersion": {
                  "description": "Volume content version for which this reading position applies.",
                  "type": "string",
                  "location": "query"
                },
                "deviceCookie": {
                  "description": "Random persistent device cookie optional on set position.",
                  "location": "query",
                  "type": "string"
                },
                "position": {
                  "type": "string",
                  "description": "Position string for the new volume reading position.",
                  "location": "query"
                },
                "timestamp": {
                  "description": "RFC 3339 UTC format timestamp associated with this reading position.",
                  "type": "string",
                  "location": "query"
                }
              },
              "id": "books.mylibrary.readingpositions.setPosition",
              "flatPath": "books/v1/mylibrary/readingpositions/{volumeId}/setPosition",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ]
            }
          }
        }
      }
    },
    "onboarding": {
      "methods": {
        "listCategoryVolumes": {
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/onboarding/listCategoryVolumes",
          "httpMethod": "GET",
          "id": "books.onboarding.listCategoryVolumes",
          "parameterOrder": [],
          "parameters": {
            "maxAllowedMaturityRating": {
              "enum": [
                "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                "MATURE",
                "not-mature"
              ],
              "description": "The maximum allowed maturity rating of returned volumes. Books with a higher maturity rating are filtered out.",
              "type": "string",
              "location": "query",
              "enumDescriptions": [
                "",
                "Show books which are rated mature or lower.",
                "Show books which are rated not mature."
              ]
            },
            "pageSize": {
              "description": "Number of maximum results per page to be included in the response.",
              "format": "uint32",
              "type": "integer",
              "location": "query"
            },
            "categoryId": {
              "location": "query",
              "type": "string",
              "repeated": true,
              "description": "List of category ids requested."
            },
            "locale": {
              "location": "query",
              "description": "ISO-639-1 language and ISO-3166-1 country code. Default is en-US if unset.",
              "type": "string"
            },
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "The value of the nextToken from the previous page."
            }
          },
          "response": {
            "$ref": "Volume2"
          },
          "flatPath": "books/v1/onboarding/listCategoryVolumes",
          "description": "List available volumes under categories for onboarding experience."
        },
        "listCategories": {
          "parameters": {
            "locale": {
              "description": "ISO-639-1 language and ISO-3166-1 country code. Default is en-US if unset.",
              "type": "string",
              "location": "query"
            }
          },
          "flatPath": "books/v1/onboarding/listCategories",
          "httpMethod": "GET",
          "path": "books/v1/onboarding/listCategories",
          "description": "List categories for onboarding experience.",
          "parameterOrder": [],
          "response": {
            "$ref": "Category"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "id": "books.onboarding.listCategories"
        }
      }
    },
    "personalizedstream": {
      "methods": {
        "get": {
          "path": "books/v1/personalizedstream/get",
          "flatPath": "books/v1/personalizedstream/get",
          "parameters": {
            "maxAllowedMaturityRating": {
              "enum": [
                "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                "MATURE",
                "not-mature"
              ],
              "location": "query",
              "description": "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.",
              "enumDescriptions": [
                "",
                "Show books which are rated mature or lower.",
                "Show books which are rated not mature."
              ],
              "type": "string"
            },
            "source": {
              "location": "query",
              "description": "String to identify the originator of this request.",
              "type": "string"
            },
            "locale": {
              "location": "query",
              "type": "string",
              "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations."
            }
          },
          "id": "books.personalizedstream.get",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameterOrder": [],
          "httpMethod": "GET",
          "response": {
            "$ref": "Discoveryclusters"
          },
          "description": "Returns a stream of personalized book clusters"
        }
      }
    },
    "notification": {
      "methods": {
        "get": {
          "id": "books.notification.get",
          "description": "Returns notification details for a given notification id.",
          "flatPath": "books/v1/notification/get",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "response": {
            "$ref": "Notification"
          },
          "parameters": {
            "locale": {
              "type": "string",
              "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating notification title and body.",
              "location": "query"
            },
            "source": {
              "description": "String to identify the originator of this request.",
              "type": "string",
              "location": "query"
            },
            "notification_id": {
              "location": "query",
              "description": "String to identify the notification.",
              "type": "string"
            }
          },
          "parameterOrder": [],
          "httpMethod": "GET",
          "path": "books/v1/notification/get"
        }
      }
    },
    "volumes": {
      "resources": {
        "associated": {
          "methods": {
            "list": {
              "httpMethod": "GET",
              "flatPath": "books/v1/volumes/{volumeId}/associated",
              "parameterOrder": [
                "volumeId"
              ],
              "response": {
                "$ref": "Volumes"
              },
              "id": "books.volumes.associated.list",
              "path": "books/v1/volumes/{volumeId}/associated",
              "parameters": {
                "maxAllowedMaturityRating": {
                  "description": "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.",
                  "enumDescriptions": [
                    "",
                    "Show books which are rated mature or lower.",
                    "Show books which are rated not mature."
                  ],
                  "enum": [
                    "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                    "MATURE",
                    "not-mature"
                  ],
                  "location": "query",
                  "type": "string"
                },
                "association": {
                  "enumDescriptions": [
                    "",
                    "Recommendations for display end-of-sample.",
                    "Recommendations for display end-of-volume.",
                    "Related volumes for Play Store."
                  ],
                  "description": "Association type.",
                  "enum": [
                    "ASSOCIATION_UNDEFINED",
                    "end-of-sample",
                    "end-of-volume",
                    "related-for-play"
                  ],
                  "location": "query",
                  "type": "string"
                },
                "locale": {
                  "type": "string",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations.",
                  "location": "query"
                },
                "volumeId": {
                  "type": "string",
                  "description": "ID of the source volume.",
                  "location": "path",
                  "required": true
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "description": "Return a list of associated books."
            }
          }
        },
        "mybooks": {
          "methods": {
            "list": {
              "response": {
                "$ref": "Volumes"
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "flatPath": "books/v1/volumes/mybooks",
              "httpMethod": "GET",
              "path": "books/v1/volumes/mybooks",
              "description": "Return a list of books in My Library.",
              "id": "books.volumes.mybooks.list",
              "parameters": {
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                },
                "startIndex": {
                  "description": "Index of the first result to return (starts at 0)",
                  "type": "integer",
                  "location": "query",
                  "format": "uint32"
                },
                "acquireMethod": {
                  "description": "How the book was acquired",
                  "enum": [
                    "ACQUIRE_METHOD_UNDEFINED",
                    "FAMILY_SHARED",
                    "PREORDERED",
                    "PREVIOUSLY_RENTED",
                    "PUBLIC_DOMAIN",
                    "PURCHASED",
                    "RENTED",
                    "SAMPLE",
                    "UPLOADED"
                  ],
                  "type": "string",
                  "location": "query",
                  "enumDescriptions": [
                    "",
                    "Books acquired via Family Sharing",
                    "Preordered books (not yet available)",
                    "User-rented books past their expiration time",
                    "Public domain books",
                    "Purchased books",
                    "User-rented books",
                    "Sample books",
                    "User uploaded books"
                  ],
                  "repeated": true
                },
                "maxResults": {
                  "type": "integer",
                  "location": "query",
                  "format": "uint32",
                  "description": "Maximum number of results to return."
                },
                "locale": {
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex:'en_US'. Used for generating recommendations.",
                  "type": "string",
                  "location": "query"
                },
                "country": {
                  "type": "string",
                  "description": "ISO-3166-1 code to override the IP-based location.",
                  "location": "query"
                },
                "processingState": {
                  "repeated": true,
                  "description": "The processing state of the user uploaded volumes to be returned. Applicable only if the UPLOADED is specified in the acquireMethod.",
                  "type": "string",
                  "location": "query",
                  "enumDescriptions": [
                    "",
                    "The volume processing hase failed.",
                    "The volume processing was completed.",
                    "The volume processing is not completed."
                  ],
                  "enum": [
                    "PROCESSING_STATE_UNDEFINED",
                    "COMPLETED_FAILED",
                    "COMPLETED_SUCCESS",
                    "RUNNING"
                  ]
                }
              },
              "parameterOrder": []
            }
          }
        },
        "recommended": {
          "methods": {
            "list": {
              "response": {
                "$ref": "Volumes"
              },
              "id": "books.volumes.recommended.list",
              "parameterOrder": [],
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "description": "Return a list of recommended books for the current user.",
              "path": "books/v1/volumes/recommended",
              "flatPath": "books/v1/volumes/recommended",
              "httpMethod": "GET",
              "parameters": {
                "locale": {
                  "type": "string",
                  "location": "query",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations."
                },
                "maxAllowedMaturityRating": {
                  "enum": [
                    "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                    "MATURE",
                    "not-mature"
                  ],
                  "description": "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.",
                  "type": "string",
                  "location": "query",
                  "enumDescriptions": [
                    "",
                    "Show books which are rated mature or lower.",
                    "Show books which are rated not mature."
                  ]
                },
                "source": {
                  "location": "query",
                  "type": "string",
                  "description": "String to identify the originator of this request."
                }
              }
            },
            "rate": {
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameterOrder": [],
              "flatPath": "books/v1/volumes/recommended/rate",
              "path": "books/v1/volumes/recommended/rate",
              "description": "Rate a recommended book for the current user.",
              "parameters": {
                "locale": {
                  "type": "string",
                  "location": "query",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations."
                },
                "rating": {
                  "location": "query",
                  "enumDescriptions": [
                    "",
                    "Rating indicating a dismissal due to ownership.",
                    "Rating indicating a negative dismissal of a volume."
                  ],
                  "enum": [
                    "RATING_UNDEFINED",
                    "HAVE_IT",
                    "NOT_INTERESTED"
                  ],
                  "description": "Rating to be given to the volume.",
                  "type": "string"
                },
                "volumeId": {
                  "type": "string",
                  "location": "query",
                  "description": "ID of the source volume."
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "BooksVolumesRecommendedRateResponse"
              },
              "httpMethod": "POST",
              "id": "books.volumes.recommended.rate"
            }
          }
        },
        "useruploaded": {
          "methods": {
            "list": {
              "description": "Return a list of books uploaded by the current user.",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "response": {
                "$ref": "Volumes"
              },
              "parameters": {
                "locale": {
                  "location": "query",
                  "type": "string",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations."
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                },
                "volumeId": {
                  "repeated": true,
                  "type": "string",
                  "description": "The ids of the volumes to be returned. If not specified all that match the processingState are returned.",
                  "location": "query"
                },
                "processingState": {
                  "repeated": true,
                  "enumDescriptions": [
                    "",
                    "The volume processing hase failed.",
                    "The volume processing was completed.",
                    "The volume processing is not completed."
                  ],
                  "location": "query",
                  "type": "string",
                  "description": "The processing state of the user uploaded volumes to be returned.",
                  "enum": [
                    "PROCESSING_STATE_UNDEFINED",
                    "COMPLETED_FAILED",
                    "COMPLETED_SUCCESS",
                    "RUNNING"
                  ]
                },
                "maxResults": {
                  "location": "query",
                  "description": "Maximum number of results to return.",
                  "type": "integer",
                  "format": "uint32"
                },
                "startIndex": {
                  "type": "integer",
                  "location": "query",
                  "format": "uint32",
                  "description": "Index of the first result to return (starts at 0)"
                }
              },
              "httpMethod": "GET",
              "flatPath": "books/v1/volumes/useruploaded",
              "path": "books/v1/volumes/useruploaded",
              "parameterOrder": [],
              "id": "books.volumes.useruploaded.list"
            }
          }
        }
      },
      "methods": {
        "list": {
          "description": "Performs a book search.",
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/volumes",
          "flatPath": "books/v1/volumes",
          "id": "books.volumes.list",
          "response": {
            "$ref": "Volumes"
          },
          "parameters": {
            "projection": {
              "enumDescriptions": [
                "",
                "Includes all volume data.",
                "Includes a subset of fields in volumeInfo and accessInfo."
              ],
              "enum": [
                "PROJECTION_UNDEFINED",
                "FULL",
                "LITE"
              ],
              "type": "string",
              "description": "Restrict information returned to a set of selected fields.",
              "location": "query"
            },
            "source": {
              "type": "string",
              "description": "String to identify the originator of this request.",
              "location": "query"
            },
            "download": {
              "description": "Restrict to volumes by download availability.",
              "type": "string",
              "enumDescriptions": [
                "",
                "All volumes with epub."
              ],
              "location": "query",
              "enum": [
                "DOWNLOAD_UNDEFINED",
                "EPUB"
              ]
            },
            "langRestrict": {
              "description": "Restrict results to books with this language code.",
              "type": "string",
              "location": "query"
            },
            "printType": {
              "location": "query",
              "enumDescriptions": [
                "",
                "All volume content types.",
                "Just books.",
                "Just magazines."
              ],
              "enum": [
                "PRINT_TYPE_UNDEFINED",
                "ALL",
                "BOOKS",
                "MAGAZINES"
              ],
              "description": "Restrict to books or magazines.",
              "type": "string"
            },
            "showPreorders": {
              "description": "Set to true to show books available for preorder. Defaults to false.",
              "location": "query",
              "type": "boolean"
            },
            "q": {
              "description": "Full-text search query string.",
              "type": "string",
              "location": "query"
            },
            "libraryRestrict": {
              "description": "Restrict search to this user's library.",
              "location": "query",
              "type": "string",
              "enumDescriptions": [
                "",
                "Restrict to the user's library, any shelf.",
                "Do not restrict based on user's library."
              ],
              "enum": [
                "LIBRARY_RESTRICT_UNDEFINED",
                "my-library",
                "no-restrict"
              ]
            },
            "partner": {
              "description": "Restrict and brand results for partner ID.",
              "type": "string",
              "location": "query"
            },
            "orderBy": {
              "description": "Sort search results.",
              "location": "query",
              "type": "string",
              "enum": [
                "ORDER_BY_UNDEFINED",
                "newest",
                "relevance"
              ],
              "enumDescriptions": [
                "",
                "Most recently published.",
                "Relevance to search terms."
              ]
            },
            "maxAllowedMaturityRating": {
              "enum": [
                "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                "MATURE",
                "not-mature"
              ],
              "enumDescriptions": [
                "",
                "Show books which are rated mature or lower.",
                "Show books which are rated not mature."
              ],
              "type": "string",
              "location": "query",
              "description": "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out."
            },
            "maxResults": {
              "format": "uint32",
              "type": "integer",
              "description": "Maximum number of results to return.",
              "location": "query"
            },
            "filter": {
              "enumDescriptions": [
                "",
                "All Google eBooks.",
                "Google eBook with full volume text viewability.",
                "Public can view entire volume text.",
                "Google eBook with a price.",
                "Public able to see parts of text."
              ],
              "type": "string",
              "description": "Filter search results.",
              "enum": [
                "FILTER_UNDEFINED",
                "ebooks",
                "free-ebooks",
                "full",
                "paid-ebooks",
                "partial"
              ],
              "location": "query"
            },
            "startIndex": {
              "type": "integer",
              "description": "Index of the first result to return (starts at 0)",
              "location": "query",
              "format": "uint32"
            }
          },
          "httpMethod": "GET"
        },
        "get": {
          "description": "Gets volume information for a single volume.",
          "id": "books.volumes.get",
          "response": {
            "$ref": "Volume"
          },
          "parameters": {
            "partner": {
              "description": "Brand results for partner ID.",
              "location": "query",
              "type": "string"
            },
            "country": {
              "location": "query",
              "type": "string",
              "description": "ISO-3166-1 code to override the IP-based location."
            },
            "projection": {
              "location": "query",
              "enumDescriptions": [
                "",
                "Includes all volume data.",
                "Includes a subset of fields in volumeInfo and accessInfo."
              ],
              "enum": [
                "PROJECTION_UNDEFINED",
                "FULL",
                "LITE"
              ],
              "type": "string",
              "description": "Restrict information returned to a set of selected fields."
            },
            "source": {
              "location": "query",
              "type": "string",
              "description": "string to identify the originator of this request."
            },
            "user_library_consistent_read": {
              "type": "boolean",
              "location": "query"
            },
            "includeNonComicsSeries": {
              "description": "Set to true to include non-comics series. Defaults to false.",
              "type": "boolean",
              "location": "query"
            },
            "volumeId": {
              "description": "ID of volume to retrieve.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "volumeId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/volumes/{volumeId}",
          "flatPath": "books/v1/volumes/{volumeId}",
          "httpMethod": "GET"
        }
      }
    }
  },
  "kind": "discovery#restDescription",
  "parameters": {
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "default": "json",
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "location": "query"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "type": "string",
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    }
  },
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "rootUrl": "https://books.googleapis.com/",
  "mtlsRootUrl": "https://books.mtls.googleapis.com/",
  "servicePath": "",
  "batchPath": "batch",
  "schemas": {
    "Volumes": {
      "type": "object",
      "properties": {
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "totalItems": {
          "type": "integer",
          "description": "Total number of volumes found. This might be greater than the number of volumes returned in this response if results have been paginated.",
          "format": "int32"
        },
        "items": {
          "items": {
            "$ref": "Volume"
          },
          "description": "A list of volumes.",
          "type": "array"
        }
      },
      "id": "Volumes"
    },
    "FamilyInfo": {
      "id": "FamilyInfo",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "membership": {
          "properties": {
            "isInFamily": {
              "type": "boolean"
            },
            "acquirePermission": {
              "description": "Restrictions on user buying and acquiring content.",
              "type": "string"
            },
            "ageGroup": {
              "type": "string",
              "description": "The age group of the user."
            },
            "allowedMaturityRating": {
              "type": "string",
              "description": "The maximum allowed maturity rating for the user."
            },
            "role": {
              "description": "The role of the user in the family.",
              "type": "string"
            }
          },
          "type": "object",
          "description": "Family membership info of the user that made the request."
        }
      }
    },
    "Volume2": {
      "type": "object",
      "id": "Volume2",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "items": {
          "items": {
            "$ref": "Volume"
          },
          "description": "A list of volumes.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string"
        }
      }
    },
    "BooksCloudloadingResource": {
      "id": "BooksCloudloadingResource",
      "type": "object",
      "properties": {
        "volumeId": {
          "type": "string"
        },
        "author": {
          "type": "string"
        },
        "processingState": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "Usersettings": {
      "type": "object",
      "id": "Usersettings",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "notesExport": {
          "description": "User settings in sub-objects, each for different purposes.",
          "type": "object",
          "properties": {
            "isEnabled": {
              "type": "boolean"
            },
            "folderName": {
              "type": "string"
            }
          }
        },
        "notification": {
          "properties": {
            "priceDrop": {
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "moreFromAuthors": {
              "type": "object",
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              }
            },
            "moreFromSeries": {
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "rewardExpirations": {
              "type": "object",
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              }
            },
            "matchMyInterests": {
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      }
    },
    "Geolayerdata": {
      "type": "object",
      "id": "Geolayerdata",
      "properties": {
        "common": {
          "type": "object",
          "properties": {
            "previewImageUrl": {
              "type": "string",
              "description": "The URL for the preview image information."
            },
            "snippetUrl": {
              "description": "The URL for information for this location. Ex: wikipedia link.",
              "type": "string"
            },
            "snippet": {
              "description": "The description for this location.",
              "type": "string"
            },
            "title": {
              "type": "string",
              "description": "The display title and localized canonical name to use when searching for this entity on Google search."
            },
            "lang": {
              "description": "The language of the information url and description.",
              "type": "string"
            }
          }
        },
        "kind": {
          "type": "string"
        },
        "geo": {
          "properties": {
            "viewport": {
              "type": "object",
              "properties": {
                "lo": {
                  "type": "object",
                  "properties": {
                    "longitude": {
                      "type": "number",
                      "format": "double"
                    },
                    "latitude": {
                      "format": "double",
                      "type": "number"
                    }
                  }
                },
                "hi": {
                  "type": "object",
                  "properties": {
                    "latitude": {
                      "type": "number",
                      "format": "double"
                    },
                    "longitude": {
                      "type": "number",
                      "format": "double"
                    }
                  }
                }
              },
              "description": "The viewport for showing this location. This is a latitude, longitude rectangle."
            },
            "countryCode": {
              "description": "The country code of the location.",
              "type": "string"
            },
            "boundary": {
              "description": "The boundary of the location as a set of loops containing pairs of latitude, longitude coordinates.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "latitude": {
              "description": "The latitude of the location.",
              "format": "double",
              "type": "number"
            },
            "cachePolicy": {
              "type": "string",
              "description": "The cache policy active for this data. EX: UNRESTRICTED, RESTRICTED, NEVER"
            },
            "zoom": {
              "format": "int32",
              "description": "The Zoom level to use for the map. Zoom levels between 0 (the lowest zoom level, in which the entire world can be seen on one map) to 21+ (down to individual buildings). See: https: //developers.google.com/maps/documentation/staticmaps/#Zoomlevels",
              "type": "integer"
            },
            "mapType": {
              "type": "string",
              "description": "The type of map that should be used for this location. EX: HYBRID, ROADMAP, SATELLITE, TERRAIN"
            },
            "longitude": {
              "description": "The longitude of the location.",
              "format": "double",
              "type": "number"
            }
          },
          "type": "object"
        }
      }
    },
    "ConcurrentAccessRestriction": {
      "id": "ConcurrentAccessRestriction",
      "type": "object",
      "properties": {
        "deviceAllowed": {
          "type": "boolean",
          "description": "Whether access is granted for this (user, device, volume)."
        },
        "restricted": {
          "description": "Whether this volume has any concurrent access restrictions.",
          "type": "boolean"
        },
        "volumeId": {
          "type": "string",
          "description": "Identifies the volume for which this entry applies."
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "timeWindowSeconds": {
          "description": "Time in seconds for license auto-expiration.",
          "format": "int32",
          "type": "integer"
        },
        "signature": {
          "description": "Response signature.",
          "type": "string"
        },
        "message": {
          "type": "string",
          "description": "Error/warning message."
        },
        "nonce": {
          "type": "string",
          "description": "Client nonce for verification. Download access and client-validation only."
        },
        "reasonCode": {
          "description": "Error/warning reason code.",
          "type": "string"
        },
        "source": {
          "description": "Client app identifier for verification. Download access and client-validation only.",
          "type": "string"
        },
        "maxConcurrentDevices": {
          "description": "The maximum number of concurrent access licenses for this volume.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Volume": {
      "id": "Volume",
      "properties": {
        "kind": {
          "description": "Resource type for a volume. (In LITE projection.)",
          "type": "string"
        },
        "recommendedInfo": {
          "properties": {
            "explanation": {
              "description": "A text explaining why this volume is recommended.",
              "type": "string"
            }
          },
          "description": "Recommendation related information for this volume.",
          "type": "object"
        },
        "layerInfo": {
          "properties": {
            "layers": {
              "items": {
                "properties": {
                  "volumeAnnotationsVersion": {
                    "description": "The current version of this layer's volume annotations. Note that this version applies only to the data in the books.layers.volumeAnnotations.* responses. The actual annotation data is versioned separately.",
                    "type": "string"
                  },
                  "layerId": {
                    "type": "string",
                    "description": "The layer id of this layer (e.g. \"geo\")."
                  }
                },
                "type": "object"
              },
              "type": "array",
              "description": "A layer should appear here if and only if the layer exists for this book."
            }
          },
          "type": "object",
          "description": "What layers exist in this volume and high level information about them."
        },
        "accessInfo": {
          "description": "Any information about a volume related to reading or obtaining that volume text. This information can depend on country (books may be public domain in one country but not in another, e.g.).",
          "properties": {
            "quoteSharingAllowed": {
              "type": "boolean",
              "description": "Whether quote sharing is allowed for this volume."
            },
            "driveImportedContentLink": {
              "description": "URL to the Google Drive viewer if this volume is uploaded by the user by selecting the file from Google Drive.",
              "type": "string"
            },
            "embeddable": {
              "description": "Whether this volume can be embedded in a viewport using the Embedded Viewer API.",
              "type": "boolean"
            },
            "publicDomain": {
              "type": "boolean",
              "description": "Whether or not this book is public domain in the country listed above."
            },
            "textToSpeechPermission": {
              "type": "string",
              "description": "Whether text-to-speech is permitted for this volume. Values can be ALLOWED, ALLOWED_FOR_ACCESSIBILITY, or NOT_ALLOWED."
            },
            "viewability": {
              "description": "The read access of a volume. Possible values are PARTIAL, ALL_PAGES, NO_PAGES or UNKNOWN. This value depends on the country listed above. A value of PARTIAL means that the publisher has allowed some portion of the volume to be viewed publicly, without purchase. This can apply to eBooks as well as non-eBooks. Public domain books will always have a value of ALL_PAGES.",
              "type": "string"
            },
            "accessViewStatus": {
              "type": "string",
              "description": "Combines the access and viewability of this volume into a single status field for this user. Values can be FULL_PURCHASED, FULL_PUBLIC_DOMAIN, SAMPLE or NONE. (In LITE projection.)"
            },
            "webReaderLink": {
              "description": "URL to read this volume on the Google Books site. Link will not allow users to read non-viewable volumes.",
              "type": "string"
            },
            "viewOrderUrl": {
              "description": "For ordered but not yet processed orders, we give a URL that can be used to go to the appropriate Google Wallet page.",
              "type": "string"
            },
            "pdf": {
              "type": "object",
              "description": "Information about pdf content. (In LITE projection.)",
              "properties": {
                "isAvailable": {
                  "type": "boolean",
                  "description": "Is a scanned image pdf available either as public domain or for purchase. (In LITE projection.)"
                },
                "downloadLink": {
                  "description": "URL to download pdf. (In LITE projection.)",
                  "type": "string"
                },
                "acsTokenLink": {
                  "type": "string",
                  "description": "URL to retrieve ACS token for pdf download. (In LITE projection.)"
                }
              }
            },
            "country": {
              "description": "The two-letter ISO_3166-1 country code for which this access information is valid. (In LITE projection.)",
              "type": "string"
            },
            "explicitOfflineLicenseManagement": {
              "description": "Whether this volume requires that the client explicitly request offline download license rather than have it done automatically when loading the content, if the client supports it.",
              "type": "boolean"
            },
            "epub": {
              "description": "Information about epub content. (In LITE projection.)",
              "type": "object",
              "properties": {
                "isAvailable": {
                  "description": "Is a flowing text epub available either as public domain or for purchase. (In LITE projection.)",
                  "type": "boolean"
                },
                "downloadLink": {
                  "type": "string",
                  "description": "URL to download epub. (In LITE projection.)"
                },
                "acsTokenLink": {
                  "type": "string",
                  "description": "URL to retrieve ACS token for epub download. (In LITE projection.)"
                }
              }
            },
            "downloadAccess": {
              "description": "Information about a volume's download license access restrictions.",
              "$ref": "DownloadAccessRestriction"
            }
          },
          "type": "object"
        },
        "etag": {
          "type": "string",
          "description": "Opaque identifier for a specific version of a volume resource. (In LITE projection)"
        },
        "saleInfo": {
          "description": "Any information about a volume related to the eBookstore and/or purchaseability. This information can depend on the country where the request originates from (i.e. books may not be for sale in certain countries).",
          "type": "object",
          "properties": {
            "onSaleDate": {
              "type": "string",
              "description": "The date on which this book is available for sale."
            },
            "listPrice": {
              "properties": {
                "currencyCode": {
                  "description": "An ISO 4217, three-letter currency code. (In LITE projection.)",
                  "type": "string"
                },
                "amount": {
                  "type": "number",
                  "format": "double",
                  "description": "Amount in the currency listed below. (In LITE projection.)"
                }
              },
              "description": "Suggested retail price. (In LITE projection.)",
              "type": "object"
            },
            "offers": {
              "description": "Offers available for this volume (sales and rentals).",
              "items": {
                "properties": {
                  "rentalDuration": {
                    "properties": {
                      "unit": {
                        "type": "string"
                      },
                      "count": {
                        "type": "number",
                        "format": "double"
                      }
                    },
                    "description": "The rental duration (for rental offers only).",
                    "type": "object"
                  },
                  "retailPrice": {
                    "properties": {
                      "currencyCode": {
                        "type": "string"
                      },
                      "amountInMicros": {
                        "format": "double",
                        "type": "number"
                      }
                    },
                    "type": "object",
                    "description": "Offer retail (=discounted) price in Micros"
                  },
                  "giftable": {
                    "type": "boolean",
                    "description": "Indicates whether the offer is giftable."
                  },
                  "listPrice": {
                    "properties": {
                      "currencyCode": {
                        "type": "string"
                      },
                      "amountInMicros": {
                        "type": "number",
                        "format": "double"
                      }
                    },
                    "description": "Offer list (=undiscounted) price in Micros.",
                    "type": "object"
                  },
                  "finskyOfferType": {
                    "format": "int32",
                    "type": "integer",
                    "description": "The finsky offer type (e.g., PURCHASE=0 RENTAL=3)"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "retailPrice": {
              "type": "object",
              "properties": {
                "currencyCode": {
                  "type": "string",
                  "description": "An ISO 4217, three-letter currency code. (In LITE projection.)"
                },
                "amount": {
                  "type": "number",
                  "description": "Amount in the currency listed below. (In LITE projection.)",
                  "format": "double"
                }
              },
              "description": "The actual selling price of the book. This is the same as the suggested retail or list price unless there are offers or discounts on this volume. (In LITE projection.)"
            },
            "buyLink": {
              "type": "string",
              "description": "URL to purchase this volume on the Google Books site. (In LITE projection)"
            },
            "country": {
              "description": "The two-letter ISO_3166-1 country code for which this sale information is valid. (In LITE projection.)",
              "type": "string"
            },
            "saleability": {
              "type": "string",
              "description": "Whether or not this book is available for sale or offered for free in the Google eBookstore for the country listed above. Possible values are FOR_SALE, FOR_RENTAL_ONLY, FOR_SALE_AND_RENTAL, FREE, NOT_FOR_SALE, or FOR_PREORDER."
            },
            "isEbook": {
              "type": "boolean",
              "description": "Whether or not this volume is an eBook (can be added to the My eBooks shelf)."
            }
          }
        },
        "id": {
          "type": "string",
          "description": "Unique identifier for a volume. (In LITE projection.)"
        },
        "searchInfo": {
          "description": "Search result information related to this volume.",
          "properties": {
            "textSnippet": {
              "description": "A text snippet containing the search query.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "volumeInfo": {
          "description": "General volume information.",
          "properties": {
            "contentVersion": {
              "description": "An identifier for the version of the volume content (text & images). (In LITE projection)",
              "type": "string"
            },
            "infoLink": {
              "type": "string",
              "description": "URL to view information about this volume on the Google Books site. (In LITE projection)"
            },
            "averageRating": {
              "description": "The mean review rating for this volume. (min = 1.0, max = 5.0)",
              "format": "double",
              "type": "number"
            },
            "mainCategory": {
              "type": "string",
              "description": "The main category to which this volume belongs. It will be the category from the categories list returned below that has the highest weight."
            },
            "imageLinks": {
              "description": "A list of image links for all the sizes that are available. (In LITE projection.)",
              "type": "object",
              "properties": {
                "medium": {
                  "description": "Image link for medium size (width of ~575 pixels). (In LITE projection)",
                  "type": "string"
                },
                "small": {
                  "type": "string",
                  "description": "Image link for small size (width of ~300 pixels). (In LITE projection)"
                },
                "extraLarge": {
                  "type": "string",
                  "description": "Image link for extra large size (width of ~1280 pixels). (In LITE projection)"
                },
                "thumbnail": {
                  "description": "Image link for thumbnail size (width of ~128 pixels). (In LITE projection)",
                  "type": "string"
                },
                "smallThumbnail": {
                  "type": "string",
                  "description": "Image link for small thumbnail size (width of ~80 pixels). (In LITE projection)"
                },
                "large": {
                  "description": "Image link for large size (width of ~800 pixels). (In LITE projection)",
                  "type": "string"
                }
              }
            },
            "title": {
              "type": "string",
              "description": "Volume title. (In LITE projection.)"
            },
            "panelizationSummary": {
              "type": "object",
              "description": "A top-level summary of the panelization info in this volume.",
              "properties": {
                "containsEpubBubbles": {
                  "type": "boolean"
                },
                "epubBubbleVersion": {
                  "type": "string"
                },
                "imageBubbleVersion": {
                  "type": "string"
                },
                "containsImageBubbles": {
                  "type": "boolean"
                }
              }
            },
            "authors": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "The names of the authors and/or editors for this volume. (In LITE projection)"
            },
            "industryIdentifiers": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "identifier": {
                    "type": "string",
                    "description": "Industry specific volume identifier."
                  },
                  "type": {
                    "type": "string",
                    "description": "Identifier type. Possible values are ISBN_10, ISBN_13, ISSN and OTHER."
                  }
                }
              },
              "description": "Industry standard identifiers for this volume."
            },
            "language": {
              "description": "Best language for this volume (based on content). It is the two-letter ISO 639-1 code such as 'fr', 'en', etc.",
              "type": "string"
            },
            "canonicalVolumeLink": {
              "type": "string",
              "description": "Canonical URL for a volume. (In LITE projection.)"
            },
            "seriesInfo": {
              "$ref": "Volumeseriesinfo"
            },
            "ratingsCount": {
              "type": "integer",
              "format": "int32",
              "description": "The number of review ratings for this volume."
            },
            "printType": {
              "description": "Type of publication of this volume. Possible values are BOOK or MAGAZINE.",
              "type": "string"
            },
            "description": {
              "description": "A synopsis of the volume. The text of the description is formatted in HTML and includes simple formatting elements, such as b, i, and br tags. (In LITE projection.)",
              "type": "string"
            },
            "dimensions": {
              "description": "Physical dimensions of this volume.",
              "properties": {
                "thickness": {
                  "description": "Thickness of this volume (in cm).",
                  "type": "string"
                },
                "width": {
                  "type": "string",
                  "description": "Width of this volume (in cm)."
                },
                "height": {
                  "description": "Height or length of this volume (in cm).",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "publishedDate": {
              "description": "Date of publication. (In LITE projection.)",
              "type": "string"
            },
            "previewLink": {
              "description": "URL to preview this volume on the Google Books site.",
              "type": "string"
            },
            "subtitle": {
              "type": "string",
              "description": "Volume subtitle. (In LITE projection.)"
            },
            "readingModes": {
              "description": "The reading modes available for this volume.",
              "type": "object",
              "properties": {
                "image": {
                  "type": "boolean"
                },
                "text": {
                  "type": "boolean"
                }
              }
            },
            "categories": {
              "description": "A list of subject categories, such as \"Fiction\", \"Suspense\", etc.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "publisher": {
              "type": "string",
              "description": "Publisher of this volume. (In LITE projection.)"
            },
            "pageCount": {
              "description": "Total number of pages as per publisher metadata.",
              "format": "int32",
              "type": "integer"
            },
            "comicsContent": {
              "description": "Whether the volume has comics content.",
              "type": "boolean"
            },
            "maturityRating": {
              "type": "string"
            },
            "printedPageCount": {
              "format": "int32",
              "type": "integer",
              "description": "Total number of printed pages in generated pdf representation."
            },
            "allowAnonLogging": {
              "description": "Whether anonymous logging should be allowed.",
              "type": "boolean"
            },
            "samplePageCount": {
              "type": "integer",
              "description": "Total number of sample pages as per publisher metadata.",
              "format": "int32"
            }
          },
          "type": "object"
        },
        "userInfo": {
          "description": "User specific information related to this volume. (e.g. page this user last read or whether they purchased this book)",
          "type": "object",
          "properties": {
            "isFamilySharingDisabledByFop": {
              "description": "Deprecated: Replaced by familySharing.",
              "type": "boolean"
            },
            "rentalPeriod": {
              "properties": {
                "startUtcSec": {
                  "type": "string",
                  "format": "int64"
                },
                "endUtcSec": {
                  "type": "string",
                  "format": "int64"
                }
              },
              "description": "Period during this book is/was a valid rental.",
              "type": "object"
            },
            "updated": {
              "type": "string",
              "description": "Timestamp when this volume was last modified by a user action, such as a reading position update, volume purchase or writing a review. (RFC 3339 UTC date-time format)."
            },
            "review": {
              "description": "This user's review of this volume, if one exists.",
              "$ref": "Review"
            },
            "isFamilySharingAllowed": {
              "description": "Deprecated: Replaced by familySharing.",
              "type": "boolean"
            },
            "isPreordered": {
              "description": "Whether or not this volume was pre-ordered by the authenticated user making the request. (In LITE projection.)",
              "type": "boolean"
            },
            "isPurchased": {
              "type": "boolean",
              "description": "Whether or not this volume was purchased by the authenticated user making the request. (In LITE projection.)"
            },
            "isFamilySharedToUser": {
              "description": "Whether or not the user received this volume through family sharing.",
              "type": "boolean"
            },
            "readingPosition": {
              "description": "The user's current reading position in the volume, if one is available. (In LITE projection.)",
              "$ref": "ReadingPosition"
            },
            "isFamilySharedFromUser": {
              "type": "boolean",
              "description": "Whether or not the user shared this volume with the family."
            },
            "isUploaded": {
              "description": "Whether or not this volume was user uploaded.",
              "type": "boolean"
            },
            "familySharing": {
              "properties": {
                "familyRole": {
                  "description": "The role of the user in the family.",
                  "type": "string"
                },
                "isSharingDisabledByFop": {
                  "type": "boolean",
                  "description": "Whether or not sharing this volume is temporarily disabled due to issues with the Family Wallet."
                },
                "isSharingAllowed": {
                  "description": "Whether or not this volume can be shared with the family by the user. This includes sharing eligibility of both the volume and the user. If the value is true, the user can initiate a family sharing action.",
                  "type": "boolean"
                }
              },
              "type": "object",
              "description": "Information on the ability to share with the family."
            },
            "copy": {
              "type": "object",
              "properties": {
                "updated": {
                  "type": "string"
                },
                "remainingCharacterCount": {
                  "format": "int32",
                  "type": "integer"
                },
                "limitType": {
                  "type": "string"
                },
                "allowedCharacterCount": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "description": "Copy/Paste accounting information."
            },
            "rentalState": {
              "description": "Whether this book is an active or an expired rental.",
              "type": "string"
            },
            "acquiredTime": {
              "description": "Timestamp when this volume was acquired by the user. (RFC 3339 UTC date-time format) Acquiring includes purchase, user upload, receiving family sharing, etc.",
              "type": "string"
            },
            "entitlementType": {
              "format": "int32",
              "type": "integer",
              "description": "Whether this volume is purchased, sample, pd download etc."
            },
            "acquisitionType": {
              "type": "integer",
              "format": "int32",
              "description": "How this volume was acquired."
            },
            "userUploadedVolumeInfo": {
              "properties": {
                "processingState": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "isInMyBooks": {
              "description": "Whether or not this volume is currently in \"my books.\"",
              "type": "boolean"
            }
          }
        },
        "selfLink": {
          "description": "URL to this resource. (In LITE projection.)",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Seriesmembership": {
      "properties": {
        "member": {
          "items": {
            "$ref": "Volume"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Resorce type."
        }
      },
      "type": "object",
      "id": "Seriesmembership"
    },
    "Category": {
      "id": "Category",
      "properties": {
        "items": {
          "items": {
            "properties": {
              "badgeUrl": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "categoryId": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array",
          "description": "A list of onboarding categories."
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      },
      "type": "object"
    },
    "Discoveryclusters": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resorce type."
        },
        "clusters": {
          "items": {
            "properties": {
              "title": {
                "type": "string"
              },
              "volumes": {
                "type": "array",
                "items": {
                  "$ref": "Volume"
                }
              },
              "totalVolumes": {
                "format": "int32",
                "type": "integer"
              },
              "uid": {
                "type": "string"
              },
              "subTitle": {
                "type": "string"
              },
              "banner_with_content_container": {
                "type": "object",
                "properties": {
                  "maskColorArgb": {
                    "type": "string"
                  },
                  "fillColorArgb": {
                    "type": "string"
                  },
                  "imageUrl": {
                    "type": "string"
                  },
                  "textColorArgb": {
                    "type": "string"
                  },
                  "moreButtonText": {
                    "type": "string"
                  },
                  "moreButtonUrl": {
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "totalClusters": {
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "Discoveryclusters",
      "type": "object"
    },
    "ReadingPosition": {
      "properties": {
        "updated": {
          "description": "Timestamp when this reading position was last updated (formatted UTC timestamp with millisecond resolution).",
          "type": "string"
        },
        "gbTextPosition": {
          "description": "Position in a volume for text-based content.",
          "type": "string"
        },
        "volumeId": {
          "type": "string",
          "description": "Volume id associated with this reading position."
        },
        "gbImagePosition": {
          "description": "Position in a volume for image-based content.",
          "type": "string"
        },
        "pdfPosition": {
          "description": "Position in a PDF file.",
          "type": "string"
        },
        "epubCfiPosition": {
          "description": "Position in an EPUB as a CFI.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Resource type for a reading position."
        }
      },
      "type": "object",
      "id": "ReadingPosition"
    },
    "Notification": {
      "type": "object",
      "properties": {
        "is_document_mature": {
          "type": "boolean"
        },
        "notification_type": {
          "type": "string"
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "pcampaign_id": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "timeToExpireMs": {
          "type": "string",
          "format": "int64"
        },
        "targetUrl": {
          "type": "string"
        },
        "doc_id": {
          "type": "string"
        },
        "doc_type": {
          "type": "string"
        },
        "iconUrl": {
          "type": "string"
        },
        "notificationGroup": {
          "type": "string"
        },
        "dont_show_notification": {
          "type": "boolean"
        },
        "crmExperimentIds": {
          "items": {
            "format": "int64",
            "type": "string"
          },
          "description": "The list of crm experiment ids.",
          "type": "array"
        },
        "show_notification_settings_action": {
          "type": "boolean"
        },
        "body": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "id": "Notification"
    },
    "Layersummary": {
      "id": "Layersummary",
      "properties": {
        "annotationsDataLink": {
          "type": "string",
          "description": "Link to get data for this annotation."
        },
        "kind": {
          "description": "Resource Type",
          "type": "string"
        },
        "dataCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of data items for this layer."
        },
        "layerId": {
          "type": "string",
          "description": "The layer id for this summary."
        },
        "annotationTypes": {
          "description": "The list of annotation types contained for this layer.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "annotationCount": {
          "format": "int32",
          "description": "The number of annotations for this layer.",
          "type": "integer"
        },
        "id": {
          "description": "Unique id of this layer summary.",
          "type": "string"
        },
        "selfLink": {
          "type": "string",
          "description": "URL to this resource."
        },
        "contentVersion": {
          "type": "string",
          "description": "The content version this resource is for."
        },
        "annotationsLink": {
          "type": "string",
          "description": "The link to get the annotations for this layer."
        },
        "volumeId": {
          "description": "The volume id this resource is for.",
          "type": "string"
        },
        "volumeAnnotationsVersion": {
          "description": "The current version of this layer's volume annotations. Note that this version applies only to the data in the books.layers.volumeAnnotations.* responses. The actual annotation data is versioned separately.",
          "type": "string"
        },
        "updated": {
          "type": "string",
          "description": "Timestamp for the last time an item in this layer was updated. (RFC 3339 UTC date-time format)."
        }
      },
      "type": "object"
    },
    "DownloadAccesses": {
      "id": "DownloadAccesses",
      "type": "object",
      "properties": {
        "downloadAccessList": {
          "description": "A list of download access responses.",
          "items": {
            "$ref": "DownloadAccessRestriction"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      }
    },
    "RequestAccessData": {
      "id": "RequestAccessData",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "concurrentAccess": {
          "description": "A concurrent access response.",
          "$ref": "ConcurrentAccessRestriction"
        },
        "downloadAccess": {
          "description": "A download access response.",
          "$ref": "DownloadAccessRestriction"
        }
      },
      "type": "object"
    },
    "Review": {
      "properties": {
        "volumeId": {
          "type": "string",
          "description": "Volume that this review is for."
        },
        "type": {
          "type": "string",
          "description": "Source type for this review. Possible values are EDITORIAL, WEB_USER or GOOGLE_USER."
        },
        "date": {
          "description": "Date of this review.",
          "type": "string"
        },
        "content": {
          "type": "string",
          "description": "Review text."
        },
        "rating": {
          "type": "string",
          "description": "Star rating for this review. Possible values are ONE, TWO, THREE, FOUR, FIVE or NOT_RATED."
        },
        "fullTextUrl": {
          "type": "string",
          "description": "URL for the full review text, for reviews gathered from the web."
        },
        "kind": {
          "description": "Resource type for a review.",
          "type": "string"
        },
        "title": {
          "description": "Title for this review.",
          "type": "string"
        },
        "source": {
          "type": "object",
          "description": "Information regarding the source of this review, when the review is not from a Google Books user.",
          "properties": {
            "extraDescription": {
              "description": "Extra text about the source of the review.",
              "type": "string"
            },
            "url": {
              "description": "URL of the source of the review.",
              "type": "string"
            },
            "description": {
              "type": "string",
              "description": "Name of the source."
            }
          }
        },
        "author": {
          "properties": {
            "displayName": {
              "type": "string",
              "description": "Name of this person."
            }
          },
          "description": "Author of this review.",
          "type": "object"
        }
      },
      "id": "Review",
      "type": "object"
    },
    "AnnotationsSummary": {
      "id": "AnnotationsSummary",
      "properties": {
        "kind": {
          "type": "string"
        },
        "layers": {
          "items": {
            "type": "object",
            "properties": {
              "layerId": {
                "type": "string"
              },
              "remainingCharacterCount": {
                "type": "integer",
                "format": "int32"
              },
              "updated": {
                "type": "string"
              },
              "limitType": {
                "type": "string"
              },
              "allowedCharacterCount": {
                "format": "int32",
                "type": "integer"
              }
            }
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Volumeannotation": {
      "id": "Volumeannotation",
      "properties": {
        "selfLink": {
          "description": "URL to this resource.",
          "type": "string"
        },
        "layerId": {
          "description": "The Layer this annotation is for.",
          "type": "string"
        },
        "annotationDataId": {
          "type": "string",
          "description": "The annotation data id for this volume annotation."
        },
        "selectedText": {
          "type": "string",
          "description": "Excerpt from the volume."
        },
        "contentRanges": {
          "type": "object",
          "description": "The content ranges to identify the selected text.",
          "properties": {
            "gbTextRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in GB text format for this annotation for version above."
            },
            "gbImageRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in GB image format for this annotation for version above."
            },
            "contentVersion": {
              "type": "string",
              "description": "Content version applicable to ranges below."
            },
            "cfiRange": {
              "description": "Range in CFI format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            }
          }
        },
        "updated": {
          "type": "string",
          "description": "Timestamp for the last time this anntoation was updated. (RFC 3339 UTC date-time format)."
        },
        "volumeId": {
          "description": "The Volume this annotation is for.",
          "type": "string"
        },
        "annotationType": {
          "type": "string",
          "description": "The type of annotation this is."
        },
        "pageIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Pages the annotation spans."
        },
        "kind": {
          "description": "Resource Type",
          "type": "string"
        },
        "deleted": {
          "description": "Indicates that this annotation is deleted.",
          "type": "boolean"
        },
        "id": {
          "type": "string",
          "description": "Unique id of this volume annotation."
        },
        "data": {
          "description": "Data for this annotation.",
          "type": "string"
        },
        "annotationDataLink": {
          "type": "string",
          "description": "Link to get data for this annotation."
        }
      },
      "type": "object"
    },
    "Series": {
      "id": "Series",
      "type": "object",
      "properties": {
        "series": {
          "items": {
            "type": "object",
            "properties": {
              "eligibleForSubscription": {
                "type": "boolean"
              },
              "seriesType": {
                "type": "string"
              },
              "bannerImageUrl": {
                "type": "string"
              },
              "subscriptionId": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "seriesFormatType": {
                "type": "string"
              },
              "seriesId": {
                "type": "string"
              },
              "isComplete": {
                "type": "boolean"
              },
              "seriesSubscriptionReleaseInfo": {
                "properties": {
                  "currentReleaseInfo": {
                    "type": "object",
                    "properties": {
                      "releaseTime": {
                        "type": "string"
                      },
                      "amountInMicros": {
                        "type": "number",
                        "format": "double"
                      },
                      "releaseNumber": {
                        "type": "string"
                      },
                      "currencyCode": {
                        "type": "string"
                      }
                    }
                  },
                  "nextReleaseInfo": {
                    "properties": {
                      "releaseTime": {
                        "type": "string"
                      },
                      "currencyCode": {
                        "type": "string"
                      },
                      "amountInMicros": {
                        "type": "number",
                        "format": "double"
                      },
                      "releaseNumber": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "seriesSubscriptionType": {
                    "type": "string"
                  },
                  "cancelTime": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "imageUrl": {
                "type": "string"
              }
            }
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      }
    },
    "Offers": {
      "id": "Offers",
      "properties": {
        "items": {
          "items": {
            "type": "object",
            "properties": {
              "artUrl": {
                "type": "string"
              },
              "gservicesKey": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "items": {
                "items": {
                  "properties": {
                    "title": {
                      "type": "string"
                    },
                    "coverUrl": {
                      "type": "string"
                    },
                    "volumeId": {
                      "type": "string"
                    },
                    "author": {
                      "type": "string"
                    },
                    "canonicalVolumeLink": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            }
          },
          "description": "A list of offers.",
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      },
      "type": "object"
    },
    "Bookshelf": {
      "type": "object",
      "id": "Bookshelf",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Id of this bookshelf, only unique by user.",
          "type": "integer"
        },
        "volumesLastUpdated": {
          "type": "string",
          "description": "Last time a volume was added or removed from this bookshelf (formatted UTC timestamp with millisecond resolution)."
        },
        "created": {
          "description": "Created time for this bookshelf (formatted UTC timestamp with millisecond resolution).",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Resource type for bookshelf metadata."
        },
        "updated": {
          "description": "Last modified time of this bookshelf (formatted UTC timestamp with millisecond resolution).",
          "type": "string"
        },
        "title": {
          "description": "Title of this bookshelf.",
          "type": "string"
        },
        "volumeCount": {
          "type": "integer",
          "description": "Number of volumes in this bookshelf.",
          "format": "int32"
        },
        "description": {
          "type": "string",
          "description": "Description of this bookshelf."
        },
        "selfLink": {
          "type": "string",
          "description": "URL to this resource."
        },
        "access": {
          "description": "Whether this bookshelf is PUBLIC or PRIVATE.",
          "type": "string"
        }
      }
    },
    "Bookshelves": {
      "type": "object",
      "id": "Bookshelves",
      "properties": {
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "items": {
          "description": "A list of bookshelves.",
          "items": {
            "$ref": "Bookshelf"
          },
          "type": "array"
        }
      }
    },
    "DictionaryAnnotationdata": {
      "type": "object",
      "id": "DictionaryAnnotationdata",
      "properties": {
        "volumeId": {
          "type": "string",
          "description": "The volume id for this data. *"
        },
        "updated": {
          "description": "Timestamp for the last time this data was updated. (RFC 3339 UTC date-time format).",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Unique id for this annotation data."
        },
        "annotationType": {
          "type": "string",
          "description": "The type of annotation this data is for."
        },
        "layerId": {
          "description": "The Layer id for this data. *",
          "type": "string"
        },
        "encodedData": {
          "type": "string",
          "description": "Base64 encoded data for this annotation data.",
          "format": "byte"
        },
        "selfLink": {
          "description": "URL for this resource. *",
          "type": "string"
        },
        "data": {
          "$ref": "Dictlayerdata",
          "description": "JSON encoded data for this dictionary annotation data. Emitted with name 'data' in JSON output. Either this or geo_data will be populated."
        },
        "kind": {
          "type": "string",
          "description": "Resource Type"
        }
      }
    },
    "GeoAnnotationdata": {
      "type": "object",
      "properties": {
        "encodedData": {
          "type": "string",
          "format": "byte",
          "description": "Base64 encoded data for this annotation data."
        },
        "layerId": {
          "description": "The Layer id for this data. *",
          "type": "string"
        },
        "id": {
          "description": "Unique id for this annotation data.",
          "type": "string"
        },
        "volumeId": {
          "description": "The volume id for this data. *",
          "type": "string"
        },
        "selfLink": {
          "description": "URL for this resource. *",
          "type": "string"
        },
        "data": {
          "description": "JSON encoded data for this geo annotation data. Emitted with name 'data' in JSON output. Either this or dict_data will be populated.",
          "$ref": "Geolayerdata"
        },
        "kind": {
          "description": "Resource Type",
          "type": "string"
        },
        "annotationType": {
          "description": "The type of annotation this data is for.",
          "type": "string"
        },
        "updated": {
          "type": "string",
          "description": "Timestamp for the last time this data was updated. (RFC 3339 UTC date-time format)."
        }
      },
      "id": "GeoAnnotationdata"
    },
    "Layersummaries": {
      "id": "Layersummaries",
      "type": "object",
      "properties": {
        "items": {
          "items": {
            "$ref": "Layersummary"
          },
          "description": "A list of layer summary items.",
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "totalItems": {
          "format": "int32",
          "type": "integer",
          "description": "The total number of layer summaries found."
        }
      }
    },
    "Volumeannotations": {
      "id": "Volumeannotations",
      "type": "object",
      "properties": {
        "totalItems": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of volume annotations found."
        },
        "kind": {
          "description": "Resource type",
          "type": "string"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to pass in for pagination for the next page. This will not be present if this request does not have more results."
        },
        "items": {
          "description": "A list of volume annotations.",
          "items": {
            "$ref": "Volumeannotation"
          },
          "type": "array"
        },
        "version": {
          "description": "The version string for all of the volume annotations in this layer (not just the ones in this response). Note: the version string doesn't apply to the annotation data, just the information in this response (e.g. the location of annotations in the book).",
          "type": "string"
        }
      }
    },
    "Metadata": {
      "id": "Metadata",
      "type": "object",
      "properties": {
        "items": {
          "items": {
            "type": "object",
            "properties": {
              "language": {
                "type": "string"
              },
              "size": {
                "format": "int64",
                "type": "string"
              },
              "download_url": {
                "type": "string"
              },
              "encrypted_key": {
                "type": "string"
              },
              "version": {
                "type": "string",
                "format": "int64"
              }
            }
          },
          "type": "array",
          "description": "A list of offline dictionary metadata."
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      }
    },
    "Annotations": {
      "properties": {
        "totalItems": {
          "format": "int32",
          "description": "Total number of annotations found. This may be greater than the number of notes returned in this response if results have been paginated.",
          "type": "integer"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to pass in for pagination for the next page. This will not be present if this request does not have more results."
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "Annotation"
          },
          "description": "A list of annotations."
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "Annotations"
    },
    "Volumeseriesinfo": {
      "id": "Volumeseriesinfo",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "bookDisplayNumber": {
          "description": "The display number string. This should be used only for display purposes and the actual sequence should be inferred from the below orderNumber.",
          "type": "string"
        },
        "shortSeriesBookTitle": {
          "description": "Short book title in the context of the series.",
          "type": "string"
        },
        "volumeSeries": {
          "items": {
            "properties": {
              "seriesBookType": {
                "type": "string",
                "description": "The book type in the context of series. Examples - Single Issue, Collection Edition, etc."
              },
              "issue": {
                "items": {
                  "type": "object",
                  "properties": {
                    "issueDisplayNumber": {
                      "type": "string"
                    },
                    "issueOrderNumber": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                },
                "description": "List of issues. Applicable only for Collection Edition and Omnibus.",
                "type": "array"
              },
              "orderNumber": {
                "description": "The book order number in the series.",
                "type": "integer",
                "format": "int32"
              },
              "seriesId": {
                "type": "string",
                "description": "The series id."
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Dictlayerdata": {
      "id": "Dictlayerdata",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "common": {
          "properties": {
            "title": {
              "type": "string",
              "description": "The display title and localized canonical name to use when searching for this entity on Google search."
            }
          },
          "type": "object"
        },
        "dict": {
          "type": "object",
          "properties": {
            "words": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "senses": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "syllabification": {
                          "type": "string"
                        },
                        "definitions": {
                          "items": {
                            "properties": {
                              "definition": {
                                "type": "string"
                              },
                              "examples": {
                                "items": {
                                  "properties": {
                                    "source": {
                                      "properties": {
                                        "url": {
                                          "type": "string"
                                        },
                                        "attribution": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "conjugations": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "value": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "synonyms": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "text": {
                                "type": "string"
                              },
                              "source": {
                                "type": "object",
                                "properties": {
                                  "url": {
                                    "type": "string"
                                  },
                                  "attribution": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "type": "object"
                          }
                        },
                        "pronunciationUrl": {
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "attribution": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "pronunciation": {
                          "type": "string"
                        },
                        "partOfSpeech": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "derivatives": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "source": {
                          "properties": {
                            "attribution": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "text": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "source": {
                    "description": "The words with different meanings but not related words, e.g. \"go\" (game) and \"go\" (verb).",
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string"
                      },
                      "attribution": {
                        "type": "string"
                      }
                    }
                  },
                  "examples": {
                    "items": {
                      "type": "object",
                      "properties": {
                        "text": {
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "attribution": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "type": "array"
                  }
                }
              }
            },
            "source": {
              "properties": {
                "attribution": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              },
              "description": "The source, url and attribution for this dictionary data.",
              "type": "object"
            }
          }
        }
      }
    },
    "BooksAnnotationsRange": {
      "type": "object",
      "properties": {
        "endOffset": {
          "description": "The offset from the ending position.",
          "type": "string"
        },
        "startPosition": {
          "description": "The starting position for the range.",
          "type": "string"
        },
        "endPosition": {
          "type": "string",
          "description": "The ending position for the range."
        },
        "startOffset": {
          "description": "The offset from the starting position.",
          "type": "string"
        }
      },
      "id": "BooksAnnotationsRange"
    },
    "DownloadAccessRestriction": {
      "properties": {
        "restricted": {
          "description": "Whether this volume has any download access restrictions.",
          "type": "boolean"
        },
        "justAcquired": {
          "type": "boolean",
          "description": "If deviceAllowed, whether access was just acquired with this request."
        },
        "reasonCode": {
          "description": "Error/warning reason code. Additional codes may be added in the future. 0 OK 100 ACCESS_DENIED_PUBLISHER_LIMIT 101 ACCESS_DENIED_LIMIT 200 WARNING_USED_LAST_ACCESS",
          "type": "string"
        },
        "downloadsAcquired": {
          "type": "integer",
          "description": "If restricted, the number of content download licenses already acquired (including the requesting client, if licensed).",
          "format": "int32"
        },
        "signature": {
          "type": "string",
          "description": "Response signature."
        },
        "message": {
          "description": "Error/warning message.",
          "type": "string"
        },
        "nonce": {
          "type": "string",
          "description": "Client nonce for verification. Download access and client-validation only."
        },
        "maxDownloadDevices": {
          "format": "int32",
          "type": "integer",
          "description": "If restricted, the maximum number of content download licenses for this volume."
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "deviceAllowed": {
          "description": "If restricted, whether access is granted for this (user, device, volume).",
          "type": "boolean"
        },
        "volumeId": {
          "type": "string",
          "description": "Identifies the volume for which this entry applies."
        },
        "source": {
          "type": "string",
          "description": "Client app identifier for verification. Download access and client-validation only."
        }
      },
      "type": "object",
      "id": "DownloadAccessRestriction"
    },
    "Empty": {
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "id": "Empty",
      "properties": {}
    },
    "Annotation": {
      "type": "object",
      "id": "Annotation",
      "properties": {
        "highlightStyle": {
          "description": "The highlight style for this annotation.",
          "type": "string"
        },
        "pageIds": {
          "type": "array",
          "description": "Pages that this annotation spans.",
          "items": {
            "type": "string"
          }
        },
        "deleted": {
          "type": "boolean",
          "description": "Indicates that this annotation is deleted."
        },
        "currentVersionRanges": {
          "properties": {
            "gbImageRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in GB image format for this annotation for version above."
            },
            "cfiRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in CFI format for this annotation for version above."
            },
            "imageCfiRange": {
              "description": "Range in image CFI format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            },
            "contentVersion": {
              "description": "Content version applicable to ranges below.",
              "type": "string"
            },
            "gbTextRange": {
              "description": "Range in GB text format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            }
          },
          "type": "object",
          "description": "Selection ranges for the most recent content version."
        },
        "clientVersionRanges": {
          "type": "object",
          "description": "Selection ranges sent from the client.",
          "properties": {
            "gbImageRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in GB image format for this annotation sent by client."
            },
            "contentVersion": {
              "description": "Content version the client sent in.",
              "type": "string"
            },
            "cfiRange": {
              "description": "Range in CFI format for this annotation sent by client.",
              "$ref": "BooksAnnotationsRange"
            },
            "gbTextRange": {
              "description": "Range in GB text format for this annotation sent by client.",
              "$ref": "BooksAnnotationsRange"
            },
            "imageCfiRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in image CFI format for this annotation sent by client."
            }
          }
        },
        "id": {
          "description": "Id of this annotation, in the form of a GUID.",
          "type": "string"
        },
        "volumeId": {
          "description": "The volume that this annotation belongs to.",
          "type": "string"
        },
        "beforeSelectedText": {
          "description": "Anchor text before excerpt. For requests, if the user bookmarked a screen that has no flowing text on it, then this field should be empty.",
          "type": "string"
        },
        "afterSelectedText": {
          "description": "Anchor text after excerpt. For requests, if the user bookmarked a screen that has no flowing text on it, then this field should be empty.",
          "type": "string"
        },
        "created": {
          "type": "string",
          "description": "Timestamp for the created time of this annotation."
        },
        "selectedText": {
          "description": "Excerpt from the volume.",
          "type": "string"
        },
        "data": {
          "type": "string",
          "description": "User-created data for this annotation."
        },
        "layerId": {
          "description": "The layer this annotation is for.",
          "type": "string"
        },
        "selfLink": {
          "type": "string",
          "description": "URL to this resource."
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "layerSummary": {
          "properties": {
            "remainingCharacterCount": {
              "type": "integer",
              "format": "int32",
              "description": "Remaining allowed characters on this layer, especially for the \"copy\" layer."
            },
            "limitType": {
              "description": "Type of limitation on this layer. \"limited\" or \"unlimited\" for the \"copy\" layer.",
              "type": "string"
            },
            "allowedCharacterCount": {
              "type": "integer",
              "format": "int32",
              "description": "Maximum allowed characters on this layer, especially for the \"copy\" layer."
            }
          },
          "type": "object"
        },
        "updated": {
          "type": "string",
          "description": "Timestamp for the last time this annotation was modified."
        }
      }
    },
    "BooksVolumesRecommendedRateResponse": {
      "id": "BooksVolumesRecommendedRateResponse",
      "type": "object",
      "properties": {
        "consistency_token": {
          "type": "string"
        }
      }
    },
    "Annotationsdata": {
      "type": "object",
      "properties": {
        "totalItems": {
          "format": "int32",
          "description": "The total number of volume annotations found.",
          "type": "integer"
        },
        "nextPageToken": {
          "description": "Token to pass in for pagination for the next page. This will not be present if this request does not have more results.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Resource type"
        },
        "items": {
          "items": {
            "$ref": "GeoAnnotationdata"
          },
          "type": "array",
          "description": "A list of Annotation Data."
        }
      },
      "id": "Annotationsdata"
    }
  },
  "ownerDomain": "google.com",
  "documentationLink": "https://code.google.com/apis/books/docs/v1/getting_started.html",
  "protocol": "rest",
  "discoveryVersion": "v1",
  "name": "books",
  "version": "v1",
  "ownerName": "Google",
  "revision": "20200925",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/books": {
          "description": "Manage your books"
        }
      }
    }
  },
  "description": "The Google Books API allows clients to access the Google Books repository.",
  "version_module": true,
  "id": "books:v1",
  "basePath": "",
  "baseUrl": "https://books.googleapis.com/",
  "title": "Books API"
}
