/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.discoveryengine.v1alpha.model;

/**
 * Search parameters.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Discovery Engine API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDiscoveryengineV1alphaAnswerQueryRequestSearchSpecSearchParams extends com.google.api.client.json.GenericJson {

  /**
   * Boost specification to boost certain documents in search results which may affect the answer
   * query response. For more information on boosting, see
   * [Boosting](https://cloud.google.com/retail/docs/boosting#boost)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpec boostSpec;

  /**
   * The filter syntax consists of an expression language for constructing a predicate from one or
   * more fields of the documents being filtered. Filter expression is case-sensitive. This will be
   * used to filter search results which may affect the Answer response. If this field is
   * unrecognizable, an `INVALID_ARGUMENT` is returned. Filtering in Vertex AI Search is done by
   * mapping the LHS filter key to a key property defined in the Vertex AI Search backend -- this
   * mapping is defined by the customer in their schema. For example a media customers might have a
   * field 'name' in their schema. In this case the filter would look like this: filter -->
   * name:'ANY("king kong")' For more information about filtering including syntax and filter
   * operators, see [Filter](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-
   * metadata)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String filter;

  /**
   * Number of search results to return. The default value is 10.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer maxReturnResults;

  /**
   * The order in which documents are returned. Documents can be ordered by a field in an Document
   * object. Leave it unset if ordered by relevance. `order_by` expression is case-sensitive. For
   * more information on ordering, see [Ordering](https://cloud.google.com/retail/docs/filter-and-
   * order#order) If this field is unrecognizable, an `INVALID_ARGUMENT` is returned.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String orderBy;

  /**
   * Specifies the search result mode. If unspecified, the search result mode is based on
   * DataStore.DocumentProcessingConfig.chunking_config: * If
   * DataStore.DocumentProcessingConfig.chunking_config is specified, it defaults to `CHUNKS`. *
   * Otherwise, it defaults to `DOCUMENTS`. See [parse and chunk documents](https://cloud.google.com
   * /generative-ai-app-builder/docs/parse-chunk-documents)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String searchResultMode;

  /**
   * Boost specification to boost certain documents in search results which may affect the answer
   * query response. For more information on boosting, see
   * [Boosting](https://cloud.google.com/retail/docs/boosting#boost)
   * @return value or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpec getBoostSpec() {
    return boostSpec;
  }

  /**
   * Boost specification to boost certain documents in search results which may affect the answer
   * query response. For more information on boosting, see
   * [Boosting](https://cloud.google.com/retail/docs/boosting#boost)
   * @param boostSpec boostSpec or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaAnswerQueryRequestSearchSpecSearchParams setBoostSpec(GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpec boostSpec) {
    this.boostSpec = boostSpec;
    return this;
  }

  /**
   * The filter syntax consists of an expression language for constructing a predicate from one or
   * more fields of the documents being filtered. Filter expression is case-sensitive. This will be
   * used to filter search results which may affect the Answer response. If this field is
   * unrecognizable, an `INVALID_ARGUMENT` is returned. Filtering in Vertex AI Search is done by
   * mapping the LHS filter key to a key property defined in the Vertex AI Search backend -- this
   * mapping is defined by the customer in their schema. For example a media customers might have a
   * field 'name' in their schema. In this case the filter would look like this: filter -->
   * name:'ANY("king kong")' For more information about filtering including syntax and filter
   * operators, see [Filter](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-
   * metadata)
   * @return value or {@code null} for none
   */
  public java.lang.String getFilter() {
    return filter;
  }

  /**
   * The filter syntax consists of an expression language for constructing a predicate from one or
   * more fields of the documents being filtered. Filter expression is case-sensitive. This will be
   * used to filter search results which may affect the Answer response. If this field is
   * unrecognizable, an `INVALID_ARGUMENT` is returned. Filtering in Vertex AI Search is done by
   * mapping the LHS filter key to a key property defined in the Vertex AI Search backend -- this
   * mapping is defined by the customer in their schema. For example a media customers might have a
   * field 'name' in their schema. In this case the filter would look like this: filter -->
   * name:'ANY("king kong")' For more information about filtering including syntax and filter
   * operators, see [Filter](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-
   * metadata)
   * @param filter filter or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaAnswerQueryRequestSearchSpecSearchParams setFilter(java.lang.String filter) {
    this.filter = filter;
    return this;
  }

  /**
   * Number of search results to return. The default value is 10.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMaxReturnResults() {
    return maxReturnResults;
  }

  /**
   * Number of search results to return. The default value is 10.
   * @param maxReturnResults maxReturnResults or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaAnswerQueryRequestSearchSpecSearchParams setMaxReturnResults(java.lang.Integer maxReturnResults) {
    this.maxReturnResults = maxReturnResults;
    return this;
  }

  /**
   * The order in which documents are returned. Documents can be ordered by a field in an Document
   * object. Leave it unset if ordered by relevance. `order_by` expression is case-sensitive. For
   * more information on ordering, see [Ordering](https://cloud.google.com/retail/docs/filter-and-
   * order#order) If this field is unrecognizable, an `INVALID_ARGUMENT` is returned.
   * @return value or {@code null} for none
   */
  public java.lang.String getOrderBy() {
    return orderBy;
  }

  /**
   * The order in which documents are returned. Documents can be ordered by a field in an Document
   * object. Leave it unset if ordered by relevance. `order_by` expression is case-sensitive. For
   * more information on ordering, see [Ordering](https://cloud.google.com/retail/docs/filter-and-
   * order#order) If this field is unrecognizable, an `INVALID_ARGUMENT` is returned.
   * @param orderBy orderBy or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaAnswerQueryRequestSearchSpecSearchParams setOrderBy(java.lang.String orderBy) {
    this.orderBy = orderBy;
    return this;
  }

  /**
   * Specifies the search result mode. If unspecified, the search result mode is based on
   * DataStore.DocumentProcessingConfig.chunking_config: * If
   * DataStore.DocumentProcessingConfig.chunking_config is specified, it defaults to `CHUNKS`. *
   * Otherwise, it defaults to `DOCUMENTS`. See [parse and chunk documents](https://cloud.google.com
   * /generative-ai-app-builder/docs/parse-chunk-documents)
   * @return value or {@code null} for none
   */
  public java.lang.String getSearchResultMode() {
    return searchResultMode;
  }

  /**
   * Specifies the search result mode. If unspecified, the search result mode is based on
   * DataStore.DocumentProcessingConfig.chunking_config: * If
   * DataStore.DocumentProcessingConfig.chunking_config is specified, it defaults to `CHUNKS`. *
   * Otherwise, it defaults to `DOCUMENTS`. See [parse and chunk documents](https://cloud.google.com
   * /generative-ai-app-builder/docs/parse-chunk-documents)
   * @param searchResultMode searchResultMode or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaAnswerQueryRequestSearchSpecSearchParams setSearchResultMode(java.lang.String searchResultMode) {
    this.searchResultMode = searchResultMode;
    return this;
  }

  @Override
  public GoogleCloudDiscoveryengineV1alphaAnswerQueryRequestSearchSpecSearchParams set(String fieldName, Object value) {
    return (GoogleCloudDiscoveryengineV1alphaAnswerQueryRequestSearchSpecSearchParams) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDiscoveryengineV1alphaAnswerQueryRequestSearchSpecSearchParams clone() {
    return (GoogleCloudDiscoveryengineV1alphaAnswerQueryRequestSearchSpecSearchParams) super.clone();
  }

}
