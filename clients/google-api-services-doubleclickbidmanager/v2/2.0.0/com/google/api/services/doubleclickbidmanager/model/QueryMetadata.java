/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.doubleclickbidmanager.model;

/**
 * The metadata of the query.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the DoubleClick Bid Manager API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class QueryMetadata extends com.google.api.client.json.GenericJson {

  /**
   * The date range the report generated by the query will report on. This date range will be
   * defined by the time zone as used by the advertiser.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DataRange dataRange;

  /**
   * The format of the report generated by the query.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String format;

  /**
   * Whether an email notification is sent to the query creator when a report generated by the query
   * is ready. This value is `false` by default.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean sendNotification;

  /**
   * List of additional email addresses with which to share the query. If send_notification is
   * `true`, these email addresses will receive a notification when a report generated by the query
   * is ready. If these email addresses are connected to Display & Video 360 users, the query will
   * be available to them in the Display & Video 360 interface.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> shareEmailAddress;

  /**
   * The display name of the query. This value will be used in the file name of reports generated by
   * the query.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String title;

  /**
   * The date range the report generated by the query will report on. This date range will be
   * defined by the time zone as used by the advertiser.
   * @return value or {@code null} for none
   */
  public DataRange getDataRange() {
    return dataRange;
  }

  /**
   * The date range the report generated by the query will report on. This date range will be
   * defined by the time zone as used by the advertiser.
   * @param dataRange dataRange or {@code null} for none
   */
  public QueryMetadata setDataRange(DataRange dataRange) {
    this.dataRange = dataRange;
    return this;
  }

  /**
   * The format of the report generated by the query.
   * @return value or {@code null} for none
   */
  public java.lang.String getFormat() {
    return format;
  }

  /**
   * The format of the report generated by the query.
   * @param format format or {@code null} for none
   */
  public QueryMetadata setFormat(java.lang.String format) {
    this.format = format;
    return this;
  }

  /**
   * Whether an email notification is sent to the query creator when a report generated by the query
   * is ready. This value is `false` by default.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSendNotification() {
    return sendNotification;
  }

  /**
   * Whether an email notification is sent to the query creator when a report generated by the query
   * is ready. This value is `false` by default.
   * @param sendNotification sendNotification or {@code null} for none
   */
  public QueryMetadata setSendNotification(java.lang.Boolean sendNotification) {
    this.sendNotification = sendNotification;
    return this;
  }

  /**
   * List of additional email addresses with which to share the query. If send_notification is
   * `true`, these email addresses will receive a notification when a report generated by the query
   * is ready. If these email addresses are connected to Display & Video 360 users, the query will
   * be available to them in the Display & Video 360 interface.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getShareEmailAddress() {
    return shareEmailAddress;
  }

  /**
   * List of additional email addresses with which to share the query. If send_notification is
   * `true`, these email addresses will receive a notification when a report generated by the query
   * is ready. If these email addresses are connected to Display & Video 360 users, the query will
   * be available to them in the Display & Video 360 interface.
   * @param shareEmailAddress shareEmailAddress or {@code null} for none
   */
  public QueryMetadata setShareEmailAddress(java.util.List<java.lang.String> shareEmailAddress) {
    this.shareEmailAddress = shareEmailAddress;
    return this;
  }

  /**
   * The display name of the query. This value will be used in the file name of reports generated by
   * the query.
   * @return value or {@code null} for none
   */
  public java.lang.String getTitle() {
    return title;
  }

  /**
   * The display name of the query. This value will be used in the file name of reports generated by
   * the query.
   * @param title title or {@code null} for none
   */
  public QueryMetadata setTitle(java.lang.String title) {
    this.title = title;
    return this;
  }

  @Override
  public QueryMetadata set(String fieldName, Object value) {
    return (QueryMetadata) super.set(fieldName, value);
  }

  @Override
  public QueryMetadata clone() {
    return (QueryMetadata) super.clone();
  }

}
