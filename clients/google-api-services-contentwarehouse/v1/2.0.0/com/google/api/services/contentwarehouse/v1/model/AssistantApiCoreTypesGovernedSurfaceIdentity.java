/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * The set of information that helps the server identify the surface. This replaces the User-Agent
 * string within the Assistant Server. Note: The SurfaceIdentity proto should only be used to derive
 * the capabilities of a surface. It should not be accessed outside of the CapabilityBuilder or
 * CapabilityChecker. IMPORTANT: The partial migration to the SurfaceIdentity and SurfaceVersion
 * protos defined here is being rolled back (b/303012824). All existing references will be updated
 * to point back to //assistant/api/core_types/surface_identity.proto. If you are adding a
 * reference, use the SurfaceIdentity and SurfaceVersion protos defined there. NEXT ID: 6
 * LINT.IfChange
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AssistantApiCoreTypesGovernedSurfaceIdentity extends com.google.api.client.json.GenericJson {

  /**
   * The identifier of the device.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiCoreTypesDeviceId deviceId;

  /**
   * DEPRECATED: The legacy device's surface type enum. NOTE: Prefer using the ontological
   * `surface_type` field above. If you need to access the legacy surface type, please file a bug
   * and add it in your code to migrate to ontological surface type.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String legacySurfaceType;

  /**
   * The device's surface type. The types are defined at
   * google3/assistant/api/core_types/surfaces.gcl.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String surfaceType;

  /**
   * The version of the surface/client. This is different from the Conversation protocol version.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiCoreTypesGovernedSurfaceVersion surfaceVersion;

  /**
   * The identifier of the device.
   * @return value or {@code null} for none
   */
  public AssistantApiCoreTypesDeviceId getDeviceId() {
    return deviceId;
  }

  /**
   * The identifier of the device.
   * @param deviceId deviceId or {@code null} for none
   */
  public AssistantApiCoreTypesGovernedSurfaceIdentity setDeviceId(AssistantApiCoreTypesDeviceId deviceId) {
    this.deviceId = deviceId;
    return this;
  }

  /**
   * DEPRECATED: The legacy device's surface type enum. NOTE: Prefer using the ontological
   * `surface_type` field above. If you need to access the legacy surface type, please file a bug
   * and add it in your code to migrate to ontological surface type.
   * @return value or {@code null} for none
   */
  public java.lang.String getLegacySurfaceType() {
    return legacySurfaceType;
  }

  /**
   * DEPRECATED: The legacy device's surface type enum. NOTE: Prefer using the ontological
   * `surface_type` field above. If you need to access the legacy surface type, please file a bug
   * and add it in your code to migrate to ontological surface type.
   * @param legacySurfaceType legacySurfaceType or {@code null} for none
   */
  public AssistantApiCoreTypesGovernedSurfaceIdentity setLegacySurfaceType(java.lang.String legacySurfaceType) {
    this.legacySurfaceType = legacySurfaceType;
    return this;
  }

  /**
   * The device's surface type. The types are defined at
   * google3/assistant/api/core_types/surfaces.gcl.
   * @return value or {@code null} for none
   */
  public java.lang.String getSurfaceType() {
    return surfaceType;
  }

  /**
   * The device's surface type. The types are defined at
   * google3/assistant/api/core_types/surfaces.gcl.
   * @param surfaceType surfaceType or {@code null} for none
   */
  public AssistantApiCoreTypesGovernedSurfaceIdentity setSurfaceType(java.lang.String surfaceType) {
    this.surfaceType = surfaceType;
    return this;
  }

  /**
   * The version of the surface/client. This is different from the Conversation protocol version.
   * @return value or {@code null} for none
   */
  public AssistantApiCoreTypesGovernedSurfaceVersion getSurfaceVersion() {
    return surfaceVersion;
  }

  /**
   * The version of the surface/client. This is different from the Conversation protocol version.
   * @param surfaceVersion surfaceVersion or {@code null} for none
   */
  public AssistantApiCoreTypesGovernedSurfaceIdentity setSurfaceVersion(AssistantApiCoreTypesGovernedSurfaceVersion surfaceVersion) {
    this.surfaceVersion = surfaceVersion;
    return this;
  }

  @Override
  public AssistantApiCoreTypesGovernedSurfaceIdentity set(String fieldName, Object value) {
    return (AssistantApiCoreTypesGovernedSurfaceIdentity) super.set(fieldName, value);
  }

  @Override
  public AssistantApiCoreTypesGovernedSurfaceIdentity clone() {
    return (AssistantApiCoreTypesGovernedSurfaceIdentity) super.clone();
  }

}
