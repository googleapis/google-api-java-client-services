/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.metastore.v1alpha.model;

/**
 * Configuration information to start the Change Data Capture (CDC) streams from customer database
 * to backend database of Dataproc Metastore.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Dataproc Metastore API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class CdcConfig extends com.google.api.client.json.GenericJson {

  /**
   * Optional. The bucket to write the intermediate stream event data in. The bucket name must be
   * without any prefix like "gs://". See the bucket naming requirements
   * (https://cloud.google.com/storage/docs/buckets#naming). This field is optional. If not set, the
   * Artifacts Cloud Storage bucket will be used.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String bucket;

  /**
   * Required. Input only. The password for the user that Datastream service should use for the
   * MySQL connection. This field is not returned on request.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String password;

  /**
   * Required. The URL of the subnetwork resource to create the VM instance hosting the reverse
   * proxy in. More context in https://cloud.google.com/datastream/docs/private-connectivity
   * #reverse-csql-proxy The subnetwork should reside in the network provided in the request that
   * Datastream will peer to and should be in the same region as Datastream, in the following
   * format. projects/{project_id}/regions/{region_id}/subnetworks/{subnetwork_id}
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String reverseProxySubnet;

  /**
   * Optional. The root path inside the Cloud Storage bucket. The stream event data will be written
   * to this path. The default value is /migration.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String rootPath;

  /**
   * Required. A /29 CIDR IP range for peering with datastream.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String subnetIpRange;

  /**
   * Required. The username that the Datastream service should use for the MySQL connection.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String username;

  /**
   * Required. Fully qualified name of the Cloud SQL instance's VPC network or the shared VPC
   * network that Datastream will peer to, in the following format:
   * projects/{project_id}/locations/global/networks/{network_id}. More context in
   * https://cloud.google.com/datastream/docs/network-connectivity-options#privateconnectivity
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String vpcNetwork;

  /**
   * Optional. The bucket to write the intermediate stream event data in. The bucket name must be
   * without any prefix like "gs://". See the bucket naming requirements
   * (https://cloud.google.com/storage/docs/buckets#naming). This field is optional. If not set, the
   * Artifacts Cloud Storage bucket will be used.
   * @return value or {@code null} for none
   */
  public java.lang.String getBucket() {
    return bucket;
  }

  /**
   * Optional. The bucket to write the intermediate stream event data in. The bucket name must be
   * without any prefix like "gs://". See the bucket naming requirements
   * (https://cloud.google.com/storage/docs/buckets#naming). This field is optional. If not set, the
   * Artifacts Cloud Storage bucket will be used.
   * @param bucket bucket or {@code null} for none
   */
  public CdcConfig setBucket(java.lang.String bucket) {
    this.bucket = bucket;
    return this;
  }

  /**
   * Required. Input only. The password for the user that Datastream service should use for the
   * MySQL connection. This field is not returned on request.
   * @return value or {@code null} for none
   */
  public java.lang.String getPassword() {
    return password;
  }

  /**
   * Required. Input only. The password for the user that Datastream service should use for the
   * MySQL connection. This field is not returned on request.
   * @param password password or {@code null} for none
   */
  public CdcConfig setPassword(java.lang.String password) {
    this.password = password;
    return this;
  }

  /**
   * Required. The URL of the subnetwork resource to create the VM instance hosting the reverse
   * proxy in. More context in https://cloud.google.com/datastream/docs/private-connectivity
   * #reverse-csql-proxy The subnetwork should reside in the network provided in the request that
   * Datastream will peer to and should be in the same region as Datastream, in the following
   * format. projects/{project_id}/regions/{region_id}/subnetworks/{subnetwork_id}
   * @return value or {@code null} for none
   */
  public java.lang.String getReverseProxySubnet() {
    return reverseProxySubnet;
  }

  /**
   * Required. The URL of the subnetwork resource to create the VM instance hosting the reverse
   * proxy in. More context in https://cloud.google.com/datastream/docs/private-connectivity
   * #reverse-csql-proxy The subnetwork should reside in the network provided in the request that
   * Datastream will peer to and should be in the same region as Datastream, in the following
   * format. projects/{project_id}/regions/{region_id}/subnetworks/{subnetwork_id}
   * @param reverseProxySubnet reverseProxySubnet or {@code null} for none
   */
  public CdcConfig setReverseProxySubnet(java.lang.String reverseProxySubnet) {
    this.reverseProxySubnet = reverseProxySubnet;
    return this;
  }

  /**
   * Optional. The root path inside the Cloud Storage bucket. The stream event data will be written
   * to this path. The default value is /migration.
   * @return value or {@code null} for none
   */
  public java.lang.String getRootPath() {
    return rootPath;
  }

  /**
   * Optional. The root path inside the Cloud Storage bucket. The stream event data will be written
   * to this path. The default value is /migration.
   * @param rootPath rootPath or {@code null} for none
   */
  public CdcConfig setRootPath(java.lang.String rootPath) {
    this.rootPath = rootPath;
    return this;
  }

  /**
   * Required. A /29 CIDR IP range for peering with datastream.
   * @return value or {@code null} for none
   */
  public java.lang.String getSubnetIpRange() {
    return subnetIpRange;
  }

  /**
   * Required. A /29 CIDR IP range for peering with datastream.
   * @param subnetIpRange subnetIpRange or {@code null} for none
   */
  public CdcConfig setSubnetIpRange(java.lang.String subnetIpRange) {
    this.subnetIpRange = subnetIpRange;
    return this;
  }

  /**
   * Required. The username that the Datastream service should use for the MySQL connection.
   * @return value or {@code null} for none
   */
  public java.lang.String getUsername() {
    return username;
  }

  /**
   * Required. The username that the Datastream service should use for the MySQL connection.
   * @param username username or {@code null} for none
   */
  public CdcConfig setUsername(java.lang.String username) {
    this.username = username;
    return this;
  }

  /**
   * Required. Fully qualified name of the Cloud SQL instance's VPC network or the shared VPC
   * network that Datastream will peer to, in the following format:
   * projects/{project_id}/locations/global/networks/{network_id}. More context in
   * https://cloud.google.com/datastream/docs/network-connectivity-options#privateconnectivity
   * @return value or {@code null} for none
   */
  public java.lang.String getVpcNetwork() {
    return vpcNetwork;
  }

  /**
   * Required. Fully qualified name of the Cloud SQL instance's VPC network or the shared VPC
   * network that Datastream will peer to, in the following format:
   * projects/{project_id}/locations/global/networks/{network_id}. More context in
   * https://cloud.google.com/datastream/docs/network-connectivity-options#privateconnectivity
   * @param vpcNetwork vpcNetwork or {@code null} for none
   */
  public CdcConfig setVpcNetwork(java.lang.String vpcNetwork) {
    this.vpcNetwork = vpcNetwork;
    return this;
  }

  @Override
  public CdcConfig set(String fieldName, Object value) {
    return (CdcConfig) super.set(fieldName, value);
  }

  @Override
  public CdcConfig clone() {
    return (CdcConfig) super.clone();
  }

}
