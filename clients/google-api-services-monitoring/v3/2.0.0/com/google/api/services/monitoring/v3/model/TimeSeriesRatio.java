/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.monitoring.v3.model;

/**
 * A TimeSeriesRatio specifies two TimeSeries to use for computing the good_service / total_service
 * ratio. The specified TimeSeries must have ValueType = DOUBLE or ValueType = INT64 and must have
 * MetricKind = DELTA or MetricKind = CUMULATIVE. The TimeSeriesRatio must specify exactly two of
 * good, bad, and total, and the relationship good_service + bad_service = total_service will be
 * assumed.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Monitoring API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class TimeSeriesRatio extends com.google.api.client.json.GenericJson {

  /**
   * A monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) specifying a
   * TimeSeries quantifying bad service, either demanded service that was not provided or demanded
   * service that was of inadequate quality. Must have ValueType = DOUBLE or ValueType = INT64 and
   * must have MetricKind = DELTA or MetricKind = CUMULATIVE.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String badServiceFilter;

  /**
   * A monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) specifying a
   * TimeSeries quantifying good service provided. Must have ValueType = DOUBLE or ValueType = INT64
   * and must have MetricKind = DELTA or MetricKind = CUMULATIVE.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String goodServiceFilter;

  /**
   * A monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) specifying a
   * TimeSeries quantifying total demanded service. Must have ValueType = DOUBLE or ValueType =
   * INT64 and must have MetricKind = DELTA or MetricKind = CUMULATIVE.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String totalServiceFilter;

  /**
   * A monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) specifying a
   * TimeSeries quantifying bad service, either demanded service that was not provided or demanded
   * service that was of inadequate quality. Must have ValueType = DOUBLE or ValueType = INT64 and
   * must have MetricKind = DELTA or MetricKind = CUMULATIVE.
   * @return value or {@code null} for none
   */
  public java.lang.String getBadServiceFilter() {
    return badServiceFilter;
  }

  /**
   * A monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) specifying a
   * TimeSeries quantifying bad service, either demanded service that was not provided or demanded
   * service that was of inadequate quality. Must have ValueType = DOUBLE or ValueType = INT64 and
   * must have MetricKind = DELTA or MetricKind = CUMULATIVE.
   * @param badServiceFilter badServiceFilter or {@code null} for none
   */
  public TimeSeriesRatio setBadServiceFilter(java.lang.String badServiceFilter) {
    this.badServiceFilter = badServiceFilter;
    return this;
  }

  /**
   * A monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) specifying a
   * TimeSeries quantifying good service provided. Must have ValueType = DOUBLE or ValueType = INT64
   * and must have MetricKind = DELTA or MetricKind = CUMULATIVE.
   * @return value or {@code null} for none
   */
  public java.lang.String getGoodServiceFilter() {
    return goodServiceFilter;
  }

  /**
   * A monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) specifying a
   * TimeSeries quantifying good service provided. Must have ValueType = DOUBLE or ValueType = INT64
   * and must have MetricKind = DELTA or MetricKind = CUMULATIVE.
   * @param goodServiceFilter goodServiceFilter or {@code null} for none
   */
  public TimeSeriesRatio setGoodServiceFilter(java.lang.String goodServiceFilter) {
    this.goodServiceFilter = goodServiceFilter;
    return this;
  }

  /**
   * A monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) specifying a
   * TimeSeries quantifying total demanded service. Must have ValueType = DOUBLE or ValueType =
   * INT64 and must have MetricKind = DELTA or MetricKind = CUMULATIVE.
   * @return value or {@code null} for none
   */
  public java.lang.String getTotalServiceFilter() {
    return totalServiceFilter;
  }

  /**
   * A monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) specifying a
   * TimeSeries quantifying total demanded service. Must have ValueType = DOUBLE or ValueType =
   * INT64 and must have MetricKind = DELTA or MetricKind = CUMULATIVE.
   * @param totalServiceFilter totalServiceFilter or {@code null} for none
   */
  public TimeSeriesRatio setTotalServiceFilter(java.lang.String totalServiceFilter) {
    this.totalServiceFilter = totalServiceFilter;
    return this;
  }

  @Override
  public TimeSeriesRatio set(String fieldName, Object value) {
    return (TimeSeriesRatio) super.set(fieldName, value);
  }

  @Override
  public TimeSeriesRatio clone() {
    return (TimeSeriesRatio) super.clone();
  }

}
