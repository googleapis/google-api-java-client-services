/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.gamesConfiguration.model;

/**
 * This is a JSON template for an leaderboard configuration resource.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Play Game Services Publishing API. For a
 * detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class LeaderboardConfiguration extends com.google.api.client.json.GenericJson {

  /**
   * The draft data of the leaderboard.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private LeaderboardConfigurationDetail draft;

  /**
   * The ID of the leaderboard.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String id;

  /**
   * Uniquely identifies the type of this resource. Value is always the fixed string
   * gamesConfiguration#leaderboardConfiguration.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String kind;

  /**
   * The read-only published data of the leaderboard.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private LeaderboardConfigurationDetail published;

  /**
   * Maximum score that can be posted to this leaderboard.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long scoreMax;

  /**
   * Minimum score that can be posted to this leaderboard.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long scoreMin;

  /**
   * The type of the leaderboard. Possible values are:   - "LARGER_IS_BETTER" - Larger scores posted
   * are ranked higher.  - "SMALLER_IS_BETTER" - Smaller scores posted are ranked higher.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String scoreOrder;

  /**
   * The token for this resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String token;

  /**
   * The draft data of the leaderboard.
   * @return value or {@code null} for none
   */
  public LeaderboardConfigurationDetail getDraft() {
    return draft;
  }

  /**
   * The draft data of the leaderboard.
   * @param draft draft or {@code null} for none
   */
  public LeaderboardConfiguration setDraft(LeaderboardConfigurationDetail draft) {
    this.draft = draft;
    return this;
  }

  /**
   * The ID of the leaderboard.
   * @return value or {@code null} for none
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * The ID of the leaderboard.
   * @param id id or {@code null} for none
   */
  public LeaderboardConfiguration setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  /**
   * Uniquely identifies the type of this resource. Value is always the fixed string
   * gamesConfiguration#leaderboardConfiguration.
   * @return value or {@code null} for none
   */
  public java.lang.String getKind() {
    return kind;
  }

  /**
   * Uniquely identifies the type of this resource. Value is always the fixed string
   * gamesConfiguration#leaderboardConfiguration.
   * @param kind kind or {@code null} for none
   */
  public LeaderboardConfiguration setKind(java.lang.String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * The read-only published data of the leaderboard.
   * @return value or {@code null} for none
   */
  public LeaderboardConfigurationDetail getPublished() {
    return published;
  }

  /**
   * The read-only published data of the leaderboard.
   * @param published published or {@code null} for none
   */
  public LeaderboardConfiguration setPublished(LeaderboardConfigurationDetail published) {
    this.published = published;
    return this;
  }

  /**
   * Maximum score that can be posted to this leaderboard.
   * @return value or {@code null} for none
   */
  public java.lang.Long getScoreMax() {
    return scoreMax;
  }

  /**
   * Maximum score that can be posted to this leaderboard.
   * @param scoreMax scoreMax or {@code null} for none
   */
  public LeaderboardConfiguration setScoreMax(java.lang.Long scoreMax) {
    this.scoreMax = scoreMax;
    return this;
  }

  /**
   * Minimum score that can be posted to this leaderboard.
   * @return value or {@code null} for none
   */
  public java.lang.Long getScoreMin() {
    return scoreMin;
  }

  /**
   * Minimum score that can be posted to this leaderboard.
   * @param scoreMin scoreMin or {@code null} for none
   */
  public LeaderboardConfiguration setScoreMin(java.lang.Long scoreMin) {
    this.scoreMin = scoreMin;
    return this;
  }

  /**
   * The type of the leaderboard. Possible values are:   - "LARGER_IS_BETTER" - Larger scores posted
   * are ranked higher.  - "SMALLER_IS_BETTER" - Smaller scores posted are ranked higher.
   * @return value or {@code null} for none
   */
  public java.lang.String getScoreOrder() {
    return scoreOrder;
  }

  /**
   * The type of the leaderboard. Possible values are:   - "LARGER_IS_BETTER" - Larger scores posted
   * are ranked higher.  - "SMALLER_IS_BETTER" - Smaller scores posted are ranked higher.
   * @param scoreOrder scoreOrder or {@code null} for none
   */
  public LeaderboardConfiguration setScoreOrder(java.lang.String scoreOrder) {
    this.scoreOrder = scoreOrder;
    return this;
  }

  /**
   * The token for this resource.
   * @return value or {@code null} for none
   */
  public java.lang.String getToken() {
    return token;
  }

  /**
   * The token for this resource.
   * @param token token or {@code null} for none
   */
  public LeaderboardConfiguration setToken(java.lang.String token) {
    this.token = token;
    return this;
  }

  @Override
  public LeaderboardConfiguration set(String fieldName, Object value) {
    return (LeaderboardConfiguration) super.set(fieldName, value);
  }

  @Override
  public LeaderboardConfiguration clone() {
    return (LeaderboardConfiguration) super.clone();
  }

}
