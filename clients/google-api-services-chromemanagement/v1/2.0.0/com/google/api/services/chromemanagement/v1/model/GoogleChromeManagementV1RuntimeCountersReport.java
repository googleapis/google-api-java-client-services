/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.chromemanagement.v1.model;

/**
 * Runtime counters retrieved from CPU. Currently the runtime counters telemetry is only supported
 * by Intel vPro PSR on Gen 14+.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Chrome Management API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleChromeManagementV1RuntimeCountersReport extends com.google.api.client.json.GenericJson {

  /**
   * Number of times that the device has entered into the hibernation state. Currently obtained via
   * the PSR, count from S0->S4.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long enterHibernationCount;

  /**
   * Number of times that the device has entered into the power-off state. Currently obtained via
   * the PSR, count from S0->S5.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long enterPoweroffCount;

  /**
   * Number of times that the device has entered into the sleep state. Currently obtained via the
   * PSR, count from S0->S3.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long enterSleepCount;

  /**
   * Timestamp when the report was collected.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String reportTime;

  /**
   * Total lifetime runtime. Currently always S0 runtime from Intel vPro PSR.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String uptimeRuntimeDuration;

  /**
   * Number of times that the device has entered into the hibernation state. Currently obtained via
   * the PSR, count from S0->S4.
   * @return value or {@code null} for none
   */
  public java.lang.Long getEnterHibernationCount() {
    return enterHibernationCount;
  }

  /**
   * Number of times that the device has entered into the hibernation state. Currently obtained via
   * the PSR, count from S0->S4.
   * @param enterHibernationCount enterHibernationCount or {@code null} for none
   */
  public GoogleChromeManagementV1RuntimeCountersReport setEnterHibernationCount(java.lang.Long enterHibernationCount) {
    this.enterHibernationCount = enterHibernationCount;
    return this;
  }

  /**
   * Number of times that the device has entered into the power-off state. Currently obtained via
   * the PSR, count from S0->S5.
   * @return value or {@code null} for none
   */
  public java.lang.Long getEnterPoweroffCount() {
    return enterPoweroffCount;
  }

  /**
   * Number of times that the device has entered into the power-off state. Currently obtained via
   * the PSR, count from S0->S5.
   * @param enterPoweroffCount enterPoweroffCount or {@code null} for none
   */
  public GoogleChromeManagementV1RuntimeCountersReport setEnterPoweroffCount(java.lang.Long enterPoweroffCount) {
    this.enterPoweroffCount = enterPoweroffCount;
    return this;
  }

  /**
   * Number of times that the device has entered into the sleep state. Currently obtained via the
   * PSR, count from S0->S3.
   * @return value or {@code null} for none
   */
  public java.lang.Long getEnterSleepCount() {
    return enterSleepCount;
  }

  /**
   * Number of times that the device has entered into the sleep state. Currently obtained via the
   * PSR, count from S0->S3.
   * @param enterSleepCount enterSleepCount or {@code null} for none
   */
  public GoogleChromeManagementV1RuntimeCountersReport setEnterSleepCount(java.lang.Long enterSleepCount) {
    this.enterSleepCount = enterSleepCount;
    return this;
  }

  /**
   * Timestamp when the report was collected.
   * @return value or {@code null} for none
   */
  public String getReportTime() {
    return reportTime;
  }

  /**
   * Timestamp when the report was collected.
   * @param reportTime reportTime or {@code null} for none
   */
  public GoogleChromeManagementV1RuntimeCountersReport setReportTime(String reportTime) {
    this.reportTime = reportTime;
    return this;
  }

  /**
   * Total lifetime runtime. Currently always S0 runtime from Intel vPro PSR.
   * @return value or {@code null} for none
   */
  public String getUptimeRuntimeDuration() {
    return uptimeRuntimeDuration;
  }

  /**
   * Total lifetime runtime. Currently always S0 runtime from Intel vPro PSR.
   * @param uptimeRuntimeDuration uptimeRuntimeDuration or {@code null} for none
   */
  public GoogleChromeManagementV1RuntimeCountersReport setUptimeRuntimeDuration(String uptimeRuntimeDuration) {
    this.uptimeRuntimeDuration = uptimeRuntimeDuration;
    return this;
  }

  @Override
  public GoogleChromeManagementV1RuntimeCountersReport set(String fieldName, Object value) {
    return (GoogleChromeManagementV1RuntimeCountersReport) super.set(fieldName, value);
  }

  @Override
  public GoogleChromeManagementV1RuntimeCountersReport clone() {
    return (GoogleChromeManagementV1RuntimeCountersReport) super.clone();
  }

}
