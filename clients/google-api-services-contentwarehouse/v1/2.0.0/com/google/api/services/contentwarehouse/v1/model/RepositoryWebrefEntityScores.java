/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Keeps a set of scores about an entity. Next available tag: 20.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class RepositoryWebrefEntityScores extends com.google.api.client.json.GenericJson {

  /**
   * Probability that any given name of this entity is fully capitalized.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float allCapsProb;

  /**
   * This field is only for debugging and link weight experiments. It stores the entity's idf from
   * the alpha model. Alpha idfs are used for link weight computations and available during model
   * omega building via enricher_current_entity_idf_for_link_direction.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float alphaEntityIdf;

  /**
   * Probability that the entity is a common ngram (e.g. from dictionary).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float commonNgramProb;

  /**
   * The final (model omega) idf of an entity. Equals log2(1 / probability of the entity to appear
   * in a document). This probability is currently estimated from its names (i.e. it is a sum of the
   * name frequency weighted by P(entity | name)).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float entityIdf;

  /**
   * Probability that any given name of this entity is capitalized.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float nameCapitalizationProb;

  /**
   * The following fields are deprecated and should eventually be removed. They use data and rules
   * that have not been refreshed for ~10y and KG has changed a lot in the meantime.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float personProb;

  /**
   * Probability that any given name of this entity is fully capitalized.
   * @return value or {@code null} for none
   */
  public java.lang.Float getAllCapsProb() {
    return allCapsProb;
  }

  /**
   * Probability that any given name of this entity is fully capitalized.
   * @param allCapsProb allCapsProb or {@code null} for none
   */
  public RepositoryWebrefEntityScores setAllCapsProb(java.lang.Float allCapsProb) {
    this.allCapsProb = allCapsProb;
    return this;
  }

  /**
   * This field is only for debugging and link weight experiments. It stores the entity's idf from
   * the alpha model. Alpha idfs are used for link weight computations and available during model
   * omega building via enricher_current_entity_idf_for_link_direction.
   * @return value or {@code null} for none
   */
  public java.lang.Float getAlphaEntityIdf() {
    return alphaEntityIdf;
  }

  /**
   * This field is only for debugging and link weight experiments. It stores the entity's idf from
   * the alpha model. Alpha idfs are used for link weight computations and available during model
   * omega building via enricher_current_entity_idf_for_link_direction.
   * @param alphaEntityIdf alphaEntityIdf or {@code null} for none
   */
  public RepositoryWebrefEntityScores setAlphaEntityIdf(java.lang.Float alphaEntityIdf) {
    this.alphaEntityIdf = alphaEntityIdf;
    return this;
  }

  /**
   * Probability that the entity is a common ngram (e.g. from dictionary).
   * @return value or {@code null} for none
   */
  public java.lang.Float getCommonNgramProb() {
    return commonNgramProb;
  }

  /**
   * Probability that the entity is a common ngram (e.g. from dictionary).
   * @param commonNgramProb commonNgramProb or {@code null} for none
   */
  public RepositoryWebrefEntityScores setCommonNgramProb(java.lang.Float commonNgramProb) {
    this.commonNgramProb = commonNgramProb;
    return this;
  }

  /**
   * The final (model omega) idf of an entity. Equals log2(1 / probability of the entity to appear
   * in a document). This probability is currently estimated from its names (i.e. it is a sum of the
   * name frequency weighted by P(entity | name)).
   * @return value or {@code null} for none
   */
  public java.lang.Float getEntityIdf() {
    return entityIdf;
  }

  /**
   * The final (model omega) idf of an entity. Equals log2(1 / probability of the entity to appear
   * in a document). This probability is currently estimated from its names (i.e. it is a sum of the
   * name frequency weighted by P(entity | name)).
   * @param entityIdf entityIdf or {@code null} for none
   */
  public RepositoryWebrefEntityScores setEntityIdf(java.lang.Float entityIdf) {
    this.entityIdf = entityIdf;
    return this;
  }

  /**
   * Probability that any given name of this entity is capitalized.
   * @return value or {@code null} for none
   */
  public java.lang.Float getNameCapitalizationProb() {
    return nameCapitalizationProb;
  }

  /**
   * Probability that any given name of this entity is capitalized.
   * @param nameCapitalizationProb nameCapitalizationProb or {@code null} for none
   */
  public RepositoryWebrefEntityScores setNameCapitalizationProb(java.lang.Float nameCapitalizationProb) {
    this.nameCapitalizationProb = nameCapitalizationProb;
    return this;
  }

  /**
   * The following fields are deprecated and should eventually be removed. They use data and rules
   * that have not been refreshed for ~10y and KG has changed a lot in the meantime.
   * @return value or {@code null} for none
   */
  public java.lang.Float getPersonProb() {
    return personProb;
  }

  /**
   * The following fields are deprecated and should eventually be removed. They use data and rules
   * that have not been refreshed for ~10y and KG has changed a lot in the meantime.
   * @param personProb personProb or {@code null} for none
   */
  public RepositoryWebrefEntityScores setPersonProb(java.lang.Float personProb) {
    this.personProb = personProb;
    return this;
  }

  @Override
  public RepositoryWebrefEntityScores set(String fieldName, Object value) {
    return (RepositoryWebrefEntityScores) super.set(fieldName, value);
  }

  @Override
  public RepositoryWebrefEntityScores clone() {
    return (RepositoryWebrefEntityScores) super.clone();
  }

}
