/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.retail.v2alpha.model;

/**
 * This field specifies all conversational related parameters addition to traditional retail search.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Vertex AI Search for Retail API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudRetailV2alphaSearchRequestConversationalSearchSpec extends com.google.api.client.json.GenericJson {

  /**
   * This field specifies the conversation id, which maintains the state of the conversation between
   * client side and server side. Use the value from the previous
   * ConversationalSearchResult.conversation_id. For the initial request, this should be empty.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String conversationId;

  /**
   * This field specifies whether the customer would like to do conversational search. If this field
   * is set to true, conversational related extra information will be returned from server side,
   * including follow-up question, answer options, etc.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean followupConversationRequested;

  /**
   * This field specifies the current user answer during the conversational search. This can be
   * either user selected from suggested answers or user input plain text.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudRetailV2alphaSearchRequestConversationalSearchSpecUserAnswer userAnswer;

  /**
   * This field specifies the conversation id, which maintains the state of the conversation between
   * client side and server side. Use the value from the previous
   * ConversationalSearchResult.conversation_id. For the initial request, this should be empty.
   * @return value or {@code null} for none
   */
  public java.lang.String getConversationId() {
    return conversationId;
  }

  /**
   * This field specifies the conversation id, which maintains the state of the conversation between
   * client side and server side. Use the value from the previous
   * ConversationalSearchResult.conversation_id. For the initial request, this should be empty.
   * @param conversationId conversationId or {@code null} for none
   */
  public GoogleCloudRetailV2alphaSearchRequestConversationalSearchSpec setConversationId(java.lang.String conversationId) {
    this.conversationId = conversationId;
    return this;
  }

  /**
   * This field specifies whether the customer would like to do conversational search. If this field
   * is set to true, conversational related extra information will be returned from server side,
   * including follow-up question, answer options, etc.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getFollowupConversationRequested() {
    return followupConversationRequested;
  }

  /**
   * This field specifies whether the customer would like to do conversational search. If this field
   * is set to true, conversational related extra information will be returned from server side,
   * including follow-up question, answer options, etc.
   * @param followupConversationRequested followupConversationRequested or {@code null} for none
   */
  public GoogleCloudRetailV2alphaSearchRequestConversationalSearchSpec setFollowupConversationRequested(java.lang.Boolean followupConversationRequested) {
    this.followupConversationRequested = followupConversationRequested;
    return this;
  }

  /**
   * This field specifies the current user answer during the conversational search. This can be
   * either user selected from suggested answers or user input plain text.
   * @return value or {@code null} for none
   */
  public GoogleCloudRetailV2alphaSearchRequestConversationalSearchSpecUserAnswer getUserAnswer() {
    return userAnswer;
  }

  /**
   * This field specifies the current user answer during the conversational search. This can be
   * either user selected from suggested answers or user input plain text.
   * @param userAnswer userAnswer or {@code null} for none
   */
  public GoogleCloudRetailV2alphaSearchRequestConversationalSearchSpec setUserAnswer(GoogleCloudRetailV2alphaSearchRequestConversationalSearchSpecUserAnswer userAnswer) {
    this.userAnswer = userAnswer;
    return this;
  }

  @Override
  public GoogleCloudRetailV2alphaSearchRequestConversationalSearchSpec set(String fieldName, Object value) {
    return (GoogleCloudRetailV2alphaSearchRequestConversationalSearchSpec) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudRetailV2alphaSearchRequestConversationalSearchSpec clone() {
    return (GoogleCloudRetailV2alphaSearchRequestConversationalSearchSpec) super.clone();
  }

}
