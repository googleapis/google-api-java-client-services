/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.discoveryengine.v1.model;

/**
 * Configuration for the layout based chunking.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Discovery Engine API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigChunkingConfigLayoutBasedChunkingConfig extends com.google.api.client.json.GenericJson {

  /**
   * The token size limit for each chunk. Supported values: 100-500 (inclusive). Default value: 500.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer chunkSize;

  /**
   * Whether to include appending different levels of headings to chunks from the middle of the
   * document to prevent context loss. Default value: False.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean includeAncestorHeadings;

  /**
   * The token size limit for each chunk. Supported values: 100-500 (inclusive). Default value: 500.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getChunkSize() {
    return chunkSize;
  }

  /**
   * The token size limit for each chunk. Supported values: 100-500 (inclusive). Default value: 500.
   * @param chunkSize chunkSize or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigChunkingConfigLayoutBasedChunkingConfig setChunkSize(java.lang.Integer chunkSize) {
    this.chunkSize = chunkSize;
    return this;
  }

  /**
   * Whether to include appending different levels of headings to chunks from the middle of the
   * document to prevent context loss. Default value: False.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIncludeAncestorHeadings() {
    return includeAncestorHeadings;
  }

  /**
   * Whether to include appending different levels of headings to chunks from the middle of the
   * document to prevent context loss. Default value: False.
   * @param includeAncestorHeadings includeAncestorHeadings or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigChunkingConfigLayoutBasedChunkingConfig setIncludeAncestorHeadings(java.lang.Boolean includeAncestorHeadings) {
    this.includeAncestorHeadings = includeAncestorHeadings;
    return this;
  }

  @Override
  public GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigChunkingConfigLayoutBasedChunkingConfig set(String fieldName, Object value) {
    return (GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigChunkingConfigLayoutBasedChunkingConfig) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigChunkingConfigLayoutBasedChunkingConfig clone() {
    return (GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigChunkingConfigLayoutBasedChunkingConfig) super.clone();
  }

}
