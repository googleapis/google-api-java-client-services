/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.healthcare.v1beta1.model;

/**
 * This option is based on the DICOM Standard's [Clean Descriptors
 * Option](http://dicom.nema.org/medical/dicom/2018e/output/chtml/part15/sect_E.3.5.html), and the
 * `CleanText` `Action` is applied to all the specified fields. When cleaning text, the process
 * attempts to transform phrases matching any of the tags marked for removal (action codes D, Z, X,
 * and U) in the [Basic
 * Profile](http://dicom.nema.org/medical/dicom/2018e/output/chtml/part15/chapter_E.html). These
 * contextual phrases are replaced with the token "[CTX]". This option uses an additional `InfoType`
 * during inspection.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Healthcare API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class CleanDescriptorsOption extends com.google.api.client.json.GenericJson {

  @Override
  public CleanDescriptorsOption set(String fieldName, Object value) {
    return (CleanDescriptorsOption) super.set(fieldName, value);
  }

  @Override
  public CleanDescriptorsOption clone() {
    return (CleanDescriptorsOption) super.clone();
  }

}
