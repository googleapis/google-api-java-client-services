/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.documentai.v1beta2.model;

/**
 * Encodes the detailed information of a barcode.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Document AI API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDocumentaiV1beta2Barcode extends com.google.api.client.json.GenericJson {

  /**
   * Format of a barcode. The supported formats are: CODE_128: Code 128 type. CODE_39: Code 39 type.
   * CODE_93: Code 93 type. CODABAR: Codabar type. DATA_MATRIX: 2D Data Matrix type. ITF: ITF type.
   * EAN_13: EAN-13 type. EAN_8: EAN-8 type. QR_CODE: 2D QR code type. UPC_A: UPC-A type. UPC_E:
   * UPC-E type. PDF417: PDF417 type. AZTEC: 2D Aztec code type. DATABAR: GS1 DataBar code type.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String format;

  /**
   * Raw value encoded in the barcode. For example,
   * 'MEBKM:TITLE:Google;URL:https://www.google.com;;'.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String rawValue;

  /**
   * Value format describes the format of the value that a barcode encodes. The supported formats
   * are: CONTACT_INFO: Contact information. EMAIL: Email address. ISBN: ISBN identifier. PHONE:
   * Phone number. PRODUCT: Product. SMS: SMS message. TEXT: Text string. URL: URL address. WIFI:
   * Wifi information. GEO: Geo-localization. CALENDAR_EVENT: Calendar event. DRIVER_LICENSE:
   * Driver's license.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String valueFormat;

  /**
   * Format of a barcode. The supported formats are: CODE_128: Code 128 type. CODE_39: Code 39 type.
   * CODE_93: Code 93 type. CODABAR: Codabar type. DATA_MATRIX: 2D Data Matrix type. ITF: ITF type.
   * EAN_13: EAN-13 type. EAN_8: EAN-8 type. QR_CODE: 2D QR code type. UPC_A: UPC-A type. UPC_E:
   * UPC-E type. PDF417: PDF417 type. AZTEC: 2D Aztec code type. DATABAR: GS1 DataBar code type.
   * @return value or {@code null} for none
   */
  public java.lang.String getFormat() {
    return format;
  }

  /**
   * Format of a barcode. The supported formats are: CODE_128: Code 128 type. CODE_39: Code 39 type.
   * CODE_93: Code 93 type. CODABAR: Codabar type. DATA_MATRIX: 2D Data Matrix type. ITF: ITF type.
   * EAN_13: EAN-13 type. EAN_8: EAN-8 type. QR_CODE: 2D QR code type. UPC_A: UPC-A type. UPC_E:
   * UPC-E type. PDF417: PDF417 type. AZTEC: 2D Aztec code type. DATABAR: GS1 DataBar code type.
   * @param format format or {@code null} for none
   */
  public GoogleCloudDocumentaiV1beta2Barcode setFormat(java.lang.String format) {
    this.format = format;
    return this;
  }

  /**
   * Raw value encoded in the barcode. For example,
   * 'MEBKM:TITLE:Google;URL:https://www.google.com;;'.
   * @return value or {@code null} for none
   */
  public java.lang.String getRawValue() {
    return rawValue;
  }

  /**
   * Raw value encoded in the barcode. For example,
   * 'MEBKM:TITLE:Google;URL:https://www.google.com;;'.
   * @param rawValue rawValue or {@code null} for none
   */
  public GoogleCloudDocumentaiV1beta2Barcode setRawValue(java.lang.String rawValue) {
    this.rawValue = rawValue;
    return this;
  }

  /**
   * Value format describes the format of the value that a barcode encodes. The supported formats
   * are: CONTACT_INFO: Contact information. EMAIL: Email address. ISBN: ISBN identifier. PHONE:
   * Phone number. PRODUCT: Product. SMS: SMS message. TEXT: Text string. URL: URL address. WIFI:
   * Wifi information. GEO: Geo-localization. CALENDAR_EVENT: Calendar event. DRIVER_LICENSE:
   * Driver's license.
   * @return value or {@code null} for none
   */
  public java.lang.String getValueFormat() {
    return valueFormat;
  }

  /**
   * Value format describes the format of the value that a barcode encodes. The supported formats
   * are: CONTACT_INFO: Contact information. EMAIL: Email address. ISBN: ISBN identifier. PHONE:
   * Phone number. PRODUCT: Product. SMS: SMS message. TEXT: Text string. URL: URL address. WIFI:
   * Wifi information. GEO: Geo-localization. CALENDAR_EVENT: Calendar event. DRIVER_LICENSE:
   * Driver's license.
   * @param valueFormat valueFormat or {@code null} for none
   */
  public GoogleCloudDocumentaiV1beta2Barcode setValueFormat(java.lang.String valueFormat) {
    this.valueFormat = valueFormat;
    return this;
  }

  @Override
  public GoogleCloudDocumentaiV1beta2Barcode set(String fieldName, Object value) {
    return (GoogleCloudDocumentaiV1beta2Barcode) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDocumentaiV1beta2Barcode clone() {
    return (GoogleCloudDocumentaiV1beta2Barcode) super.clone();
  }

}
