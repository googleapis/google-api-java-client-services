/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Model definition for VideoPipelineViperThumbnailerColumnData.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class VideoPipelineViperThumbnailerColumnData extends com.google.api.client.json.GenericJson {

  /**
   * The blobRef where the representative frame is stored. This is repeated in order to support
   * multiple thumbnails in the future.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<BlobstoreBlobRef> frameBlobRefs;

  static {
    // hack to force ProGuard to consider BlobstoreBlobRef used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(BlobstoreBlobRef.class);
  }

  /**
   * Video frame files (based on file_dir_to_save_frames parameter)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private VideoThumbnailsFrameFileList frameFileList;

  /**
   * Frame type generated (VR/360/3D/default).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String frameTypeGenerated;

  /**
   * True if the thumbnails are generated from drishti_thumbnailer.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean generatedFromDrishtiThumbnailer;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean highResPreviewThumbnailGenerated;

  /**
   * hq720.jpg is a 1280x720 pixel image generated only when the input video resolution is 1280x720
   * or higher.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean hq720Generated;

  /**
   * The flags below indicate whether certain optional thumbnail images were generated.
   * hqdefault.jpg is a 480x360 pixel high quality image which should normally be always generated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean hqdefaultGenerated;

  /**
   * True if a set of backup HVC thumbnails is generated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean hvcBackupGenerated;

  /**
   * True if the thumbnails are generated with background crop and scrim.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean improvedVerticalGenerated;

  /**
   * maxresdefault.jpg is an image of the same resolution as the input video. It is generated only
   * when the input video is significantly higher-resolution than 640x480.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean maxresdefaultGenerated;

  /**
   * Height of the generated maxresdefault thumbnail.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer maxresdefaultHeight;

  /**
   * Width of the generated maxresdefault thumbnail.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer maxresdefaultWidth;

  /**
   * True if moving thumbnails are generated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean movingThumbnailGenerated;

  /**
   * True if private thumbnails were generated and stored in the thumbnail database.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean privateThumbnailsGenerated;

  /**
   * True if public thumbnails were generated and stored in the thumbnail database.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean publicThumbnailsGenerated;

  /**
   * Analysis result of running the rerun thumbnailer
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String rerunStatus;

  /**
   * sddefault.jpg is a 640x480 pixel image generated only when the input video resolution is
   * 640x480 or higher.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean sddefaultGenerated;

  /**
   * This flag indicates if storyboard mosaic images were generated and stored in the thumbnail
   * database.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean storyboardGenerated;

  /**
   * Number of levels of storyboard generated (0 if policy default).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer storyboardNumLevels;

  /**
   * Policy number that governed the storyboard generation. If zero, no policy was used and the
   * storyboard format is not fully specified by the parameters contained in this message.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer storyboardPolicy;

  /**
   * Version of the storyboard.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer storyboardVersion;

  /**
   * Video duration of the video.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer storyboardVideoDurationMs;

  /**
   * Height of the video that was storyboarded.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer storyboardVideoHeight;

  /**
   * Width of the video that was storyboarded.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer storyboardVideoWidth;

  /**
   * This flag indicates if images in WebP format were created and stored in the thumbnail database.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean webpGenerated;

  /**
   * The blobRef where the representative frame is stored. This is repeated in order to support
   * multiple thumbnails in the future.
   * @return value or {@code null} for none
   */
  public java.util.List<BlobstoreBlobRef> getFrameBlobRefs() {
    return frameBlobRefs;
  }

  /**
   * The blobRef where the representative frame is stored. This is repeated in order to support
   * multiple thumbnails in the future.
   * @param frameBlobRefs frameBlobRefs or {@code null} for none
   */
  public VideoPipelineViperThumbnailerColumnData setFrameBlobRefs(java.util.List<BlobstoreBlobRef> frameBlobRefs) {
    this.frameBlobRefs = frameBlobRefs;
    return this;
  }

  /**
   * Video frame files (based on file_dir_to_save_frames parameter)
   * @return value or {@code null} for none
   */
  public VideoThumbnailsFrameFileList getFrameFileList() {
    return frameFileList;
  }

  /**
   * Video frame files (based on file_dir_to_save_frames parameter)
   * @param frameFileList frameFileList or {@code null} for none
   */
  public VideoPipelineViperThumbnailerColumnData setFrameFileList(VideoThumbnailsFrameFileList frameFileList) {
    this.frameFileList = frameFileList;
    return this;
  }

  /**
   * Frame type generated (VR/360/3D/default).
   * @return value or {@code null} for none
   */
  public java.lang.String getFrameTypeGenerated() {
    return frameTypeGenerated;
  }

  /**
   * Frame type generated (VR/360/3D/default).
   * @param frameTypeGenerated frameTypeGenerated or {@code null} for none
   */
  public VideoPipelineViperThumbnailerColumnData setFrameTypeGenerated(java.lang.String frameTypeGenerated) {
    this.frameTypeGenerated = frameTypeGenerated;
    return this;
  }

  /**
   * True if the thumbnails are generated from drishti_thumbnailer.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getGeneratedFromDrishtiThumbnailer() {
    return generatedFromDrishtiThumbnailer;
  }

  /**
   * True if the thumbnails are generated from drishti_thumbnailer.
   * @param generatedFromDrishtiThumbnailer generatedFromDrishtiThumbnailer or {@code null} for none
   */
  public VideoPipelineViperThumbnailerColumnData setGeneratedFromDrishtiThumbnailer(java.lang.Boolean generatedFromDrishtiThumbnailer) {
    this.generatedFromDrishtiThumbnailer = generatedFromDrishtiThumbnailer;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getHighResPreviewThumbnailGenerated() {
    return highResPreviewThumbnailGenerated;
  }

  /**
   * @param highResPreviewThumbnailGenerated highResPreviewThumbnailGenerated or {@code null} for none
   */
  public VideoPipelineViperThumbnailerColumnData setHighResPreviewThumbnailGenerated(java.lang.Boolean highResPreviewThumbnailGenerated) {
    this.highResPreviewThumbnailGenerated = highResPreviewThumbnailGenerated;
    return this;
  }

  /**
   * hq720.jpg is a 1280x720 pixel image generated only when the input video resolution is 1280x720
   * or higher.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getHq720Generated() {
    return hq720Generated;
  }

  /**
   * hq720.jpg is a 1280x720 pixel image generated only when the input video resolution is 1280x720
   * or higher.
   * @param hq720Generated hq720Generated or {@code null} for none
   */
  public VideoPipelineViperThumbnailerColumnData setHq720Generated(java.lang.Boolean hq720Generated) {
    this.hq720Generated = hq720Generated;
    return this;
  }

  /**
   * The flags below indicate whether certain optional thumbnail images were generated.
   * hqdefault.jpg is a 480x360 pixel high quality image which should normally be always generated.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getHqdefaultGenerated() {
    return hqdefaultGenerated;
  }

  /**
   * The flags below indicate whether certain optional thumbnail images were generated.
   * hqdefault.jpg is a 480x360 pixel high quality image which should normally be always generated.
   * @param hqdefaultGenerated hqdefaultGenerated or {@code null} for none
   */
  public VideoPipelineViperThumbnailerColumnData setHqdefaultGenerated(java.lang.Boolean hqdefaultGenerated) {
    this.hqdefaultGenerated = hqdefaultGenerated;
    return this;
  }

  /**
   * True if a set of backup HVC thumbnails is generated.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getHvcBackupGenerated() {
    return hvcBackupGenerated;
  }

  /**
   * True if a set of backup HVC thumbnails is generated.
   * @param hvcBackupGenerated hvcBackupGenerated or {@code null} for none
   */
  public VideoPipelineViperThumbnailerColumnData setHvcBackupGenerated(java.lang.Boolean hvcBackupGenerated) {
    this.hvcBackupGenerated = hvcBackupGenerated;
    return this;
  }

  /**
   * True if the thumbnails are generated with background crop and scrim.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getImprovedVerticalGenerated() {
    return improvedVerticalGenerated;
  }

  /**
   * True if the thumbnails are generated with background crop and scrim.
   * @param improvedVerticalGenerated improvedVerticalGenerated or {@code null} for none
   */
  public VideoPipelineViperThumbnailerColumnData setImprovedVerticalGenerated(java.lang.Boolean improvedVerticalGenerated) {
    this.improvedVerticalGenerated = improvedVerticalGenerated;
    return this;
  }

  /**
   * maxresdefault.jpg is an image of the same resolution as the input video. It is generated only
   * when the input video is significantly higher-resolution than 640x480.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getMaxresdefaultGenerated() {
    return maxresdefaultGenerated;
  }

  /**
   * maxresdefault.jpg is an image of the same resolution as the input video. It is generated only
   * when the input video is significantly higher-resolution than 640x480.
   * @param maxresdefaultGenerated maxresdefaultGenerated or {@code null} for none
   */
  public VideoPipelineViperThumbnailerColumnData setMaxresdefaultGenerated(java.lang.Boolean maxresdefaultGenerated) {
    this.maxresdefaultGenerated = maxresdefaultGenerated;
    return this;
  }

  /**
   * Height of the generated maxresdefault thumbnail.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMaxresdefaultHeight() {
    return maxresdefaultHeight;
  }

  /**
   * Height of the generated maxresdefault thumbnail.
   * @param maxresdefaultHeight maxresdefaultHeight or {@code null} for none
   */
  public VideoPipelineViperThumbnailerColumnData setMaxresdefaultHeight(java.lang.Integer maxresdefaultHeight) {
    this.maxresdefaultHeight = maxresdefaultHeight;
    return this;
  }

  /**
   * Width of the generated maxresdefault thumbnail.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMaxresdefaultWidth() {
    return maxresdefaultWidth;
  }

  /**
   * Width of the generated maxresdefault thumbnail.
   * @param maxresdefaultWidth maxresdefaultWidth or {@code null} for none
   */
  public VideoPipelineViperThumbnailerColumnData setMaxresdefaultWidth(java.lang.Integer maxresdefaultWidth) {
    this.maxresdefaultWidth = maxresdefaultWidth;
    return this;
  }

  /**
   * True if moving thumbnails are generated.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getMovingThumbnailGenerated() {
    return movingThumbnailGenerated;
  }

  /**
   * True if moving thumbnails are generated.
   * @param movingThumbnailGenerated movingThumbnailGenerated or {@code null} for none
   */
  public VideoPipelineViperThumbnailerColumnData setMovingThumbnailGenerated(java.lang.Boolean movingThumbnailGenerated) {
    this.movingThumbnailGenerated = movingThumbnailGenerated;
    return this;
  }

  /**
   * True if private thumbnails were generated and stored in the thumbnail database.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getPrivateThumbnailsGenerated() {
    return privateThumbnailsGenerated;
  }

  /**
   * True if private thumbnails were generated and stored in the thumbnail database.
   * @param privateThumbnailsGenerated privateThumbnailsGenerated or {@code null} for none
   */
  public VideoPipelineViperThumbnailerColumnData setPrivateThumbnailsGenerated(java.lang.Boolean privateThumbnailsGenerated) {
    this.privateThumbnailsGenerated = privateThumbnailsGenerated;
    return this;
  }

  /**
   * True if public thumbnails were generated and stored in the thumbnail database.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getPublicThumbnailsGenerated() {
    return publicThumbnailsGenerated;
  }

  /**
   * True if public thumbnails were generated and stored in the thumbnail database.
   * @param publicThumbnailsGenerated publicThumbnailsGenerated or {@code null} for none
   */
  public VideoPipelineViperThumbnailerColumnData setPublicThumbnailsGenerated(java.lang.Boolean publicThumbnailsGenerated) {
    this.publicThumbnailsGenerated = publicThumbnailsGenerated;
    return this;
  }

  /**
   * Analysis result of running the rerun thumbnailer
   * @return value or {@code null} for none
   */
  public java.lang.String getRerunStatus() {
    return rerunStatus;
  }

  /**
   * Analysis result of running the rerun thumbnailer
   * @param rerunStatus rerunStatus or {@code null} for none
   */
  public VideoPipelineViperThumbnailerColumnData setRerunStatus(java.lang.String rerunStatus) {
    this.rerunStatus = rerunStatus;
    return this;
  }

  /**
   * sddefault.jpg is a 640x480 pixel image generated only when the input video resolution is
   * 640x480 or higher.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSddefaultGenerated() {
    return sddefaultGenerated;
  }

  /**
   * sddefault.jpg is a 640x480 pixel image generated only when the input video resolution is
   * 640x480 or higher.
   * @param sddefaultGenerated sddefaultGenerated or {@code null} for none
   */
  public VideoPipelineViperThumbnailerColumnData setSddefaultGenerated(java.lang.Boolean sddefaultGenerated) {
    this.sddefaultGenerated = sddefaultGenerated;
    return this;
  }

  /**
   * This flag indicates if storyboard mosaic images were generated and stored in the thumbnail
   * database.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getStoryboardGenerated() {
    return storyboardGenerated;
  }

  /**
   * This flag indicates if storyboard mosaic images were generated and stored in the thumbnail
   * database.
   * @param storyboardGenerated storyboardGenerated or {@code null} for none
   */
  public VideoPipelineViperThumbnailerColumnData setStoryboardGenerated(java.lang.Boolean storyboardGenerated) {
    this.storyboardGenerated = storyboardGenerated;
    return this;
  }

  /**
   * Number of levels of storyboard generated (0 if policy default).
   * @return value or {@code null} for none
   */
  public java.lang.Integer getStoryboardNumLevels() {
    return storyboardNumLevels;
  }

  /**
   * Number of levels of storyboard generated (0 if policy default).
   * @param storyboardNumLevels storyboardNumLevels or {@code null} for none
   */
  public VideoPipelineViperThumbnailerColumnData setStoryboardNumLevels(java.lang.Integer storyboardNumLevels) {
    this.storyboardNumLevels = storyboardNumLevels;
    return this;
  }

  /**
   * Policy number that governed the storyboard generation. If zero, no policy was used and the
   * storyboard format is not fully specified by the parameters contained in this message.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getStoryboardPolicy() {
    return storyboardPolicy;
  }

  /**
   * Policy number that governed the storyboard generation. If zero, no policy was used and the
   * storyboard format is not fully specified by the parameters contained in this message.
   * @param storyboardPolicy storyboardPolicy or {@code null} for none
   */
  public VideoPipelineViperThumbnailerColumnData setStoryboardPolicy(java.lang.Integer storyboardPolicy) {
    this.storyboardPolicy = storyboardPolicy;
    return this;
  }

  /**
   * Version of the storyboard.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getStoryboardVersion() {
    return storyboardVersion;
  }

  /**
   * Version of the storyboard.
   * @param storyboardVersion storyboardVersion or {@code null} for none
   */
  public VideoPipelineViperThumbnailerColumnData setStoryboardVersion(java.lang.Integer storyboardVersion) {
    this.storyboardVersion = storyboardVersion;
    return this;
  }

  /**
   * Video duration of the video.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getStoryboardVideoDurationMs() {
    return storyboardVideoDurationMs;
  }

  /**
   * Video duration of the video.
   * @param storyboardVideoDurationMs storyboardVideoDurationMs or {@code null} for none
   */
  public VideoPipelineViperThumbnailerColumnData setStoryboardVideoDurationMs(java.lang.Integer storyboardVideoDurationMs) {
    this.storyboardVideoDurationMs = storyboardVideoDurationMs;
    return this;
  }

  /**
   * Height of the video that was storyboarded.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getStoryboardVideoHeight() {
    return storyboardVideoHeight;
  }

  /**
   * Height of the video that was storyboarded.
   * @param storyboardVideoHeight storyboardVideoHeight or {@code null} for none
   */
  public VideoPipelineViperThumbnailerColumnData setStoryboardVideoHeight(java.lang.Integer storyboardVideoHeight) {
    this.storyboardVideoHeight = storyboardVideoHeight;
    return this;
  }

  /**
   * Width of the video that was storyboarded.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getStoryboardVideoWidth() {
    return storyboardVideoWidth;
  }

  /**
   * Width of the video that was storyboarded.
   * @param storyboardVideoWidth storyboardVideoWidth or {@code null} for none
   */
  public VideoPipelineViperThumbnailerColumnData setStoryboardVideoWidth(java.lang.Integer storyboardVideoWidth) {
    this.storyboardVideoWidth = storyboardVideoWidth;
    return this;
  }

  /**
   * This flag indicates if images in WebP format were created and stored in the thumbnail database.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getWebpGenerated() {
    return webpGenerated;
  }

  /**
   * This flag indicates if images in WebP format were created and stored in the thumbnail database.
   * @param webpGenerated webpGenerated or {@code null} for none
   */
  public VideoPipelineViperThumbnailerColumnData setWebpGenerated(java.lang.Boolean webpGenerated) {
    this.webpGenerated = webpGenerated;
    return this;
  }

  @Override
  public VideoPipelineViperThumbnailerColumnData set(String fieldName, Object value) {
    return (VideoPipelineViperThumbnailerColumnData) super.set(fieldName, value);
  }

  @Override
  public VideoPipelineViperThumbnailerColumnData clone() {
    return (VideoPipelineViperThumbnailerColumnData) super.clone();
  }

}
