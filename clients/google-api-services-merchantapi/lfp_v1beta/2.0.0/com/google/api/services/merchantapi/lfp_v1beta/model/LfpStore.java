/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.merchantapi.lfp_v1beta.model;

/**
 * A store for the merchant. This will be used to match to a store under the Google Business Profile
 * of the target merchant. If a matching store can't be found, the inventories or sales submitted
 * with the store code will not be used.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Merchant API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class LfpStore extends com.google.api.client.json.GenericJson {

  /**
   * Optional. [Google My Business category id](https://gcid-
   * explorer.corp.google.com/static/gcid.html).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> gcidCategory;

  /**
   * Optional. Output only. The state of matching to a Google Business Profile. See
   * matchingStateHint for further details if no match is found.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String matchingState;

  /**
   * Optional. Output only. The hint of why the matching has failed. This is only set when
   * matchingState=`STORE_MATCHING_STATE_FAILED`. Possible values are: - "`linked-store-not-found`":
   * There aren't any Google Business Profile stores available for matching. - "`store-match-not-
   * found`": The provided `LfpStore` couldn't be matched to any of the connected Google Business
   * Profile stores. Merchant Center account is connected correctly and stores are available on
   * Google Business Profile, but the `LfpStore` location address does not match with Google
   * Business Profile stores' addresses. Update the `LfpStore` address or Google Business Profile
   * store address to match correctly. - "`store-match-unverified`": The provided `LfpStore`
   * couldn't be matched to any of the connected Google Business Profile stores, as the matched
   * Google Business Profile store is unverified. Go through the Google Business Profile
   * verification process to match correctly.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String matchingStateHint;

  /**
   * Output only. Identifier. The name of the `LfpStore` resource. Format:
   * `accounts/{account}/lfpStores/{target_merchant}~{store_code}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Optional. The store phone number in [E.164](https://en.wikipedia.org/wiki/E.164) format.
   * Example: `+15556767888`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String phoneNumber;

  /**
   * Optional. The [Google Place Id](https://developers.google.com/maps/documentation/places/web-
   * service/place-id#id-overview) of the store location.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String placeId;

  /**
   * Required. The street address of the store. Example: 1600 Amphitheatre Pkwy, Mountain View, CA
   * 94043, USA.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String storeAddress;

  /**
   * Required. Immutable. A store identifier that is unique for the target merchant.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String storeCode;

  /**
   * Optional. The merchant or store name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String storeName;

  /**
   * Required. The Merchant Center id of the merchant to submit the store for.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long targetAccount;

  /**
   * Optional. The website URL for the store or merchant.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String websiteUri;

  /**
   * Optional. [Google My Business category id](https://gcid-
   * explorer.corp.google.com/static/gcid.html).
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getGcidCategory() {
    return gcidCategory;
  }

  /**
   * Optional. [Google My Business category id](https://gcid-
   * explorer.corp.google.com/static/gcid.html).
   * @param gcidCategory gcidCategory or {@code null} for none
   */
  public LfpStore setGcidCategory(java.util.List<java.lang.String> gcidCategory) {
    this.gcidCategory = gcidCategory;
    return this;
  }

  /**
   * Optional. Output only. The state of matching to a Google Business Profile. See
   * matchingStateHint for further details if no match is found.
   * @return value or {@code null} for none
   */
  public java.lang.String getMatchingState() {
    return matchingState;
  }

  /**
   * Optional. Output only. The state of matching to a Google Business Profile. See
   * matchingStateHint for further details if no match is found.
   * @param matchingState matchingState or {@code null} for none
   */
  public LfpStore setMatchingState(java.lang.String matchingState) {
    this.matchingState = matchingState;
    return this;
  }

  /**
   * Optional. Output only. The hint of why the matching has failed. This is only set when
   * matchingState=`STORE_MATCHING_STATE_FAILED`. Possible values are: - "`linked-store-not-found`":
   * There aren't any Google Business Profile stores available for matching. - "`store-match-not-
   * found`": The provided `LfpStore` couldn't be matched to any of the connected Google Business
   * Profile stores. Merchant Center account is connected correctly and stores are available on
   * Google Business Profile, but the `LfpStore` location address does not match with Google
   * Business Profile stores' addresses. Update the `LfpStore` address or Google Business Profile
   * store address to match correctly. - "`store-match-unverified`": The provided `LfpStore`
   * couldn't be matched to any of the connected Google Business Profile stores, as the matched
   * Google Business Profile store is unverified. Go through the Google Business Profile
   * verification process to match correctly.
   * @return value or {@code null} for none
   */
  public java.lang.String getMatchingStateHint() {
    return matchingStateHint;
  }

  /**
   * Optional. Output only. The hint of why the matching has failed. This is only set when
   * matchingState=`STORE_MATCHING_STATE_FAILED`. Possible values are: - "`linked-store-not-found`":
   * There aren't any Google Business Profile stores available for matching. - "`store-match-not-
   * found`": The provided `LfpStore` couldn't be matched to any of the connected Google Business
   * Profile stores. Merchant Center account is connected correctly and stores are available on
   * Google Business Profile, but the `LfpStore` location address does not match with Google
   * Business Profile stores' addresses. Update the `LfpStore` address or Google Business Profile
   * store address to match correctly. - "`store-match-unverified`": The provided `LfpStore`
   * couldn't be matched to any of the connected Google Business Profile stores, as the matched
   * Google Business Profile store is unverified. Go through the Google Business Profile
   * verification process to match correctly.
   * @param matchingStateHint matchingStateHint or {@code null} for none
   */
  public LfpStore setMatchingStateHint(java.lang.String matchingStateHint) {
    this.matchingStateHint = matchingStateHint;
    return this;
  }

  /**
   * Output only. Identifier. The name of the `LfpStore` resource. Format:
   * `accounts/{account}/lfpStores/{target_merchant}~{store_code}`
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. Identifier. The name of the `LfpStore` resource. Format:
   * `accounts/{account}/lfpStores/{target_merchant}~{store_code}`
   * @param name name or {@code null} for none
   */
  public LfpStore setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Optional. The store phone number in [E.164](https://en.wikipedia.org/wiki/E.164) format.
   * Example: `+15556767888`
   * @return value or {@code null} for none
   */
  public java.lang.String getPhoneNumber() {
    return phoneNumber;
  }

  /**
   * Optional. The store phone number in [E.164](https://en.wikipedia.org/wiki/E.164) format.
   * Example: `+15556767888`
   * @param phoneNumber phoneNumber or {@code null} for none
   */
  public LfpStore setPhoneNumber(java.lang.String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

  /**
   * Optional. The [Google Place Id](https://developers.google.com/maps/documentation/places/web-
   * service/place-id#id-overview) of the store location.
   * @return value or {@code null} for none
   */
  public java.lang.String getPlaceId() {
    return placeId;
  }

  /**
   * Optional. The [Google Place Id](https://developers.google.com/maps/documentation/places/web-
   * service/place-id#id-overview) of the store location.
   * @param placeId placeId or {@code null} for none
   */
  public LfpStore setPlaceId(java.lang.String placeId) {
    this.placeId = placeId;
    return this;
  }

  /**
   * Required. The street address of the store. Example: 1600 Amphitheatre Pkwy, Mountain View, CA
   * 94043, USA.
   * @return value or {@code null} for none
   */
  public java.lang.String getStoreAddress() {
    return storeAddress;
  }

  /**
   * Required. The street address of the store. Example: 1600 Amphitheatre Pkwy, Mountain View, CA
   * 94043, USA.
   * @param storeAddress storeAddress or {@code null} for none
   */
  public LfpStore setStoreAddress(java.lang.String storeAddress) {
    this.storeAddress = storeAddress;
    return this;
  }

  /**
   * Required. Immutable. A store identifier that is unique for the target merchant.
   * @return value or {@code null} for none
   */
  public java.lang.String getStoreCode() {
    return storeCode;
  }

  /**
   * Required. Immutable. A store identifier that is unique for the target merchant.
   * @param storeCode storeCode or {@code null} for none
   */
  public LfpStore setStoreCode(java.lang.String storeCode) {
    this.storeCode = storeCode;
    return this;
  }

  /**
   * Optional. The merchant or store name.
   * @return value or {@code null} for none
   */
  public java.lang.String getStoreName() {
    return storeName;
  }

  /**
   * Optional. The merchant or store name.
   * @param storeName storeName or {@code null} for none
   */
  public LfpStore setStoreName(java.lang.String storeName) {
    this.storeName = storeName;
    return this;
  }

  /**
   * Required. The Merchant Center id of the merchant to submit the store for.
   * @return value or {@code null} for none
   */
  public java.lang.Long getTargetAccount() {
    return targetAccount;
  }

  /**
   * Required. The Merchant Center id of the merchant to submit the store for.
   * @param targetAccount targetAccount or {@code null} for none
   */
  public LfpStore setTargetAccount(java.lang.Long targetAccount) {
    this.targetAccount = targetAccount;
    return this;
  }

  /**
   * Optional. The website URL for the store or merchant.
   * @return value or {@code null} for none
   */
  public java.lang.String getWebsiteUri() {
    return websiteUri;
  }

  /**
   * Optional. The website URL for the store or merchant.
   * @param websiteUri websiteUri or {@code null} for none
   */
  public LfpStore setWebsiteUri(java.lang.String websiteUri) {
    this.websiteUri = websiteUri;
    return this;
  }

  @Override
  public LfpStore set(String fieldName, Object value) {
    return (LfpStore) super.set(fieldName, value);
  }

  @Override
  public LfpStore clone() {
    return (LfpStore) super.clone();
  }

}
