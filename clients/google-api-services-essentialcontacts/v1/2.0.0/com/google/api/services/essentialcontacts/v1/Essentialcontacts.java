/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.essentialcontacts.v1;

/**
 * Service definition for Essentialcontacts (v1).
 *
 * <p>
 * 
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/essentialcontacts/docs/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link EssentialcontactsRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Essentialcontacts extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        (com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1))) ||
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION >= 2,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "2.0.0 of the Essential Contacts API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://essentialcontacts.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://essentialcontacts.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Essentialcontacts(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Essentialcontacts(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Folders collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Essentialcontacts essentialcontacts = new Essentialcontacts(...);}
   *   {@code Essentialcontacts.Folders.List request = essentialcontacts.folders().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Folders folders() {
    return new Folders();
  }

  /**
   * The "folders" collection of methods.
   */
  public class Folders {

    /**
     * An accessor for creating requests from the Contacts collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Essentialcontacts essentialcontacts = new Essentialcontacts(...);}
     *   {@code Essentialcontacts.Contacts.List request = essentialcontacts.contacts().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Contacts contacts() {
      return new Contacts();
    }

    /**
     * The "contacts" collection of methods.
     */
    public class Contacts {

      /**
       * Lists all contacts for the resource that are subscribed to the specified notification categories,
       * including contacts inherited from any parent resources.
       *
       * Create a request for the method "contacts.compute".
       *
       * This request holds the parameters needed by the essentialcontacts server.  After setting any
       * optional parameters, call the {@link Compute#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The name of the resource to compute contacts for. Format: organizations/{organization_id},
       *        folders/{folder_id} or projects/{project_id}
       * @return the request
       */
      public Compute compute(java.lang.String parent) throws java.io.IOException {
        Compute result = new Compute(parent);
        initialize(result);
        return result;
      }

      public class Compute extends EssentialcontactsRequest<com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1ComputeContactsResponse> {

        private static final String REST_PATH = "v1/{+parent}/contacts:compute";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^folders/[^/]+$");

        /**
         * Lists all contacts for the resource that are subscribed to the specified notification
         * categories, including contacts inherited from any parent resources.
         *
         * Create a request for the method "contacts.compute".
         *
         * This request holds the parameters needed by the the essentialcontacts server.  After setting
         * any optional parameters, call the {@link Compute#execute()} method to invoke the remote
         * operation. <p> {@link
         * Compute#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The name of the resource to compute contacts for. Format: organizations/{organization_id},
       *        folders/{folder_id} or projects/{project_id}
         * @since 1.13
         */
        protected Compute(java.lang.String parent) {
          super(Essentialcontacts.this, "GET", REST_PATH, null, com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1ComputeContactsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^folders/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Compute set$Xgafv(java.lang.String $Xgafv) {
          return (Compute) super.set$Xgafv($Xgafv);
        }

        @Override
        public Compute setAccessToken(java.lang.String accessToken) {
          return (Compute) super.setAccessToken(accessToken);
        }

        @Override
        public Compute setAlt(java.lang.String alt) {
          return (Compute) super.setAlt(alt);
        }

        @Override
        public Compute setCallback(java.lang.String callback) {
          return (Compute) super.setCallback(callback);
        }

        @Override
        public Compute setFields(java.lang.String fields) {
          return (Compute) super.setFields(fields);
        }

        @Override
        public Compute setKey(java.lang.String key) {
          return (Compute) super.setKey(key);
        }

        @Override
        public Compute setOauthToken(java.lang.String oauthToken) {
          return (Compute) super.setOauthToken(oauthToken);
        }

        @Override
        public Compute setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Compute) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Compute setQuotaUser(java.lang.String quotaUser) {
          return (Compute) super.setQuotaUser(quotaUser);
        }

        @Override
        public Compute setUploadType(java.lang.String uploadType) {
          return (Compute) super.setUploadType(uploadType);
        }

        @Override
        public Compute setUploadProtocol(java.lang.String uploadProtocol) {
          return (Compute) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the resource to compute contacts for. Format:
         * organizations/{organization_id}, folders/{folder_id} or projects/{project_id}
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The name of the resource to compute contacts for. Format:
       organizations/{organization_id}, folders/{folder_id} or projects/{project_id}
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The name of the resource to compute contacts for. Format:
         * organizations/{organization_id}, folders/{folder_id} or projects/{project_id}
         */
        public Compute setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^folders/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * The categories of notifications to compute contacts for. If ALL is included in this list,
         * contacts subscribed to any notification category will be returned.
         */
        @com.google.api.client.util.Key
        private java.util.List<java.lang.String> notificationCategories;

        /** The categories of notifications to compute contacts for. If ALL is included in this list, contacts
       subscribed to any notification category will be returned.
         */
        public java.util.List<java.lang.String> getNotificationCategories() {
          return notificationCategories;
        }

        /**
         * The categories of notifications to compute contacts for. If ALL is included in this list,
         * contacts subscribed to any notification category will be returned.
         */
        public Compute setNotificationCategories(java.util.List<java.lang.String> notificationCategories) {
          this.notificationCategories = notificationCategories;
          return this;
        }

        /**
         * Optional. The maximum number of results to return from this request. Non-positive values
         * are ignored. The presence of `next_page_token` in the response indicates that more
         * results might be available. If not specified, the default page_size is 100.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional. The maximum number of results to return from this request. Non-positive values are
       ignored. The presence of `next_page_token` in the response indicates that more results might be
       available. If not specified, the default page_size is 100.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Optional. The maximum number of results to return from this request. Non-positive values
         * are ignored. The presence of `next_page_token` in the response indicates that more
         * results might be available. If not specified, the default page_size is 100.
         */
        public Compute setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Optional. If present, retrieves the next batch of results from the preceding call to this
         * method. `page_token` must be the value of `next_page_token` from the previous response.
         * The values of other method parameters should be identical to those in the previous call.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional. If present, retrieves the next batch of results from the preceding call to this method.
       `page_token` must be the value of `next_page_token` from the previous response. The values of other
       method parameters should be identical to those in the previous call.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Optional. If present, retrieves the next batch of results from the preceding call to this
         * method. `page_token` must be the value of `next_page_token` from the previous response.
         * The values of other method parameters should be identical to those in the previous call.
         */
        public Compute setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public Compute set(String parameterName, Object value) {
          return (Compute) super.set(parameterName, value);
        }
      }
      /**
       * Adds a new contact for a resource.
       *
       * Create a request for the method "contacts.create".
       *
       * This request holds the parameters needed by the essentialcontacts server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The resource to save this contact for. Format: organizations/{organization_id},
       *        folders/{folder_id} or projects/{project_id}
       * @param content the {@link com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1Contact}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1Contact content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends EssentialcontactsRequest<com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1Contact> {

        private static final String REST_PATH = "v1/{+parent}/contacts";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^folders/[^/]+$");

        /**
         * Adds a new contact for a resource.
         *
         * Create a request for the method "contacts.create".
         *
         * This request holds the parameters needed by the the essentialcontacts server.  After setting
         * any optional parameters, call the {@link Create#execute()} method to invoke the remote
         * operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The resource to save this contact for. Format: organizations/{organization_id},
       *        folders/{folder_id} or projects/{project_id}
         * @param content the {@link com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1Contact}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1Contact content) {
          super(Essentialcontacts.this, "POST", REST_PATH, content, com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1Contact.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^folders/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The resource to save this contact for. Format: organizations/{organization_id},
         * folders/{folder_id} or projects/{project_id}
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The resource to save this contact for. Format: organizations/{organization_id},
       folders/{folder_id} or projects/{project_id}
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The resource to save this contact for. Format: organizations/{organization_id},
         * folders/{folder_id} or projects/{project_id}
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^folders/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a contact.
       *
       * Create a request for the method "contacts.delete".
       *
       * This request holds the parameters needed by the essentialcontacts server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the contact to delete. Format:
       *        organizations/{organization_id}/contacts/{contact_id},
       *        folders/{folder_id}/contacts/{contact_id} or projects/{project_id}/contacts/{contact_id}
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends EssentialcontactsRequest<com.google.api.services.essentialcontacts.v1.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^folders/[^/]+/contacts/[^/]+$");

        /**
         * Deletes a contact.
         *
         * Create a request for the method "contacts.delete".
         *
         * This request holds the parameters needed by the the essentialcontacts server.  After setting
         * any optional parameters, call the {@link Delete#execute()} method to invoke the remote
         * operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the contact to delete. Format:
       *        organizations/{organization_id}/contacts/{contact_id},
       *        folders/{folder_id}/contacts/{contact_id} or projects/{project_id}/contacts/{contact_id}
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Essentialcontacts.this, "DELETE", REST_PATH, null, com.google.api.services.essentialcontacts.v1.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^folders/[^/]+/contacts/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the contact to delete. Format:
         * organizations/{organization_id}/contacts/{contact_id},
         * folders/{folder_id}/contacts/{contact_id} or projects/{project_id}/contacts/{contact_id}
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the contact to delete. Format:
       organizations/{organization_id}/contacts/{contact_id}, folders/{folder_id}/contacts/{contact_id} or
       projects/{project_id}/contacts/{contact_id}
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the contact to delete. Format:
         * organizations/{organization_id}/contacts/{contact_id},
         * folders/{folder_id}/contacts/{contact_id} or projects/{project_id}/contacts/{contact_id}
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^folders/[^/]+/contacts/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets a single contact.
       *
       * Create a request for the method "contacts.get".
       *
       * This request holds the parameters needed by the essentialcontacts server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the contact to retrieve. Format:
       *        organizations/{organization_id}/contacts/{contact_id},
       *        folders/{folder_id}/contacts/{contact_id} or projects/{project_id}/contacts/{contact_id}
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends EssentialcontactsRequest<com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1Contact> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^folders/[^/]+/contacts/[^/]+$");

        /**
         * Gets a single contact.
         *
         * Create a request for the method "contacts.get".
         *
         * This request holds the parameters needed by the the essentialcontacts server.  After setting
         * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         * <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the contact to retrieve. Format:
       *        organizations/{organization_id}/contacts/{contact_id},
       *        folders/{folder_id}/contacts/{contact_id} or projects/{project_id}/contacts/{contact_id}
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Essentialcontacts.this, "GET", REST_PATH, null, com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1Contact.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^folders/[^/]+/contacts/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the contact to retrieve. Format:
         * organizations/{organization_id}/contacts/{contact_id},
         * folders/{folder_id}/contacts/{contact_id} or projects/{project_id}/contacts/{contact_id}
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the contact to retrieve. Format:
       organizations/{organization_id}/contacts/{contact_id}, folders/{folder_id}/contacts/{contact_id} or
       projects/{project_id}/contacts/{contact_id}
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the contact to retrieve. Format:
         * organizations/{organization_id}/contacts/{contact_id},
         * folders/{folder_id}/contacts/{contact_id} or projects/{project_id}/contacts/{contact_id}
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^folders/[^/]+/contacts/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists the contacts that have been set on a resource.
       *
       * Create a request for the method "contacts.list".
       *
       * This request holds the parameters needed by the essentialcontacts server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The parent resource name. Format: organizations/{organization_id}, folders/{folder_id} or
       *        projects/{project_id}
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends EssentialcontactsRequest<com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1ListContactsResponse> {

        private static final String REST_PATH = "v1/{+parent}/contacts";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^folders/[^/]+$");

        /**
         * Lists the contacts that have been set on a resource.
         *
         * Create a request for the method "contacts.list".
         *
         * This request holds the parameters needed by the the essentialcontacts server.  After setting
         * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         * <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The parent resource name. Format: organizations/{organization_id}, folders/{folder_id} or
       *        projects/{project_id}
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Essentialcontacts.this, "GET", REST_PATH, null, com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1ListContactsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^folders/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The parent resource name. Format: organizations/{organization_id},
         * folders/{folder_id} or projects/{project_id}
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The parent resource name. Format: organizations/{organization_id}, folders/{folder_id} or
       projects/{project_id}
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The parent resource name. Format: organizations/{organization_id},
         * folders/{folder_id} or projects/{project_id}
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^folders/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. The maximum number of results to return from this request. Non-positive values
         * are ignored. The presence of `next_page_token` in the response indicates that more
         * results might be available. If not specified, the default page_size is 100.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional. The maximum number of results to return from this request. Non-positive values are
       ignored. The presence of `next_page_token` in the response indicates that more results might be
       available. If not specified, the default page_size is 100.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Optional. The maximum number of results to return from this request. Non-positive values
         * are ignored. The presence of `next_page_token` in the response indicates that more
         * results might be available. If not specified, the default page_size is 100.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Optional. If present, retrieves the next batch of results from the preceding call to this
         * method. `page_token` must be the value of `next_page_token` from the previous response.
         * The values of other method parameters should be identical to those in the previous call.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional. If present, retrieves the next batch of results from the preceding call to this method.
       `page_token` must be the value of `next_page_token` from the previous response. The values of other
       method parameters should be identical to those in the previous call.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Optional. If present, retrieves the next batch of results from the preceding call to this
         * method. `page_token` must be the value of `next_page_token` from the previous response.
         * The values of other method parameters should be identical to those in the previous call.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a contact. Note: A contact's email address cannot be changed.
       *
       * Create a request for the method "contacts.patch".
       *
       * This request holds the parameters needed by the essentialcontacts server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name The identifier for the contact. Format: {resource_type}/{resource_id}/contacts/{contact_id}
       * @param content the {@link com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1Contact}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1Contact content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends EssentialcontactsRequest<com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1Contact> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^folders/[^/]+/contacts/[^/]+$");

        /**
         * Updates a contact. Note: A contact's email address cannot be changed.
         *
         * Create a request for the method "contacts.patch".
         *
         * This request holds the parameters needed by the the essentialcontacts server.  After setting
         * any optional parameters, call the {@link Patch#execute()} method to invoke the remote
         * operation. <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The identifier for the contact. Format: {resource_type}/{resource_id}/contacts/{contact_id}
         * @param content the {@link com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1Contact}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1Contact content) {
          super(Essentialcontacts.this, "PATCH", REST_PATH, content, com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1Contact.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^folders/[^/]+/contacts/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The identifier for the contact. Format:
         * {resource_type}/{resource_id}/contacts/{contact_id}
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The identifier for the contact. Format: {resource_type}/{resource_id}/contacts/{contact_id}
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * The identifier for the contact. Format:
         * {resource_type}/{resource_id}/contacts/{contact_id}
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^folders/[^/]+/contacts/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * Optional. The update mask applied to the resource. For the `FieldMask` definition, see
         * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Optional. The update mask applied to the resource. For the `FieldMask` definition, see
       https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * Optional. The update mask applied to the resource. For the `FieldMask` definition, see
         * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }
      /**
       * Allows a contact admin to send a test message to contact to verify that it has been configured
       * correctly.
       *
       * Create a request for the method "contacts.sendTestMessage".
       *
       * This request holds the parameters needed by the essentialcontacts server.  After setting any
       * optional parameters, call the {@link SendTestMessage#execute()} method to invoke the remote
       * operation.
       *
       * @param resource Required. The name of the resource to send the test message for. All contacts must either be set
       *        directly on this resource or inherited from another resource that is an ancestor of this
       *        one. Format: organizations/{organization_id}, folders/{folder_id} or projects/{project_id}
       * @param content the {@link com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1SendTestMessageRequest}
       * @return the request
       */
      public SendTestMessage sendTestMessage(java.lang.String resource, com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1SendTestMessageRequest content) throws java.io.IOException {
        SendTestMessage result = new SendTestMessage(resource, content);
        initialize(result);
        return result;
      }

      public class SendTestMessage extends EssentialcontactsRequest<com.google.api.services.essentialcontacts.v1.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1/{+resource}/contacts:sendTestMessage";

        private final java.util.regex.Pattern RESOURCE_PATTERN =
            java.util.regex.Pattern.compile("^folders/[^/]+$");

        /**
         * Allows a contact admin to send a test message to contact to verify that it has been configured
         * correctly.
         *
         * Create a request for the method "contacts.sendTestMessage".
         *
         * This request holds the parameters needed by the the essentialcontacts server.  After setting
         * any optional parameters, call the {@link SendTestMessage#execute()} method to invoke the remote
         * operation. <p> {@link SendTestMessage#initialize(com.google.api.client.googleapis.services.Abst
         * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
         * the constructor. </p>
         *
         * @param resource Required. The name of the resource to send the test message for. All contacts must either be set
       *        directly on this resource or inherited from another resource that is an ancestor of this
       *        one. Format: organizations/{organization_id}, folders/{folder_id} or projects/{project_id}
         * @param content the {@link com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1SendTestMessageRequest}
         * @since 1.13
         */
        protected SendTestMessage(java.lang.String resource, com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1SendTestMessageRequest content) {
          super(Essentialcontacts.this, "POST", REST_PATH, content, com.google.api.services.essentialcontacts.v1.model.GoogleProtobufEmpty.class);
          this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^folders/[^/]+$");
          }
        }

        @Override
        public SendTestMessage set$Xgafv(java.lang.String $Xgafv) {
          return (SendTestMessage) super.set$Xgafv($Xgafv);
        }

        @Override
        public SendTestMessage setAccessToken(java.lang.String accessToken) {
          return (SendTestMessage) super.setAccessToken(accessToken);
        }

        @Override
        public SendTestMessage setAlt(java.lang.String alt) {
          return (SendTestMessage) super.setAlt(alt);
        }

        @Override
        public SendTestMessage setCallback(java.lang.String callback) {
          return (SendTestMessage) super.setCallback(callback);
        }

        @Override
        public SendTestMessage setFields(java.lang.String fields) {
          return (SendTestMessage) super.setFields(fields);
        }

        @Override
        public SendTestMessage setKey(java.lang.String key) {
          return (SendTestMessage) super.setKey(key);
        }

        @Override
        public SendTestMessage setOauthToken(java.lang.String oauthToken) {
          return (SendTestMessage) super.setOauthToken(oauthToken);
        }

        @Override
        public SendTestMessage setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (SendTestMessage) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public SendTestMessage setQuotaUser(java.lang.String quotaUser) {
          return (SendTestMessage) super.setQuotaUser(quotaUser);
        }

        @Override
        public SendTestMessage setUploadType(java.lang.String uploadType) {
          return (SendTestMessage) super.setUploadType(uploadType);
        }

        @Override
        public SendTestMessage setUploadProtocol(java.lang.String uploadProtocol) {
          return (SendTestMessage) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the resource to send the test message for. All contacts must either
         * be set directly on this resource or inherited from another resource that is an ancestor
         * of this one. Format: organizations/{organization_id}, folders/{folder_id} or
         * projects/{project_id}
         */
        @com.google.api.client.util.Key
        private java.lang.String resource;

        /** Required. The name of the resource to send the test message for. All contacts must either be set
       directly on this resource or inherited from another resource that is an ancestor of this one.
       Format: organizations/{organization_id}, folders/{folder_id} or projects/{project_id}
         */
        public java.lang.String getResource() {
          return resource;
        }

        /**
         * Required. The name of the resource to send the test message for. All contacts must either
         * be set directly on this resource or inherited from another resource that is an ancestor
         * of this one. Format: organizations/{organization_id}, folders/{folder_id} or
         * projects/{project_id}
         */
        public SendTestMessage setResource(java.lang.String resource) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^folders/[^/]+$");
          }
          this.resource = resource;
          return this;
        }

        @Override
        public SendTestMessage set(String parameterName, Object value) {
          return (SendTestMessage) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * An accessor for creating requests from the Organizations collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Essentialcontacts essentialcontacts = new Essentialcontacts(...);}
   *   {@code Essentialcontacts.Organizations.List request = essentialcontacts.organizations().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Organizations organizations() {
    return new Organizations();
  }

  /**
   * The "organizations" collection of methods.
   */
  public class Organizations {

    /**
     * An accessor for creating requests from the Contacts collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Essentialcontacts essentialcontacts = new Essentialcontacts(...);}
     *   {@code Essentialcontacts.Contacts.List request = essentialcontacts.contacts().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Contacts contacts() {
      return new Contacts();
    }

    /**
     * The "contacts" collection of methods.
     */
    public class Contacts {

      /**
       * Lists all contacts for the resource that are subscribed to the specified notification categories,
       * including contacts inherited from any parent resources.
       *
       * Create a request for the method "contacts.compute".
       *
       * This request holds the parameters needed by the essentialcontacts server.  After setting any
       * optional parameters, call the {@link Compute#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The name of the resource to compute contacts for. Format: organizations/{organization_id},
       *        folders/{folder_id} or projects/{project_id}
       * @return the request
       */
      public Compute compute(java.lang.String parent) throws java.io.IOException {
        Compute result = new Compute(parent);
        initialize(result);
        return result;
      }

      public class Compute extends EssentialcontactsRequest<com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1ComputeContactsResponse> {

        private static final String REST_PATH = "v1/{+parent}/contacts:compute";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Lists all contacts for the resource that are subscribed to the specified notification
         * categories, including contacts inherited from any parent resources.
         *
         * Create a request for the method "contacts.compute".
         *
         * This request holds the parameters needed by the the essentialcontacts server.  After setting
         * any optional parameters, call the {@link Compute#execute()} method to invoke the remote
         * operation. <p> {@link
         * Compute#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The name of the resource to compute contacts for. Format: organizations/{organization_id},
       *        folders/{folder_id} or projects/{project_id}
         * @since 1.13
         */
        protected Compute(java.lang.String parent) {
          super(Essentialcontacts.this, "GET", REST_PATH, null, com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1ComputeContactsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Compute set$Xgafv(java.lang.String $Xgafv) {
          return (Compute) super.set$Xgafv($Xgafv);
        }

        @Override
        public Compute setAccessToken(java.lang.String accessToken) {
          return (Compute) super.setAccessToken(accessToken);
        }

        @Override
        public Compute setAlt(java.lang.String alt) {
          return (Compute) super.setAlt(alt);
        }

        @Override
        public Compute setCallback(java.lang.String callback) {
          return (Compute) super.setCallback(callback);
        }

        @Override
        public Compute setFields(java.lang.String fields) {
          return (Compute) super.setFields(fields);
        }

        @Override
        public Compute setKey(java.lang.String key) {
          return (Compute) super.setKey(key);
        }

        @Override
        public Compute setOauthToken(java.lang.String oauthToken) {
          return (Compute) super.setOauthToken(oauthToken);
        }

        @Override
        public Compute setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Compute) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Compute setQuotaUser(java.lang.String quotaUser) {
          return (Compute) super.setQuotaUser(quotaUser);
        }

        @Override
        public Compute setUploadType(java.lang.String uploadType) {
          return (Compute) super.setUploadType(uploadType);
        }

        @Override
        public Compute setUploadProtocol(java.lang.String uploadProtocol) {
          return (Compute) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the resource to compute contacts for. Format:
         * organizations/{organization_id}, folders/{folder_id} or projects/{project_id}
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The name of the resource to compute contacts for. Format:
       organizations/{organization_id}, folders/{folder_id} or projects/{project_id}
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The name of the resource to compute contacts for. Format:
         * organizations/{organization_id}, folders/{folder_id} or projects/{project_id}
         */
        public Compute setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * The categories of notifications to compute contacts for. If ALL is included in this list,
         * contacts subscribed to any notification category will be returned.
         */
        @com.google.api.client.util.Key
        private java.util.List<java.lang.String> notificationCategories;

        /** The categories of notifications to compute contacts for. If ALL is included in this list, contacts
       subscribed to any notification category will be returned.
         */
        public java.util.List<java.lang.String> getNotificationCategories() {
          return notificationCategories;
        }

        /**
         * The categories of notifications to compute contacts for. If ALL is included in this list,
         * contacts subscribed to any notification category will be returned.
         */
        public Compute setNotificationCategories(java.util.List<java.lang.String> notificationCategories) {
          this.notificationCategories = notificationCategories;
          return this;
        }

        /**
         * Optional. The maximum number of results to return from this request. Non-positive values
         * are ignored. The presence of `next_page_token` in the response indicates that more
         * results might be available. If not specified, the default page_size is 100.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional. The maximum number of results to return from this request. Non-positive values are
       ignored. The presence of `next_page_token` in the response indicates that more results might be
       available. If not specified, the default page_size is 100.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Optional. The maximum number of results to return from this request. Non-positive values
         * are ignored. The presence of `next_page_token` in the response indicates that more
         * results might be available. If not specified, the default page_size is 100.
         */
        public Compute setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Optional. If present, retrieves the next batch of results from the preceding call to this
         * method. `page_token` must be the value of `next_page_token` from the previous response.
         * The values of other method parameters should be identical to those in the previous call.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional. If present, retrieves the next batch of results from the preceding call to this method.
       `page_token` must be the value of `next_page_token` from the previous response. The values of other
       method parameters should be identical to those in the previous call.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Optional. If present, retrieves the next batch of results from the preceding call to this
         * method. `page_token` must be the value of `next_page_token` from the previous response.
         * The values of other method parameters should be identical to those in the previous call.
         */
        public Compute setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public Compute set(String parameterName, Object value) {
          return (Compute) super.set(parameterName, value);
        }
      }
      /**
       * Adds a new contact for a resource.
       *
       * Create a request for the method "contacts.create".
       *
       * This request holds the parameters needed by the essentialcontacts server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The resource to save this contact for. Format: organizations/{organization_id},
       *        folders/{folder_id} or projects/{project_id}
       * @param content the {@link com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1Contact}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1Contact content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends EssentialcontactsRequest<com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1Contact> {

        private static final String REST_PATH = "v1/{+parent}/contacts";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Adds a new contact for a resource.
         *
         * Create a request for the method "contacts.create".
         *
         * This request holds the parameters needed by the the essentialcontacts server.  After setting
         * any optional parameters, call the {@link Create#execute()} method to invoke the remote
         * operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The resource to save this contact for. Format: organizations/{organization_id},
       *        folders/{folder_id} or projects/{project_id}
         * @param content the {@link com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1Contact}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1Contact content) {
          super(Essentialcontacts.this, "POST", REST_PATH, content, com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1Contact.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The resource to save this contact for. Format: organizations/{organization_id},
         * folders/{folder_id} or projects/{project_id}
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The resource to save this contact for. Format: organizations/{organization_id},
       folders/{folder_id} or projects/{project_id}
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The resource to save this contact for. Format: organizations/{organization_id},
         * folders/{folder_id} or projects/{project_id}
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a contact.
       *
       * Create a request for the method "contacts.delete".
       *
       * This request holds the parameters needed by the essentialcontacts server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the contact to delete. Format:
       *        organizations/{organization_id}/contacts/{contact_id},
       *        folders/{folder_id}/contacts/{contact_id} or projects/{project_id}/contacts/{contact_id}
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends EssentialcontactsRequest<com.google.api.services.essentialcontacts.v1.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/contacts/[^/]+$");

        /**
         * Deletes a contact.
         *
         * Create a request for the method "contacts.delete".
         *
         * This request holds the parameters needed by the the essentialcontacts server.  After setting
         * any optional parameters, call the {@link Delete#execute()} method to invoke the remote
         * operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the contact to delete. Format:
       *        organizations/{organization_id}/contacts/{contact_id},
       *        folders/{folder_id}/contacts/{contact_id} or projects/{project_id}/contacts/{contact_id}
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Essentialcontacts.this, "DELETE", REST_PATH, null, com.google.api.services.essentialcontacts.v1.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/contacts/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the contact to delete. Format:
         * organizations/{organization_id}/contacts/{contact_id},
         * folders/{folder_id}/contacts/{contact_id} or projects/{project_id}/contacts/{contact_id}
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the contact to delete. Format:
       organizations/{organization_id}/contacts/{contact_id}, folders/{folder_id}/contacts/{contact_id} or
       projects/{project_id}/contacts/{contact_id}
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the contact to delete. Format:
         * organizations/{organization_id}/contacts/{contact_id},
         * folders/{folder_id}/contacts/{contact_id} or projects/{project_id}/contacts/{contact_id}
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/contacts/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets a single contact.
       *
       * Create a request for the method "contacts.get".
       *
       * This request holds the parameters needed by the essentialcontacts server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the contact to retrieve. Format:
       *        organizations/{organization_id}/contacts/{contact_id},
       *        folders/{folder_id}/contacts/{contact_id} or projects/{project_id}/contacts/{contact_id}
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends EssentialcontactsRequest<com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1Contact> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/contacts/[^/]+$");

        /**
         * Gets a single contact.
         *
         * Create a request for the method "contacts.get".
         *
         * This request holds the parameters needed by the the essentialcontacts server.  After setting
         * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         * <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the contact to retrieve. Format:
       *        organizations/{organization_id}/contacts/{contact_id},
       *        folders/{folder_id}/contacts/{contact_id} or projects/{project_id}/contacts/{contact_id}
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Essentialcontacts.this, "GET", REST_PATH, null, com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1Contact.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/contacts/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the contact to retrieve. Format:
         * organizations/{organization_id}/contacts/{contact_id},
         * folders/{folder_id}/contacts/{contact_id} or projects/{project_id}/contacts/{contact_id}
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the contact to retrieve. Format:
       organizations/{organization_id}/contacts/{contact_id}, folders/{folder_id}/contacts/{contact_id} or
       projects/{project_id}/contacts/{contact_id}
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the contact to retrieve. Format:
         * organizations/{organization_id}/contacts/{contact_id},
         * folders/{folder_id}/contacts/{contact_id} or projects/{project_id}/contacts/{contact_id}
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/contacts/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists the contacts that have been set on a resource.
       *
       * Create a request for the method "contacts.list".
       *
       * This request holds the parameters needed by the essentialcontacts server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The parent resource name. Format: organizations/{organization_id}, folders/{folder_id} or
       *        projects/{project_id}
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends EssentialcontactsRequest<com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1ListContactsResponse> {

        private static final String REST_PATH = "v1/{+parent}/contacts";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Lists the contacts that have been set on a resource.
         *
         * Create a request for the method "contacts.list".
         *
         * This request holds the parameters needed by the the essentialcontacts server.  After setting
         * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         * <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The parent resource name. Format: organizations/{organization_id}, folders/{folder_id} or
       *        projects/{project_id}
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Essentialcontacts.this, "GET", REST_PATH, null, com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1ListContactsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The parent resource name. Format: organizations/{organization_id},
         * folders/{folder_id} or projects/{project_id}
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The parent resource name. Format: organizations/{organization_id}, folders/{folder_id} or
       projects/{project_id}
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The parent resource name. Format: organizations/{organization_id},
         * folders/{folder_id} or projects/{project_id}
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. The maximum number of results to return from this request. Non-positive values
         * are ignored. The presence of `next_page_token` in the response indicates that more
         * results might be available. If not specified, the default page_size is 100.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional. The maximum number of results to return from this request. Non-positive values are
       ignored. The presence of `next_page_token` in the response indicates that more results might be
       available. If not specified, the default page_size is 100.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Optional. The maximum number of results to return from this request. Non-positive values
         * are ignored. The presence of `next_page_token` in the response indicates that more
         * results might be available. If not specified, the default page_size is 100.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Optional. If present, retrieves the next batch of results from the preceding call to this
         * method. `page_token` must be the value of `next_page_token` from the previous response.
         * The values of other method parameters should be identical to those in the previous call.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional. If present, retrieves the next batch of results from the preceding call to this method.
       `page_token` must be the value of `next_page_token` from the previous response. The values of other
       method parameters should be identical to those in the previous call.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Optional. If present, retrieves the next batch of results from the preceding call to this
         * method. `page_token` must be the value of `next_page_token` from the previous response.
         * The values of other method parameters should be identical to those in the previous call.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a contact. Note: A contact's email address cannot be changed.
       *
       * Create a request for the method "contacts.patch".
       *
       * This request holds the parameters needed by the essentialcontacts server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name The identifier for the contact. Format: {resource_type}/{resource_id}/contacts/{contact_id}
       * @param content the {@link com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1Contact}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1Contact content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends EssentialcontactsRequest<com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1Contact> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/contacts/[^/]+$");

        /**
         * Updates a contact. Note: A contact's email address cannot be changed.
         *
         * Create a request for the method "contacts.patch".
         *
         * This request holds the parameters needed by the the essentialcontacts server.  After setting
         * any optional parameters, call the {@link Patch#execute()} method to invoke the remote
         * operation. <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The identifier for the contact. Format: {resource_type}/{resource_id}/contacts/{contact_id}
         * @param content the {@link com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1Contact}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1Contact content) {
          super(Essentialcontacts.this, "PATCH", REST_PATH, content, com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1Contact.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/contacts/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The identifier for the contact. Format:
         * {resource_type}/{resource_id}/contacts/{contact_id}
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The identifier for the contact. Format: {resource_type}/{resource_id}/contacts/{contact_id}
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * The identifier for the contact. Format:
         * {resource_type}/{resource_id}/contacts/{contact_id}
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/contacts/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * Optional. The update mask applied to the resource. For the `FieldMask` definition, see
         * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Optional. The update mask applied to the resource. For the `FieldMask` definition, see
       https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * Optional. The update mask applied to the resource. For the `FieldMask` definition, see
         * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }
      /**
       * Allows a contact admin to send a test message to contact to verify that it has been configured
       * correctly.
       *
       * Create a request for the method "contacts.sendTestMessage".
       *
       * This request holds the parameters needed by the essentialcontacts server.  After setting any
       * optional parameters, call the {@link SendTestMessage#execute()} method to invoke the remote
       * operation.
       *
       * @param resource Required. The name of the resource to send the test message for. All contacts must either be set
       *        directly on this resource or inherited from another resource that is an ancestor of this
       *        one. Format: organizations/{organization_id}, folders/{folder_id} or projects/{project_id}
       * @param content the {@link com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1SendTestMessageRequest}
       * @return the request
       */
      public SendTestMessage sendTestMessage(java.lang.String resource, com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1SendTestMessageRequest content) throws java.io.IOException {
        SendTestMessage result = new SendTestMessage(resource, content);
        initialize(result);
        return result;
      }

      public class SendTestMessage extends EssentialcontactsRequest<com.google.api.services.essentialcontacts.v1.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1/{+resource}/contacts:sendTestMessage";

        private final java.util.regex.Pattern RESOURCE_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Allows a contact admin to send a test message to contact to verify that it has been configured
         * correctly.
         *
         * Create a request for the method "contacts.sendTestMessage".
         *
         * This request holds the parameters needed by the the essentialcontacts server.  After setting
         * any optional parameters, call the {@link SendTestMessage#execute()} method to invoke the remote
         * operation. <p> {@link SendTestMessage#initialize(com.google.api.client.googleapis.services.Abst
         * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
         * the constructor. </p>
         *
         * @param resource Required. The name of the resource to send the test message for. All contacts must either be set
       *        directly on this resource or inherited from another resource that is an ancestor of this
       *        one. Format: organizations/{organization_id}, folders/{folder_id} or projects/{project_id}
         * @param content the {@link com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1SendTestMessageRequest}
         * @since 1.13
         */
        protected SendTestMessage(java.lang.String resource, com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1SendTestMessageRequest content) {
          super(Essentialcontacts.this, "POST", REST_PATH, content, com.google.api.services.essentialcontacts.v1.model.GoogleProtobufEmpty.class);
          this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public SendTestMessage set$Xgafv(java.lang.String $Xgafv) {
          return (SendTestMessage) super.set$Xgafv($Xgafv);
        }

        @Override
        public SendTestMessage setAccessToken(java.lang.String accessToken) {
          return (SendTestMessage) super.setAccessToken(accessToken);
        }

        @Override
        public SendTestMessage setAlt(java.lang.String alt) {
          return (SendTestMessage) super.setAlt(alt);
        }

        @Override
        public SendTestMessage setCallback(java.lang.String callback) {
          return (SendTestMessage) super.setCallback(callback);
        }

        @Override
        public SendTestMessage setFields(java.lang.String fields) {
          return (SendTestMessage) super.setFields(fields);
        }

        @Override
        public SendTestMessage setKey(java.lang.String key) {
          return (SendTestMessage) super.setKey(key);
        }

        @Override
        public SendTestMessage setOauthToken(java.lang.String oauthToken) {
          return (SendTestMessage) super.setOauthToken(oauthToken);
        }

        @Override
        public SendTestMessage setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (SendTestMessage) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public SendTestMessage setQuotaUser(java.lang.String quotaUser) {
          return (SendTestMessage) super.setQuotaUser(quotaUser);
        }

        @Override
        public SendTestMessage setUploadType(java.lang.String uploadType) {
          return (SendTestMessage) super.setUploadType(uploadType);
        }

        @Override
        public SendTestMessage setUploadProtocol(java.lang.String uploadProtocol) {
          return (SendTestMessage) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the resource to send the test message for. All contacts must either
         * be set directly on this resource or inherited from another resource that is an ancestor
         * of this one. Format: organizations/{organization_id}, folders/{folder_id} or
         * projects/{project_id}
         */
        @com.google.api.client.util.Key
        private java.lang.String resource;

        /** Required. The name of the resource to send the test message for. All contacts must either be set
       directly on this resource or inherited from another resource that is an ancestor of this one.
       Format: organizations/{organization_id}, folders/{folder_id} or projects/{project_id}
         */
        public java.lang.String getResource() {
          return resource;
        }

        /**
         * Required. The name of the resource to send the test message for. All contacts must either
         * be set directly on this resource or inherited from another resource that is an ancestor
         * of this one. Format: organizations/{organization_id}, folders/{folder_id} or
         * projects/{project_id}
         */
        public SendTestMessage setResource(java.lang.String resource) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.resource = resource;
          return this;
        }

        @Override
        public SendTestMessage set(String parameterName, Object value) {
          return (SendTestMessage) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Essentialcontacts essentialcontacts = new Essentialcontacts(...);}
   *   {@code Essentialcontacts.Projects.List request = essentialcontacts.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the Contacts collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Essentialcontacts essentialcontacts = new Essentialcontacts(...);}
     *   {@code Essentialcontacts.Contacts.List request = essentialcontacts.contacts().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Contacts contacts() {
      return new Contacts();
    }

    /**
     * The "contacts" collection of methods.
     */
    public class Contacts {

      /**
       * Lists all contacts for the resource that are subscribed to the specified notification categories,
       * including contacts inherited from any parent resources.
       *
       * Create a request for the method "contacts.compute".
       *
       * This request holds the parameters needed by the essentialcontacts server.  After setting any
       * optional parameters, call the {@link Compute#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The name of the resource to compute contacts for. Format: organizations/{organization_id},
       *        folders/{folder_id} or projects/{project_id}
       * @return the request
       */
      public Compute compute(java.lang.String parent) throws java.io.IOException {
        Compute result = new Compute(parent);
        initialize(result);
        return result;
      }

      public class Compute extends EssentialcontactsRequest<com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1ComputeContactsResponse> {

        private static final String REST_PATH = "v1/{+parent}/contacts:compute";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Lists all contacts for the resource that are subscribed to the specified notification
         * categories, including contacts inherited from any parent resources.
         *
         * Create a request for the method "contacts.compute".
         *
         * This request holds the parameters needed by the the essentialcontacts server.  After setting
         * any optional parameters, call the {@link Compute#execute()} method to invoke the remote
         * operation. <p> {@link
         * Compute#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The name of the resource to compute contacts for. Format: organizations/{organization_id},
       *        folders/{folder_id} or projects/{project_id}
         * @since 1.13
         */
        protected Compute(java.lang.String parent) {
          super(Essentialcontacts.this, "GET", REST_PATH, null, com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1ComputeContactsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Compute set$Xgafv(java.lang.String $Xgafv) {
          return (Compute) super.set$Xgafv($Xgafv);
        }

        @Override
        public Compute setAccessToken(java.lang.String accessToken) {
          return (Compute) super.setAccessToken(accessToken);
        }

        @Override
        public Compute setAlt(java.lang.String alt) {
          return (Compute) super.setAlt(alt);
        }

        @Override
        public Compute setCallback(java.lang.String callback) {
          return (Compute) super.setCallback(callback);
        }

        @Override
        public Compute setFields(java.lang.String fields) {
          return (Compute) super.setFields(fields);
        }

        @Override
        public Compute setKey(java.lang.String key) {
          return (Compute) super.setKey(key);
        }

        @Override
        public Compute setOauthToken(java.lang.String oauthToken) {
          return (Compute) super.setOauthToken(oauthToken);
        }

        @Override
        public Compute setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Compute) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Compute setQuotaUser(java.lang.String quotaUser) {
          return (Compute) super.setQuotaUser(quotaUser);
        }

        @Override
        public Compute setUploadType(java.lang.String uploadType) {
          return (Compute) super.setUploadType(uploadType);
        }

        @Override
        public Compute setUploadProtocol(java.lang.String uploadProtocol) {
          return (Compute) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the resource to compute contacts for. Format:
         * organizations/{organization_id}, folders/{folder_id} or projects/{project_id}
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The name of the resource to compute contacts for. Format:
       organizations/{organization_id}, folders/{folder_id} or projects/{project_id}
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The name of the resource to compute contacts for. Format:
         * organizations/{organization_id}, folders/{folder_id} or projects/{project_id}
         */
        public Compute setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * The categories of notifications to compute contacts for. If ALL is included in this list,
         * contacts subscribed to any notification category will be returned.
         */
        @com.google.api.client.util.Key
        private java.util.List<java.lang.String> notificationCategories;

        /** The categories of notifications to compute contacts for. If ALL is included in this list, contacts
       subscribed to any notification category will be returned.
         */
        public java.util.List<java.lang.String> getNotificationCategories() {
          return notificationCategories;
        }

        /**
         * The categories of notifications to compute contacts for. If ALL is included in this list,
         * contacts subscribed to any notification category will be returned.
         */
        public Compute setNotificationCategories(java.util.List<java.lang.String> notificationCategories) {
          this.notificationCategories = notificationCategories;
          return this;
        }

        /**
         * Optional. The maximum number of results to return from this request. Non-positive values
         * are ignored. The presence of `next_page_token` in the response indicates that more
         * results might be available. If not specified, the default page_size is 100.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional. The maximum number of results to return from this request. Non-positive values are
       ignored. The presence of `next_page_token` in the response indicates that more results might be
       available. If not specified, the default page_size is 100.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Optional. The maximum number of results to return from this request. Non-positive values
         * are ignored. The presence of `next_page_token` in the response indicates that more
         * results might be available. If not specified, the default page_size is 100.
         */
        public Compute setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Optional. If present, retrieves the next batch of results from the preceding call to this
         * method. `page_token` must be the value of `next_page_token` from the previous response.
         * The values of other method parameters should be identical to those in the previous call.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional. If present, retrieves the next batch of results from the preceding call to this method.
       `page_token` must be the value of `next_page_token` from the previous response. The values of other
       method parameters should be identical to those in the previous call.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Optional. If present, retrieves the next batch of results from the preceding call to this
         * method. `page_token` must be the value of `next_page_token` from the previous response.
         * The values of other method parameters should be identical to those in the previous call.
         */
        public Compute setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public Compute set(String parameterName, Object value) {
          return (Compute) super.set(parameterName, value);
        }
      }
      /**
       * Adds a new contact for a resource.
       *
       * Create a request for the method "contacts.create".
       *
       * This request holds the parameters needed by the essentialcontacts server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The resource to save this contact for. Format: organizations/{organization_id},
       *        folders/{folder_id} or projects/{project_id}
       * @param content the {@link com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1Contact}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1Contact content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends EssentialcontactsRequest<com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1Contact> {

        private static final String REST_PATH = "v1/{+parent}/contacts";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Adds a new contact for a resource.
         *
         * Create a request for the method "contacts.create".
         *
         * This request holds the parameters needed by the the essentialcontacts server.  After setting
         * any optional parameters, call the {@link Create#execute()} method to invoke the remote
         * operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The resource to save this contact for. Format: organizations/{organization_id},
       *        folders/{folder_id} or projects/{project_id}
         * @param content the {@link com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1Contact}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1Contact content) {
          super(Essentialcontacts.this, "POST", REST_PATH, content, com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1Contact.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The resource to save this contact for. Format: organizations/{organization_id},
         * folders/{folder_id} or projects/{project_id}
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The resource to save this contact for. Format: organizations/{organization_id},
       folders/{folder_id} or projects/{project_id}
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The resource to save this contact for. Format: organizations/{organization_id},
         * folders/{folder_id} or projects/{project_id}
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a contact.
       *
       * Create a request for the method "contacts.delete".
       *
       * This request holds the parameters needed by the essentialcontacts server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the contact to delete. Format:
       *        organizations/{organization_id}/contacts/{contact_id},
       *        folders/{folder_id}/contacts/{contact_id} or projects/{project_id}/contacts/{contact_id}
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends EssentialcontactsRequest<com.google.api.services.essentialcontacts.v1.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/contacts/[^/]+$");

        /**
         * Deletes a contact.
         *
         * Create a request for the method "contacts.delete".
         *
         * This request holds the parameters needed by the the essentialcontacts server.  After setting
         * any optional parameters, call the {@link Delete#execute()} method to invoke the remote
         * operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the contact to delete. Format:
       *        organizations/{organization_id}/contacts/{contact_id},
       *        folders/{folder_id}/contacts/{contact_id} or projects/{project_id}/contacts/{contact_id}
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Essentialcontacts.this, "DELETE", REST_PATH, null, com.google.api.services.essentialcontacts.v1.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/contacts/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the contact to delete. Format:
         * organizations/{organization_id}/contacts/{contact_id},
         * folders/{folder_id}/contacts/{contact_id} or projects/{project_id}/contacts/{contact_id}
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the contact to delete. Format:
       organizations/{organization_id}/contacts/{contact_id}, folders/{folder_id}/contacts/{contact_id} or
       projects/{project_id}/contacts/{contact_id}
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the contact to delete. Format:
         * organizations/{organization_id}/contacts/{contact_id},
         * folders/{folder_id}/contacts/{contact_id} or projects/{project_id}/contacts/{contact_id}
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/contacts/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets a single contact.
       *
       * Create a request for the method "contacts.get".
       *
       * This request holds the parameters needed by the essentialcontacts server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the contact to retrieve. Format:
       *        organizations/{organization_id}/contacts/{contact_id},
       *        folders/{folder_id}/contacts/{contact_id} or projects/{project_id}/contacts/{contact_id}
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends EssentialcontactsRequest<com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1Contact> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/contacts/[^/]+$");

        /**
         * Gets a single contact.
         *
         * Create a request for the method "contacts.get".
         *
         * This request holds the parameters needed by the the essentialcontacts server.  After setting
         * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         * <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the contact to retrieve. Format:
       *        organizations/{organization_id}/contacts/{contact_id},
       *        folders/{folder_id}/contacts/{contact_id} or projects/{project_id}/contacts/{contact_id}
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Essentialcontacts.this, "GET", REST_PATH, null, com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1Contact.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/contacts/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the contact to retrieve. Format:
         * organizations/{organization_id}/contacts/{contact_id},
         * folders/{folder_id}/contacts/{contact_id} or projects/{project_id}/contacts/{contact_id}
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the contact to retrieve. Format:
       organizations/{organization_id}/contacts/{contact_id}, folders/{folder_id}/contacts/{contact_id} or
       projects/{project_id}/contacts/{contact_id}
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the contact to retrieve. Format:
         * organizations/{organization_id}/contacts/{contact_id},
         * folders/{folder_id}/contacts/{contact_id} or projects/{project_id}/contacts/{contact_id}
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/contacts/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists the contacts that have been set on a resource.
       *
       * Create a request for the method "contacts.list".
       *
       * This request holds the parameters needed by the essentialcontacts server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The parent resource name. Format: organizations/{organization_id}, folders/{folder_id} or
       *        projects/{project_id}
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends EssentialcontactsRequest<com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1ListContactsResponse> {

        private static final String REST_PATH = "v1/{+parent}/contacts";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Lists the contacts that have been set on a resource.
         *
         * Create a request for the method "contacts.list".
         *
         * This request holds the parameters needed by the the essentialcontacts server.  After setting
         * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         * <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The parent resource name. Format: organizations/{organization_id}, folders/{folder_id} or
       *        projects/{project_id}
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Essentialcontacts.this, "GET", REST_PATH, null, com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1ListContactsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The parent resource name. Format: organizations/{organization_id},
         * folders/{folder_id} or projects/{project_id}
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The parent resource name. Format: organizations/{organization_id}, folders/{folder_id} or
       projects/{project_id}
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The parent resource name. Format: organizations/{organization_id},
         * folders/{folder_id} or projects/{project_id}
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. The maximum number of results to return from this request. Non-positive values
         * are ignored. The presence of `next_page_token` in the response indicates that more
         * results might be available. If not specified, the default page_size is 100.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional. The maximum number of results to return from this request. Non-positive values are
       ignored. The presence of `next_page_token` in the response indicates that more results might be
       available. If not specified, the default page_size is 100.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Optional. The maximum number of results to return from this request. Non-positive values
         * are ignored. The presence of `next_page_token` in the response indicates that more
         * results might be available. If not specified, the default page_size is 100.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Optional. If present, retrieves the next batch of results from the preceding call to this
         * method. `page_token` must be the value of `next_page_token` from the previous response.
         * The values of other method parameters should be identical to those in the previous call.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional. If present, retrieves the next batch of results from the preceding call to this method.
       `page_token` must be the value of `next_page_token` from the previous response. The values of other
       method parameters should be identical to those in the previous call.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Optional. If present, retrieves the next batch of results from the preceding call to this
         * method. `page_token` must be the value of `next_page_token` from the previous response.
         * The values of other method parameters should be identical to those in the previous call.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a contact. Note: A contact's email address cannot be changed.
       *
       * Create a request for the method "contacts.patch".
       *
       * This request holds the parameters needed by the essentialcontacts server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name The identifier for the contact. Format: {resource_type}/{resource_id}/contacts/{contact_id}
       * @param content the {@link com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1Contact}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1Contact content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends EssentialcontactsRequest<com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1Contact> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/contacts/[^/]+$");

        /**
         * Updates a contact. Note: A contact's email address cannot be changed.
         *
         * Create a request for the method "contacts.patch".
         *
         * This request holds the parameters needed by the the essentialcontacts server.  After setting
         * any optional parameters, call the {@link Patch#execute()} method to invoke the remote
         * operation. <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The identifier for the contact. Format: {resource_type}/{resource_id}/contacts/{contact_id}
         * @param content the {@link com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1Contact}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1Contact content) {
          super(Essentialcontacts.this, "PATCH", REST_PATH, content, com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1Contact.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/contacts/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The identifier for the contact. Format:
         * {resource_type}/{resource_id}/contacts/{contact_id}
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The identifier for the contact. Format: {resource_type}/{resource_id}/contacts/{contact_id}
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * The identifier for the contact. Format:
         * {resource_type}/{resource_id}/contacts/{contact_id}
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/contacts/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * Optional. The update mask applied to the resource. For the `FieldMask` definition, see
         * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Optional. The update mask applied to the resource. For the `FieldMask` definition, see
       https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * Optional. The update mask applied to the resource. For the `FieldMask` definition, see
         * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }
      /**
       * Allows a contact admin to send a test message to contact to verify that it has been configured
       * correctly.
       *
       * Create a request for the method "contacts.sendTestMessage".
       *
       * This request holds the parameters needed by the essentialcontacts server.  After setting any
       * optional parameters, call the {@link SendTestMessage#execute()} method to invoke the remote
       * operation.
       *
       * @param resource Required. The name of the resource to send the test message for. All contacts must either be set
       *        directly on this resource or inherited from another resource that is an ancestor of this
       *        one. Format: organizations/{organization_id}, folders/{folder_id} or projects/{project_id}
       * @param content the {@link com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1SendTestMessageRequest}
       * @return the request
       */
      public SendTestMessage sendTestMessage(java.lang.String resource, com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1SendTestMessageRequest content) throws java.io.IOException {
        SendTestMessage result = new SendTestMessage(resource, content);
        initialize(result);
        return result;
      }

      public class SendTestMessage extends EssentialcontactsRequest<com.google.api.services.essentialcontacts.v1.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1/{+resource}/contacts:sendTestMessage";

        private final java.util.regex.Pattern RESOURCE_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Allows a contact admin to send a test message to contact to verify that it has been configured
         * correctly.
         *
         * Create a request for the method "contacts.sendTestMessage".
         *
         * This request holds the parameters needed by the the essentialcontacts server.  After setting
         * any optional parameters, call the {@link SendTestMessage#execute()} method to invoke the remote
         * operation. <p> {@link SendTestMessage#initialize(com.google.api.client.googleapis.services.Abst
         * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
         * the constructor. </p>
         *
         * @param resource Required. The name of the resource to send the test message for. All contacts must either be set
       *        directly on this resource or inherited from another resource that is an ancestor of this
       *        one. Format: organizations/{organization_id}, folders/{folder_id} or projects/{project_id}
         * @param content the {@link com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1SendTestMessageRequest}
         * @since 1.13
         */
        protected SendTestMessage(java.lang.String resource, com.google.api.services.essentialcontacts.v1.model.GoogleCloudEssentialcontactsV1SendTestMessageRequest content) {
          super(Essentialcontacts.this, "POST", REST_PATH, content, com.google.api.services.essentialcontacts.v1.model.GoogleProtobufEmpty.class);
          this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public SendTestMessage set$Xgafv(java.lang.String $Xgafv) {
          return (SendTestMessage) super.set$Xgafv($Xgafv);
        }

        @Override
        public SendTestMessage setAccessToken(java.lang.String accessToken) {
          return (SendTestMessage) super.setAccessToken(accessToken);
        }

        @Override
        public SendTestMessage setAlt(java.lang.String alt) {
          return (SendTestMessage) super.setAlt(alt);
        }

        @Override
        public SendTestMessage setCallback(java.lang.String callback) {
          return (SendTestMessage) super.setCallback(callback);
        }

        @Override
        public SendTestMessage setFields(java.lang.String fields) {
          return (SendTestMessage) super.setFields(fields);
        }

        @Override
        public SendTestMessage setKey(java.lang.String key) {
          return (SendTestMessage) super.setKey(key);
        }

        @Override
        public SendTestMessage setOauthToken(java.lang.String oauthToken) {
          return (SendTestMessage) super.setOauthToken(oauthToken);
        }

        @Override
        public SendTestMessage setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (SendTestMessage) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public SendTestMessage setQuotaUser(java.lang.String quotaUser) {
          return (SendTestMessage) super.setQuotaUser(quotaUser);
        }

        @Override
        public SendTestMessage setUploadType(java.lang.String uploadType) {
          return (SendTestMessage) super.setUploadType(uploadType);
        }

        @Override
        public SendTestMessage setUploadProtocol(java.lang.String uploadProtocol) {
          return (SendTestMessage) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the resource to send the test message for. All contacts must either
         * be set directly on this resource or inherited from another resource that is an ancestor
         * of this one. Format: organizations/{organization_id}, folders/{folder_id} or
         * projects/{project_id}
         */
        @com.google.api.client.util.Key
        private java.lang.String resource;

        /** Required. The name of the resource to send the test message for. All contacts must either be set
       directly on this resource or inherited from another resource that is an ancestor of this one.
       Format: organizations/{organization_id}, folders/{folder_id} or projects/{project_id}
         */
        public java.lang.String getResource() {
          return resource;
        }

        /**
         * Required. The name of the resource to send the test message for. All contacts must either
         * be set directly on this resource or inherited from another resource that is an ancestor
         * of this one. Format: organizations/{organization_id}, folders/{folder_id} or
         * projects/{project_id}
         */
        public SendTestMessage setResource(java.lang.String resource) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.resource = resource;
          return this;
        }

        @Override
        public SendTestMessage set(String parameterName, Object value) {
          return (SendTestMessage) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * Builder for {@link Essentialcontacts}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link Essentialcontacts}. */
    @Override
    public Essentialcontacts build() {
      return new Essentialcontacts(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link EssentialcontactsRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setEssentialcontactsRequestInitializer(
        EssentialcontactsRequestInitializer essentialcontactsRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(essentialcontactsRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
