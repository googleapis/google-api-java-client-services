/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.compute.model;

/**
 * This message is used if the resource type follows the Orchestrated integration model with
 * ProgressiveRollout.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Compute Engine API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class RolloutRolloutEntityOrchestratedEntity extends com.google.api.client.json.GenericJson {

  /**
   * Required. Specifies the behavior of the Rollout if an out of band update is detected in a
   * project during a Rollout. It can be one of the following values: 1) overwrite : Overwrite the
   * local value with the rollout value. 2) no_overwrite : Do not overwrite the local value with the
   * rollout value.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String conflictBehavior;

  /**
   * Required. Orchestration action during the Rollout. It can be one of the following values: 1)
   * "update": Resources will be updated by the rollout. 2) "delete": Resources will be deleted by
   * the rollout.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String orchestrationAction;

  /**
   * Required. Fully qualified resource name of the resource which contains the source of truth of
   * the configuration being rolled out across locations/projects. For example, in the case of a
   * global Rollout which is applied across regions, this contains the name of the global resource
   * created by the user which contains a payload for a resource that is orchestrated across
   * regions. This follows the following format: //.googleapis.com/organizations//locations/global//
   * e.g. //osconfig.googleapis.com/organizations/1/locations/global/policyOrchestrators/po1
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String orchestrationSource;

  /**
   * Required. Specifies the behavior of the Rollout if an out of band update is detected in a
   * project during a Rollout. It can be one of the following values: 1) overwrite : Overwrite the
   * local value with the rollout value. 2) no_overwrite : Do not overwrite the local value with the
   * rollout value.
   * @return value or {@code null} for none
   */
  public java.lang.String getConflictBehavior() {
    return conflictBehavior;
  }

  /**
   * Required. Specifies the behavior of the Rollout if an out of band update is detected in a
   * project during a Rollout. It can be one of the following values: 1) overwrite : Overwrite the
   * local value with the rollout value. 2) no_overwrite : Do not overwrite the local value with the
   * rollout value.
   * @param conflictBehavior conflictBehavior or {@code null} for none
   */
  public RolloutRolloutEntityOrchestratedEntity setConflictBehavior(java.lang.String conflictBehavior) {
    this.conflictBehavior = conflictBehavior;
    return this;
  }

  /**
   * Required. Orchestration action during the Rollout. It can be one of the following values: 1)
   * "update": Resources will be updated by the rollout. 2) "delete": Resources will be deleted by
   * the rollout.
   * @return value or {@code null} for none
   */
  public java.lang.String getOrchestrationAction() {
    return orchestrationAction;
  }

  /**
   * Required. Orchestration action during the Rollout. It can be one of the following values: 1)
   * "update": Resources will be updated by the rollout. 2) "delete": Resources will be deleted by
   * the rollout.
   * @param orchestrationAction orchestrationAction or {@code null} for none
   */
  public RolloutRolloutEntityOrchestratedEntity setOrchestrationAction(java.lang.String orchestrationAction) {
    this.orchestrationAction = orchestrationAction;
    return this;
  }

  /**
   * Required. Fully qualified resource name of the resource which contains the source of truth of
   * the configuration being rolled out across locations/projects. For example, in the case of a
   * global Rollout which is applied across regions, this contains the name of the global resource
   * created by the user which contains a payload for a resource that is orchestrated across
   * regions. This follows the following format: //.googleapis.com/organizations//locations/global//
   * e.g. //osconfig.googleapis.com/organizations/1/locations/global/policyOrchestrators/po1
   * @return value or {@code null} for none
   */
  public java.lang.String getOrchestrationSource() {
    return orchestrationSource;
  }

  /**
   * Required. Fully qualified resource name of the resource which contains the source of truth of
   * the configuration being rolled out across locations/projects. For example, in the case of a
   * global Rollout which is applied across regions, this contains the name of the global resource
   * created by the user which contains a payload for a resource that is orchestrated across
   * regions. This follows the following format: //.googleapis.com/organizations//locations/global//
   * e.g. //osconfig.googleapis.com/organizations/1/locations/global/policyOrchestrators/po1
   * @param orchestrationSource orchestrationSource or {@code null} for none
   */
  public RolloutRolloutEntityOrchestratedEntity setOrchestrationSource(java.lang.String orchestrationSource) {
    this.orchestrationSource = orchestrationSource;
    return this;
  }

  @Override
  public RolloutRolloutEntityOrchestratedEntity set(String fieldName, Object value) {
    return (RolloutRolloutEntityOrchestratedEntity) super.set(fieldName, value);
  }

  @Override
  public RolloutRolloutEntityOrchestratedEntity clone() {
    return (RolloutRolloutEntityOrchestratedEntity) super.clone();
  }

}
