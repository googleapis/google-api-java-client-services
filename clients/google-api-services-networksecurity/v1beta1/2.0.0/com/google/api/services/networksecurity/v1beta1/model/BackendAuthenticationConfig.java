/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.networksecurity.v1beta1.model;

/**
 * BackendAuthenticationConfig message groups the TrustConfig together with other settings that
 * control how the load balancer authenticates, and expresses its identity to, the backend: *
 * `trustConfig` is the attached TrustConfig. * `wellKnownRoots` indicates whether the load balance
 * should trust backend server certificates that are issued by public certificate authorities, in
 * addition to certificates trusted by the TrustConfig. * `clientCertificate` is a client
 * certificate that the load balancer uses to express its identity to the backend, if the connection
 * to the backend uses mTLS. You can attach the BackendAuthenticationConfig to the load balancerâ€™s
 * BackendService directly determining how that BackendService negotiates TLS.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Network Security API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class BackendAuthenticationConfig extends com.google.api.client.json.GenericJson {

  /**
   * Optional. A reference to a certificatemanager.googleapis.com.Certificate resource. This is a
   * relative resource path following the form
   * "projects/{project}/locations/{location}/certificates/{certificate}". Used by a BackendService
   * to negotiate mTLS when the backend connection uses TLS and the backend requests a client
   * certificate. Must have a CLIENT_AUTH scope.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String clientCertificate;

  /**
   * Output only. The timestamp when the resource was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Optional. Free-text description of the resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Output only. Etag of the resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String etag;

  /**
   * Set of label tags associated with the resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Required. Name of the BackendAuthenticationConfig resource. It matches the pattern
   * `projects/locations/{location}/backendAuthenticationConfigs/{backend_authentication_config}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Optional. A reference to a TrustConfig resource from the certificatemanager.googleapis.com
   * namespace. This is a relative resource path following the form
   * "projects/{project}/locations/{location}/trustConfigs/{trust_config}". A BackendService uses
   * the chain of trust represented by this TrustConfig, if specified, to validate the server
   * certificates presented by the backend. Required unless wellKnownRoots is set to PUBLIC_ROOTS.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String trustConfig;

  /**
   * Output only. The timestamp when the resource was updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Well known roots to use for server certificate validation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String wellKnownRoots;

  /**
   * Optional. A reference to a certificatemanager.googleapis.com.Certificate resource. This is a
   * relative resource path following the form
   * "projects/{project}/locations/{location}/certificates/{certificate}". Used by a BackendService
   * to negotiate mTLS when the backend connection uses TLS and the backend requests a client
   * certificate. Must have a CLIENT_AUTH scope.
   * @return value or {@code null} for none
   */
  public java.lang.String getClientCertificate() {
    return clientCertificate;
  }

  /**
   * Optional. A reference to a certificatemanager.googleapis.com.Certificate resource. This is a
   * relative resource path following the form
   * "projects/{project}/locations/{location}/certificates/{certificate}". Used by a BackendService
   * to negotiate mTLS when the backend connection uses TLS and the backend requests a client
   * certificate. Must have a CLIENT_AUTH scope.
   * @param clientCertificate clientCertificate or {@code null} for none
   */
  public BackendAuthenticationConfig setClientCertificate(java.lang.String clientCertificate) {
    this.clientCertificate = clientCertificate;
    return this;
  }

  /**
   * Output only. The timestamp when the resource was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The timestamp when the resource was created.
   * @param createTime createTime or {@code null} for none
   */
  public BackendAuthenticationConfig setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Optional. Free-text description of the resource.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Optional. Free-text description of the resource.
   * @param description description or {@code null} for none
   */
  public BackendAuthenticationConfig setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Output only. Etag of the resource.
   * @return value or {@code null} for none
   */
  public java.lang.String getEtag() {
    return etag;
  }

  /**
   * Output only. Etag of the resource.
   * @param etag etag or {@code null} for none
   */
  public BackendAuthenticationConfig setEtag(java.lang.String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * Set of label tags associated with the resource.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Set of label tags associated with the resource.
   * @param labels labels or {@code null} for none
   */
  public BackendAuthenticationConfig setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Required. Name of the BackendAuthenticationConfig resource. It matches the pattern
   * `projects/locations/{location}/backendAuthenticationConfigs/{backend_authentication_config}`
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Required. Name of the BackendAuthenticationConfig resource. It matches the pattern
   * `projects/locations/{location}/backendAuthenticationConfigs/{backend_authentication_config}`
   * @param name name or {@code null} for none
   */
  public BackendAuthenticationConfig setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Optional. A reference to a TrustConfig resource from the certificatemanager.googleapis.com
   * namespace. This is a relative resource path following the form
   * "projects/{project}/locations/{location}/trustConfigs/{trust_config}". A BackendService uses
   * the chain of trust represented by this TrustConfig, if specified, to validate the server
   * certificates presented by the backend. Required unless wellKnownRoots is set to PUBLIC_ROOTS.
   * @return value or {@code null} for none
   */
  public java.lang.String getTrustConfig() {
    return trustConfig;
  }

  /**
   * Optional. A reference to a TrustConfig resource from the certificatemanager.googleapis.com
   * namespace. This is a relative resource path following the form
   * "projects/{project}/locations/{location}/trustConfigs/{trust_config}". A BackendService uses
   * the chain of trust represented by this TrustConfig, if specified, to validate the server
   * certificates presented by the backend. Required unless wellKnownRoots is set to PUBLIC_ROOTS.
   * @param trustConfig trustConfig or {@code null} for none
   */
  public BackendAuthenticationConfig setTrustConfig(java.lang.String trustConfig) {
    this.trustConfig = trustConfig;
    return this;
  }

  /**
   * Output only. The timestamp when the resource was updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. The timestamp when the resource was updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public BackendAuthenticationConfig setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  /**
   * Well known roots to use for server certificate validation.
   * @return value or {@code null} for none
   */
  public java.lang.String getWellKnownRoots() {
    return wellKnownRoots;
  }

  /**
   * Well known roots to use for server certificate validation.
   * @param wellKnownRoots wellKnownRoots or {@code null} for none
   */
  public BackendAuthenticationConfig setWellKnownRoots(java.lang.String wellKnownRoots) {
    this.wellKnownRoots = wellKnownRoots;
    return this;
  }

  @Override
  public BackendAuthenticationConfig set(String fieldName, Object value) {
    return (BackendAuthenticationConfig) super.set(fieldName, value);
  }

  @Override
  public BackendAuthenticationConfig clone() {
    return (BackendAuthenticationConfig) super.clone();
  }

}
