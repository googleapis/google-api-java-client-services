/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.essentialcontacts.v1.model;

/**
 * A contact that will receive notifications from Google Cloud.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Essential Contacts API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudEssentialcontactsV1Contact extends com.google.api.client.json.GenericJson {

  /**
   * Required. The email address to send notifications to. This does not need to be a Google
   * account.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String email;

  /**
   * The preferred language for notifications, as a ISO 639-1 language code. See [Supported
   * languages](https://cloud.google.com/resource-manager/docs/managing-notification-contacts
   * #supported-languages) for a list of supported languages.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String languageTag;

  /**
   * The identifier for the contact. Format: {resource_type}/{resource_id}/contacts/{contact_id}
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * The categories of notifications that the contact will receive communications for.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> notificationCategorySubscriptions;

  /**
   * The last time the validation_state was updated, either manually or automatically. A contact is
   * considered stale if its validation state was updated more than 1 year ago.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String validateTime;

  /**
   * The validity of the contact. A contact is considered valid if it is the correct recipient for
   * notifications for a particular resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String validationState;

  /**
   * Required. The email address to send notifications to. This does not need to be a Google
   * account.
   * @return value or {@code null} for none
   */
  public java.lang.String getEmail() {
    return email;
  }

  /**
   * Required. The email address to send notifications to. This does not need to be a Google
   * account.
   * @param email email or {@code null} for none
   */
  public GoogleCloudEssentialcontactsV1Contact setEmail(java.lang.String email) {
    this.email = email;
    return this;
  }

  /**
   * The preferred language for notifications, as a ISO 639-1 language code. See [Supported
   * languages](https://cloud.google.com/resource-manager/docs/managing-notification-contacts
   * #supported-languages) for a list of supported languages.
   * @return value or {@code null} for none
   */
  public java.lang.String getLanguageTag() {
    return languageTag;
  }

  /**
   * The preferred language for notifications, as a ISO 639-1 language code. See [Supported
   * languages](https://cloud.google.com/resource-manager/docs/managing-notification-contacts
   * #supported-languages) for a list of supported languages.
   * @param languageTag languageTag or {@code null} for none
   */
  public GoogleCloudEssentialcontactsV1Contact setLanguageTag(java.lang.String languageTag) {
    this.languageTag = languageTag;
    return this;
  }

  /**
   * The identifier for the contact. Format: {resource_type}/{resource_id}/contacts/{contact_id}
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * The identifier for the contact. Format: {resource_type}/{resource_id}/contacts/{contact_id}
   * @param name name or {@code null} for none
   */
  public GoogleCloudEssentialcontactsV1Contact setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * The categories of notifications that the contact will receive communications for.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getNotificationCategorySubscriptions() {
    return notificationCategorySubscriptions;
  }

  /**
   * The categories of notifications that the contact will receive communications for.
   * @param notificationCategorySubscriptions notificationCategorySubscriptions or {@code null} for none
   */
  public GoogleCloudEssentialcontactsV1Contact setNotificationCategorySubscriptions(java.util.List<java.lang.String> notificationCategorySubscriptions) {
    this.notificationCategorySubscriptions = notificationCategorySubscriptions;
    return this;
  }

  /**
   * The last time the validation_state was updated, either manually or automatically. A contact is
   * considered stale if its validation state was updated more than 1 year ago.
   * @return value or {@code null} for none
   */
  public String getValidateTime() {
    return validateTime;
  }

  /**
   * The last time the validation_state was updated, either manually or automatically. A contact is
   * considered stale if its validation state was updated more than 1 year ago.
   * @param validateTime validateTime or {@code null} for none
   */
  public GoogleCloudEssentialcontactsV1Contact setValidateTime(String validateTime) {
    this.validateTime = validateTime;
    return this;
  }

  /**
   * The validity of the contact. A contact is considered valid if it is the correct recipient for
   * notifications for a particular resource.
   * @return value or {@code null} for none
   */
  public java.lang.String getValidationState() {
    return validationState;
  }

  /**
   * The validity of the contact. A contact is considered valid if it is the correct recipient for
   * notifications for a particular resource.
   * @param validationState validationState or {@code null} for none
   */
  public GoogleCloudEssentialcontactsV1Contact setValidationState(java.lang.String validationState) {
    this.validationState = validationState;
    return this;
  }

  @Override
  public GoogleCloudEssentialcontactsV1Contact set(String fieldName, Object value) {
    return (GoogleCloudEssentialcontactsV1Contact) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudEssentialcontactsV1Contact clone() {
    return (GoogleCloudEssentialcontactsV1Contact) super.clone();
  }

}
