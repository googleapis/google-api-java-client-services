/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.replicapoolupdater;

/**
 * Service definition for Replicapoolupdater (v1beta1).
 *
 * <p>
 * [Deprecated. Please use compute.instanceGroupManagers.update method. replicapoolupdater API will be disabled after December 30th, 2016] Updates groups of Compute Engine instances.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/compute/docs/instance-groups/manager/#applying_rolling_updates_using_the_updater_service" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link ReplicapoolupdaterRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Replicapoolupdater extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.26.0 of the Google Compute Engine Instance Group Updater API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://www.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "replicapoolupdater/v1beta1/projects/";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch/replicapoolupdater/v1beta1";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Replicapoolupdater(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Replicapoolupdater(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the RollingUpdates collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Replicapoolupdater replicapoolupdater = new Replicapoolupdater(...);}
   *   {@code Replicapoolupdater.RollingUpdates.List request = replicapoolupdater.rollingUpdates().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public RollingUpdates rollingUpdates() {
    return new RollingUpdates();
  }

  /**
   * The "rollingUpdates" collection of methods.
   */
  public class RollingUpdates {

    /**
     * Cancels an update. The update must be PAUSED before it can be cancelled. This has no effect if
     * the update is already CANCELLED.
     *
     * Create a request for the method "rollingUpdates.cancel".
     *
     * This request holds the parameters needed by the replicapoolupdater server.  After setting any
     * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
     *
     * @param project The Google Developers Console project name.
     * @param zone The name of the zone in which the update's target resides.
     * @param rollingUpdate The name of the update.
     * @return the request
     */
    public Cancel cancel(java.lang.String project, java.lang.String zone, java.lang.String rollingUpdate) throws java.io.IOException {
      Cancel result = new Cancel(project, zone, rollingUpdate);
      initialize(result);
      return result;
    }

    public class Cancel extends ReplicapoolupdaterRequest<com.google.api.services.replicapoolupdater.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/rollingUpdates/{rollingUpdate}/cancel";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Cancels an update. The update must be PAUSED before it can be cancelled. This has no effect if
       * the update is already CANCELLED.
       *
       * Create a request for the method "rollingUpdates.cancel".
       *
       * This request holds the parameters needed by the the replicapoolupdater server.  After setting
       * any optional parameters, call the {@link Cancel#execute()} method to invoke the remote
       * operation. <p> {@link
       * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project The Google Developers Console project name.
       * @param zone The name of the zone in which the update's target resides.
       * @param rollingUpdate The name of the update.
       * @since 1.13
       */
      protected Cancel(java.lang.String project, java.lang.String zone, java.lang.String rollingUpdate) {
        super(Replicapoolupdater.this, "POST", REST_PATH, null, com.google.api.services.replicapoolupdater.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        this.rollingUpdate = com.google.api.client.util.Preconditions.checkNotNull(rollingUpdate, "Required parameter rollingUpdate must be specified.");
      }

      @Override
      public Cancel setAlt(java.lang.String alt) {
        return (Cancel) super.setAlt(alt);
      }

      @Override
      public Cancel setFields(java.lang.String fields) {
        return (Cancel) super.setFields(fields);
      }

      @Override
      public Cancel setKey(java.lang.String key) {
        return (Cancel) super.setKey(key);
      }

      @Override
      public Cancel setOauthToken(java.lang.String oauthToken) {
        return (Cancel) super.setOauthToken(oauthToken);
      }

      @Override
      public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Cancel) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Cancel setQuotaUser(java.lang.String quotaUser) {
        return (Cancel) super.setQuotaUser(quotaUser);
      }

      @Override
      public Cancel setUserIp(java.lang.String userIp) {
        return (Cancel) super.setUserIp(userIp);
      }

      /** The Google Developers Console project name. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** The Google Developers Console project name.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** The Google Developers Console project name. */
      public Cancel setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone in which the update's target resides. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone in which the update's target resides.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone in which the update's target resides. */
      public Cancel setZone(java.lang.String zone) {
        this.zone = zone;
        return this;
      }

      /** The name of the update. */
      @com.google.api.client.util.Key
      private java.lang.String rollingUpdate;

      /** The name of the update.
       */
      public java.lang.String getRollingUpdate() {
        return rollingUpdate;
      }

      /** The name of the update. */
      public Cancel setRollingUpdate(java.lang.String rollingUpdate) {
        this.rollingUpdate = rollingUpdate;
        return this;
      }

      @Override
      public Cancel set(String parameterName, Object value) {
        return (Cancel) super.set(parameterName, value);
      }
    }
    /**
     * Returns information about an update.
     *
     * Create a request for the method "rollingUpdates.get".
     *
     * This request holds the parameters needed by the replicapoolupdater server.  After setting any
     * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project The Google Developers Console project name.
     * @param zone The name of the zone in which the update's target resides.
     * @param rollingUpdate The name of the update.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String zone, java.lang.String rollingUpdate) throws java.io.IOException {
      Get result = new Get(project, zone, rollingUpdate);
      initialize(result);
      return result;
    }

    public class Get extends ReplicapoolupdaterRequest<com.google.api.services.replicapoolupdater.model.RollingUpdate> {

      private static final String REST_PATH = "{project}/zones/{zone}/rollingUpdates/{rollingUpdate}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Returns information about an update.
       *
       * Create a request for the method "rollingUpdates.get".
       *
       * This request holds the parameters needed by the the replicapoolupdater server.  After setting
       * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       * <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project The Google Developers Console project name.
       * @param zone The name of the zone in which the update's target resides.
       * @param rollingUpdate The name of the update.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String zone, java.lang.String rollingUpdate) {
        super(Replicapoolupdater.this, "GET", REST_PATH, null, com.google.api.services.replicapoolupdater.model.RollingUpdate.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        this.rollingUpdate = com.google.api.client.util.Preconditions.checkNotNull(rollingUpdate, "Required parameter rollingUpdate must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** The Google Developers Console project name. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** The Google Developers Console project name.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** The Google Developers Console project name. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone in which the update's target resides. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone in which the update's target resides.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone in which the update's target resides. */
      public Get setZone(java.lang.String zone) {
        this.zone = zone;
        return this;
      }

      /** The name of the update. */
      @com.google.api.client.util.Key
      private java.lang.String rollingUpdate;

      /** The name of the update.
       */
      public java.lang.String getRollingUpdate() {
        return rollingUpdate;
      }

      /** The name of the update. */
      public Get setRollingUpdate(java.lang.String rollingUpdate) {
        this.rollingUpdate = rollingUpdate;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Inserts and starts a new update.
     *
     * Create a request for the method "rollingUpdates.insert".
     *
     * This request holds the parameters needed by the replicapoolupdater server.  After setting any
     * optional parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param project The Google Developers Console project name.
     * @param zone The name of the zone in which the update's target resides.
     * @param content the {@link com.google.api.services.replicapoolupdater.model.RollingUpdate}
     * @return the request
     */
    public Insert insert(java.lang.String project, java.lang.String zone, com.google.api.services.replicapoolupdater.model.RollingUpdate content) throws java.io.IOException {
      Insert result = new Insert(project, zone, content);
      initialize(result);
      return result;
    }

    public class Insert extends ReplicapoolupdaterRequest<com.google.api.services.replicapoolupdater.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/rollingUpdates";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Inserts and starts a new update.
       *
       * Create a request for the method "rollingUpdates.insert".
       *
       * This request holds the parameters needed by the the replicapoolupdater server.  After setting
       * any optional parameters, call the {@link Insert#execute()} method to invoke the remote
       * operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project The Google Developers Console project name.
       * @param zone The name of the zone in which the update's target resides.
       * @param content the {@link com.google.api.services.replicapoolupdater.model.RollingUpdate}
       * @since 1.13
       */
      protected Insert(java.lang.String project, java.lang.String zone, com.google.api.services.replicapoolupdater.model.RollingUpdate content) {
        super(Replicapoolupdater.this, "POST", REST_PATH, content, com.google.api.services.replicapoolupdater.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** The Google Developers Console project name. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** The Google Developers Console project name.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** The Google Developers Console project name. */
      public Insert setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone in which the update's target resides. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone in which the update's target resides.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone in which the update's target resides. */
      public Insert setZone(java.lang.String zone) {
        this.zone = zone;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Lists recent updates for a given managed instance group, in reverse chronological order and
     * paginated format.
     *
     * Create a request for the method "rollingUpdates.list".
     *
     * This request holds the parameters needed by the replicapoolupdater server.  After setting any
     * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project The Google Developers Console project name.
     * @param zone The name of the zone in which the update's target resides.
     * @return the request
     */
    public List list(java.lang.String project, java.lang.String zone) throws java.io.IOException {
      List result = new List(project, zone);
      initialize(result);
      return result;
    }

    public class List extends ReplicapoolupdaterRequest<com.google.api.services.replicapoolupdater.model.RollingUpdateList> {

      private static final String REST_PATH = "{project}/zones/{zone}/rollingUpdates";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Lists recent updates for a given managed instance group, in reverse chronological order and
       * paginated format.
       *
       * Create a request for the method "rollingUpdates.list".
       *
       * This request holds the parameters needed by the the replicapoolupdater server.  After setting
       * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       * <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project The Google Developers Console project name.
       * @param zone The name of the zone in which the update's target resides.
       * @since 1.13
       */
      protected List(java.lang.String project, java.lang.String zone) {
        super(Replicapoolupdater.this, "GET", REST_PATH, null, com.google.api.services.replicapoolupdater.model.RollingUpdateList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** The Google Developers Console project name. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** The Google Developers Console project name.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** The Google Developers Console project name. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone in which the update's target resides. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone in which the update's target resides.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone in which the update's target resides. */
      public List setZone(java.lang.String zone) {
        this.zone = zone;
        return this;
      }

      /** Optional. Filter expression for filtering listed resources. */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** Optional. Filter expression for filtering listed resources.
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /** Optional. Filter expression for filtering listed resources. */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * Optional. Maximum count of results to be returned. Maximum value is 500 and default value
       * is 500.
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** Optional. Maximum count of results to be returned. Maximum value is 500 and default value is 500.
     [default: 500] [minimum: 0] [maximum: 500]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * Optional. Maximum count of results to be returned. Maximum value is 500 and default value
       * is 500.
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Optional. Tag returned by a previous list request truncated by maxResults. Used to continue
       * a previous list request.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a
     previous list request.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Optional. Tag returned by a previous list request truncated by maxResults. Used to continue
       * a previous list request.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Lists the current status for each instance within a given update.
     *
     * Create a request for the method "rollingUpdates.listInstanceUpdates".
     *
     * This request holds the parameters needed by the replicapoolupdater server.  After setting any
     * optional parameters, call the {@link ListInstanceUpdates#execute()} method to invoke the remote
     * operation.
     *
     * @param project The Google Developers Console project name.
     * @param zone The name of the zone in which the update's target resides.
     * @param rollingUpdate The name of the update.
     * @return the request
     */
    public ListInstanceUpdates listInstanceUpdates(java.lang.String project, java.lang.String zone, java.lang.String rollingUpdate) throws java.io.IOException {
      ListInstanceUpdates result = new ListInstanceUpdates(project, zone, rollingUpdate);
      initialize(result);
      return result;
    }

    public class ListInstanceUpdates extends ReplicapoolupdaterRequest<com.google.api.services.replicapoolupdater.model.InstanceUpdateList> {

      private static final String REST_PATH = "{project}/zones/{zone}/rollingUpdates/{rollingUpdate}/instanceUpdates";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Lists the current status for each instance within a given update.
       *
       * Create a request for the method "rollingUpdates.listInstanceUpdates".
       *
       * This request holds the parameters needed by the the replicapoolupdater server.  After setting
       * any optional parameters, call the {@link ListInstanceUpdates#execute()} method to invoke the
       * remote operation. <p> {@link ListInstanceUpdates#initialize(com.google.api.client.googleapis.se
       * rvices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
       * after invoking the constructor. </p>
       *
       * @param project The Google Developers Console project name.
       * @param zone The name of the zone in which the update's target resides.
       * @param rollingUpdate The name of the update.
       * @since 1.13
       */
      protected ListInstanceUpdates(java.lang.String project, java.lang.String zone, java.lang.String rollingUpdate) {
        super(Replicapoolupdater.this, "GET", REST_PATH, null, com.google.api.services.replicapoolupdater.model.InstanceUpdateList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        this.rollingUpdate = com.google.api.client.util.Preconditions.checkNotNull(rollingUpdate, "Required parameter rollingUpdate must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public ListInstanceUpdates setAlt(java.lang.String alt) {
        return (ListInstanceUpdates) super.setAlt(alt);
      }

      @Override
      public ListInstanceUpdates setFields(java.lang.String fields) {
        return (ListInstanceUpdates) super.setFields(fields);
      }

      @Override
      public ListInstanceUpdates setKey(java.lang.String key) {
        return (ListInstanceUpdates) super.setKey(key);
      }

      @Override
      public ListInstanceUpdates setOauthToken(java.lang.String oauthToken) {
        return (ListInstanceUpdates) super.setOauthToken(oauthToken);
      }

      @Override
      public ListInstanceUpdates setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (ListInstanceUpdates) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public ListInstanceUpdates setQuotaUser(java.lang.String quotaUser) {
        return (ListInstanceUpdates) super.setQuotaUser(quotaUser);
      }

      @Override
      public ListInstanceUpdates setUserIp(java.lang.String userIp) {
        return (ListInstanceUpdates) super.setUserIp(userIp);
      }

      /** The Google Developers Console project name. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** The Google Developers Console project name.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** The Google Developers Console project name. */
      public ListInstanceUpdates setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone in which the update's target resides. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone in which the update's target resides.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone in which the update's target resides. */
      public ListInstanceUpdates setZone(java.lang.String zone) {
        this.zone = zone;
        return this;
      }

      /** The name of the update. */
      @com.google.api.client.util.Key
      private java.lang.String rollingUpdate;

      /** The name of the update.
       */
      public java.lang.String getRollingUpdate() {
        return rollingUpdate;
      }

      /** The name of the update. */
      public ListInstanceUpdates setRollingUpdate(java.lang.String rollingUpdate) {
        this.rollingUpdate = rollingUpdate;
        return this;
      }

      /** Optional. Filter expression for filtering listed resources. */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** Optional. Filter expression for filtering listed resources.
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /** Optional. Filter expression for filtering listed resources. */
      public ListInstanceUpdates setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * Optional. Maximum count of results to be returned. Maximum value is 500 and default value
       * is 500.
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** Optional. Maximum count of results to be returned. Maximum value is 500 and default value is 500.
     [default: 500] [minimum: 0] [maximum: 500]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * Optional. Maximum count of results to be returned. Maximum value is 500 and default value
       * is 500.
       */
      public ListInstanceUpdates setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Optional. Tag returned by a previous list request truncated by maxResults. Used to continue
       * a previous list request.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a
     previous list request.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Optional. Tag returned by a previous list request truncated by maxResults. Used to continue
       * a previous list request.
       */
      public ListInstanceUpdates setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public ListInstanceUpdates set(String parameterName, Object value) {
        return (ListInstanceUpdates) super.set(parameterName, value);
      }
    }
    /**
     * Pauses the update in state from ROLLING_FORWARD or ROLLING_BACK. Has no effect if invoked when
     * the state of the update is PAUSED.
     *
     * Create a request for the method "rollingUpdates.pause".
     *
     * This request holds the parameters needed by the replicapoolupdater server.  After setting any
     * optional parameters, call the {@link Pause#execute()} method to invoke the remote operation.
     *
     * @param project The Google Developers Console project name.
     * @param zone The name of the zone in which the update's target resides.
     * @param rollingUpdate The name of the update.
     * @return the request
     */
    public Pause pause(java.lang.String project, java.lang.String zone, java.lang.String rollingUpdate) throws java.io.IOException {
      Pause result = new Pause(project, zone, rollingUpdate);
      initialize(result);
      return result;
    }

    public class Pause extends ReplicapoolupdaterRequest<com.google.api.services.replicapoolupdater.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/rollingUpdates/{rollingUpdate}/pause";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Pauses the update in state from ROLLING_FORWARD or ROLLING_BACK. Has no effect if invoked when
       * the state of the update is PAUSED.
       *
       * Create a request for the method "rollingUpdates.pause".
       *
       * This request holds the parameters needed by the the replicapoolupdater server.  After setting
       * any optional parameters, call the {@link Pause#execute()} method to invoke the remote
       * operation. <p> {@link
       * Pause#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project The Google Developers Console project name.
       * @param zone The name of the zone in which the update's target resides.
       * @param rollingUpdate The name of the update.
       * @since 1.13
       */
      protected Pause(java.lang.String project, java.lang.String zone, java.lang.String rollingUpdate) {
        super(Replicapoolupdater.this, "POST", REST_PATH, null, com.google.api.services.replicapoolupdater.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        this.rollingUpdate = com.google.api.client.util.Preconditions.checkNotNull(rollingUpdate, "Required parameter rollingUpdate must be specified.");
      }

      @Override
      public Pause setAlt(java.lang.String alt) {
        return (Pause) super.setAlt(alt);
      }

      @Override
      public Pause setFields(java.lang.String fields) {
        return (Pause) super.setFields(fields);
      }

      @Override
      public Pause setKey(java.lang.String key) {
        return (Pause) super.setKey(key);
      }

      @Override
      public Pause setOauthToken(java.lang.String oauthToken) {
        return (Pause) super.setOauthToken(oauthToken);
      }

      @Override
      public Pause setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Pause) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Pause setQuotaUser(java.lang.String quotaUser) {
        return (Pause) super.setQuotaUser(quotaUser);
      }

      @Override
      public Pause setUserIp(java.lang.String userIp) {
        return (Pause) super.setUserIp(userIp);
      }

      /** The Google Developers Console project name. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** The Google Developers Console project name.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** The Google Developers Console project name. */
      public Pause setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone in which the update's target resides. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone in which the update's target resides.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone in which the update's target resides. */
      public Pause setZone(java.lang.String zone) {
        this.zone = zone;
        return this;
      }

      /** The name of the update. */
      @com.google.api.client.util.Key
      private java.lang.String rollingUpdate;

      /** The name of the update.
       */
      public java.lang.String getRollingUpdate() {
        return rollingUpdate;
      }

      /** The name of the update. */
      public Pause setRollingUpdate(java.lang.String rollingUpdate) {
        this.rollingUpdate = rollingUpdate;
        return this;
      }

      @Override
      public Pause set(String parameterName, Object value) {
        return (Pause) super.set(parameterName, value);
      }
    }
    /**
     * Continues an update in PAUSED state. Has no effect if invoked when the state of the update is
     * ROLLED_OUT.
     *
     * Create a request for the method "rollingUpdates.resume".
     *
     * This request holds the parameters needed by the replicapoolupdater server.  After setting any
     * optional parameters, call the {@link Resume#execute()} method to invoke the remote operation.
     *
     * @param project The Google Developers Console project name.
     * @param zone The name of the zone in which the update's target resides.
     * @param rollingUpdate The name of the update.
     * @return the request
     */
    public Resume resume(java.lang.String project, java.lang.String zone, java.lang.String rollingUpdate) throws java.io.IOException {
      Resume result = new Resume(project, zone, rollingUpdate);
      initialize(result);
      return result;
    }

    public class Resume extends ReplicapoolupdaterRequest<com.google.api.services.replicapoolupdater.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/rollingUpdates/{rollingUpdate}/resume";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Continues an update in PAUSED state. Has no effect if invoked when the state of the update is
       * ROLLED_OUT.
       *
       * Create a request for the method "rollingUpdates.resume".
       *
       * This request holds the parameters needed by the the replicapoolupdater server.  After setting
       * any optional parameters, call the {@link Resume#execute()} method to invoke the remote
       * operation. <p> {@link
       * Resume#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project The Google Developers Console project name.
       * @param zone The name of the zone in which the update's target resides.
       * @param rollingUpdate The name of the update.
       * @since 1.13
       */
      protected Resume(java.lang.String project, java.lang.String zone, java.lang.String rollingUpdate) {
        super(Replicapoolupdater.this, "POST", REST_PATH, null, com.google.api.services.replicapoolupdater.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        this.rollingUpdate = com.google.api.client.util.Preconditions.checkNotNull(rollingUpdate, "Required parameter rollingUpdate must be specified.");
      }

      @Override
      public Resume setAlt(java.lang.String alt) {
        return (Resume) super.setAlt(alt);
      }

      @Override
      public Resume setFields(java.lang.String fields) {
        return (Resume) super.setFields(fields);
      }

      @Override
      public Resume setKey(java.lang.String key) {
        return (Resume) super.setKey(key);
      }

      @Override
      public Resume setOauthToken(java.lang.String oauthToken) {
        return (Resume) super.setOauthToken(oauthToken);
      }

      @Override
      public Resume setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Resume) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Resume setQuotaUser(java.lang.String quotaUser) {
        return (Resume) super.setQuotaUser(quotaUser);
      }

      @Override
      public Resume setUserIp(java.lang.String userIp) {
        return (Resume) super.setUserIp(userIp);
      }

      /** The Google Developers Console project name. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** The Google Developers Console project name.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** The Google Developers Console project name. */
      public Resume setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone in which the update's target resides. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone in which the update's target resides.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone in which the update's target resides. */
      public Resume setZone(java.lang.String zone) {
        this.zone = zone;
        return this;
      }

      /** The name of the update. */
      @com.google.api.client.util.Key
      private java.lang.String rollingUpdate;

      /** The name of the update.
       */
      public java.lang.String getRollingUpdate() {
        return rollingUpdate;
      }

      /** The name of the update. */
      public Resume setRollingUpdate(java.lang.String rollingUpdate) {
        this.rollingUpdate = rollingUpdate;
        return this;
      }

      @Override
      public Resume set(String parameterName, Object value) {
        return (Resume) super.set(parameterName, value);
      }
    }
    /**
     * Rolls back the update in state from ROLLING_FORWARD or PAUSED. Has no effect if invoked when the
     * state of the update is ROLLED_BACK.
     *
     * Create a request for the method "rollingUpdates.rollback".
     *
     * This request holds the parameters needed by the replicapoolupdater server.  After setting any
     * optional parameters, call the {@link Rollback#execute()} method to invoke the remote operation.
     *
     * @param project The Google Developers Console project name.
     * @param zone The name of the zone in which the update's target resides.
     * @param rollingUpdate The name of the update.
     * @return the request
     */
    public Rollback rollback(java.lang.String project, java.lang.String zone, java.lang.String rollingUpdate) throws java.io.IOException {
      Rollback result = new Rollback(project, zone, rollingUpdate);
      initialize(result);
      return result;
    }

    public class Rollback extends ReplicapoolupdaterRequest<com.google.api.services.replicapoolupdater.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/rollingUpdates/{rollingUpdate}/rollback";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Rolls back the update in state from ROLLING_FORWARD or PAUSED. Has no effect if invoked when
       * the state of the update is ROLLED_BACK.
       *
       * Create a request for the method "rollingUpdates.rollback".
       *
       * This request holds the parameters needed by the the replicapoolupdater server.  After setting
       * any optional parameters, call the {@link Rollback#execute()} method to invoke the remote
       * operation. <p> {@link
       * Rollback#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project The Google Developers Console project name.
       * @param zone The name of the zone in which the update's target resides.
       * @param rollingUpdate The name of the update.
       * @since 1.13
       */
      protected Rollback(java.lang.String project, java.lang.String zone, java.lang.String rollingUpdate) {
        super(Replicapoolupdater.this, "POST", REST_PATH, null, com.google.api.services.replicapoolupdater.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        this.rollingUpdate = com.google.api.client.util.Preconditions.checkNotNull(rollingUpdate, "Required parameter rollingUpdate must be specified.");
      }

      @Override
      public Rollback setAlt(java.lang.String alt) {
        return (Rollback) super.setAlt(alt);
      }

      @Override
      public Rollback setFields(java.lang.String fields) {
        return (Rollback) super.setFields(fields);
      }

      @Override
      public Rollback setKey(java.lang.String key) {
        return (Rollback) super.setKey(key);
      }

      @Override
      public Rollback setOauthToken(java.lang.String oauthToken) {
        return (Rollback) super.setOauthToken(oauthToken);
      }

      @Override
      public Rollback setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Rollback) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Rollback setQuotaUser(java.lang.String quotaUser) {
        return (Rollback) super.setQuotaUser(quotaUser);
      }

      @Override
      public Rollback setUserIp(java.lang.String userIp) {
        return (Rollback) super.setUserIp(userIp);
      }

      /** The Google Developers Console project name. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** The Google Developers Console project name.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** The Google Developers Console project name. */
      public Rollback setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone in which the update's target resides. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone in which the update's target resides.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone in which the update's target resides. */
      public Rollback setZone(java.lang.String zone) {
        this.zone = zone;
        return this;
      }

      /** The name of the update. */
      @com.google.api.client.util.Key
      private java.lang.String rollingUpdate;

      /** The name of the update.
       */
      public java.lang.String getRollingUpdate() {
        return rollingUpdate;
      }

      /** The name of the update. */
      public Rollback setRollingUpdate(java.lang.String rollingUpdate) {
        this.rollingUpdate = rollingUpdate;
        return this;
      }

      @Override
      public Rollback set(String parameterName, Object value) {
        return (Rollback) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the ZoneOperations collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Replicapoolupdater replicapoolupdater = new Replicapoolupdater(...);}
   *   {@code Replicapoolupdater.ZoneOperations.List request = replicapoolupdater.zoneOperations().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public ZoneOperations zoneOperations() {
    return new ZoneOperations();
  }

  /**
   * The "zoneOperations" collection of methods.
   */
  public class ZoneOperations {

    /**
     * Retrieves the specified zone-specific operation resource.
     *
     * Create a request for the method "zoneOperations.get".
     *
     * This request holds the parameters needed by the replicapoolupdater server.  After setting any
     * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Name of the project scoping this request.
     * @param zone Name of the zone scoping this request.
     * @param operation Name of the operation resource to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String zone, java.lang.String operation) throws java.io.IOException {
      Get result = new Get(project, zone, operation);
      initialize(result);
      return result;
    }

    public class Get extends ReplicapoolupdaterRequest<com.google.api.services.replicapoolupdater.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/operations/{operation}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves the specified zone-specific operation resource.
       *
       * Create a request for the method "zoneOperations.get".
       *
       * This request holds the parameters needed by the the replicapoolupdater server.  After setting
       * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       * <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Name of the project scoping this request.
       * @param zone Name of the zone scoping this request.
       * @param operation Name of the operation resource to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String zone, java.lang.String operation) {
        super(Replicapoolupdater.this, "GET", REST_PATH, null, com.google.api.services.replicapoolupdater.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        this.operation = com.google.api.client.util.Preconditions.checkNotNull(operation, "Required parameter operation must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Name of the project scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Name of the project scoping this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Name of the project scoping this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the zone scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** Name of the zone scoping this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** Name of the zone scoping this request. */
      public Get setZone(java.lang.String zone) {
        this.zone = zone;
        return this;
      }

      /** Name of the operation resource to return. */
      @com.google.api.client.util.Key
      private java.lang.String operation;

      /** Name of the operation resource to return.
       */
      public java.lang.String getOperation() {
        return operation;
      }

      /** Name of the operation resource to return. */
      public Get setOperation(java.lang.String operation) {
        this.operation = operation;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the list of Operation resources contained within the specified zone.
     *
     * Create a request for the method "zoneOperations.list".
     *
     * This request holds the parameters needed by the replicapoolupdater server.  After setting any
     * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Name of the project scoping this request.
     * @param zone Name of the zone scoping this request.
     * @return the request
     */
    public List list(java.lang.String project, java.lang.String zone) throws java.io.IOException {
      List result = new List(project, zone);
      initialize(result);
      return result;
    }

    public class List extends ReplicapoolupdaterRequest<com.google.api.services.replicapoolupdater.model.OperationList> {

      private static final String REST_PATH = "{project}/zones/{zone}/operations";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves the list of Operation resources contained within the specified zone.
       *
       * Create a request for the method "zoneOperations.list".
       *
       * This request holds the parameters needed by the the replicapoolupdater server.  After setting
       * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       * <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Name of the project scoping this request.
       * @param zone Name of the zone scoping this request.
       * @since 1.13
       */
      protected List(java.lang.String project, java.lang.String zone) {
        super(Replicapoolupdater.this, "GET", REST_PATH, null, com.google.api.services.replicapoolupdater.model.OperationList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Name of the project scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Name of the project scoping this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Name of the project scoping this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the zone scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** Name of the zone scoping this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** Name of the zone scoping this request. */
      public List setZone(java.lang.String zone) {
        this.zone = zone;
        return this;
      }

      /** Optional. Filter expression for filtering listed resources. */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** Optional. Filter expression for filtering listed resources.
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /** Optional. Filter expression for filtering listed resources. */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * Optional. Maximum count of results to be returned. Maximum value is 500 and default value
       * is 500.
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** Optional. Maximum count of results to be returned. Maximum value is 500 and default value is 500.
     [default: 500] [minimum: 0] [maximum: 500]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * Optional. Maximum count of results to be returned. Maximum value is 500 and default value
       * is 500.
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Optional. Tag returned by a previous list request truncated by maxResults. Used to continue
       * a previous list request.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a
     previous list request.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Optional. Tag returned by a previous list request truncated by maxResults. Used to continue
       * a previous list request.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link Replicapoolupdater}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link Replicapoolupdater}. */
    @Override
    public Replicapoolupdater build() {
      return new Replicapoolupdater(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link ReplicapoolupdaterRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setReplicapoolupdaterRequestInitializer(
        ReplicapoolupdaterRequestInitializer replicapoolupdaterRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(replicapoolupdaterRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
