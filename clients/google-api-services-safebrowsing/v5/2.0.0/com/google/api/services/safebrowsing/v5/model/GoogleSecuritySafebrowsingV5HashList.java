/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.safebrowsing.v5.model;

/**
 * A list of hashes identified by its name.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Safe Browsing API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleSecuritySafebrowsingV5HashList extends com.google.api.client.json.GenericJson {

  /**
   * The 8-byte additions.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleSecuritySafebrowsingV5RiceDeltaEncoded64Bit additionsEightBytes;

  /**
   * The 4-byte additions.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleSecuritySafebrowsingV5RiceDeltaEncoded32Bit additionsFourBytes;

  /**
   * The 16-byte additions.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleSecuritySafebrowsingV5RiceDeltaEncoded128Bit additionsSixteenBytes;

  /**
   * The 32-byte additions.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleSecuritySafebrowsingV5RiceDeltaEncoded256Bit additionsThirtyTwoBytes;

  /**
   * The Rice-delta encoded version of removal indices. Since each hash list definitely has less
   * than 2^32 entries, the indices are treated as 32-bit integers and encoded.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleSecuritySafebrowsingV5RiceDeltaEncoded32Bit compressedRemovals;

  /**
   * Metadata about the hash list. This is not populated by the `GetHashList` method, but this is
   * populated by the `ListHashLists` method.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleSecuritySafebrowsingV5HashListMetadata metadata;

  /**
   * Clients should wait at least this long to get the hash list again. If omitted or zero, clients
   * SHOULD fetch immediately because it indicates that the server has an additional update to be
   * sent to the client, but could not due to the client-specified constraints.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String minimumWaitDuration;

  /**
   * The name of the hash list. Note that the Global Cache is also just a hash list and can be
   * referred to here.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * When true, this is a partial diff containing additions and removals based on what the client
   * already has. When false, this is the complete hash list. When false, the client MUST delete any
   * locally stored version for this hash list. This means that either the version possessed by the
   * client is seriously out-of-date or the client data is believed to be corrupt. The
   * `compressed_removals` field will be empty. When true, the client MUST apply an incremental
   * update by applying removals and then additions.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean partialUpdate;

  /**
   * The sorted list of all hashes, hashed again with SHA256. This is the checksum for the sorted
   * list of all hashes present in the database after applying the provided update. In the case that
   * no updates were provided, the server will omit this field to indicate that the client should
   * use the existing checksum.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String sha256Checksum;

  /**
   * The version of the hash list. The client MUST NOT manipulate those bytes.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String version;

  /**
   * The 8-byte additions.
   * @return value or {@code null} for none
   */
  public GoogleSecuritySafebrowsingV5RiceDeltaEncoded64Bit getAdditionsEightBytes() {
    return additionsEightBytes;
  }

  /**
   * The 8-byte additions.
   * @param additionsEightBytes additionsEightBytes or {@code null} for none
   */
  public GoogleSecuritySafebrowsingV5HashList setAdditionsEightBytes(GoogleSecuritySafebrowsingV5RiceDeltaEncoded64Bit additionsEightBytes) {
    this.additionsEightBytes = additionsEightBytes;
    return this;
  }

  /**
   * The 4-byte additions.
   * @return value or {@code null} for none
   */
  public GoogleSecuritySafebrowsingV5RiceDeltaEncoded32Bit getAdditionsFourBytes() {
    return additionsFourBytes;
  }

  /**
   * The 4-byte additions.
   * @param additionsFourBytes additionsFourBytes or {@code null} for none
   */
  public GoogleSecuritySafebrowsingV5HashList setAdditionsFourBytes(GoogleSecuritySafebrowsingV5RiceDeltaEncoded32Bit additionsFourBytes) {
    this.additionsFourBytes = additionsFourBytes;
    return this;
  }

  /**
   * The 16-byte additions.
   * @return value or {@code null} for none
   */
  public GoogleSecuritySafebrowsingV5RiceDeltaEncoded128Bit getAdditionsSixteenBytes() {
    return additionsSixteenBytes;
  }

  /**
   * The 16-byte additions.
   * @param additionsSixteenBytes additionsSixteenBytes or {@code null} for none
   */
  public GoogleSecuritySafebrowsingV5HashList setAdditionsSixteenBytes(GoogleSecuritySafebrowsingV5RiceDeltaEncoded128Bit additionsSixteenBytes) {
    this.additionsSixteenBytes = additionsSixteenBytes;
    return this;
  }

  /**
   * The 32-byte additions.
   * @return value or {@code null} for none
   */
  public GoogleSecuritySafebrowsingV5RiceDeltaEncoded256Bit getAdditionsThirtyTwoBytes() {
    return additionsThirtyTwoBytes;
  }

  /**
   * The 32-byte additions.
   * @param additionsThirtyTwoBytes additionsThirtyTwoBytes or {@code null} for none
   */
  public GoogleSecuritySafebrowsingV5HashList setAdditionsThirtyTwoBytes(GoogleSecuritySafebrowsingV5RiceDeltaEncoded256Bit additionsThirtyTwoBytes) {
    this.additionsThirtyTwoBytes = additionsThirtyTwoBytes;
    return this;
  }

  /**
   * The Rice-delta encoded version of removal indices. Since each hash list definitely has less
   * than 2^32 entries, the indices are treated as 32-bit integers and encoded.
   * @return value or {@code null} for none
   */
  public GoogleSecuritySafebrowsingV5RiceDeltaEncoded32Bit getCompressedRemovals() {
    return compressedRemovals;
  }

  /**
   * The Rice-delta encoded version of removal indices. Since each hash list definitely has less
   * than 2^32 entries, the indices are treated as 32-bit integers and encoded.
   * @param compressedRemovals compressedRemovals or {@code null} for none
   */
  public GoogleSecuritySafebrowsingV5HashList setCompressedRemovals(GoogleSecuritySafebrowsingV5RiceDeltaEncoded32Bit compressedRemovals) {
    this.compressedRemovals = compressedRemovals;
    return this;
  }

  /**
   * Metadata about the hash list. This is not populated by the `GetHashList` method, but this is
   * populated by the `ListHashLists` method.
   * @return value or {@code null} for none
   */
  public GoogleSecuritySafebrowsingV5HashListMetadata getMetadata() {
    return metadata;
  }

  /**
   * Metadata about the hash list. This is not populated by the `GetHashList` method, but this is
   * populated by the `ListHashLists` method.
   * @param metadata metadata or {@code null} for none
   */
  public GoogleSecuritySafebrowsingV5HashList setMetadata(GoogleSecuritySafebrowsingV5HashListMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

  /**
   * Clients should wait at least this long to get the hash list again. If omitted or zero, clients
   * SHOULD fetch immediately because it indicates that the server has an additional update to be
   * sent to the client, but could not due to the client-specified constraints.
   * @return value or {@code null} for none
   */
  public String getMinimumWaitDuration() {
    return minimumWaitDuration;
  }

  /**
   * Clients should wait at least this long to get the hash list again. If omitted or zero, clients
   * SHOULD fetch immediately because it indicates that the server has an additional update to be
   * sent to the client, but could not due to the client-specified constraints.
   * @param minimumWaitDuration minimumWaitDuration or {@code null} for none
   */
  public GoogleSecuritySafebrowsingV5HashList setMinimumWaitDuration(String minimumWaitDuration) {
    this.minimumWaitDuration = minimumWaitDuration;
    return this;
  }

  /**
   * The name of the hash list. Note that the Global Cache is also just a hash list and can be
   * referred to here.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * The name of the hash list. Note that the Global Cache is also just a hash list and can be
   * referred to here.
   * @param name name or {@code null} for none
   */
  public GoogleSecuritySafebrowsingV5HashList setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * When true, this is a partial diff containing additions and removals based on what the client
   * already has. When false, this is the complete hash list. When false, the client MUST delete any
   * locally stored version for this hash list. This means that either the version possessed by the
   * client is seriously out-of-date or the client data is believed to be corrupt. The
   * `compressed_removals` field will be empty. When true, the client MUST apply an incremental
   * update by applying removals and then additions.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getPartialUpdate() {
    return partialUpdate;
  }

  /**
   * When true, this is a partial diff containing additions and removals based on what the client
   * already has. When false, this is the complete hash list. When false, the client MUST delete any
   * locally stored version for this hash list. This means that either the version possessed by the
   * client is seriously out-of-date or the client data is believed to be corrupt. The
   * `compressed_removals` field will be empty. When true, the client MUST apply an incremental
   * update by applying removals and then additions.
   * @param partialUpdate partialUpdate or {@code null} for none
   */
  public GoogleSecuritySafebrowsingV5HashList setPartialUpdate(java.lang.Boolean partialUpdate) {
    this.partialUpdate = partialUpdate;
    return this;
  }

  /**
   * The sorted list of all hashes, hashed again with SHA256. This is the checksum for the sorted
   * list of all hashes present in the database after applying the provided update. In the case that
   * no updates were provided, the server will omit this field to indicate that the client should
   * use the existing checksum.
   * @see #decodeSha256Checksum()
   * @return value or {@code null} for none
   */
  public java.lang.String getSha256Checksum() {
    return sha256Checksum;
  }

  /**
   * The sorted list of all hashes, hashed again with SHA256. This is the checksum for the sorted
   * list of all hashes present in the database after applying the provided update. In the case that
   * no updates were provided, the server will omit this field to indicate that the client should
   * use the existing checksum.
   * @see #getSha256Checksum()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeSha256Checksum() {
    return com.google.api.client.util.Base64.decodeBase64(sha256Checksum);
  }

  /**
   * The sorted list of all hashes, hashed again with SHA256. This is the checksum for the sorted
   * list of all hashes present in the database after applying the provided update. In the case that
   * no updates were provided, the server will omit this field to indicate that the client should
   * use the existing checksum.
   * @see #encodeSha256Checksum()
   * @param sha256Checksum sha256Checksum or {@code null} for none
   */
  public GoogleSecuritySafebrowsingV5HashList setSha256Checksum(java.lang.String sha256Checksum) {
    this.sha256Checksum = sha256Checksum;
    return this;
  }

  /**
   * The sorted list of all hashes, hashed again with SHA256. This is the checksum for the sorted
   * list of all hashes present in the database after applying the provided update. In the case that
   * no updates were provided, the server will omit this field to indicate that the client should
   * use the existing checksum.
   * @see #setSha256Checksum()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public GoogleSecuritySafebrowsingV5HashList encodeSha256Checksum(byte[] sha256Checksum) {
    this.sha256Checksum = com.google.api.client.util.Base64.encodeBase64URLSafeString(sha256Checksum);
    return this;
  }

  /**
   * The version of the hash list. The client MUST NOT manipulate those bytes.
   * @see #decodeVersion()
   * @return value or {@code null} for none
   */
  public java.lang.String getVersion() {
    return version;
  }

  /**
   * The version of the hash list. The client MUST NOT manipulate those bytes.
   * @see #getVersion()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeVersion() {
    return com.google.api.client.util.Base64.decodeBase64(version);
  }

  /**
   * The version of the hash list. The client MUST NOT manipulate those bytes.
   * @see #encodeVersion()
   * @param version version or {@code null} for none
   */
  public GoogleSecuritySafebrowsingV5HashList setVersion(java.lang.String version) {
    this.version = version;
    return this;
  }

  /**
   * The version of the hash list. The client MUST NOT manipulate those bytes.
   * @see #setVersion()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public GoogleSecuritySafebrowsingV5HashList encodeVersion(byte[] version) {
    this.version = com.google.api.client.util.Base64.encodeBase64URLSafeString(version);
    return this;
  }

  @Override
  public GoogleSecuritySafebrowsingV5HashList set(String fieldName, Object value) {
    return (GoogleSecuritySafebrowsingV5HashList) super.set(fieldName, value);
  }

  @Override
  public GoogleSecuritySafebrowsingV5HashList clone() {
    return (GoogleSecuritySafebrowsingV5HashList) super.clone();
  }

}
