/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.monitoring.v3.model;

/**
 * An alert is the representation of a violation of an alert policy. It is a read-only resource that
 * cannot be modified by the accompanied API.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Monitoring API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Alert extends com.google.api.client.json.GenericJson {

  /**
   * The time when the alert was closed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String closeTime;

  /**
   * The log information associated with the alert. This field is only populated for log-based
   * alerts.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private LogMetadata log;

  /**
   * The metadata of the monitored resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private MonitoredResourceMetadata metadata;

  /**
   * The metric type and any metric labels preserved from the incident's generating condition.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Metric metric;

  /**
   * Identifier. The name of the alert.The format is:
   * projects/[PROJECT_ID_OR_NUMBER]/alerts/[ALERT_ID] The [ALERT_ID] is a system-assigned unique
   * identifier for the alert.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * The time when the alert was opened.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String openTime;

  /**
   * The snapshot of the alert policy that generated this alert.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private PolicySnapshot policy;

  /**
   * The monitored resource type and any monitored resource labels preserved from the incident's
   * generating condition.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private MonitoredResource resource;

  /**
   * Output only. The current state of the alert.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * The time when the alert was closed.
   * @return value or {@code null} for none
   */
  public String getCloseTime() {
    return closeTime;
  }

  /**
   * The time when the alert was closed.
   * @param closeTime closeTime or {@code null} for none
   */
  public Alert setCloseTime(String closeTime) {
    this.closeTime = closeTime;
    return this;
  }

  /**
   * The log information associated with the alert. This field is only populated for log-based
   * alerts.
   * @return value or {@code null} for none
   */
  public LogMetadata getLog() {
    return log;
  }

  /**
   * The log information associated with the alert. This field is only populated for log-based
   * alerts.
   * @param log log or {@code null} for none
   */
  public Alert setLog(LogMetadata log) {
    this.log = log;
    return this;
  }

  /**
   * The metadata of the monitored resource.
   * @return value or {@code null} for none
   */
  public MonitoredResourceMetadata getMetadata() {
    return metadata;
  }

  /**
   * The metadata of the monitored resource.
   * @param metadata metadata or {@code null} for none
   */
  public Alert setMetadata(MonitoredResourceMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

  /**
   * The metric type and any metric labels preserved from the incident's generating condition.
   * @return value or {@code null} for none
   */
  public Metric getMetric() {
    return metric;
  }

  /**
   * The metric type and any metric labels preserved from the incident's generating condition.
   * @param metric metric or {@code null} for none
   */
  public Alert setMetric(Metric metric) {
    this.metric = metric;
    return this;
  }

  /**
   * Identifier. The name of the alert.The format is:
   * projects/[PROJECT_ID_OR_NUMBER]/alerts/[ALERT_ID] The [ALERT_ID] is a system-assigned unique
   * identifier for the alert.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Identifier. The name of the alert.The format is:
   * projects/[PROJECT_ID_OR_NUMBER]/alerts/[ALERT_ID] The [ALERT_ID] is a system-assigned unique
   * identifier for the alert.
   * @param name name or {@code null} for none
   */
  public Alert setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * The time when the alert was opened.
   * @return value or {@code null} for none
   */
  public String getOpenTime() {
    return openTime;
  }

  /**
   * The time when the alert was opened.
   * @param openTime openTime or {@code null} for none
   */
  public Alert setOpenTime(String openTime) {
    this.openTime = openTime;
    return this;
  }

  /**
   * The snapshot of the alert policy that generated this alert.
   * @return value or {@code null} for none
   */
  public PolicySnapshot getPolicy() {
    return policy;
  }

  /**
   * The snapshot of the alert policy that generated this alert.
   * @param policy policy or {@code null} for none
   */
  public Alert setPolicy(PolicySnapshot policy) {
    this.policy = policy;
    return this;
  }

  /**
   * The monitored resource type and any monitored resource labels preserved from the incident's
   * generating condition.
   * @return value or {@code null} for none
   */
  public MonitoredResource getResource() {
    return resource;
  }

  /**
   * The monitored resource type and any monitored resource labels preserved from the incident's
   * generating condition.
   * @param resource resource or {@code null} for none
   */
  public Alert setResource(MonitoredResource resource) {
    this.resource = resource;
    return this;
  }

  /**
   * Output only. The current state of the alert.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. The current state of the alert.
   * @param state state or {@code null} for none
   */
  public Alert setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  @Override
  public Alert set(String fieldName, Object value) {
    return (Alert) super.set(fieldName, value);
  }

  @Override
  public Alert clone() {
    return (Alert) super.clone();
  }

}
