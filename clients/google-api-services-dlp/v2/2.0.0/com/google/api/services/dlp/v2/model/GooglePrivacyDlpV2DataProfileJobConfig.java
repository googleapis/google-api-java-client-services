/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dlp.v2.model;

/**
 * Configuration for setting up a job to scan resources for profile generation. Only one data
 * profile configuration may exist per organization, folder, or project. The generated data profiles
 * are retained according to the [data retention policy] (https://cloud.google.com/sensitive-data-
 * protection/docs/data-profiles#retention).
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Sensitive Data Protection (DLP). For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GooglePrivacyDlpV2DataProfileJobConfig extends com.google.api.client.json.GenericJson {

  /**
   * Actions to execute at the completion of the job.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GooglePrivacyDlpV2DataProfileAction> dataProfileActions;

  static {
    // hack to force ProGuard to consider GooglePrivacyDlpV2DataProfileAction used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(GooglePrivacyDlpV2DataProfileAction.class);
  }

  /**
   * Detection logic for profile generation. Not all template features are used by profiles.
   * FindingLimits, include_quote and exclude_info_types have no impact on data profiling. Multiple
   * templates may be provided if there is data in multiple regions. At most one template must be
   * specified per-region (including "global"). Each region is scanned using the applicable
   * template. If no region-specific template is specified, but a "global" template is specified, it
   * will be copied to that region and used instead. If no global or region-specific template is
   * provided for a region with data, that region's data will not be scanned. For more information,
   * see https://cloud.google.com/sensitive-data-protection/docs/data-profiles#data-residency.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> inspectTemplates;

  /**
   * The data to scan.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GooglePrivacyDlpV2DataProfileLocation location;

  /**
   * Must be set only when scanning other clouds.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GooglePrivacyDlpV2OtherCloudDiscoveryStartingLocation otherCloudStartingLocation;

  /**
   * The project that will run the scan. The DLP service account that exists within this project
   * must have access to all resources that are profiled, and the DLP API must be enabled.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String projectId;

  /**
   * Actions to execute at the completion of the job.
   * @return value or {@code null} for none
   */
  public java.util.List<GooglePrivacyDlpV2DataProfileAction> getDataProfileActions() {
    return dataProfileActions;
  }

  /**
   * Actions to execute at the completion of the job.
   * @param dataProfileActions dataProfileActions or {@code null} for none
   */
  public GooglePrivacyDlpV2DataProfileJobConfig setDataProfileActions(java.util.List<GooglePrivacyDlpV2DataProfileAction> dataProfileActions) {
    this.dataProfileActions = dataProfileActions;
    return this;
  }

  /**
   * Detection logic for profile generation. Not all template features are used by profiles.
   * FindingLimits, include_quote and exclude_info_types have no impact on data profiling. Multiple
   * templates may be provided if there is data in multiple regions. At most one template must be
   * specified per-region (including "global"). Each region is scanned using the applicable
   * template. If no region-specific template is specified, but a "global" template is specified, it
   * will be copied to that region and used instead. If no global or region-specific template is
   * provided for a region with data, that region's data will not be scanned. For more information,
   * see https://cloud.google.com/sensitive-data-protection/docs/data-profiles#data-residency.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getInspectTemplates() {
    return inspectTemplates;
  }

  /**
   * Detection logic for profile generation. Not all template features are used by profiles.
   * FindingLimits, include_quote and exclude_info_types have no impact on data profiling. Multiple
   * templates may be provided if there is data in multiple regions. At most one template must be
   * specified per-region (including "global"). Each region is scanned using the applicable
   * template. If no region-specific template is specified, but a "global" template is specified, it
   * will be copied to that region and used instead. If no global or region-specific template is
   * provided for a region with data, that region's data will not be scanned. For more information,
   * see https://cloud.google.com/sensitive-data-protection/docs/data-profiles#data-residency.
   * @param inspectTemplates inspectTemplates or {@code null} for none
   */
  public GooglePrivacyDlpV2DataProfileJobConfig setInspectTemplates(java.util.List<java.lang.String> inspectTemplates) {
    this.inspectTemplates = inspectTemplates;
    return this;
  }

  /**
   * The data to scan.
   * @return value or {@code null} for none
   */
  public GooglePrivacyDlpV2DataProfileLocation getLocation() {
    return location;
  }

  /**
   * The data to scan.
   * @param location location or {@code null} for none
   */
  public GooglePrivacyDlpV2DataProfileJobConfig setLocation(GooglePrivacyDlpV2DataProfileLocation location) {
    this.location = location;
    return this;
  }

  /**
   * Must be set only when scanning other clouds.
   * @return value or {@code null} for none
   */
  public GooglePrivacyDlpV2OtherCloudDiscoveryStartingLocation getOtherCloudStartingLocation() {
    return otherCloudStartingLocation;
  }

  /**
   * Must be set only when scanning other clouds.
   * @param otherCloudStartingLocation otherCloudStartingLocation or {@code null} for none
   */
  public GooglePrivacyDlpV2DataProfileJobConfig setOtherCloudStartingLocation(GooglePrivacyDlpV2OtherCloudDiscoveryStartingLocation otherCloudStartingLocation) {
    this.otherCloudStartingLocation = otherCloudStartingLocation;
    return this;
  }

  /**
   * The project that will run the scan. The DLP service account that exists within this project
   * must have access to all resources that are profiled, and the DLP API must be enabled.
   * @return value or {@code null} for none
   */
  public java.lang.String getProjectId() {
    return projectId;
  }

  /**
   * The project that will run the scan. The DLP service account that exists within this project
   * must have access to all resources that are profiled, and the DLP API must be enabled.
   * @param projectId projectId or {@code null} for none
   */
  public GooglePrivacyDlpV2DataProfileJobConfig setProjectId(java.lang.String projectId) {
    this.projectId = projectId;
    return this;
  }

  @Override
  public GooglePrivacyDlpV2DataProfileJobConfig set(String fieldName, Object value) {
    return (GooglePrivacyDlpV2DataProfileJobConfig) super.set(fieldName, value);
  }

  @Override
  public GooglePrivacyDlpV2DataProfileJobConfig clone() {
    return (GooglePrivacyDlpV2DataProfileJobConfig) super.clone();
  }

}
