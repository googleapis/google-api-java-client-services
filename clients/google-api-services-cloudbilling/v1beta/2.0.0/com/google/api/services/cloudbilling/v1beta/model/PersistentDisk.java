/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudbilling.v1beta.model;

/**
 * Specification of a persistent disk attached to a VM.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Billing API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class PersistentDisk extends com.google.api.client.json.GenericJson {

  /**
   * Specifies the size of disk. Must be at least 10 GB.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Usage diskSize;

  /**
   * The [disk type](https://cloud.google.com/compute/docs/disks#disk-types). For example: "pd-
   * standard".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String diskType;

  /**
   * Indicates how many IOPS to provision for the disk for extreme persistent disks. This sets the
   * number of I/O operations per second that the disk can handle. Values must be between 10,000 and
   * 120,000.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Usage provisionedIops;

  /**
   * The geographic scope of the disk. Defaults to `SCOPE_ZONAL` if not specified.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String scope;

  /**
   * Specifies the size of disk. Must be at least 10 GB.
   * @return value or {@code null} for none
   */
  public Usage getDiskSize() {
    return diskSize;
  }

  /**
   * Specifies the size of disk. Must be at least 10 GB.
   * @param diskSize diskSize or {@code null} for none
   */
  public PersistentDisk setDiskSize(Usage diskSize) {
    this.diskSize = diskSize;
    return this;
  }

  /**
   * The [disk type](https://cloud.google.com/compute/docs/disks#disk-types). For example: "pd-
   * standard".
   * @return value or {@code null} for none
   */
  public java.lang.String getDiskType() {
    return diskType;
  }

  /**
   * The [disk type](https://cloud.google.com/compute/docs/disks#disk-types). For example: "pd-
   * standard".
   * @param diskType diskType or {@code null} for none
   */
  public PersistentDisk setDiskType(java.lang.String diskType) {
    this.diskType = diskType;
    return this;
  }

  /**
   * Indicates how many IOPS to provision for the disk for extreme persistent disks. This sets the
   * number of I/O operations per second that the disk can handle. Values must be between 10,000 and
   * 120,000.
   * @return value or {@code null} for none
   */
  public Usage getProvisionedIops() {
    return provisionedIops;
  }

  /**
   * Indicates how many IOPS to provision for the disk for extreme persistent disks. This sets the
   * number of I/O operations per second that the disk can handle. Values must be between 10,000 and
   * 120,000.
   * @param provisionedIops provisionedIops or {@code null} for none
   */
  public PersistentDisk setProvisionedIops(Usage provisionedIops) {
    this.provisionedIops = provisionedIops;
    return this;
  }

  /**
   * The geographic scope of the disk. Defaults to `SCOPE_ZONAL` if not specified.
   * @return value or {@code null} for none
   */
  public java.lang.String getScope() {
    return scope;
  }

  /**
   * The geographic scope of the disk. Defaults to `SCOPE_ZONAL` if not specified.
   * @param scope scope or {@code null} for none
   */
  public PersistentDisk setScope(java.lang.String scope) {
    this.scope = scope;
    return this;
  }

  @Override
  public PersistentDisk set(String fieldName, Object value) {
    return (PersistentDisk) super.set(fieldName, value);
  }

  @Override
  public PersistentDisk clone() {
    return (PersistentDisk) super.clone();
  }

}
