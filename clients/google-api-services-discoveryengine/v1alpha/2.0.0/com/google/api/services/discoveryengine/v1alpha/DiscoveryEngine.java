/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.discoveryengine.v1alpha;

/**
 * Service definition for DiscoveryEngine (v1alpha).
 *
 * <p>
 * Discovery Engine API.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/discovery-engine/docs" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link DiscoveryEngineRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class DiscoveryEngine extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        (com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1))) ||
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION >= 2,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "2.0.0 of the Discovery Engine API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://discoveryengine.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://discoveryengine.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public DiscoveryEngine(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  DiscoveryEngine(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Locations collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
   *   {@code DiscoveryEngine.Locations.List request = discoveryengine.locations().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Locations locations() {
    return new Locations();
  }

  /**
   * The "locations" collection of methods.
   */
  public class Locations {

    /**
     * Gets the Widget Config using the uuid.
     *
     * Create a request for the method "locations.lookupWidgetConfig".
     *
     * This request holds the parameters needed by the discoveryengine server.  After setting any
     * optional parameters, call the {@link LookupWidgetConfig#execute()} method to invoke the remote
     * operation.
     *
     * @param location Required. The location resource where lookup widget will be performed. Format:
     *        `locations/{location}`
     * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaLookupWidgetConfigRequest}
     * @return the request
     */
    public LookupWidgetConfig lookupWidgetConfig(java.lang.String location, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaLookupWidgetConfigRequest content) throws java.io.IOException {
      LookupWidgetConfig result = new LookupWidgetConfig(location, content);
      initialize(result);
      return result;
    }

    public class LookupWidgetConfig extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaLookupWidgetConfigResponse> {

      private static final String REST_PATH = "v1alpha/{+location}/lookupWidgetConfig";

      private final java.util.regex.Pattern LOCATION_PATTERN =
          java.util.regex.Pattern.compile("^locations/[^/]+$");

      /**
       * Gets the Widget Config using the uuid.
       *
       * Create a request for the method "locations.lookupWidgetConfig".
       *
       * This request holds the parameters needed by the the discoveryengine server.  After setting any
       * optional parameters, call the {@link LookupWidgetConfig#execute()} method to invoke the remote
       * operation. <p> {@link LookupWidgetConfig#initialize(com.google.api.client.googleapis.services.A
       * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param location Required. The location resource where lookup widget will be performed. Format:
     *        `locations/{location}`
       * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaLookupWidgetConfigRequest}
       * @since 1.13
       */
      protected LookupWidgetConfig(java.lang.String location, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaLookupWidgetConfigRequest content) {
        super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaLookupWidgetConfigResponse.class);
        this.location = com.google.api.client.util.Preconditions.checkNotNull(location, "Required parameter location must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(LOCATION_PATTERN.matcher(location).matches(),
              "Parameter location must conform to the pattern " +
              "^locations/[^/]+$");
        }
      }

      @Override
      public LookupWidgetConfig set$Xgafv(java.lang.String $Xgafv) {
        return (LookupWidgetConfig) super.set$Xgafv($Xgafv);
      }

      @Override
      public LookupWidgetConfig setAccessToken(java.lang.String accessToken) {
        return (LookupWidgetConfig) super.setAccessToken(accessToken);
      }

      @Override
      public LookupWidgetConfig setAlt(java.lang.String alt) {
        return (LookupWidgetConfig) super.setAlt(alt);
      }

      @Override
      public LookupWidgetConfig setCallback(java.lang.String callback) {
        return (LookupWidgetConfig) super.setCallback(callback);
      }

      @Override
      public LookupWidgetConfig setFields(java.lang.String fields) {
        return (LookupWidgetConfig) super.setFields(fields);
      }

      @Override
      public LookupWidgetConfig setKey(java.lang.String key) {
        return (LookupWidgetConfig) super.setKey(key);
      }

      @Override
      public LookupWidgetConfig setOauthToken(java.lang.String oauthToken) {
        return (LookupWidgetConfig) super.setOauthToken(oauthToken);
      }

      @Override
      public LookupWidgetConfig setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (LookupWidgetConfig) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public LookupWidgetConfig setQuotaUser(java.lang.String quotaUser) {
        return (LookupWidgetConfig) super.setQuotaUser(quotaUser);
      }

      @Override
      public LookupWidgetConfig setUploadType(java.lang.String uploadType) {
        return (LookupWidgetConfig) super.setUploadType(uploadType);
      }

      @Override
      public LookupWidgetConfig setUploadProtocol(java.lang.String uploadProtocol) {
        return (LookupWidgetConfig) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The location resource where lookup widget will be performed. Format:
       * `locations/{location}`
       */
      @com.google.api.client.util.Key
      private java.lang.String location;

      /** Required. The location resource where lookup widget will be performed. Format:
     `locations/{location}`
       */
      public java.lang.String getLocation() {
        return location;
      }

      /**
       * Required. The location resource where lookup widget will be performed. Format:
       * `locations/{location}`
       */
      public LookupWidgetConfig setLocation(java.lang.String location) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(LOCATION_PATTERN.matcher(location).matches(),
              "Parameter location must conform to the pattern " +
              "^locations/[^/]+$");
        }
        this.location = location;
        return this;
      }

      @Override
      public LookupWidgetConfig set(String parameterName, Object value) {
        return (LookupWidgetConfig) super.set(parameterName, value);
      }
    }
    /**
     * Performs a user input completion with keyword suggestion. Similar to the
     * CompletionService.CompleteQuery method, but a widget version that allows CompleteQuery without
     * API Key. It supports CompleteQuery with or without JWT token.
     *
     * Create a request for the method "locations.widgetCompleteQuery".
     *
     * This request holds the parameters needed by the discoveryengine server.  After setting any
     * optional parameters, call the {@link WidgetCompleteQuery#execute()} method to invoke the remote
     * operation.
     *
     * @param location Required. The location resource where widget complete query will be performed. Format:
     *        `locations/{location}`
     * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaWidgetCompleteQueryRequest}
     * @return the request
     */
    public WidgetCompleteQuery widgetCompleteQuery(java.lang.String location, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaWidgetCompleteQueryRequest content) throws java.io.IOException {
      WidgetCompleteQuery result = new WidgetCompleteQuery(location, content);
      initialize(result);
      return result;
    }

    public class WidgetCompleteQuery extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaWidgetCompleteQueryResponse> {

      private static final String REST_PATH = "v1alpha/{+location}/widgetCompleteQuery";

      private final java.util.regex.Pattern LOCATION_PATTERN =
          java.util.regex.Pattern.compile("^locations/[^/]+$");

      /**
       * Performs a user input completion with keyword suggestion. Similar to the
       * CompletionService.CompleteQuery method, but a widget version that allows CompleteQuery without
       * API Key. It supports CompleteQuery with or without JWT token.
       *
       * Create a request for the method "locations.widgetCompleteQuery".
       *
       * This request holds the parameters needed by the the discoveryengine server.  After setting any
       * optional parameters, call the {@link WidgetCompleteQuery#execute()} method to invoke the remote
       * operation. <p> {@link WidgetCompleteQuery#initialize(com.google.api.client.googleapis.services.
       * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param location Required. The location resource where widget complete query will be performed. Format:
     *        `locations/{location}`
       * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaWidgetCompleteQueryRequest}
       * @since 1.13
       */
      protected WidgetCompleteQuery(java.lang.String location, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaWidgetCompleteQueryRequest content) {
        super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaWidgetCompleteQueryResponse.class);
        this.location = com.google.api.client.util.Preconditions.checkNotNull(location, "Required parameter location must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(LOCATION_PATTERN.matcher(location).matches(),
              "Parameter location must conform to the pattern " +
              "^locations/[^/]+$");
        }
      }

      @Override
      public WidgetCompleteQuery set$Xgafv(java.lang.String $Xgafv) {
        return (WidgetCompleteQuery) super.set$Xgafv($Xgafv);
      }

      @Override
      public WidgetCompleteQuery setAccessToken(java.lang.String accessToken) {
        return (WidgetCompleteQuery) super.setAccessToken(accessToken);
      }

      @Override
      public WidgetCompleteQuery setAlt(java.lang.String alt) {
        return (WidgetCompleteQuery) super.setAlt(alt);
      }

      @Override
      public WidgetCompleteQuery setCallback(java.lang.String callback) {
        return (WidgetCompleteQuery) super.setCallback(callback);
      }

      @Override
      public WidgetCompleteQuery setFields(java.lang.String fields) {
        return (WidgetCompleteQuery) super.setFields(fields);
      }

      @Override
      public WidgetCompleteQuery setKey(java.lang.String key) {
        return (WidgetCompleteQuery) super.setKey(key);
      }

      @Override
      public WidgetCompleteQuery setOauthToken(java.lang.String oauthToken) {
        return (WidgetCompleteQuery) super.setOauthToken(oauthToken);
      }

      @Override
      public WidgetCompleteQuery setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (WidgetCompleteQuery) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public WidgetCompleteQuery setQuotaUser(java.lang.String quotaUser) {
        return (WidgetCompleteQuery) super.setQuotaUser(quotaUser);
      }

      @Override
      public WidgetCompleteQuery setUploadType(java.lang.String uploadType) {
        return (WidgetCompleteQuery) super.setUploadType(uploadType);
      }

      @Override
      public WidgetCompleteQuery setUploadProtocol(java.lang.String uploadProtocol) {
        return (WidgetCompleteQuery) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The location resource where widget complete query will be performed. Format:
       * `locations/{location}`
       */
      @com.google.api.client.util.Key
      private java.lang.String location;

      /** Required. The location resource where widget complete query will be performed. Format:
     `locations/{location}`
       */
      public java.lang.String getLocation() {
        return location;
      }

      /**
       * Required. The location resource where widget complete query will be performed. Format:
       * `locations/{location}`
       */
      public WidgetCompleteQuery setLocation(java.lang.String location) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(LOCATION_PATTERN.matcher(location).matches(),
              "Parameter location must conform to the pattern " +
              "^locations/[^/]+$");
        }
        this.location = location;
        return this;
      }

      @Override
      public WidgetCompleteQuery set(String parameterName, Object value) {
        return (WidgetCompleteQuery) super.set(parameterName, value);
      }
    }
    /**
     * Converse a conversation with Widget.
     *
     * Create a request for the method "locations.widgetConverseConversation".
     *
     * This request holds the parameters needed by the discoveryengine server.  After setting any
     * optional parameters, call the {@link WidgetConverseConversation#execute()} method to invoke the
     * remote operation.
     *
     * @param location Required. The location resource where widget converse conversation will be performed. Format:
     *        `locations/{location}`
     * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaWidgetConverseConversationRequest}
     * @return the request
     */
    public WidgetConverseConversation widgetConverseConversation(java.lang.String location, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaWidgetConverseConversationRequest content) throws java.io.IOException {
      WidgetConverseConversation result = new WidgetConverseConversation(location, content);
      initialize(result);
      return result;
    }

    public class WidgetConverseConversation extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaWidgetConverseConversationResponse> {

      private static final String REST_PATH = "v1alpha/{+location}/widgetConverseConversation";

      private final java.util.regex.Pattern LOCATION_PATTERN =
          java.util.regex.Pattern.compile("^locations/[^/]+$");

      /**
       * Converse a conversation with Widget.
       *
       * Create a request for the method "locations.widgetConverseConversation".
       *
       * This request holds the parameters needed by the the discoveryengine server.  After setting any
       * optional parameters, call the {@link WidgetConverseConversation#execute()} method to invoke the
       * remote operation. <p> {@link WidgetConverseConversation#initialize(com.google.api.client.google
       * apis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
       * immediately after invoking the constructor. </p>
       *
       * @param location Required. The location resource where widget converse conversation will be performed. Format:
     *        `locations/{location}`
       * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaWidgetConverseConversationRequest}
       * @since 1.13
       */
      protected WidgetConverseConversation(java.lang.String location, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaWidgetConverseConversationRequest content) {
        super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaWidgetConverseConversationResponse.class);
        this.location = com.google.api.client.util.Preconditions.checkNotNull(location, "Required parameter location must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(LOCATION_PATTERN.matcher(location).matches(),
              "Parameter location must conform to the pattern " +
              "^locations/[^/]+$");
        }
      }

      @Override
      public WidgetConverseConversation set$Xgafv(java.lang.String $Xgafv) {
        return (WidgetConverseConversation) super.set$Xgafv($Xgafv);
      }

      @Override
      public WidgetConverseConversation setAccessToken(java.lang.String accessToken) {
        return (WidgetConverseConversation) super.setAccessToken(accessToken);
      }

      @Override
      public WidgetConverseConversation setAlt(java.lang.String alt) {
        return (WidgetConverseConversation) super.setAlt(alt);
      }

      @Override
      public WidgetConverseConversation setCallback(java.lang.String callback) {
        return (WidgetConverseConversation) super.setCallback(callback);
      }

      @Override
      public WidgetConverseConversation setFields(java.lang.String fields) {
        return (WidgetConverseConversation) super.setFields(fields);
      }

      @Override
      public WidgetConverseConversation setKey(java.lang.String key) {
        return (WidgetConverseConversation) super.setKey(key);
      }

      @Override
      public WidgetConverseConversation setOauthToken(java.lang.String oauthToken) {
        return (WidgetConverseConversation) super.setOauthToken(oauthToken);
      }

      @Override
      public WidgetConverseConversation setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (WidgetConverseConversation) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public WidgetConverseConversation setQuotaUser(java.lang.String quotaUser) {
        return (WidgetConverseConversation) super.setQuotaUser(quotaUser);
      }

      @Override
      public WidgetConverseConversation setUploadType(java.lang.String uploadType) {
        return (WidgetConverseConversation) super.setUploadType(uploadType);
      }

      @Override
      public WidgetConverseConversation setUploadProtocol(java.lang.String uploadProtocol) {
        return (WidgetConverseConversation) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The location resource where widget converse conversation will be performed.
       * Format: `locations/{location}`
       */
      @com.google.api.client.util.Key
      private java.lang.String location;

      /** Required. The location resource where widget converse conversation will be performed. Format:
     `locations/{location}`
       */
      public java.lang.String getLocation() {
        return location;
      }

      /**
       * Required. The location resource where widget converse conversation will be performed.
       * Format: `locations/{location}`
       */
      public WidgetConverseConversation setLocation(java.lang.String location) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(LOCATION_PATTERN.matcher(location).matches(),
              "Parameter location must conform to the pattern " +
              "^locations/[^/]+$");
        }
        this.location = location;
        return this;
      }

      @Override
      public WidgetConverseConversation set(String parameterName, Object value) {
        return (WidgetConverseConversation) super.set(parameterName, value);
      }
    }
    /**
     * Performs a search. Similar to the SearchService.Search method, but a widget version that allows
     * search without API Key. It supports search with or without JWT token.
     *
     * Create a request for the method "locations.widgetSearch".
     *
     * This request holds the parameters needed by the discoveryengine server.  After setting any
     * optional parameters, call the {@link WidgetSearch#execute()} method to invoke the remote
     * operation.
     *
     * @param location Required. The location resource where widget search will be performed. Format:
     *        `locations/{location}`
     * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaWidgetSearchRequest}
     * @return the request
     */
    public WidgetSearch widgetSearch(java.lang.String location, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaWidgetSearchRequest content) throws java.io.IOException {
      WidgetSearch result = new WidgetSearch(location, content);
      initialize(result);
      return result;
    }

    public class WidgetSearch extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaWidgetSearchResponse> {

      private static final String REST_PATH = "v1alpha/{+location}/widgetSearch";

      private final java.util.regex.Pattern LOCATION_PATTERN =
          java.util.regex.Pattern.compile("^locations/[^/]+$");

      /**
       * Performs a search. Similar to the SearchService.Search method, but a widget version that allows
       * search without API Key. It supports search with or without JWT token.
       *
       * Create a request for the method "locations.widgetSearch".
       *
       * This request holds the parameters needed by the the discoveryengine server.  After setting any
       * optional parameters, call the {@link WidgetSearch#execute()} method to invoke the remote
       * operation. <p> {@link
       * WidgetSearch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param location Required. The location resource where widget search will be performed. Format:
     *        `locations/{location}`
       * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaWidgetSearchRequest}
       * @since 1.13
       */
      protected WidgetSearch(java.lang.String location, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaWidgetSearchRequest content) {
        super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaWidgetSearchResponse.class);
        this.location = com.google.api.client.util.Preconditions.checkNotNull(location, "Required parameter location must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(LOCATION_PATTERN.matcher(location).matches(),
              "Parameter location must conform to the pattern " +
              "^locations/[^/]+$");
        }
      }

      @Override
      public WidgetSearch set$Xgafv(java.lang.String $Xgafv) {
        return (WidgetSearch) super.set$Xgafv($Xgafv);
      }

      @Override
      public WidgetSearch setAccessToken(java.lang.String accessToken) {
        return (WidgetSearch) super.setAccessToken(accessToken);
      }

      @Override
      public WidgetSearch setAlt(java.lang.String alt) {
        return (WidgetSearch) super.setAlt(alt);
      }

      @Override
      public WidgetSearch setCallback(java.lang.String callback) {
        return (WidgetSearch) super.setCallback(callback);
      }

      @Override
      public WidgetSearch setFields(java.lang.String fields) {
        return (WidgetSearch) super.setFields(fields);
      }

      @Override
      public WidgetSearch setKey(java.lang.String key) {
        return (WidgetSearch) super.setKey(key);
      }

      @Override
      public WidgetSearch setOauthToken(java.lang.String oauthToken) {
        return (WidgetSearch) super.setOauthToken(oauthToken);
      }

      @Override
      public WidgetSearch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (WidgetSearch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public WidgetSearch setQuotaUser(java.lang.String quotaUser) {
        return (WidgetSearch) super.setQuotaUser(quotaUser);
      }

      @Override
      public WidgetSearch setUploadType(java.lang.String uploadType) {
        return (WidgetSearch) super.setUploadType(uploadType);
      }

      @Override
      public WidgetSearch setUploadProtocol(java.lang.String uploadProtocol) {
        return (WidgetSearch) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The location resource where widget search will be performed. Format:
       * `locations/{location}`
       */
      @com.google.api.client.util.Key
      private java.lang.String location;

      /** Required. The location resource where widget search will be performed. Format:
     `locations/{location}`
       */
      public java.lang.String getLocation() {
        return location;
      }

      /**
       * Required. The location resource where widget search will be performed. Format:
       * `locations/{location}`
       */
      public WidgetSearch setLocation(java.lang.String location) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(LOCATION_PATTERN.matcher(location).matches(),
              "Parameter location must conform to the pattern " +
              "^locations/[^/]+$");
        }
        this.location = location;
        return this;
      }

      @Override
      public WidgetSearch set(String parameterName, Object value) {
        return (WidgetSearch) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
   *   {@code DiscoveryEngine.Projects.List request = discoveryengine.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the Locations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
     *   {@code DiscoveryEngine.Locations.List request = discoveryengine.locations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Locations locations() {
      return new Locations();
    }

    /**
     * The "locations" collection of methods.
     */
    public class Locations {

      /**
       * Estimates the data size to be used by a customer.
       *
       * Create a request for the method "locations.estimateDataSize".
       *
       * This request holds the parameters needed by the discoveryengine server.  After setting any
       * optional parameters, call the {@link EstimateDataSize#execute()} method to invoke the remote
       * operation.
       *
       * @param location Required. Full resource name of the location, such as `projects/{project}/locations/{location}`.
       * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequest}
       * @return the request
       */
      public EstimateDataSize estimateDataSize(java.lang.String location, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequest content) throws java.io.IOException {
        EstimateDataSize result = new EstimateDataSize(location, content);
        initialize(result);
        return result;
      }

      public class EstimateDataSize extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

        private static final String REST_PATH = "v1alpha/{+location}:estimateDataSize";

        private final java.util.regex.Pattern LOCATION_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

        /**
         * Estimates the data size to be used by a customer.
         *
         * Create a request for the method "locations.estimateDataSize".
         *
         * This request holds the parameters needed by the the discoveryengine server.  After setting any
         * optional parameters, call the {@link EstimateDataSize#execute()} method to invoke the remote
         * operation. <p> {@link EstimateDataSize#initialize(com.google.api.client.googleapis.services.Abs
         * tractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param location Required. Full resource name of the location, such as `projects/{project}/locations/{location}`.
         * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequest}
         * @since 1.13
         */
        protected EstimateDataSize(java.lang.String location, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequest content) {
          super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
          this.location = com.google.api.client.util.Preconditions.checkNotNull(location, "Required parameter location must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(LOCATION_PATTERN.matcher(location).matches(),
                "Parameter location must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
        }

        @Override
        public EstimateDataSize set$Xgafv(java.lang.String $Xgafv) {
          return (EstimateDataSize) super.set$Xgafv($Xgafv);
        }

        @Override
        public EstimateDataSize setAccessToken(java.lang.String accessToken) {
          return (EstimateDataSize) super.setAccessToken(accessToken);
        }

        @Override
        public EstimateDataSize setAlt(java.lang.String alt) {
          return (EstimateDataSize) super.setAlt(alt);
        }

        @Override
        public EstimateDataSize setCallback(java.lang.String callback) {
          return (EstimateDataSize) super.setCallback(callback);
        }

        @Override
        public EstimateDataSize setFields(java.lang.String fields) {
          return (EstimateDataSize) super.setFields(fields);
        }

        @Override
        public EstimateDataSize setKey(java.lang.String key) {
          return (EstimateDataSize) super.setKey(key);
        }

        @Override
        public EstimateDataSize setOauthToken(java.lang.String oauthToken) {
          return (EstimateDataSize) super.setOauthToken(oauthToken);
        }

        @Override
        public EstimateDataSize setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (EstimateDataSize) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public EstimateDataSize setQuotaUser(java.lang.String quotaUser) {
          return (EstimateDataSize) super.setQuotaUser(quotaUser);
        }

        @Override
        public EstimateDataSize setUploadType(java.lang.String uploadType) {
          return (EstimateDataSize) super.setUploadType(uploadType);
        }

        @Override
        public EstimateDataSize setUploadProtocol(java.lang.String uploadProtocol) {
          return (EstimateDataSize) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Full resource name of the location, such as
         * `projects/{project}/locations/{location}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String location;

        /** Required. Full resource name of the location, such as `projects/{project}/locations/{location}`.
         */
        public java.lang.String getLocation() {
          return location;
        }

        /**
         * Required. Full resource name of the location, such as
         * `projects/{project}/locations/{location}`.
         */
        public EstimateDataSize setLocation(java.lang.String location) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(LOCATION_PATTERN.matcher(location).matches(),
                "Parameter location must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
          this.location = location;
          return this;
        }

        @Override
        public EstimateDataSize set(String parameterName, Object value) {
          return (EstimateDataSize) super.set(parameterName, value);
        }
      }
      /**
       * Gets the AclConfig.
       *
       * Create a request for the method "locations.getAclConfig".
       *
       * This request holds the parameters needed by the discoveryengine server.  After setting any
       * optional parameters, call the {@link GetAclConfig#execute()} method to invoke the remote
       * operation.
       *
       * @param name Required. Resource name of AclConfig, such as `projects/locations/aclConfig`. If the caller does not
       *        have permission to access the AclConfig, regardless of whether or not it exists, a
       *        PERMISSION_DENIED error is returned.
       * @return the request
       */
      public GetAclConfig getAclConfig(java.lang.String name) throws java.io.IOException {
        GetAclConfig result = new GetAclConfig(name);
        initialize(result);
        return result;
      }

      public class GetAclConfig extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaAclConfig> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/aclConfig$");

        /**
         * Gets the AclConfig.
         *
         * Create a request for the method "locations.getAclConfig".
         *
         * This request holds the parameters needed by the the discoveryengine server.  After setting any
         * optional parameters, call the {@link GetAclConfig#execute()} method to invoke the remote
         * operation. <p> {@link
         * GetAclConfig#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Resource name of AclConfig, such as `projects/locations/aclConfig`. If the caller does not
       *        have permission to access the AclConfig, regardless of whether or not it exists, a
       *        PERMISSION_DENIED error is returned.
         * @since 1.13
         */
        protected GetAclConfig(java.lang.String name) {
          super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaAclConfig.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+/aclConfig$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetAclConfig set$Xgafv(java.lang.String $Xgafv) {
          return (GetAclConfig) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetAclConfig setAccessToken(java.lang.String accessToken) {
          return (GetAclConfig) super.setAccessToken(accessToken);
        }

        @Override
        public GetAclConfig setAlt(java.lang.String alt) {
          return (GetAclConfig) super.setAlt(alt);
        }

        @Override
        public GetAclConfig setCallback(java.lang.String callback) {
          return (GetAclConfig) super.setCallback(callback);
        }

        @Override
        public GetAclConfig setFields(java.lang.String fields) {
          return (GetAclConfig) super.setFields(fields);
        }

        @Override
        public GetAclConfig setKey(java.lang.String key) {
          return (GetAclConfig) super.setKey(key);
        }

        @Override
        public GetAclConfig setOauthToken(java.lang.String oauthToken) {
          return (GetAclConfig) super.setOauthToken(oauthToken);
        }

        @Override
        public GetAclConfig setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetAclConfig) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetAclConfig setQuotaUser(java.lang.String quotaUser) {
          return (GetAclConfig) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetAclConfig setUploadType(java.lang.String uploadType) {
          return (GetAclConfig) super.setUploadType(uploadType);
        }

        @Override
        public GetAclConfig setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetAclConfig) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Resource name of AclConfig, such as `projects/locations/aclConfig`. If the
         * caller does not have permission to access the AclConfig, regardless of whether or not it
         * exists, a PERMISSION_DENIED error is returned.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Resource name of AclConfig, such as `projects/locations/aclConfig`. If the caller does
       not have permission to access the AclConfig, regardless of whether or not it exists, a
       PERMISSION_DENIED error is returned.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Resource name of AclConfig, such as `projects/locations/aclConfig`. If the
         * caller does not have permission to access the AclConfig, regardless of whether or not it
         * exists, a PERMISSION_DENIED error is returned.
         */
        public GetAclConfig setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+/aclConfig$");
          }
          this.name = name;
          return this;
        }

        @Override
        public GetAclConfig set(String parameterName, Object value) {
          return (GetAclConfig) super.set(parameterName, value);
        }
      }
      /**
       * Default Acl Configuration for use in a location of a customer's project. Updates will only
       * reflect to new data stores. Existing data stores will still use the old value.
       *
       * Create a request for the method "locations.updateAclConfig".
       *
       * This request holds the parameters needed by the discoveryengine server.  After setting any
       * optional parameters, call the {@link UpdateAclConfig#execute()} method to invoke the remote
       * operation.
       *
       * @param name Immutable. The full resource name of the acl configuration. Format:
       *        `projects/{project}/locations/{location}/aclConfig`. This field must be a UTF-8 encoded
       *        string with a length limit of 1024 characters.
       * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaAclConfig}
       * @return the request
       */
      public UpdateAclConfig updateAclConfig(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaAclConfig content) throws java.io.IOException {
        UpdateAclConfig result = new UpdateAclConfig(name, content);
        initialize(result);
        return result;
      }

      public class UpdateAclConfig extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaAclConfig> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/aclConfig$");

        /**
         * Default Acl Configuration for use in a location of a customer's project. Updates will only
         * reflect to new data stores. Existing data stores will still use the old value.
         *
         * Create a request for the method "locations.updateAclConfig".
         *
         * This request holds the parameters needed by the the discoveryengine server.  After setting any
         * optional parameters, call the {@link UpdateAclConfig#execute()} method to invoke the remote
         * operation. <p> {@link UpdateAclConfig#initialize(com.google.api.client.googleapis.services.Abst
         * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
         * the constructor. </p>
         *
         * @param name Immutable. The full resource name of the acl configuration. Format:
       *        `projects/{project}/locations/{location}/aclConfig`. This field must be a UTF-8 encoded
       *        string with a length limit of 1024 characters.
         * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaAclConfig}
         * @since 1.13
         */
        protected UpdateAclConfig(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaAclConfig content) {
          super(DiscoveryEngine.this, "PATCH", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaAclConfig.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+/aclConfig$");
          }
        }

        @Override
        public UpdateAclConfig set$Xgafv(java.lang.String $Xgafv) {
          return (UpdateAclConfig) super.set$Xgafv($Xgafv);
        }

        @Override
        public UpdateAclConfig setAccessToken(java.lang.String accessToken) {
          return (UpdateAclConfig) super.setAccessToken(accessToken);
        }

        @Override
        public UpdateAclConfig setAlt(java.lang.String alt) {
          return (UpdateAclConfig) super.setAlt(alt);
        }

        @Override
        public UpdateAclConfig setCallback(java.lang.String callback) {
          return (UpdateAclConfig) super.setCallback(callback);
        }

        @Override
        public UpdateAclConfig setFields(java.lang.String fields) {
          return (UpdateAclConfig) super.setFields(fields);
        }

        @Override
        public UpdateAclConfig setKey(java.lang.String key) {
          return (UpdateAclConfig) super.setKey(key);
        }

        @Override
        public UpdateAclConfig setOauthToken(java.lang.String oauthToken) {
          return (UpdateAclConfig) super.setOauthToken(oauthToken);
        }

        @Override
        public UpdateAclConfig setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (UpdateAclConfig) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public UpdateAclConfig setQuotaUser(java.lang.String quotaUser) {
          return (UpdateAclConfig) super.setQuotaUser(quotaUser);
        }

        @Override
        public UpdateAclConfig setUploadType(java.lang.String uploadType) {
          return (UpdateAclConfig) super.setUploadType(uploadType);
        }

        @Override
        public UpdateAclConfig setUploadProtocol(java.lang.String uploadProtocol) {
          return (UpdateAclConfig) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Immutable. The full resource name of the acl configuration. Format:
         * `projects/{project}/locations/{location}/aclConfig`. This field must be a UTF-8 encoded
         * string with a length limit of 1024 characters.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Immutable. The full resource name of the acl configuration. Format:
       `projects/{project}/locations/{location}/aclConfig`. This field must be a UTF-8 encoded string with
       a length limit of 1024 characters.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Immutable. The full resource name of the acl configuration. Format:
         * `projects/{project}/locations/{location}/aclConfig`. This field must be a UTF-8 encoded
         * string with a length limit of 1024 characters.
         */
        public UpdateAclConfig setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+/aclConfig$");
          }
          this.name = name;
          return this;
        }

        @Override
        public UpdateAclConfig set(String parameterName, Object value) {
          return (UpdateAclConfig) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Collections collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
       *   {@code DiscoveryEngine.Collections.List request = discoveryengine.collections().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Collections collections() {
        return new Collections();
      }

      /**
       * The "collections" collection of methods.
       */
      public class Collections {

        /**
         * An accessor for creating requests from the DataConnector collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
         *   {@code DiscoveryEngine.DataConnector.List request = discoveryengine.dataConnector().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public DataConnector dataConnector() {
          return new DataConnector();
        }

        /**
         * The "dataConnector" collection of methods.
         */
        public class DataConnector {

          /**
           * An accessor for creating requests from the Operations collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
           *   {@code DiscoveryEngine.Operations.List request = discoveryengine.operations().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Operations operations() {
            return new Operations();
          }

          /**
           * The "operations" collection of methods.
           */
          public class Operations {

            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource.
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataConnector/operations/[^/]+$");

              /**
               * Gets the latest state of a long-running operation. Clients can use this method to poll the
               * operation result at intervals as recommended by the API service.
               *
               * Create a request for the method "operations.get".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource.
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataConnector/operations/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource. */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataConnector/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.list".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation's parent resource.
             * @return the request
             */
            public List list(java.lang.String name) throws java.io.IOException {
              List result = new List(name);
              initialize(result);
              return result;
            }

            public class List extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningListOperationsResponse> {

              private static final String REST_PATH = "v1alpha/{+name}/operations";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataConnector$");

              /**
               * Lists operations that match the specified filter in the request. If the server doesn't support
               * this method, it returns `UNIMPLEMENTED`.
               *
               * Create a request for the method "operations.list".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation's parent resource.
               * @since 1.13
               */
              protected List(java.lang.String name) {
                super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningListOperationsResponse.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataConnector$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation's parent resource. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation's parent resource.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation's parent resource. */
              public List setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataConnector$");
                }
                this.name = name;
                return this;
              }

              /** The standard list filter. */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** The standard list filter.
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /** The standard list filter. */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /** The standard list page size. */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** The standard list page size.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /** The standard list page size. */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /** The standard list page token. */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** The standard list page token.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /** The standard list page token. */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }

          }
        }
        /**
         * An accessor for creating requests from the DataStores collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
         *   {@code DiscoveryEngine.DataStores.List request = discoveryengine.dataStores().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public DataStores dataStores() {
          return new DataStores();
        }

        /**
         * The "dataStores" collection of methods.
         */
        public class DataStores {

          /**
           * Completes the specified user input with keyword suggestions.
           *
           * Create a request for the method "dataStores.completeQuery".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link CompleteQuery#execute()} method to invoke the remote
           * operation.
           *
           * @param dataStore Required. The parent data store resource name for which the completion is performed, such as
           *        `projects/locations/global/collections/default_collection/dataStores/default_data_store`.
           * @return the request
           */
          public CompleteQuery completeQuery(java.lang.String dataStore) throws java.io.IOException {
            CompleteQuery result = new CompleteQuery(dataStore);
            initialize(result);
            return result;
          }

          public class CompleteQuery extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaCompleteQueryResponse> {

            private static final String REST_PATH = "v1alpha/{+dataStore}:completeQuery";

            private final java.util.regex.Pattern DATA_STORE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");

            /**
             * Completes the specified user input with keyword suggestions.
             *
             * Create a request for the method "dataStores.completeQuery".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link CompleteQuery#execute()} method to invoke the remote
             * operation. <p> {@link CompleteQuery#initialize(com.google.api.client.googleapis.services.Abstra
             * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
             * the constructor. </p>
             *
             * @param dataStore Required. The parent data store resource name for which the completion is performed, such as
           *        `projects/locations/global/collections/default_collection/dataStores/default_data_store`.
             * @since 1.13
             */
            protected CompleteQuery(java.lang.String dataStore) {
              super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaCompleteQueryResponse.class);
              this.dataStore = com.google.api.client.util.Preconditions.checkNotNull(dataStore, "Required parameter dataStore must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(DATA_STORE_PATTERN.matcher(dataStore).matches(),
                    "Parameter dataStore must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public CompleteQuery set$Xgafv(java.lang.String $Xgafv) {
              return (CompleteQuery) super.set$Xgafv($Xgafv);
            }

            @Override
            public CompleteQuery setAccessToken(java.lang.String accessToken) {
              return (CompleteQuery) super.setAccessToken(accessToken);
            }

            @Override
            public CompleteQuery setAlt(java.lang.String alt) {
              return (CompleteQuery) super.setAlt(alt);
            }

            @Override
            public CompleteQuery setCallback(java.lang.String callback) {
              return (CompleteQuery) super.setCallback(callback);
            }

            @Override
            public CompleteQuery setFields(java.lang.String fields) {
              return (CompleteQuery) super.setFields(fields);
            }

            @Override
            public CompleteQuery setKey(java.lang.String key) {
              return (CompleteQuery) super.setKey(key);
            }

            @Override
            public CompleteQuery setOauthToken(java.lang.String oauthToken) {
              return (CompleteQuery) super.setOauthToken(oauthToken);
            }

            @Override
            public CompleteQuery setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (CompleteQuery) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public CompleteQuery setQuotaUser(java.lang.String quotaUser) {
              return (CompleteQuery) super.setQuotaUser(quotaUser);
            }

            @Override
            public CompleteQuery setUploadType(java.lang.String uploadType) {
              return (CompleteQuery) super.setUploadType(uploadType);
            }

            @Override
            public CompleteQuery setUploadProtocol(java.lang.String uploadProtocol) {
              return (CompleteQuery) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The parent data store resource name for which the completion is performed,
             * such as `projects/locations/global/collections/default_collection/dataStores/default_
             * data_store`.
             */
            @com.google.api.client.util.Key
            private java.lang.String dataStore;

            /** Required. The parent data store resource name for which the completion is performed, such as
           `projects/locations/global/collections/default_collection/dataStores/default_data_store`.
             */
            public java.lang.String getDataStore() {
              return dataStore;
            }

            /**
             * Required. The parent data store resource name for which the completion is performed,
             * such as `projects/locations/global/collections/default_collection/dataStores/default_
             * data_store`.
             */
            public CompleteQuery setDataStore(java.lang.String dataStore) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(DATA_STORE_PATTERN.matcher(dataStore).matches(),
                    "Parameter dataStore must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");
              }
              this.dataStore = dataStore;
              return this;
            }

            /**
             * Indicates if tail suggestions should be returned if there are no suggestions that
             * match the full query. Even if set to true, if there are suggestions that match the
             * full query, those are returned and no tail suggestions are returned.
             */
            @com.google.api.client.util.Key
            private java.lang.Boolean includeTailSuggestions;

            /** Indicates if tail suggestions should be returned if there are no suggestions that match the full
           query. Even if set to true, if there are suggestions that match the full query, those are returned
           and no tail suggestions are returned.
             */
            public java.lang.Boolean getIncludeTailSuggestions() {
              return includeTailSuggestions;
            }

            /**
             * Indicates if tail suggestions should be returned if there are no suggestions that
             * match the full query. Even if set to true, if there are suggestions that match the
             * full query, those are returned and no tail suggestions are returned.
             */
            public CompleteQuery setIncludeTailSuggestions(java.lang.Boolean includeTailSuggestions) {
              this.includeTailSuggestions = includeTailSuggestions;
              return this;
            }

            /**
             * Required. The typeahead input used to fetch suggestions. Maximum length is 128
             * characters.
             */
            @com.google.api.client.util.Key
            private java.lang.String query;

            /** Required. The typeahead input used to fetch suggestions. Maximum length is 128 characters.
             */
            public java.lang.String getQuery() {
              return query;
            }

            /**
             * Required. The typeahead input used to fetch suggestions. Maximum length is 128
             * characters.
             */
            public CompleteQuery setQuery(java.lang.String query) {
              this.query = query;
              return this;
            }

            /**
             * Specifies the autocomplete data model. This overrides any model specified in the
             * Configuration > Autocomplete section of the Cloud console. Currently supported
             * values: * `document` - Using suggestions generated from user-imported documents. *
             * `search-history` - Using suggestions generated from the past history of
             * SearchService.Search API calls. Do not use it when there is no traffic for Search
             * API. * `user-event` - Using suggestions generated from user-imported search events. *
             * `document-completable` - Using suggestions taken directly from user-imported document
             * fields marked as completable. Default values: * `document` is the default model for
             * regular dataStores. * `search-history` is the default model for site search
             * dataStores.
             */
            @com.google.api.client.util.Key
            private java.lang.String queryModel;

            /** Specifies the autocomplete data model. This overrides any model specified in the Configuration >
           Autocomplete section of the Cloud console. Currently supported values: * `document` - Using
           suggestions generated from user-imported documents. * `search-history` - Using suggestions
           generated from the past history of SearchService.Search API calls. Do not use it when there is no
           traffic for Search API. * `user-event` - Using suggestions generated from user-imported search
           events. * `document-completable` - Using suggestions taken directly from user-imported document
           fields marked as completable. Default values: * `document` is the default model for regular
           dataStores. * `search-history` is the default model for site search dataStores.
             */
            public java.lang.String getQueryModel() {
              return queryModel;
            }

            /**
             * Specifies the autocomplete data model. This overrides any model specified in the
             * Configuration > Autocomplete section of the Cloud console. Currently supported
             * values: * `document` - Using suggestions generated from user-imported documents. *
             * `search-history` - Using suggestions generated from the past history of
             * SearchService.Search API calls. Do not use it when there is no traffic for Search
             * API. * `user-event` - Using suggestions generated from user-imported search events. *
             * `document-completable` - Using suggestions taken directly from user-imported document
             * fields marked as completable. Default values: * `document` is the default model for
             * regular dataStores. * `search-history` is the default model for site search
             * dataStores.
             */
            public CompleteQuery setQueryModel(java.lang.String queryModel) {
              this.queryModel = queryModel;
              return this;
            }

            /**
             * A unique identifier for tracking visitors. For example, this could be implemented
             * with an HTTP cookie, which should be able to uniquely identify a visitor on a single
             * device. This unique identifier should not change if the visitor logs in or out of the
             * website. This field should NOT have a fixed value such as `unknown_visitor`. This
             * should be the same identifier as UserEvent.user_pseudo_id and
             * SearchRequest.user_pseudo_id. The field must be a UTF-8 encoded string with a length
             * limit of 128 characters. Otherwise, an `INVALID_ARGUMENT` error is returned.
             */
            @com.google.api.client.util.Key
            private java.lang.String userPseudoId;

            /** A unique identifier for tracking visitors. For example, this could be implemented with an HTTP
           cookie, which should be able to uniquely identify a visitor on a single device. This unique
           identifier should not change if the visitor logs in or out of the website. This field should NOT
           have a fixed value such as `unknown_visitor`. This should be the same identifier as
           UserEvent.user_pseudo_id and SearchRequest.user_pseudo_id. The field must be a UTF-8 encoded string
           with a length limit of 128 characters. Otherwise, an `INVALID_ARGUMENT` error is returned.
             */
            public java.lang.String getUserPseudoId() {
              return userPseudoId;
            }

            /**
             * A unique identifier for tracking visitors. For example, this could be implemented
             * with an HTTP cookie, which should be able to uniquely identify a visitor on a single
             * device. This unique identifier should not change if the visitor logs in or out of the
             * website. This field should NOT have a fixed value such as `unknown_visitor`. This
             * should be the same identifier as UserEvent.user_pseudo_id and
             * SearchRequest.user_pseudo_id. The field must be a UTF-8 encoded string with a length
             * limit of 128 characters. Otherwise, an `INVALID_ARGUMENT` error is returned.
             */
            public CompleteQuery setUserPseudoId(java.lang.String userPseudoId) {
              this.userPseudoId = userPseudoId;
              return this;
            }

            @Override
            public CompleteQuery set(String parameterName, Object value) {
              return (CompleteQuery) super.set(parameterName, value);
            }
          }
          /**
           * Creates a DataStore. DataStore is for storing Documents. To serve these documents for Search, or
           * Recommendation use case, an Engine needs to be created separately.
           *
           * Create a request for the method "dataStores.create".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The parent resource name, such as
           *        `projects/{project}/locations/{location}/collections/{collection}`.
           * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDataStore}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDataStore content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1alpha/{+parent}/dataStores";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+$");

            /**
             * Creates a DataStore. DataStore is for storing Documents. To serve these documents for Search,
             * or Recommendation use case, an Engine needs to be created separately.
             *
             * Create a request for the method "dataStores.create".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The parent resource name, such as
           *        `projects/{project}/locations/{location}/collections/{collection}`.
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDataStore}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDataStore content) {
              super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/collections/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The parent resource name, such as
             * `projects/{project}/locations/{location}/collections/{collection}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The parent resource name, such as
           `projects/{project}/locations/{location}/collections/{collection}`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The parent resource name, such as
             * `projects/{project}/locations/{location}/collections/{collection}`.
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/collections/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * A boolean flag indicating whether user want to directly create an advanced data store
             * for site search. If the data store is not configured as site search (GENERIC vertical
             * and PUBLIC_WEBSITE content_config), this flag will be ignored.
             */
            @com.google.api.client.util.Key
            private java.lang.Boolean createAdvancedSiteSearch;

            /** A boolean flag indicating whether user want to directly create an advanced data store for site
           search. If the data store is not configured as site search (GENERIC vertical and PUBLIC_WEBSITE
           content_config), this flag will be ignored.
             */
            public java.lang.Boolean getCreateAdvancedSiteSearch() {
              return createAdvancedSiteSearch;
            }

            /**
             * A boolean flag indicating whether user want to directly create an advanced data store
             * for site search. If the data store is not configured as site search (GENERIC vertical
             * and PUBLIC_WEBSITE content_config), this flag will be ignored.
             */
            public Create setCreateAdvancedSiteSearch(java.lang.Boolean createAdvancedSiteSearch) {
              this.createAdvancedSiteSearch = createAdvancedSiteSearch;
              return this;
            }

            /**
             * Required. The ID to use for the DataStore, which will become the final component of
             * the DataStore's resource name. This field must conform to
             * [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63
             * characters. Otherwise, an INVALID_ARGUMENT error is returned.
             */
            @com.google.api.client.util.Key
            private java.lang.String dataStoreId;

            /** Required. The ID to use for the DataStore, which will become the final component of the DataStore's
           resource name. This field must conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard
           with a length limit of 63 characters. Otherwise, an INVALID_ARGUMENT error is returned.
             */
            public java.lang.String getDataStoreId() {
              return dataStoreId;
            }

            /**
             * Required. The ID to use for the DataStore, which will become the final component of
             * the DataStore's resource name. This field must conform to
             * [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63
             * characters. Otherwise, an INVALID_ARGUMENT error is returned.
             */
            public Create setDataStoreId(java.lang.String dataStoreId) {
              this.dataStoreId = dataStoreId;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a DataStore.
           *
           * Create a request for the method "dataStores.delete".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. Full resource name of DataStore, such as
           *        `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_stor
           *        e_id}`. If the caller does not have permission to delete the DataStore, regardless of
           *        whether or not it exists, a PERMISSION_DENIED error is returned. If the DataStore to
           *        delete does not exist, a NOT_FOUND error is returned.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");

            /**
             * Deletes a DataStore.
             *
             * Create a request for the method "dataStores.delete".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Full resource name of DataStore, such as
           *        `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_stor
           *        e_id}`. If the caller does not have permission to delete the DataStore, regardless of
           *        whether or not it exists, a PERMISSION_DENIED error is returned. If the DataStore to
           *        delete does not exist, a NOT_FOUND error is returned.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(DiscoveryEngine.this, "DELETE", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Full resource name of DataStore, such as `projects/{project}/locations/{loc
             * ation}/collections/{collection_id}/dataStores/{data_store_id}`. If the caller does
             * not have permission to delete the DataStore, regardless of whether or not it exists,
             * a PERMISSION_DENIED error is returned. If the DataStore to delete does not exist, a
             * NOT_FOUND error is returned.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Full resource name of DataStore, such as
           `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`.
           If the caller does not have permission to delete the DataStore, regardless of whether or not it
           exists, a PERMISSION_DENIED error is returned. If the DataStore to delete does not exist, a
           NOT_FOUND error is returned.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Full resource name of DataStore, such as `projects/{project}/locations/{loc
             * ation}/collections/{collection_id}/dataStores/{data_store_id}`. If the caller does
             * not have permission to delete the DataStore, regardless of whether or not it exists,
             * a PERMISSION_DENIED error is returned. If the DataStore to delete does not exist, a
             * NOT_FOUND error is returned.
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets a DataStore.
           *
           * Create a request for the method "dataStores.get".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. Full resource name of DataStore, such as
           *        `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_stor
           *        e_id}`. If the caller does not have permission to access the DataStore, regardless of
           *        whether or not it exists, a PERMISSION_DENIED error is returned. If the requested
           *        DataStore does not exist, a NOT_FOUND error is returned.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDataStore> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");

            /**
             * Gets a DataStore.
             *
             * Create a request for the method "dataStores.get".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Full resource name of DataStore, such as
           *        `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_stor
           *        e_id}`. If the caller does not have permission to access the DataStore, regardless of
           *        whether or not it exists, a PERMISSION_DENIED error is returned. If the requested
           *        DataStore does not exist, a NOT_FOUND error is returned.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDataStore.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Full resource name of DataStore, such as `projects/{project}/locations/{loc
             * ation}/collections/{collection_id}/dataStores/{data_store_id}`. If the caller does
             * not have permission to access the DataStore, regardless of whether or not it exists,
             * a PERMISSION_DENIED error is returned. If the requested DataStore does not exist, a
             * NOT_FOUND error is returned.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Full resource name of DataStore, such as
           `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`.
           If the caller does not have permission to access the DataStore, regardless of whether or not it
           exists, a PERMISSION_DENIED error is returned. If the requested DataStore does not exist, a
           NOT_FOUND error is returned.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Full resource name of DataStore, such as `projects/{project}/locations/{loc
             * ation}/collections/{collection_id}/dataStores/{data_store_id}`. If the caller does
             * not have permission to access the DataStore, regardless of whether or not it exists,
             * a PERMISSION_DENIED error is returned. If the requested DataStore does not exist, a
             * NOT_FOUND error is returned.
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Gets a DocumentProcessingConfig.
           *
           * Create a request for the method "dataStores.getDocumentProcessingConfig".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link GetDocumentProcessingConfig#execute()} method to invoke the
           * remote operation.
           *
           * @param name Required. Full DocumentProcessingConfig resource name. Format: `projects/{project_number}/locations/
           *        {location_id}/collections/{collection_id}/dataStores/{data_store_id}/documentProcessingCon
           *        fig`
           * @return the request
           */
          public GetDocumentProcessingConfig getDocumentProcessingConfig(java.lang.String name) throws java.io.IOException {
            GetDocumentProcessingConfig result = new GetDocumentProcessingConfig(name);
            initialize(result);
            return result;
          }

          public class GetDocumentProcessingConfig extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfig> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/documentProcessingConfig$");

            /**
             * Gets a DocumentProcessingConfig.
             *
             * Create a request for the method "dataStores.getDocumentProcessingConfig".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link GetDocumentProcessingConfig#execute()} method to invoke
             * the remote operation. <p> {@link GetDocumentProcessingConfig#initialize(com.google.api.client.g
             * oogleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
             * immediately after invoking the constructor. </p>
             *
             * @param name Required. Full DocumentProcessingConfig resource name. Format: `projects/{project_number}/locations/
           *        {location_id}/collections/{collection_id}/dataStores/{data_store_id}/documentProcessingCon
           *        fig`
             * @since 1.13
             */
            protected GetDocumentProcessingConfig(java.lang.String name) {
              super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfig.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/documentProcessingConfig$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public GetDocumentProcessingConfig set$Xgafv(java.lang.String $Xgafv) {
              return (GetDocumentProcessingConfig) super.set$Xgafv($Xgafv);
            }

            @Override
            public GetDocumentProcessingConfig setAccessToken(java.lang.String accessToken) {
              return (GetDocumentProcessingConfig) super.setAccessToken(accessToken);
            }

            @Override
            public GetDocumentProcessingConfig setAlt(java.lang.String alt) {
              return (GetDocumentProcessingConfig) super.setAlt(alt);
            }

            @Override
            public GetDocumentProcessingConfig setCallback(java.lang.String callback) {
              return (GetDocumentProcessingConfig) super.setCallback(callback);
            }

            @Override
            public GetDocumentProcessingConfig setFields(java.lang.String fields) {
              return (GetDocumentProcessingConfig) super.setFields(fields);
            }

            @Override
            public GetDocumentProcessingConfig setKey(java.lang.String key) {
              return (GetDocumentProcessingConfig) super.setKey(key);
            }

            @Override
            public GetDocumentProcessingConfig setOauthToken(java.lang.String oauthToken) {
              return (GetDocumentProcessingConfig) super.setOauthToken(oauthToken);
            }

            @Override
            public GetDocumentProcessingConfig setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GetDocumentProcessingConfig) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GetDocumentProcessingConfig setQuotaUser(java.lang.String quotaUser) {
              return (GetDocumentProcessingConfig) super.setQuotaUser(quotaUser);
            }

            @Override
            public GetDocumentProcessingConfig setUploadType(java.lang.String uploadType) {
              return (GetDocumentProcessingConfig) super.setUploadType(uploadType);
            }

            @Override
            public GetDocumentProcessingConfig setUploadProtocol(java.lang.String uploadProtocol) {
              return (GetDocumentProcessingConfig) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Full DocumentProcessingConfig resource name. Format: `projects/{project_num
             * ber}/locations/{location_id}/collections/{collection_id}/dataStores/{data_store_id}/d
             * ocumentProcessingConfig`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Full DocumentProcessingConfig resource name. Format: `projects/{project_number}/locations
           /{location_id}/collections/{collection_id}/dataStores/{data_store_id}/documentProcessingConfig`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Full DocumentProcessingConfig resource name. Format: `projects/{project_num
             * ber}/locations/{location_id}/collections/{collection_id}/dataStores/{data_store_id}/d
             * ocumentProcessingConfig`
             */
            public GetDocumentProcessingConfig setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/documentProcessingConfig$");
              }
              this.name = name;
              return this;
            }

            @Override
            public GetDocumentProcessingConfig set(String parameterName, Object value) {
              return (GetDocumentProcessingConfig) super.set(parameterName, value);
            }
          }
          /**
           * Gets the SiteSearchEngine.
           *
           * Create a request for the method "dataStores.getSiteSearchEngine".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link GetSiteSearchEngine#execute()} method to invoke the remote
           * operation.
           *
           * @param name Required. Resource name of SiteSearchEngine, such as `projects/{project}/locations/{location}/collec
           *        tions/{collection}/dataStores/{data_store}/siteSearchEngine`. If the caller does not have
           *        permission to access the [SiteSearchEngine], regardless of whether or not it exists, a
           *        PERMISSION_DENIED error is returned.
           * @return the request
           */
          public GetSiteSearchEngine getSiteSearchEngine(java.lang.String name) throws java.io.IOException {
            GetSiteSearchEngine result = new GetSiteSearchEngine(name);
            initialize(result);
            return result;
          }

          public class GetSiteSearchEngine extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSiteSearchEngine> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine$");

            /**
             * Gets the SiteSearchEngine.
             *
             * Create a request for the method "dataStores.getSiteSearchEngine".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link GetSiteSearchEngine#execute()} method to invoke the remote
             * operation. <p> {@link GetSiteSearchEngine#initialize(com.google.api.client.googleapis.services.
             * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param name Required. Resource name of SiteSearchEngine, such as `projects/{project}/locations/{location}/collec
           *        tions/{collection}/dataStores/{data_store}/siteSearchEngine`. If the caller does not have
           *        permission to access the [SiteSearchEngine], regardless of whether or not it exists, a
           *        PERMISSION_DENIED error is returned.
             * @since 1.13
             */
            protected GetSiteSearchEngine(java.lang.String name) {
              super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSiteSearchEngine.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public GetSiteSearchEngine set$Xgafv(java.lang.String $Xgafv) {
              return (GetSiteSearchEngine) super.set$Xgafv($Xgafv);
            }

            @Override
            public GetSiteSearchEngine setAccessToken(java.lang.String accessToken) {
              return (GetSiteSearchEngine) super.setAccessToken(accessToken);
            }

            @Override
            public GetSiteSearchEngine setAlt(java.lang.String alt) {
              return (GetSiteSearchEngine) super.setAlt(alt);
            }

            @Override
            public GetSiteSearchEngine setCallback(java.lang.String callback) {
              return (GetSiteSearchEngine) super.setCallback(callback);
            }

            @Override
            public GetSiteSearchEngine setFields(java.lang.String fields) {
              return (GetSiteSearchEngine) super.setFields(fields);
            }

            @Override
            public GetSiteSearchEngine setKey(java.lang.String key) {
              return (GetSiteSearchEngine) super.setKey(key);
            }

            @Override
            public GetSiteSearchEngine setOauthToken(java.lang.String oauthToken) {
              return (GetSiteSearchEngine) super.setOauthToken(oauthToken);
            }

            @Override
            public GetSiteSearchEngine setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GetSiteSearchEngine) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GetSiteSearchEngine setQuotaUser(java.lang.String quotaUser) {
              return (GetSiteSearchEngine) super.setQuotaUser(quotaUser);
            }

            @Override
            public GetSiteSearchEngine setUploadType(java.lang.String uploadType) {
              return (GetSiteSearchEngine) super.setUploadType(uploadType);
            }

            @Override
            public GetSiteSearchEngine setUploadProtocol(java.lang.String uploadProtocol) {
              return (GetSiteSearchEngine) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Resource name of SiteSearchEngine, such as `projects/{project}/locations/{l
             * ocation}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`. If the
             * caller does not have permission to access the [SiteSearchEngine], regardless of
             * whether or not it exists, a PERMISSION_DENIED error is returned.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Resource name of SiteSearchEngine, such as `projects/{project}/locations/{location}/colle
           ctions/{collection}/dataStores/{data_store}/siteSearchEngine`. If the caller does not have
           permission to access the [SiteSearchEngine], regardless of whether or not it exists, a
           PERMISSION_DENIED error is returned.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Resource name of SiteSearchEngine, such as `projects/{project}/locations/{l
             * ocation}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`. If the
             * caller does not have permission to access the [SiteSearchEngine], regardless of
             * whether or not it exists, a PERMISSION_DENIED error is returned.
             */
            public GetSiteSearchEngine setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine$");
              }
              this.name = name;
              return this;
            }

            @Override
            public GetSiteSearchEngine set(String parameterName, Object value) {
              return (GetSiteSearchEngine) super.set(parameterName, value);
            }
          }
          /**
           * Lists all the DataStores associated with the project.
           *
           * Create a request for the method "dataStores.list".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The parent branch resource name, such as
           *        `projects/{project}/locations/{location}/collections/{collection_id}`. If the caller does
           *        not have permission to list DataStores under this location, regardless of whether or not
           *        this data store exists, a PERMISSION_DENIED error is returned.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaListDataStoresResponse> {

            private static final String REST_PATH = "v1alpha/{+parent}/dataStores";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+$");

            /**
             * Lists all the DataStores associated with the project.
             *
             * Create a request for the method "dataStores.list".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The parent branch resource name, such as
           *        `projects/{project}/locations/{location}/collections/{collection_id}`. If the caller does
           *        not have permission to list DataStores under this location, regardless of whether or not
           *        this data store exists, a PERMISSION_DENIED error is returned.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaListDataStoresResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/collections/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The parent branch resource name, such as
             * `projects/{project}/locations/{location}/collections/{collection_id}`. If the caller
             * does not have permission to list DataStores under this location, regardless of
             * whether or not this data store exists, a PERMISSION_DENIED error is returned.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The parent branch resource name, such as
           `projects/{project}/locations/{location}/collections/{collection_id}`. If the caller does not have
           permission to list DataStores under this location, regardless of whether or not this data store
           exists, a PERMISSION_DENIED error is returned.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The parent branch resource name, such as
             * `projects/{project}/locations/{location}/collections/{collection_id}`. If the caller
             * does not have permission to list DataStores under this location, regardless of
             * whether or not this data store exists, a PERMISSION_DENIED error is returned.
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/collections/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Filter by solution type. For example: filter = 'solution_type:SOLUTION_TYPE_SEARCH'
             */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Filter by solution type. For example: filter = 'solution_type:SOLUTION_TYPE_SEARCH'
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /**
             * Filter by solution type. For example: filter = 'solution_type:SOLUTION_TYPE_SEARCH'
             */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /**
             * Maximum number of DataStores to return. If unspecified, defaults to 10. The maximum
             * allowed value is 50. Values above 50 will be coerced to 50. If this field is
             * negative, an INVALID_ARGUMENT is returned.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Maximum number of DataStores to return. If unspecified, defaults to 10. The maximum allowed value
           is 50. Values above 50 will be coerced to 50. If this field is negative, an INVALID_ARGUMENT is
           returned.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Maximum number of DataStores to return. If unspecified, defaults to 10. The maximum
             * allowed value is 50. Values above 50 will be coerced to 50. If this field is
             * negative, an INVALID_ARGUMENT is returned.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * A page token ListDataStoresResponse.next_page_token, received from a previous
             * DataStoreService.ListDataStores call. Provide this to retrieve the subsequent page.
             * When paginating, all other parameters provided to DataStoreService.ListDataStores
             * must match the call that provided the page token. Otherwise, an INVALID_ARGUMENT
             * error is returned.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** A page token ListDataStoresResponse.next_page_token, received from a previous
           DataStoreService.ListDataStores call. Provide this to retrieve the subsequent page. When
           paginating, all other parameters provided to DataStoreService.ListDataStores must match the call
           that provided the page token. Otherwise, an INVALID_ARGUMENT error is returned.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * A page token ListDataStoresResponse.next_page_token, received from a previous
             * DataStoreService.ListDataStores call. Provide this to retrieve the subsequent page.
             * When paginating, all other parameters provided to DataStoreService.ListDataStores
             * must match the call that provided the page token. Otherwise, an INVALID_ARGUMENT
             * error is returned.
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates a DataStore
           *
           * Create a request for the method "dataStores.patch".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Immutable. The full resource name of the data store. Format:
           *        `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_stor
           *        e_id}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters.
           * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDataStore}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDataStore content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDataStore> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");

            /**
             * Updates a DataStore
             *
             * Create a request for the method "dataStores.patch".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Immutable. The full resource name of the data store. Format:
           *        `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_stor
           *        e_id}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters.
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDataStore}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDataStore content) {
              super(DiscoveryEngine.this, "PATCH", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDataStore.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Immutable. The full resource name of the data store. Format: `projects/{project}/loca
             * tions/{location}/collections/{collection_id}/dataStores/{data_store_id}`. This field
             * must be a UTF-8 encoded string with a length limit of 1024 characters.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Immutable. The full resource name of the data store. Format:
           `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`.
           This field must be a UTF-8 encoded string with a length limit of 1024 characters.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Immutable. The full resource name of the data store. Format: `projects/{project}/loca
             * tions/{location}/collections/{collection_id}/dataStores/{data_store_id}`. This field
             * must be a UTF-8 encoded string with a length limit of 1024 characters.
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Indicates which fields in the provided DataStore to update. If an unsupported or
             * unknown field is provided, an INVALID_ARGUMENT error is returned.
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Indicates which fields in the provided DataStore to update. If an unsupported or unknown field is
           provided, an INVALID_ARGUMENT error is returned.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * Indicates which fields in the provided DataStore to update. If an unsupported or
             * unknown field is provided, an INVALID_ARGUMENT error is returned.
             */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }
          /**
           * Trains a custom model.
           *
           * Create a request for the method "dataStores.trainCustomModel".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link TrainCustomModel#execute()} method to invoke the remote
           * operation.
           *
           * @param dataStore Required. The resource name of the Data Store, such as
           *        `projects/locations/global/collections/default_collection/dataStores/default_data_store`.
           *        This field is used to identify the data store where to train the models.
           * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaTrainCustomModelRequest}
           * @return the request
           */
          public TrainCustomModel trainCustomModel(java.lang.String dataStore, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaTrainCustomModelRequest content) throws java.io.IOException {
            TrainCustomModel result = new TrainCustomModel(dataStore, content);
            initialize(result);
            return result;
          }

          public class TrainCustomModel extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1alpha/{+dataStore}:trainCustomModel";

            private final java.util.regex.Pattern DATA_STORE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");

            /**
             * Trains a custom model.
             *
             * Create a request for the method "dataStores.trainCustomModel".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link TrainCustomModel#execute()} method to invoke the remote
             * operation. <p> {@link TrainCustomModel#initialize(com.google.api.client.googleapis.services.Abs
             * tractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param dataStore Required. The resource name of the Data Store, such as
           *        `projects/locations/global/collections/default_collection/dataStores/default_data_store`.
           *        This field is used to identify the data store where to train the models.
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaTrainCustomModelRequest}
             * @since 1.13
             */
            protected TrainCustomModel(java.lang.String dataStore, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaTrainCustomModelRequest content) {
              super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
              this.dataStore = com.google.api.client.util.Preconditions.checkNotNull(dataStore, "Required parameter dataStore must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(DATA_STORE_PATTERN.matcher(dataStore).matches(),
                    "Parameter dataStore must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");
              }
            }

            @Override
            public TrainCustomModel set$Xgafv(java.lang.String $Xgafv) {
              return (TrainCustomModel) super.set$Xgafv($Xgafv);
            }

            @Override
            public TrainCustomModel setAccessToken(java.lang.String accessToken) {
              return (TrainCustomModel) super.setAccessToken(accessToken);
            }

            @Override
            public TrainCustomModel setAlt(java.lang.String alt) {
              return (TrainCustomModel) super.setAlt(alt);
            }

            @Override
            public TrainCustomModel setCallback(java.lang.String callback) {
              return (TrainCustomModel) super.setCallback(callback);
            }

            @Override
            public TrainCustomModel setFields(java.lang.String fields) {
              return (TrainCustomModel) super.setFields(fields);
            }

            @Override
            public TrainCustomModel setKey(java.lang.String key) {
              return (TrainCustomModel) super.setKey(key);
            }

            @Override
            public TrainCustomModel setOauthToken(java.lang.String oauthToken) {
              return (TrainCustomModel) super.setOauthToken(oauthToken);
            }

            @Override
            public TrainCustomModel setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (TrainCustomModel) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public TrainCustomModel setQuotaUser(java.lang.String quotaUser) {
              return (TrainCustomModel) super.setQuotaUser(quotaUser);
            }

            @Override
            public TrainCustomModel setUploadType(java.lang.String uploadType) {
              return (TrainCustomModel) super.setUploadType(uploadType);
            }

            @Override
            public TrainCustomModel setUploadProtocol(java.lang.String uploadProtocol) {
              return (TrainCustomModel) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the Data Store, such as `projects/locations/global/col
             * lections/default_collection/dataStores/default_data_store`. This field is used to
             * identify the data store where to train the models.
             */
            @com.google.api.client.util.Key
            private java.lang.String dataStore;

            /** Required. The resource name of the Data Store, such as
           `projects/locations/global/collections/default_collection/dataStores/default_data_store`. This
           field is used to identify the data store where to train the models.
             */
            public java.lang.String getDataStore() {
              return dataStore;
            }

            /**
             * Required. The resource name of the Data Store, such as `projects/locations/global/col
             * lections/default_collection/dataStores/default_data_store`. This field is used to
             * identify the data store where to train the models.
             */
            public TrainCustomModel setDataStore(java.lang.String dataStore) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(DATA_STORE_PATTERN.matcher(dataStore).matches(),
                    "Parameter dataStore must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");
              }
              this.dataStore = dataStore;
              return this;
            }

            @Override
            public TrainCustomModel set(String parameterName, Object value) {
              return (TrainCustomModel) super.set(parameterName, value);
            }
          }
          /**
           * Updates the DocumentProcessingConfig. DocumentProcessingConfig is a singleon resource of
           * DataStore. It's empty when DataStore is created. The first call to this method will set up
           * DocumentProcessingConfig.
           *
           * Create a request for the method "dataStores.updateDocumentProcessingConfig".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link UpdateDocumentProcessingConfig#execute()} method to invoke
           * the remote operation.
           *
           * @param name The full resource name of the Document Processing Config. Format:
           *        `projects/locations/collections/dataStores/documentProcessingConfig`.
           * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfig}
           * @return the request
           */
          public UpdateDocumentProcessingConfig updateDocumentProcessingConfig(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfig content) throws java.io.IOException {
            UpdateDocumentProcessingConfig result = new UpdateDocumentProcessingConfig(name, content);
            initialize(result);
            return result;
          }

          public class UpdateDocumentProcessingConfig extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfig> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/documentProcessingConfig$");

            /**
             * Updates the DocumentProcessingConfig. DocumentProcessingConfig is a singleon resource of
             * DataStore. It's empty when DataStore is created. The first call to this method will set up
             * DocumentProcessingConfig.
             *
             * Create a request for the method "dataStores.updateDocumentProcessingConfig".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link UpdateDocumentProcessingConfig#execute()} method to invoke
             * the remote operation. <p> {@link UpdateDocumentProcessingConfig#initialize(com.google.api.clien
             * t.googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
             * immediately after invoking the constructor. </p>
             *
             * @param name The full resource name of the Document Processing Config. Format:
           *        `projects/locations/collections/dataStores/documentProcessingConfig`.
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfig}
             * @since 1.13
             */
            protected UpdateDocumentProcessingConfig(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfig content) {
              super(DiscoveryEngine.this, "PATCH", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfig.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/documentProcessingConfig$");
              }
            }

            @Override
            public UpdateDocumentProcessingConfig set$Xgafv(java.lang.String $Xgafv) {
              return (UpdateDocumentProcessingConfig) super.set$Xgafv($Xgafv);
            }

            @Override
            public UpdateDocumentProcessingConfig setAccessToken(java.lang.String accessToken) {
              return (UpdateDocumentProcessingConfig) super.setAccessToken(accessToken);
            }

            @Override
            public UpdateDocumentProcessingConfig setAlt(java.lang.String alt) {
              return (UpdateDocumentProcessingConfig) super.setAlt(alt);
            }

            @Override
            public UpdateDocumentProcessingConfig setCallback(java.lang.String callback) {
              return (UpdateDocumentProcessingConfig) super.setCallback(callback);
            }

            @Override
            public UpdateDocumentProcessingConfig setFields(java.lang.String fields) {
              return (UpdateDocumentProcessingConfig) super.setFields(fields);
            }

            @Override
            public UpdateDocumentProcessingConfig setKey(java.lang.String key) {
              return (UpdateDocumentProcessingConfig) super.setKey(key);
            }

            @Override
            public UpdateDocumentProcessingConfig setOauthToken(java.lang.String oauthToken) {
              return (UpdateDocumentProcessingConfig) super.setOauthToken(oauthToken);
            }

            @Override
            public UpdateDocumentProcessingConfig setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (UpdateDocumentProcessingConfig) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public UpdateDocumentProcessingConfig setQuotaUser(java.lang.String quotaUser) {
              return (UpdateDocumentProcessingConfig) super.setQuotaUser(quotaUser);
            }

            @Override
            public UpdateDocumentProcessingConfig setUploadType(java.lang.String uploadType) {
              return (UpdateDocumentProcessingConfig) super.setUploadType(uploadType);
            }

            @Override
            public UpdateDocumentProcessingConfig setUploadProtocol(java.lang.String uploadProtocol) {
              return (UpdateDocumentProcessingConfig) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * The full resource name of the Document Processing Config. Format:
             * `projects/locations/collections/dataStores/documentProcessingConfig`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The full resource name of the Document Processing Config. Format:
           `projects/locations/collections/dataStores/documentProcessingConfig`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * The full resource name of the Document Processing Config. Format:
             * `projects/locations/collections/dataStores/documentProcessingConfig`.
             */
            public UpdateDocumentProcessingConfig setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/documentProcessingConfig$");
              }
              this.name = name;
              return this;
            }

            /**
             * Indicates which fields in the provided DocumentProcessingConfig to update. The
             * following are the only supported fields: * DocumentProcessingConfig.ocr_config If not
             * set, all supported fields are updated.
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Indicates which fields in the provided DocumentProcessingConfig to update. The following are the
           only supported fields: * DocumentProcessingConfig.ocr_config If not set, all supported fields are
           updated.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * Indicates which fields in the provided DocumentProcessingConfig to update. The
             * following are the only supported fields: * DocumentProcessingConfig.ocr_config If not
             * set, all supported fields are updated.
             */
            public UpdateDocumentProcessingConfig setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public UpdateDocumentProcessingConfig set(String parameterName, Object value) {
              return (UpdateDocumentProcessingConfig) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the Branches collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
           *   {@code DiscoveryEngine.Branches.List request = discoveryengine.branches().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Branches branches() {
            return new Branches();
          }

          /**
           * The "branches" collection of methods.
           */
          public class Branches {

            /**
             * An accessor for creating requests from the Documents collection.
             *
             * <p>The typical use is:</p>
             * <pre>
             *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
             *   {@code DiscoveryEngine.Documents.List request = discoveryengine.documents().list(parameters ...)}
             * </pre>
             *
             * @return the resource collection
             */
            public Documents documents() {
              return new Documents();
            }

            /**
             * The "documents" collection of methods.
             */
            public class Documents {

              /**
               * Creates a Document.
               *
               * Create a request for the method "documents.create".
               *
               * This request holds the parameters needed by the discoveryengine server.  After setting any
               * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
               *
               * @param parent Required. The parent resource name, such as `projects/{project}/locations/{location}/collections/{co
               *        llection}/dataStores/{data_store}/branches/{branch}`.
               * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDocument}
               * @return the request
               */
              public Create create(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDocument content) throws java.io.IOException {
                Create result = new Create(parent, content);
                initialize(result);
                return result;
              }

              public class Create extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDocument> {

                private static final String REST_PATH = "v1alpha/{+parent}/documents";

                private final java.util.regex.Pattern PARENT_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+$");

                /**
                 * Creates a Document.
                 *
                 * Create a request for the method "documents.create".
                 *
                 * This request holds the parameters needed by the the discoveryengine server.  After setting any
                 * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
                 * <p> {@link
                 * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                 * be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param parent Required. The parent resource name, such as `projects/{project}/locations/{location}/collections/{co
               *        llection}/dataStores/{data_store}/branches/{branch}`.
                 * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDocument}
                 * @since 1.13
                 */
                protected Create(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDocument content) {
                  super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDocument.class);
                  this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+$");
                  }
                }

                @Override
                public Create set$Xgafv(java.lang.String $Xgafv) {
                  return (Create) super.set$Xgafv($Xgafv);
                }

                @Override
                public Create setAccessToken(java.lang.String accessToken) {
                  return (Create) super.setAccessToken(accessToken);
                }

                @Override
                public Create setAlt(java.lang.String alt) {
                  return (Create) super.setAlt(alt);
                }

                @Override
                public Create setCallback(java.lang.String callback) {
                  return (Create) super.setCallback(callback);
                }

                @Override
                public Create setFields(java.lang.String fields) {
                  return (Create) super.setFields(fields);
                }

                @Override
                public Create setKey(java.lang.String key) {
                  return (Create) super.setKey(key);
                }

                @Override
                public Create setOauthToken(java.lang.String oauthToken) {
                  return (Create) super.setOauthToken(oauthToken);
                }

                @Override
                public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Create) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Create setQuotaUser(java.lang.String quotaUser) {
                  return (Create) super.setQuotaUser(quotaUser);
                }

                @Override
                public Create setUploadType(java.lang.String uploadType) {
                  return (Create) super.setUploadType(uploadType);
                }

                @Override
                public Create setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Create) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The parent resource name, such as `projects/{project}/locations/{locati
                 * on}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
                 */
                @com.google.api.client.util.Key
                private java.lang.String parent;

                /** Required. The parent resource name, such as `projects/{project}/locations/{location}/collections/{c
               ollection}/dataStores/{data_store}/branches/{branch}`.
                 */
                public java.lang.String getParent() {
                  return parent;
                }

                /**
                 * Required. The parent resource name, such as `projects/{project}/locations/{locati
                 * on}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
                 */
                public Create setParent(java.lang.String parent) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+$");
                  }
                  this.parent = parent;
                  return this;
                }

                /**
                 * Required. The ID to use for the Document, which will become the final component
                 * of the Document.name. If the caller does not have permission to create the
                 * Document, regardless of whether or not it exists, a `PERMISSION_DENIED` error is
                 * returned. This field must be unique among all Documents with the same parent.
                 * Otherwise, an `ALREADY_EXISTS` error is returned. This field must conform to
                 * [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of
                 * 63 characters. Otherwise, an `INVALID_ARGUMENT` error is returned.
                 */
                @com.google.api.client.util.Key
                private java.lang.String documentId;

                /** Required. The ID to use for the Document, which will become the final component of the
               Document.name. If the caller does not have permission to create the Document, regardless of whether
               or not it exists, a `PERMISSION_DENIED` error is returned. This field must be unique among all
               Documents with the same parent. Otherwise, an `ALREADY_EXISTS` error is returned. This field must
               conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63
               characters. Otherwise, an `INVALID_ARGUMENT` error is returned.
                 */
                public java.lang.String getDocumentId() {
                  return documentId;
                }

                /**
                 * Required. The ID to use for the Document, which will become the final component
                 * of the Document.name. If the caller does not have permission to create the
                 * Document, regardless of whether or not it exists, a `PERMISSION_DENIED` error is
                 * returned. This field must be unique among all Documents with the same parent.
                 * Otherwise, an `ALREADY_EXISTS` error is returned. This field must conform to
                 * [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of
                 * 63 characters. Otherwise, an `INVALID_ARGUMENT` error is returned.
                 */
                public Create setDocumentId(java.lang.String documentId) {
                  this.documentId = documentId;
                  return this;
                }

                @Override
                public Create set(String parameterName, Object value) {
                  return (Create) super.set(parameterName, value);
                }
              }
              /**
               * Deletes a Document.
               *
               * Create a request for the method "documents.delete".
               *
               * This request holds the parameters needed by the discoveryengine server.  After setting any
               * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               *
               * @param name Required. Full resource name of Document, such as `projects/{project}/locations/{location}/collectio
               *        ns/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`. If the
               *        caller does not have permission to delete the Document, regardless of whether or not it
               *        exists, a `PERMISSION_DENIED` error is returned. If the Document to delete does not exist,
               *        a `NOT_FOUND` error is returned.
               * @return the request
               */
              public Delete delete(java.lang.String name) throws java.io.IOException {
                Delete result = new Delete(name);
                initialize(result);
                return result;
              }

              public class Delete extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleProtobufEmpty> {

                private static final String REST_PATH = "v1alpha/{+name}";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+/documents/[^/]+$");

                /**
                 * Deletes a Document.
                 *
                 * Create a request for the method "documents.delete".
                 *
                 * This request holds the parameters needed by the the discoveryengine server.  After setting any
                 * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
                 * <p> {@link
                 * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                 * be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name Required. Full resource name of Document, such as `projects/{project}/locations/{location}/collectio
               *        ns/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`. If the
               *        caller does not have permission to delete the Document, regardless of whether or not it
               *        exists, a `PERMISSION_DENIED` error is returned. If the Document to delete does not exist,
               *        a `NOT_FOUND` error is returned.
                 * @since 1.13
                 */
                protected Delete(java.lang.String name) {
                  super(DiscoveryEngine.this, "DELETE", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleProtobufEmpty.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+/documents/[^/]+$");
                  }
                }

                @Override
                public Delete set$Xgafv(java.lang.String $Xgafv) {
                  return (Delete) super.set$Xgafv($Xgafv);
                }

                @Override
                public Delete setAccessToken(java.lang.String accessToken) {
                  return (Delete) super.setAccessToken(accessToken);
                }

                @Override
                public Delete setAlt(java.lang.String alt) {
                  return (Delete) super.setAlt(alt);
                }

                @Override
                public Delete setCallback(java.lang.String callback) {
                  return (Delete) super.setCallback(callback);
                }

                @Override
                public Delete setFields(java.lang.String fields) {
                  return (Delete) super.setFields(fields);
                }

                @Override
                public Delete setKey(java.lang.String key) {
                  return (Delete) super.setKey(key);
                }

                @Override
                public Delete setOauthToken(java.lang.String oauthToken) {
                  return (Delete) super.setOauthToken(oauthToken);
                }

                @Override
                public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Delete) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Delete setQuotaUser(java.lang.String quotaUser) {
                  return (Delete) super.setQuotaUser(quotaUser);
                }

                @Override
                public Delete setUploadType(java.lang.String uploadType) {
                  return (Delete) super.setUploadType(uploadType);
                }

                @Override
                public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Delete) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. Full resource name of Document, such as `projects/{project}/locations/{
                 * location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/docu
                 * ments/{document}`. If the caller does not have permission to delete the Document,
                 * regardless of whether or not it exists, a `PERMISSION_DENIED` error is returned.
                 * If the Document to delete does not exist, a `NOT_FOUND` error is returned.
                 */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** Required. Full resource name of Document, such as `projects/{project}/locations/{location}/collecti
               ons/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`. If the caller
               does not have permission to delete the Document, regardless of whether or not it exists, a
               `PERMISSION_DENIED` error is returned. If the Document to delete does not exist, a `NOT_FOUND`
               error is returned.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /**
                 * Required. Full resource name of Document, such as `projects/{project}/locations/{
                 * location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/docu
                 * ments/{document}`. If the caller does not have permission to delete the Document,
                 * regardless of whether or not it exists, a `PERMISSION_DENIED` error is returned.
                 * If the Document to delete does not exist, a `NOT_FOUND` error is returned.
                 */
                public Delete setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+/documents/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                @Override
                public Delete set(String parameterName, Object value) {
                  return (Delete) super.set(parameterName, value);
                }
              }
              /**
               * Gets a Document.
               *
               * Create a request for the method "documents.get".
               *
               * This request holds the parameters needed by the discoveryengine server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
               *
               * @param name Required. Full resource name of Document, such as `projects/{project}/locations/{location}/collectio
               *        ns/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`. If the
               *        caller does not have permission to access the Document, regardless of whether or not it
               *        exists, a `PERMISSION_DENIED` error is returned. If the requested Document does not exist,
               *        a `NOT_FOUND` error is returned.
               * @return the request
               */
              public Get get(java.lang.String name) throws java.io.IOException {
                Get result = new Get(name);
                initialize(result);
                return result;
              }

              public class Get extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDocument> {

                private static final String REST_PATH = "v1alpha/{+name}";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+/documents/[^/]+$");

                /**
                 * Gets a Document.
                 *
                 * Create a request for the method "documents.get".
                 *
                 * This request holds the parameters needed by the the discoveryengine server.  After setting any
                 * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
                 * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name Required. Full resource name of Document, such as `projects/{project}/locations/{location}/collectio
               *        ns/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`. If the
               *        caller does not have permission to access the Document, regardless of whether or not it
               *        exists, a `PERMISSION_DENIED` error is returned. If the requested Document does not exist,
               *        a `NOT_FOUND` error is returned.
                 * @since 1.13
                 */
                protected Get(java.lang.String name) {
                  super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDocument.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+/documents/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public Get set$Xgafv(java.lang.String $Xgafv) {
                  return (Get) super.set$Xgafv($Xgafv);
                }

                @Override
                public Get setAccessToken(java.lang.String accessToken) {
                  return (Get) super.setAccessToken(accessToken);
                }

                @Override
                public Get setAlt(java.lang.String alt) {
                  return (Get) super.setAlt(alt);
                }

                @Override
                public Get setCallback(java.lang.String callback) {
                  return (Get) super.setCallback(callback);
                }

                @Override
                public Get setFields(java.lang.String fields) {
                  return (Get) super.setFields(fields);
                }

                @Override
                public Get setKey(java.lang.String key) {
                  return (Get) super.setKey(key);
                }

                @Override
                public Get setOauthToken(java.lang.String oauthToken) {
                  return (Get) super.setOauthToken(oauthToken);
                }

                @Override
                public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Get) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Get setQuotaUser(java.lang.String quotaUser) {
                  return (Get) super.setQuotaUser(quotaUser);
                }

                @Override
                public Get setUploadType(java.lang.String uploadType) {
                  return (Get) super.setUploadType(uploadType);
                }

                @Override
                public Get setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Get) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. Full resource name of Document, such as `projects/{project}/locations/{
                 * location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/docu
                 * ments/{document}`. If the caller does not have permission to access the Document,
                 * regardless of whether or not it exists, a `PERMISSION_DENIED` error is returned.
                 * If the requested Document does not exist, a `NOT_FOUND` error is returned.
                 */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** Required. Full resource name of Document, such as `projects/{project}/locations/{location}/collecti
               ons/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`. If the caller
               does not have permission to access the Document, regardless of whether or not it exists, a
               `PERMISSION_DENIED` error is returned. If the requested Document does not exist, a `NOT_FOUND`
               error is returned.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /**
                 * Required. Full resource name of Document, such as `projects/{project}/locations/{
                 * location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/docu
                 * ments/{document}`. If the caller does not have permission to access the Document,
                 * regardless of whether or not it exists, a `PERMISSION_DENIED` error is returned.
                 * If the requested Document does not exist, a `NOT_FOUND` error is returned.
                 */
                public Get setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+/documents/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                @Override
                public Get set(String parameterName, Object value) {
                  return (Get) super.set(parameterName, value);
                }
              }
              /**
               * Gets the parsed layout information for a Document.
               *
               * Create a request for the method "documents.getProcessedDocument".
               *
               * This request holds the parameters needed by the discoveryengine server.  After setting any
               * optional parameters, call the {@link GetProcessedDocument#execute()} method to invoke the remote
               * operation.
               *
               * @param name Required. Full resource name of Document, such as `projects/{project}/locations/{location}/collectio
               *        ns/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`. If the
               *        caller does not have permission to access the Document, regardless of whether or not it
               *        exists, a `PERMISSION_DENIED` error is returned. If the requested Document does not exist,
               *        a `NOT_FOUND` error is returned.
               * @return the request
               */
              public GetProcessedDocument getProcessedDocument(java.lang.String name) throws java.io.IOException {
                GetProcessedDocument result = new GetProcessedDocument(name);
                initialize(result);
                return result;
              }

              public class GetProcessedDocument extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaProcessedDocument> {

                private static final String REST_PATH = "v1alpha/{+name}:getProcessedDocument";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+/documents/[^/]+$");

                /**
                 * Gets the parsed layout information for a Document.
                 *
                 * Create a request for the method "documents.getProcessedDocument".
                 *
                 * This request holds the parameters needed by the the discoveryengine server.  After setting any
                 * optional parameters, call the {@link GetProcessedDocument#execute()} method to invoke the
                 * remote operation. <p> {@link GetProcessedDocument#initialize(com.google.api.client.googleapis.s
                 * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
                 * after invoking the constructor. </p>
                 *
                 * @param name Required. Full resource name of Document, such as `projects/{project}/locations/{location}/collectio
               *        ns/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`. If the
               *        caller does not have permission to access the Document, regardless of whether or not it
               *        exists, a `PERMISSION_DENIED` error is returned. If the requested Document does not exist,
               *        a `NOT_FOUND` error is returned.
                 * @since 1.13
                 */
                protected GetProcessedDocument(java.lang.String name) {
                  super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaProcessedDocument.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+/documents/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public GetProcessedDocument set$Xgafv(java.lang.String $Xgafv) {
                  return (GetProcessedDocument) super.set$Xgafv($Xgafv);
                }

                @Override
                public GetProcessedDocument setAccessToken(java.lang.String accessToken) {
                  return (GetProcessedDocument) super.setAccessToken(accessToken);
                }

                @Override
                public GetProcessedDocument setAlt(java.lang.String alt) {
                  return (GetProcessedDocument) super.setAlt(alt);
                }

                @Override
                public GetProcessedDocument setCallback(java.lang.String callback) {
                  return (GetProcessedDocument) super.setCallback(callback);
                }

                @Override
                public GetProcessedDocument setFields(java.lang.String fields) {
                  return (GetProcessedDocument) super.setFields(fields);
                }

                @Override
                public GetProcessedDocument setKey(java.lang.String key) {
                  return (GetProcessedDocument) super.setKey(key);
                }

                @Override
                public GetProcessedDocument setOauthToken(java.lang.String oauthToken) {
                  return (GetProcessedDocument) super.setOauthToken(oauthToken);
                }

                @Override
                public GetProcessedDocument setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (GetProcessedDocument) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public GetProcessedDocument setQuotaUser(java.lang.String quotaUser) {
                  return (GetProcessedDocument) super.setQuotaUser(quotaUser);
                }

                @Override
                public GetProcessedDocument setUploadType(java.lang.String uploadType) {
                  return (GetProcessedDocument) super.setUploadType(uploadType);
                }

                @Override
                public GetProcessedDocument setUploadProtocol(java.lang.String uploadProtocol) {
                  return (GetProcessedDocument) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. Full resource name of Document, such as `projects/{project}/locations/{
                 * location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/docu
                 * ments/{document}`. If the caller does not have permission to access the Document,
                 * regardless of whether or not it exists, a `PERMISSION_DENIED` error is returned.
                 * If the requested Document does not exist, a `NOT_FOUND` error is returned.
                 */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** Required. Full resource name of Document, such as `projects/{project}/locations/{location}/collecti
               ons/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`. If the caller
               does not have permission to access the Document, regardless of whether or not it exists, a
               `PERMISSION_DENIED` error is returned. If the requested Document does not exist, a `NOT_FOUND`
               error is returned.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /**
                 * Required. Full resource name of Document, such as `projects/{project}/locations/{
                 * location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/docu
                 * ments/{document}`. If the caller does not have permission to access the Document,
                 * regardless of whether or not it exists, a `PERMISSION_DENIED` error is returned.
                 * If the requested Document does not exist, a `NOT_FOUND` error is returned.
                 */
                public GetProcessedDocument setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+/documents/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                /** What format output should be. If unspecified, defaults to JSON. */
                @com.google.api.client.util.Key
                private java.lang.String processedDocumentFormat;

                /** What format output should be. If unspecified, defaults to JSON.
                 */
                public java.lang.String getProcessedDocumentFormat() {
                  return processedDocumentFormat;
                }

                /** What format output should be. If unspecified, defaults to JSON. */
                public GetProcessedDocument setProcessedDocumentFormat(java.lang.String processedDocumentFormat) {
                  this.processedDocumentFormat = processedDocumentFormat;
                  return this;
                }

                /** Required. What type of processing to return. */
                @com.google.api.client.util.Key
                private java.lang.String processedDocumentType;

                /** Required. What type of processing to return.
                 */
                public java.lang.String getProcessedDocumentType() {
                  return processedDocumentType;
                }

                /** Required. What type of processing to return. */
                public GetProcessedDocument setProcessedDocumentType(java.lang.String processedDocumentType) {
                  this.processedDocumentType = processedDocumentType;
                  return this;
                }

                @Override
                public GetProcessedDocument set(String parameterName, Object value) {
                  return (GetProcessedDocument) super.set(parameterName, value);
                }
              }
              /**
               * Bulk import of multiple Documents. Request processing may be synchronous. Non-existing items will
               * be created. Note: It is possible for a subset of the Documents to be successfully updated.
               *
               * Create a request for the method "documents.import".
               *
               * This request holds the parameters needed by the discoveryengine server.  After setting any
               * optional parameters, call the {@link DiscoveryEngineImport#execute()} method to invoke the remote
               * operation.
               *
               * @param parent Required. The parent branch resource name, such as `projects/{project}/locations/{location}/collecti
               *        ons/{collection}/dataStores/{data_store}/branches/{branch}`. Requires create/update
               *        permission.
               * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaImportDocumentsRequest}
               * @return the request
               */
              public DiscoveryEngineImport discoveryengineImport(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaImportDocumentsRequest content) throws java.io.IOException {
                DiscoveryEngineImport result = new DiscoveryEngineImport(parent, content);
                initialize(result);
                return result;
              }

              public class DiscoveryEngineImport extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

                private static final String REST_PATH = "v1alpha/{+parent}/documents:import";

                private final java.util.regex.Pattern PARENT_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+$");

                /**
                 * Bulk import of multiple Documents. Request processing may be synchronous. Non-existing items
                 * will be created. Note: It is possible for a subset of the Documents to be successfully updated.
                 *
                 * Create a request for the method "documents.import".
                 *
                 * This request holds the parameters needed by the the discoveryengine server.  After setting any
                 * optional parameters, call the {@link DiscoveryEngineImport#execute()} method to invoke the
                 * remote operation. <p> {@link DiscoveryEngineImport#initialize(com.google.api.client.googleapis.
                 * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
                 * after invoking the constructor. </p>
                 *
                 * @param parent Required. The parent branch resource name, such as `projects/{project}/locations/{location}/collecti
               *        ons/{collection}/dataStores/{data_store}/branches/{branch}`. Requires create/update
               *        permission.
                 * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaImportDocumentsRequest}
                 * @since 1.13
                 */
                protected DiscoveryEngineImport(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaImportDocumentsRequest content) {
                  super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
                  this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+$");
                  }
                }

                @Override
                public DiscoveryEngineImport set$Xgafv(java.lang.String $Xgafv) {
                  return (DiscoveryEngineImport) super.set$Xgafv($Xgafv);
                }

                @Override
                public DiscoveryEngineImport setAccessToken(java.lang.String accessToken) {
                  return (DiscoveryEngineImport) super.setAccessToken(accessToken);
                }

                @Override
                public DiscoveryEngineImport setAlt(java.lang.String alt) {
                  return (DiscoveryEngineImport) super.setAlt(alt);
                }

                @Override
                public DiscoveryEngineImport setCallback(java.lang.String callback) {
                  return (DiscoveryEngineImport) super.setCallback(callback);
                }

                @Override
                public DiscoveryEngineImport setFields(java.lang.String fields) {
                  return (DiscoveryEngineImport) super.setFields(fields);
                }

                @Override
                public DiscoveryEngineImport setKey(java.lang.String key) {
                  return (DiscoveryEngineImport) super.setKey(key);
                }

                @Override
                public DiscoveryEngineImport setOauthToken(java.lang.String oauthToken) {
                  return (DiscoveryEngineImport) super.setOauthToken(oauthToken);
                }

                @Override
                public DiscoveryEngineImport setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (DiscoveryEngineImport) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public DiscoveryEngineImport setQuotaUser(java.lang.String quotaUser) {
                  return (DiscoveryEngineImport) super.setQuotaUser(quotaUser);
                }

                @Override
                public DiscoveryEngineImport setUploadType(java.lang.String uploadType) {
                  return (DiscoveryEngineImport) super.setUploadType(uploadType);
                }

                @Override
                public DiscoveryEngineImport setUploadProtocol(java.lang.String uploadProtocol) {
                  return (DiscoveryEngineImport) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The parent branch resource name, such as `projects/{project}/locations/
                 * {location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
                 * Requires create/update permission.
                 */
                @com.google.api.client.util.Key
                private java.lang.String parent;

                /** Required. The parent branch resource name, such as `projects/{project}/locations/{location}/collect
               ions/{collection}/dataStores/{data_store}/branches/{branch}`. Requires create/update permission.
                 */
                public java.lang.String getParent() {
                  return parent;
                }

                /**
                 * Required. The parent branch resource name, such as `projects/{project}/locations/
                 * {location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
                 * Requires create/update permission.
                 */
                public DiscoveryEngineImport setParent(java.lang.String parent) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+$");
                  }
                  this.parent = parent;
                  return this;
                }

                @Override
                public DiscoveryEngineImport set(String parameterName, Object value) {
                  return (DiscoveryEngineImport) super.set(parameterName, value);
                }
              }
              /**
               * Gets a list of Documents.
               *
               * Create a request for the method "documents.list".
               *
               * This request holds the parameters needed by the discoveryengine server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
               *
               * @param parent Required. The parent branch resource name, such as `projects/{project}/locations/{location}/collecti
               *        ons/{collection}/dataStores/{data_store}/branches/{branch}`. Use `default_branch` as the
               *        branch ID, to list documents under the default branch. If the caller does not have
               *        permission to list Documents under this branch, regardless of whether or not this branch
               *        exists, a `PERMISSION_DENIED` error is returned.
               * @return the request
               */
              public List list(java.lang.String parent) throws java.io.IOException {
                List result = new List(parent);
                initialize(result);
                return result;
              }

              public class List extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaListDocumentsResponse> {

                private static final String REST_PATH = "v1alpha/{+parent}/documents";

                private final java.util.regex.Pattern PARENT_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+$");

                /**
                 * Gets a list of Documents.
                 *
                 * Create a request for the method "documents.list".
                 *
                 * This request holds the parameters needed by the the discoveryengine server.  After setting any
                 * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
                 * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param parent Required. The parent branch resource name, such as `projects/{project}/locations/{location}/collecti
               *        ons/{collection}/dataStores/{data_store}/branches/{branch}`. Use `default_branch` as the
               *        branch ID, to list documents under the default branch. If the caller does not have
               *        permission to list Documents under this branch, regardless of whether or not this branch
               *        exists, a `PERMISSION_DENIED` error is returned.
                 * @since 1.13
                 */
                protected List(java.lang.String parent) {
                  super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaListDocumentsResponse.class);
                  this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public List set$Xgafv(java.lang.String $Xgafv) {
                  return (List) super.set$Xgafv($Xgafv);
                }

                @Override
                public List setAccessToken(java.lang.String accessToken) {
                  return (List) super.setAccessToken(accessToken);
                }

                @Override
                public List setAlt(java.lang.String alt) {
                  return (List) super.setAlt(alt);
                }

                @Override
                public List setCallback(java.lang.String callback) {
                  return (List) super.setCallback(callback);
                }

                @Override
                public List setFields(java.lang.String fields) {
                  return (List) super.setFields(fields);
                }

                @Override
                public List setKey(java.lang.String key) {
                  return (List) super.setKey(key);
                }

                @Override
                public List setOauthToken(java.lang.String oauthToken) {
                  return (List) super.setOauthToken(oauthToken);
                }

                @Override
                public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (List) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public List setQuotaUser(java.lang.String quotaUser) {
                  return (List) super.setQuotaUser(quotaUser);
                }

                @Override
                public List setUploadType(java.lang.String uploadType) {
                  return (List) super.setUploadType(uploadType);
                }

                @Override
                public List setUploadProtocol(java.lang.String uploadProtocol) {
                  return (List) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The parent branch resource name, such as `projects/{project}/locations/
                 * {location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
                 * Use `default_branch` as the branch ID, to list documents under the default
                 * branch. If the caller does not have permission to list Documents under this
                 * branch, regardless of whether or not this branch exists, a `PERMISSION_DENIED`
                 * error is returned.
                 */
                @com.google.api.client.util.Key
                private java.lang.String parent;

                /** Required. The parent branch resource name, such as `projects/{project}/locations/{location}/collect
               ions/{collection}/dataStores/{data_store}/branches/{branch}`. Use `default_branch` as the branch
               ID, to list documents under the default branch. If the caller does not have permission to list
               Documents under this branch, regardless of whether or not this branch exists, a `PERMISSION_DENIED`
               error is returned.
                 */
                public java.lang.String getParent() {
                  return parent;
                }

                /**
                 * Required. The parent branch resource name, such as `projects/{project}/locations/
                 * {location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
                 * Use `default_branch` as the branch ID, to list documents under the default
                 * branch. If the caller does not have permission to list Documents under this
                 * branch, regardless of whether or not this branch exists, a `PERMISSION_DENIED`
                 * error is returned.
                 */
                public List setParent(java.lang.String parent) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+$");
                  }
                  this.parent = parent;
                  return this;
                }

                /**
                 * Maximum number of Documents to return. If unspecified, defaults to 100. The
                 * maximum allowed value is 1000. Values above 1000 will be coerced to 1000. If this
                 * field is negative, an `INVALID_ARGUMENT` error is returned.
                 */
                @com.google.api.client.util.Key
                private java.lang.Integer pageSize;

                /** Maximum number of Documents to return. If unspecified, defaults to 100. The maximum allowed value
               is 1000. Values above 1000 will be coerced to 1000. If this field is negative, an
               `INVALID_ARGUMENT` error is returned.
                 */
                public java.lang.Integer getPageSize() {
                  return pageSize;
                }

                /**
                 * Maximum number of Documents to return. If unspecified, defaults to 100. The
                 * maximum allowed value is 1000. Values above 1000 will be coerced to 1000. If this
                 * field is negative, an `INVALID_ARGUMENT` error is returned.
                 */
                public List setPageSize(java.lang.Integer pageSize) {
                  this.pageSize = pageSize;
                  return this;
                }

                /**
                 * A page token ListDocumentsResponse.next_page_token, received from a previous
                 * DocumentService.ListDocuments call. Provide this to retrieve the subsequent page.
                 * When paginating, all other parameters provided to DocumentService.ListDocuments
                 * must match the call that provided the page token. Otherwise, an
                 * `INVALID_ARGUMENT` error is returned.
                 */
                @com.google.api.client.util.Key
                private java.lang.String pageToken;

                /** A page token ListDocumentsResponse.next_page_token, received from a previous
               DocumentService.ListDocuments call. Provide this to retrieve the subsequent page. When paginating,
               all other parameters provided to DocumentService.ListDocuments must match the call that provided
               the page token. Otherwise, an `INVALID_ARGUMENT` error is returned.
                 */
                public java.lang.String getPageToken() {
                  return pageToken;
                }

                /**
                 * A page token ListDocumentsResponse.next_page_token, received from a previous
                 * DocumentService.ListDocuments call. Provide this to retrieve the subsequent page.
                 * When paginating, all other parameters provided to DocumentService.ListDocuments
                 * must match the call that provided the page token. Otherwise, an
                 * `INVALID_ARGUMENT` error is returned.
                 */
                public List setPageToken(java.lang.String pageToken) {
                  this.pageToken = pageToken;
                  return this;
                }

                @Override
                public List set(String parameterName, Object value) {
                  return (List) super.set(parameterName, value);
                }
              }
              /**
               * Updates a Document.
               *
               * Create a request for the method "documents.patch".
               *
               * This request holds the parameters needed by the discoveryengine server.  After setting any
               * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
               *
               * @param name Immutable. The full resource name of the document. Format: `projects/{project}/locations/{location}/
               *        collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document_id}
               *        `. This field must be a UTF-8 encoded string with a length limit of 1024 characters.
               * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDocument}
               * @return the request
               */
              public Patch patch(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDocument content) throws java.io.IOException {
                Patch result = new Patch(name, content);
                initialize(result);
                return result;
              }

              public class Patch extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDocument> {

                private static final String REST_PATH = "v1alpha/{+name}";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+/documents/[^/]+$");

                /**
                 * Updates a Document.
                 *
                 * Create a request for the method "documents.patch".
                 *
                 * This request holds the parameters needed by the the discoveryengine server.  After setting any
                 * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
                 * <p> {@link
                 * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                 * be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name Immutable. The full resource name of the document. Format: `projects/{project}/locations/{location}/
               *        collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document_id}
               *        `. This field must be a UTF-8 encoded string with a length limit of 1024 characters.
                 * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDocument}
                 * @since 1.13
                 */
                protected Patch(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDocument content) {
                  super(DiscoveryEngine.this, "PATCH", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDocument.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+/documents/[^/]+$");
                  }
                }

                @Override
                public Patch set$Xgafv(java.lang.String $Xgafv) {
                  return (Patch) super.set$Xgafv($Xgafv);
                }

                @Override
                public Patch setAccessToken(java.lang.String accessToken) {
                  return (Patch) super.setAccessToken(accessToken);
                }

                @Override
                public Patch setAlt(java.lang.String alt) {
                  return (Patch) super.setAlt(alt);
                }

                @Override
                public Patch setCallback(java.lang.String callback) {
                  return (Patch) super.setCallback(callback);
                }

                @Override
                public Patch setFields(java.lang.String fields) {
                  return (Patch) super.setFields(fields);
                }

                @Override
                public Patch setKey(java.lang.String key) {
                  return (Patch) super.setKey(key);
                }

                @Override
                public Patch setOauthToken(java.lang.String oauthToken) {
                  return (Patch) super.setOauthToken(oauthToken);
                }

                @Override
                public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Patch) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Patch setQuotaUser(java.lang.String quotaUser) {
                  return (Patch) super.setQuotaUser(quotaUser);
                }

                @Override
                public Patch setUploadType(java.lang.String uploadType) {
                  return (Patch) super.setUploadType(uploadType);
                }

                @Override
                public Patch setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Patch) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Immutable. The full resource name of the document. Format: `projects/{project}/lo
                 * cations/{location}/collections/{collection}/dataStores/{data_store}/branches/{bra
                 * nch}/documents/{document_id}`. This field must be a UTF-8 encoded string with a
                 * length limit of 1024 characters.
                 */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** Immutable. The full resource name of the document. Format: `projects/{project}/locations/{location}
               /collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document_id}`. This
               field must be a UTF-8 encoded string with a length limit of 1024 characters.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /**
                 * Immutable. The full resource name of the document. Format: `projects/{project}/lo
                 * cations/{location}/collections/{collection}/dataStores/{data_store}/branches/{bra
                 * nch}/documents/{document_id}`. This field must be a UTF-8 encoded string with a
                 * length limit of 1024 characters.
                 */
                public Patch setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+/documents/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                /**
                 * If set to true, and the Document is not found, a new Document will be created.
                 */
                @com.google.api.client.util.Key
                private java.lang.Boolean allowMissing;

                /** If set to true, and the Document is not found, a new Document will be created.
                 */
                public java.lang.Boolean getAllowMissing() {
                  return allowMissing;
                }

                /**
                 * If set to true, and the Document is not found, a new Document will be created.
                 */
                public Patch setAllowMissing(java.lang.Boolean allowMissing) {
                  this.allowMissing = allowMissing;
                  return this;
                }

                /**
                 * Indicates which fields in the provided imported 'document' to update. If not set,
                 * will by default update all fields.
                 */
                @com.google.api.client.util.Key
                private String updateMask;

                /** Indicates which fields in the provided imported 'document' to update. If not set, will by default
               update all fields.
                 */
                public String getUpdateMask() {
                  return updateMask;
                }

                /**
                 * Indicates which fields in the provided imported 'document' to update. If not set,
                 * will by default update all fields.
                 */
                public Patch setUpdateMask(String updateMask) {
                  this.updateMask = updateMask;
                  return this;
                }

                @Override
                public Patch set(String parameterName, Object value) {
                  return (Patch) super.set(parameterName, value);
                }
              }
              /**
               * Permanently deletes all selected Documents in a branch. This process is asynchronous. Depending
               * on the number of Documents to be deleted, this operation can take hours to complete. Before the
               * delete operation completes, some Documents might still be returned by DocumentService.GetDocument
               * or DocumentService.ListDocuments. To get a list of the Documents to be deleted, set
               * PurgeDocumentsRequest.force to false.
               *
               * Create a request for the method "documents.purge".
               *
               * This request holds the parameters needed by the discoveryengine server.  After setting any
               * optional parameters, call the {@link Purge#execute()} method to invoke the remote operation.
               *
               * @param parent Required. The parent resource name, such as `projects/{project}/locations/{location}/collections/{co
               *        llection}/dataStores/{data_store}/branches/{branch}`.
               * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaPurgeDocumentsRequest}
               * @return the request
               */
              public Purge purge(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaPurgeDocumentsRequest content) throws java.io.IOException {
                Purge result = new Purge(parent, content);
                initialize(result);
                return result;
              }

              public class Purge extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

                private static final String REST_PATH = "v1alpha/{+parent}/documents:purge";

                private final java.util.regex.Pattern PARENT_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+$");

                /**
                 * Permanently deletes all selected Documents in a branch. This process is asynchronous. Depending
                 * on the number of Documents to be deleted, this operation can take hours to complete. Before the
                 * delete operation completes, some Documents might still be returned by
                 * DocumentService.GetDocument or DocumentService.ListDocuments. To get a list of the Documents to
                 * be deleted, set PurgeDocumentsRequest.force to false.
                 *
                 * Create a request for the method "documents.purge".
                 *
                 * This request holds the parameters needed by the the discoveryengine server.  After setting any
                 * optional parameters, call the {@link Purge#execute()} method to invoke the remote operation.
                 * <p> {@link
                 * Purge#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                 * be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param parent Required. The parent resource name, such as `projects/{project}/locations/{location}/collections/{co
               *        llection}/dataStores/{data_store}/branches/{branch}`.
                 * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaPurgeDocumentsRequest}
                 * @since 1.13
                 */
                protected Purge(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaPurgeDocumentsRequest content) {
                  super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
                  this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+$");
                  }
                }

                @Override
                public Purge set$Xgafv(java.lang.String $Xgafv) {
                  return (Purge) super.set$Xgafv($Xgafv);
                }

                @Override
                public Purge setAccessToken(java.lang.String accessToken) {
                  return (Purge) super.setAccessToken(accessToken);
                }

                @Override
                public Purge setAlt(java.lang.String alt) {
                  return (Purge) super.setAlt(alt);
                }

                @Override
                public Purge setCallback(java.lang.String callback) {
                  return (Purge) super.setCallback(callback);
                }

                @Override
                public Purge setFields(java.lang.String fields) {
                  return (Purge) super.setFields(fields);
                }

                @Override
                public Purge setKey(java.lang.String key) {
                  return (Purge) super.setKey(key);
                }

                @Override
                public Purge setOauthToken(java.lang.String oauthToken) {
                  return (Purge) super.setOauthToken(oauthToken);
                }

                @Override
                public Purge setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Purge) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Purge setQuotaUser(java.lang.String quotaUser) {
                  return (Purge) super.setQuotaUser(quotaUser);
                }

                @Override
                public Purge setUploadType(java.lang.String uploadType) {
                  return (Purge) super.setUploadType(uploadType);
                }

                @Override
                public Purge setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Purge) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The parent resource name, such as `projects/{project}/locations/{locati
                 * on}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
                 */
                @com.google.api.client.util.Key
                private java.lang.String parent;

                /** Required. The parent resource name, such as `projects/{project}/locations/{location}/collections/{c
               ollection}/dataStores/{data_store}/branches/{branch}`.
                 */
                public java.lang.String getParent() {
                  return parent;
                }

                /**
                 * Required. The parent resource name, such as `projects/{project}/locations/{locati
                 * on}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
                 */
                public Purge setParent(java.lang.String parent) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+$");
                  }
                  this.parent = parent;
                  return this;
                }

                @Override
                public Purge set(String parameterName, Object value) {
                  return (Purge) super.set(parameterName, value);
                }
              }

              /**
               * An accessor for creating requests from the Chunks collection.
               *
               * <p>The typical use is:</p>
               * <pre>
               *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
               *   {@code DiscoveryEngine.Chunks.List request = discoveryengine.chunks().list(parameters ...)}
               * </pre>
               *
               * @return the resource collection
               */
              public Chunks chunks() {
                return new Chunks();
              }

              /**
               * The "chunks" collection of methods.
               */
              public class Chunks {

                /**
                 * Gets a Document.
                 *
                 * Create a request for the method "chunks.get".
                 *
                 * This request holds the parameters needed by the discoveryengine server.  After setting any
                 * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
                 *
                 * @param name Required. Full resource name of Chunk, such as `projects/{project}/locations/{location}/collections/
                 *        {collection}/dataStores/{data_store}/branches/{branch}/documents/{document}/chunks/{chunk}
                 *        `. If the caller does not have permission to access the Chunk, regardless of whether or
                 *        not it exists, a `PERMISSION_DENIED` error is returned. If the requested Chunk does not
                 *        exist, a `NOT_FOUND` error is returned.
                 * @return the request
                 */
                public Get get(java.lang.String name) throws java.io.IOException {
                  Get result = new Get(name);
                  initialize(result);
                  return result;
                }

                public class Get extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaChunk> {

                  private static final String REST_PATH = "v1alpha/{+name}";

                  private final java.util.regex.Pattern NAME_PATTERN =
                      java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+/documents/[^/]+/chunks/[^/]+$");

                  /**
                   * Gets a Document.
                   *
                   * Create a request for the method "chunks.get".
                   *
                   * This request holds the parameters needed by the the discoveryengine server.  After setting any
                   * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
                   * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                   * must be called to initialize this instance immediately after invoking the constructor. </p>
                   *
                   * @param name Required. Full resource name of Chunk, such as `projects/{project}/locations/{location}/collections/
                 *        {collection}/dataStores/{data_store}/branches/{branch}/documents/{document}/chunks/{chunk}
                 *        `. If the caller does not have permission to access the Chunk, regardless of whether or
                 *        not it exists, a `PERMISSION_DENIED` error is returned. If the requested Chunk does not
                 *        exist, a `NOT_FOUND` error is returned.
                   * @since 1.13
                   */
                  protected Get(java.lang.String name) {
                    super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaChunk.class);
                    this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                          "Parameter name must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+/documents/[^/]+/chunks/[^/]+$");
                    }
                  }

                  @Override
                  public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                    return super.executeUsingHead();
                  }

                  @Override
                  public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                    return super.buildHttpRequestUsingHead();
                  }

                  @Override
                  public Get set$Xgafv(java.lang.String $Xgafv) {
                    return (Get) super.set$Xgafv($Xgafv);
                  }

                  @Override
                  public Get setAccessToken(java.lang.String accessToken) {
                    return (Get) super.setAccessToken(accessToken);
                  }

                  @Override
                  public Get setAlt(java.lang.String alt) {
                    return (Get) super.setAlt(alt);
                  }

                  @Override
                  public Get setCallback(java.lang.String callback) {
                    return (Get) super.setCallback(callback);
                  }

                  @Override
                  public Get setFields(java.lang.String fields) {
                    return (Get) super.setFields(fields);
                  }

                  @Override
                  public Get setKey(java.lang.String key) {
                    return (Get) super.setKey(key);
                  }

                  @Override
                  public Get setOauthToken(java.lang.String oauthToken) {
                    return (Get) super.setOauthToken(oauthToken);
                  }

                  @Override
                  public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                    return (Get) super.setPrettyPrint(prettyPrint);
                  }

                  @Override
                  public Get setQuotaUser(java.lang.String quotaUser) {
                    return (Get) super.setQuotaUser(quotaUser);
                  }

                  @Override
                  public Get setUploadType(java.lang.String uploadType) {
                    return (Get) super.setUploadType(uploadType);
                  }

                  @Override
                  public Get setUploadProtocol(java.lang.String uploadProtocol) {
                    return (Get) super.setUploadProtocol(uploadProtocol);
                  }

                  /**
                   * Required. Full resource name of Chunk, such as `projects/{project}/locations/{l
                   * ocation}/collections/{collection}/dataStores/{data_store}/branches/{branch}/doc
                   * uments/{document}/chunks/{chunk}`. If the caller does not have permission to
                   * access the Chunk, regardless of whether or not it exists, a `PERMISSION_DENIED`
                   * error is returned. If the requested Chunk does not exist, a `NOT_FOUND` error
                   * is returned.
                   */
                  @com.google.api.client.util.Key
                  private java.lang.String name;

                  /** Required. Full resource name of Chunk, such as `projects/{project}/locations/{location}/collections
                 /{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}/chunks/{chunk}`. If
                 the caller does not have permission to access the Chunk, regardless of whether or not it exists, a
                 `PERMISSION_DENIED` error is returned. If the requested Chunk does not exist, a `NOT_FOUND` error
                 is returned.
                   */
                  public java.lang.String getName() {
                    return name;
                  }

                  /**
                   * Required. Full resource name of Chunk, such as `projects/{project}/locations/{l
                   * ocation}/collections/{collection}/dataStores/{data_store}/branches/{branch}/doc
                   * uments/{document}/chunks/{chunk}`. If the caller does not have permission to
                   * access the Chunk, regardless of whether or not it exists, a `PERMISSION_DENIED`
                   * error is returned. If the requested Chunk does not exist, a `NOT_FOUND` error
                   * is returned.
                   */
                  public Get setName(java.lang.String name) {
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                          "Parameter name must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+/documents/[^/]+/chunks/[^/]+$");
                    }
                    this.name = name;
                    return this;
                  }

                  @Override
                  public Get set(String parameterName, Object value) {
                    return (Get) super.set(parameterName, value);
                  }
                }
                /**
                 * Gets a list of Chunks.
                 *
                 * Create a request for the method "chunks.list".
                 *
                 * This request holds the parameters needed by the discoveryengine server.  After setting any
                 * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
                 *
                 * @param parent Required. The parent document resource name, such as `projects/{project}/locations/{location}/collec
                 *        tions/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`. If the
                 *        caller does not have permission to list Chunks under this document, regardless of whether
                 *        or not this document exists, a `PERMISSION_DENIED` error is returned.
                 * @return the request
                 */
                public List list(java.lang.String parent) throws java.io.IOException {
                  List result = new List(parent);
                  initialize(result);
                  return result;
                }

                public class List extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaListChunksResponse> {

                  private static final String REST_PATH = "v1alpha/{+parent}/chunks";

                  private final java.util.regex.Pattern PARENT_PATTERN =
                      java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+/documents/[^/]+$");

                  /**
                   * Gets a list of Chunks.
                   *
                   * Create a request for the method "chunks.list".
                   *
                   * This request holds the parameters needed by the the discoveryengine server.  After setting any
                   * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
                   * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                   * must be called to initialize this instance immediately after invoking the constructor. </p>
                   *
                   * @param parent Required. The parent document resource name, such as `projects/{project}/locations/{location}/collec
                 *        tions/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`. If the
                 *        caller does not have permission to list Chunks under this document, regardless of whether
                 *        or not this document exists, a `PERMISSION_DENIED` error is returned.
                   * @since 1.13
                   */
                  protected List(java.lang.String parent) {
                    super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaListChunksResponse.class);
                    this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                          "Parameter parent must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+/documents/[^/]+$");
                    }
                  }

                  @Override
                  public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                    return super.executeUsingHead();
                  }

                  @Override
                  public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                    return super.buildHttpRequestUsingHead();
                  }

                  @Override
                  public List set$Xgafv(java.lang.String $Xgafv) {
                    return (List) super.set$Xgafv($Xgafv);
                  }

                  @Override
                  public List setAccessToken(java.lang.String accessToken) {
                    return (List) super.setAccessToken(accessToken);
                  }

                  @Override
                  public List setAlt(java.lang.String alt) {
                    return (List) super.setAlt(alt);
                  }

                  @Override
                  public List setCallback(java.lang.String callback) {
                    return (List) super.setCallback(callback);
                  }

                  @Override
                  public List setFields(java.lang.String fields) {
                    return (List) super.setFields(fields);
                  }

                  @Override
                  public List setKey(java.lang.String key) {
                    return (List) super.setKey(key);
                  }

                  @Override
                  public List setOauthToken(java.lang.String oauthToken) {
                    return (List) super.setOauthToken(oauthToken);
                  }

                  @Override
                  public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                    return (List) super.setPrettyPrint(prettyPrint);
                  }

                  @Override
                  public List setQuotaUser(java.lang.String quotaUser) {
                    return (List) super.setQuotaUser(quotaUser);
                  }

                  @Override
                  public List setUploadType(java.lang.String uploadType) {
                    return (List) super.setUploadType(uploadType);
                  }

                  @Override
                  public List setUploadProtocol(java.lang.String uploadProtocol) {
                    return (List) super.setUploadProtocol(uploadProtocol);
                  }

                  /**
                   * Required. The parent document resource name, such as `projects/{project}/locati
                   * ons/{location}/collections/{collection}/dataStores/{data_store}/branches/{branc
                   * h}/documents/{document}`. If the caller does not have permission to list Chunks
                   * under this document, regardless of whether or not this document exists, a
                   * `PERMISSION_DENIED` error is returned.
                   */
                  @com.google.api.client.util.Key
                  private java.lang.String parent;

                  /** Required. The parent document resource name, such as `projects/{project}/locations/{location}/colle
                 ctions/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`. If the caller
                 does not have permission to list Chunks under this document, regardless of whether or not this
                 document exists, a `PERMISSION_DENIED` error is returned.
                   */
                  public java.lang.String getParent() {
                    return parent;
                  }

                  /**
                   * Required. The parent document resource name, such as `projects/{project}/locati
                   * ons/{location}/collections/{collection}/dataStores/{data_store}/branches/{branc
                   * h}/documents/{document}`. If the caller does not have permission to list Chunks
                   * under this document, regardless of whether or not this document exists, a
                   * `PERMISSION_DENIED` error is returned.
                   */
                  public List setParent(java.lang.String parent) {
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                          "Parameter parent must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+/documents/[^/]+$");
                    }
                    this.parent = parent;
                    return this;
                  }

                  /**
                   * Maximum number of Chunks to return. If unspecified, defaults to 100. The
                   * maximum allowed value is 1000. Values above 1000 will be coerced to 1000. If
                   * this field is negative, an `INVALID_ARGUMENT` error is returned.
                   */
                  @com.google.api.client.util.Key
                  private java.lang.Integer pageSize;

                  /** Maximum number of Chunks to return. If unspecified, defaults to 100. The maximum allowed value is
                 1000. Values above 1000 will be coerced to 1000. If this field is negative, an `INVALID_ARGUMENT`
                 error is returned.
                   */
                  public java.lang.Integer getPageSize() {
                    return pageSize;
                  }

                  /**
                   * Maximum number of Chunks to return. If unspecified, defaults to 100. The
                   * maximum allowed value is 1000. Values above 1000 will be coerced to 1000. If
                   * this field is negative, an `INVALID_ARGUMENT` error is returned.
                   */
                  public List setPageSize(java.lang.Integer pageSize) {
                    this.pageSize = pageSize;
                    return this;
                  }

                  /**
                   * A page token ListChunksResponse.next_page_token, received from a previous
                   * ChunkService.ListChunks call. Provide this to retrieve the subsequent page.
                   * When paginating, all other parameters provided to ChunkService.ListChunks must
                   * match the call that provided the page token. Otherwise, an `INVALID_ARGUMENT`
                   * error is returned.
                   */
                  @com.google.api.client.util.Key
                  private java.lang.String pageToken;

                  /** A page token ListChunksResponse.next_page_token, received from a previous ChunkService.ListChunks
                 call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided
                 to ChunkService.ListChunks must match the call that provided the page token. Otherwise, an
                 `INVALID_ARGUMENT` error is returned.
                   */
                  public java.lang.String getPageToken() {
                    return pageToken;
                  }

                  /**
                   * A page token ListChunksResponse.next_page_token, received from a previous
                   * ChunkService.ListChunks call. Provide this to retrieve the subsequent page.
                   * When paginating, all other parameters provided to ChunkService.ListChunks must
                   * match the call that provided the page token. Otherwise, an `INVALID_ARGUMENT`
                   * error is returned.
                   */
                  public List setPageToken(java.lang.String pageToken) {
                    this.pageToken = pageToken;
                    return this;
                  }

                  @Override
                  public List set(String parameterName, Object value) {
                    return (List) super.set(parameterName, value);
                  }
                }

              }
            }
            /**
             * An accessor for creating requests from the Operations collection.
             *
             * <p>The typical use is:</p>
             * <pre>
             *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
             *   {@code DiscoveryEngine.Operations.List request = discoveryengine.operations().list(parameters ...)}
             * </pre>
             *
             * @return the resource collection
             */
            public Operations operations() {
              return new Operations();
            }

            /**
             * The "operations" collection of methods.
             */
            public class Operations {

              /**
               * Gets the latest state of a long-running operation. Clients can use this method to poll the
               * operation result at intervals as recommended by the API service.
               *
               * Create a request for the method "operations.get".
               *
               * This request holds the parameters needed by the discoveryengine server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
               *
               * @param name The name of the operation resource.
               * @return the request
               */
              public Get get(java.lang.String name) throws java.io.IOException {
                Get result = new Get(name);
                initialize(result);
                return result;
              }

              public class Get extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

                private static final String REST_PATH = "v1alpha/{+name}";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+/operations/[^/]+$");

                /**
                 * Gets the latest state of a long-running operation. Clients can use this method to poll the
                 * operation result at intervals as recommended by the API service.
                 *
                 * Create a request for the method "operations.get".
                 *
                 * This request holds the parameters needed by the the discoveryengine server.  After setting any
                 * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
                 * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name The name of the operation resource.
                 * @since 1.13
                 */
                protected Get(java.lang.String name) {
                  super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+/operations/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public Get set$Xgafv(java.lang.String $Xgafv) {
                  return (Get) super.set$Xgafv($Xgafv);
                }

                @Override
                public Get setAccessToken(java.lang.String accessToken) {
                  return (Get) super.setAccessToken(accessToken);
                }

                @Override
                public Get setAlt(java.lang.String alt) {
                  return (Get) super.setAlt(alt);
                }

                @Override
                public Get setCallback(java.lang.String callback) {
                  return (Get) super.setCallback(callback);
                }

                @Override
                public Get setFields(java.lang.String fields) {
                  return (Get) super.setFields(fields);
                }

                @Override
                public Get setKey(java.lang.String key) {
                  return (Get) super.setKey(key);
                }

                @Override
                public Get setOauthToken(java.lang.String oauthToken) {
                  return (Get) super.setOauthToken(oauthToken);
                }

                @Override
                public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Get) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Get setQuotaUser(java.lang.String quotaUser) {
                  return (Get) super.setQuotaUser(quotaUser);
                }

                @Override
                public Get setUploadType(java.lang.String uploadType) {
                  return (Get) super.setUploadType(uploadType);
                }

                @Override
                public Get setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Get) super.setUploadProtocol(uploadProtocol);
                }

                /** The name of the operation resource. */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** The name of the operation resource.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /** The name of the operation resource. */
                public Get setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+/operations/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                @Override
                public Get set(String parameterName, Object value) {
                  return (Get) super.set(parameterName, value);
                }
              }
              /**
               * Lists operations that match the specified filter in the request. If the server doesn't support
               * this method, it returns `UNIMPLEMENTED`.
               *
               * Create a request for the method "operations.list".
               *
               * This request holds the parameters needed by the discoveryengine server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
               *
               * @param name The name of the operation's parent resource.
               * @return the request
               */
              public List list(java.lang.String name) throws java.io.IOException {
                List result = new List(name);
                initialize(result);
                return result;
              }

              public class List extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningListOperationsResponse> {

                private static final String REST_PATH = "v1alpha/{+name}/operations";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+$");

                /**
                 * Lists operations that match the specified filter in the request. If the server doesn't support
                 * this method, it returns `UNIMPLEMENTED`.
                 *
                 * Create a request for the method "operations.list".
                 *
                 * This request holds the parameters needed by the the discoveryengine server.  After setting any
                 * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
                 * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name The name of the operation's parent resource.
                 * @since 1.13
                 */
                protected List(java.lang.String name) {
                  super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningListOperationsResponse.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public List set$Xgafv(java.lang.String $Xgafv) {
                  return (List) super.set$Xgafv($Xgafv);
                }

                @Override
                public List setAccessToken(java.lang.String accessToken) {
                  return (List) super.setAccessToken(accessToken);
                }

                @Override
                public List setAlt(java.lang.String alt) {
                  return (List) super.setAlt(alt);
                }

                @Override
                public List setCallback(java.lang.String callback) {
                  return (List) super.setCallback(callback);
                }

                @Override
                public List setFields(java.lang.String fields) {
                  return (List) super.setFields(fields);
                }

                @Override
                public List setKey(java.lang.String key) {
                  return (List) super.setKey(key);
                }

                @Override
                public List setOauthToken(java.lang.String oauthToken) {
                  return (List) super.setOauthToken(oauthToken);
                }

                @Override
                public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (List) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public List setQuotaUser(java.lang.String quotaUser) {
                  return (List) super.setQuotaUser(quotaUser);
                }

                @Override
                public List setUploadType(java.lang.String uploadType) {
                  return (List) super.setUploadType(uploadType);
                }

                @Override
                public List setUploadProtocol(java.lang.String uploadProtocol) {
                  return (List) super.setUploadProtocol(uploadProtocol);
                }

                /** The name of the operation's parent resource. */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** The name of the operation's parent resource.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /** The name of the operation's parent resource. */
                public List setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                /** The standard list filter. */
                @com.google.api.client.util.Key
                private java.lang.String filter;

                /** The standard list filter.
                 */
                public java.lang.String getFilter() {
                  return filter;
                }

                /** The standard list filter. */
                public List setFilter(java.lang.String filter) {
                  this.filter = filter;
                  return this;
                }

                /** The standard list page size. */
                @com.google.api.client.util.Key
                private java.lang.Integer pageSize;

                /** The standard list page size.
                 */
                public java.lang.Integer getPageSize() {
                  return pageSize;
                }

                /** The standard list page size. */
                public List setPageSize(java.lang.Integer pageSize) {
                  this.pageSize = pageSize;
                  return this;
                }

                /** The standard list page token. */
                @com.google.api.client.util.Key
                private java.lang.String pageToken;

                /** The standard list page token.
                 */
                public java.lang.String getPageToken() {
                  return pageToken;
                }

                /** The standard list page token. */
                public List setPageToken(java.lang.String pageToken) {
                  this.pageToken = pageToken;
                  return this;
                }

                @Override
                public List set(String parameterName, Object value) {
                  return (List) super.set(parameterName, value);
                }
              }

            }
          }
          /**
           * An accessor for creating requests from the Conversations collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
           *   {@code DiscoveryEngine.Conversations.List request = discoveryengine.conversations().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Conversations conversations() {
            return new Conversations();
          }

          /**
           * The "conversations" collection of methods.
           */
          public class Conversations {

            /**
             * Converses a conversation.
             *
             * Create a request for the method "conversations.converse".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Converse#execute()} method to invoke the remote operation.
             *
             * @param name Required. The resource name of the Conversation to get. Format: `projects/{project_number}/locations
             *        /{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversa
             *        tion_id}`. Use `projects/{project_number}/locations/{location_id}/collections/{collection}
             *        /dataStores/{data_store_id}/conversations/-` to activate auto session mode, which
             *        automatically creates a new conversation inside a ConverseConversation session.
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConverseConversationRequest}
             * @return the request
             */
            public Converse converse(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConverseConversationRequest content) throws java.io.IOException {
              Converse result = new Converse(name, content);
              initialize(result);
              return result;
            }

            public class Converse extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConverseConversationResponse> {

              private static final String REST_PATH = "v1alpha/{+name}:converse";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/conversations/[^/]+$");

              /**
               * Converses a conversation.
               *
               * Create a request for the method "conversations.converse".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Converse#execute()} method to invoke the remote operation.
               * <p> {@link
               * Converse#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The resource name of the Conversation to get. Format: `projects/{project_number}/locations
             *        /{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversa
             *        tion_id}`. Use `projects/{project_number}/locations/{location_id}/collections/{collection}
             *        /dataStores/{data_store_id}/conversations/-` to activate auto session mode, which
             *        automatically creates a new conversation inside a ConverseConversation session.
               * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConverseConversationRequest}
               * @since 1.13
               */
              protected Converse(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConverseConversationRequest content) {
                super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConverseConversationResponse.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/conversations/[^/]+$");
                }
              }

              @Override
              public Converse set$Xgafv(java.lang.String $Xgafv) {
                return (Converse) super.set$Xgafv($Xgafv);
              }

              @Override
              public Converse setAccessToken(java.lang.String accessToken) {
                return (Converse) super.setAccessToken(accessToken);
              }

              @Override
              public Converse setAlt(java.lang.String alt) {
                return (Converse) super.setAlt(alt);
              }

              @Override
              public Converse setCallback(java.lang.String callback) {
                return (Converse) super.setCallback(callback);
              }

              @Override
              public Converse setFields(java.lang.String fields) {
                return (Converse) super.setFields(fields);
              }

              @Override
              public Converse setKey(java.lang.String key) {
                return (Converse) super.setKey(key);
              }

              @Override
              public Converse setOauthToken(java.lang.String oauthToken) {
                return (Converse) super.setOauthToken(oauthToken);
              }

              @Override
              public Converse setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Converse) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Converse setQuotaUser(java.lang.String quotaUser) {
                return (Converse) super.setQuotaUser(quotaUser);
              }

              @Override
              public Converse setUploadType(java.lang.String uploadType) {
                return (Converse) super.setUploadType(uploadType);
              }

              @Override
              public Converse setUploadProtocol(java.lang.String uploadProtocol) {
                return (Converse) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The resource name of the Conversation to get. Format: `projects/{project_
               * number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}
               * /conversations/{conversation_id}`. Use `projects/{project_number}/locations/{locati
               * on_id}/collections/{collection}/dataStores/{data_store_id}/conversations/-` to
               * activate auto session mode, which automatically creates a new conversation inside a
               * ConverseConversation session.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The resource name of the Conversation to get. Format: `projects/{project_number}/location
             s/{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}
             `. Use `projects/{project_number}/locations/{location_id}/collections/{collection}/dataStores/{data
             _store_id}/conversations/-` to activate auto session mode, which automatically creates a new
             conversation inside a ConverseConversation session.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The resource name of the Conversation to get. Format: `projects/{project_
               * number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}
               * /conversations/{conversation_id}`. Use `projects/{project_number}/locations/{locati
               * on_id}/collections/{collection}/dataStores/{data_store_id}/conversations/-` to
               * activate auto session mode, which automatically creates a new conversation inside a
               * ConverseConversation session.
               */
              public Converse setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/conversations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Converse set(String parameterName, Object value) {
                return (Converse) super.set(parameterName, value);
              }
            }
            /**
             * Creates a Conversation. If the Conversation to create already exists, an ALREADY_EXISTS error is
             * returned.
             *
             * Create a request for the method "conversations.create".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             *
             * @param parent Required. Full resource name of parent data store. Format: `projects/{project_number}/locations/{loc
             *        ation_id}/collections/{collection}/dataStores/{data_store_id}`
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConversation}
             * @return the request
             */
            public Create create(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConversation content) throws java.io.IOException {
              Create result = new Create(parent, content);
              initialize(result);
              return result;
            }

            public class Create extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConversation> {

              private static final String REST_PATH = "v1alpha/{+parent}/conversations";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");

              /**
               * Creates a Conversation. If the Conversation to create already exists, an ALREADY_EXISTS error
               * is returned.
               *
               * Create a request for the method "conversations.create".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
               * <p> {@link
               * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. Full resource name of parent data store. Format: `projects/{project_number}/locations/{loc
             *        ation_id}/collections/{collection}/dataStores/{data_store_id}`
               * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConversation}
               * @since 1.13
               */
              protected Create(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConversation content) {
                super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConversation.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");
                }
              }

              @Override
              public Create set$Xgafv(java.lang.String $Xgafv) {
                return (Create) super.set$Xgafv($Xgafv);
              }

              @Override
              public Create setAccessToken(java.lang.String accessToken) {
                return (Create) super.setAccessToken(accessToken);
              }

              @Override
              public Create setAlt(java.lang.String alt) {
                return (Create) super.setAlt(alt);
              }

              @Override
              public Create setCallback(java.lang.String callback) {
                return (Create) super.setCallback(callback);
              }

              @Override
              public Create setFields(java.lang.String fields) {
                return (Create) super.setFields(fields);
              }

              @Override
              public Create setKey(java.lang.String key) {
                return (Create) super.setKey(key);
              }

              @Override
              public Create setOauthToken(java.lang.String oauthToken) {
                return (Create) super.setOauthToken(oauthToken);
              }

              @Override
              public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Create) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Create setQuotaUser(java.lang.String quotaUser) {
                return (Create) super.setQuotaUser(quotaUser);
              }

              @Override
              public Create setUploadType(java.lang.String uploadType) {
                return (Create) super.setUploadType(uploadType);
              }

              @Override
              public Create setUploadProtocol(java.lang.String uploadProtocol) {
                return (Create) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. Full resource name of parent data store. Format: `projects/{project_numbe
               * r}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}`
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. Full resource name of parent data store. Format: `projects/{project_number}/locations/{lo
             cation_id}/collections/{collection}/dataStores/{data_store_id}`
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. Full resource name of parent data store. Format: `projects/{project_numbe
               * r}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}`
               */
              public Create setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public Create set(String parameterName, Object value) {
                return (Create) super.set(parameterName, value);
              }
            }
            /**
             * Deletes a Conversation. If the Conversation to delete does not exist, a NOT_FOUND error is
             * returned.
             *
             * Create a request for the method "conversations.delete".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param name Required. The resource name of the Conversation to delete. Format: `projects/{project_number}/locati
             *        ons/{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/{conve
             *        rsation_id}`
             * @return the request
             */
            public Delete delete(java.lang.String name) throws java.io.IOException {
              Delete result = new Delete(name);
              initialize(result);
              return result;
            }

            public class Delete extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleProtobufEmpty> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/conversations/[^/]+$");

              /**
               * Deletes a Conversation. If the Conversation to delete does not exist, a NOT_FOUND error is
               * returned.
               *
               * Create a request for the method "conversations.delete".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               * <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The resource name of the Conversation to delete. Format: `projects/{project_number}/locati
             *        ons/{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/{conve
             *        rsation_id}`
               * @since 1.13
               */
              protected Delete(java.lang.String name) {
                super(DiscoveryEngine.this, "DELETE", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleProtobufEmpty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/conversations/[^/]+$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The resource name of the Conversation to delete. Format: `projects/{proje
               * ct_number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_
               * id}/conversations/{conversation_id}`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The resource name of the Conversation to delete. Format: `projects/{project_number}/locat
             ions/{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_
             id}`
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The resource name of the Conversation to delete. Format: `projects/{proje
               * ct_number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_
               * id}/conversations/{conversation_id}`
               */
              public Delete setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/conversations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * Gets a Conversation.
             *
             * Create a request for the method "conversations.get".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name Required. The resource name of the Conversation to get. Format: `projects/{project_number}/locations
             *        /{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversa
             *        tion_id}`
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConversation> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/conversations/[^/]+$");

              /**
               * Gets a Conversation.
               *
               * Create a request for the method "conversations.get".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The resource name of the Conversation to get. Format: `projects/{project_number}/locations
             *        /{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversa
             *        tion_id}`
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConversation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/conversations/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The resource name of the Conversation to get. Format: `projects/{project_
               * number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}
               * /conversations/{conversation_id}`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The resource name of the Conversation to get. Format: `projects/{project_number}/location
             s/{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}
             `
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The resource name of the Conversation to get. Format: `projects/{project_
               * number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}
               * /conversations/{conversation_id}`
               */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/conversations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Lists all Conversations by their parent DataStore.
             *
             * Create a request for the method "conversations.list".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The data store resource name. Format: `projects/{project_number}/locations/{location_id}/c
             *        ollections/{collection}/dataStores/{data_store_id}`
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaListConversationsResponse> {

              private static final String REST_PATH = "v1alpha/{+parent}/conversations";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");

              /**
               * Lists all Conversations by their parent DataStore.
               *
               * Create a request for the method "conversations.list".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The data store resource name. Format: `projects/{project_number}/locations/{location_id}/c
             *        ollections/{collection}/dataStores/{data_store_id}`
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaListConversationsResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The data store resource name. Format: `projects/{project_number}/location
               * s/{location_id}/collections/{collection}/dataStores/{data_store_id}`
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The data store resource name. Format: `projects/{project_number}/locations/{location_id}/
             collections/{collection}/dataStores/{data_store_id}`
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The data store resource name. Format: `projects/{project_number}/location
               * s/{location_id}/collections/{collection}/dataStores/{data_store_id}`
               */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * A filter to apply on the list results. The supported features are: user_pseudo_id,
               * state. Example: "user_pseudo_id = some_id"
               */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** A filter to apply on the list results. The supported features are: user_pseudo_id, state. Example:
             "user_pseudo_id = some_id"
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /**
               * A filter to apply on the list results. The supported features are: user_pseudo_id,
               * state. Example: "user_pseudo_id = some_id"
               */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /**
               * A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
               * after a field name for descending. Supported fields: * `update_time` *
               * `create_time` * `conversation_name` Example: "update_time desc" "create_time"
               */
              @com.google.api.client.util.Key
              private java.lang.String orderBy;

              /** A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field
             name for descending. Supported fields: * `update_time` * `create_time` * `conversation_name`
             Example: "update_time desc" "create_time"
               */
              public java.lang.String getOrderBy() {
                return orderBy;
              }

              /**
               * A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
               * after a field name for descending. Supported fields: * `update_time` *
               * `create_time` * `conversation_name` Example: "update_time desc" "create_time"
               */
              public List setOrderBy(java.lang.String orderBy) {
                this.orderBy = orderBy;
                return this;
              }

              /**
               * Maximum number of results to return. If unspecified, defaults to 50. Max allowed
               * value is 1000.
               */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** Maximum number of results to return. If unspecified, defaults to 50. Max allowed value is 1000.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /**
               * Maximum number of results to return. If unspecified, defaults to 50. Max allowed
               * value is 1000.
               */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /**
               * A page token, received from a previous `ListConversations` call. Provide this to
               * retrieve the subsequent page.
               */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** A page token, received from a previous `ListConversations` call. Provide this to retrieve the
             subsequent page.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /**
               * A page token, received from a previous `ListConversations` call. Provide this to
               * retrieve the subsequent page.
               */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }
            /**
             * Updates a Conversation. Conversation action type cannot be changed. If the Conversation to update
             * does not exist, a NOT_FOUND error is returned.
             *
             * Create a request for the method "conversations.patch".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             *
             * @param name Immutable. Fully qualified name
             *        `project/locations/global/collections/{collection}/dataStore/conversations` or
             *        `project/locations/global/collections/{collection}/engines/conversations`.
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConversation}
             * @return the request
             */
            public Patch patch(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConversation content) throws java.io.IOException {
              Patch result = new Patch(name, content);
              initialize(result);
              return result;
            }

            public class Patch extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConversation> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/conversations/[^/]+$");

              /**
               * Updates a Conversation. Conversation action type cannot be changed. If the Conversation to
               * update does not exist, a NOT_FOUND error is returned.
               *
               * Create a request for the method "conversations.patch".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
               * <p> {@link
               * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Immutable. Fully qualified name
             *        `project/locations/global/collections/{collection}/dataStore/conversations` or
             *        `project/locations/global/collections/{collection}/engines/conversations`.
               * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConversation}
               * @since 1.13
               */
              protected Patch(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConversation content) {
                super(DiscoveryEngine.this, "PATCH", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConversation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/conversations/[^/]+$");
                }
              }

              @Override
              public Patch set$Xgafv(java.lang.String $Xgafv) {
                return (Patch) super.set$Xgafv($Xgafv);
              }

              @Override
              public Patch setAccessToken(java.lang.String accessToken) {
                return (Patch) super.setAccessToken(accessToken);
              }

              @Override
              public Patch setAlt(java.lang.String alt) {
                return (Patch) super.setAlt(alt);
              }

              @Override
              public Patch setCallback(java.lang.String callback) {
                return (Patch) super.setCallback(callback);
              }

              @Override
              public Patch setFields(java.lang.String fields) {
                return (Patch) super.setFields(fields);
              }

              @Override
              public Patch setKey(java.lang.String key) {
                return (Patch) super.setKey(key);
              }

              @Override
              public Patch setOauthToken(java.lang.String oauthToken) {
                return (Patch) super.setOauthToken(oauthToken);
              }

              @Override
              public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Patch) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Patch setQuotaUser(java.lang.String quotaUser) {
                return (Patch) super.setQuotaUser(quotaUser);
              }

              @Override
              public Patch setUploadType(java.lang.String uploadType) {
                return (Patch) super.setUploadType(uploadType);
              }

              @Override
              public Patch setUploadProtocol(java.lang.String uploadProtocol) {
                return (Patch) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Immutable. Fully qualified name
               * `project/locations/global/collections/{collection}/dataStore/conversations` or
               * `project/locations/global/collections/{collection}/engines/conversations`.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Immutable. Fully qualified name
             `project/locations/global/collections/{collection}/dataStore/conversations` or
             `project/locations/global/collections/{collection}/engines/conversations`.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Immutable. Fully qualified name
               * `project/locations/global/collections/{collection}/dataStore/conversations` or
               * `project/locations/global/collections/{collection}/engines/conversations`.
               */
              public Patch setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/conversations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * Indicates which fields in the provided Conversation to update. The following are
               * NOT supported: * Conversation.name If not set or empty, all supported fields are
               * updated.
               */
              @com.google.api.client.util.Key
              private String updateMask;

              /** Indicates which fields in the provided Conversation to update. The following are NOT supported: *
             Conversation.name If not set or empty, all supported fields are updated.
               */
              public String getUpdateMask() {
                return updateMask;
              }

              /**
               * Indicates which fields in the provided Conversation to update. The following are
               * NOT supported: * Conversation.name If not set or empty, all supported fields are
               * updated.
               */
              public Patch setUpdateMask(String updateMask) {
                this.updateMask = updateMask;
                return this;
              }

              @Override
              public Patch set(String parameterName, Object value) {
                return (Patch) super.set(parameterName, value);
              }
            }

          }
          /**
           * An accessor for creating requests from the Models collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
           *   {@code DiscoveryEngine.Models.List request = discoveryengine.models().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Models models() {
            return new Models();
          }

          /**
           * The "models" collection of methods.
           */
          public class Models {

            /**
             * An accessor for creating requests from the Operations collection.
             *
             * <p>The typical use is:</p>
             * <pre>
             *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
             *   {@code DiscoveryEngine.Operations.List request = discoveryengine.operations().list(parameters ...)}
             * </pre>
             *
             * @return the resource collection
             */
            public Operations operations() {
              return new Operations();
            }

            /**
             * The "operations" collection of methods.
             */
            public class Operations {

              /**
               * Gets the latest state of a long-running operation. Clients can use this method to poll the
               * operation result at intervals as recommended by the API service.
               *
               * Create a request for the method "operations.get".
               *
               * This request holds the parameters needed by the discoveryengine server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
               *
               * @param name The name of the operation resource.
               * @return the request
               */
              public Get get(java.lang.String name) throws java.io.IOException {
                Get result = new Get(name);
                initialize(result);
                return result;
              }

              public class Get extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

                private static final String REST_PATH = "v1alpha/{+name}";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/models/[^/]+/operations/[^/]+$");

                /**
                 * Gets the latest state of a long-running operation. Clients can use this method to poll the
                 * operation result at intervals as recommended by the API service.
                 *
                 * Create a request for the method "operations.get".
                 *
                 * This request holds the parameters needed by the the discoveryengine server.  After setting any
                 * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
                 * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name The name of the operation resource.
                 * @since 1.13
                 */
                protected Get(java.lang.String name) {
                  super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/models/[^/]+/operations/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public Get set$Xgafv(java.lang.String $Xgafv) {
                  return (Get) super.set$Xgafv($Xgafv);
                }

                @Override
                public Get setAccessToken(java.lang.String accessToken) {
                  return (Get) super.setAccessToken(accessToken);
                }

                @Override
                public Get setAlt(java.lang.String alt) {
                  return (Get) super.setAlt(alt);
                }

                @Override
                public Get setCallback(java.lang.String callback) {
                  return (Get) super.setCallback(callback);
                }

                @Override
                public Get setFields(java.lang.String fields) {
                  return (Get) super.setFields(fields);
                }

                @Override
                public Get setKey(java.lang.String key) {
                  return (Get) super.setKey(key);
                }

                @Override
                public Get setOauthToken(java.lang.String oauthToken) {
                  return (Get) super.setOauthToken(oauthToken);
                }

                @Override
                public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Get) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Get setQuotaUser(java.lang.String quotaUser) {
                  return (Get) super.setQuotaUser(quotaUser);
                }

                @Override
                public Get setUploadType(java.lang.String uploadType) {
                  return (Get) super.setUploadType(uploadType);
                }

                @Override
                public Get setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Get) super.setUploadProtocol(uploadProtocol);
                }

                /** The name of the operation resource. */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** The name of the operation resource.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /** The name of the operation resource. */
                public Get setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/models/[^/]+/operations/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                @Override
                public Get set(String parameterName, Object value) {
                  return (Get) super.set(parameterName, value);
                }
              }
              /**
               * Lists operations that match the specified filter in the request. If the server doesn't support
               * this method, it returns `UNIMPLEMENTED`.
               *
               * Create a request for the method "operations.list".
               *
               * This request holds the parameters needed by the discoveryengine server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
               *
               * @param name The name of the operation's parent resource.
               * @return the request
               */
              public List list(java.lang.String name) throws java.io.IOException {
                List result = new List(name);
                initialize(result);
                return result;
              }

              public class List extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningListOperationsResponse> {

                private static final String REST_PATH = "v1alpha/{+name}/operations";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/models/[^/]+$");

                /**
                 * Lists operations that match the specified filter in the request. If the server doesn't support
                 * this method, it returns `UNIMPLEMENTED`.
                 *
                 * Create a request for the method "operations.list".
                 *
                 * This request holds the parameters needed by the the discoveryengine server.  After setting any
                 * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
                 * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name The name of the operation's parent resource.
                 * @since 1.13
                 */
                protected List(java.lang.String name) {
                  super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningListOperationsResponse.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/models/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public List set$Xgafv(java.lang.String $Xgafv) {
                  return (List) super.set$Xgafv($Xgafv);
                }

                @Override
                public List setAccessToken(java.lang.String accessToken) {
                  return (List) super.setAccessToken(accessToken);
                }

                @Override
                public List setAlt(java.lang.String alt) {
                  return (List) super.setAlt(alt);
                }

                @Override
                public List setCallback(java.lang.String callback) {
                  return (List) super.setCallback(callback);
                }

                @Override
                public List setFields(java.lang.String fields) {
                  return (List) super.setFields(fields);
                }

                @Override
                public List setKey(java.lang.String key) {
                  return (List) super.setKey(key);
                }

                @Override
                public List setOauthToken(java.lang.String oauthToken) {
                  return (List) super.setOauthToken(oauthToken);
                }

                @Override
                public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (List) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public List setQuotaUser(java.lang.String quotaUser) {
                  return (List) super.setQuotaUser(quotaUser);
                }

                @Override
                public List setUploadType(java.lang.String uploadType) {
                  return (List) super.setUploadType(uploadType);
                }

                @Override
                public List setUploadProtocol(java.lang.String uploadProtocol) {
                  return (List) super.setUploadProtocol(uploadProtocol);
                }

                /** The name of the operation's parent resource. */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** The name of the operation's parent resource.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /** The name of the operation's parent resource. */
                public List setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/models/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                /** The standard list filter. */
                @com.google.api.client.util.Key
                private java.lang.String filter;

                /** The standard list filter.
                 */
                public java.lang.String getFilter() {
                  return filter;
                }

                /** The standard list filter. */
                public List setFilter(java.lang.String filter) {
                  this.filter = filter;
                  return this;
                }

                /** The standard list page size. */
                @com.google.api.client.util.Key
                private java.lang.Integer pageSize;

                /** The standard list page size.
                 */
                public java.lang.Integer getPageSize() {
                  return pageSize;
                }

                /** The standard list page size. */
                public List setPageSize(java.lang.Integer pageSize) {
                  this.pageSize = pageSize;
                  return this;
                }

                /** The standard list page token. */
                @com.google.api.client.util.Key
                private java.lang.String pageToken;

                /** The standard list page token.
                 */
                public java.lang.String getPageToken() {
                  return pageToken;
                }

                /** The standard list page token. */
                public List setPageToken(java.lang.String pageToken) {
                  this.pageToken = pageToken;
                  return this;
                }

                @Override
                public List set(String parameterName, Object value) {
                  return (List) super.set(parameterName, value);
                }
              }

            }
          }
          /**
           * An accessor for creating requests from the Operations collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
           *   {@code DiscoveryEngine.Operations.List request = discoveryengine.operations().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Operations operations() {
            return new Operations();
          }

          /**
           * The "operations" collection of methods.
           */
          public class Operations {

            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource.
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/operations/[^/]+$");

              /**
               * Gets the latest state of a long-running operation. Clients can use this method to poll the
               * operation result at intervals as recommended by the API service.
               *
               * Create a request for the method "operations.get".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource.
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource. */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.list".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation's parent resource.
             * @return the request
             */
            public List list(java.lang.String name) throws java.io.IOException {
              List result = new List(name);
              initialize(result);
              return result;
            }

            public class List extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningListOperationsResponse> {

              private static final String REST_PATH = "v1alpha/{+name}/operations";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");

              /**
               * Lists operations that match the specified filter in the request. If the server doesn't support
               * this method, it returns `UNIMPLEMENTED`.
               *
               * Create a request for the method "operations.list".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation's parent resource.
               * @since 1.13
               */
              protected List(java.lang.String name) {
                super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningListOperationsResponse.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation's parent resource. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation's parent resource.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation's parent resource. */
              public List setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /** The standard list filter. */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** The standard list filter.
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /** The standard list filter. */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /** The standard list page size. */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** The standard list page size.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /** The standard list page size. */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /** The standard list page token. */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** The standard list page token.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /** The standard list page token. */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }

          }
          /**
           * An accessor for creating requests from the Schemas collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
           *   {@code DiscoveryEngine.Schemas.List request = discoveryengine.schemas().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Schemas schemas() {
            return new Schemas();
          }

          /**
           * The "schemas" collection of methods.
           */
          public class Schemas {

            /**
             * Creates a Schema.
             *
             * Create a request for the method "schemas.create".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The parent data store resource name, in the format of
             *        `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`
             *        .
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSchema}
             * @return the request
             */
            public Create create(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSchema content) throws java.io.IOException {
              Create result = new Create(parent, content);
              initialize(result);
              return result;
            }

            public class Create extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1alpha/{+parent}/schemas";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");

              /**
               * Creates a Schema.
               *
               * Create a request for the method "schemas.create".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
               * <p> {@link
               * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The parent data store resource name, in the format of
             *        `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`
             *        .
               * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSchema}
               * @since 1.13
               */
              protected Create(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSchema content) {
                super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");
                }
              }

              @Override
              public Create set$Xgafv(java.lang.String $Xgafv) {
                return (Create) super.set$Xgafv($Xgafv);
              }

              @Override
              public Create setAccessToken(java.lang.String accessToken) {
                return (Create) super.setAccessToken(accessToken);
              }

              @Override
              public Create setAlt(java.lang.String alt) {
                return (Create) super.setAlt(alt);
              }

              @Override
              public Create setCallback(java.lang.String callback) {
                return (Create) super.setCallback(callback);
              }

              @Override
              public Create setFields(java.lang.String fields) {
                return (Create) super.setFields(fields);
              }

              @Override
              public Create setKey(java.lang.String key) {
                return (Create) super.setKey(key);
              }

              @Override
              public Create setOauthToken(java.lang.String oauthToken) {
                return (Create) super.setOauthToken(oauthToken);
              }

              @Override
              public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Create) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Create setQuotaUser(java.lang.String quotaUser) {
                return (Create) super.setQuotaUser(quotaUser);
              }

              @Override
              public Create setUploadType(java.lang.String uploadType) {
                return (Create) super.setUploadType(uploadType);
              }

              @Override
              public Create setUploadProtocol(java.lang.String uploadProtocol) {
                return (Create) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The parent data store resource name, in the format of `projects/{project}
               * /locations/{location}/collections/{collection}/dataStores/{data_store}`.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The parent data store resource name, in the format of
             `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The parent data store resource name, in the format of `projects/{project}
               * /locations/{location}/collections/{collection}/dataStores/{data_store}`.
               */
              public Create setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Required. The ID to use for the Schema, which will become the final component of
               * the Schema.name. This field should conform to
               * [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63
               * characters.
               */
              @com.google.api.client.util.Key
              private java.lang.String schemaId;

              /** Required. The ID to use for the Schema, which will become the final component of the Schema.name.
             This field should conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length
             limit of 63 characters.
               */
              public java.lang.String getSchemaId() {
                return schemaId;
              }

              /**
               * Required. The ID to use for the Schema, which will become the final component of
               * the Schema.name. This field should conform to
               * [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63
               * characters.
               */
              public Create setSchemaId(java.lang.String schemaId) {
                this.schemaId = schemaId;
                return this;
              }

              @Override
              public Create set(String parameterName, Object value) {
                return (Create) super.set(parameterName, value);
              }
            }
            /**
             * Deletes a Schema.
             *
             * Create a request for the method "schemas.delete".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param name Required. The full resource name of the schema, in the format of `projects/{project}/locations/{loca
             *        tion}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
             * @return the request
             */
            public Delete delete(java.lang.String name) throws java.io.IOException {
              Delete result = new Delete(name);
              initialize(result);
              return result;
            }

            public class Delete extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/schemas/[^/]+$");

              /**
               * Deletes a Schema.
               *
               * Create a request for the method "schemas.delete".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               * <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The full resource name of the schema, in the format of `projects/{project}/locations/{loca
             *        tion}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
               * @since 1.13
               */
              protected Delete(java.lang.String name) {
                super(DiscoveryEngine.this, "DELETE", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/schemas/[^/]+$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The full resource name of the schema, in the format of `projects/{project
               * }/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{sc
               * hema}`.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The full resource name of the schema, in the format of `projects/{project}/locations/{loc
             ation}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The full resource name of the schema, in the format of `projects/{project
               * }/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{sc
               * hema}`.
               */
              public Delete setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/schemas/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * Gets a Schema.
             *
             * Create a request for the method "schemas.get".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name Required. The full resource name of the schema, in the format of `projects/{project}/locations/{loca
             *        tion}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSchema> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/schemas/[^/]+$");

              /**
               * Gets a Schema.
               *
               * Create a request for the method "schemas.get".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The full resource name of the schema, in the format of `projects/{project}/locations/{loca
             *        tion}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSchema.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/schemas/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The full resource name of the schema, in the format of `projects/{project
               * }/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{sc
               * hema}`.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The full resource name of the schema, in the format of `projects/{project}/locations/{loc
             ation}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The full resource name of the schema, in the format of `projects/{project
               * }/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{sc
               * hema}`.
               */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/schemas/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Gets a list of Schemas.
             *
             * Create a request for the method "schemas.list".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The parent data store resource name, in the format of
             *        `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`
             *        .
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaListSchemasResponse> {

              private static final String REST_PATH = "v1alpha/{+parent}/schemas";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");

              /**
               * Gets a list of Schemas.
               *
               * Create a request for the method "schemas.list".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The parent data store resource name, in the format of
             *        `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`
             *        .
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaListSchemasResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The parent data store resource name, in the format of `projects/{project}
               * /locations/{location}/collections/{collection}/dataStores/{data_store}`.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The parent data store resource name, in the format of
             `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The parent data store resource name, in the format of `projects/{project}
               * /locations/{location}/collections/{collection}/dataStores/{data_store}`.
               */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * The maximum number of Schemas to return. The service may return fewer than this
               * value. If unspecified, at most 100 Schemas will be returned. The maximum value is
               * 1000; values above 1000 will be coerced to 1000.
               */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** The maximum number of Schemas to return. The service may return fewer than this value. If
             unspecified, at most 100 Schemas will be returned. The maximum value is 1000; values above 1000
             will be coerced to 1000.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /**
               * The maximum number of Schemas to return. The service may return fewer than this
               * value. If unspecified, at most 100 Schemas will be returned. The maximum value is
               * 1000; values above 1000 will be coerced to 1000.
               */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /**
               * A page token, received from a previous SchemaService.ListSchemas call. Provide this
               * to retrieve the subsequent page. When paginating, all other parameters provided to
               * SchemaService.ListSchemas must match the call that provided the page token.
               */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** A page token, received from a previous SchemaService.ListSchemas call. Provide this to retrieve the
             subsequent page. When paginating, all other parameters provided to SchemaService.ListSchemas must
             match the call that provided the page token.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /**
               * A page token, received from a previous SchemaService.ListSchemas call. Provide this
               * to retrieve the subsequent page. When paginating, all other parameters provided to
               * SchemaService.ListSchemas must match the call that provided the page token.
               */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }
            /**
             * Updates a Schema.
             *
             * Create a request for the method "schemas.patch".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             *
             * @param name Immutable. The full resource name of the schema, in the format of `projects/{project}/locations/{loc
             *        ation}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`. This field must
             *        be a UTF-8 encoded string with a length limit of 1024 characters.
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSchema}
             * @return the request
             */
            public Patch patch(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSchema content) throws java.io.IOException {
              Patch result = new Patch(name, content);
              initialize(result);
              return result;
            }

            public class Patch extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/schemas/[^/]+$");

              /**
               * Updates a Schema.
               *
               * Create a request for the method "schemas.patch".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
               * <p> {@link
               * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Immutable. The full resource name of the schema, in the format of `projects/{project}/locations/{loc
             *        ation}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`. This field must
             *        be a UTF-8 encoded string with a length limit of 1024 characters.
               * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSchema}
               * @since 1.13
               */
              protected Patch(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSchema content) {
                super(DiscoveryEngine.this, "PATCH", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/schemas/[^/]+$");
                }
              }

              @Override
              public Patch set$Xgafv(java.lang.String $Xgafv) {
                return (Patch) super.set$Xgafv($Xgafv);
              }

              @Override
              public Patch setAccessToken(java.lang.String accessToken) {
                return (Patch) super.setAccessToken(accessToken);
              }

              @Override
              public Patch setAlt(java.lang.String alt) {
                return (Patch) super.setAlt(alt);
              }

              @Override
              public Patch setCallback(java.lang.String callback) {
                return (Patch) super.setCallback(callback);
              }

              @Override
              public Patch setFields(java.lang.String fields) {
                return (Patch) super.setFields(fields);
              }

              @Override
              public Patch setKey(java.lang.String key) {
                return (Patch) super.setKey(key);
              }

              @Override
              public Patch setOauthToken(java.lang.String oauthToken) {
                return (Patch) super.setOauthToken(oauthToken);
              }

              @Override
              public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Patch) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Patch setQuotaUser(java.lang.String quotaUser) {
                return (Patch) super.setQuotaUser(quotaUser);
              }

              @Override
              public Patch setUploadType(java.lang.String uploadType) {
                return (Patch) super.setUploadType(uploadType);
              }

              @Override
              public Patch setUploadProtocol(java.lang.String uploadProtocol) {
                return (Patch) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Immutable. The full resource name of the schema, in the format of `projects/{projec
               * t}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{s
               * chema}`. This field must be a UTF-8 encoded string with a length limit of 1024
               * characters.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Immutable. The full resource name of the schema, in the format of `projects/{project}/locations/{lo
             cation}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`. This field must be a
             UTF-8 encoded string with a length limit of 1024 characters.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Immutable. The full resource name of the schema, in the format of `projects/{projec
               * t}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{s
               * chema}`. This field must be a UTF-8 encoded string with a length limit of 1024
               * characters.
               */
              public Patch setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/schemas/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * If set to true, and the Schema is not found, a new Schema will be created. In this
               * situation, `update_mask` is ignored.
               */
              @com.google.api.client.util.Key
              private java.lang.Boolean allowMissing;

              /** If set to true, and the Schema is not found, a new Schema will be created. In this situation,
             `update_mask` is ignored.
               */
              public java.lang.Boolean getAllowMissing() {
                return allowMissing;
              }

              /**
               * If set to true, and the Schema is not found, a new Schema will be created. In this
               * situation, `update_mask` is ignored.
               */
              public Patch setAllowMissing(java.lang.Boolean allowMissing) {
                this.allowMissing = allowMissing;
                return this;
              }

              @Override
              public Patch set(String parameterName, Object value) {
                return (Patch) super.set(parameterName, value);
              }
            }

            /**
             * An accessor for creating requests from the Operations collection.
             *
             * <p>The typical use is:</p>
             * <pre>
             *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
             *   {@code DiscoveryEngine.Operations.List request = discoveryengine.operations().list(parameters ...)}
             * </pre>
             *
             * @return the resource collection
             */
            public Operations operations() {
              return new Operations();
            }

            /**
             * The "operations" collection of methods.
             */
            public class Operations {

              /**
               * Gets the latest state of a long-running operation. Clients can use this method to poll the
               * operation result at intervals as recommended by the API service.
               *
               * Create a request for the method "operations.get".
               *
               * This request holds the parameters needed by the discoveryengine server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
               *
               * @param name The name of the operation resource.
               * @return the request
               */
              public Get get(java.lang.String name) throws java.io.IOException {
                Get result = new Get(name);
                initialize(result);
                return result;
              }

              public class Get extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

                private static final String REST_PATH = "v1alpha/{+name}";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/schemas/[^/]+/operations/[^/]+$");

                /**
                 * Gets the latest state of a long-running operation. Clients can use this method to poll the
                 * operation result at intervals as recommended by the API service.
                 *
                 * Create a request for the method "operations.get".
                 *
                 * This request holds the parameters needed by the the discoveryengine server.  After setting any
                 * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
                 * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name The name of the operation resource.
                 * @since 1.13
                 */
                protected Get(java.lang.String name) {
                  super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/schemas/[^/]+/operations/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public Get set$Xgafv(java.lang.String $Xgafv) {
                  return (Get) super.set$Xgafv($Xgafv);
                }

                @Override
                public Get setAccessToken(java.lang.String accessToken) {
                  return (Get) super.setAccessToken(accessToken);
                }

                @Override
                public Get setAlt(java.lang.String alt) {
                  return (Get) super.setAlt(alt);
                }

                @Override
                public Get setCallback(java.lang.String callback) {
                  return (Get) super.setCallback(callback);
                }

                @Override
                public Get setFields(java.lang.String fields) {
                  return (Get) super.setFields(fields);
                }

                @Override
                public Get setKey(java.lang.String key) {
                  return (Get) super.setKey(key);
                }

                @Override
                public Get setOauthToken(java.lang.String oauthToken) {
                  return (Get) super.setOauthToken(oauthToken);
                }

                @Override
                public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Get) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Get setQuotaUser(java.lang.String quotaUser) {
                  return (Get) super.setQuotaUser(quotaUser);
                }

                @Override
                public Get setUploadType(java.lang.String uploadType) {
                  return (Get) super.setUploadType(uploadType);
                }

                @Override
                public Get setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Get) super.setUploadProtocol(uploadProtocol);
                }

                /** The name of the operation resource. */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** The name of the operation resource.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /** The name of the operation resource. */
                public Get setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/schemas/[^/]+/operations/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                @Override
                public Get set(String parameterName, Object value) {
                  return (Get) super.set(parameterName, value);
                }
              }
              /**
               * Lists operations that match the specified filter in the request. If the server doesn't support
               * this method, it returns `UNIMPLEMENTED`.
               *
               * Create a request for the method "operations.list".
               *
               * This request holds the parameters needed by the discoveryengine server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
               *
               * @param name The name of the operation's parent resource.
               * @return the request
               */
              public List list(java.lang.String name) throws java.io.IOException {
                List result = new List(name);
                initialize(result);
                return result;
              }

              public class List extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningListOperationsResponse> {

                private static final String REST_PATH = "v1alpha/{+name}/operations";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/schemas/[^/]+$");

                /**
                 * Lists operations that match the specified filter in the request. If the server doesn't support
                 * this method, it returns `UNIMPLEMENTED`.
                 *
                 * Create a request for the method "operations.list".
                 *
                 * This request holds the parameters needed by the the discoveryengine server.  After setting any
                 * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
                 * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name The name of the operation's parent resource.
                 * @since 1.13
                 */
                protected List(java.lang.String name) {
                  super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningListOperationsResponse.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/schemas/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public List set$Xgafv(java.lang.String $Xgafv) {
                  return (List) super.set$Xgafv($Xgafv);
                }

                @Override
                public List setAccessToken(java.lang.String accessToken) {
                  return (List) super.setAccessToken(accessToken);
                }

                @Override
                public List setAlt(java.lang.String alt) {
                  return (List) super.setAlt(alt);
                }

                @Override
                public List setCallback(java.lang.String callback) {
                  return (List) super.setCallback(callback);
                }

                @Override
                public List setFields(java.lang.String fields) {
                  return (List) super.setFields(fields);
                }

                @Override
                public List setKey(java.lang.String key) {
                  return (List) super.setKey(key);
                }

                @Override
                public List setOauthToken(java.lang.String oauthToken) {
                  return (List) super.setOauthToken(oauthToken);
                }

                @Override
                public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (List) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public List setQuotaUser(java.lang.String quotaUser) {
                  return (List) super.setQuotaUser(quotaUser);
                }

                @Override
                public List setUploadType(java.lang.String uploadType) {
                  return (List) super.setUploadType(uploadType);
                }

                @Override
                public List setUploadProtocol(java.lang.String uploadProtocol) {
                  return (List) super.setUploadProtocol(uploadProtocol);
                }

                /** The name of the operation's parent resource. */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** The name of the operation's parent resource.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /** The name of the operation's parent resource. */
                public List setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/schemas/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                /** The standard list filter. */
                @com.google.api.client.util.Key
                private java.lang.String filter;

                /** The standard list filter.
                 */
                public java.lang.String getFilter() {
                  return filter;
                }

                /** The standard list filter. */
                public List setFilter(java.lang.String filter) {
                  this.filter = filter;
                  return this;
                }

                /** The standard list page size. */
                @com.google.api.client.util.Key
                private java.lang.Integer pageSize;

                /** The standard list page size.
                 */
                public java.lang.Integer getPageSize() {
                  return pageSize;
                }

                /** The standard list page size. */
                public List setPageSize(java.lang.Integer pageSize) {
                  this.pageSize = pageSize;
                  return this;
                }

                /** The standard list page token. */
                @com.google.api.client.util.Key
                private java.lang.String pageToken;

                /** The standard list page token.
                 */
                public java.lang.String getPageToken() {
                  return pageToken;
                }

                /** The standard list page token. */
                public List setPageToken(java.lang.String pageToken) {
                  this.pageToken = pageToken;
                  return this;
                }

                @Override
                public List set(String parameterName, Object value) {
                  return (List) super.set(parameterName, value);
                }
              }

            }
          }
          /**
           * An accessor for creating requests from the ServingConfigs collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
           *   {@code DiscoveryEngine.ServingConfigs.List request = discoveryengine.servingConfigs().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public ServingConfigs servingConfigs() {
            return new ServingConfigs();
          }

          /**
           * The "servingConfigs" collection of methods.
           */
          public class ServingConfigs {

            /**
             * Answer query method.
             *
             * Create a request for the method "servingConfigs.answer".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Answer#execute()} method to invoke the remote operation.
             *
             * @param servingConfig Required. The resource name of the Search serving config, such as `projects/locations/global/collect
             *        ions/default_collection/engines/servingConfigs/default_serving_config`, or `projects/locat
             *        ions/global/collections/default_collection/dataStores/servingConfigs/default_serving_confi
             *        g`. This field is used to identify the serving configuration name, set of models used to
             *        make the search.
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaAnswerQueryRequest}
             * @return the request
             */
            public Answer answer(java.lang.String servingConfig, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaAnswerQueryRequest content) throws java.io.IOException {
              Answer result = new Answer(servingConfig, content);
              initialize(result);
              return result;
            }

            public class Answer extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaAnswerQueryResponse> {

              private static final String REST_PATH = "v1alpha/{+servingConfig}:answer";

              private final java.util.regex.Pattern SERVING_CONFIG_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/servingConfigs/[^/]+$");

              /**
               * Answer query method.
               *
               * Create a request for the method "servingConfigs.answer".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Answer#execute()} method to invoke the remote operation.
               * <p> {@link
               * Answer#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param servingConfig Required. The resource name of the Search serving config, such as `projects/locations/global/collect
             *        ions/default_collection/engines/servingConfigs/default_serving_config`, or `projects/locat
             *        ions/global/collections/default_collection/dataStores/servingConfigs/default_serving_confi
             *        g`. This field is used to identify the serving configuration name, set of models used to
             *        make the search.
               * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaAnswerQueryRequest}
               * @since 1.13
               */
              protected Answer(java.lang.String servingConfig, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaAnswerQueryRequest content) {
                super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaAnswerQueryResponse.class);
                this.servingConfig = com.google.api.client.util.Preconditions.checkNotNull(servingConfig, "Required parameter servingConfig must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(SERVING_CONFIG_PATTERN.matcher(servingConfig).matches(),
                      "Parameter servingConfig must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/servingConfigs/[^/]+$");
                }
              }

              @Override
              public Answer set$Xgafv(java.lang.String $Xgafv) {
                return (Answer) super.set$Xgafv($Xgafv);
              }

              @Override
              public Answer setAccessToken(java.lang.String accessToken) {
                return (Answer) super.setAccessToken(accessToken);
              }

              @Override
              public Answer setAlt(java.lang.String alt) {
                return (Answer) super.setAlt(alt);
              }

              @Override
              public Answer setCallback(java.lang.String callback) {
                return (Answer) super.setCallback(callback);
              }

              @Override
              public Answer setFields(java.lang.String fields) {
                return (Answer) super.setFields(fields);
              }

              @Override
              public Answer setKey(java.lang.String key) {
                return (Answer) super.setKey(key);
              }

              @Override
              public Answer setOauthToken(java.lang.String oauthToken) {
                return (Answer) super.setOauthToken(oauthToken);
              }

              @Override
              public Answer setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Answer) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Answer setQuotaUser(java.lang.String quotaUser) {
                return (Answer) super.setQuotaUser(quotaUser);
              }

              @Override
              public Answer setUploadType(java.lang.String uploadType) {
                return (Answer) super.setUploadType(uploadType);
              }

              @Override
              public Answer setUploadProtocol(java.lang.String uploadProtocol) {
                return (Answer) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The resource name of the Search serving config, such as `projects/locatio
               * ns/global/collections/default_collection/engines/servingConfigs/default_serving_con
               * fig`, or `projects/locations/global/collections/default_collection/dataStores/servi
               * ngConfigs/default_serving_config`. This field is used to identify the serving
               * configuration name, set of models used to make the search.
               */
              @com.google.api.client.util.Key
              private java.lang.String servingConfig;

              /** Required. The resource name of the Search serving config, such as `projects/locations/global/collec
             tions/default_collection/engines/servingConfigs/default_serving_config`, or `projects/locations/glo
             bal/collections/default_collection/dataStores/servingConfigs/default_serving_config`. This field is
             used to identify the serving configuration name, set of models used to make the search.
               */
              public java.lang.String getServingConfig() {
                return servingConfig;
              }

              /**
               * Required. The resource name of the Search serving config, such as `projects/locatio
               * ns/global/collections/default_collection/engines/servingConfigs/default_serving_con
               * fig`, or `projects/locations/global/collections/default_collection/dataStores/servi
               * ngConfigs/default_serving_config`. This field is used to identify the serving
               * configuration name, set of models used to make the search.
               */
              public Answer setServingConfig(java.lang.String servingConfig) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(SERVING_CONFIG_PATTERN.matcher(servingConfig).matches(),
                      "Parameter servingConfig must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/servingConfigs/[^/]+$");
                }
                this.servingConfig = servingConfig;
                return this;
              }

              @Override
              public Answer set(String parameterName, Object value) {
                return (Answer) super.set(parameterName, value);
              }
            }
            /**
             * Gets a ServingConfig. Returns a NotFound error if the ServingConfig does not exist.
             *
             * Create a request for the method "servingConfigs.get".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name Required. The resource name of the ServingConfig to get. Format: `projects/{project_number}/location
             *        s/{location}/collections/{collection}/engines/{engine}/servingConfigs/{serving_config_id}`
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaServingConfig> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/servingConfigs/[^/]+$");

              /**
               * Gets a ServingConfig. Returns a NotFound error if the ServingConfig does not exist.
               *
               * Create a request for the method "servingConfigs.get".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The resource name of the ServingConfig to get. Format: `projects/{project_number}/location
             *        s/{location}/collections/{collection}/engines/{engine}/servingConfigs/{serving_config_id}`
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaServingConfig.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/servingConfigs/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The resource name of the ServingConfig to get. Format: `projects/{project
               * _number}/locations/{location}/collections/{collection}/engines/{engine}/servingConf
               * igs/{serving_config_id}`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The resource name of the ServingConfig to get. Format: `projects/{project_number}/locatio
             ns/{location}/collections/{collection}/engines/{engine}/servingConfigs/{serving_config_id}`
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The resource name of the ServingConfig to get. Format: `projects/{project
               * _number}/locations/{location}/collections/{collection}/engines/{engine}/servingConf
               * igs/{serving_config_id}`
               */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/servingConfigs/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Lists all ServingConfigs linked to this dataStore.
             *
             * Create a request for the method "servingConfigs.list".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. Full resource name of the parent resource. Format:
             *        `projects/{project_number}/locations/{location}/collections/{collection}/engines/{engine}`
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaListServingConfigsResponse> {

              private static final String REST_PATH = "v1alpha/{+parent}/servingConfigs";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");

              /**
               * Lists all ServingConfigs linked to this dataStore.
               *
               * Create a request for the method "servingConfigs.list".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. Full resource name of the parent resource. Format:
             *        `projects/{project_number}/locations/{location}/collections/{collection}/engines/{engine}`
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaListServingConfigsResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. Full resource name of the parent resource. Format: `projects/{project_num
               * ber}/locations/{location}/collections/{collection}/engines/{engine}`
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. Full resource name of the parent resource. Format:
             `projects/{project_number}/locations/{location}/collections/{collection}/engines/{engine}`
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. Full resource name of the parent resource. Format: `projects/{project_num
               * ber}/locations/{location}/collections/{collection}/engines/{engine}`
               */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Optional. Maximum number of results to return. If unspecified, defaults to 100. If
               * a value greater than 100 is provided, at most 100 results are returned.
               */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** Optional. Maximum number of results to return. If unspecified, defaults to 100. If a value greater
             than 100 is provided, at most 100 results are returned.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /**
               * Optional. Maximum number of results to return. If unspecified, defaults to 100. If
               * a value greater than 100 is provided, at most 100 results are returned.
               */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /**
               * Optional. A page token, received from a previous `ListServingConfigs` call. Provide
               * this to retrieve the subsequent page.
               */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** Optional. A page token, received from a previous `ListServingConfigs` call. Provide this to
             retrieve the subsequent page.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /**
               * Optional. A page token, received from a previous `ListServingConfigs` call. Provide
               * this to retrieve the subsequent page.
               */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }
            /**
             * Updates a ServingConfig. Returns a NOT_FOUND error if the ServingConfig does not exist.
             *
             * Create a request for the method "servingConfigs.patch".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             *
             * @param name Immutable. Fully qualified name `projects/{project}/locations/{location}/collections/{collection_id}
             *        /engines/{engine_id}/servingConfigs/{serving_config_id}`
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaServingConfig}
             * @return the request
             */
            public Patch patch(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaServingConfig content) throws java.io.IOException {
              Patch result = new Patch(name, content);
              initialize(result);
              return result;
            }

            public class Patch extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaServingConfig> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/servingConfigs/[^/]+$");

              /**
               * Updates a ServingConfig. Returns a NOT_FOUND error if the ServingConfig does not exist.
               *
               * Create a request for the method "servingConfigs.patch".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
               * <p> {@link
               * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Immutable. Fully qualified name `projects/{project}/locations/{location}/collections/{collection_id}
             *        /engines/{engine_id}/servingConfigs/{serving_config_id}`
               * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaServingConfig}
               * @since 1.13
               */
              protected Patch(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaServingConfig content) {
                super(DiscoveryEngine.this, "PATCH", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaServingConfig.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/servingConfigs/[^/]+$");
                }
              }

              @Override
              public Patch set$Xgafv(java.lang.String $Xgafv) {
                return (Patch) super.set$Xgafv($Xgafv);
              }

              @Override
              public Patch setAccessToken(java.lang.String accessToken) {
                return (Patch) super.setAccessToken(accessToken);
              }

              @Override
              public Patch setAlt(java.lang.String alt) {
                return (Patch) super.setAlt(alt);
              }

              @Override
              public Patch setCallback(java.lang.String callback) {
                return (Patch) super.setCallback(callback);
              }

              @Override
              public Patch setFields(java.lang.String fields) {
                return (Patch) super.setFields(fields);
              }

              @Override
              public Patch setKey(java.lang.String key) {
                return (Patch) super.setKey(key);
              }

              @Override
              public Patch setOauthToken(java.lang.String oauthToken) {
                return (Patch) super.setOauthToken(oauthToken);
              }

              @Override
              public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Patch) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Patch setQuotaUser(java.lang.String quotaUser) {
                return (Patch) super.setQuotaUser(quotaUser);
              }

              @Override
              public Patch setUploadType(java.lang.String uploadType) {
                return (Patch) super.setUploadType(uploadType);
              }

              @Override
              public Patch setUploadProtocol(java.lang.String uploadProtocol) {
                return (Patch) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Immutable. Fully qualified name `projects/{project}/locations/{location}/collection
               * s/{collection_id}/engines/{engine_id}/servingConfigs/{serving_config_id}`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Immutable. Fully qualified name `projects/{project}/locations/{location}/collections/{collection_id
             }/engines/{engine_id}/servingConfigs/{serving_config_id}`
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Immutable. Fully qualified name `projects/{project}/locations/{location}/collection
               * s/{collection_id}/engines/{engine_id}/servingConfigs/{serving_config_id}`
               */
              public Patch setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/servingConfigs/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * Indicates which fields in the provided ServingConfig to update. The following are
               * NOT supported: * ServingConfig.name If not set, all supported fields are updated.
               */
              @com.google.api.client.util.Key
              private String updateMask;

              /** Indicates which fields in the provided ServingConfig to update. The following are NOT supported: *
             ServingConfig.name If not set, all supported fields are updated.
               */
              public String getUpdateMask() {
                return updateMask;
              }

              /**
               * Indicates which fields in the provided ServingConfig to update. The following are
               * NOT supported: * ServingConfig.name If not set, all supported fields are updated.
               */
              public Patch setUpdateMask(String updateMask) {
                this.updateMask = updateMask;
                return this;
              }

              @Override
              public Patch set(String parameterName, Object value) {
                return (Patch) super.set(parameterName, value);
              }
            }
            /**
             * Makes a recommendation, which requires a contextual user event.
             *
             * Create a request for the method "servingConfigs.recommend".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Recommend#execute()} method to invoke the remote operation.
             *
             * @param servingConfig Required. Full resource name of a ServingConfig:
             *        `projects/locations/global/collections/engines/servingConfigs`, or
             *        `projects/locations/global/collections/dataStores/servingConfigs` One default serving
             *        config is created along with your recommendation engine creation. The engine ID will be
             *        used as the ID of the default serving config. For example, for Engine
             *        `projects/locations/global/collections/engines/my-engine`, you can use
             *        `projects/locations/global/collections/engines/my-engine/servingConfigs/my-engine` for
             *        your RecommendationService.Recommend requests.
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaRecommendRequest}
             * @return the request
             */
            public Recommend recommend(java.lang.String servingConfig, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaRecommendRequest content) throws java.io.IOException {
              Recommend result = new Recommend(servingConfig, content);
              initialize(result);
              return result;
            }

            public class Recommend extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaRecommendResponse> {

              private static final String REST_PATH = "v1alpha/{+servingConfig}:recommend";

              private final java.util.regex.Pattern SERVING_CONFIG_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/servingConfigs/[^/]+$");

              /**
               * Makes a recommendation, which requires a contextual user event.
               *
               * Create a request for the method "servingConfigs.recommend".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Recommend#execute()} method to invoke the remote
               * operation. <p> {@link
               * Recommend#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param servingConfig Required. Full resource name of a ServingConfig:
             *        `projects/locations/global/collections/engines/servingConfigs`, or
             *        `projects/locations/global/collections/dataStores/servingConfigs` One default serving
             *        config is created along with your recommendation engine creation. The engine ID will be
             *        used as the ID of the default serving config. For example, for Engine
             *        `projects/locations/global/collections/engines/my-engine`, you can use
             *        `projects/locations/global/collections/engines/my-engine/servingConfigs/my-engine` for
             *        your RecommendationService.Recommend requests.
               * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaRecommendRequest}
               * @since 1.13
               */
              protected Recommend(java.lang.String servingConfig, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaRecommendRequest content) {
                super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaRecommendResponse.class);
                this.servingConfig = com.google.api.client.util.Preconditions.checkNotNull(servingConfig, "Required parameter servingConfig must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(SERVING_CONFIG_PATTERN.matcher(servingConfig).matches(),
                      "Parameter servingConfig must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/servingConfigs/[^/]+$");
                }
              }

              @Override
              public Recommend set$Xgafv(java.lang.String $Xgafv) {
                return (Recommend) super.set$Xgafv($Xgafv);
              }

              @Override
              public Recommend setAccessToken(java.lang.String accessToken) {
                return (Recommend) super.setAccessToken(accessToken);
              }

              @Override
              public Recommend setAlt(java.lang.String alt) {
                return (Recommend) super.setAlt(alt);
              }

              @Override
              public Recommend setCallback(java.lang.String callback) {
                return (Recommend) super.setCallback(callback);
              }

              @Override
              public Recommend setFields(java.lang.String fields) {
                return (Recommend) super.setFields(fields);
              }

              @Override
              public Recommend setKey(java.lang.String key) {
                return (Recommend) super.setKey(key);
              }

              @Override
              public Recommend setOauthToken(java.lang.String oauthToken) {
                return (Recommend) super.setOauthToken(oauthToken);
              }

              @Override
              public Recommend setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Recommend) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Recommend setQuotaUser(java.lang.String quotaUser) {
                return (Recommend) super.setQuotaUser(quotaUser);
              }

              @Override
              public Recommend setUploadType(java.lang.String uploadType) {
                return (Recommend) super.setUploadType(uploadType);
              }

              @Override
              public Recommend setUploadProtocol(java.lang.String uploadProtocol) {
                return (Recommend) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. Full resource name of a ServingConfig:
               * `projects/locations/global/collections/engines/servingConfigs`, or
               * `projects/locations/global/collections/dataStores/servingConfigs` One default
               * serving config is created along with your recommendation engine creation. The
               * engine ID will be used as the ID of the default serving config. For example, for
               * Engine `projects/locations/global/collections/engines/my-engine`, you can use
               * `projects/locations/global/collections/engines/my-engine/servingConfigs/my-engine`
               * for your RecommendationService.Recommend requests.
               */
              @com.google.api.client.util.Key
              private java.lang.String servingConfig;

              /** Required. Full resource name of a ServingConfig:
             `projects/locations/global/collections/engines/servingConfigs`, or
             `projects/locations/global/collections/dataStores/servingConfigs` One default serving config is
             created along with your recommendation engine creation. The engine ID will be used as the ID of the
             default serving config. For example, for Engine `projects/locations/global/collections/engines/my-
             engine`, you can use `projects/locations/global/collections/engines/my-engine/servingConfigs/my-
             engine` for your RecommendationService.Recommend requests.
               */
              public java.lang.String getServingConfig() {
                return servingConfig;
              }

              /**
               * Required. Full resource name of a ServingConfig:
               * `projects/locations/global/collections/engines/servingConfigs`, or
               * `projects/locations/global/collections/dataStores/servingConfigs` One default
               * serving config is created along with your recommendation engine creation. The
               * engine ID will be used as the ID of the default serving config. For example, for
               * Engine `projects/locations/global/collections/engines/my-engine`, you can use
               * `projects/locations/global/collections/engines/my-engine/servingConfigs/my-engine`
               * for your RecommendationService.Recommend requests.
               */
              public Recommend setServingConfig(java.lang.String servingConfig) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(SERVING_CONFIG_PATTERN.matcher(servingConfig).matches(),
                      "Parameter servingConfig must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/servingConfigs/[^/]+$");
                }
                this.servingConfig = servingConfig;
                return this;
              }

              @Override
              public Recommend set(String parameterName, Object value) {
                return (Recommend) super.set(parameterName, value);
              }
            }
            /**
             * Performs a search.
             *
             * Create a request for the method "servingConfigs.search".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Search#execute()} method to invoke the remote operation.
             *
             * @param servingConfig Required. The resource name of the Search serving config, such as `projects/locations/global/collect
             *        ions/default_collection/engines/servingConfigs/default_serving_config`, or `projects/locat
             *        ions/global/collections/default_collection/dataStores/default_data_store/servingConfigs/de
             *        fault_serving_config`. This field is used to identify the serving configuration name, set
             *        of models used to make the search.
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSearchRequest}
             * @return the request
             */
            public Search search(java.lang.String servingConfig, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSearchRequest content) throws java.io.IOException {
              Search result = new Search(servingConfig, content);
              initialize(result);
              return result;
            }

            public class Search extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSearchResponse> {

              private static final String REST_PATH = "v1alpha/{+servingConfig}:search";

              private final java.util.regex.Pattern SERVING_CONFIG_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/servingConfigs/[^/]+$");

              /**
               * Performs a search.
               *
               * Create a request for the method "servingConfigs.search".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Search#execute()} method to invoke the remote operation.
               * <p> {@link
               * Search#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param servingConfig Required. The resource name of the Search serving config, such as `projects/locations/global/collect
             *        ions/default_collection/engines/servingConfigs/default_serving_config`, or `projects/locat
             *        ions/global/collections/default_collection/dataStores/default_data_store/servingConfigs/de
             *        fault_serving_config`. This field is used to identify the serving configuration name, set
             *        of models used to make the search.
               * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSearchRequest}
               * @since 1.13
               */
              protected Search(java.lang.String servingConfig, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSearchRequest content) {
                super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSearchResponse.class);
                this.servingConfig = com.google.api.client.util.Preconditions.checkNotNull(servingConfig, "Required parameter servingConfig must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(SERVING_CONFIG_PATTERN.matcher(servingConfig).matches(),
                      "Parameter servingConfig must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/servingConfigs/[^/]+$");
                }
              }

              @Override
              public Search set$Xgafv(java.lang.String $Xgafv) {
                return (Search) super.set$Xgafv($Xgafv);
              }

              @Override
              public Search setAccessToken(java.lang.String accessToken) {
                return (Search) super.setAccessToken(accessToken);
              }

              @Override
              public Search setAlt(java.lang.String alt) {
                return (Search) super.setAlt(alt);
              }

              @Override
              public Search setCallback(java.lang.String callback) {
                return (Search) super.setCallback(callback);
              }

              @Override
              public Search setFields(java.lang.String fields) {
                return (Search) super.setFields(fields);
              }

              @Override
              public Search setKey(java.lang.String key) {
                return (Search) super.setKey(key);
              }

              @Override
              public Search setOauthToken(java.lang.String oauthToken) {
                return (Search) super.setOauthToken(oauthToken);
              }

              @Override
              public Search setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Search) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Search setQuotaUser(java.lang.String quotaUser) {
                return (Search) super.setQuotaUser(quotaUser);
              }

              @Override
              public Search setUploadType(java.lang.String uploadType) {
                return (Search) super.setUploadType(uploadType);
              }

              @Override
              public Search setUploadProtocol(java.lang.String uploadProtocol) {
                return (Search) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The resource name of the Search serving config, such as `projects/locatio
               * ns/global/collections/default_collection/engines/servingConfigs/default_serving_con
               * fig`, or `projects/locations/global/collections/default_collection/dataStores/defau
               * lt_data_store/servingConfigs/default_serving_config`. This field is used to
               * identify the serving configuration name, set of models used to make the search.
               */
              @com.google.api.client.util.Key
              private java.lang.String servingConfig;

              /** Required. The resource name of the Search serving config, such as `projects/locations/global/collec
             tions/default_collection/engines/servingConfigs/default_serving_config`, or `projects/locations/glo
             bal/collections/default_collection/dataStores/default_data_store/servingConfigs/default_serving_con
             fig`. This field is used to identify the serving configuration name, set of models used to make the
             search.
               */
              public java.lang.String getServingConfig() {
                return servingConfig;
              }

              /**
               * Required. The resource name of the Search serving config, such as `projects/locatio
               * ns/global/collections/default_collection/engines/servingConfigs/default_serving_con
               * fig`, or `projects/locations/global/collections/default_collection/dataStores/defau
               * lt_data_store/servingConfigs/default_serving_config`. This field is used to
               * identify the serving configuration name, set of models used to make the search.
               */
              public Search setServingConfig(java.lang.String servingConfig) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(SERVING_CONFIG_PATTERN.matcher(servingConfig).matches(),
                      "Parameter servingConfig must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/servingConfigs/[^/]+$");
                }
                this.servingConfig = servingConfig;
                return this;
              }

              @Override
              public Search set(String parameterName, Object value) {
                return (Search) super.set(parameterName, value);
              }
            }

          }
          /**
           * An accessor for creating requests from the Sessions collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
           *   {@code DiscoveryEngine.Sessions.List request = discoveryengine.sessions().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Sessions sessions() {
            return new Sessions();
          }

          /**
           * The "sessions" collection of methods.
           */
          public class Sessions {

            /**
             * Creates a Session. If the Session to create already exists, an ALREADY_EXISTS error is returned.
             *
             * Create a request for the method "sessions.create".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             *
             * @param parent Required. Full resource name of parent data store. Format: `projects/{project_number}/locations/{loc
             *        ation_id}/collections/{collection}/dataStores/{data_store_id}`
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSession}
             * @return the request
             */
            public Create create(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSession content) throws java.io.IOException {
              Create result = new Create(parent, content);
              initialize(result);
              return result;
            }

            public class Create extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSession> {

              private static final String REST_PATH = "v1alpha/{+parent}/sessions";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");

              /**
               * Creates a Session. If the Session to create already exists, an ALREADY_EXISTS error is
               * returned.
               *
               * Create a request for the method "sessions.create".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
               * <p> {@link
               * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. Full resource name of parent data store. Format: `projects/{project_number}/locations/{loc
             *        ation_id}/collections/{collection}/dataStores/{data_store_id}`
               * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSession}
               * @since 1.13
               */
              protected Create(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSession content) {
                super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSession.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");
                }
              }

              @Override
              public Create set$Xgafv(java.lang.String $Xgafv) {
                return (Create) super.set$Xgafv($Xgafv);
              }

              @Override
              public Create setAccessToken(java.lang.String accessToken) {
                return (Create) super.setAccessToken(accessToken);
              }

              @Override
              public Create setAlt(java.lang.String alt) {
                return (Create) super.setAlt(alt);
              }

              @Override
              public Create setCallback(java.lang.String callback) {
                return (Create) super.setCallback(callback);
              }

              @Override
              public Create setFields(java.lang.String fields) {
                return (Create) super.setFields(fields);
              }

              @Override
              public Create setKey(java.lang.String key) {
                return (Create) super.setKey(key);
              }

              @Override
              public Create setOauthToken(java.lang.String oauthToken) {
                return (Create) super.setOauthToken(oauthToken);
              }

              @Override
              public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Create) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Create setQuotaUser(java.lang.String quotaUser) {
                return (Create) super.setQuotaUser(quotaUser);
              }

              @Override
              public Create setUploadType(java.lang.String uploadType) {
                return (Create) super.setUploadType(uploadType);
              }

              @Override
              public Create setUploadProtocol(java.lang.String uploadProtocol) {
                return (Create) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. Full resource name of parent data store. Format: `projects/{project_numbe
               * r}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}`
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. Full resource name of parent data store. Format: `projects/{project_number}/locations/{lo
             cation_id}/collections/{collection}/dataStores/{data_store_id}`
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. Full resource name of parent data store. Format: `projects/{project_numbe
               * r}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}`
               */
              public Create setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public Create set(String parameterName, Object value) {
                return (Create) super.set(parameterName, value);
              }
            }
            /**
             * Deletes a Session. If the Session to delete does not exist, a NOT_FOUND error is returned.
             *
             * Create a request for the method "sessions.delete".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param name Required. The resource name of the Session to delete. Format: `projects/{project_number}/locations/{
             *        location_id}/collections/{collection}/dataStores/{data_store_id}/sessions/{session_id}`
             * @return the request
             */
            public Delete delete(java.lang.String name) throws java.io.IOException {
              Delete result = new Delete(name);
              initialize(result);
              return result;
            }

            public class Delete extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleProtobufEmpty> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/sessions/[^/]+$");

              /**
               * Deletes a Session. If the Session to delete does not exist, a NOT_FOUND error is returned.
               *
               * Create a request for the method "sessions.delete".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               * <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The resource name of the Session to delete. Format: `projects/{project_number}/locations/{
             *        location_id}/collections/{collection}/dataStores/{data_store_id}/sessions/{session_id}`
               * @since 1.13
               */
              protected Delete(java.lang.String name) {
                super(DiscoveryEngine.this, "DELETE", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleProtobufEmpty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/sessions/[^/]+$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The resource name of the Session to delete. Format: `projects/{project_nu
               * mber}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/s
               * essions/{session_id}`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The resource name of the Session to delete. Format: `projects/{project_number}/locations/
             {location_id}/collections/{collection}/dataStores/{data_store_id}/sessions/{session_id}`
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The resource name of the Session to delete. Format: `projects/{project_nu
               * mber}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/s
               * essions/{session_id}`
               */
              public Delete setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/sessions/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * Gets a Session.
             *
             * Create a request for the method "sessions.get".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name Required. The resource name of the Session to get. Format: `projects/{project_number}/locations/{loc
             *        ation_id}/collections/{collection}/dataStores/{data_store_id}/sessions/{session_id}`
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSession> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/sessions/[^/]+$");

              /**
               * Gets a Session.
               *
               * Create a request for the method "sessions.get".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The resource name of the Session to get. Format: `projects/{project_number}/locations/{loc
             *        ation_id}/collections/{collection}/dataStores/{data_store_id}/sessions/{session_id}`
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSession.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/sessions/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The resource name of the Session to get. Format: `projects/{project_numbe
               * r}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/sess
               * ions/{session_id}`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The resource name of the Session to get. Format: `projects/{project_number}/locations/{lo
             cation_id}/collections/{collection}/dataStores/{data_store_id}/sessions/{session_id}`
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The resource name of the Session to get. Format: `projects/{project_numbe
               * r}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/sess
               * ions/{session_id}`
               */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/sessions/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Lists all Sessions by their parent DataStore.
             *
             * Create a request for the method "sessions.list".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The data store resource name. Format: `projects/{project_number}/locations/{location_id}/c
             *        ollections/{collection}/dataStores/{data_store_id}`
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaListSessionsResponse> {

              private static final String REST_PATH = "v1alpha/{+parent}/sessions";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");

              /**
               * Lists all Sessions by their parent DataStore.
               *
               * Create a request for the method "sessions.list".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The data store resource name. Format: `projects/{project_number}/locations/{location_id}/c
             *        ollections/{collection}/dataStores/{data_store_id}`
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaListSessionsResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The data store resource name. Format: `projects/{project_number}/location
               * s/{location_id}/collections/{collection}/dataStores/{data_store_id}`
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The data store resource name. Format: `projects/{project_number}/locations/{location_id}/
             collections/{collection}/dataStores/{data_store_id}`
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The data store resource name. Format: `projects/{project_number}/location
               * s/{location_id}/collections/{collection}/dataStores/{data_store_id}`
               */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * A filter to apply on the list results. The supported features are: user_pseudo_id,
               * state. Example: "user_pseudo_id = some_id"
               */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** A filter to apply on the list results. The supported features are: user_pseudo_id, state. Example:
             "user_pseudo_id = some_id"
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /**
               * A filter to apply on the list results. The supported features are: user_pseudo_id,
               * state. Example: "user_pseudo_id = some_id"
               */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /**
               * A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
               * after a field name for descending. Supported fields: * `update_time` *
               * `create_time` * `session_name` Example: "update_time desc" "create_time"
               */
              @com.google.api.client.util.Key
              private java.lang.String orderBy;

              /** A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field
             name for descending. Supported fields: * `update_time` * `create_time` * `session_name` Example:
             "update_time desc" "create_time"
               */
              public java.lang.String getOrderBy() {
                return orderBy;
              }

              /**
               * A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
               * after a field name for descending. Supported fields: * `update_time` *
               * `create_time` * `session_name` Example: "update_time desc" "create_time"
               */
              public List setOrderBy(java.lang.String orderBy) {
                this.orderBy = orderBy;
                return this;
              }

              /**
               * Maximum number of results to return. If unspecified, defaults to 50. Max allowed
               * value is 1000.
               */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** Maximum number of results to return. If unspecified, defaults to 50. Max allowed value is 1000.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /**
               * Maximum number of results to return. If unspecified, defaults to 50. Max allowed
               * value is 1000.
               */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /**
               * A page token, received from a previous `ListSessions` call. Provide this to
               * retrieve the subsequent page.
               */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** A page token, received from a previous `ListSessions` call. Provide this to retrieve the subsequent
             page.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /**
               * A page token, received from a previous `ListSessions` call. Provide this to
               * retrieve the subsequent page.
               */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }
            /**
             * Updates a Session. Session action type cannot be changed. If the Session to update does not
             * exist, a NOT_FOUND error is returned.
             *
             * Create a request for the method "sessions.patch".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             *
             * @param name Immutable. Fully qualified name
             *        `project/locations/global/collections/{collection}/engines/{engine}/sessions`
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSession}
             * @return the request
             */
            public Patch patch(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSession content) throws java.io.IOException {
              Patch result = new Patch(name, content);
              initialize(result);
              return result;
            }

            public class Patch extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSession> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/sessions/[^/]+$");

              /**
               * Updates a Session. Session action type cannot be changed. If the Session to update does not
               * exist, a NOT_FOUND error is returned.
               *
               * Create a request for the method "sessions.patch".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
               * <p> {@link
               * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Immutable. Fully qualified name
             *        `project/locations/global/collections/{collection}/engines/{engine}/sessions`
               * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSession}
               * @since 1.13
               */
              protected Patch(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSession content) {
                super(DiscoveryEngine.this, "PATCH", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSession.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/sessions/[^/]+$");
                }
              }

              @Override
              public Patch set$Xgafv(java.lang.String $Xgafv) {
                return (Patch) super.set$Xgafv($Xgafv);
              }

              @Override
              public Patch setAccessToken(java.lang.String accessToken) {
                return (Patch) super.setAccessToken(accessToken);
              }

              @Override
              public Patch setAlt(java.lang.String alt) {
                return (Patch) super.setAlt(alt);
              }

              @Override
              public Patch setCallback(java.lang.String callback) {
                return (Patch) super.setCallback(callback);
              }

              @Override
              public Patch setFields(java.lang.String fields) {
                return (Patch) super.setFields(fields);
              }

              @Override
              public Patch setKey(java.lang.String key) {
                return (Patch) super.setKey(key);
              }

              @Override
              public Patch setOauthToken(java.lang.String oauthToken) {
                return (Patch) super.setOauthToken(oauthToken);
              }

              @Override
              public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Patch) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Patch setQuotaUser(java.lang.String quotaUser) {
                return (Patch) super.setQuotaUser(quotaUser);
              }

              @Override
              public Patch setUploadType(java.lang.String uploadType) {
                return (Patch) super.setUploadType(uploadType);
              }

              @Override
              public Patch setUploadProtocol(java.lang.String uploadProtocol) {
                return (Patch) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Immutable. Fully qualified name
               * `project/locations/global/collections/{collection}/engines/{engine}/sessions`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Immutable. Fully qualified name
             `project/locations/global/collections/{collection}/engines/{engine}/sessions`
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Immutable. Fully qualified name
               * `project/locations/global/collections/{collection}/engines/{engine}/sessions`
               */
              public Patch setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/sessions/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * Indicates which fields in the provided Session to update. The following are NOT
               * supported: * Session.name If not set or empty, all supported fields are updated.
               */
              @com.google.api.client.util.Key
              private String updateMask;

              /** Indicates which fields in the provided Session to update. The following are NOT supported: *
             Session.name If not set or empty, all supported fields are updated.
               */
              public String getUpdateMask() {
                return updateMask;
              }

              /**
               * Indicates which fields in the provided Session to update. The following are NOT
               * supported: * Session.name If not set or empty, all supported fields are updated.
               */
              public Patch setUpdateMask(String updateMask) {
                this.updateMask = updateMask;
                return this;
              }

              @Override
              public Patch set(String parameterName, Object value) {
                return (Patch) super.set(parameterName, value);
              }
            }

            /**
             * An accessor for creating requests from the Answers collection.
             *
             * <p>The typical use is:</p>
             * <pre>
             *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
             *   {@code DiscoveryEngine.Answers.List request = discoveryengine.answers().list(parameters ...)}
             * </pre>
             *
             * @return the resource collection
             */
            public Answers answers() {
              return new Answers();
            }

            /**
             * The "answers" collection of methods.
             */
            public class Answers {

              /**
               * Gets a Answer.
               *
               * Create a request for the method "answers.get".
               *
               * This request holds the parameters needed by the discoveryengine server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
               *
               * @param name Required. The resource name of the Answer to get. Format: `projects/{project_number}/locations/{loca
               *        tion_id}/collections/{collection}/engines/{engine_id}/sessions/{session_id}/answers/{answe
               *        r_id}`
               * @return the request
               */
              public Get get(java.lang.String name) throws java.io.IOException {
                Get result = new Get(name);
                initialize(result);
                return result;
              }

              public class Get extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaAnswer> {

                private static final String REST_PATH = "v1alpha/{+name}";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/sessions/[^/]+/answers/[^/]+$");

                /**
                 * Gets a Answer.
                 *
                 * Create a request for the method "answers.get".
                 *
                 * This request holds the parameters needed by the the discoveryengine server.  After setting any
                 * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
                 * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name Required. The resource name of the Answer to get. Format: `projects/{project_number}/locations/{loca
               *        tion_id}/collections/{collection}/engines/{engine_id}/sessions/{session_id}/answers/{answe
               *        r_id}`
                 * @since 1.13
                 */
                protected Get(java.lang.String name) {
                  super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaAnswer.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/sessions/[^/]+/answers/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public Get set$Xgafv(java.lang.String $Xgafv) {
                  return (Get) super.set$Xgafv($Xgafv);
                }

                @Override
                public Get setAccessToken(java.lang.String accessToken) {
                  return (Get) super.setAccessToken(accessToken);
                }

                @Override
                public Get setAlt(java.lang.String alt) {
                  return (Get) super.setAlt(alt);
                }

                @Override
                public Get setCallback(java.lang.String callback) {
                  return (Get) super.setCallback(callback);
                }

                @Override
                public Get setFields(java.lang.String fields) {
                  return (Get) super.setFields(fields);
                }

                @Override
                public Get setKey(java.lang.String key) {
                  return (Get) super.setKey(key);
                }

                @Override
                public Get setOauthToken(java.lang.String oauthToken) {
                  return (Get) super.setOauthToken(oauthToken);
                }

                @Override
                public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Get) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Get setQuotaUser(java.lang.String quotaUser) {
                  return (Get) super.setQuotaUser(quotaUser);
                }

                @Override
                public Get setUploadType(java.lang.String uploadType) {
                  return (Get) super.setUploadType(uploadType);
                }

                @Override
                public Get setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Get) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The resource name of the Answer to get. Format: `projects/{project_numb
                 * er}/locations/{location_id}/collections/{collection}/engines/{engine_id}/sessions
                 * /{session_id}/answers/{answer_id}`
                 */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** Required. The resource name of the Answer to get. Format: `projects/{project_number}/locations/{loc
               ation_id}/collections/{collection}/engines/{engine_id}/sessions/{session_id}/answers/{answer_id}`
                 */
                public java.lang.String getName() {
                  return name;
                }

                /**
                 * Required. The resource name of the Answer to get. Format: `projects/{project_numb
                 * er}/locations/{location_id}/collections/{collection}/engines/{engine_id}/sessions
                 * /{session_id}/answers/{answer_id}`
                 */
                public Get setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/sessions/[^/]+/answers/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                @Override
                public Get set(String parameterName, Object value) {
                  return (Get) super.set(parameterName, value);
                }
              }

            }
          }
          /**
           * An accessor for creating requests from the SiteSearchEngine collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
           *   {@code DiscoveryEngine.SiteSearchEngine.List request = discoveryengine.siteSearchEngine().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public SiteSearchEngine siteSearchEngine() {
            return new SiteSearchEngine();
          }

          /**
           * The "siteSearchEngine" collection of methods.
           */
          public class SiteSearchEngine {

            /**
             * Verify target sites' ownership and validity. This API sends all the target sites under site
             * search engine for verification.
             *
             * Create a request for the method "siteSearchEngine.batchVerifyTargetSites".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link BatchVerifyTargetSites#execute()} method to invoke the
             * remote operation.
             *
             * @param parent Required. The parent resource shared by all TargetSites being verified. `projects/{project}/location
             *        s/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`.
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaBatchVerifyTargetSitesRequest}
             * @return the request
             */
            public BatchVerifyTargetSites batchVerifyTargetSites(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaBatchVerifyTargetSitesRequest content) throws java.io.IOException {
              BatchVerifyTargetSites result = new BatchVerifyTargetSites(parent, content);
              initialize(result);
              return result;
            }

            public class BatchVerifyTargetSites extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1alpha/{+parent}:batchVerifyTargetSites";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine$");

              /**
               * Verify target sites' ownership and validity. This API sends all the target sites under site
               * search engine for verification.
               *
               * Create a request for the method "siteSearchEngine.batchVerifyTargetSites".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link BatchVerifyTargetSites#execute()} method to invoke the
               * remote operation. <p> {@link BatchVerifyTargetSites#initialize(com.google.api.client.googleapis
               * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
               * after invoking the constructor. </p>
               *
               * @param parent Required. The parent resource shared by all TargetSites being verified. `projects/{project}/location
             *        s/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`.
               * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaBatchVerifyTargetSitesRequest}
               * @since 1.13
               */
              protected BatchVerifyTargetSites(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaBatchVerifyTargetSitesRequest content) {
                super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine$");
                }
              }

              @Override
              public BatchVerifyTargetSites set$Xgafv(java.lang.String $Xgafv) {
                return (BatchVerifyTargetSites) super.set$Xgafv($Xgafv);
              }

              @Override
              public BatchVerifyTargetSites setAccessToken(java.lang.String accessToken) {
                return (BatchVerifyTargetSites) super.setAccessToken(accessToken);
              }

              @Override
              public BatchVerifyTargetSites setAlt(java.lang.String alt) {
                return (BatchVerifyTargetSites) super.setAlt(alt);
              }

              @Override
              public BatchVerifyTargetSites setCallback(java.lang.String callback) {
                return (BatchVerifyTargetSites) super.setCallback(callback);
              }

              @Override
              public BatchVerifyTargetSites setFields(java.lang.String fields) {
                return (BatchVerifyTargetSites) super.setFields(fields);
              }

              @Override
              public BatchVerifyTargetSites setKey(java.lang.String key) {
                return (BatchVerifyTargetSites) super.setKey(key);
              }

              @Override
              public BatchVerifyTargetSites setOauthToken(java.lang.String oauthToken) {
                return (BatchVerifyTargetSites) super.setOauthToken(oauthToken);
              }

              @Override
              public BatchVerifyTargetSites setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (BatchVerifyTargetSites) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public BatchVerifyTargetSites setQuotaUser(java.lang.String quotaUser) {
                return (BatchVerifyTargetSites) super.setQuotaUser(quotaUser);
              }

              @Override
              public BatchVerifyTargetSites setUploadType(java.lang.String uploadType) {
                return (BatchVerifyTargetSites) super.setUploadType(uploadType);
              }

              @Override
              public BatchVerifyTargetSites setUploadProtocol(java.lang.String uploadProtocol) {
                return (BatchVerifyTargetSites) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The parent resource shared by all TargetSites being verified. `projects/{
               * project}/locations/{location}/collections/{collection}/dataStores/{data_store}/site
               * SearchEngine`.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The parent resource shared by all TargetSites being verified. `projects/{project}/locatio
             ns/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The parent resource shared by all TargetSites being verified. `projects/{
               * project}/locations/{location}/collections/{collection}/dataStores/{data_store}/site
               * SearchEngine`.
               */
              public BatchVerifyTargetSites setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public BatchVerifyTargetSites set(String parameterName, Object value) {
                return (BatchVerifyTargetSites) super.set(parameterName, value);
              }
            }
            /**
             * Downgrade from advanced site search to basic site search.
             *
             * Create a request for the method "siteSearchEngine.disableAdvancedSiteSearch".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link DisableAdvancedSiteSearch#execute()} method to invoke the
             * remote operation.
             *
             * @param siteSearchEngine Required. Full resource name of the SiteSearchEngine, such as
             *        `projects/{project}/locations/{location}/dataStores/{data_store_id}/siteSearchEngine`.
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDisableAdvancedSiteSearchRequest}
             * @return the request
             */
            public DisableAdvancedSiteSearch disableAdvancedSiteSearch(java.lang.String siteSearchEngine, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDisableAdvancedSiteSearchRequest content) throws java.io.IOException {
              DisableAdvancedSiteSearch result = new DisableAdvancedSiteSearch(siteSearchEngine, content);
              initialize(result);
              return result;
            }

            public class DisableAdvancedSiteSearch extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1alpha/{+siteSearchEngine}:disableAdvancedSiteSearch";

              private final java.util.regex.Pattern SITE_SEARCH_ENGINE_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine$");

              /**
               * Downgrade from advanced site search to basic site search.
               *
               * Create a request for the method "siteSearchEngine.disableAdvancedSiteSearch".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link DisableAdvancedSiteSearch#execute()} method to invoke the
               * remote operation. <p> {@link DisableAdvancedSiteSearch#initialize(com.google.api.client.googlea
               * pis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
               * immediately after invoking the constructor. </p>
               *
               * @param siteSearchEngine Required. Full resource name of the SiteSearchEngine, such as
             *        `projects/{project}/locations/{location}/dataStores/{data_store_id}/siteSearchEngine`.
               * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDisableAdvancedSiteSearchRequest}
               * @since 1.13
               */
              protected DisableAdvancedSiteSearch(java.lang.String siteSearchEngine, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDisableAdvancedSiteSearchRequest content) {
                super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
                this.siteSearchEngine = com.google.api.client.util.Preconditions.checkNotNull(siteSearchEngine, "Required parameter siteSearchEngine must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(SITE_SEARCH_ENGINE_PATTERN.matcher(siteSearchEngine).matches(),
                      "Parameter siteSearchEngine must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine$");
                }
              }

              @Override
              public DisableAdvancedSiteSearch set$Xgafv(java.lang.String $Xgafv) {
                return (DisableAdvancedSiteSearch) super.set$Xgafv($Xgafv);
              }

              @Override
              public DisableAdvancedSiteSearch setAccessToken(java.lang.String accessToken) {
                return (DisableAdvancedSiteSearch) super.setAccessToken(accessToken);
              }

              @Override
              public DisableAdvancedSiteSearch setAlt(java.lang.String alt) {
                return (DisableAdvancedSiteSearch) super.setAlt(alt);
              }

              @Override
              public DisableAdvancedSiteSearch setCallback(java.lang.String callback) {
                return (DisableAdvancedSiteSearch) super.setCallback(callback);
              }

              @Override
              public DisableAdvancedSiteSearch setFields(java.lang.String fields) {
                return (DisableAdvancedSiteSearch) super.setFields(fields);
              }

              @Override
              public DisableAdvancedSiteSearch setKey(java.lang.String key) {
                return (DisableAdvancedSiteSearch) super.setKey(key);
              }

              @Override
              public DisableAdvancedSiteSearch setOauthToken(java.lang.String oauthToken) {
                return (DisableAdvancedSiteSearch) super.setOauthToken(oauthToken);
              }

              @Override
              public DisableAdvancedSiteSearch setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (DisableAdvancedSiteSearch) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public DisableAdvancedSiteSearch setQuotaUser(java.lang.String quotaUser) {
                return (DisableAdvancedSiteSearch) super.setQuotaUser(quotaUser);
              }

              @Override
              public DisableAdvancedSiteSearch setUploadType(java.lang.String uploadType) {
                return (DisableAdvancedSiteSearch) super.setUploadType(uploadType);
              }

              @Override
              public DisableAdvancedSiteSearch setUploadProtocol(java.lang.String uploadProtocol) {
                return (DisableAdvancedSiteSearch) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. Full resource name of the SiteSearchEngine, such as `projects/{project}/l
               * ocations/{location}/dataStores/{data_store_id}/siteSearchEngine`.
               */
              @com.google.api.client.util.Key
              private java.lang.String siteSearchEngine;

              /** Required. Full resource name of the SiteSearchEngine, such as
             `projects/{project}/locations/{location}/dataStores/{data_store_id}/siteSearchEngine`.
               */
              public java.lang.String getSiteSearchEngine() {
                return siteSearchEngine;
              }

              /**
               * Required. Full resource name of the SiteSearchEngine, such as `projects/{project}/l
               * ocations/{location}/dataStores/{data_store_id}/siteSearchEngine`.
               */
              public DisableAdvancedSiteSearch setSiteSearchEngine(java.lang.String siteSearchEngine) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(SITE_SEARCH_ENGINE_PATTERN.matcher(siteSearchEngine).matches(),
                      "Parameter siteSearchEngine must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine$");
                }
                this.siteSearchEngine = siteSearchEngine;
                return this;
              }

              @Override
              public DisableAdvancedSiteSearch set(String parameterName, Object value) {
                return (DisableAdvancedSiteSearch) super.set(parameterName, value);
              }
            }
            /**
             * Upgrade from basic site search to advanced site search.
             *
             * Create a request for the method "siteSearchEngine.enableAdvancedSiteSearch".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link EnableAdvancedSiteSearch#execute()} method to invoke the
             * remote operation.
             *
             * @param siteSearchEngine Required. Full resource name of the SiteSearchEngine, such as
             *        `projects/{project}/locations/{location}/dataStores/{data_store_id}/siteSearchEngine`.
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaEnableAdvancedSiteSearchRequest}
             * @return the request
             */
            public EnableAdvancedSiteSearch enableAdvancedSiteSearch(java.lang.String siteSearchEngine, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaEnableAdvancedSiteSearchRequest content) throws java.io.IOException {
              EnableAdvancedSiteSearch result = new EnableAdvancedSiteSearch(siteSearchEngine, content);
              initialize(result);
              return result;
            }

            public class EnableAdvancedSiteSearch extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1alpha/{+siteSearchEngine}:enableAdvancedSiteSearch";

              private final java.util.regex.Pattern SITE_SEARCH_ENGINE_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine$");

              /**
               * Upgrade from basic site search to advanced site search.
               *
               * Create a request for the method "siteSearchEngine.enableAdvancedSiteSearch".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link EnableAdvancedSiteSearch#execute()} method to invoke the
               * remote operation. <p> {@link EnableAdvancedSiteSearch#initialize(com.google.api.client.googleap
               * is.services.AbstractGoogleClientRequest)} must be called to initialize this instance
               * immediately after invoking the constructor. </p>
               *
               * @param siteSearchEngine Required. Full resource name of the SiteSearchEngine, such as
             *        `projects/{project}/locations/{location}/dataStores/{data_store_id}/siteSearchEngine`.
               * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaEnableAdvancedSiteSearchRequest}
               * @since 1.13
               */
              protected EnableAdvancedSiteSearch(java.lang.String siteSearchEngine, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaEnableAdvancedSiteSearchRequest content) {
                super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
                this.siteSearchEngine = com.google.api.client.util.Preconditions.checkNotNull(siteSearchEngine, "Required parameter siteSearchEngine must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(SITE_SEARCH_ENGINE_PATTERN.matcher(siteSearchEngine).matches(),
                      "Parameter siteSearchEngine must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine$");
                }
              }

              @Override
              public EnableAdvancedSiteSearch set$Xgafv(java.lang.String $Xgafv) {
                return (EnableAdvancedSiteSearch) super.set$Xgafv($Xgafv);
              }

              @Override
              public EnableAdvancedSiteSearch setAccessToken(java.lang.String accessToken) {
                return (EnableAdvancedSiteSearch) super.setAccessToken(accessToken);
              }

              @Override
              public EnableAdvancedSiteSearch setAlt(java.lang.String alt) {
                return (EnableAdvancedSiteSearch) super.setAlt(alt);
              }

              @Override
              public EnableAdvancedSiteSearch setCallback(java.lang.String callback) {
                return (EnableAdvancedSiteSearch) super.setCallback(callback);
              }

              @Override
              public EnableAdvancedSiteSearch setFields(java.lang.String fields) {
                return (EnableAdvancedSiteSearch) super.setFields(fields);
              }

              @Override
              public EnableAdvancedSiteSearch setKey(java.lang.String key) {
                return (EnableAdvancedSiteSearch) super.setKey(key);
              }

              @Override
              public EnableAdvancedSiteSearch setOauthToken(java.lang.String oauthToken) {
                return (EnableAdvancedSiteSearch) super.setOauthToken(oauthToken);
              }

              @Override
              public EnableAdvancedSiteSearch setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (EnableAdvancedSiteSearch) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public EnableAdvancedSiteSearch setQuotaUser(java.lang.String quotaUser) {
                return (EnableAdvancedSiteSearch) super.setQuotaUser(quotaUser);
              }

              @Override
              public EnableAdvancedSiteSearch setUploadType(java.lang.String uploadType) {
                return (EnableAdvancedSiteSearch) super.setUploadType(uploadType);
              }

              @Override
              public EnableAdvancedSiteSearch setUploadProtocol(java.lang.String uploadProtocol) {
                return (EnableAdvancedSiteSearch) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. Full resource name of the SiteSearchEngine, such as `projects/{project}/l
               * ocations/{location}/dataStores/{data_store_id}/siteSearchEngine`.
               */
              @com.google.api.client.util.Key
              private java.lang.String siteSearchEngine;

              /** Required. Full resource name of the SiteSearchEngine, such as
             `projects/{project}/locations/{location}/dataStores/{data_store_id}/siteSearchEngine`.
               */
              public java.lang.String getSiteSearchEngine() {
                return siteSearchEngine;
              }

              /**
               * Required. Full resource name of the SiteSearchEngine, such as `projects/{project}/l
               * ocations/{location}/dataStores/{data_store_id}/siteSearchEngine`.
               */
              public EnableAdvancedSiteSearch setSiteSearchEngine(java.lang.String siteSearchEngine) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(SITE_SEARCH_ENGINE_PATTERN.matcher(siteSearchEngine).matches(),
                      "Parameter siteSearchEngine must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine$");
                }
                this.siteSearchEngine = siteSearchEngine;
                return this;
              }

              @Override
              public EnableAdvancedSiteSearch set(String parameterName, Object value) {
                return (EnableAdvancedSiteSearch) super.set(parameterName, value);
              }
            }
            /**
             * Returns list of target sites with its domain verification status. This method can only be called
             * under data store with BASIC_SITE_SEARCH state at the moment.
             *
             * Create a request for the method "siteSearchEngine.fetchDomainVerificationStatus".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link FetchDomainVerificationStatus#execute()} method to invoke
             * the remote operation.
             *
             * @param siteSearchEngine Required. The site search engine resource under which we fetch all the domain verification status. `
             *        projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/s
             *        iteSearchEngine`.
             * @return the request
             */
            public FetchDomainVerificationStatus fetchDomainVerificationStatus(java.lang.String siteSearchEngine) throws java.io.IOException {
              FetchDomainVerificationStatus result = new FetchDomainVerificationStatus(siteSearchEngine);
              initialize(result);
              return result;
            }

            public class FetchDomainVerificationStatus extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaFetchDomainVerificationStatusResponse> {

              private static final String REST_PATH = "v1alpha/{+siteSearchEngine}:fetchDomainVerificationStatus";

              private final java.util.regex.Pattern SITE_SEARCH_ENGINE_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine$");

              /**
               * Returns list of target sites with its domain verification status. This method can only be
               * called under data store with BASIC_SITE_SEARCH state at the moment.
               *
               * Create a request for the method "siteSearchEngine.fetchDomainVerificationStatus".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link FetchDomainVerificationStatus#execute()} method to invoke
               * the remote operation. <p> {@link FetchDomainVerificationStatus#initialize(com.google.api.client
               * .googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
               * immediately after invoking the constructor. </p>
               *
               * @param siteSearchEngine Required. The site search engine resource under which we fetch all the domain verification status. `
             *        projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/s
             *        iteSearchEngine`.
               * @since 1.13
               */
              protected FetchDomainVerificationStatus(java.lang.String siteSearchEngine) {
                super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaFetchDomainVerificationStatusResponse.class);
                this.siteSearchEngine = com.google.api.client.util.Preconditions.checkNotNull(siteSearchEngine, "Required parameter siteSearchEngine must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(SITE_SEARCH_ENGINE_PATTERN.matcher(siteSearchEngine).matches(),
                      "Parameter siteSearchEngine must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public FetchDomainVerificationStatus set$Xgafv(java.lang.String $Xgafv) {
                return (FetchDomainVerificationStatus) super.set$Xgafv($Xgafv);
              }

              @Override
              public FetchDomainVerificationStatus setAccessToken(java.lang.String accessToken) {
                return (FetchDomainVerificationStatus) super.setAccessToken(accessToken);
              }

              @Override
              public FetchDomainVerificationStatus setAlt(java.lang.String alt) {
                return (FetchDomainVerificationStatus) super.setAlt(alt);
              }

              @Override
              public FetchDomainVerificationStatus setCallback(java.lang.String callback) {
                return (FetchDomainVerificationStatus) super.setCallback(callback);
              }

              @Override
              public FetchDomainVerificationStatus setFields(java.lang.String fields) {
                return (FetchDomainVerificationStatus) super.setFields(fields);
              }

              @Override
              public FetchDomainVerificationStatus setKey(java.lang.String key) {
                return (FetchDomainVerificationStatus) super.setKey(key);
              }

              @Override
              public FetchDomainVerificationStatus setOauthToken(java.lang.String oauthToken) {
                return (FetchDomainVerificationStatus) super.setOauthToken(oauthToken);
              }

              @Override
              public FetchDomainVerificationStatus setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (FetchDomainVerificationStatus) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public FetchDomainVerificationStatus setQuotaUser(java.lang.String quotaUser) {
                return (FetchDomainVerificationStatus) super.setQuotaUser(quotaUser);
              }

              @Override
              public FetchDomainVerificationStatus setUploadType(java.lang.String uploadType) {
                return (FetchDomainVerificationStatus) super.setUploadType(uploadType);
              }

              @Override
              public FetchDomainVerificationStatus setUploadProtocol(java.lang.String uploadProtocol) {
                return (FetchDomainVerificationStatus) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The site search engine resource under which we fetch all the domain
               * verification status. `projects/{project}/locations/{location}/collections/{collecti
               * on}/dataStores/{data_store}/siteSearchEngine`.
               */
              @com.google.api.client.util.Key
              private java.lang.String siteSearchEngine;

              /** Required. The site search engine resource under which we fetch all the domain verification status.
             `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearc
             hEngine`.
               */
              public java.lang.String getSiteSearchEngine() {
                return siteSearchEngine;
              }

              /**
               * Required. The site search engine resource under which we fetch all the domain
               * verification status. `projects/{project}/locations/{location}/collections/{collecti
               * on}/dataStores/{data_store}/siteSearchEngine`.
               */
              public FetchDomainVerificationStatus setSiteSearchEngine(java.lang.String siteSearchEngine) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(SITE_SEARCH_ENGINE_PATTERN.matcher(siteSearchEngine).matches(),
                      "Parameter siteSearchEngine must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine$");
                }
                this.siteSearchEngine = siteSearchEngine;
                return this;
              }

              /**
               * Requested page size. Server may return fewer items than requested. If unspecified,
               * server will pick an appropriate default. The maximum value is 1000; values above
               * 1000 will be coerced to 1000. If this field is negative, an INVALID_ARGUMENT error
               * is returned.
               */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** Requested page size. Server may return fewer items than requested. If unspecified, server will pick
             an appropriate default. The maximum value is 1000; values above 1000 will be coerced to 1000. If
             this field is negative, an INVALID_ARGUMENT error is returned.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /**
               * Requested page size. Server may return fewer items than requested. If unspecified,
               * server will pick an appropriate default. The maximum value is 1000; values above
               * 1000 will be coerced to 1000. If this field is negative, an INVALID_ARGUMENT error
               * is returned.
               */
              public FetchDomainVerificationStatus setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /**
               * A page token, received from a previous `FetchDomainVerificationStatus` call.
               * Provide this to retrieve the subsequent page. When paginating, all other parameters
               * provided to `FetchDomainVerificationStatus` must match the call that provided the
               * page token.
               */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** A page token, received from a previous `FetchDomainVerificationStatus` call. Provide this to
             retrieve the subsequent page. When paginating, all other parameters provided to
             `FetchDomainVerificationStatus` must match the call that provided the page token.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /**
               * A page token, received from a previous `FetchDomainVerificationStatus` call.
               * Provide this to retrieve the subsequent page. When paginating, all other parameters
               * provided to `FetchDomainVerificationStatus` must match the call that provided the
               * page token.
               */
              public FetchDomainVerificationStatus setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public FetchDomainVerificationStatus set(String parameterName, Object value) {
                return (FetchDomainVerificationStatus) super.set(parameterName, value);
              }
            }
            /**
             * Request on-demand recrawl for a list of URIs.
             *
             * Create a request for the method "siteSearchEngine.recrawlUris".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link RecrawlUris#execute()} method to invoke the remote
             * operation.
             *
             * @param siteSearchEngine Required. Full resource name of the SiteSearchEngine, such as
             *        `projects/locations/collections/dataStores/siteSearchEngine`.
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaRecrawlUrisRequest}
             * @return the request
             */
            public RecrawlUris recrawlUris(java.lang.String siteSearchEngine, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaRecrawlUrisRequest content) throws java.io.IOException {
              RecrawlUris result = new RecrawlUris(siteSearchEngine, content);
              initialize(result);
              return result;
            }

            public class RecrawlUris extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1alpha/{+siteSearchEngine}:recrawlUris";

              private final java.util.regex.Pattern SITE_SEARCH_ENGINE_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine$");

              /**
               * Request on-demand recrawl for a list of URIs.
               *
               * Create a request for the method "siteSearchEngine.recrawlUris".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link RecrawlUris#execute()} method to invoke the remote
               * operation. <p> {@link
               * RecrawlUris#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param siteSearchEngine Required. Full resource name of the SiteSearchEngine, such as
             *        `projects/locations/collections/dataStores/siteSearchEngine`.
               * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaRecrawlUrisRequest}
               * @since 1.13
               */
              protected RecrawlUris(java.lang.String siteSearchEngine, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaRecrawlUrisRequest content) {
                super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
                this.siteSearchEngine = com.google.api.client.util.Preconditions.checkNotNull(siteSearchEngine, "Required parameter siteSearchEngine must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(SITE_SEARCH_ENGINE_PATTERN.matcher(siteSearchEngine).matches(),
                      "Parameter siteSearchEngine must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine$");
                }
              }

              @Override
              public RecrawlUris set$Xgafv(java.lang.String $Xgafv) {
                return (RecrawlUris) super.set$Xgafv($Xgafv);
              }

              @Override
              public RecrawlUris setAccessToken(java.lang.String accessToken) {
                return (RecrawlUris) super.setAccessToken(accessToken);
              }

              @Override
              public RecrawlUris setAlt(java.lang.String alt) {
                return (RecrawlUris) super.setAlt(alt);
              }

              @Override
              public RecrawlUris setCallback(java.lang.String callback) {
                return (RecrawlUris) super.setCallback(callback);
              }

              @Override
              public RecrawlUris setFields(java.lang.String fields) {
                return (RecrawlUris) super.setFields(fields);
              }

              @Override
              public RecrawlUris setKey(java.lang.String key) {
                return (RecrawlUris) super.setKey(key);
              }

              @Override
              public RecrawlUris setOauthToken(java.lang.String oauthToken) {
                return (RecrawlUris) super.setOauthToken(oauthToken);
              }

              @Override
              public RecrawlUris setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (RecrawlUris) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public RecrawlUris setQuotaUser(java.lang.String quotaUser) {
                return (RecrawlUris) super.setQuotaUser(quotaUser);
              }

              @Override
              public RecrawlUris setUploadType(java.lang.String uploadType) {
                return (RecrawlUris) super.setUploadType(uploadType);
              }

              @Override
              public RecrawlUris setUploadProtocol(java.lang.String uploadProtocol) {
                return (RecrawlUris) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. Full resource name of the SiteSearchEngine, such as
               * `projects/locations/collections/dataStores/siteSearchEngine`.
               */
              @com.google.api.client.util.Key
              private java.lang.String siteSearchEngine;

              /** Required. Full resource name of the SiteSearchEngine, such as
             `projects/locations/collections/dataStores/siteSearchEngine`.
               */
              public java.lang.String getSiteSearchEngine() {
                return siteSearchEngine;
              }

              /**
               * Required. Full resource name of the SiteSearchEngine, such as
               * `projects/locations/collections/dataStores/siteSearchEngine`.
               */
              public RecrawlUris setSiteSearchEngine(java.lang.String siteSearchEngine) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(SITE_SEARCH_ENGINE_PATTERN.matcher(siteSearchEngine).matches(),
                      "Parameter siteSearchEngine must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine$");
                }
                this.siteSearchEngine = siteSearchEngine;
                return this;
              }

              @Override
              public RecrawlUris set(String parameterName, Object value) {
                return (RecrawlUris) super.set(parameterName, value);
              }
            }

            /**
             * An accessor for creating requests from the Operations collection.
             *
             * <p>The typical use is:</p>
             * <pre>
             *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
             *   {@code DiscoveryEngine.Operations.List request = discoveryengine.operations().list(parameters ...)}
             * </pre>
             *
             * @return the resource collection
             */
            public Operations operations() {
              return new Operations();
            }

            /**
             * The "operations" collection of methods.
             */
            public class Operations {

              /**
               * Gets the latest state of a long-running operation. Clients can use this method to poll the
               * operation result at intervals as recommended by the API service.
               *
               * Create a request for the method "operations.get".
               *
               * This request holds the parameters needed by the discoveryengine server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
               *
               * @param name The name of the operation resource.
               * @return the request
               */
              public Get get(java.lang.String name) throws java.io.IOException {
                Get result = new Get(name);
                initialize(result);
                return result;
              }

              public class Get extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

                private static final String REST_PATH = "v1alpha/{+name}";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine/operations/[^/]+$");

                /**
                 * Gets the latest state of a long-running operation. Clients can use this method to poll the
                 * operation result at intervals as recommended by the API service.
                 *
                 * Create a request for the method "operations.get".
                 *
                 * This request holds the parameters needed by the the discoveryengine server.  After setting any
                 * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
                 * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name The name of the operation resource.
                 * @since 1.13
                 */
                protected Get(java.lang.String name) {
                  super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine/operations/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public Get set$Xgafv(java.lang.String $Xgafv) {
                  return (Get) super.set$Xgafv($Xgafv);
                }

                @Override
                public Get setAccessToken(java.lang.String accessToken) {
                  return (Get) super.setAccessToken(accessToken);
                }

                @Override
                public Get setAlt(java.lang.String alt) {
                  return (Get) super.setAlt(alt);
                }

                @Override
                public Get setCallback(java.lang.String callback) {
                  return (Get) super.setCallback(callback);
                }

                @Override
                public Get setFields(java.lang.String fields) {
                  return (Get) super.setFields(fields);
                }

                @Override
                public Get setKey(java.lang.String key) {
                  return (Get) super.setKey(key);
                }

                @Override
                public Get setOauthToken(java.lang.String oauthToken) {
                  return (Get) super.setOauthToken(oauthToken);
                }

                @Override
                public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Get) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Get setQuotaUser(java.lang.String quotaUser) {
                  return (Get) super.setQuotaUser(quotaUser);
                }

                @Override
                public Get setUploadType(java.lang.String uploadType) {
                  return (Get) super.setUploadType(uploadType);
                }

                @Override
                public Get setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Get) super.setUploadProtocol(uploadProtocol);
                }

                /** The name of the operation resource. */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** The name of the operation resource.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /** The name of the operation resource. */
                public Get setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine/operations/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                @Override
                public Get set(String parameterName, Object value) {
                  return (Get) super.set(parameterName, value);
                }
              }
              /**
               * Lists operations that match the specified filter in the request. If the server doesn't support
               * this method, it returns `UNIMPLEMENTED`.
               *
               * Create a request for the method "operations.list".
               *
               * This request holds the parameters needed by the discoveryengine server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
               *
               * @param name The name of the operation's parent resource.
               * @return the request
               */
              public List list(java.lang.String name) throws java.io.IOException {
                List result = new List(name);
                initialize(result);
                return result;
              }

              public class List extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningListOperationsResponse> {

                private static final String REST_PATH = "v1alpha/{+name}/operations";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine$");

                /**
                 * Lists operations that match the specified filter in the request. If the server doesn't support
                 * this method, it returns `UNIMPLEMENTED`.
                 *
                 * Create a request for the method "operations.list".
                 *
                 * This request holds the parameters needed by the the discoveryengine server.  After setting any
                 * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
                 * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name The name of the operation's parent resource.
                 * @since 1.13
                 */
                protected List(java.lang.String name) {
                  super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningListOperationsResponse.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public List set$Xgafv(java.lang.String $Xgafv) {
                  return (List) super.set$Xgafv($Xgafv);
                }

                @Override
                public List setAccessToken(java.lang.String accessToken) {
                  return (List) super.setAccessToken(accessToken);
                }

                @Override
                public List setAlt(java.lang.String alt) {
                  return (List) super.setAlt(alt);
                }

                @Override
                public List setCallback(java.lang.String callback) {
                  return (List) super.setCallback(callback);
                }

                @Override
                public List setFields(java.lang.String fields) {
                  return (List) super.setFields(fields);
                }

                @Override
                public List setKey(java.lang.String key) {
                  return (List) super.setKey(key);
                }

                @Override
                public List setOauthToken(java.lang.String oauthToken) {
                  return (List) super.setOauthToken(oauthToken);
                }

                @Override
                public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (List) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public List setQuotaUser(java.lang.String quotaUser) {
                  return (List) super.setQuotaUser(quotaUser);
                }

                @Override
                public List setUploadType(java.lang.String uploadType) {
                  return (List) super.setUploadType(uploadType);
                }

                @Override
                public List setUploadProtocol(java.lang.String uploadProtocol) {
                  return (List) super.setUploadProtocol(uploadProtocol);
                }

                /** The name of the operation's parent resource. */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** The name of the operation's parent resource.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /** The name of the operation's parent resource. */
                public List setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine$");
                  }
                  this.name = name;
                  return this;
                }

                /** The standard list filter. */
                @com.google.api.client.util.Key
                private java.lang.String filter;

                /** The standard list filter.
                 */
                public java.lang.String getFilter() {
                  return filter;
                }

                /** The standard list filter. */
                public List setFilter(java.lang.String filter) {
                  this.filter = filter;
                  return this;
                }

                /** The standard list page size. */
                @com.google.api.client.util.Key
                private java.lang.Integer pageSize;

                /** The standard list page size.
                 */
                public java.lang.Integer getPageSize() {
                  return pageSize;
                }

                /** The standard list page size. */
                public List setPageSize(java.lang.Integer pageSize) {
                  this.pageSize = pageSize;
                  return this;
                }

                /** The standard list page token. */
                @com.google.api.client.util.Key
                private java.lang.String pageToken;

                /** The standard list page token.
                 */
                public java.lang.String getPageToken() {
                  return pageToken;
                }

                /** The standard list page token. */
                public List setPageToken(java.lang.String pageToken) {
                  this.pageToken = pageToken;
                  return this;
                }

                @Override
                public List set(String parameterName, Object value) {
                  return (List) super.set(parameterName, value);
                }
              }

            }
            /**
             * An accessor for creating requests from the TargetSites collection.
             *
             * <p>The typical use is:</p>
             * <pre>
             *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
             *   {@code DiscoveryEngine.TargetSites.List request = discoveryengine.targetSites().list(parameters ...)}
             * </pre>
             *
             * @return the resource collection
             */
            public TargetSites targetSites() {
              return new TargetSites();
            }

            /**
             * The "targetSites" collection of methods.
             */
            public class TargetSites {

              /**
               * Creates TargetSite in a batch.
               *
               * Create a request for the method "targetSites.batchCreate".
               *
               * This request holds the parameters needed by the discoveryengine server.  After setting any
               * optional parameters, call the {@link BatchCreate#execute()} method to invoke the remote
               * operation.
               *
               * @param parent Required. The parent resource shared by all TargetSites being created. `projects/{project}/locations
               *        /{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`. The parent
               *        field in the CreateBookRequest messages must either be empty or match this field.
               * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaBatchCreateTargetSitesRequest}
               * @return the request
               */
              public BatchCreate batchCreate(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaBatchCreateTargetSitesRequest content) throws java.io.IOException {
                BatchCreate result = new BatchCreate(parent, content);
                initialize(result);
                return result;
              }

              public class BatchCreate extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

                private static final String REST_PATH = "v1alpha/{+parent}/targetSites:batchCreate";

                private final java.util.regex.Pattern PARENT_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine$");

                /**
                 * Creates TargetSite in a batch.
                 *
                 * Create a request for the method "targetSites.batchCreate".
                 *
                 * This request holds the parameters needed by the the discoveryengine server.  After setting any
                 * optional parameters, call the {@link BatchCreate#execute()} method to invoke the remote
                 * operation. <p> {@link
                 * BatchCreate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param parent Required. The parent resource shared by all TargetSites being created. `projects/{project}/locations
               *        /{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`. The parent
               *        field in the CreateBookRequest messages must either be empty or match this field.
                 * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaBatchCreateTargetSitesRequest}
                 * @since 1.13
                 */
                protected BatchCreate(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaBatchCreateTargetSitesRequest content) {
                  super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
                  this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine$");
                  }
                }

                @Override
                public BatchCreate set$Xgafv(java.lang.String $Xgafv) {
                  return (BatchCreate) super.set$Xgafv($Xgafv);
                }

                @Override
                public BatchCreate setAccessToken(java.lang.String accessToken) {
                  return (BatchCreate) super.setAccessToken(accessToken);
                }

                @Override
                public BatchCreate setAlt(java.lang.String alt) {
                  return (BatchCreate) super.setAlt(alt);
                }

                @Override
                public BatchCreate setCallback(java.lang.String callback) {
                  return (BatchCreate) super.setCallback(callback);
                }

                @Override
                public BatchCreate setFields(java.lang.String fields) {
                  return (BatchCreate) super.setFields(fields);
                }

                @Override
                public BatchCreate setKey(java.lang.String key) {
                  return (BatchCreate) super.setKey(key);
                }

                @Override
                public BatchCreate setOauthToken(java.lang.String oauthToken) {
                  return (BatchCreate) super.setOauthToken(oauthToken);
                }

                @Override
                public BatchCreate setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (BatchCreate) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public BatchCreate setQuotaUser(java.lang.String quotaUser) {
                  return (BatchCreate) super.setQuotaUser(quotaUser);
                }

                @Override
                public BatchCreate setUploadType(java.lang.String uploadType) {
                  return (BatchCreate) super.setUploadType(uploadType);
                }

                @Override
                public BatchCreate setUploadProtocol(java.lang.String uploadProtocol) {
                  return (BatchCreate) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The parent resource shared by all TargetSites being created. `projects/
                 * {project}/locations/{location}/collections/{collection}/dataStores/{data_store}/s
                 * iteSearchEngine`. The parent field in the CreateBookRequest messages must either
                 * be empty or match this field.
                 */
                @com.google.api.client.util.Key
                private java.lang.String parent;

                /** Required. The parent resource shared by all TargetSites being created. `projects/{project}/location
               s/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`. The parent field
               in the CreateBookRequest messages must either be empty or match this field.
                 */
                public java.lang.String getParent() {
                  return parent;
                }

                /**
                 * Required. The parent resource shared by all TargetSites being created. `projects/
                 * {project}/locations/{location}/collections/{collection}/dataStores/{data_store}/s
                 * iteSearchEngine`. The parent field in the CreateBookRequest messages must either
                 * be empty or match this field.
                 */
                public BatchCreate setParent(java.lang.String parent) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine$");
                  }
                  this.parent = parent;
                  return this;
                }

                @Override
                public BatchCreate set(String parameterName, Object value) {
                  return (BatchCreate) super.set(parameterName, value);
                }
              }
              /**
               * Creates a TargetSite.
               *
               * Create a request for the method "targetSites.create".
               *
               * This request holds the parameters needed by the discoveryengine server.  After setting any
               * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
               *
               * @param parent Required. Parent resource name of TargetSite, such as `projects/{project}/locations/{location}/colle
               *        ctions/{collection}/dataStores/{data_store}/siteSearchEngine`.
               * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaTargetSite}
               * @return the request
               */
              public Create create(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaTargetSite content) throws java.io.IOException {
                Create result = new Create(parent, content);
                initialize(result);
                return result;
              }

              public class Create extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

                private static final String REST_PATH = "v1alpha/{+parent}/targetSites";

                private final java.util.regex.Pattern PARENT_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine$");

                /**
                 * Creates a TargetSite.
                 *
                 * Create a request for the method "targetSites.create".
                 *
                 * This request holds the parameters needed by the the discoveryengine server.  After setting any
                 * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
                 * <p> {@link
                 * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                 * be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param parent Required. Parent resource name of TargetSite, such as `projects/{project}/locations/{location}/colle
               *        ctions/{collection}/dataStores/{data_store}/siteSearchEngine`.
                 * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaTargetSite}
                 * @since 1.13
                 */
                protected Create(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaTargetSite content) {
                  super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
                  this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine$");
                  }
                }

                @Override
                public Create set$Xgafv(java.lang.String $Xgafv) {
                  return (Create) super.set$Xgafv($Xgafv);
                }

                @Override
                public Create setAccessToken(java.lang.String accessToken) {
                  return (Create) super.setAccessToken(accessToken);
                }

                @Override
                public Create setAlt(java.lang.String alt) {
                  return (Create) super.setAlt(alt);
                }

                @Override
                public Create setCallback(java.lang.String callback) {
                  return (Create) super.setCallback(callback);
                }

                @Override
                public Create setFields(java.lang.String fields) {
                  return (Create) super.setFields(fields);
                }

                @Override
                public Create setKey(java.lang.String key) {
                  return (Create) super.setKey(key);
                }

                @Override
                public Create setOauthToken(java.lang.String oauthToken) {
                  return (Create) super.setOauthToken(oauthToken);
                }

                @Override
                public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Create) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Create setQuotaUser(java.lang.String quotaUser) {
                  return (Create) super.setQuotaUser(quotaUser);
                }

                @Override
                public Create setUploadType(java.lang.String uploadType) {
                  return (Create) super.setUploadType(uploadType);
                }

                @Override
                public Create setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Create) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. Parent resource name of TargetSite, such as `projects/{project}/locatio
                 * ns/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`.
                 */
                @com.google.api.client.util.Key
                private java.lang.String parent;

                /** Required. Parent resource name of TargetSite, such as `projects/{project}/locations/{location}/coll
               ections/{collection}/dataStores/{data_store}/siteSearchEngine`.
                 */
                public java.lang.String getParent() {
                  return parent;
                }

                /**
                 * Required. Parent resource name of TargetSite, such as `projects/{project}/locatio
                 * ns/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`.
                 */
                public Create setParent(java.lang.String parent) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine$");
                  }
                  this.parent = parent;
                  return this;
                }

                @Override
                public Create set(String parameterName, Object value) {
                  return (Create) super.set(parameterName, value);
                }
              }
              /**
               * Deletes a TargetSite.
               *
               * Create a request for the method "targetSites.delete".
               *
               * This request holds the parameters needed by the discoveryengine server.  After setting any
               * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               *
               * @param name Required. Full resource name of TargetSite, such as `projects/{project}/locations/{location}/collect
               *        ions/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}`. If
               *        the caller does not have permission to access the TargetSite, regardless of whether or not
               *        it exists, a PERMISSION_DENIED error is returned. If the requested TargetSite does not
               *        exist, a NOT_FOUND error is returned.
               * @return the request
               */
              public Delete delete(java.lang.String name) throws java.io.IOException {
                Delete result = new Delete(name);
                initialize(result);
                return result;
              }

              public class Delete extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

                private static final String REST_PATH = "v1alpha/{+name}";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine/targetSites/[^/]+$");

                /**
                 * Deletes a TargetSite.
                 *
                 * Create a request for the method "targetSites.delete".
                 *
                 * This request holds the parameters needed by the the discoveryengine server.  After setting any
                 * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
                 * <p> {@link
                 * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                 * be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name Required. Full resource name of TargetSite, such as `projects/{project}/locations/{location}/collect
               *        ions/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}`. If
               *        the caller does not have permission to access the TargetSite, regardless of whether or not
               *        it exists, a PERMISSION_DENIED error is returned. If the requested TargetSite does not
               *        exist, a NOT_FOUND error is returned.
                 * @since 1.13
                 */
                protected Delete(java.lang.String name) {
                  super(DiscoveryEngine.this, "DELETE", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine/targetSites/[^/]+$");
                  }
                }

                @Override
                public Delete set$Xgafv(java.lang.String $Xgafv) {
                  return (Delete) super.set$Xgafv($Xgafv);
                }

                @Override
                public Delete setAccessToken(java.lang.String accessToken) {
                  return (Delete) super.setAccessToken(accessToken);
                }

                @Override
                public Delete setAlt(java.lang.String alt) {
                  return (Delete) super.setAlt(alt);
                }

                @Override
                public Delete setCallback(java.lang.String callback) {
                  return (Delete) super.setCallback(callback);
                }

                @Override
                public Delete setFields(java.lang.String fields) {
                  return (Delete) super.setFields(fields);
                }

                @Override
                public Delete setKey(java.lang.String key) {
                  return (Delete) super.setKey(key);
                }

                @Override
                public Delete setOauthToken(java.lang.String oauthToken) {
                  return (Delete) super.setOauthToken(oauthToken);
                }

                @Override
                public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Delete) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Delete setQuotaUser(java.lang.String quotaUser) {
                  return (Delete) super.setQuotaUser(quotaUser);
                }

                @Override
                public Delete setUploadType(java.lang.String uploadType) {
                  return (Delete) super.setUploadType(uploadType);
                }

                @Override
                public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Delete) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. Full resource name of TargetSite, such as `projects/{project}/locations
                 * /{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/tar
                 * getSites/{target_site}`. If the caller does not have permission to access the
                 * TargetSite, regardless of whether or not it exists, a PERMISSION_DENIED error is
                 * returned. If the requested TargetSite does not exist, a NOT_FOUND error is
                 * returned.
                 */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** Required. Full resource name of TargetSite, such as `projects/{project}/locations/{location}/collec
               tions/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}`. If the
               caller does not have permission to access the TargetSite, regardless of whether or not it exists, a
               PERMISSION_DENIED error is returned. If the requested TargetSite does not exist, a NOT_FOUND error
               is returned.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /**
                 * Required. Full resource name of TargetSite, such as `projects/{project}/locations
                 * /{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/tar
                 * getSites/{target_site}`. If the caller does not have permission to access the
                 * TargetSite, regardless of whether or not it exists, a PERMISSION_DENIED error is
                 * returned. If the requested TargetSite does not exist, a NOT_FOUND error is
                 * returned.
                 */
                public Delete setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine/targetSites/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                @Override
                public Delete set(String parameterName, Object value) {
                  return (Delete) super.set(parameterName, value);
                }
              }
              /**
               * Gets a TargetSite.
               *
               * Create a request for the method "targetSites.get".
               *
               * This request holds the parameters needed by the discoveryengine server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
               *
               * @param name Required. Full resource name of TargetSite, such as `projects/{project}/locations/{location}/collect
               *        ions/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}`. If
               *        the caller does not have permission to access the TargetSite, regardless of whether or not
               *        it exists, a PERMISSION_DENIED error is returned. If the requested TargetSite does not
               *        exist, a NOT_FOUND error is returned.
               * @return the request
               */
              public Get get(java.lang.String name) throws java.io.IOException {
                Get result = new Get(name);
                initialize(result);
                return result;
              }

              public class Get extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaTargetSite> {

                private static final String REST_PATH = "v1alpha/{+name}";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine/targetSites/[^/]+$");

                /**
                 * Gets a TargetSite.
                 *
                 * Create a request for the method "targetSites.get".
                 *
                 * This request holds the parameters needed by the the discoveryengine server.  After setting any
                 * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
                 * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name Required. Full resource name of TargetSite, such as `projects/{project}/locations/{location}/collect
               *        ions/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}`. If
               *        the caller does not have permission to access the TargetSite, regardless of whether or not
               *        it exists, a PERMISSION_DENIED error is returned. If the requested TargetSite does not
               *        exist, a NOT_FOUND error is returned.
                 * @since 1.13
                 */
                protected Get(java.lang.String name) {
                  super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaTargetSite.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine/targetSites/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public Get set$Xgafv(java.lang.String $Xgafv) {
                  return (Get) super.set$Xgafv($Xgafv);
                }

                @Override
                public Get setAccessToken(java.lang.String accessToken) {
                  return (Get) super.setAccessToken(accessToken);
                }

                @Override
                public Get setAlt(java.lang.String alt) {
                  return (Get) super.setAlt(alt);
                }

                @Override
                public Get setCallback(java.lang.String callback) {
                  return (Get) super.setCallback(callback);
                }

                @Override
                public Get setFields(java.lang.String fields) {
                  return (Get) super.setFields(fields);
                }

                @Override
                public Get setKey(java.lang.String key) {
                  return (Get) super.setKey(key);
                }

                @Override
                public Get setOauthToken(java.lang.String oauthToken) {
                  return (Get) super.setOauthToken(oauthToken);
                }

                @Override
                public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Get) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Get setQuotaUser(java.lang.String quotaUser) {
                  return (Get) super.setQuotaUser(quotaUser);
                }

                @Override
                public Get setUploadType(java.lang.String uploadType) {
                  return (Get) super.setUploadType(uploadType);
                }

                @Override
                public Get setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Get) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. Full resource name of TargetSite, such as `projects/{project}/locations
                 * /{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/tar
                 * getSites/{target_site}`. If the caller does not have permission to access the
                 * TargetSite, regardless of whether or not it exists, a PERMISSION_DENIED error is
                 * returned. If the requested TargetSite does not exist, a NOT_FOUND error is
                 * returned.
                 */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** Required. Full resource name of TargetSite, such as `projects/{project}/locations/{location}/collec
               tions/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}`. If the
               caller does not have permission to access the TargetSite, regardless of whether or not it exists, a
               PERMISSION_DENIED error is returned. If the requested TargetSite does not exist, a NOT_FOUND error
               is returned.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /**
                 * Required. Full resource name of TargetSite, such as `projects/{project}/locations
                 * /{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/tar
                 * getSites/{target_site}`. If the caller does not have permission to access the
                 * TargetSite, regardless of whether or not it exists, a PERMISSION_DENIED error is
                 * returned. If the requested TargetSite does not exist, a NOT_FOUND error is
                 * returned.
                 */
                public Get setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine/targetSites/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                @Override
                public Get set(String parameterName, Object value) {
                  return (Get) super.set(parameterName, value);
                }
              }
              /**
               * Gets a list of TargetSites.
               *
               * Create a request for the method "targetSites.list".
               *
               * This request holds the parameters needed by the discoveryengine server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
               *
               * @param parent Required. The parent site search engine resource name, such as `projects/{project}/locations/{locati
               *        on}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`. If the caller does
               *        not have permission to list TargetSites under this site search engine, regardless of
               *        whether or not this branch exists, a PERMISSION_DENIED error is returned.
               * @return the request
               */
              public List list(java.lang.String parent) throws java.io.IOException {
                List result = new List(parent);
                initialize(result);
                return result;
              }

              public class List extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaListTargetSitesResponse> {

                private static final String REST_PATH = "v1alpha/{+parent}/targetSites";

                private final java.util.regex.Pattern PARENT_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine$");

                /**
                 * Gets a list of TargetSites.
                 *
                 * Create a request for the method "targetSites.list".
                 *
                 * This request holds the parameters needed by the the discoveryengine server.  After setting any
                 * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
                 * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param parent Required. The parent site search engine resource name, such as `projects/{project}/locations/{locati
               *        on}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`. If the caller does
               *        not have permission to list TargetSites under this site search engine, regardless of
               *        whether or not this branch exists, a PERMISSION_DENIED error is returned.
                 * @since 1.13
                 */
                protected List(java.lang.String parent) {
                  super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaListTargetSitesResponse.class);
                  this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public List set$Xgafv(java.lang.String $Xgafv) {
                  return (List) super.set$Xgafv($Xgafv);
                }

                @Override
                public List setAccessToken(java.lang.String accessToken) {
                  return (List) super.setAccessToken(accessToken);
                }

                @Override
                public List setAlt(java.lang.String alt) {
                  return (List) super.setAlt(alt);
                }

                @Override
                public List setCallback(java.lang.String callback) {
                  return (List) super.setCallback(callback);
                }

                @Override
                public List setFields(java.lang.String fields) {
                  return (List) super.setFields(fields);
                }

                @Override
                public List setKey(java.lang.String key) {
                  return (List) super.setKey(key);
                }

                @Override
                public List setOauthToken(java.lang.String oauthToken) {
                  return (List) super.setOauthToken(oauthToken);
                }

                @Override
                public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (List) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public List setQuotaUser(java.lang.String quotaUser) {
                  return (List) super.setQuotaUser(quotaUser);
                }

                @Override
                public List setUploadType(java.lang.String uploadType) {
                  return (List) super.setUploadType(uploadType);
                }

                @Override
                public List setUploadProtocol(java.lang.String uploadProtocol) {
                  return (List) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The parent site search engine resource name, such as `projects/{project
                 * }/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearc
                 * hEngine`. If the caller does not have permission to list TargetSites under this
                 * site search engine, regardless of whether or not this branch exists, a
                 * PERMISSION_DENIED error is returned.
                 */
                @com.google.api.client.util.Key
                private java.lang.String parent;

                /** Required. The parent site search engine resource name, such as `projects/{project}/locations/{locat
               ion}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`. If the caller does not
               have permission to list TargetSites under this site search engine, regardless of whether or not
               this branch exists, a PERMISSION_DENIED error is returned.
                 */
                public java.lang.String getParent() {
                  return parent;
                }

                /**
                 * Required. The parent site search engine resource name, such as `projects/{project
                 * }/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearc
                 * hEngine`. If the caller does not have permission to list TargetSites under this
                 * site search engine, regardless of whether or not this branch exists, a
                 * PERMISSION_DENIED error is returned.
                 */
                public List setParent(java.lang.String parent) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine$");
                  }
                  this.parent = parent;
                  return this;
                }

                /**
                 * Requested page size. Server may return fewer items than requested. If
                 * unspecified, server will pick an appropriate default. The maximum value is 1000;
                 * values above 1000 will be coerced to 1000. If this field is negative, an
                 * INVALID_ARGUMENT error is returned.
                 */
                @com.google.api.client.util.Key
                private java.lang.Integer pageSize;

                /** Requested page size. Server may return fewer items than requested. If unspecified, server will pick
               an appropriate default. The maximum value is 1000; values above 1000 will be coerced to 1000. If
               this field is negative, an INVALID_ARGUMENT error is returned.
                 */
                public java.lang.Integer getPageSize() {
                  return pageSize;
                }

                /**
                 * Requested page size. Server may return fewer items than requested. If
                 * unspecified, server will pick an appropriate default. The maximum value is 1000;
                 * values above 1000 will be coerced to 1000. If this field is negative, an
                 * INVALID_ARGUMENT error is returned.
                 */
                public List setPageSize(java.lang.Integer pageSize) {
                  this.pageSize = pageSize;
                  return this;
                }

                /**
                 * A page token, received from a previous `ListTargetSites` call. Provide this to
                 * retrieve the subsequent page. When paginating, all other parameters provided to
                 * `ListTargetSites` must match the call that provided the page token.
                 */
                @com.google.api.client.util.Key
                private java.lang.String pageToken;

                /** A page token, received from a previous `ListTargetSites` call. Provide this to retrieve the
               subsequent page. When paginating, all other parameters provided to `ListTargetSites` must match the
               call that provided the page token.
                 */
                public java.lang.String getPageToken() {
                  return pageToken;
                }

                /**
                 * A page token, received from a previous `ListTargetSites` call. Provide this to
                 * retrieve the subsequent page. When paginating, all other parameters provided to
                 * `ListTargetSites` must match the call that provided the page token.
                 */
                public List setPageToken(java.lang.String pageToken) {
                  this.pageToken = pageToken;
                  return this;
                }

                @Override
                public List set(String parameterName, Object value) {
                  return (List) super.set(parameterName, value);
                }
              }
              /**
               * Updates a TargetSite.
               *
               * Create a request for the method "targetSites.patch".
               *
               * This request holds the parameters needed by the discoveryengine server.  After setting any
               * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
               *
               * @param name Output only. The fully qualified resource name of the target site. `projects/{project}/locations/{lo
               *        cation}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{tar
               *        get_site}` The `target_site_id` is system-generated.
               * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaTargetSite}
               * @return the request
               */
              public Patch patch(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaTargetSite content) throws java.io.IOException {
                Patch result = new Patch(name, content);
                initialize(result);
                return result;
              }

              public class Patch extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

                private static final String REST_PATH = "v1alpha/{+name}";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine/targetSites/[^/]+$");

                /**
                 * Updates a TargetSite.
                 *
                 * Create a request for the method "targetSites.patch".
                 *
                 * This request holds the parameters needed by the the discoveryengine server.  After setting any
                 * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
                 * <p> {@link
                 * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                 * be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name Output only. The fully qualified resource name of the target site. `projects/{project}/locations/{lo
               *        cation}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{tar
               *        get_site}` The `target_site_id` is system-generated.
                 * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaTargetSite}
                 * @since 1.13
                 */
                protected Patch(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaTargetSite content) {
                  super(DiscoveryEngine.this, "PATCH", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine/targetSites/[^/]+$");
                  }
                }

                @Override
                public Patch set$Xgafv(java.lang.String $Xgafv) {
                  return (Patch) super.set$Xgafv($Xgafv);
                }

                @Override
                public Patch setAccessToken(java.lang.String accessToken) {
                  return (Patch) super.setAccessToken(accessToken);
                }

                @Override
                public Patch setAlt(java.lang.String alt) {
                  return (Patch) super.setAlt(alt);
                }

                @Override
                public Patch setCallback(java.lang.String callback) {
                  return (Patch) super.setCallback(callback);
                }

                @Override
                public Patch setFields(java.lang.String fields) {
                  return (Patch) super.setFields(fields);
                }

                @Override
                public Patch setKey(java.lang.String key) {
                  return (Patch) super.setKey(key);
                }

                @Override
                public Patch setOauthToken(java.lang.String oauthToken) {
                  return (Patch) super.setOauthToken(oauthToken);
                }

                @Override
                public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Patch) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Patch setQuotaUser(java.lang.String quotaUser) {
                  return (Patch) super.setQuotaUser(quotaUser);
                }

                @Override
                public Patch setUploadType(java.lang.String uploadType) {
                  return (Patch) super.setUploadType(uploadType);
                }

                @Override
                public Patch setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Patch) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Output only. The fully qualified resource name of the target site. `projects/{pro
                 * ject}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteS
                 * earchEngine/targetSites/{target_site}` The `target_site_id` is system-generated.
                 */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** Output only. The fully qualified resource name of the target site. `projects/{project}/locations/{l
               ocation}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site
               }` The `target_site_id` is system-generated.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /**
                 * Output only. The fully qualified resource name of the target site. `projects/{pro
                 * ject}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteS
                 * earchEngine/targetSites/{target_site}` The `target_site_id` is system-generated.
                 */
                public Patch setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine/targetSites/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                @Override
                public Patch set(String parameterName, Object value) {
                  return (Patch) super.set(parameterName, value);
                }
              }

              /**
               * An accessor for creating requests from the Operations collection.
               *
               * <p>The typical use is:</p>
               * <pre>
               *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
               *   {@code DiscoveryEngine.Operations.List request = discoveryengine.operations().list(parameters ...)}
               * </pre>
               *
               * @return the resource collection
               */
              public Operations operations() {
                return new Operations();
              }

              /**
               * The "operations" collection of methods.
               */
              public class Operations {

                /**
                 * Gets the latest state of a long-running operation. Clients can use this method to poll the
                 * operation result at intervals as recommended by the API service.
                 *
                 * Create a request for the method "operations.get".
                 *
                 * This request holds the parameters needed by the discoveryengine server.  After setting any
                 * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
                 *
                 * @param name The name of the operation resource.
                 * @return the request
                 */
                public Get get(java.lang.String name) throws java.io.IOException {
                  Get result = new Get(name);
                  initialize(result);
                  return result;
                }

                public class Get extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

                  private static final String REST_PATH = "v1alpha/{+name}";

                  private final java.util.regex.Pattern NAME_PATTERN =
                      java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine/targetSites/operations/[^/]+$");

                  /**
                   * Gets the latest state of a long-running operation. Clients can use this method to poll the
                   * operation result at intervals as recommended by the API service.
                   *
                   * Create a request for the method "operations.get".
                   *
                   * This request holds the parameters needed by the the discoveryengine server.  After setting any
                   * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
                   * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                   * must be called to initialize this instance immediately after invoking the constructor. </p>
                   *
                   * @param name The name of the operation resource.
                   * @since 1.13
                   */
                  protected Get(java.lang.String name) {
                    super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
                    this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                          "Parameter name must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine/targetSites/operations/[^/]+$");
                    }
                  }

                  @Override
                  public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                    return super.executeUsingHead();
                  }

                  @Override
                  public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                    return super.buildHttpRequestUsingHead();
                  }

                  @Override
                  public Get set$Xgafv(java.lang.String $Xgafv) {
                    return (Get) super.set$Xgafv($Xgafv);
                  }

                  @Override
                  public Get setAccessToken(java.lang.String accessToken) {
                    return (Get) super.setAccessToken(accessToken);
                  }

                  @Override
                  public Get setAlt(java.lang.String alt) {
                    return (Get) super.setAlt(alt);
                  }

                  @Override
                  public Get setCallback(java.lang.String callback) {
                    return (Get) super.setCallback(callback);
                  }

                  @Override
                  public Get setFields(java.lang.String fields) {
                    return (Get) super.setFields(fields);
                  }

                  @Override
                  public Get setKey(java.lang.String key) {
                    return (Get) super.setKey(key);
                  }

                  @Override
                  public Get setOauthToken(java.lang.String oauthToken) {
                    return (Get) super.setOauthToken(oauthToken);
                  }

                  @Override
                  public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                    return (Get) super.setPrettyPrint(prettyPrint);
                  }

                  @Override
                  public Get setQuotaUser(java.lang.String quotaUser) {
                    return (Get) super.setQuotaUser(quotaUser);
                  }

                  @Override
                  public Get setUploadType(java.lang.String uploadType) {
                    return (Get) super.setUploadType(uploadType);
                  }

                  @Override
                  public Get setUploadProtocol(java.lang.String uploadProtocol) {
                    return (Get) super.setUploadProtocol(uploadProtocol);
                  }

                  /** The name of the operation resource. */
                  @com.google.api.client.util.Key
                  private java.lang.String name;

                  /** The name of the operation resource.
                   */
                  public java.lang.String getName() {
                    return name;
                  }

                  /** The name of the operation resource. */
                  public Get setName(java.lang.String name) {
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                          "Parameter name must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine/targetSites/operations/[^/]+$");
                    }
                    this.name = name;
                    return this;
                  }

                  @Override
                  public Get set(String parameterName, Object value) {
                    return (Get) super.set(parameterName, value);
                  }
                }
                /**
                 * Lists operations that match the specified filter in the request. If the server doesn't support
                 * this method, it returns `UNIMPLEMENTED`.
                 *
                 * Create a request for the method "operations.list".
                 *
                 * This request holds the parameters needed by the discoveryengine server.  After setting any
                 * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
                 *
                 * @param name The name of the operation's parent resource.
                 * @return the request
                 */
                public List list(java.lang.String name) throws java.io.IOException {
                  List result = new List(name);
                  initialize(result);
                  return result;
                }

                public class List extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningListOperationsResponse> {

                  private static final String REST_PATH = "v1alpha/{+name}/operations";

                  private final java.util.regex.Pattern NAME_PATTERN =
                      java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine/targetSites$");

                  /**
                   * Lists operations that match the specified filter in the request. If the server doesn't support
                   * this method, it returns `UNIMPLEMENTED`.
                   *
                   * Create a request for the method "operations.list".
                   *
                   * This request holds the parameters needed by the the discoveryengine server.  After setting any
                   * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
                   * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                   * must be called to initialize this instance immediately after invoking the constructor. </p>
                   *
                   * @param name The name of the operation's parent resource.
                   * @since 1.13
                   */
                  protected List(java.lang.String name) {
                    super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningListOperationsResponse.class);
                    this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                          "Parameter name must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine/targetSites$");
                    }
                  }

                  @Override
                  public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                    return super.executeUsingHead();
                  }

                  @Override
                  public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                    return super.buildHttpRequestUsingHead();
                  }

                  @Override
                  public List set$Xgafv(java.lang.String $Xgafv) {
                    return (List) super.set$Xgafv($Xgafv);
                  }

                  @Override
                  public List setAccessToken(java.lang.String accessToken) {
                    return (List) super.setAccessToken(accessToken);
                  }

                  @Override
                  public List setAlt(java.lang.String alt) {
                    return (List) super.setAlt(alt);
                  }

                  @Override
                  public List setCallback(java.lang.String callback) {
                    return (List) super.setCallback(callback);
                  }

                  @Override
                  public List setFields(java.lang.String fields) {
                    return (List) super.setFields(fields);
                  }

                  @Override
                  public List setKey(java.lang.String key) {
                    return (List) super.setKey(key);
                  }

                  @Override
                  public List setOauthToken(java.lang.String oauthToken) {
                    return (List) super.setOauthToken(oauthToken);
                  }

                  @Override
                  public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                    return (List) super.setPrettyPrint(prettyPrint);
                  }

                  @Override
                  public List setQuotaUser(java.lang.String quotaUser) {
                    return (List) super.setQuotaUser(quotaUser);
                  }

                  @Override
                  public List setUploadType(java.lang.String uploadType) {
                    return (List) super.setUploadType(uploadType);
                  }

                  @Override
                  public List setUploadProtocol(java.lang.String uploadProtocol) {
                    return (List) super.setUploadProtocol(uploadProtocol);
                  }

                  /** The name of the operation's parent resource. */
                  @com.google.api.client.util.Key
                  private java.lang.String name;

                  /** The name of the operation's parent resource.
                   */
                  public java.lang.String getName() {
                    return name;
                  }

                  /** The name of the operation's parent resource. */
                  public List setName(java.lang.String name) {
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                          "Parameter name must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine/targetSites$");
                    }
                    this.name = name;
                    return this;
                  }

                  /** The standard list filter. */
                  @com.google.api.client.util.Key
                  private java.lang.String filter;

                  /** The standard list filter.
                   */
                  public java.lang.String getFilter() {
                    return filter;
                  }

                  /** The standard list filter. */
                  public List setFilter(java.lang.String filter) {
                    this.filter = filter;
                    return this;
                  }

                  /** The standard list page size. */
                  @com.google.api.client.util.Key
                  private java.lang.Integer pageSize;

                  /** The standard list page size.
                   */
                  public java.lang.Integer getPageSize() {
                    return pageSize;
                  }

                  /** The standard list page size. */
                  public List setPageSize(java.lang.Integer pageSize) {
                    this.pageSize = pageSize;
                    return this;
                  }

                  /** The standard list page token. */
                  @com.google.api.client.util.Key
                  private java.lang.String pageToken;

                  /** The standard list page token.
                   */
                  public java.lang.String getPageToken() {
                    return pageToken;
                  }

                  /** The standard list page token. */
                  public List setPageToken(java.lang.String pageToken) {
                    this.pageToken = pageToken;
                    return this;
                  }

                  @Override
                  public List set(String parameterName, Object value) {
                    return (List) super.set(parameterName, value);
                  }
                }

              }
            }
          }
          /**
           * An accessor for creating requests from the SuggestionDenyListEntries collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
           *   {@code DiscoveryEngine.SuggestionDenyListEntries.List request = discoveryengine.suggestionDenyListEntries().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public SuggestionDenyListEntries suggestionDenyListEntries() {
            return new SuggestionDenyListEntries();
          }

          /**
           * The "suggestionDenyListEntries" collection of methods.
           */
          public class SuggestionDenyListEntries {

            /**
             * Imports all SuggestionDenyListEntry for a DataStore.
             *
             * Create a request for the method "suggestionDenyListEntries.import".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link DiscoveryEngineImport#execute()} method to invoke the remote
             * operation.
             *
             * @param parent Required. The parent data store resource name for which to import denylist entries. Follows pattern
             *        projects/locations/collections/dataStores.
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesRequest}
             * @return the request
             */
            public DiscoveryEngineImport discoveryengineImport(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesRequest content) throws java.io.IOException {
              DiscoveryEngineImport result = new DiscoveryEngineImport(parent, content);
              initialize(result);
              return result;
            }

            public class DiscoveryEngineImport extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1alpha/{+parent}/suggestionDenyListEntries:import";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");

              /**
               * Imports all SuggestionDenyListEntry for a DataStore.
               *
               * Create a request for the method "suggestionDenyListEntries.import".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link DiscoveryEngineImport#execute()} method to invoke the
               * remote operation. <p> {@link DiscoveryEngineImport#initialize(com.google.api.client.googleapis.
               * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
               * after invoking the constructor. </p>
               *
               * @param parent Required. The parent data store resource name for which to import denylist entries. Follows pattern
             *        projects/locations/collections/dataStores.
               * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesRequest}
               * @since 1.13
               */
              protected DiscoveryEngineImport(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesRequest content) {
                super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");
                }
              }

              @Override
              public DiscoveryEngineImport set$Xgafv(java.lang.String $Xgafv) {
                return (DiscoveryEngineImport) super.set$Xgafv($Xgafv);
              }

              @Override
              public DiscoveryEngineImport setAccessToken(java.lang.String accessToken) {
                return (DiscoveryEngineImport) super.setAccessToken(accessToken);
              }

              @Override
              public DiscoveryEngineImport setAlt(java.lang.String alt) {
                return (DiscoveryEngineImport) super.setAlt(alt);
              }

              @Override
              public DiscoveryEngineImport setCallback(java.lang.String callback) {
                return (DiscoveryEngineImport) super.setCallback(callback);
              }

              @Override
              public DiscoveryEngineImport setFields(java.lang.String fields) {
                return (DiscoveryEngineImport) super.setFields(fields);
              }

              @Override
              public DiscoveryEngineImport setKey(java.lang.String key) {
                return (DiscoveryEngineImport) super.setKey(key);
              }

              @Override
              public DiscoveryEngineImport setOauthToken(java.lang.String oauthToken) {
                return (DiscoveryEngineImport) super.setOauthToken(oauthToken);
              }

              @Override
              public DiscoveryEngineImport setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (DiscoveryEngineImport) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public DiscoveryEngineImport setQuotaUser(java.lang.String quotaUser) {
                return (DiscoveryEngineImport) super.setQuotaUser(quotaUser);
              }

              @Override
              public DiscoveryEngineImport setUploadType(java.lang.String uploadType) {
                return (DiscoveryEngineImport) super.setUploadType(uploadType);
              }

              @Override
              public DiscoveryEngineImport setUploadProtocol(java.lang.String uploadProtocol) {
                return (DiscoveryEngineImport) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The parent data store resource name for which to import denylist entries.
               * Follows pattern projects/locations/collections/dataStores.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The parent data store resource name for which to import denylist entries. Follows pattern
             projects/locations/collections/dataStores.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The parent data store resource name for which to import denylist entries.
               * Follows pattern projects/locations/collections/dataStores.
               */
              public DiscoveryEngineImport setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public DiscoveryEngineImport set(String parameterName, Object value) {
                return (DiscoveryEngineImport) super.set(parameterName, value);
              }
            }
            /**
             * Permanently deletes all SuggestionDenyListEntry for a DataStore.
             *
             * Create a request for the method "suggestionDenyListEntries.purge".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Purge#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The parent data store resource name for which to import denylist entries. Follows pattern
             *        projects/locations/collections/dataStores.
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaPurgeSuggestionDenyListEntriesRequest}
             * @return the request
             */
            public Purge purge(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaPurgeSuggestionDenyListEntriesRequest content) throws java.io.IOException {
              Purge result = new Purge(parent, content);
              initialize(result);
              return result;
            }

            public class Purge extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1alpha/{+parent}/suggestionDenyListEntries:purge";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");

              /**
               * Permanently deletes all SuggestionDenyListEntry for a DataStore.
               *
               * Create a request for the method "suggestionDenyListEntries.purge".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Purge#execute()} method to invoke the remote operation.
               * <p> {@link
               * Purge#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The parent data store resource name for which to import denylist entries. Follows pattern
             *        projects/locations/collections/dataStores.
               * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaPurgeSuggestionDenyListEntriesRequest}
               * @since 1.13
               */
              protected Purge(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaPurgeSuggestionDenyListEntriesRequest content) {
                super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");
                }
              }

              @Override
              public Purge set$Xgafv(java.lang.String $Xgafv) {
                return (Purge) super.set$Xgafv($Xgafv);
              }

              @Override
              public Purge setAccessToken(java.lang.String accessToken) {
                return (Purge) super.setAccessToken(accessToken);
              }

              @Override
              public Purge setAlt(java.lang.String alt) {
                return (Purge) super.setAlt(alt);
              }

              @Override
              public Purge setCallback(java.lang.String callback) {
                return (Purge) super.setCallback(callback);
              }

              @Override
              public Purge setFields(java.lang.String fields) {
                return (Purge) super.setFields(fields);
              }

              @Override
              public Purge setKey(java.lang.String key) {
                return (Purge) super.setKey(key);
              }

              @Override
              public Purge setOauthToken(java.lang.String oauthToken) {
                return (Purge) super.setOauthToken(oauthToken);
              }

              @Override
              public Purge setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Purge) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Purge setQuotaUser(java.lang.String quotaUser) {
                return (Purge) super.setQuotaUser(quotaUser);
              }

              @Override
              public Purge setUploadType(java.lang.String uploadType) {
                return (Purge) super.setUploadType(uploadType);
              }

              @Override
              public Purge setUploadProtocol(java.lang.String uploadProtocol) {
                return (Purge) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The parent data store resource name for which to import denylist entries.
               * Follows pattern projects/locations/collections/dataStores.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The parent data store resource name for which to import denylist entries. Follows pattern
             projects/locations/collections/dataStores.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The parent data store resource name for which to import denylist entries.
               * Follows pattern projects/locations/collections/dataStores.
               */
              public Purge setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public Purge set(String parameterName, Object value) {
                return (Purge) super.set(parameterName, value);
              }
            }

          }
          /**
           * An accessor for creating requests from the UserEvents collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
           *   {@code DiscoveryEngine.UserEvents.List request = discoveryengine.userEvents().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public UserEvents userEvents() {
            return new UserEvents();
          }

          /**
           * The "userEvents" collection of methods.
           */
          public class UserEvents {

            /**
             * Writes a single user event from the browser. This uses a GET request to due to browser
             * restriction of POST-ing to a third-party domain. This method is used only by the Discovery Engine
             * API JavaScript pixel and Google Tag Manager. Users should not call this method directly.
             *
             * Create a request for the method "userEvents.collect".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Collect#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The parent DataStore resource name, such as
             *        `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`
             *        .
             * @return the request
             */
            public Collect collect(java.lang.String parent) throws java.io.IOException {
              Collect result = new Collect(parent);
              initialize(result);
              return result;
            }

            public class Collect extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleApiHttpBody> {

              private static final String REST_PATH = "v1alpha/{+parent}/userEvents:collect";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");

              /**
               * Writes a single user event from the browser. This uses a GET request to due to browser
               * restriction of POST-ing to a third-party domain. This method is used only by the Discovery
               * Engine API JavaScript pixel and Google Tag Manager. Users should not call this method directly.
               *
               * Create a request for the method "userEvents.collect".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Collect#execute()} method to invoke the remote operation.
               * <p> {@link
               * Collect#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The parent DataStore resource name, such as
             *        `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`
             *        .
               * @since 1.13
               */
              protected Collect(java.lang.String parent) {
                super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleApiHttpBody.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Collect set$Xgafv(java.lang.String $Xgafv) {
                return (Collect) super.set$Xgafv($Xgafv);
              }

              @Override
              public Collect setAccessToken(java.lang.String accessToken) {
                return (Collect) super.setAccessToken(accessToken);
              }

              @Override
              public Collect setAlt(java.lang.String alt) {
                return (Collect) super.setAlt(alt);
              }

              @Override
              public Collect setCallback(java.lang.String callback) {
                return (Collect) super.setCallback(callback);
              }

              @Override
              public Collect setFields(java.lang.String fields) {
                return (Collect) super.setFields(fields);
              }

              @Override
              public Collect setKey(java.lang.String key) {
                return (Collect) super.setKey(key);
              }

              @Override
              public Collect setOauthToken(java.lang.String oauthToken) {
                return (Collect) super.setOauthToken(oauthToken);
              }

              @Override
              public Collect setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Collect) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Collect setQuotaUser(java.lang.String quotaUser) {
                return (Collect) super.setQuotaUser(quotaUser);
              }

              @Override
              public Collect setUploadType(java.lang.String uploadType) {
                return (Collect) super.setUploadType(uploadType);
              }

              @Override
              public Collect setUploadProtocol(java.lang.String uploadProtocol) {
                return (Collect) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The parent DataStore resource name, such as `projects/{project}/locations
               * /{location}/collections/{collection}/dataStores/{data_store}`.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The parent DataStore resource name, such as
             `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The parent DataStore resource name, such as `projects/{project}/locations
               * /{location}/collections/{collection}/dataStores/{data_store}`.
               */
              public Collect setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * The event timestamp in milliseconds. This prevents browser caching of otherwise
               * identical get requests. The name is abbreviated to reduce the payload bytes.
               */
              @com.google.api.client.util.Key
              private java.lang.Long ets;

              /** The event timestamp in milliseconds. This prevents browser caching of otherwise identical get
             requests. The name is abbreviated to reduce the payload bytes.
               */
              public java.lang.Long getEts() {
                return ets;
              }

              /**
               * The event timestamp in milliseconds. This prevents browser caching of otherwise
               * identical get requests. The name is abbreviated to reduce the payload bytes.
               */
              public Collect setEts(java.lang.Long ets) {
                this.ets = ets;
                return this;
              }

              /**
               * The URL including cgi-parameters but excluding the hash fragment with a length
               * limit of 5,000 characters. This is often more useful than the referer URL, because
               * many browsers only send the domain for third-party requests.
               */
              @com.google.api.client.util.Key
              private java.lang.String uri;

              /** The URL including cgi-parameters but excluding the hash fragment with a length limit of 5,000
             characters. This is often more useful than the referer URL, because many browsers only send the
             domain for third-party requests.
               */
              public java.lang.String getUri() {
                return uri;
              }

              /**
               * The URL including cgi-parameters but excluding the hash fragment with a length
               * limit of 5,000 characters. This is often more useful than the referer URL, because
               * many browsers only send the domain for third-party requests.
               */
              public Collect setUri(java.lang.String uri) {
                this.uri = uri;
                return this;
              }

              /**
               * Required. URL encoded UserEvent proto with a length limit of 2,000,000 characters.
               */
              @com.google.api.client.util.Key
              private java.lang.String userEvent;

              /** Required. URL encoded UserEvent proto with a length limit of 2,000,000 characters.
               */
              public java.lang.String getUserEvent() {
                return userEvent;
              }

              /**
               * Required. URL encoded UserEvent proto with a length limit of 2,000,000 characters.
               */
              public Collect setUserEvent(java.lang.String userEvent) {
                this.userEvent = userEvent;
                return this;
              }

              @Override
              public Collect set(String parameterName, Object value) {
                return (Collect) super.set(parameterName, value);
              }
            }
            /**
             * Bulk import of User events. Request processing might be synchronous. Events that already exist
             * are skipped. Use this method for backfilling historical user events. Operation.response is of
             * type ImportResponse. Note that it is possible for a subset of the items to be successfully
             * inserted. Operation.metadata is of type ImportMetadata.
             *
             * Create a request for the method "userEvents.import".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link DiscoveryEngineImport#execute()} method to invoke the remote
             * operation.
             *
             * @param parent Required. Parent DataStore resource name, of the form
             *        `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaImportUserEventsRequest}
             * @return the request
             */
            public DiscoveryEngineImport discoveryengineImport(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaImportUserEventsRequest content) throws java.io.IOException {
              DiscoveryEngineImport result = new DiscoveryEngineImport(parent, content);
              initialize(result);
              return result;
            }

            public class DiscoveryEngineImport extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1alpha/{+parent}/userEvents:import";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");

              /**
               * Bulk import of User events. Request processing might be synchronous. Events that already exist
               * are skipped. Use this method for backfilling historical user events. Operation.response is of
               * type ImportResponse. Note that it is possible for a subset of the items to be successfully
               * inserted. Operation.metadata is of type ImportMetadata.
               *
               * Create a request for the method "userEvents.import".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link DiscoveryEngineImport#execute()} method to invoke the
               * remote operation. <p> {@link DiscoveryEngineImport#initialize(com.google.api.client.googleapis.
               * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
               * after invoking the constructor. </p>
               *
               * @param parent Required. Parent DataStore resource name, of the form
             *        `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`
               * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaImportUserEventsRequest}
               * @since 1.13
               */
              protected DiscoveryEngineImport(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaImportUserEventsRequest content) {
                super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");
                }
              }

              @Override
              public DiscoveryEngineImport set$Xgafv(java.lang.String $Xgafv) {
                return (DiscoveryEngineImport) super.set$Xgafv($Xgafv);
              }

              @Override
              public DiscoveryEngineImport setAccessToken(java.lang.String accessToken) {
                return (DiscoveryEngineImport) super.setAccessToken(accessToken);
              }

              @Override
              public DiscoveryEngineImport setAlt(java.lang.String alt) {
                return (DiscoveryEngineImport) super.setAlt(alt);
              }

              @Override
              public DiscoveryEngineImport setCallback(java.lang.String callback) {
                return (DiscoveryEngineImport) super.setCallback(callback);
              }

              @Override
              public DiscoveryEngineImport setFields(java.lang.String fields) {
                return (DiscoveryEngineImport) super.setFields(fields);
              }

              @Override
              public DiscoveryEngineImport setKey(java.lang.String key) {
                return (DiscoveryEngineImport) super.setKey(key);
              }

              @Override
              public DiscoveryEngineImport setOauthToken(java.lang.String oauthToken) {
                return (DiscoveryEngineImport) super.setOauthToken(oauthToken);
              }

              @Override
              public DiscoveryEngineImport setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (DiscoveryEngineImport) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public DiscoveryEngineImport setQuotaUser(java.lang.String quotaUser) {
                return (DiscoveryEngineImport) super.setQuotaUser(quotaUser);
              }

              @Override
              public DiscoveryEngineImport setUploadType(java.lang.String uploadType) {
                return (DiscoveryEngineImport) super.setUploadType(uploadType);
              }

              @Override
              public DiscoveryEngineImport setUploadProtocol(java.lang.String uploadProtocol) {
                return (DiscoveryEngineImport) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. Parent DataStore resource name, of the form `projects/{project}/locations
               * /{location}/collections/{collection}/dataStores/{data_store}`
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. Parent DataStore resource name, of the form
             `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. Parent DataStore resource name, of the form `projects/{project}/locations
               * /{location}/collections/{collection}/dataStores/{data_store}`
               */
              public DiscoveryEngineImport setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public DiscoveryEngineImport set(String parameterName, Object value) {
                return (DiscoveryEngineImport) super.set(parameterName, value);
              }
            }
            /**
             * Deletes permanently all user events specified by the filter provided. Depending on the number of
             * events specified by the filter, this operation could take hours or days to complete. To test a
             * filter, use the list command first.
             *
             * Create a request for the method "userEvents.purge".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Purge#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The resource name of the catalog under which the events are created. The format is
             *        `projects/${projectId}/locations/global/collections/{$collectionId}/dataStores/${dataStore
             *        Id}`
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaPurgeUserEventsRequest}
             * @return the request
             */
            public Purge purge(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaPurgeUserEventsRequest content) throws java.io.IOException {
              Purge result = new Purge(parent, content);
              initialize(result);
              return result;
            }

            public class Purge extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1alpha/{+parent}/userEvents:purge";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");

              /**
               * Deletes permanently all user events specified by the filter provided. Depending on the number
               * of events specified by the filter, this operation could take hours or days to complete. To test
               * a filter, use the list command first.
               *
               * Create a request for the method "userEvents.purge".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Purge#execute()} method to invoke the remote operation.
               * <p> {@link
               * Purge#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The resource name of the catalog under which the events are created. The format is
             *        `projects/${projectId}/locations/global/collections/{$collectionId}/dataStores/${dataStore
             *        Id}`
               * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaPurgeUserEventsRequest}
               * @since 1.13
               */
              protected Purge(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaPurgeUserEventsRequest content) {
                super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");
                }
              }

              @Override
              public Purge set$Xgafv(java.lang.String $Xgafv) {
                return (Purge) super.set$Xgafv($Xgafv);
              }

              @Override
              public Purge setAccessToken(java.lang.String accessToken) {
                return (Purge) super.setAccessToken(accessToken);
              }

              @Override
              public Purge setAlt(java.lang.String alt) {
                return (Purge) super.setAlt(alt);
              }

              @Override
              public Purge setCallback(java.lang.String callback) {
                return (Purge) super.setCallback(callback);
              }

              @Override
              public Purge setFields(java.lang.String fields) {
                return (Purge) super.setFields(fields);
              }

              @Override
              public Purge setKey(java.lang.String key) {
                return (Purge) super.setKey(key);
              }

              @Override
              public Purge setOauthToken(java.lang.String oauthToken) {
                return (Purge) super.setOauthToken(oauthToken);
              }

              @Override
              public Purge setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Purge) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Purge setQuotaUser(java.lang.String quotaUser) {
                return (Purge) super.setQuotaUser(quotaUser);
              }

              @Override
              public Purge setUploadType(java.lang.String uploadType) {
                return (Purge) super.setUploadType(uploadType);
              }

              @Override
              public Purge setUploadProtocol(java.lang.String uploadProtocol) {
                return (Purge) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The resource name of the catalog under which the events are created. The
               * format is `projects/${projectId}/locations/global/collections/{$collectionId}/dataS
               * tores/${dataStoreId}`
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The resource name of the catalog under which the events are created. The format is
             `projects/${projectId}/locations/global/collections/{$collectionId}/dataStores/${dataStoreId}`
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The resource name of the catalog under which the events are created. The
               * format is `projects/${projectId}/locations/global/collections/{$collectionId}/dataS
               * tores/${dataStoreId}`
               */
              public Purge setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public Purge set(String parameterName, Object value) {
                return (Purge) super.set(parameterName, value);
              }
            }
            /**
             * Writes a single user event.
             *
             * Create a request for the method "userEvents.write".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Write#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The parent DataStore resource name, such as
             *        `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`
             *        .
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaUserEvent}
             * @return the request
             */
            public Write write(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaUserEvent content) throws java.io.IOException {
              Write result = new Write(parent, content);
              initialize(result);
              return result;
            }

            public class Write extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaUserEvent> {

              private static final String REST_PATH = "v1alpha/{+parent}/userEvents:write";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");

              /**
               * Writes a single user event.
               *
               * Create a request for the method "userEvents.write".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Write#execute()} method to invoke the remote operation.
               * <p> {@link
               * Write#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The parent DataStore resource name, such as
             *        `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`
             *        .
               * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaUserEvent}
               * @since 1.13
               */
              protected Write(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaUserEvent content) {
                super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaUserEvent.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");
                }
              }

              @Override
              public Write set$Xgafv(java.lang.String $Xgafv) {
                return (Write) super.set$Xgafv($Xgafv);
              }

              @Override
              public Write setAccessToken(java.lang.String accessToken) {
                return (Write) super.setAccessToken(accessToken);
              }

              @Override
              public Write setAlt(java.lang.String alt) {
                return (Write) super.setAlt(alt);
              }

              @Override
              public Write setCallback(java.lang.String callback) {
                return (Write) super.setCallback(callback);
              }

              @Override
              public Write setFields(java.lang.String fields) {
                return (Write) super.setFields(fields);
              }

              @Override
              public Write setKey(java.lang.String key) {
                return (Write) super.setKey(key);
              }

              @Override
              public Write setOauthToken(java.lang.String oauthToken) {
                return (Write) super.setOauthToken(oauthToken);
              }

              @Override
              public Write setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Write) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Write setQuotaUser(java.lang.String quotaUser) {
                return (Write) super.setQuotaUser(quotaUser);
              }

              @Override
              public Write setUploadType(java.lang.String uploadType) {
                return (Write) super.setUploadType(uploadType);
              }

              @Override
              public Write setUploadProtocol(java.lang.String uploadProtocol) {
                return (Write) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The parent DataStore resource name, such as `projects/{project}/locations
               * /{location}/collections/{collection}/dataStores/{data_store}`.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The parent DataStore resource name, such as
             `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The parent DataStore resource name, such as `projects/{project}/locations
               * /{location}/collections/{collection}/dataStores/{data_store}`.
               */
              public Write setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public Write set(String parameterName, Object value) {
                return (Write) super.set(parameterName, value);
              }
            }

          }
        }
        /**
         * An accessor for creating requests from the Engines collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
         *   {@code DiscoveryEngine.Engines.List request = discoveryengine.engines().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Engines engines() {
          return new Engines();
        }

        /**
         * The "engines" collection of methods.
         */
        public class Engines {

          /**
           * Creates a Engine.
           *
           * Create a request for the method "engines.create".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The parent resource name, such as
           *        `projects/{project}/locations/{location}/collections/{collection}`.
           * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaEngine}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaEngine content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1alpha/{+parent}/engines";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+$");

            /**
             * Creates a Engine.
             *
             * Create a request for the method "engines.create".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The parent resource name, such as
           *        `projects/{project}/locations/{location}/collections/{collection}`.
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaEngine}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaEngine content) {
              super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/collections/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The parent resource name, such as
             * `projects/{project}/locations/{location}/collections/{collection}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The parent resource name, such as
           `projects/{project}/locations/{location}/collections/{collection}`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The parent resource name, such as
             * `projects/{project}/locations/{location}/collections/{collection}`.
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/collections/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Required. The ID to use for the Engine, which will become the final component of the
             * Engine's resource name. This field must conform to
             * [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63
             * characters. Otherwise, an INVALID_ARGUMENT error is returned.
             */
            @com.google.api.client.util.Key
            private java.lang.String engineId;

            /** Required. The ID to use for the Engine, which will become the final component of the Engine's
           resource name. This field must conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard
           with a length limit of 63 characters. Otherwise, an INVALID_ARGUMENT error is returned.
             */
            public java.lang.String getEngineId() {
              return engineId;
            }

            /**
             * Required. The ID to use for the Engine, which will become the final component of the
             * Engine's resource name. This field must conform to
             * [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63
             * characters. Otherwise, an INVALID_ARGUMENT error is returned.
             */
            public Create setEngineId(java.lang.String engineId) {
              this.engineId = engineId;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a Engine.
           *
           * Create a request for the method "engines.delete".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. Full resource name of Engine, such as
           *        `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`.
           *        If the caller does not have permission to delete the Engine, regardless of whether or not
           *        it exists, a PERMISSION_DENIED error is returned. If the Engine to delete does not exist,
           *        a NOT_FOUND error is returned.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$");

            /**
             * Deletes a Engine.
             *
             * Create a request for the method "engines.delete".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Full resource name of Engine, such as
           *        `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`.
           *        If the caller does not have permission to delete the Engine, regardless of whether or not
           *        it exists, a PERMISSION_DENIED error is returned. If the Engine to delete does not exist,
           *        a NOT_FOUND error is returned.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(DiscoveryEngine.this, "DELETE", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Full resource name of Engine, such as `projects/{project}/locations/{locati
             * on}/collections/{collection_id}/engines/{engine_id}`. If the caller does not have
             * permission to delete the Engine, regardless of whether or not it exists, a
             * PERMISSION_DENIED error is returned. If the Engine to delete does not exist, a
             * NOT_FOUND error is returned.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Full resource name of Engine, such as
           `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`. If the
           caller does not have permission to delete the Engine, regardless of whether or not it exists, a
           PERMISSION_DENIED error is returned. If the Engine to delete does not exist, a NOT_FOUND error is
           returned.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Full resource name of Engine, such as `projects/{project}/locations/{locati
             * on}/collections/{collection_id}/engines/{engine_id}`. If the caller does not have
             * permission to delete the Engine, regardless of whether or not it exists, a
             * PERMISSION_DENIED error is returned. If the Engine to delete does not exist, a
             * NOT_FOUND error is returned.
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets a Engine.
           *
           * Create a request for the method "engines.get".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. Full resource name of Engine, such as
           *        `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaEngine> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$");

            /**
             * Gets a Engine.
             *
             * Create a request for the method "engines.get".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Full resource name of Engine, such as
           *        `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaEngine.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Full resource name of Engine, such as `projects/{project}/locations/{locati
             * on}/collections/{collection_id}/engines/{engine_id}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Full resource name of Engine, such as
           `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Full resource name of Engine, such as `projects/{project}/locations/{locati
             * on}/collections/{collection_id}/engines/{engine_id}`.
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists all the Engines associated with the project.
           *
           * Create a request for the method "engines.list".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The parent resource name, such as
           *        `projects/{project}/locations/{location}/collections/{collection_id}`.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaListEnginesResponse> {

            private static final String REST_PATH = "v1alpha/{+parent}/engines";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+$");

            /**
             * Lists all the Engines associated with the project.
             *
             * Create a request for the method "engines.list".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The parent resource name, such as
           *        `projects/{project}/locations/{location}/collections/{collection_id}`.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaListEnginesResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/collections/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The parent resource name, such as
             * `projects/{project}/locations/{location}/collections/{collection_id}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The parent resource name, such as
           `projects/{project}/locations/{location}/collections/{collection_id}`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The parent resource name, such as
             * `projects/{project}/locations/{location}/collections/{collection_id}`.
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/collections/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Optional. Filter by solution type. For example: solution_type=SOLUTION_TYPE_SEARCH
             */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Optional. Filter by solution type. For example: solution_type=SOLUTION_TYPE_SEARCH
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /**
             * Optional. Filter by solution type. For example: solution_type=SOLUTION_TYPE_SEARCH
             */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** Optional. Not supported. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. Not supported.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** Optional. Not supported. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** Optional. Not supported. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. Not supported.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** Optional. Not supported. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates an Engine
           *
           * Create a request for the method "engines.patch".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Immutable. The fully qualified resource name of the engine. This field must be a UTF-8 encoded
           *        string with a length limit of 1024 characters. Format:
           *        `projects/{project_number}/locations/{location}/collections/{collection}/engines/{engine}`
           *        engine should be 1-63 characters, and valid characters are /a-z0-9. Otherwise, an
           *        INVALID_ARGUMENT error is returned.
           * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaEngine}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaEngine content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaEngine> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$");

            /**
             * Updates an Engine
             *
             * Create a request for the method "engines.patch".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Immutable. The fully qualified resource name of the engine. This field must be a UTF-8 encoded
           *        string with a length limit of 1024 characters. Format:
           *        `projects/{project_number}/locations/{location}/collections/{collection}/engines/{engine}`
           *        engine should be 1-63 characters, and valid characters are /a-z0-9. Otherwise, an
           *        INVALID_ARGUMENT error is returned.
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaEngine}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaEngine content) {
              super(DiscoveryEngine.this, "PATCH", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaEngine.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Immutable. The fully qualified resource name of the engine. This field must be a
             * UTF-8 encoded string with a length limit of 1024 characters. Format: `projects/{proje
             * ct_number}/locations/{location}/collections/{collection}/engines/{engine}` engine
             * should be 1-63 characters, and valid characters are /a-z0-9. Otherwise, an
             * INVALID_ARGUMENT error is returned.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Immutable. The fully qualified resource name of the engine. This field must be a UTF-8 encoded
           string with a length limit of 1024 characters. Format:
           `projects/{project_number}/locations/{location}/collections/{collection}/engines/{engine}` engine
           should be 1-63 characters, and valid characters are /a-z0-9. Otherwise, an INVALID_ARGUMENT error
           is returned.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Immutable. The fully qualified resource name of the engine. This field must be a
             * UTF-8 encoded string with a length limit of 1024 characters. Format: `projects/{proje
             * ct_number}/locations/{location}/collections/{collection}/engines/{engine}` engine
             * should be 1-63 characters, and valid characters are /a-z0-9. Otherwise, an
             * INVALID_ARGUMENT error is returned.
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Indicates which fields in the provided Engine to update. If an unsupported or unknown
             * field is provided, an INVALID_ARGUMENT error is returned.
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Indicates which fields in the provided Engine to update. If an unsupported or unknown field is
           provided, an INVALID_ARGUMENT error is returned.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * Indicates which fields in the provided Engine to update. If an unsupported or unknown
             * field is provided, an INVALID_ARGUMENT error is returned.
             */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }
          /**
           * Pauses the training of an existing engine. Only applicable if SolutionType is
           * SOLUTION_TYPE_RECOMMENDATION.
           *
           * Create a request for the method "engines.pause".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link Pause#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the engine to pause. Format:
           *        `projects/{project_number}/locations/{location_id}/collections/{collection_id}/engines/{en
           *        gine_id}`
           * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaPauseEngineRequest}
           * @return the request
           */
          public Pause pause(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaPauseEngineRequest content) throws java.io.IOException {
            Pause result = new Pause(name, content);
            initialize(result);
            return result;
          }

          public class Pause extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaEngine> {

            private static final String REST_PATH = "v1alpha/{+name}:pause";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$");

            /**
             * Pauses the training of an existing engine. Only applicable if SolutionType is
             * SOLUTION_TYPE_RECOMMENDATION.
             *
             * Create a request for the method "engines.pause".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link Pause#execute()} method to invoke the remote operation.
             * <p> {@link
             * Pause#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the engine to pause. Format:
           *        `projects/{project_number}/locations/{location_id}/collections/{collection_id}/engines/{en
           *        gine_id}`
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaPauseEngineRequest}
             * @since 1.13
             */
            protected Pause(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaPauseEngineRequest content) {
              super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaEngine.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$");
              }
            }

            @Override
            public Pause set$Xgafv(java.lang.String $Xgafv) {
              return (Pause) super.set$Xgafv($Xgafv);
            }

            @Override
            public Pause setAccessToken(java.lang.String accessToken) {
              return (Pause) super.setAccessToken(accessToken);
            }

            @Override
            public Pause setAlt(java.lang.String alt) {
              return (Pause) super.setAlt(alt);
            }

            @Override
            public Pause setCallback(java.lang.String callback) {
              return (Pause) super.setCallback(callback);
            }

            @Override
            public Pause setFields(java.lang.String fields) {
              return (Pause) super.setFields(fields);
            }

            @Override
            public Pause setKey(java.lang.String key) {
              return (Pause) super.setKey(key);
            }

            @Override
            public Pause setOauthToken(java.lang.String oauthToken) {
              return (Pause) super.setOauthToken(oauthToken);
            }

            @Override
            public Pause setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Pause) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Pause setQuotaUser(java.lang.String quotaUser) {
              return (Pause) super.setQuotaUser(quotaUser);
            }

            @Override
            public Pause setUploadType(java.lang.String uploadType) {
              return (Pause) super.setUploadType(uploadType);
            }

            @Override
            public Pause setUploadProtocol(java.lang.String uploadProtocol) {
              return (Pause) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the engine to pause. Format: `projects/{project_number}/locatio
             * ns/{location_id}/collections/{collection_id}/engines/{engine_id}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the engine to pause. Format:
           `projects/{project_number}/locations/{location_id}/collections/{collection_id}/engines/{engine_id}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the engine to pause. Format: `projects/{project_number}/locatio
             * ns/{location_id}/collections/{collection_id}/engines/{engine_id}`
             */
            public Pause setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Pause set(String parameterName, Object value) {
              return (Pause) super.set(parameterName, value);
            }
          }
          /**
           * Resumes the training of an existing engine. Only applicable if SolutionType is
           * SOLUTION_TYPE_RECOMMENDATION.
           *
           * Create a request for the method "engines.resume".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link Resume#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the engine to resume. Format:
           *        `projects/{project_number}/locations/{location_id}/collections/{collection_id}/engines/{en
           *        gine_id}`
           * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaResumeEngineRequest}
           * @return the request
           */
          public Resume resume(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaResumeEngineRequest content) throws java.io.IOException {
            Resume result = new Resume(name, content);
            initialize(result);
            return result;
          }

          public class Resume extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaEngine> {

            private static final String REST_PATH = "v1alpha/{+name}:resume";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$");

            /**
             * Resumes the training of an existing engine. Only applicable if SolutionType is
             * SOLUTION_TYPE_RECOMMENDATION.
             *
             * Create a request for the method "engines.resume".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link Resume#execute()} method to invoke the remote operation.
             * <p> {@link
             * Resume#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the engine to resume. Format:
           *        `projects/{project_number}/locations/{location_id}/collections/{collection_id}/engines/{en
           *        gine_id}`
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaResumeEngineRequest}
             * @since 1.13
             */
            protected Resume(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaResumeEngineRequest content) {
              super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaEngine.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$");
              }
            }

            @Override
            public Resume set$Xgafv(java.lang.String $Xgafv) {
              return (Resume) super.set$Xgafv($Xgafv);
            }

            @Override
            public Resume setAccessToken(java.lang.String accessToken) {
              return (Resume) super.setAccessToken(accessToken);
            }

            @Override
            public Resume setAlt(java.lang.String alt) {
              return (Resume) super.setAlt(alt);
            }

            @Override
            public Resume setCallback(java.lang.String callback) {
              return (Resume) super.setCallback(callback);
            }

            @Override
            public Resume setFields(java.lang.String fields) {
              return (Resume) super.setFields(fields);
            }

            @Override
            public Resume setKey(java.lang.String key) {
              return (Resume) super.setKey(key);
            }

            @Override
            public Resume setOauthToken(java.lang.String oauthToken) {
              return (Resume) super.setOauthToken(oauthToken);
            }

            @Override
            public Resume setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Resume) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Resume setQuotaUser(java.lang.String quotaUser) {
              return (Resume) super.setQuotaUser(quotaUser);
            }

            @Override
            public Resume setUploadType(java.lang.String uploadType) {
              return (Resume) super.setUploadType(uploadType);
            }

            @Override
            public Resume setUploadProtocol(java.lang.String uploadProtocol) {
              return (Resume) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the engine to resume. Format: `projects/{project_number}/locati
             * ons/{location_id}/collections/{collection_id}/engines/{engine_id}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the engine to resume. Format:
           `projects/{project_number}/locations/{location_id}/collections/{collection_id}/engines/{engine_id}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the engine to resume. Format: `projects/{project_number}/locati
             * ons/{location_id}/collections/{collection_id}/engines/{engine_id}`
             */
            public Resume setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Resume set(String parameterName, Object value) {
              return (Resume) super.set(parameterName, value);
            }
          }
          /**
           * Tunes an existing engine. Only applicable if SolutionType is SOLUTION_TYPE_RECOMMENDATION.
           *
           * Create a request for the method "engines.tune".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link Tune#execute()} method to invoke the remote operation.
           *
           * @param name Required. The resource name of the engine to tune. Format:
           *        `projects/{project_number}/locations/{location_id}/collections/{collection_id}/engines/{en
           *        gine_id}`
           * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaTuneEngineRequest}
           * @return the request
           */
          public Tune tune(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaTuneEngineRequest content) throws java.io.IOException {
            Tune result = new Tune(name, content);
            initialize(result);
            return result;
          }

          public class Tune extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1alpha/{+name}:tune";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$");

            /**
             * Tunes an existing engine. Only applicable if SolutionType is SOLUTION_TYPE_RECOMMENDATION.
             *
             * Create a request for the method "engines.tune".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link Tune#execute()} method to invoke the remote operation. <p>
             * {@link Tune#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The resource name of the engine to tune. Format:
           *        `projects/{project_number}/locations/{location_id}/collections/{collection_id}/engines/{en
           *        gine_id}`
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaTuneEngineRequest}
             * @since 1.13
             */
            protected Tune(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaTuneEngineRequest content) {
              super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$");
              }
            }

            @Override
            public Tune set$Xgafv(java.lang.String $Xgafv) {
              return (Tune) super.set$Xgafv($Xgafv);
            }

            @Override
            public Tune setAccessToken(java.lang.String accessToken) {
              return (Tune) super.setAccessToken(accessToken);
            }

            @Override
            public Tune setAlt(java.lang.String alt) {
              return (Tune) super.setAlt(alt);
            }

            @Override
            public Tune setCallback(java.lang.String callback) {
              return (Tune) super.setCallback(callback);
            }

            @Override
            public Tune setFields(java.lang.String fields) {
              return (Tune) super.setFields(fields);
            }

            @Override
            public Tune setKey(java.lang.String key) {
              return (Tune) super.setKey(key);
            }

            @Override
            public Tune setOauthToken(java.lang.String oauthToken) {
              return (Tune) super.setOauthToken(oauthToken);
            }

            @Override
            public Tune setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Tune) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Tune setQuotaUser(java.lang.String quotaUser) {
              return (Tune) super.setQuotaUser(quotaUser);
            }

            @Override
            public Tune setUploadType(java.lang.String uploadType) {
              return (Tune) super.setUploadType(uploadType);
            }

            @Override
            public Tune setUploadProtocol(java.lang.String uploadProtocol) {
              return (Tune) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the engine to tune. Format: `projects/{project_number}
             * /locations/{location_id}/collections/{collection_id}/engines/{engine_id}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The resource name of the engine to tune. Format:
           `projects/{project_number}/locations/{location_id}/collections/{collection_id}/engines/{engine_id}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The resource name of the engine to tune. Format: `projects/{project_number}
             * /locations/{location_id}/collections/{collection_id}/engines/{engine_id}`
             */
            public Tune setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Tune set(String parameterName, Object value) {
              return (Tune) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the Conversations collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
           *   {@code DiscoveryEngine.Conversations.List request = discoveryengine.conversations().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Conversations conversations() {
            return new Conversations();
          }

          /**
           * The "conversations" collection of methods.
           */
          public class Conversations {

            /**
             * Converses a conversation.
             *
             * Create a request for the method "conversations.converse".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Converse#execute()} method to invoke the remote operation.
             *
             * @param name Required. The resource name of the Conversation to get. Format: `projects/{project_number}/locations
             *        /{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversa
             *        tion_id}`. Use `projects/{project_number}/locations/{location_id}/collections/{collection}
             *        /dataStores/{data_store_id}/conversations/-` to activate auto session mode, which
             *        automatically creates a new conversation inside a ConverseConversation session.
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConverseConversationRequest}
             * @return the request
             */
            public Converse converse(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConverseConversationRequest content) throws java.io.IOException {
              Converse result = new Converse(name, content);
              initialize(result);
              return result;
            }

            public class Converse extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConverseConversationResponse> {

              private static final String REST_PATH = "v1alpha/{+name}:converse";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/conversations/[^/]+$");

              /**
               * Converses a conversation.
               *
               * Create a request for the method "conversations.converse".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Converse#execute()} method to invoke the remote operation.
               * <p> {@link
               * Converse#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The resource name of the Conversation to get. Format: `projects/{project_number}/locations
             *        /{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversa
             *        tion_id}`. Use `projects/{project_number}/locations/{location_id}/collections/{collection}
             *        /dataStores/{data_store_id}/conversations/-` to activate auto session mode, which
             *        automatically creates a new conversation inside a ConverseConversation session.
               * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConverseConversationRequest}
               * @since 1.13
               */
              protected Converse(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConverseConversationRequest content) {
                super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConverseConversationResponse.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/conversations/[^/]+$");
                }
              }

              @Override
              public Converse set$Xgafv(java.lang.String $Xgafv) {
                return (Converse) super.set$Xgafv($Xgafv);
              }

              @Override
              public Converse setAccessToken(java.lang.String accessToken) {
                return (Converse) super.setAccessToken(accessToken);
              }

              @Override
              public Converse setAlt(java.lang.String alt) {
                return (Converse) super.setAlt(alt);
              }

              @Override
              public Converse setCallback(java.lang.String callback) {
                return (Converse) super.setCallback(callback);
              }

              @Override
              public Converse setFields(java.lang.String fields) {
                return (Converse) super.setFields(fields);
              }

              @Override
              public Converse setKey(java.lang.String key) {
                return (Converse) super.setKey(key);
              }

              @Override
              public Converse setOauthToken(java.lang.String oauthToken) {
                return (Converse) super.setOauthToken(oauthToken);
              }

              @Override
              public Converse setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Converse) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Converse setQuotaUser(java.lang.String quotaUser) {
                return (Converse) super.setQuotaUser(quotaUser);
              }

              @Override
              public Converse setUploadType(java.lang.String uploadType) {
                return (Converse) super.setUploadType(uploadType);
              }

              @Override
              public Converse setUploadProtocol(java.lang.String uploadProtocol) {
                return (Converse) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The resource name of the Conversation to get. Format: `projects/{project_
               * number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}
               * /conversations/{conversation_id}`. Use `projects/{project_number}/locations/{locati
               * on_id}/collections/{collection}/dataStores/{data_store_id}/conversations/-` to
               * activate auto session mode, which automatically creates a new conversation inside a
               * ConverseConversation session.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The resource name of the Conversation to get. Format: `projects/{project_number}/location
             s/{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}
             `. Use `projects/{project_number}/locations/{location_id}/collections/{collection}/dataStores/{data
             _store_id}/conversations/-` to activate auto session mode, which automatically creates a new
             conversation inside a ConverseConversation session.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The resource name of the Conversation to get. Format: `projects/{project_
               * number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}
               * /conversations/{conversation_id}`. Use `projects/{project_number}/locations/{locati
               * on_id}/collections/{collection}/dataStores/{data_store_id}/conversations/-` to
               * activate auto session mode, which automatically creates a new conversation inside a
               * ConverseConversation session.
               */
              public Converse setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/conversations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Converse set(String parameterName, Object value) {
                return (Converse) super.set(parameterName, value);
              }
            }
            /**
             * Creates a Conversation. If the Conversation to create already exists, an ALREADY_EXISTS error is
             * returned.
             *
             * Create a request for the method "conversations.create".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             *
             * @param parent Required. Full resource name of parent data store. Format: `projects/{project_number}/locations/{loc
             *        ation_id}/collections/{collection}/dataStores/{data_store_id}`
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConversation}
             * @return the request
             */
            public Create create(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConversation content) throws java.io.IOException {
              Create result = new Create(parent, content);
              initialize(result);
              return result;
            }

            public class Create extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConversation> {

              private static final String REST_PATH = "v1alpha/{+parent}/conversations";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$");

              /**
               * Creates a Conversation. If the Conversation to create already exists, an ALREADY_EXISTS error
               * is returned.
               *
               * Create a request for the method "conversations.create".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
               * <p> {@link
               * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. Full resource name of parent data store. Format: `projects/{project_number}/locations/{loc
             *        ation_id}/collections/{collection}/dataStores/{data_store_id}`
               * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConversation}
               * @since 1.13
               */
              protected Create(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConversation content) {
                super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConversation.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$");
                }
              }

              @Override
              public Create set$Xgafv(java.lang.String $Xgafv) {
                return (Create) super.set$Xgafv($Xgafv);
              }

              @Override
              public Create setAccessToken(java.lang.String accessToken) {
                return (Create) super.setAccessToken(accessToken);
              }

              @Override
              public Create setAlt(java.lang.String alt) {
                return (Create) super.setAlt(alt);
              }

              @Override
              public Create setCallback(java.lang.String callback) {
                return (Create) super.setCallback(callback);
              }

              @Override
              public Create setFields(java.lang.String fields) {
                return (Create) super.setFields(fields);
              }

              @Override
              public Create setKey(java.lang.String key) {
                return (Create) super.setKey(key);
              }

              @Override
              public Create setOauthToken(java.lang.String oauthToken) {
                return (Create) super.setOauthToken(oauthToken);
              }

              @Override
              public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Create) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Create setQuotaUser(java.lang.String quotaUser) {
                return (Create) super.setQuotaUser(quotaUser);
              }

              @Override
              public Create setUploadType(java.lang.String uploadType) {
                return (Create) super.setUploadType(uploadType);
              }

              @Override
              public Create setUploadProtocol(java.lang.String uploadProtocol) {
                return (Create) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. Full resource name of parent data store. Format: `projects/{project_numbe
               * r}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}`
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. Full resource name of parent data store. Format: `projects/{project_number}/locations/{lo
             cation_id}/collections/{collection}/dataStores/{data_store_id}`
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. Full resource name of parent data store. Format: `projects/{project_numbe
               * r}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}`
               */
              public Create setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public Create set(String parameterName, Object value) {
                return (Create) super.set(parameterName, value);
              }
            }
            /**
             * Deletes a Conversation. If the Conversation to delete does not exist, a NOT_FOUND error is
             * returned.
             *
             * Create a request for the method "conversations.delete".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param name Required. The resource name of the Conversation to delete. Format: `projects/{project_number}/locati
             *        ons/{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/{conve
             *        rsation_id}`
             * @return the request
             */
            public Delete delete(java.lang.String name) throws java.io.IOException {
              Delete result = new Delete(name);
              initialize(result);
              return result;
            }

            public class Delete extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleProtobufEmpty> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/conversations/[^/]+$");

              /**
               * Deletes a Conversation. If the Conversation to delete does not exist, a NOT_FOUND error is
               * returned.
               *
               * Create a request for the method "conversations.delete".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               * <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The resource name of the Conversation to delete. Format: `projects/{project_number}/locati
             *        ons/{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/{conve
             *        rsation_id}`
               * @since 1.13
               */
              protected Delete(java.lang.String name) {
                super(DiscoveryEngine.this, "DELETE", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleProtobufEmpty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/conversations/[^/]+$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The resource name of the Conversation to delete. Format: `projects/{proje
               * ct_number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_
               * id}/conversations/{conversation_id}`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The resource name of the Conversation to delete. Format: `projects/{project_number}/locat
             ions/{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_
             id}`
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The resource name of the Conversation to delete. Format: `projects/{proje
               * ct_number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_
               * id}/conversations/{conversation_id}`
               */
              public Delete setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/conversations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * Gets a Conversation.
             *
             * Create a request for the method "conversations.get".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name Required. The resource name of the Conversation to get. Format: `projects/{project_number}/locations
             *        /{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversa
             *        tion_id}`
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConversation> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/conversations/[^/]+$");

              /**
               * Gets a Conversation.
               *
               * Create a request for the method "conversations.get".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The resource name of the Conversation to get. Format: `projects/{project_number}/locations
             *        /{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversa
             *        tion_id}`
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConversation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/conversations/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The resource name of the Conversation to get. Format: `projects/{project_
               * number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}
               * /conversations/{conversation_id}`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The resource name of the Conversation to get. Format: `projects/{project_number}/location
             s/{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}
             `
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The resource name of the Conversation to get. Format: `projects/{project_
               * number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}
               * /conversations/{conversation_id}`
               */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/conversations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Lists all Conversations by their parent DataStore.
             *
             * Create a request for the method "conversations.list".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The data store resource name. Format: `projects/{project_number}/locations/{location_id}/c
             *        ollections/{collection}/dataStores/{data_store_id}`
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaListConversationsResponse> {

              private static final String REST_PATH = "v1alpha/{+parent}/conversations";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$");

              /**
               * Lists all Conversations by their parent DataStore.
               *
               * Create a request for the method "conversations.list".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The data store resource name. Format: `projects/{project_number}/locations/{location_id}/c
             *        ollections/{collection}/dataStores/{data_store_id}`
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaListConversationsResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The data store resource name. Format: `projects/{project_number}/location
               * s/{location_id}/collections/{collection}/dataStores/{data_store_id}`
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The data store resource name. Format: `projects/{project_number}/locations/{location_id}/
             collections/{collection}/dataStores/{data_store_id}`
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The data store resource name. Format: `projects/{project_number}/location
               * s/{location_id}/collections/{collection}/dataStores/{data_store_id}`
               */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * A filter to apply on the list results. The supported features are: user_pseudo_id,
               * state. Example: "user_pseudo_id = some_id"
               */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** A filter to apply on the list results. The supported features are: user_pseudo_id, state. Example:
             "user_pseudo_id = some_id"
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /**
               * A filter to apply on the list results. The supported features are: user_pseudo_id,
               * state. Example: "user_pseudo_id = some_id"
               */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /**
               * A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
               * after a field name for descending. Supported fields: * `update_time` *
               * `create_time` * `conversation_name` Example: "update_time desc" "create_time"
               */
              @com.google.api.client.util.Key
              private java.lang.String orderBy;

              /** A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field
             name for descending. Supported fields: * `update_time` * `create_time` * `conversation_name`
             Example: "update_time desc" "create_time"
               */
              public java.lang.String getOrderBy() {
                return orderBy;
              }

              /**
               * A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
               * after a field name for descending. Supported fields: * `update_time` *
               * `create_time` * `conversation_name` Example: "update_time desc" "create_time"
               */
              public List setOrderBy(java.lang.String orderBy) {
                this.orderBy = orderBy;
                return this;
              }

              /**
               * Maximum number of results to return. If unspecified, defaults to 50. Max allowed
               * value is 1000.
               */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** Maximum number of results to return. If unspecified, defaults to 50. Max allowed value is 1000.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /**
               * Maximum number of results to return. If unspecified, defaults to 50. Max allowed
               * value is 1000.
               */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /**
               * A page token, received from a previous `ListConversations` call. Provide this to
               * retrieve the subsequent page.
               */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** A page token, received from a previous `ListConversations` call. Provide this to retrieve the
             subsequent page.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /**
               * A page token, received from a previous `ListConversations` call. Provide this to
               * retrieve the subsequent page.
               */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }
            /**
             * Updates a Conversation. Conversation action type cannot be changed. If the Conversation to update
             * does not exist, a NOT_FOUND error is returned.
             *
             * Create a request for the method "conversations.patch".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             *
             * @param name Immutable. Fully qualified name
             *        `project/locations/global/collections/{collection}/dataStore/conversations` or
             *        `project/locations/global/collections/{collection}/engines/conversations`.
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConversation}
             * @return the request
             */
            public Patch patch(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConversation content) throws java.io.IOException {
              Patch result = new Patch(name, content);
              initialize(result);
              return result;
            }

            public class Patch extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConversation> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/conversations/[^/]+$");

              /**
               * Updates a Conversation. Conversation action type cannot be changed. If the Conversation to
               * update does not exist, a NOT_FOUND error is returned.
               *
               * Create a request for the method "conversations.patch".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
               * <p> {@link
               * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Immutable. Fully qualified name
             *        `project/locations/global/collections/{collection}/dataStore/conversations` or
             *        `project/locations/global/collections/{collection}/engines/conversations`.
               * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConversation}
               * @since 1.13
               */
              protected Patch(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConversation content) {
                super(DiscoveryEngine.this, "PATCH", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConversation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/conversations/[^/]+$");
                }
              }

              @Override
              public Patch set$Xgafv(java.lang.String $Xgafv) {
                return (Patch) super.set$Xgafv($Xgafv);
              }

              @Override
              public Patch setAccessToken(java.lang.String accessToken) {
                return (Patch) super.setAccessToken(accessToken);
              }

              @Override
              public Patch setAlt(java.lang.String alt) {
                return (Patch) super.setAlt(alt);
              }

              @Override
              public Patch setCallback(java.lang.String callback) {
                return (Patch) super.setCallback(callback);
              }

              @Override
              public Patch setFields(java.lang.String fields) {
                return (Patch) super.setFields(fields);
              }

              @Override
              public Patch setKey(java.lang.String key) {
                return (Patch) super.setKey(key);
              }

              @Override
              public Patch setOauthToken(java.lang.String oauthToken) {
                return (Patch) super.setOauthToken(oauthToken);
              }

              @Override
              public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Patch) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Patch setQuotaUser(java.lang.String quotaUser) {
                return (Patch) super.setQuotaUser(quotaUser);
              }

              @Override
              public Patch setUploadType(java.lang.String uploadType) {
                return (Patch) super.setUploadType(uploadType);
              }

              @Override
              public Patch setUploadProtocol(java.lang.String uploadProtocol) {
                return (Patch) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Immutable. Fully qualified name
               * `project/locations/global/collections/{collection}/dataStore/conversations` or
               * `project/locations/global/collections/{collection}/engines/conversations`.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Immutable. Fully qualified name
             `project/locations/global/collections/{collection}/dataStore/conversations` or
             `project/locations/global/collections/{collection}/engines/conversations`.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Immutable. Fully qualified name
               * `project/locations/global/collections/{collection}/dataStore/conversations` or
               * `project/locations/global/collections/{collection}/engines/conversations`.
               */
              public Patch setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/conversations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * Indicates which fields in the provided Conversation to update. The following are
               * NOT supported: * Conversation.name If not set or empty, all supported fields are
               * updated.
               */
              @com.google.api.client.util.Key
              private String updateMask;

              /** Indicates which fields in the provided Conversation to update. The following are NOT supported: *
             Conversation.name If not set or empty, all supported fields are updated.
               */
              public String getUpdateMask() {
                return updateMask;
              }

              /**
               * Indicates which fields in the provided Conversation to update. The following are
               * NOT supported: * Conversation.name If not set or empty, all supported fields are
               * updated.
               */
              public Patch setUpdateMask(String updateMask) {
                this.updateMask = updateMask;
                return this;
              }

              @Override
              public Patch set(String parameterName, Object value) {
                return (Patch) super.set(parameterName, value);
              }
            }

          }
          /**
           * An accessor for creating requests from the Operations collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
           *   {@code DiscoveryEngine.Operations.List request = discoveryengine.operations().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Operations operations() {
            return new Operations();
          }

          /**
           * The "operations" collection of methods.
           */
          public class Operations {

            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource.
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/operations/[^/]+$");

              /**
               * Gets the latest state of a long-running operation. Clients can use this method to poll the
               * operation result at intervals as recommended by the API service.
               *
               * Create a request for the method "operations.get".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource.
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource. */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.list".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation's parent resource.
             * @return the request
             */
            public List list(java.lang.String name) throws java.io.IOException {
              List result = new List(name);
              initialize(result);
              return result;
            }

            public class List extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningListOperationsResponse> {

              private static final String REST_PATH = "v1alpha/{+name}/operations";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$");

              /**
               * Lists operations that match the specified filter in the request. If the server doesn't support
               * this method, it returns `UNIMPLEMENTED`.
               *
               * Create a request for the method "operations.list".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation's parent resource.
               * @since 1.13
               */
              protected List(java.lang.String name) {
                super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningListOperationsResponse.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation's parent resource. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation's parent resource.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation's parent resource. */
              public List setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /** The standard list filter. */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** The standard list filter.
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /** The standard list filter. */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /** The standard list page size. */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** The standard list page size.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /** The standard list page size. */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /** The standard list page token. */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** The standard list page token.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /** The standard list page token. */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }

          }
          /**
           * An accessor for creating requests from the ServingConfigs collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
           *   {@code DiscoveryEngine.ServingConfigs.List request = discoveryengine.servingConfigs().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public ServingConfigs servingConfigs() {
            return new ServingConfigs();
          }

          /**
           * The "servingConfigs" collection of methods.
           */
          public class ServingConfigs {

            /**
             * Answer query method.
             *
             * Create a request for the method "servingConfigs.answer".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Answer#execute()} method to invoke the remote operation.
             *
             * @param servingConfig Required. The resource name of the Search serving config, such as `projects/locations/global/collect
             *        ions/default_collection/engines/servingConfigs/default_serving_config`, or `projects/locat
             *        ions/global/collections/default_collection/dataStores/servingConfigs/default_serving_confi
             *        g`. This field is used to identify the serving configuration name, set of models used to
             *        make the search.
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaAnswerQueryRequest}
             * @return the request
             */
            public Answer answer(java.lang.String servingConfig, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaAnswerQueryRequest content) throws java.io.IOException {
              Answer result = new Answer(servingConfig, content);
              initialize(result);
              return result;
            }

            public class Answer extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaAnswerQueryResponse> {

              private static final String REST_PATH = "v1alpha/{+servingConfig}:answer";

              private final java.util.regex.Pattern SERVING_CONFIG_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/servingConfigs/[^/]+$");

              /**
               * Answer query method.
               *
               * Create a request for the method "servingConfigs.answer".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Answer#execute()} method to invoke the remote operation.
               * <p> {@link
               * Answer#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param servingConfig Required. The resource name of the Search serving config, such as `projects/locations/global/collect
             *        ions/default_collection/engines/servingConfigs/default_serving_config`, or `projects/locat
             *        ions/global/collections/default_collection/dataStores/servingConfigs/default_serving_confi
             *        g`. This field is used to identify the serving configuration name, set of models used to
             *        make the search.
               * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaAnswerQueryRequest}
               * @since 1.13
               */
              protected Answer(java.lang.String servingConfig, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaAnswerQueryRequest content) {
                super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaAnswerQueryResponse.class);
                this.servingConfig = com.google.api.client.util.Preconditions.checkNotNull(servingConfig, "Required parameter servingConfig must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(SERVING_CONFIG_PATTERN.matcher(servingConfig).matches(),
                      "Parameter servingConfig must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/servingConfigs/[^/]+$");
                }
              }

              @Override
              public Answer set$Xgafv(java.lang.String $Xgafv) {
                return (Answer) super.set$Xgafv($Xgafv);
              }

              @Override
              public Answer setAccessToken(java.lang.String accessToken) {
                return (Answer) super.setAccessToken(accessToken);
              }

              @Override
              public Answer setAlt(java.lang.String alt) {
                return (Answer) super.setAlt(alt);
              }

              @Override
              public Answer setCallback(java.lang.String callback) {
                return (Answer) super.setCallback(callback);
              }

              @Override
              public Answer setFields(java.lang.String fields) {
                return (Answer) super.setFields(fields);
              }

              @Override
              public Answer setKey(java.lang.String key) {
                return (Answer) super.setKey(key);
              }

              @Override
              public Answer setOauthToken(java.lang.String oauthToken) {
                return (Answer) super.setOauthToken(oauthToken);
              }

              @Override
              public Answer setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Answer) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Answer setQuotaUser(java.lang.String quotaUser) {
                return (Answer) super.setQuotaUser(quotaUser);
              }

              @Override
              public Answer setUploadType(java.lang.String uploadType) {
                return (Answer) super.setUploadType(uploadType);
              }

              @Override
              public Answer setUploadProtocol(java.lang.String uploadProtocol) {
                return (Answer) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The resource name of the Search serving config, such as `projects/locatio
               * ns/global/collections/default_collection/engines/servingConfigs/default_serving_con
               * fig`, or `projects/locations/global/collections/default_collection/dataStores/servi
               * ngConfigs/default_serving_config`. This field is used to identify the serving
               * configuration name, set of models used to make the search.
               */
              @com.google.api.client.util.Key
              private java.lang.String servingConfig;

              /** Required. The resource name of the Search serving config, such as `projects/locations/global/collec
             tions/default_collection/engines/servingConfigs/default_serving_config`, or `projects/locations/glo
             bal/collections/default_collection/dataStores/servingConfigs/default_serving_config`. This field is
             used to identify the serving configuration name, set of models used to make the search.
               */
              public java.lang.String getServingConfig() {
                return servingConfig;
              }

              /**
               * Required. The resource name of the Search serving config, such as `projects/locatio
               * ns/global/collections/default_collection/engines/servingConfigs/default_serving_con
               * fig`, or `projects/locations/global/collections/default_collection/dataStores/servi
               * ngConfigs/default_serving_config`. This field is used to identify the serving
               * configuration name, set of models used to make the search.
               */
              public Answer setServingConfig(java.lang.String servingConfig) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(SERVING_CONFIG_PATTERN.matcher(servingConfig).matches(),
                      "Parameter servingConfig must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/servingConfigs/[^/]+$");
                }
                this.servingConfig = servingConfig;
                return this;
              }

              @Override
              public Answer set(String parameterName, Object value) {
                return (Answer) super.set(parameterName, value);
              }
            }
            /**
             * Gets a ServingConfig. Returns a NotFound error if the ServingConfig does not exist.
             *
             * Create a request for the method "servingConfigs.get".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name Required. The resource name of the ServingConfig to get. Format: `projects/{project_number}/location
             *        s/{location}/collections/{collection}/engines/{engine}/servingConfigs/{serving_config_id}`
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaServingConfig> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/servingConfigs/[^/]+$");

              /**
               * Gets a ServingConfig. Returns a NotFound error if the ServingConfig does not exist.
               *
               * Create a request for the method "servingConfigs.get".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The resource name of the ServingConfig to get. Format: `projects/{project_number}/location
             *        s/{location}/collections/{collection}/engines/{engine}/servingConfigs/{serving_config_id}`
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaServingConfig.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/servingConfigs/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The resource name of the ServingConfig to get. Format: `projects/{project
               * _number}/locations/{location}/collections/{collection}/engines/{engine}/servingConf
               * igs/{serving_config_id}`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The resource name of the ServingConfig to get. Format: `projects/{project_number}/locatio
             ns/{location}/collections/{collection}/engines/{engine}/servingConfigs/{serving_config_id}`
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The resource name of the ServingConfig to get. Format: `projects/{project
               * _number}/locations/{location}/collections/{collection}/engines/{engine}/servingConf
               * igs/{serving_config_id}`
               */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/servingConfigs/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Lists all ServingConfigs linked to this dataStore.
             *
             * Create a request for the method "servingConfigs.list".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. Full resource name of the parent resource. Format:
             *        `projects/{project_number}/locations/{location}/collections/{collection}/engines/{engine}`
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaListServingConfigsResponse> {

              private static final String REST_PATH = "v1alpha/{+parent}/servingConfigs";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$");

              /**
               * Lists all ServingConfigs linked to this dataStore.
               *
               * Create a request for the method "servingConfigs.list".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. Full resource name of the parent resource. Format:
             *        `projects/{project_number}/locations/{location}/collections/{collection}/engines/{engine}`
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaListServingConfigsResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. Full resource name of the parent resource. Format: `projects/{project_num
               * ber}/locations/{location}/collections/{collection}/engines/{engine}`
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. Full resource name of the parent resource. Format:
             `projects/{project_number}/locations/{location}/collections/{collection}/engines/{engine}`
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. Full resource name of the parent resource. Format: `projects/{project_num
               * ber}/locations/{location}/collections/{collection}/engines/{engine}`
               */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Optional. Maximum number of results to return. If unspecified, defaults to 100. If
               * a value greater than 100 is provided, at most 100 results are returned.
               */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** Optional. Maximum number of results to return. If unspecified, defaults to 100. If a value greater
             than 100 is provided, at most 100 results are returned.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /**
               * Optional. Maximum number of results to return. If unspecified, defaults to 100. If
               * a value greater than 100 is provided, at most 100 results are returned.
               */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /**
               * Optional. A page token, received from a previous `ListServingConfigs` call. Provide
               * this to retrieve the subsequent page.
               */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** Optional. A page token, received from a previous `ListServingConfigs` call. Provide this to
             retrieve the subsequent page.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /**
               * Optional. A page token, received from a previous `ListServingConfigs` call. Provide
               * this to retrieve the subsequent page.
               */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }
            /**
             * Updates a ServingConfig. Returns a NOT_FOUND error if the ServingConfig does not exist.
             *
             * Create a request for the method "servingConfigs.patch".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             *
             * @param name Immutable. Fully qualified name `projects/{project}/locations/{location}/collections/{collection_id}
             *        /engines/{engine_id}/servingConfigs/{serving_config_id}`
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaServingConfig}
             * @return the request
             */
            public Patch patch(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaServingConfig content) throws java.io.IOException {
              Patch result = new Patch(name, content);
              initialize(result);
              return result;
            }

            public class Patch extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaServingConfig> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/servingConfigs/[^/]+$");

              /**
               * Updates a ServingConfig. Returns a NOT_FOUND error if the ServingConfig does not exist.
               *
               * Create a request for the method "servingConfigs.patch".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
               * <p> {@link
               * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Immutable. Fully qualified name `projects/{project}/locations/{location}/collections/{collection_id}
             *        /engines/{engine_id}/servingConfigs/{serving_config_id}`
               * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaServingConfig}
               * @since 1.13
               */
              protected Patch(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaServingConfig content) {
                super(DiscoveryEngine.this, "PATCH", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaServingConfig.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/servingConfigs/[^/]+$");
                }
              }

              @Override
              public Patch set$Xgafv(java.lang.String $Xgafv) {
                return (Patch) super.set$Xgafv($Xgafv);
              }

              @Override
              public Patch setAccessToken(java.lang.String accessToken) {
                return (Patch) super.setAccessToken(accessToken);
              }

              @Override
              public Patch setAlt(java.lang.String alt) {
                return (Patch) super.setAlt(alt);
              }

              @Override
              public Patch setCallback(java.lang.String callback) {
                return (Patch) super.setCallback(callback);
              }

              @Override
              public Patch setFields(java.lang.String fields) {
                return (Patch) super.setFields(fields);
              }

              @Override
              public Patch setKey(java.lang.String key) {
                return (Patch) super.setKey(key);
              }

              @Override
              public Patch setOauthToken(java.lang.String oauthToken) {
                return (Patch) super.setOauthToken(oauthToken);
              }

              @Override
              public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Patch) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Patch setQuotaUser(java.lang.String quotaUser) {
                return (Patch) super.setQuotaUser(quotaUser);
              }

              @Override
              public Patch setUploadType(java.lang.String uploadType) {
                return (Patch) super.setUploadType(uploadType);
              }

              @Override
              public Patch setUploadProtocol(java.lang.String uploadProtocol) {
                return (Patch) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Immutable. Fully qualified name `projects/{project}/locations/{location}/collection
               * s/{collection_id}/engines/{engine_id}/servingConfigs/{serving_config_id}`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Immutable. Fully qualified name `projects/{project}/locations/{location}/collections/{collection_id
             }/engines/{engine_id}/servingConfigs/{serving_config_id}`
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Immutable. Fully qualified name `projects/{project}/locations/{location}/collection
               * s/{collection_id}/engines/{engine_id}/servingConfigs/{serving_config_id}`
               */
              public Patch setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/servingConfigs/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * Indicates which fields in the provided ServingConfig to update. The following are
               * NOT supported: * ServingConfig.name If not set, all supported fields are updated.
               */
              @com.google.api.client.util.Key
              private String updateMask;

              /** Indicates which fields in the provided ServingConfig to update. The following are NOT supported: *
             ServingConfig.name If not set, all supported fields are updated.
               */
              public String getUpdateMask() {
                return updateMask;
              }

              /**
               * Indicates which fields in the provided ServingConfig to update. The following are
               * NOT supported: * ServingConfig.name If not set, all supported fields are updated.
               */
              public Patch setUpdateMask(String updateMask) {
                this.updateMask = updateMask;
                return this;
              }

              @Override
              public Patch set(String parameterName, Object value) {
                return (Patch) super.set(parameterName, value);
              }
            }
            /**
             * Makes a recommendation, which requires a contextual user event.
             *
             * Create a request for the method "servingConfigs.recommend".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Recommend#execute()} method to invoke the remote operation.
             *
             * @param servingConfig Required. Full resource name of a ServingConfig:
             *        `projects/locations/global/collections/engines/servingConfigs`, or
             *        `projects/locations/global/collections/dataStores/servingConfigs` One default serving
             *        config is created along with your recommendation engine creation. The engine ID will be
             *        used as the ID of the default serving config. For example, for Engine
             *        `projects/locations/global/collections/engines/my-engine`, you can use
             *        `projects/locations/global/collections/engines/my-engine/servingConfigs/my-engine` for
             *        your RecommendationService.Recommend requests.
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaRecommendRequest}
             * @return the request
             */
            public Recommend recommend(java.lang.String servingConfig, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaRecommendRequest content) throws java.io.IOException {
              Recommend result = new Recommend(servingConfig, content);
              initialize(result);
              return result;
            }

            public class Recommend extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaRecommendResponse> {

              private static final String REST_PATH = "v1alpha/{+servingConfig}:recommend";

              private final java.util.regex.Pattern SERVING_CONFIG_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/servingConfigs/[^/]+$");

              /**
               * Makes a recommendation, which requires a contextual user event.
               *
               * Create a request for the method "servingConfigs.recommend".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Recommend#execute()} method to invoke the remote
               * operation. <p> {@link
               * Recommend#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param servingConfig Required. Full resource name of a ServingConfig:
             *        `projects/locations/global/collections/engines/servingConfigs`, or
             *        `projects/locations/global/collections/dataStores/servingConfigs` One default serving
             *        config is created along with your recommendation engine creation. The engine ID will be
             *        used as the ID of the default serving config. For example, for Engine
             *        `projects/locations/global/collections/engines/my-engine`, you can use
             *        `projects/locations/global/collections/engines/my-engine/servingConfigs/my-engine` for
             *        your RecommendationService.Recommend requests.
               * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaRecommendRequest}
               * @since 1.13
               */
              protected Recommend(java.lang.String servingConfig, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaRecommendRequest content) {
                super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaRecommendResponse.class);
                this.servingConfig = com.google.api.client.util.Preconditions.checkNotNull(servingConfig, "Required parameter servingConfig must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(SERVING_CONFIG_PATTERN.matcher(servingConfig).matches(),
                      "Parameter servingConfig must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/servingConfigs/[^/]+$");
                }
              }

              @Override
              public Recommend set$Xgafv(java.lang.String $Xgafv) {
                return (Recommend) super.set$Xgafv($Xgafv);
              }

              @Override
              public Recommend setAccessToken(java.lang.String accessToken) {
                return (Recommend) super.setAccessToken(accessToken);
              }

              @Override
              public Recommend setAlt(java.lang.String alt) {
                return (Recommend) super.setAlt(alt);
              }

              @Override
              public Recommend setCallback(java.lang.String callback) {
                return (Recommend) super.setCallback(callback);
              }

              @Override
              public Recommend setFields(java.lang.String fields) {
                return (Recommend) super.setFields(fields);
              }

              @Override
              public Recommend setKey(java.lang.String key) {
                return (Recommend) super.setKey(key);
              }

              @Override
              public Recommend setOauthToken(java.lang.String oauthToken) {
                return (Recommend) super.setOauthToken(oauthToken);
              }

              @Override
              public Recommend setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Recommend) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Recommend setQuotaUser(java.lang.String quotaUser) {
                return (Recommend) super.setQuotaUser(quotaUser);
              }

              @Override
              public Recommend setUploadType(java.lang.String uploadType) {
                return (Recommend) super.setUploadType(uploadType);
              }

              @Override
              public Recommend setUploadProtocol(java.lang.String uploadProtocol) {
                return (Recommend) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. Full resource name of a ServingConfig:
               * `projects/locations/global/collections/engines/servingConfigs`, or
               * `projects/locations/global/collections/dataStores/servingConfigs` One default
               * serving config is created along with your recommendation engine creation. The
               * engine ID will be used as the ID of the default serving config. For example, for
               * Engine `projects/locations/global/collections/engines/my-engine`, you can use
               * `projects/locations/global/collections/engines/my-engine/servingConfigs/my-engine`
               * for your RecommendationService.Recommend requests.
               */
              @com.google.api.client.util.Key
              private java.lang.String servingConfig;

              /** Required. Full resource name of a ServingConfig:
             `projects/locations/global/collections/engines/servingConfigs`, or
             `projects/locations/global/collections/dataStores/servingConfigs` One default serving config is
             created along with your recommendation engine creation. The engine ID will be used as the ID of the
             default serving config. For example, for Engine `projects/locations/global/collections/engines/my-
             engine`, you can use `projects/locations/global/collections/engines/my-engine/servingConfigs/my-
             engine` for your RecommendationService.Recommend requests.
               */
              public java.lang.String getServingConfig() {
                return servingConfig;
              }

              /**
               * Required. Full resource name of a ServingConfig:
               * `projects/locations/global/collections/engines/servingConfigs`, or
               * `projects/locations/global/collections/dataStores/servingConfigs` One default
               * serving config is created along with your recommendation engine creation. The
               * engine ID will be used as the ID of the default serving config. For example, for
               * Engine `projects/locations/global/collections/engines/my-engine`, you can use
               * `projects/locations/global/collections/engines/my-engine/servingConfigs/my-engine`
               * for your RecommendationService.Recommend requests.
               */
              public Recommend setServingConfig(java.lang.String servingConfig) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(SERVING_CONFIG_PATTERN.matcher(servingConfig).matches(),
                      "Parameter servingConfig must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/servingConfigs/[^/]+$");
                }
                this.servingConfig = servingConfig;
                return this;
              }

              @Override
              public Recommend set(String parameterName, Object value) {
                return (Recommend) super.set(parameterName, value);
              }
            }
            /**
             * Performs a search.
             *
             * Create a request for the method "servingConfigs.search".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Search#execute()} method to invoke the remote operation.
             *
             * @param servingConfig Required. The resource name of the Search serving config, such as `projects/locations/global/collect
             *        ions/default_collection/engines/servingConfigs/default_serving_config`, or `projects/locat
             *        ions/global/collections/default_collection/dataStores/default_data_store/servingConfigs/de
             *        fault_serving_config`. This field is used to identify the serving configuration name, set
             *        of models used to make the search.
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSearchRequest}
             * @return the request
             */
            public Search search(java.lang.String servingConfig, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSearchRequest content) throws java.io.IOException {
              Search result = new Search(servingConfig, content);
              initialize(result);
              return result;
            }

            public class Search extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSearchResponse> {

              private static final String REST_PATH = "v1alpha/{+servingConfig}:search";

              private final java.util.regex.Pattern SERVING_CONFIG_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/servingConfigs/[^/]+$");

              /**
               * Performs a search.
               *
               * Create a request for the method "servingConfigs.search".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Search#execute()} method to invoke the remote operation.
               * <p> {@link
               * Search#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param servingConfig Required. The resource name of the Search serving config, such as `projects/locations/global/collect
             *        ions/default_collection/engines/servingConfigs/default_serving_config`, or `projects/locat
             *        ions/global/collections/default_collection/dataStores/default_data_store/servingConfigs/de
             *        fault_serving_config`. This field is used to identify the serving configuration name, set
             *        of models used to make the search.
               * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSearchRequest}
               * @since 1.13
               */
              protected Search(java.lang.String servingConfig, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSearchRequest content) {
                super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSearchResponse.class);
                this.servingConfig = com.google.api.client.util.Preconditions.checkNotNull(servingConfig, "Required parameter servingConfig must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(SERVING_CONFIG_PATTERN.matcher(servingConfig).matches(),
                      "Parameter servingConfig must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/servingConfigs/[^/]+$");
                }
              }

              @Override
              public Search set$Xgafv(java.lang.String $Xgafv) {
                return (Search) super.set$Xgafv($Xgafv);
              }

              @Override
              public Search setAccessToken(java.lang.String accessToken) {
                return (Search) super.setAccessToken(accessToken);
              }

              @Override
              public Search setAlt(java.lang.String alt) {
                return (Search) super.setAlt(alt);
              }

              @Override
              public Search setCallback(java.lang.String callback) {
                return (Search) super.setCallback(callback);
              }

              @Override
              public Search setFields(java.lang.String fields) {
                return (Search) super.setFields(fields);
              }

              @Override
              public Search setKey(java.lang.String key) {
                return (Search) super.setKey(key);
              }

              @Override
              public Search setOauthToken(java.lang.String oauthToken) {
                return (Search) super.setOauthToken(oauthToken);
              }

              @Override
              public Search setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Search) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Search setQuotaUser(java.lang.String quotaUser) {
                return (Search) super.setQuotaUser(quotaUser);
              }

              @Override
              public Search setUploadType(java.lang.String uploadType) {
                return (Search) super.setUploadType(uploadType);
              }

              @Override
              public Search setUploadProtocol(java.lang.String uploadProtocol) {
                return (Search) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The resource name of the Search serving config, such as `projects/locatio
               * ns/global/collections/default_collection/engines/servingConfigs/default_serving_con
               * fig`, or `projects/locations/global/collections/default_collection/dataStores/defau
               * lt_data_store/servingConfigs/default_serving_config`. This field is used to
               * identify the serving configuration name, set of models used to make the search.
               */
              @com.google.api.client.util.Key
              private java.lang.String servingConfig;

              /** Required. The resource name of the Search serving config, such as `projects/locations/global/collec
             tions/default_collection/engines/servingConfigs/default_serving_config`, or `projects/locations/glo
             bal/collections/default_collection/dataStores/default_data_store/servingConfigs/default_serving_con
             fig`. This field is used to identify the serving configuration name, set of models used to make the
             search.
               */
              public java.lang.String getServingConfig() {
                return servingConfig;
              }

              /**
               * Required. The resource name of the Search serving config, such as `projects/locatio
               * ns/global/collections/default_collection/engines/servingConfigs/default_serving_con
               * fig`, or `projects/locations/global/collections/default_collection/dataStores/defau
               * lt_data_store/servingConfigs/default_serving_config`. This field is used to
               * identify the serving configuration name, set of models used to make the search.
               */
              public Search setServingConfig(java.lang.String servingConfig) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(SERVING_CONFIG_PATTERN.matcher(servingConfig).matches(),
                      "Parameter servingConfig must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/servingConfigs/[^/]+$");
                }
                this.servingConfig = servingConfig;
                return this;
              }

              @Override
              public Search set(String parameterName, Object value) {
                return (Search) super.set(parameterName, value);
              }
            }

          }
          /**
           * An accessor for creating requests from the Sessions collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
           *   {@code DiscoveryEngine.Sessions.List request = discoveryengine.sessions().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Sessions sessions() {
            return new Sessions();
          }

          /**
           * The "sessions" collection of methods.
           */
          public class Sessions {

            /**
             * Creates a Session. If the Session to create already exists, an ALREADY_EXISTS error is returned.
             *
             * Create a request for the method "sessions.create".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             *
             * @param parent Required. Full resource name of parent data store. Format: `projects/{project_number}/locations/{loc
             *        ation_id}/collections/{collection}/dataStores/{data_store_id}`
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSession}
             * @return the request
             */
            public Create create(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSession content) throws java.io.IOException {
              Create result = new Create(parent, content);
              initialize(result);
              return result;
            }

            public class Create extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSession> {

              private static final String REST_PATH = "v1alpha/{+parent}/sessions";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$");

              /**
               * Creates a Session. If the Session to create already exists, an ALREADY_EXISTS error is
               * returned.
               *
               * Create a request for the method "sessions.create".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
               * <p> {@link
               * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. Full resource name of parent data store. Format: `projects/{project_number}/locations/{loc
             *        ation_id}/collections/{collection}/dataStores/{data_store_id}`
               * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSession}
               * @since 1.13
               */
              protected Create(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSession content) {
                super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSession.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$");
                }
              }

              @Override
              public Create set$Xgafv(java.lang.String $Xgafv) {
                return (Create) super.set$Xgafv($Xgafv);
              }

              @Override
              public Create setAccessToken(java.lang.String accessToken) {
                return (Create) super.setAccessToken(accessToken);
              }

              @Override
              public Create setAlt(java.lang.String alt) {
                return (Create) super.setAlt(alt);
              }

              @Override
              public Create setCallback(java.lang.String callback) {
                return (Create) super.setCallback(callback);
              }

              @Override
              public Create setFields(java.lang.String fields) {
                return (Create) super.setFields(fields);
              }

              @Override
              public Create setKey(java.lang.String key) {
                return (Create) super.setKey(key);
              }

              @Override
              public Create setOauthToken(java.lang.String oauthToken) {
                return (Create) super.setOauthToken(oauthToken);
              }

              @Override
              public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Create) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Create setQuotaUser(java.lang.String quotaUser) {
                return (Create) super.setQuotaUser(quotaUser);
              }

              @Override
              public Create setUploadType(java.lang.String uploadType) {
                return (Create) super.setUploadType(uploadType);
              }

              @Override
              public Create setUploadProtocol(java.lang.String uploadProtocol) {
                return (Create) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. Full resource name of parent data store. Format: `projects/{project_numbe
               * r}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}`
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. Full resource name of parent data store. Format: `projects/{project_number}/locations/{lo
             cation_id}/collections/{collection}/dataStores/{data_store_id}`
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. Full resource name of parent data store. Format: `projects/{project_numbe
               * r}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}`
               */
              public Create setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public Create set(String parameterName, Object value) {
                return (Create) super.set(parameterName, value);
              }
            }
            /**
             * Deletes a Session. If the Session to delete does not exist, a NOT_FOUND error is returned.
             *
             * Create a request for the method "sessions.delete".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param name Required. The resource name of the Session to delete. Format: `projects/{project_number}/locations/{
             *        location_id}/collections/{collection}/dataStores/{data_store_id}/sessions/{session_id}`
             * @return the request
             */
            public Delete delete(java.lang.String name) throws java.io.IOException {
              Delete result = new Delete(name);
              initialize(result);
              return result;
            }

            public class Delete extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleProtobufEmpty> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/sessions/[^/]+$");

              /**
               * Deletes a Session. If the Session to delete does not exist, a NOT_FOUND error is returned.
               *
               * Create a request for the method "sessions.delete".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               * <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The resource name of the Session to delete. Format: `projects/{project_number}/locations/{
             *        location_id}/collections/{collection}/dataStores/{data_store_id}/sessions/{session_id}`
               * @since 1.13
               */
              protected Delete(java.lang.String name) {
                super(DiscoveryEngine.this, "DELETE", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleProtobufEmpty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/sessions/[^/]+$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The resource name of the Session to delete. Format: `projects/{project_nu
               * mber}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/s
               * essions/{session_id}`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The resource name of the Session to delete. Format: `projects/{project_number}/locations/
             {location_id}/collections/{collection}/dataStores/{data_store_id}/sessions/{session_id}`
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The resource name of the Session to delete. Format: `projects/{project_nu
               * mber}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/s
               * essions/{session_id}`
               */
              public Delete setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/sessions/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * Gets a Session.
             *
             * Create a request for the method "sessions.get".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name Required. The resource name of the Session to get. Format: `projects/{project_number}/locations/{loc
             *        ation_id}/collections/{collection}/dataStores/{data_store_id}/sessions/{session_id}`
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSession> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/sessions/[^/]+$");

              /**
               * Gets a Session.
               *
               * Create a request for the method "sessions.get".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The resource name of the Session to get. Format: `projects/{project_number}/locations/{loc
             *        ation_id}/collections/{collection}/dataStores/{data_store_id}/sessions/{session_id}`
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSession.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/sessions/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The resource name of the Session to get. Format: `projects/{project_numbe
               * r}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/sess
               * ions/{session_id}`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The resource name of the Session to get. Format: `projects/{project_number}/locations/{lo
             cation_id}/collections/{collection}/dataStores/{data_store_id}/sessions/{session_id}`
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The resource name of the Session to get. Format: `projects/{project_numbe
               * r}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/sess
               * ions/{session_id}`
               */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/sessions/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Lists all Sessions by their parent DataStore.
             *
             * Create a request for the method "sessions.list".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The data store resource name. Format: `projects/{project_number}/locations/{location_id}/c
             *        ollections/{collection}/dataStores/{data_store_id}`
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaListSessionsResponse> {

              private static final String REST_PATH = "v1alpha/{+parent}/sessions";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$");

              /**
               * Lists all Sessions by their parent DataStore.
               *
               * Create a request for the method "sessions.list".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The data store resource name. Format: `projects/{project_number}/locations/{location_id}/c
             *        ollections/{collection}/dataStores/{data_store_id}`
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaListSessionsResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The data store resource name. Format: `projects/{project_number}/location
               * s/{location_id}/collections/{collection}/dataStores/{data_store_id}`
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The data store resource name. Format: `projects/{project_number}/locations/{location_id}/
             collections/{collection}/dataStores/{data_store_id}`
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The data store resource name. Format: `projects/{project_number}/location
               * s/{location_id}/collections/{collection}/dataStores/{data_store_id}`
               */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * A filter to apply on the list results. The supported features are: user_pseudo_id,
               * state. Example: "user_pseudo_id = some_id"
               */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** A filter to apply on the list results. The supported features are: user_pseudo_id, state. Example:
             "user_pseudo_id = some_id"
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /**
               * A filter to apply on the list results. The supported features are: user_pseudo_id,
               * state. Example: "user_pseudo_id = some_id"
               */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /**
               * A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
               * after a field name for descending. Supported fields: * `update_time` *
               * `create_time` * `session_name` Example: "update_time desc" "create_time"
               */
              @com.google.api.client.util.Key
              private java.lang.String orderBy;

              /** A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field
             name for descending. Supported fields: * `update_time` * `create_time` * `session_name` Example:
             "update_time desc" "create_time"
               */
              public java.lang.String getOrderBy() {
                return orderBy;
              }

              /**
               * A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
               * after a field name for descending. Supported fields: * `update_time` *
               * `create_time` * `session_name` Example: "update_time desc" "create_time"
               */
              public List setOrderBy(java.lang.String orderBy) {
                this.orderBy = orderBy;
                return this;
              }

              /**
               * Maximum number of results to return. If unspecified, defaults to 50. Max allowed
               * value is 1000.
               */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** Maximum number of results to return. If unspecified, defaults to 50. Max allowed value is 1000.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /**
               * Maximum number of results to return. If unspecified, defaults to 50. Max allowed
               * value is 1000.
               */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /**
               * A page token, received from a previous `ListSessions` call. Provide this to
               * retrieve the subsequent page.
               */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** A page token, received from a previous `ListSessions` call. Provide this to retrieve the subsequent
             page.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /**
               * A page token, received from a previous `ListSessions` call. Provide this to
               * retrieve the subsequent page.
               */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }
            /**
             * Updates a Session. Session action type cannot be changed. If the Session to update does not
             * exist, a NOT_FOUND error is returned.
             *
             * Create a request for the method "sessions.patch".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             *
             * @param name Immutable. Fully qualified name
             *        `project/locations/global/collections/{collection}/engines/{engine}/sessions`
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSession}
             * @return the request
             */
            public Patch patch(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSession content) throws java.io.IOException {
              Patch result = new Patch(name, content);
              initialize(result);
              return result;
            }

            public class Patch extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSession> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/sessions/[^/]+$");

              /**
               * Updates a Session. Session action type cannot be changed. If the Session to update does not
               * exist, a NOT_FOUND error is returned.
               *
               * Create a request for the method "sessions.patch".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
               * <p> {@link
               * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Immutable. Fully qualified name
             *        `project/locations/global/collections/{collection}/engines/{engine}/sessions`
               * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSession}
               * @since 1.13
               */
              protected Patch(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSession content) {
                super(DiscoveryEngine.this, "PATCH", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSession.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/sessions/[^/]+$");
                }
              }

              @Override
              public Patch set$Xgafv(java.lang.String $Xgafv) {
                return (Patch) super.set$Xgafv($Xgafv);
              }

              @Override
              public Patch setAccessToken(java.lang.String accessToken) {
                return (Patch) super.setAccessToken(accessToken);
              }

              @Override
              public Patch setAlt(java.lang.String alt) {
                return (Patch) super.setAlt(alt);
              }

              @Override
              public Patch setCallback(java.lang.String callback) {
                return (Patch) super.setCallback(callback);
              }

              @Override
              public Patch setFields(java.lang.String fields) {
                return (Patch) super.setFields(fields);
              }

              @Override
              public Patch setKey(java.lang.String key) {
                return (Patch) super.setKey(key);
              }

              @Override
              public Patch setOauthToken(java.lang.String oauthToken) {
                return (Patch) super.setOauthToken(oauthToken);
              }

              @Override
              public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Patch) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Patch setQuotaUser(java.lang.String quotaUser) {
                return (Patch) super.setQuotaUser(quotaUser);
              }

              @Override
              public Patch setUploadType(java.lang.String uploadType) {
                return (Patch) super.setUploadType(uploadType);
              }

              @Override
              public Patch setUploadProtocol(java.lang.String uploadProtocol) {
                return (Patch) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Immutable. Fully qualified name
               * `project/locations/global/collections/{collection}/engines/{engine}/sessions`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Immutable. Fully qualified name
             `project/locations/global/collections/{collection}/engines/{engine}/sessions`
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Immutable. Fully qualified name
               * `project/locations/global/collections/{collection}/engines/{engine}/sessions`
               */
              public Patch setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/sessions/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * Indicates which fields in the provided Session to update. The following are NOT
               * supported: * Session.name If not set or empty, all supported fields are updated.
               */
              @com.google.api.client.util.Key
              private String updateMask;

              /** Indicates which fields in the provided Session to update. The following are NOT supported: *
             Session.name If not set or empty, all supported fields are updated.
               */
              public String getUpdateMask() {
                return updateMask;
              }

              /**
               * Indicates which fields in the provided Session to update. The following are NOT
               * supported: * Session.name If not set or empty, all supported fields are updated.
               */
              public Patch setUpdateMask(String updateMask) {
                this.updateMask = updateMask;
                return this;
              }

              @Override
              public Patch set(String parameterName, Object value) {
                return (Patch) super.set(parameterName, value);
              }
            }

            /**
             * An accessor for creating requests from the Answers collection.
             *
             * <p>The typical use is:</p>
             * <pre>
             *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
             *   {@code DiscoveryEngine.Answers.List request = discoveryengine.answers().list(parameters ...)}
             * </pre>
             *
             * @return the resource collection
             */
            public Answers answers() {
              return new Answers();
            }

            /**
             * The "answers" collection of methods.
             */
            public class Answers {

              /**
               * Gets a Answer.
               *
               * Create a request for the method "answers.get".
               *
               * This request holds the parameters needed by the discoveryengine server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
               *
               * @param name Required. The resource name of the Answer to get. Format: `projects/{project_number}/locations/{loca
               *        tion_id}/collections/{collection}/engines/{engine_id}/sessions/{session_id}/answers/{answe
               *        r_id}`
               * @return the request
               */
              public Get get(java.lang.String name) throws java.io.IOException {
                Get result = new Get(name);
                initialize(result);
                return result;
              }

              public class Get extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaAnswer> {

                private static final String REST_PATH = "v1alpha/{+name}";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/sessions/[^/]+/answers/[^/]+$");

                /**
                 * Gets a Answer.
                 *
                 * Create a request for the method "answers.get".
                 *
                 * This request holds the parameters needed by the the discoveryengine server.  After setting any
                 * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
                 * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name Required. The resource name of the Answer to get. Format: `projects/{project_number}/locations/{loca
               *        tion_id}/collections/{collection}/engines/{engine_id}/sessions/{session_id}/answers/{answe
               *        r_id}`
                 * @since 1.13
                 */
                protected Get(java.lang.String name) {
                  super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaAnswer.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/sessions/[^/]+/answers/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public Get set$Xgafv(java.lang.String $Xgafv) {
                  return (Get) super.set$Xgafv($Xgafv);
                }

                @Override
                public Get setAccessToken(java.lang.String accessToken) {
                  return (Get) super.setAccessToken(accessToken);
                }

                @Override
                public Get setAlt(java.lang.String alt) {
                  return (Get) super.setAlt(alt);
                }

                @Override
                public Get setCallback(java.lang.String callback) {
                  return (Get) super.setCallback(callback);
                }

                @Override
                public Get setFields(java.lang.String fields) {
                  return (Get) super.setFields(fields);
                }

                @Override
                public Get setKey(java.lang.String key) {
                  return (Get) super.setKey(key);
                }

                @Override
                public Get setOauthToken(java.lang.String oauthToken) {
                  return (Get) super.setOauthToken(oauthToken);
                }

                @Override
                public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Get) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Get setQuotaUser(java.lang.String quotaUser) {
                  return (Get) super.setQuotaUser(quotaUser);
                }

                @Override
                public Get setUploadType(java.lang.String uploadType) {
                  return (Get) super.setUploadType(uploadType);
                }

                @Override
                public Get setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Get) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The resource name of the Answer to get. Format: `projects/{project_numb
                 * er}/locations/{location_id}/collections/{collection}/engines/{engine_id}/sessions
                 * /{session_id}/answers/{answer_id}`
                 */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** Required. The resource name of the Answer to get. Format: `projects/{project_number}/locations/{loc
               ation_id}/collections/{collection}/engines/{engine_id}/sessions/{session_id}/answers/{answer_id}`
                 */
                public java.lang.String getName() {
                  return name;
                }

                /**
                 * Required. The resource name of the Answer to get. Format: `projects/{project_numb
                 * er}/locations/{location_id}/collections/{collection}/engines/{engine_id}/sessions
                 * /{session_id}/answers/{answer_id}`
                 */
                public Get setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/sessions/[^/]+/answers/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                @Override
                public Get set(String parameterName, Object value) {
                  return (Get) super.set(parameterName, value);
                }
              }

            }
          }
        }
        /**
         * An accessor for creating requests from the Operations collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
         *   {@code DiscoveryEngine.Operations.List request = discoveryengine.operations().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Operations operations() {
          return new Operations();
        }

        /**
         * The "operations" collection of methods.
         */
        public class Operations {

          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+/operations/[^/]+$");

            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/collections/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/collections/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation's parent resource.
           * @return the request
           */
          public List list(java.lang.String name) throws java.io.IOException {
            List result = new List(name);
            initialize(result);
            return result;
          }

          public class List extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningListOperationsResponse> {

            private static final String REST_PATH = "v1alpha/{+name}/operations";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/collections/[^/]+$");

            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.list".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation's parent resource.
             * @since 1.13
             */
            protected List(java.lang.String name) {
              super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningListOperationsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/collections/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation's parent resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation's parent resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation's parent resource. */
            public List setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/collections/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** The standard list filter. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** The standard list filter.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** The standard list filter. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** The standard list page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The standard list page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The standard list page size. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The standard list page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The standard list page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The standard list page token. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the DataStores collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
       *   {@code DiscoveryEngine.DataStores.List request = discoveryengine.dataStores().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public DataStores dataStores() {
        return new DataStores();
      }

      /**
       * The "dataStores" collection of methods.
       */
      public class DataStores {

        /**
         * Completes the specified user input with keyword suggestions.
         *
         * Create a request for the method "dataStores.completeQuery".
         *
         * This request holds the parameters needed by the discoveryengine server.  After setting any
         * optional parameters, call the {@link CompleteQuery#execute()} method to invoke the remote
         * operation.
         *
         * @param dataStore Required. The parent data store resource name for which the completion is performed, such as
         *        `projects/locations/global/collections/default_collection/dataStores/default_data_store`.
         * @return the request
         */
        public CompleteQuery completeQuery(java.lang.String dataStore) throws java.io.IOException {
          CompleteQuery result = new CompleteQuery(dataStore);
          initialize(result);
          return result;
        }

        public class CompleteQuery extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaCompleteQueryResponse> {

          private static final String REST_PATH = "v1alpha/{+dataStore}:completeQuery";

          private final java.util.regex.Pattern DATA_STORE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");

          /**
           * Completes the specified user input with keyword suggestions.
           *
           * Create a request for the method "dataStores.completeQuery".
           *
           * This request holds the parameters needed by the the discoveryengine server.  After setting any
           * optional parameters, call the {@link CompleteQuery#execute()} method to invoke the remote
           * operation. <p> {@link CompleteQuery#initialize(com.google.api.client.googleapis.services.Abstra
           * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
           * the constructor. </p>
           *
           * @param dataStore Required. The parent data store resource name for which the completion is performed, such as
         *        `projects/locations/global/collections/default_collection/dataStores/default_data_store`.
           * @since 1.13
           */
          protected CompleteQuery(java.lang.String dataStore) {
            super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaCompleteQueryResponse.class);
            this.dataStore = com.google.api.client.util.Preconditions.checkNotNull(dataStore, "Required parameter dataStore must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(DATA_STORE_PATTERN.matcher(dataStore).matches(),
                  "Parameter dataStore must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public CompleteQuery set$Xgafv(java.lang.String $Xgafv) {
            return (CompleteQuery) super.set$Xgafv($Xgafv);
          }

          @Override
          public CompleteQuery setAccessToken(java.lang.String accessToken) {
            return (CompleteQuery) super.setAccessToken(accessToken);
          }

          @Override
          public CompleteQuery setAlt(java.lang.String alt) {
            return (CompleteQuery) super.setAlt(alt);
          }

          @Override
          public CompleteQuery setCallback(java.lang.String callback) {
            return (CompleteQuery) super.setCallback(callback);
          }

          @Override
          public CompleteQuery setFields(java.lang.String fields) {
            return (CompleteQuery) super.setFields(fields);
          }

          @Override
          public CompleteQuery setKey(java.lang.String key) {
            return (CompleteQuery) super.setKey(key);
          }

          @Override
          public CompleteQuery setOauthToken(java.lang.String oauthToken) {
            return (CompleteQuery) super.setOauthToken(oauthToken);
          }

          @Override
          public CompleteQuery setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (CompleteQuery) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public CompleteQuery setQuotaUser(java.lang.String quotaUser) {
            return (CompleteQuery) super.setQuotaUser(quotaUser);
          }

          @Override
          public CompleteQuery setUploadType(java.lang.String uploadType) {
            return (CompleteQuery) super.setUploadType(uploadType);
          }

          @Override
          public CompleteQuery setUploadProtocol(java.lang.String uploadProtocol) {
            return (CompleteQuery) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent data store resource name for which the completion is performed,
           * such as `projects/locations/global/collections/default_collection/dataStores/default_da
           * ta_store`.
           */
          @com.google.api.client.util.Key
          private java.lang.String dataStore;

          /** Required. The parent data store resource name for which the completion is performed, such as
         `projects/locations/global/collections/default_collection/dataStores/default_data_store`.
           */
          public java.lang.String getDataStore() {
            return dataStore;
          }

          /**
           * Required. The parent data store resource name for which the completion is performed,
           * such as `projects/locations/global/collections/default_collection/dataStores/default_da
           * ta_store`.
           */
          public CompleteQuery setDataStore(java.lang.String dataStore) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(DATA_STORE_PATTERN.matcher(dataStore).matches(),
                  "Parameter dataStore must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");
            }
            this.dataStore = dataStore;
            return this;
          }

          /**
           * Indicates if tail suggestions should be returned if there are no suggestions that match
           * the full query. Even if set to true, if there are suggestions that match the full
           * query, those are returned and no tail suggestions are returned.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean includeTailSuggestions;

          /** Indicates if tail suggestions should be returned if there are no suggestions that match the full
         query. Even if set to true, if there are suggestions that match the full query, those are returned
         and no tail suggestions are returned.
           */
          public java.lang.Boolean getIncludeTailSuggestions() {
            return includeTailSuggestions;
          }

          /**
           * Indicates if tail suggestions should be returned if there are no suggestions that match
           * the full query. Even if set to true, if there are suggestions that match the full
           * query, those are returned and no tail suggestions are returned.
           */
          public CompleteQuery setIncludeTailSuggestions(java.lang.Boolean includeTailSuggestions) {
            this.includeTailSuggestions = includeTailSuggestions;
            return this;
          }

          /**
           * Required. The typeahead input used to fetch suggestions. Maximum length is 128
           * characters.
           */
          @com.google.api.client.util.Key
          private java.lang.String query;

          /** Required. The typeahead input used to fetch suggestions. Maximum length is 128 characters.
           */
          public java.lang.String getQuery() {
            return query;
          }

          /**
           * Required. The typeahead input used to fetch suggestions. Maximum length is 128
           * characters.
           */
          public CompleteQuery setQuery(java.lang.String query) {
            this.query = query;
            return this;
          }

          /**
           * Specifies the autocomplete data model. This overrides any model specified in the
           * Configuration > Autocomplete section of the Cloud console. Currently supported values:
           * * `document` - Using suggestions generated from user-imported documents. * `search-
           * history` - Using suggestions generated from the past history of SearchService.Search
           * API calls. Do not use it when there is no traffic for Search API. * `user-event` -
           * Using suggestions generated from user-imported search events. * `document-completable`
           * - Using suggestions taken directly from user-imported document fields marked as
           * completable. Default values: * `document` is the default model for regular dataStores.
           * * `search-history` is the default model for site search dataStores.
           */
          @com.google.api.client.util.Key
          private java.lang.String queryModel;

          /** Specifies the autocomplete data model. This overrides any model specified in the Configuration >
         Autocomplete section of the Cloud console. Currently supported values: * `document` - Using
         suggestions generated from user-imported documents. * `search-history` - Using suggestions
         generated from the past history of SearchService.Search API calls. Do not use it when there is no
         traffic for Search API. * `user-event` - Using suggestions generated from user-imported search
         events. * `document-completable` - Using suggestions taken directly from user-imported document
         fields marked as completable. Default values: * `document` is the default model for regular
         dataStores. * `search-history` is the default model for site search dataStores.
           */
          public java.lang.String getQueryModel() {
            return queryModel;
          }

          /**
           * Specifies the autocomplete data model. This overrides any model specified in the
           * Configuration > Autocomplete section of the Cloud console. Currently supported values:
           * * `document` - Using suggestions generated from user-imported documents. * `search-
           * history` - Using suggestions generated from the past history of SearchService.Search
           * API calls. Do not use it when there is no traffic for Search API. * `user-event` -
           * Using suggestions generated from user-imported search events. * `document-completable`
           * - Using suggestions taken directly from user-imported document fields marked as
           * completable. Default values: * `document` is the default model for regular dataStores.
           * * `search-history` is the default model for site search dataStores.
           */
          public CompleteQuery setQueryModel(java.lang.String queryModel) {
            this.queryModel = queryModel;
            return this;
          }

          /**
           * A unique identifier for tracking visitors. For example, this could be implemented with
           * an HTTP cookie, which should be able to uniquely identify a visitor on a single device.
           * This unique identifier should not change if the visitor logs in or out of the website.
           * This field should NOT have a fixed value such as `unknown_visitor`. This should be the
           * same identifier as UserEvent.user_pseudo_id and SearchRequest.user_pseudo_id. The field
           * must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an
           * `INVALID_ARGUMENT` error is returned.
           */
          @com.google.api.client.util.Key
          private java.lang.String userPseudoId;

          /** A unique identifier for tracking visitors. For example, this could be implemented with an HTTP
         cookie, which should be able to uniquely identify a visitor on a single device. This unique
         identifier should not change if the visitor logs in or out of the website. This field should NOT
         have a fixed value such as `unknown_visitor`. This should be the same identifier as
         UserEvent.user_pseudo_id and SearchRequest.user_pseudo_id. The field must be a UTF-8 encoded string
         with a length limit of 128 characters. Otherwise, an `INVALID_ARGUMENT` error is returned.
           */
          public java.lang.String getUserPseudoId() {
            return userPseudoId;
          }

          /**
           * A unique identifier for tracking visitors. For example, this could be implemented with
           * an HTTP cookie, which should be able to uniquely identify a visitor on a single device.
           * This unique identifier should not change if the visitor logs in or out of the website.
           * This field should NOT have a fixed value such as `unknown_visitor`. This should be the
           * same identifier as UserEvent.user_pseudo_id and SearchRequest.user_pseudo_id. The field
           * must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an
           * `INVALID_ARGUMENT` error is returned.
           */
          public CompleteQuery setUserPseudoId(java.lang.String userPseudoId) {
            this.userPseudoId = userPseudoId;
            return this;
          }

          @Override
          public CompleteQuery set(String parameterName, Object value) {
            return (CompleteQuery) super.set(parameterName, value);
          }
        }
        /**
         * Creates a DataStore. DataStore is for storing Documents. To serve these documents for Search, or
         * Recommendation use case, an Engine needs to be created separately.
         *
         * Create a request for the method "dataStores.create".
         *
         * This request holds the parameters needed by the discoveryengine server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent resource name, such as
         *        `projects/{project}/locations/{location}/collections/{collection}`.
         * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDataStore}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDataStore content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1alpha/{+parent}/dataStores";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a DataStore. DataStore is for storing Documents. To serve these documents for Search,
           * or Recommendation use case, an Engine needs to be created separately.
           *
           * Create a request for the method "dataStores.create".
           *
           * This request holds the parameters needed by the the discoveryengine server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent resource name, such as
         *        `projects/{project}/locations/{location}/collections/{collection}`.
           * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDataStore}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDataStore content) {
            super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent resource name, such as
           * `projects/{project}/locations/{location}/collections/{collection}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent resource name, such as
         `projects/{project}/locations/{location}/collections/{collection}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent resource name, such as
           * `projects/{project}/locations/{location}/collections/{collection}`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * A boolean flag indicating whether user want to directly create an advanced data store
           * for site search. If the data store is not configured as site search (GENERIC vertical
           * and PUBLIC_WEBSITE content_config), this flag will be ignored.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean createAdvancedSiteSearch;

          /** A boolean flag indicating whether user want to directly create an advanced data store for site
         search. If the data store is not configured as site search (GENERIC vertical and PUBLIC_WEBSITE
         content_config), this flag will be ignored.
           */
          public java.lang.Boolean getCreateAdvancedSiteSearch() {
            return createAdvancedSiteSearch;
          }

          /**
           * A boolean flag indicating whether user want to directly create an advanced data store
           * for site search. If the data store is not configured as site search (GENERIC vertical
           * and PUBLIC_WEBSITE content_config), this flag will be ignored.
           */
          public Create setCreateAdvancedSiteSearch(java.lang.Boolean createAdvancedSiteSearch) {
            this.createAdvancedSiteSearch = createAdvancedSiteSearch;
            return this;
          }

          /**
           * Required. The ID to use for the DataStore, which will become the final component of the
           * DataStore's resource name. This field must conform to
           * [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63
           * characters. Otherwise, an INVALID_ARGUMENT error is returned.
           */
          @com.google.api.client.util.Key
          private java.lang.String dataStoreId;

          /** Required. The ID to use for the DataStore, which will become the final component of the DataStore's
         resource name. This field must conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard
         with a length limit of 63 characters. Otherwise, an INVALID_ARGUMENT error is returned.
           */
          public java.lang.String getDataStoreId() {
            return dataStoreId;
          }

          /**
           * Required. The ID to use for the DataStore, which will become the final component of the
           * DataStore's resource name. This field must conform to
           * [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63
           * characters. Otherwise, an INVALID_ARGUMENT error is returned.
           */
          public Create setDataStoreId(java.lang.String dataStoreId) {
            this.dataStoreId = dataStoreId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a DataStore.
         *
         * Create a request for the method "dataStores.delete".
         *
         * This request holds the parameters needed by the discoveryengine server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. Full resource name of DataStore, such as
         *        `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_stor
         *        e_id}`. If the caller does not have permission to delete the DataStore, regardless of
         *        whether or not it exists, a PERMISSION_DENIED error is returned. If the DataStore to
         *        delete does not exist, a NOT_FOUND error is returned.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1alpha/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");

          /**
           * Deletes a DataStore.
           *
           * Create a request for the method "dataStores.delete".
           *
           * This request holds the parameters needed by the the discoveryengine server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Full resource name of DataStore, such as
         *        `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_stor
         *        e_id}`. If the caller does not have permission to delete the DataStore, regardless of
         *        whether or not it exists, a PERMISSION_DENIED error is returned. If the DataStore to
         *        delete does not exist, a NOT_FOUND error is returned.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(DiscoveryEngine.this, "DELETE", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Full resource name of DataStore, such as `projects/{project}/locations/{locat
           * ion}/collections/{collection_id}/dataStores/{data_store_id}`. If the caller does not
           * have permission to delete the DataStore, regardless of whether or not it exists, a
           * PERMISSION_DENIED error is returned. If the DataStore to delete does not exist, a
           * NOT_FOUND error is returned.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Full resource name of DataStore, such as
         `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`.
         If the caller does not have permission to delete the DataStore, regardless of whether or not it
         exists, a PERMISSION_DENIED error is returned. If the DataStore to delete does not exist, a
         NOT_FOUND error is returned.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Full resource name of DataStore, such as `projects/{project}/locations/{locat
           * ion}/collections/{collection_id}/dataStores/{data_store_id}`. If the caller does not
           * have permission to delete the DataStore, regardless of whether or not it exists, a
           * PERMISSION_DENIED error is returned. If the DataStore to delete does not exist, a
           * NOT_FOUND error is returned.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a DataStore.
         *
         * Create a request for the method "dataStores.get".
         *
         * This request holds the parameters needed by the discoveryengine server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Full resource name of DataStore, such as
         *        `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_stor
         *        e_id}`. If the caller does not have permission to access the DataStore, regardless of
         *        whether or not it exists, a PERMISSION_DENIED error is returned. If the requested
         *        DataStore does not exist, a NOT_FOUND error is returned.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDataStore> {

          private static final String REST_PATH = "v1alpha/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");

          /**
           * Gets a DataStore.
           *
           * Create a request for the method "dataStores.get".
           *
           * This request holds the parameters needed by the the discoveryengine server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Full resource name of DataStore, such as
         *        `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_stor
         *        e_id}`. If the caller does not have permission to access the DataStore, regardless of
         *        whether or not it exists, a PERMISSION_DENIED error is returned. If the requested
         *        DataStore does not exist, a NOT_FOUND error is returned.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDataStore.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Full resource name of DataStore, such as `projects/{project}/locations/{locat
           * ion}/collections/{collection_id}/dataStores/{data_store_id}`. If the caller does not
           * have permission to access the DataStore, regardless of whether or not it exists, a
           * PERMISSION_DENIED error is returned. If the requested DataStore does not exist, a
           * NOT_FOUND error is returned.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Full resource name of DataStore, such as
         `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`.
         If the caller does not have permission to access the DataStore, regardless of whether or not it
         exists, a PERMISSION_DENIED error is returned. If the requested DataStore does not exist, a
         NOT_FOUND error is returned.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Full resource name of DataStore, such as `projects/{project}/locations/{locat
           * ion}/collections/{collection_id}/dataStores/{data_store_id}`. If the caller does not
           * have permission to access the DataStore, regardless of whether or not it exists, a
           * PERMISSION_DENIED error is returned. If the requested DataStore does not exist, a
           * NOT_FOUND error is returned.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Gets a DocumentProcessingConfig.
         *
         * Create a request for the method "dataStores.getDocumentProcessingConfig".
         *
         * This request holds the parameters needed by the discoveryengine server.  After setting any
         * optional parameters, call the {@link GetDocumentProcessingConfig#execute()} method to invoke the
         * remote operation.
         *
         * @param name Required. Full DocumentProcessingConfig resource name. Format: `projects/{project_number}/locations/
         *        {location_id}/collections/{collection_id}/dataStores/{data_store_id}/documentProcessingCon
         *        fig`
         * @return the request
         */
        public GetDocumentProcessingConfig getDocumentProcessingConfig(java.lang.String name) throws java.io.IOException {
          GetDocumentProcessingConfig result = new GetDocumentProcessingConfig(name);
          initialize(result);
          return result;
        }

        public class GetDocumentProcessingConfig extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfig> {

          private static final String REST_PATH = "v1alpha/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/documentProcessingConfig$");

          /**
           * Gets a DocumentProcessingConfig.
           *
           * Create a request for the method "dataStores.getDocumentProcessingConfig".
           *
           * This request holds the parameters needed by the the discoveryengine server.  After setting any
           * optional parameters, call the {@link GetDocumentProcessingConfig#execute()} method to invoke
           * the remote operation. <p> {@link GetDocumentProcessingConfig#initialize(com.google.api.client.g
           * oogleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
           * immediately after invoking the constructor. </p>
           *
           * @param name Required. Full DocumentProcessingConfig resource name. Format: `projects/{project_number}/locations/
         *        {location_id}/collections/{collection_id}/dataStores/{data_store_id}/documentProcessingCon
         *        fig`
           * @since 1.13
           */
          protected GetDocumentProcessingConfig(java.lang.String name) {
            super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfig.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/documentProcessingConfig$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetDocumentProcessingConfig set$Xgafv(java.lang.String $Xgafv) {
            return (GetDocumentProcessingConfig) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetDocumentProcessingConfig setAccessToken(java.lang.String accessToken) {
            return (GetDocumentProcessingConfig) super.setAccessToken(accessToken);
          }

          @Override
          public GetDocumentProcessingConfig setAlt(java.lang.String alt) {
            return (GetDocumentProcessingConfig) super.setAlt(alt);
          }

          @Override
          public GetDocumentProcessingConfig setCallback(java.lang.String callback) {
            return (GetDocumentProcessingConfig) super.setCallback(callback);
          }

          @Override
          public GetDocumentProcessingConfig setFields(java.lang.String fields) {
            return (GetDocumentProcessingConfig) super.setFields(fields);
          }

          @Override
          public GetDocumentProcessingConfig setKey(java.lang.String key) {
            return (GetDocumentProcessingConfig) super.setKey(key);
          }

          @Override
          public GetDocumentProcessingConfig setOauthToken(java.lang.String oauthToken) {
            return (GetDocumentProcessingConfig) super.setOauthToken(oauthToken);
          }

          @Override
          public GetDocumentProcessingConfig setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetDocumentProcessingConfig) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetDocumentProcessingConfig setQuotaUser(java.lang.String quotaUser) {
            return (GetDocumentProcessingConfig) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetDocumentProcessingConfig setUploadType(java.lang.String uploadType) {
            return (GetDocumentProcessingConfig) super.setUploadType(uploadType);
          }

          @Override
          public GetDocumentProcessingConfig setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetDocumentProcessingConfig) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Full DocumentProcessingConfig resource name. Format: `projects/{project_numbe
           * r}/locations/{location_id}/collections/{collection_id}/dataStores/{data_store_id}/docum
           * entProcessingConfig`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Full DocumentProcessingConfig resource name. Format: `projects/{project_number}/locations
         /{location_id}/collections/{collection_id}/dataStores/{data_store_id}/documentProcessingConfig`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Full DocumentProcessingConfig resource name. Format: `projects/{project_numbe
           * r}/locations/{location_id}/collections/{collection_id}/dataStores/{data_store_id}/docum
           * entProcessingConfig`
           */
          public GetDocumentProcessingConfig setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/documentProcessingConfig$");
            }
            this.name = name;
            return this;
          }

          @Override
          public GetDocumentProcessingConfig set(String parameterName, Object value) {
            return (GetDocumentProcessingConfig) super.set(parameterName, value);
          }
        }
        /**
         * Gets the SiteSearchEngine.
         *
         * Create a request for the method "dataStores.getSiteSearchEngine".
         *
         * This request holds the parameters needed by the discoveryengine server.  After setting any
         * optional parameters, call the {@link GetSiteSearchEngine#execute()} method to invoke the remote
         * operation.
         *
         * @param name Required. Resource name of SiteSearchEngine, such as `projects/{project}/locations/{location}/collec
         *        tions/{collection}/dataStores/{data_store}/siteSearchEngine`. If the caller does not have
         *        permission to access the [SiteSearchEngine], regardless of whether or not it exists, a
         *        PERMISSION_DENIED error is returned.
         * @return the request
         */
        public GetSiteSearchEngine getSiteSearchEngine(java.lang.String name) throws java.io.IOException {
          GetSiteSearchEngine result = new GetSiteSearchEngine(name);
          initialize(result);
          return result;
        }

        public class GetSiteSearchEngine extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSiteSearchEngine> {

          private static final String REST_PATH = "v1alpha/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/siteSearchEngine$");

          /**
           * Gets the SiteSearchEngine.
           *
           * Create a request for the method "dataStores.getSiteSearchEngine".
           *
           * This request holds the parameters needed by the the discoveryengine server.  After setting any
           * optional parameters, call the {@link GetSiteSearchEngine#execute()} method to invoke the remote
           * operation. <p> {@link GetSiteSearchEngine#initialize(com.google.api.client.googleapis.services.
           * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param name Required. Resource name of SiteSearchEngine, such as `projects/{project}/locations/{location}/collec
         *        tions/{collection}/dataStores/{data_store}/siteSearchEngine`. If the caller does not have
         *        permission to access the [SiteSearchEngine], regardless of whether or not it exists, a
         *        PERMISSION_DENIED error is returned.
           * @since 1.13
           */
          protected GetSiteSearchEngine(java.lang.String name) {
            super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSiteSearchEngine.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/siteSearchEngine$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetSiteSearchEngine set$Xgafv(java.lang.String $Xgafv) {
            return (GetSiteSearchEngine) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetSiteSearchEngine setAccessToken(java.lang.String accessToken) {
            return (GetSiteSearchEngine) super.setAccessToken(accessToken);
          }

          @Override
          public GetSiteSearchEngine setAlt(java.lang.String alt) {
            return (GetSiteSearchEngine) super.setAlt(alt);
          }

          @Override
          public GetSiteSearchEngine setCallback(java.lang.String callback) {
            return (GetSiteSearchEngine) super.setCallback(callback);
          }

          @Override
          public GetSiteSearchEngine setFields(java.lang.String fields) {
            return (GetSiteSearchEngine) super.setFields(fields);
          }

          @Override
          public GetSiteSearchEngine setKey(java.lang.String key) {
            return (GetSiteSearchEngine) super.setKey(key);
          }

          @Override
          public GetSiteSearchEngine setOauthToken(java.lang.String oauthToken) {
            return (GetSiteSearchEngine) super.setOauthToken(oauthToken);
          }

          @Override
          public GetSiteSearchEngine setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetSiteSearchEngine) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetSiteSearchEngine setQuotaUser(java.lang.String quotaUser) {
            return (GetSiteSearchEngine) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetSiteSearchEngine setUploadType(java.lang.String uploadType) {
            return (GetSiteSearchEngine) super.setUploadType(uploadType);
          }

          @Override
          public GetSiteSearchEngine setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetSiteSearchEngine) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Resource name of SiteSearchEngine, such as `projects/{project}/locations/{loc
           * ation}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`. If the
           * caller does not have permission to access the [SiteSearchEngine], regardless of whether
           * or not it exists, a PERMISSION_DENIED error is returned.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Resource name of SiteSearchEngine, such as `projects/{project}/locations/{location}/colle
         ctions/{collection}/dataStores/{data_store}/siteSearchEngine`. If the caller does not have
         permission to access the [SiteSearchEngine], regardless of whether or not it exists, a
         PERMISSION_DENIED error is returned.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Resource name of SiteSearchEngine, such as `projects/{project}/locations/{loc
           * ation}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`. If the
           * caller does not have permission to access the [SiteSearchEngine], regardless of whether
           * or not it exists, a PERMISSION_DENIED error is returned.
           */
          public GetSiteSearchEngine setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/siteSearchEngine$");
            }
            this.name = name;
            return this;
          }

          @Override
          public GetSiteSearchEngine set(String parameterName, Object value) {
            return (GetSiteSearchEngine) super.set(parameterName, value);
          }
        }
        /**
         * Lists all the DataStores associated with the project.
         *
         * Create a request for the method "dataStores.list".
         *
         * This request holds the parameters needed by the discoveryengine server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent branch resource name, such as
         *        `projects/{project}/locations/{location}/collections/{collection_id}`. If the caller does
         *        not have permission to list DataStores under this location, regardless of whether or not
         *        this data store exists, a PERMISSION_DENIED error is returned.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaListDataStoresResponse> {

          private static final String REST_PATH = "v1alpha/{+parent}/dataStores";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists all the DataStores associated with the project.
           *
           * Create a request for the method "dataStores.list".
           *
           * This request holds the parameters needed by the the discoveryengine server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent branch resource name, such as
         *        `projects/{project}/locations/{location}/collections/{collection_id}`. If the caller does
         *        not have permission to list DataStores under this location, regardless of whether or not
         *        this data store exists, a PERMISSION_DENIED error is returned.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaListDataStoresResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent branch resource name, such as
           * `projects/{project}/locations/{location}/collections/{collection_id}`. If the caller
           * does not have permission to list DataStores under this location, regardless of whether
           * or not this data store exists, a PERMISSION_DENIED error is returned.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent branch resource name, such as
         `projects/{project}/locations/{location}/collections/{collection_id}`. If the caller does not have
         permission to list DataStores under this location, regardless of whether or not this data store
         exists, a PERMISSION_DENIED error is returned.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent branch resource name, such as
           * `projects/{project}/locations/{location}/collections/{collection_id}`. If the caller
           * does not have permission to list DataStores under this location, regardless of whether
           * or not this data store exists, a PERMISSION_DENIED error is returned.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Filter by solution type. For example: filter = 'solution_type:SOLUTION_TYPE_SEARCH'
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Filter by solution type. For example: filter = 'solution_type:SOLUTION_TYPE_SEARCH'
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * Filter by solution type. For example: filter = 'solution_type:SOLUTION_TYPE_SEARCH'
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * Maximum number of DataStores to return. If unspecified, defaults to 10. The maximum
           * allowed value is 50. Values above 50 will be coerced to 50. If this field is negative,
           * an INVALID_ARGUMENT is returned.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Maximum number of DataStores to return. If unspecified, defaults to 10. The maximum allowed value
         is 50. Values above 50 will be coerced to 50. If this field is negative, an INVALID_ARGUMENT is
         returned.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Maximum number of DataStores to return. If unspecified, defaults to 10. The maximum
           * allowed value is 50. Values above 50 will be coerced to 50. If this field is negative,
           * an INVALID_ARGUMENT is returned.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * A page token ListDataStoresResponse.next_page_token, received from a previous
           * DataStoreService.ListDataStores call. Provide this to retrieve the subsequent page.
           * When paginating, all other parameters provided to DataStoreService.ListDataStores must
           * match the call that provided the page token. Otherwise, an INVALID_ARGUMENT error is
           * returned.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** A page token ListDataStoresResponse.next_page_token, received from a previous
         DataStoreService.ListDataStores call. Provide this to retrieve the subsequent page. When
         paginating, all other parameters provided to DataStoreService.ListDataStores must match the call
         that provided the page token. Otherwise, an INVALID_ARGUMENT error is returned.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * A page token ListDataStoresResponse.next_page_token, received from a previous
           * DataStoreService.ListDataStores call. Provide this to retrieve the subsequent page.
           * When paginating, all other parameters provided to DataStoreService.ListDataStores must
           * match the call that provided the page token. Otherwise, an INVALID_ARGUMENT error is
           * returned.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates a DataStore
         *
         * Create a request for the method "dataStores.patch".
         *
         * This request holds the parameters needed by the discoveryengine server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Immutable. The full resource name of the data store. Format:
         *        `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_stor
         *        e_id}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters.
         * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDataStore}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDataStore content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDataStore> {

          private static final String REST_PATH = "v1alpha/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");

          /**
           * Updates a DataStore
           *
           * Create a request for the method "dataStores.patch".
           *
           * This request holds the parameters needed by the the discoveryengine server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Immutable. The full resource name of the data store. Format:
         *        `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_stor
         *        e_id}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters.
           * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDataStore}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDataStore content) {
            super(DiscoveryEngine.this, "PATCH", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDataStore.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Immutable. The full resource name of the data store. Format: `projects/{project}/locati
           * ons/{location}/collections/{collection_id}/dataStores/{data_store_id}`. This field must
           * be a UTF-8 encoded string with a length limit of 1024 characters.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Immutable. The full resource name of the data store. Format:
         `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`.
         This field must be a UTF-8 encoded string with a length limit of 1024 characters.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Immutable. The full resource name of the data store. Format: `projects/{project}/locati
           * ons/{location}/collections/{collection_id}/dataStores/{data_store_id}`. This field must
           * be a UTF-8 encoded string with a length limit of 1024 characters.
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Indicates which fields in the provided DataStore to update. If an unsupported or
           * unknown field is provided, an INVALID_ARGUMENT error is returned.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Indicates which fields in the provided DataStore to update. If an unsupported or unknown field is
         provided, an INVALID_ARGUMENT error is returned.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Indicates which fields in the provided DataStore to update. If an unsupported or
           * unknown field is provided, an INVALID_ARGUMENT error is returned.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Updates the DocumentProcessingConfig. DocumentProcessingConfig is a singleon resource of
         * DataStore. It's empty when DataStore is created. The first call to this method will set up
         * DocumentProcessingConfig.
         *
         * Create a request for the method "dataStores.updateDocumentProcessingConfig".
         *
         * This request holds the parameters needed by the discoveryengine server.  After setting any
         * optional parameters, call the {@link UpdateDocumentProcessingConfig#execute()} method to invoke
         * the remote operation.
         *
         * @param name The full resource name of the Document Processing Config. Format:
         *        `projects/locations/collections/dataStores/documentProcessingConfig`.
         * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfig}
         * @return the request
         */
        public UpdateDocumentProcessingConfig updateDocumentProcessingConfig(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfig content) throws java.io.IOException {
          UpdateDocumentProcessingConfig result = new UpdateDocumentProcessingConfig(name, content);
          initialize(result);
          return result;
        }

        public class UpdateDocumentProcessingConfig extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfig> {

          private static final String REST_PATH = "v1alpha/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/documentProcessingConfig$");

          /**
           * Updates the DocumentProcessingConfig. DocumentProcessingConfig is a singleon resource of
           * DataStore. It's empty when DataStore is created. The first call to this method will set up
           * DocumentProcessingConfig.
           *
           * Create a request for the method "dataStores.updateDocumentProcessingConfig".
           *
           * This request holds the parameters needed by the the discoveryengine server.  After setting any
           * optional parameters, call the {@link UpdateDocumentProcessingConfig#execute()} method to invoke
           * the remote operation. <p> {@link UpdateDocumentProcessingConfig#initialize(com.google.api.clien
           * t.googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
           * immediately after invoking the constructor. </p>
           *
           * @param name The full resource name of the Document Processing Config. Format:
         *        `projects/locations/collections/dataStores/documentProcessingConfig`.
           * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfig}
           * @since 1.13
           */
          protected UpdateDocumentProcessingConfig(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfig content) {
            super(DiscoveryEngine.this, "PATCH", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfig.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/documentProcessingConfig$");
            }
          }

          @Override
          public UpdateDocumentProcessingConfig set$Xgafv(java.lang.String $Xgafv) {
            return (UpdateDocumentProcessingConfig) super.set$Xgafv($Xgafv);
          }

          @Override
          public UpdateDocumentProcessingConfig setAccessToken(java.lang.String accessToken) {
            return (UpdateDocumentProcessingConfig) super.setAccessToken(accessToken);
          }

          @Override
          public UpdateDocumentProcessingConfig setAlt(java.lang.String alt) {
            return (UpdateDocumentProcessingConfig) super.setAlt(alt);
          }

          @Override
          public UpdateDocumentProcessingConfig setCallback(java.lang.String callback) {
            return (UpdateDocumentProcessingConfig) super.setCallback(callback);
          }

          @Override
          public UpdateDocumentProcessingConfig setFields(java.lang.String fields) {
            return (UpdateDocumentProcessingConfig) super.setFields(fields);
          }

          @Override
          public UpdateDocumentProcessingConfig setKey(java.lang.String key) {
            return (UpdateDocumentProcessingConfig) super.setKey(key);
          }

          @Override
          public UpdateDocumentProcessingConfig setOauthToken(java.lang.String oauthToken) {
            return (UpdateDocumentProcessingConfig) super.setOauthToken(oauthToken);
          }

          @Override
          public UpdateDocumentProcessingConfig setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (UpdateDocumentProcessingConfig) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public UpdateDocumentProcessingConfig setQuotaUser(java.lang.String quotaUser) {
            return (UpdateDocumentProcessingConfig) super.setQuotaUser(quotaUser);
          }

          @Override
          public UpdateDocumentProcessingConfig setUploadType(java.lang.String uploadType) {
            return (UpdateDocumentProcessingConfig) super.setUploadType(uploadType);
          }

          @Override
          public UpdateDocumentProcessingConfig setUploadProtocol(java.lang.String uploadProtocol) {
            return (UpdateDocumentProcessingConfig) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The full resource name of the Document Processing Config. Format:
           * `projects/locations/collections/dataStores/documentProcessingConfig`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The full resource name of the Document Processing Config. Format:
         `projects/locations/collections/dataStores/documentProcessingConfig`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The full resource name of the Document Processing Config. Format:
           * `projects/locations/collections/dataStores/documentProcessingConfig`.
           */
          public UpdateDocumentProcessingConfig setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/documentProcessingConfig$");
            }
            this.name = name;
            return this;
          }

          /**
           * Indicates which fields in the provided DocumentProcessingConfig to update. The
           * following are the only supported fields: * DocumentProcessingConfig.ocr_config If not
           * set, all supported fields are updated.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Indicates which fields in the provided DocumentProcessingConfig to update. The following are the
         only supported fields: * DocumentProcessingConfig.ocr_config If not set, all supported fields are
         updated.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Indicates which fields in the provided DocumentProcessingConfig to update. The
           * following are the only supported fields: * DocumentProcessingConfig.ocr_config If not
           * set, all supported fields are updated.
           */
          public UpdateDocumentProcessingConfig setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public UpdateDocumentProcessingConfig set(String parameterName, Object value) {
            return (UpdateDocumentProcessingConfig) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Branches collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
         *   {@code DiscoveryEngine.Branches.List request = discoveryengine.branches().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Branches branches() {
          return new Branches();
        }

        /**
         * The "branches" collection of methods.
         */
        public class Branches {

          /**
           * An accessor for creating requests from the Documents collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
           *   {@code DiscoveryEngine.Documents.List request = discoveryengine.documents().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Documents documents() {
            return new Documents();
          }

          /**
           * The "documents" collection of methods.
           */
          public class Documents {

            /**
             * Creates a Document.
             *
             * Create a request for the method "documents.create".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The parent resource name, such as `projects/{project}/locations/{location}/collections/{co
             *        llection}/dataStores/{data_store}/branches/{branch}`.
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDocument}
             * @return the request
             */
            public Create create(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDocument content) throws java.io.IOException {
              Create result = new Create(parent, content);
              initialize(result);
              return result;
            }

            public class Create extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDocument> {

              private static final String REST_PATH = "v1alpha/{+parent}/documents";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+$");

              /**
               * Creates a Document.
               *
               * Create a request for the method "documents.create".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
               * <p> {@link
               * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The parent resource name, such as `projects/{project}/locations/{location}/collections/{co
             *        llection}/dataStores/{data_store}/branches/{branch}`.
               * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDocument}
               * @since 1.13
               */
              protected Create(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDocument content) {
                super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDocument.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+$");
                }
              }

              @Override
              public Create set$Xgafv(java.lang.String $Xgafv) {
                return (Create) super.set$Xgafv($Xgafv);
              }

              @Override
              public Create setAccessToken(java.lang.String accessToken) {
                return (Create) super.setAccessToken(accessToken);
              }

              @Override
              public Create setAlt(java.lang.String alt) {
                return (Create) super.setAlt(alt);
              }

              @Override
              public Create setCallback(java.lang.String callback) {
                return (Create) super.setCallback(callback);
              }

              @Override
              public Create setFields(java.lang.String fields) {
                return (Create) super.setFields(fields);
              }

              @Override
              public Create setKey(java.lang.String key) {
                return (Create) super.setKey(key);
              }

              @Override
              public Create setOauthToken(java.lang.String oauthToken) {
                return (Create) super.setOauthToken(oauthToken);
              }

              @Override
              public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Create) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Create setQuotaUser(java.lang.String quotaUser) {
                return (Create) super.setQuotaUser(quotaUser);
              }

              @Override
              public Create setUploadType(java.lang.String uploadType) {
                return (Create) super.setUploadType(uploadType);
              }

              @Override
              public Create setUploadProtocol(java.lang.String uploadProtocol) {
                return (Create) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The parent resource name, such as `projects/{project}/locations/{location
               * }/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The parent resource name, such as `projects/{project}/locations/{location}/collections/{c
             ollection}/dataStores/{data_store}/branches/{branch}`.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The parent resource name, such as `projects/{project}/locations/{location
               * }/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
               */
              public Create setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Required. The ID to use for the Document, which will become the final component of
               * the Document.name. If the caller does not have permission to create the Document,
               * regardless of whether or not it exists, a `PERMISSION_DENIED` error is returned.
               * This field must be unique among all Documents with the same parent. Otherwise, an
               * `ALREADY_EXISTS` error is returned. This field must conform to
               * [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63
               * characters. Otherwise, an `INVALID_ARGUMENT` error is returned.
               */
              @com.google.api.client.util.Key
              private java.lang.String documentId;

              /** Required. The ID to use for the Document, which will become the final component of the
             Document.name. If the caller does not have permission to create the Document, regardless of whether
             or not it exists, a `PERMISSION_DENIED` error is returned. This field must be unique among all
             Documents with the same parent. Otherwise, an `ALREADY_EXISTS` error is returned. This field must
             conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63
             characters. Otherwise, an `INVALID_ARGUMENT` error is returned.
               */
              public java.lang.String getDocumentId() {
                return documentId;
              }

              /**
               * Required. The ID to use for the Document, which will become the final component of
               * the Document.name. If the caller does not have permission to create the Document,
               * regardless of whether or not it exists, a `PERMISSION_DENIED` error is returned.
               * This field must be unique among all Documents with the same parent. Otherwise, an
               * `ALREADY_EXISTS` error is returned. This field must conform to
               * [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63
               * characters. Otherwise, an `INVALID_ARGUMENT` error is returned.
               */
              public Create setDocumentId(java.lang.String documentId) {
                this.documentId = documentId;
                return this;
              }

              @Override
              public Create set(String parameterName, Object value) {
                return (Create) super.set(parameterName, value);
              }
            }
            /**
             * Deletes a Document.
             *
             * Create a request for the method "documents.delete".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param name Required. Full resource name of Document, such as `projects/{project}/locations/{location}/collectio
             *        ns/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`. If the
             *        caller does not have permission to delete the Document, regardless of whether or not it
             *        exists, a `PERMISSION_DENIED` error is returned. If the Document to delete does not exist,
             *        a `NOT_FOUND` error is returned.
             * @return the request
             */
            public Delete delete(java.lang.String name) throws java.io.IOException {
              Delete result = new Delete(name);
              initialize(result);
              return result;
            }

            public class Delete extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleProtobufEmpty> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+/documents/[^/]+$");

              /**
               * Deletes a Document.
               *
               * Create a request for the method "documents.delete".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               * <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. Full resource name of Document, such as `projects/{project}/locations/{location}/collectio
             *        ns/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`. If the
             *        caller does not have permission to delete the Document, regardless of whether or not it
             *        exists, a `PERMISSION_DENIED` error is returned. If the Document to delete does not exist,
             *        a `NOT_FOUND` error is returned.
               * @since 1.13
               */
              protected Delete(java.lang.String name) {
                super(DiscoveryEngine.this, "DELETE", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleProtobufEmpty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+/documents/[^/]+$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. Full resource name of Document, such as `projects/{project}/locations/{lo
               * cation}/collections/{collection}/dataStores/{data_store}/branches/{branch}/document
               * s/{document}`. If the caller does not have permission to delete the Document,
               * regardless of whether or not it exists, a `PERMISSION_DENIED` error is returned. If
               * the Document to delete does not exist, a `NOT_FOUND` error is returned.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. Full resource name of Document, such as `projects/{project}/locations/{location}/collecti
             ons/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`. If the caller
             does not have permission to delete the Document, regardless of whether or not it exists, a
             `PERMISSION_DENIED` error is returned. If the Document to delete does not exist, a `NOT_FOUND`
             error is returned.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. Full resource name of Document, such as `projects/{project}/locations/{lo
               * cation}/collections/{collection}/dataStores/{data_store}/branches/{branch}/document
               * s/{document}`. If the caller does not have permission to delete the Document,
               * regardless of whether or not it exists, a `PERMISSION_DENIED` error is returned. If
               * the Document to delete does not exist, a `NOT_FOUND` error is returned.
               */
              public Delete setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+/documents/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * Gets a Document.
             *
             * Create a request for the method "documents.get".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name Required. Full resource name of Document, such as `projects/{project}/locations/{location}/collectio
             *        ns/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`. If the
             *        caller does not have permission to access the Document, regardless of whether or not it
             *        exists, a `PERMISSION_DENIED` error is returned. If the requested Document does not exist,
             *        a `NOT_FOUND` error is returned.
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDocument> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+/documents/[^/]+$");

              /**
               * Gets a Document.
               *
               * Create a request for the method "documents.get".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. Full resource name of Document, such as `projects/{project}/locations/{location}/collectio
             *        ns/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`. If the
             *        caller does not have permission to access the Document, regardless of whether or not it
             *        exists, a `PERMISSION_DENIED` error is returned. If the requested Document does not exist,
             *        a `NOT_FOUND` error is returned.
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDocument.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+/documents/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. Full resource name of Document, such as `projects/{project}/locations/{lo
               * cation}/collections/{collection}/dataStores/{data_store}/branches/{branch}/document
               * s/{document}`. If the caller does not have permission to access the Document,
               * regardless of whether or not it exists, a `PERMISSION_DENIED` error is returned. If
               * the requested Document does not exist, a `NOT_FOUND` error is returned.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. Full resource name of Document, such as `projects/{project}/locations/{location}/collecti
             ons/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`. If the caller
             does not have permission to access the Document, regardless of whether or not it exists, a
             `PERMISSION_DENIED` error is returned. If the requested Document does not exist, a `NOT_FOUND`
             error is returned.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. Full resource name of Document, such as `projects/{project}/locations/{lo
               * cation}/collections/{collection}/dataStores/{data_store}/branches/{branch}/document
               * s/{document}`. If the caller does not have permission to access the Document,
               * regardless of whether or not it exists, a `PERMISSION_DENIED` error is returned. If
               * the requested Document does not exist, a `NOT_FOUND` error is returned.
               */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+/documents/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Gets the parsed layout information for a Document.
             *
             * Create a request for the method "documents.getProcessedDocument".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link GetProcessedDocument#execute()} method to invoke the remote
             * operation.
             *
             * @param name Required. Full resource name of Document, such as `projects/{project}/locations/{location}/collectio
             *        ns/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`. If the
             *        caller does not have permission to access the Document, regardless of whether or not it
             *        exists, a `PERMISSION_DENIED` error is returned. If the requested Document does not exist,
             *        a `NOT_FOUND` error is returned.
             * @return the request
             */
            public GetProcessedDocument getProcessedDocument(java.lang.String name) throws java.io.IOException {
              GetProcessedDocument result = new GetProcessedDocument(name);
              initialize(result);
              return result;
            }

            public class GetProcessedDocument extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaProcessedDocument> {

              private static final String REST_PATH = "v1alpha/{+name}:getProcessedDocument";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+/documents/[^/]+$");

              /**
               * Gets the parsed layout information for a Document.
               *
               * Create a request for the method "documents.getProcessedDocument".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link GetProcessedDocument#execute()} method to invoke the
               * remote operation. <p> {@link GetProcessedDocument#initialize(com.google.api.client.googleapis.s
               * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
               * after invoking the constructor. </p>
               *
               * @param name Required. Full resource name of Document, such as `projects/{project}/locations/{location}/collectio
             *        ns/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`. If the
             *        caller does not have permission to access the Document, regardless of whether or not it
             *        exists, a `PERMISSION_DENIED` error is returned. If the requested Document does not exist,
             *        a `NOT_FOUND` error is returned.
               * @since 1.13
               */
              protected GetProcessedDocument(java.lang.String name) {
                super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaProcessedDocument.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+/documents/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public GetProcessedDocument set$Xgafv(java.lang.String $Xgafv) {
                return (GetProcessedDocument) super.set$Xgafv($Xgafv);
              }

              @Override
              public GetProcessedDocument setAccessToken(java.lang.String accessToken) {
                return (GetProcessedDocument) super.setAccessToken(accessToken);
              }

              @Override
              public GetProcessedDocument setAlt(java.lang.String alt) {
                return (GetProcessedDocument) super.setAlt(alt);
              }

              @Override
              public GetProcessedDocument setCallback(java.lang.String callback) {
                return (GetProcessedDocument) super.setCallback(callback);
              }

              @Override
              public GetProcessedDocument setFields(java.lang.String fields) {
                return (GetProcessedDocument) super.setFields(fields);
              }

              @Override
              public GetProcessedDocument setKey(java.lang.String key) {
                return (GetProcessedDocument) super.setKey(key);
              }

              @Override
              public GetProcessedDocument setOauthToken(java.lang.String oauthToken) {
                return (GetProcessedDocument) super.setOauthToken(oauthToken);
              }

              @Override
              public GetProcessedDocument setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (GetProcessedDocument) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public GetProcessedDocument setQuotaUser(java.lang.String quotaUser) {
                return (GetProcessedDocument) super.setQuotaUser(quotaUser);
              }

              @Override
              public GetProcessedDocument setUploadType(java.lang.String uploadType) {
                return (GetProcessedDocument) super.setUploadType(uploadType);
              }

              @Override
              public GetProcessedDocument setUploadProtocol(java.lang.String uploadProtocol) {
                return (GetProcessedDocument) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. Full resource name of Document, such as `projects/{project}/locations/{lo
               * cation}/collections/{collection}/dataStores/{data_store}/branches/{branch}/document
               * s/{document}`. If the caller does not have permission to access the Document,
               * regardless of whether or not it exists, a `PERMISSION_DENIED` error is returned. If
               * the requested Document does not exist, a `NOT_FOUND` error is returned.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. Full resource name of Document, such as `projects/{project}/locations/{location}/collecti
             ons/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`. If the caller
             does not have permission to access the Document, regardless of whether or not it exists, a
             `PERMISSION_DENIED` error is returned. If the requested Document does not exist, a `NOT_FOUND`
             error is returned.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. Full resource name of Document, such as `projects/{project}/locations/{lo
               * cation}/collections/{collection}/dataStores/{data_store}/branches/{branch}/document
               * s/{document}`. If the caller does not have permission to access the Document,
               * regardless of whether or not it exists, a `PERMISSION_DENIED` error is returned. If
               * the requested Document does not exist, a `NOT_FOUND` error is returned.
               */
              public GetProcessedDocument setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+/documents/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /** What format output should be. If unspecified, defaults to JSON. */
              @com.google.api.client.util.Key
              private java.lang.String processedDocumentFormat;

              /** What format output should be. If unspecified, defaults to JSON.
               */
              public java.lang.String getProcessedDocumentFormat() {
                return processedDocumentFormat;
              }

              /** What format output should be. If unspecified, defaults to JSON. */
              public GetProcessedDocument setProcessedDocumentFormat(java.lang.String processedDocumentFormat) {
                this.processedDocumentFormat = processedDocumentFormat;
                return this;
              }

              /** Required. What type of processing to return. */
              @com.google.api.client.util.Key
              private java.lang.String processedDocumentType;

              /** Required. What type of processing to return.
               */
              public java.lang.String getProcessedDocumentType() {
                return processedDocumentType;
              }

              /** Required. What type of processing to return. */
              public GetProcessedDocument setProcessedDocumentType(java.lang.String processedDocumentType) {
                this.processedDocumentType = processedDocumentType;
                return this;
              }

              @Override
              public GetProcessedDocument set(String parameterName, Object value) {
                return (GetProcessedDocument) super.set(parameterName, value);
              }
            }
            /**
             * Bulk import of multiple Documents. Request processing may be synchronous. Non-existing items will
             * be created. Note: It is possible for a subset of the Documents to be successfully updated.
             *
             * Create a request for the method "documents.import".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link DiscoveryEngineImport#execute()} method to invoke the remote
             * operation.
             *
             * @param parent Required. The parent branch resource name, such as `projects/{project}/locations/{location}/collecti
             *        ons/{collection}/dataStores/{data_store}/branches/{branch}`. Requires create/update
             *        permission.
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaImportDocumentsRequest}
             * @return the request
             */
            public DiscoveryEngineImport discoveryengineImport(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaImportDocumentsRequest content) throws java.io.IOException {
              DiscoveryEngineImport result = new DiscoveryEngineImport(parent, content);
              initialize(result);
              return result;
            }

            public class DiscoveryEngineImport extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1alpha/{+parent}/documents:import";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+$");

              /**
               * Bulk import of multiple Documents. Request processing may be synchronous. Non-existing items
               * will be created. Note: It is possible for a subset of the Documents to be successfully updated.
               *
               * Create a request for the method "documents.import".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link DiscoveryEngineImport#execute()} method to invoke the
               * remote operation. <p> {@link DiscoveryEngineImport#initialize(com.google.api.client.googleapis.
               * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
               * after invoking the constructor. </p>
               *
               * @param parent Required. The parent branch resource name, such as `projects/{project}/locations/{location}/collecti
             *        ons/{collection}/dataStores/{data_store}/branches/{branch}`. Requires create/update
             *        permission.
               * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaImportDocumentsRequest}
               * @since 1.13
               */
              protected DiscoveryEngineImport(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaImportDocumentsRequest content) {
                super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+$");
                }
              }

              @Override
              public DiscoveryEngineImport set$Xgafv(java.lang.String $Xgafv) {
                return (DiscoveryEngineImport) super.set$Xgafv($Xgafv);
              }

              @Override
              public DiscoveryEngineImport setAccessToken(java.lang.String accessToken) {
                return (DiscoveryEngineImport) super.setAccessToken(accessToken);
              }

              @Override
              public DiscoveryEngineImport setAlt(java.lang.String alt) {
                return (DiscoveryEngineImport) super.setAlt(alt);
              }

              @Override
              public DiscoveryEngineImport setCallback(java.lang.String callback) {
                return (DiscoveryEngineImport) super.setCallback(callback);
              }

              @Override
              public DiscoveryEngineImport setFields(java.lang.String fields) {
                return (DiscoveryEngineImport) super.setFields(fields);
              }

              @Override
              public DiscoveryEngineImport setKey(java.lang.String key) {
                return (DiscoveryEngineImport) super.setKey(key);
              }

              @Override
              public DiscoveryEngineImport setOauthToken(java.lang.String oauthToken) {
                return (DiscoveryEngineImport) super.setOauthToken(oauthToken);
              }

              @Override
              public DiscoveryEngineImport setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (DiscoveryEngineImport) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public DiscoveryEngineImport setQuotaUser(java.lang.String quotaUser) {
                return (DiscoveryEngineImport) super.setQuotaUser(quotaUser);
              }

              @Override
              public DiscoveryEngineImport setUploadType(java.lang.String uploadType) {
                return (DiscoveryEngineImport) super.setUploadType(uploadType);
              }

              @Override
              public DiscoveryEngineImport setUploadProtocol(java.lang.String uploadProtocol) {
                return (DiscoveryEngineImport) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The parent branch resource name, such as `projects/{project}/locations/{l
               * ocation}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
               * Requires create/update permission.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The parent branch resource name, such as `projects/{project}/locations/{location}/collect
             ions/{collection}/dataStores/{data_store}/branches/{branch}`. Requires create/update permission.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The parent branch resource name, such as `projects/{project}/locations/{l
               * ocation}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
               * Requires create/update permission.
               */
              public DiscoveryEngineImport setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public DiscoveryEngineImport set(String parameterName, Object value) {
                return (DiscoveryEngineImport) super.set(parameterName, value);
              }
            }
            /**
             * Gets a list of Documents.
             *
             * Create a request for the method "documents.list".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The parent branch resource name, such as `projects/{project}/locations/{location}/collecti
             *        ons/{collection}/dataStores/{data_store}/branches/{branch}`. Use `default_branch` as the
             *        branch ID, to list documents under the default branch. If the caller does not have
             *        permission to list Documents under this branch, regardless of whether or not this branch
             *        exists, a `PERMISSION_DENIED` error is returned.
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaListDocumentsResponse> {

              private static final String REST_PATH = "v1alpha/{+parent}/documents";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+$");

              /**
               * Gets a list of Documents.
               *
               * Create a request for the method "documents.list".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The parent branch resource name, such as `projects/{project}/locations/{location}/collecti
             *        ons/{collection}/dataStores/{data_store}/branches/{branch}`. Use `default_branch` as the
             *        branch ID, to list documents under the default branch. If the caller does not have
             *        permission to list Documents under this branch, regardless of whether or not this branch
             *        exists, a `PERMISSION_DENIED` error is returned.
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaListDocumentsResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The parent branch resource name, such as `projects/{project}/locations/{l
               * ocation}/collections/{collection}/dataStores/{data_store}/branches/{branch}`. Use
               * `default_branch` as the branch ID, to list documents under the default branch. If
               * the caller does not have permission to list Documents under this branch, regardless
               * of whether or not this branch exists, a `PERMISSION_DENIED` error is returned.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The parent branch resource name, such as `projects/{project}/locations/{location}/collect
             ions/{collection}/dataStores/{data_store}/branches/{branch}`. Use `default_branch` as the branch
             ID, to list documents under the default branch. If the caller does not have permission to list
             Documents under this branch, regardless of whether or not this branch exists, a `PERMISSION_DENIED`
             error is returned.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The parent branch resource name, such as `projects/{project}/locations/{l
               * ocation}/collections/{collection}/dataStores/{data_store}/branches/{branch}`. Use
               * `default_branch` as the branch ID, to list documents under the default branch. If
               * the caller does not have permission to list Documents under this branch, regardless
               * of whether or not this branch exists, a `PERMISSION_DENIED` error is returned.
               */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Maximum number of Documents to return. If unspecified, defaults to 100. The maximum
               * allowed value is 1000. Values above 1000 will be coerced to 1000. If this field is
               * negative, an `INVALID_ARGUMENT` error is returned.
               */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** Maximum number of Documents to return. If unspecified, defaults to 100. The maximum allowed value
             is 1000. Values above 1000 will be coerced to 1000. If this field is negative, an
             `INVALID_ARGUMENT` error is returned.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /**
               * Maximum number of Documents to return. If unspecified, defaults to 100. The maximum
               * allowed value is 1000. Values above 1000 will be coerced to 1000. If this field is
               * negative, an `INVALID_ARGUMENT` error is returned.
               */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /**
               * A page token ListDocumentsResponse.next_page_token, received from a previous
               * DocumentService.ListDocuments call. Provide this to retrieve the subsequent page.
               * When paginating, all other parameters provided to DocumentService.ListDocuments
               * must match the call that provided the page token. Otherwise, an `INVALID_ARGUMENT`
               * error is returned.
               */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** A page token ListDocumentsResponse.next_page_token, received from a previous
             DocumentService.ListDocuments call. Provide this to retrieve the subsequent page. When paginating,
             all other parameters provided to DocumentService.ListDocuments must match the call that provided
             the page token. Otherwise, an `INVALID_ARGUMENT` error is returned.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /**
               * A page token ListDocumentsResponse.next_page_token, received from a previous
               * DocumentService.ListDocuments call. Provide this to retrieve the subsequent page.
               * When paginating, all other parameters provided to DocumentService.ListDocuments
               * must match the call that provided the page token. Otherwise, an `INVALID_ARGUMENT`
               * error is returned.
               */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }
            /**
             * Updates a Document.
             *
             * Create a request for the method "documents.patch".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             *
             * @param name Immutable. The full resource name of the document. Format: `projects/{project}/locations/{location}/
             *        collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document_id}
             *        `. This field must be a UTF-8 encoded string with a length limit of 1024 characters.
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDocument}
             * @return the request
             */
            public Patch patch(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDocument content) throws java.io.IOException {
              Patch result = new Patch(name, content);
              initialize(result);
              return result;
            }

            public class Patch extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDocument> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+/documents/[^/]+$");

              /**
               * Updates a Document.
               *
               * Create a request for the method "documents.patch".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
               * <p> {@link
               * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Immutable. The full resource name of the document. Format: `projects/{project}/locations/{location}/
             *        collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document_id}
             *        `. This field must be a UTF-8 encoded string with a length limit of 1024 characters.
               * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDocument}
               * @since 1.13
               */
              protected Patch(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDocument content) {
                super(DiscoveryEngine.this, "PATCH", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDocument.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+/documents/[^/]+$");
                }
              }

              @Override
              public Patch set$Xgafv(java.lang.String $Xgafv) {
                return (Patch) super.set$Xgafv($Xgafv);
              }

              @Override
              public Patch setAccessToken(java.lang.String accessToken) {
                return (Patch) super.setAccessToken(accessToken);
              }

              @Override
              public Patch setAlt(java.lang.String alt) {
                return (Patch) super.setAlt(alt);
              }

              @Override
              public Patch setCallback(java.lang.String callback) {
                return (Patch) super.setCallback(callback);
              }

              @Override
              public Patch setFields(java.lang.String fields) {
                return (Patch) super.setFields(fields);
              }

              @Override
              public Patch setKey(java.lang.String key) {
                return (Patch) super.setKey(key);
              }

              @Override
              public Patch setOauthToken(java.lang.String oauthToken) {
                return (Patch) super.setOauthToken(oauthToken);
              }

              @Override
              public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Patch) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Patch setQuotaUser(java.lang.String quotaUser) {
                return (Patch) super.setQuotaUser(quotaUser);
              }

              @Override
              public Patch setUploadType(java.lang.String uploadType) {
                return (Patch) super.setUploadType(uploadType);
              }

              @Override
              public Patch setUploadProtocol(java.lang.String uploadProtocol) {
                return (Patch) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Immutable. The full resource name of the document. Format: `projects/{project}/loca
               * tions/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}
               * /documents/{document_id}`. This field must be a UTF-8 encoded string with a length
               * limit of 1024 characters.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Immutable. The full resource name of the document. Format: `projects/{project}/locations/{location}
             /collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document_id}`. This
             field must be a UTF-8 encoded string with a length limit of 1024 characters.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Immutable. The full resource name of the document. Format: `projects/{project}/loca
               * tions/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}
               * /documents/{document_id}`. This field must be a UTF-8 encoded string with a length
               * limit of 1024 characters.
               */
              public Patch setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+/documents/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /** If set to true, and the Document is not found, a new Document will be created. */
              @com.google.api.client.util.Key
              private java.lang.Boolean allowMissing;

              /** If set to true, and the Document is not found, a new Document will be created.
               */
              public java.lang.Boolean getAllowMissing() {
                return allowMissing;
              }

              /** If set to true, and the Document is not found, a new Document will be created. */
              public Patch setAllowMissing(java.lang.Boolean allowMissing) {
                this.allowMissing = allowMissing;
                return this;
              }

              /**
               * Indicates which fields in the provided imported 'document' to update. If not set,
               * will by default update all fields.
               */
              @com.google.api.client.util.Key
              private String updateMask;

              /** Indicates which fields in the provided imported 'document' to update. If not set, will by default
             update all fields.
               */
              public String getUpdateMask() {
                return updateMask;
              }

              /**
               * Indicates which fields in the provided imported 'document' to update. If not set,
               * will by default update all fields.
               */
              public Patch setUpdateMask(String updateMask) {
                this.updateMask = updateMask;
                return this;
              }

              @Override
              public Patch set(String parameterName, Object value) {
                return (Patch) super.set(parameterName, value);
              }
            }
            /**
             * Permanently deletes all selected Documents in a branch. This process is asynchronous. Depending
             * on the number of Documents to be deleted, this operation can take hours to complete. Before the
             * delete operation completes, some Documents might still be returned by DocumentService.GetDocument
             * or DocumentService.ListDocuments. To get a list of the Documents to be deleted, set
             * PurgeDocumentsRequest.force to false.
             *
             * Create a request for the method "documents.purge".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Purge#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The parent resource name, such as `projects/{project}/locations/{location}/collections/{co
             *        llection}/dataStores/{data_store}/branches/{branch}`.
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaPurgeDocumentsRequest}
             * @return the request
             */
            public Purge purge(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaPurgeDocumentsRequest content) throws java.io.IOException {
              Purge result = new Purge(parent, content);
              initialize(result);
              return result;
            }

            public class Purge extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1alpha/{+parent}/documents:purge";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+$");

              /**
               * Permanently deletes all selected Documents in a branch. This process is asynchronous. Depending
               * on the number of Documents to be deleted, this operation can take hours to complete. Before the
               * delete operation completes, some Documents might still be returned by
               * DocumentService.GetDocument or DocumentService.ListDocuments. To get a list of the Documents to
               * be deleted, set PurgeDocumentsRequest.force to false.
               *
               * Create a request for the method "documents.purge".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Purge#execute()} method to invoke the remote operation.
               * <p> {@link
               * Purge#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The parent resource name, such as `projects/{project}/locations/{location}/collections/{co
             *        llection}/dataStores/{data_store}/branches/{branch}`.
               * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaPurgeDocumentsRequest}
               * @since 1.13
               */
              protected Purge(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaPurgeDocumentsRequest content) {
                super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+$");
                }
              }

              @Override
              public Purge set$Xgafv(java.lang.String $Xgafv) {
                return (Purge) super.set$Xgafv($Xgafv);
              }

              @Override
              public Purge setAccessToken(java.lang.String accessToken) {
                return (Purge) super.setAccessToken(accessToken);
              }

              @Override
              public Purge setAlt(java.lang.String alt) {
                return (Purge) super.setAlt(alt);
              }

              @Override
              public Purge setCallback(java.lang.String callback) {
                return (Purge) super.setCallback(callback);
              }

              @Override
              public Purge setFields(java.lang.String fields) {
                return (Purge) super.setFields(fields);
              }

              @Override
              public Purge setKey(java.lang.String key) {
                return (Purge) super.setKey(key);
              }

              @Override
              public Purge setOauthToken(java.lang.String oauthToken) {
                return (Purge) super.setOauthToken(oauthToken);
              }

              @Override
              public Purge setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Purge) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Purge setQuotaUser(java.lang.String quotaUser) {
                return (Purge) super.setQuotaUser(quotaUser);
              }

              @Override
              public Purge setUploadType(java.lang.String uploadType) {
                return (Purge) super.setUploadType(uploadType);
              }

              @Override
              public Purge setUploadProtocol(java.lang.String uploadProtocol) {
                return (Purge) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The parent resource name, such as `projects/{project}/locations/{location
               * }/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The parent resource name, such as `projects/{project}/locations/{location}/collections/{c
             ollection}/dataStores/{data_store}/branches/{branch}`.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The parent resource name, such as `projects/{project}/locations/{location
               * }/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
               */
              public Purge setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public Purge set(String parameterName, Object value) {
                return (Purge) super.set(parameterName, value);
              }
            }

            /**
             * An accessor for creating requests from the Chunks collection.
             *
             * <p>The typical use is:</p>
             * <pre>
             *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
             *   {@code DiscoveryEngine.Chunks.List request = discoveryengine.chunks().list(parameters ...)}
             * </pre>
             *
             * @return the resource collection
             */
            public Chunks chunks() {
              return new Chunks();
            }

            /**
             * The "chunks" collection of methods.
             */
            public class Chunks {

              /**
               * Gets a Document.
               *
               * Create a request for the method "chunks.get".
               *
               * This request holds the parameters needed by the discoveryengine server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
               *
               * @param name Required. Full resource name of Chunk, such as `projects/{project}/locations/{location}/collections/
               *        {collection}/dataStores/{data_store}/branches/{branch}/documents/{document}/chunks/{chunk}
               *        `. If the caller does not have permission to access the Chunk, regardless of whether or
               *        not it exists, a `PERMISSION_DENIED` error is returned. If the requested Chunk does not
               *        exist, a `NOT_FOUND` error is returned.
               * @return the request
               */
              public Get get(java.lang.String name) throws java.io.IOException {
                Get result = new Get(name);
                initialize(result);
                return result;
              }

              public class Get extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaChunk> {

                private static final String REST_PATH = "v1alpha/{+name}";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+/documents/[^/]+/chunks/[^/]+$");

                /**
                 * Gets a Document.
                 *
                 * Create a request for the method "chunks.get".
                 *
                 * This request holds the parameters needed by the the discoveryengine server.  After setting any
                 * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
                 * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name Required. Full resource name of Chunk, such as `projects/{project}/locations/{location}/collections/
               *        {collection}/dataStores/{data_store}/branches/{branch}/documents/{document}/chunks/{chunk}
               *        `. If the caller does not have permission to access the Chunk, regardless of whether or
               *        not it exists, a `PERMISSION_DENIED` error is returned. If the requested Chunk does not
               *        exist, a `NOT_FOUND` error is returned.
                 * @since 1.13
                 */
                protected Get(java.lang.String name) {
                  super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaChunk.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+/documents/[^/]+/chunks/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public Get set$Xgafv(java.lang.String $Xgafv) {
                  return (Get) super.set$Xgafv($Xgafv);
                }

                @Override
                public Get setAccessToken(java.lang.String accessToken) {
                  return (Get) super.setAccessToken(accessToken);
                }

                @Override
                public Get setAlt(java.lang.String alt) {
                  return (Get) super.setAlt(alt);
                }

                @Override
                public Get setCallback(java.lang.String callback) {
                  return (Get) super.setCallback(callback);
                }

                @Override
                public Get setFields(java.lang.String fields) {
                  return (Get) super.setFields(fields);
                }

                @Override
                public Get setKey(java.lang.String key) {
                  return (Get) super.setKey(key);
                }

                @Override
                public Get setOauthToken(java.lang.String oauthToken) {
                  return (Get) super.setOauthToken(oauthToken);
                }

                @Override
                public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Get) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Get setQuotaUser(java.lang.String quotaUser) {
                  return (Get) super.setQuotaUser(quotaUser);
                }

                @Override
                public Get setUploadType(java.lang.String uploadType) {
                  return (Get) super.setUploadType(uploadType);
                }

                @Override
                public Get setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Get) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. Full resource name of Chunk, such as `projects/{project}/locations/{loc
                 * ation}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documen
                 * ts/{document}/chunks/{chunk}`. If the caller does not have permission to access
                 * the Chunk, regardless of whether or not it exists, a `PERMISSION_DENIED` error is
                 * returned. If the requested Chunk does not exist, a `NOT_FOUND` error is returned.
                 */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** Required. Full resource name of Chunk, such as `projects/{project}/locations/{location}/collections
               /{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}/chunks/{chunk}`. If
               the caller does not have permission to access the Chunk, regardless of whether or not it exists, a
               `PERMISSION_DENIED` error is returned. If the requested Chunk does not exist, a `NOT_FOUND` error
               is returned.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /**
                 * Required. Full resource name of Chunk, such as `projects/{project}/locations/{loc
                 * ation}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documen
                 * ts/{document}/chunks/{chunk}`. If the caller does not have permission to access
                 * the Chunk, regardless of whether or not it exists, a `PERMISSION_DENIED` error is
                 * returned. If the requested Chunk does not exist, a `NOT_FOUND` error is returned.
                 */
                public Get setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+/documents/[^/]+/chunks/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                @Override
                public Get set(String parameterName, Object value) {
                  return (Get) super.set(parameterName, value);
                }
              }
              /**
               * Gets a list of Chunks.
               *
               * Create a request for the method "chunks.list".
               *
               * This request holds the parameters needed by the discoveryengine server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
               *
               * @param parent Required. The parent document resource name, such as `projects/{project}/locations/{location}/collec
               *        tions/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`. If the
               *        caller does not have permission to list Chunks under this document, regardless of whether
               *        or not this document exists, a `PERMISSION_DENIED` error is returned.
               * @return the request
               */
              public List list(java.lang.String parent) throws java.io.IOException {
                List result = new List(parent);
                initialize(result);
                return result;
              }

              public class List extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaListChunksResponse> {

                private static final String REST_PATH = "v1alpha/{+parent}/chunks";

                private final java.util.regex.Pattern PARENT_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+/documents/[^/]+$");

                /**
                 * Gets a list of Chunks.
                 *
                 * Create a request for the method "chunks.list".
                 *
                 * This request holds the parameters needed by the the discoveryengine server.  After setting any
                 * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
                 * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param parent Required. The parent document resource name, such as `projects/{project}/locations/{location}/collec
               *        tions/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`. If the
               *        caller does not have permission to list Chunks under this document, regardless of whether
               *        or not this document exists, a `PERMISSION_DENIED` error is returned.
                 * @since 1.13
                 */
                protected List(java.lang.String parent) {
                  super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaListChunksResponse.class);
                  this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+/documents/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public List set$Xgafv(java.lang.String $Xgafv) {
                  return (List) super.set$Xgafv($Xgafv);
                }

                @Override
                public List setAccessToken(java.lang.String accessToken) {
                  return (List) super.setAccessToken(accessToken);
                }

                @Override
                public List setAlt(java.lang.String alt) {
                  return (List) super.setAlt(alt);
                }

                @Override
                public List setCallback(java.lang.String callback) {
                  return (List) super.setCallback(callback);
                }

                @Override
                public List setFields(java.lang.String fields) {
                  return (List) super.setFields(fields);
                }

                @Override
                public List setKey(java.lang.String key) {
                  return (List) super.setKey(key);
                }

                @Override
                public List setOauthToken(java.lang.String oauthToken) {
                  return (List) super.setOauthToken(oauthToken);
                }

                @Override
                public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (List) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public List setQuotaUser(java.lang.String quotaUser) {
                  return (List) super.setQuotaUser(quotaUser);
                }

                @Override
                public List setUploadType(java.lang.String uploadType) {
                  return (List) super.setUploadType(uploadType);
                }

                @Override
                public List setUploadProtocol(java.lang.String uploadProtocol) {
                  return (List) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The parent document resource name, such as `projects/{project}/location
                 * s/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/d
                 * ocuments/{document}`. If the caller does not have permission to list Chunks under
                 * this document, regardless of whether or not this document exists, a
                 * `PERMISSION_DENIED` error is returned.
                 */
                @com.google.api.client.util.Key
                private java.lang.String parent;

                /** Required. The parent document resource name, such as `projects/{project}/locations/{location}/colle
               ctions/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`. If the caller
               does not have permission to list Chunks under this document, regardless of whether or not this
               document exists, a `PERMISSION_DENIED` error is returned.
                 */
                public java.lang.String getParent() {
                  return parent;
                }

                /**
                 * Required. The parent document resource name, such as `projects/{project}/location
                 * s/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/d
                 * ocuments/{document}`. If the caller does not have permission to list Chunks under
                 * this document, regardless of whether or not this document exists, a
                 * `PERMISSION_DENIED` error is returned.
                 */
                public List setParent(java.lang.String parent) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+/documents/[^/]+$");
                  }
                  this.parent = parent;
                  return this;
                }

                /**
                 * Maximum number of Chunks to return. If unspecified, defaults to 100. The maximum
                 * allowed value is 1000. Values above 1000 will be coerced to 1000. If this field
                 * is negative, an `INVALID_ARGUMENT` error is returned.
                 */
                @com.google.api.client.util.Key
                private java.lang.Integer pageSize;

                /** Maximum number of Chunks to return. If unspecified, defaults to 100. The maximum allowed value is
               1000. Values above 1000 will be coerced to 1000. If this field is negative, an `INVALID_ARGUMENT`
               error is returned.
                 */
                public java.lang.Integer getPageSize() {
                  return pageSize;
                }

                /**
                 * Maximum number of Chunks to return. If unspecified, defaults to 100. The maximum
                 * allowed value is 1000. Values above 1000 will be coerced to 1000. If this field
                 * is negative, an `INVALID_ARGUMENT` error is returned.
                 */
                public List setPageSize(java.lang.Integer pageSize) {
                  this.pageSize = pageSize;
                  return this;
                }

                /**
                 * A page token ListChunksResponse.next_page_token, received from a previous
                 * ChunkService.ListChunks call. Provide this to retrieve the subsequent page. When
                 * paginating, all other parameters provided to ChunkService.ListChunks must match
                 * the call that provided the page token. Otherwise, an `INVALID_ARGUMENT` error is
                 * returned.
                 */
                @com.google.api.client.util.Key
                private java.lang.String pageToken;

                /** A page token ListChunksResponse.next_page_token, received from a previous ChunkService.ListChunks
               call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided
               to ChunkService.ListChunks must match the call that provided the page token. Otherwise, an
               `INVALID_ARGUMENT` error is returned.
                 */
                public java.lang.String getPageToken() {
                  return pageToken;
                }

                /**
                 * A page token ListChunksResponse.next_page_token, received from a previous
                 * ChunkService.ListChunks call. Provide this to retrieve the subsequent page. When
                 * paginating, all other parameters provided to ChunkService.ListChunks must match
                 * the call that provided the page token. Otherwise, an `INVALID_ARGUMENT` error is
                 * returned.
                 */
                public List setPageToken(java.lang.String pageToken) {
                  this.pageToken = pageToken;
                  return this;
                }

                @Override
                public List set(String parameterName, Object value) {
                  return (List) super.set(parameterName, value);
                }
              }

            }
          }
          /**
           * An accessor for creating requests from the Operations collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
           *   {@code DiscoveryEngine.Operations.List request = discoveryengine.operations().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Operations operations() {
            return new Operations();
          }

          /**
           * The "operations" collection of methods.
           */
          public class Operations {

            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource.
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+/operations/[^/]+$");

              /**
               * Gets the latest state of a long-running operation. Clients can use this method to poll the
               * operation result at intervals as recommended by the API service.
               *
               * Create a request for the method "operations.get".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource.
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource. */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.list".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation's parent resource.
             * @return the request
             */
            public List list(java.lang.String name) throws java.io.IOException {
              List result = new List(name);
              initialize(result);
              return result;
            }

            public class List extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningListOperationsResponse> {

              private static final String REST_PATH = "v1alpha/{+name}/operations";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+$");

              /**
               * Lists operations that match the specified filter in the request. If the server doesn't support
               * this method, it returns `UNIMPLEMENTED`.
               *
               * Create a request for the method "operations.list".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation's parent resource.
               * @since 1.13
               */
              protected List(java.lang.String name) {
                super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningListOperationsResponse.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation's parent resource. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation's parent resource.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation's parent resource. */
              public List setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /** The standard list filter. */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** The standard list filter.
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /** The standard list filter. */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /** The standard list page size. */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** The standard list page size.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /** The standard list page size. */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /** The standard list page token. */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** The standard list page token.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /** The standard list page token. */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }

          }
        }
        /**
         * An accessor for creating requests from the Conversations collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
         *   {@code DiscoveryEngine.Conversations.List request = discoveryengine.conversations().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Conversations conversations() {
          return new Conversations();
        }

        /**
         * The "conversations" collection of methods.
         */
        public class Conversations {

          /**
           * Converses a conversation.
           *
           * Create a request for the method "conversations.converse".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link Converse#execute()} method to invoke the remote operation.
           *
           * @param name Required. The resource name of the Conversation to get. Format: `projects/{project_number}/locations
           *        /{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversa
           *        tion_id}`. Use `projects/{project_number}/locations/{location_id}/collections/{collection}
           *        /dataStores/{data_store_id}/conversations/-` to activate auto session mode, which
           *        automatically creates a new conversation inside a ConverseConversation session.
           * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConverseConversationRequest}
           * @return the request
           */
          public Converse converse(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConverseConversationRequest content) throws java.io.IOException {
            Converse result = new Converse(name, content);
            initialize(result);
            return result;
          }

          public class Converse extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConverseConversationResponse> {

            private static final String REST_PATH = "v1alpha/{+name}:converse";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/conversations/[^/]+$");

            /**
             * Converses a conversation.
             *
             * Create a request for the method "conversations.converse".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link Converse#execute()} method to invoke the remote operation.
             * <p> {@link
             * Converse#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The resource name of the Conversation to get. Format: `projects/{project_number}/locations
           *        /{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversa
           *        tion_id}`. Use `projects/{project_number}/locations/{location_id}/collections/{collection}
           *        /dataStores/{data_store_id}/conversations/-` to activate auto session mode, which
           *        automatically creates a new conversation inside a ConverseConversation session.
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConverseConversationRequest}
             * @since 1.13
             */
            protected Converse(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConverseConversationRequest content) {
              super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConverseConversationResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/conversations/[^/]+$");
              }
            }

            @Override
            public Converse set$Xgafv(java.lang.String $Xgafv) {
              return (Converse) super.set$Xgafv($Xgafv);
            }

            @Override
            public Converse setAccessToken(java.lang.String accessToken) {
              return (Converse) super.setAccessToken(accessToken);
            }

            @Override
            public Converse setAlt(java.lang.String alt) {
              return (Converse) super.setAlt(alt);
            }

            @Override
            public Converse setCallback(java.lang.String callback) {
              return (Converse) super.setCallback(callback);
            }

            @Override
            public Converse setFields(java.lang.String fields) {
              return (Converse) super.setFields(fields);
            }

            @Override
            public Converse setKey(java.lang.String key) {
              return (Converse) super.setKey(key);
            }

            @Override
            public Converse setOauthToken(java.lang.String oauthToken) {
              return (Converse) super.setOauthToken(oauthToken);
            }

            @Override
            public Converse setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Converse) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Converse setQuotaUser(java.lang.String quotaUser) {
              return (Converse) super.setQuotaUser(quotaUser);
            }

            @Override
            public Converse setUploadType(java.lang.String uploadType) {
              return (Converse) super.setUploadType(uploadType);
            }

            @Override
            public Converse setUploadProtocol(java.lang.String uploadProtocol) {
              return (Converse) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the Conversation to get. Format: `projects/{project_nu
             * mber}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/con
             * versations/{conversation_id}`. Use `projects/{project_number}/locations/{location_id}
             * /collections/{collection}/dataStores/{data_store_id}/conversations/-` to activate
             * auto session mode, which automatically creates a new conversation inside a
             * ConverseConversation session.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The resource name of the Conversation to get. Format: `projects/{project_number}/location
           s/{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}
           `. Use `projects/{project_number}/locations/{location_id}/collections/{collection}/dataStores/{data
           _store_id}/conversations/-` to activate auto session mode, which automatically creates a new
           conversation inside a ConverseConversation session.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The resource name of the Conversation to get. Format: `projects/{project_nu
             * mber}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/con
             * versations/{conversation_id}`. Use `projects/{project_number}/locations/{location_id}
             * /collections/{collection}/dataStores/{data_store_id}/conversations/-` to activate
             * auto session mode, which automatically creates a new conversation inside a
             * ConverseConversation session.
             */
            public Converse setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/conversations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Converse set(String parameterName, Object value) {
              return (Converse) super.set(parameterName, value);
            }
          }
          /**
           * Creates a Conversation. If the Conversation to create already exists, an ALREADY_EXISTS error is
           * returned.
           *
           * Create a request for the method "conversations.create".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Full resource name of parent data store. Format: `projects/{project_number}/locations/{loc
           *        ation_id}/collections/{collection}/dataStores/{data_store_id}`
           * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConversation}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConversation content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConversation> {

            private static final String REST_PATH = "v1alpha/{+parent}/conversations";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");

            /**
             * Creates a Conversation. If the Conversation to create already exists, an ALREADY_EXISTS error
             * is returned.
             *
             * Create a request for the method "conversations.create".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Full resource name of parent data store. Format: `projects/{project_number}/locations/{loc
           *        ation_id}/collections/{collection}/dataStores/{data_store_id}`
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConversation}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConversation content) {
              super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConversation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Full resource name of parent data store. Format: `projects/{project_number}
             * /locations/{location_id}/collections/{collection}/dataStores/{data_store_id}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Full resource name of parent data store. Format: `projects/{project_number}/locations/{lo
           cation_id}/collections/{collection}/dataStores/{data_store_id}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Full resource name of parent data store. Format: `projects/{project_number}
             * /locations/{location_id}/collections/{collection}/dataStores/{data_store_id}`
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a Conversation. If the Conversation to delete does not exist, a NOT_FOUND error is
           * returned.
           *
           * Create a request for the method "conversations.delete".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The resource name of the Conversation to delete. Format: `projects/{project_number}/locati
           *        ons/{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/{conve
           *        rsation_id}`
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/conversations/[^/]+$");

            /**
             * Deletes a Conversation. If the Conversation to delete does not exist, a NOT_FOUND error is
             * returned.
             *
             * Create a request for the method "conversations.delete".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The resource name of the Conversation to delete. Format: `projects/{project_number}/locati
           *        ons/{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/{conve
           *        rsation_id}`
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(DiscoveryEngine.this, "DELETE", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/conversations/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the Conversation to delete. Format: `projects/{project
             * _number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/
             * conversations/{conversation_id}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The resource name of the Conversation to delete. Format: `projects/{project_number}/locat
           ions/{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_
           id}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The resource name of the Conversation to delete. Format: `projects/{project
             * _number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/
             * conversations/{conversation_id}`
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/conversations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets a Conversation.
           *
           * Create a request for the method "conversations.get".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The resource name of the Conversation to get. Format: `projects/{project_number}/locations
           *        /{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversa
           *        tion_id}`
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConversation> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/conversations/[^/]+$");

            /**
             * Gets a Conversation.
             *
             * Create a request for the method "conversations.get".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The resource name of the Conversation to get. Format: `projects/{project_number}/locations
           *        /{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversa
           *        tion_id}`
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConversation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/conversations/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the Conversation to get. Format: `projects/{project_nu
             * mber}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/con
             * versations/{conversation_id}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The resource name of the Conversation to get. Format: `projects/{project_number}/location
           s/{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}
           `
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The resource name of the Conversation to get. Format: `projects/{project_nu
             * mber}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/con
             * versations/{conversation_id}`
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/conversations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists all Conversations by their parent DataStore.
           *
           * Create a request for the method "conversations.list".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The data store resource name. Format: `projects/{project_number}/locations/{location_id}/c
           *        ollections/{collection}/dataStores/{data_store_id}`
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaListConversationsResponse> {

            private static final String REST_PATH = "v1alpha/{+parent}/conversations";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");

            /**
             * Lists all Conversations by their parent DataStore.
             *
             * Create a request for the method "conversations.list".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The data store resource name. Format: `projects/{project_number}/locations/{location_id}/c
           *        ollections/{collection}/dataStores/{data_store_id}`
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaListConversationsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The data store resource name. Format: `projects/{project_number}/locations/
             * {location_id}/collections/{collection}/dataStores/{data_store_id}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The data store resource name. Format: `projects/{project_number}/locations/{location_id}/
           collections/{collection}/dataStores/{data_store_id}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The data store resource name. Format: `projects/{project_number}/locations/
             * {location_id}/collections/{collection}/dataStores/{data_store_id}`
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * A filter to apply on the list results. The supported features are: user_pseudo_id,
             * state. Example: "user_pseudo_id = some_id"
             */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** A filter to apply on the list results. The supported features are: user_pseudo_id, state. Example:
           "user_pseudo_id = some_id"
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /**
             * A filter to apply on the list results. The supported features are: user_pseudo_id,
             * state. Example: "user_pseudo_id = some_id"
             */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /**
             * A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
             * after a field name for descending. Supported fields: * `update_time` * `create_time`
             * * `conversation_name` Example: "update_time desc" "create_time"
             */
            @com.google.api.client.util.Key
            private java.lang.String orderBy;

            /** A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field
           name for descending. Supported fields: * `update_time` * `create_time` * `conversation_name`
           Example: "update_time desc" "create_time"
             */
            public java.lang.String getOrderBy() {
              return orderBy;
            }

            /**
             * A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
             * after a field name for descending. Supported fields: * `update_time` * `create_time`
             * * `conversation_name` Example: "update_time desc" "create_time"
             */
            public List setOrderBy(java.lang.String orderBy) {
              this.orderBy = orderBy;
              return this;
            }

            /**
             * Maximum number of results to return. If unspecified, defaults to 50. Max allowed
             * value is 1000.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Maximum number of results to return. If unspecified, defaults to 50. Max allowed value is 1000.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Maximum number of results to return. If unspecified, defaults to 50. Max allowed
             * value is 1000.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * A page token, received from a previous `ListConversations` call. Provide this to
             * retrieve the subsequent page.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** A page token, received from a previous `ListConversations` call. Provide this to retrieve the
           subsequent page.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * A page token, received from a previous `ListConversations` call. Provide this to
             * retrieve the subsequent page.
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates a Conversation. Conversation action type cannot be changed. If the Conversation to update
           * does not exist, a NOT_FOUND error is returned.
           *
           * Create a request for the method "conversations.patch".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Immutable. Fully qualified name
           *        `project/locations/global/collections/{collection}/dataStore/conversations` or
           *        `project/locations/global/collections/{collection}/engines/conversations`.
           * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConversation}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConversation content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConversation> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/conversations/[^/]+$");

            /**
             * Updates a Conversation. Conversation action type cannot be changed. If the Conversation to
             * update does not exist, a NOT_FOUND error is returned.
             *
             * Create a request for the method "conversations.patch".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Immutable. Fully qualified name
           *        `project/locations/global/collections/{collection}/dataStore/conversations` or
           *        `project/locations/global/collections/{collection}/engines/conversations`.
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConversation}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConversation content) {
              super(DiscoveryEngine.this, "PATCH", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaConversation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/conversations/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Immutable. Fully qualified name
             * `project/locations/global/collections/{collection}/dataStore/conversations` or
             * `project/locations/global/collections/{collection}/engines/conversations`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Immutable. Fully qualified name
           `project/locations/global/collections/{collection}/dataStore/conversations` or
           `project/locations/global/collections/{collection}/engines/conversations`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Immutable. Fully qualified name
             * `project/locations/global/collections/{collection}/dataStore/conversations` or
             * `project/locations/global/collections/{collection}/engines/conversations`.
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/conversations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Indicates which fields in the provided Conversation to update. The following are NOT
             * supported: * Conversation.name If not set or empty, all supported fields are updated.
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Indicates which fields in the provided Conversation to update. The following are NOT supported: *
           Conversation.name If not set or empty, all supported fields are updated.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * Indicates which fields in the provided Conversation to update. The following are NOT
             * supported: * Conversation.name If not set or empty, all supported fields are updated.
             */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the Models collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
         *   {@code DiscoveryEngine.Models.List request = discoveryengine.models().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Models models() {
          return new Models();
        }

        /**
         * The "models" collection of methods.
         */
        public class Models {

          /**
           * An accessor for creating requests from the Operations collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
           *   {@code DiscoveryEngine.Operations.List request = discoveryengine.operations().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Operations operations() {
            return new Operations();
          }

          /**
           * The "operations" collection of methods.
           */
          public class Operations {

            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource.
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/models/[^/]+/operations/[^/]+$");

              /**
               * Gets the latest state of a long-running operation. Clients can use this method to poll the
               * operation result at intervals as recommended by the API service.
               *
               * Create a request for the method "operations.get".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource.
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/models/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource. */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/models/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.list".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation's parent resource.
             * @return the request
             */
            public List list(java.lang.String name) throws java.io.IOException {
              List result = new List(name);
              initialize(result);
              return result;
            }

            public class List extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningListOperationsResponse> {

              private static final String REST_PATH = "v1alpha/{+name}/operations";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/models/[^/]+$");

              /**
               * Lists operations that match the specified filter in the request. If the server doesn't support
               * this method, it returns `UNIMPLEMENTED`.
               *
               * Create a request for the method "operations.list".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation's parent resource.
               * @since 1.13
               */
              protected List(java.lang.String name) {
                super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningListOperationsResponse.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/models/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation's parent resource. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation's parent resource.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation's parent resource. */
              public List setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/models/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /** The standard list filter. */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** The standard list filter.
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /** The standard list filter. */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /** The standard list page size. */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** The standard list page size.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /** The standard list page size. */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /** The standard list page token. */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** The standard list page token.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /** The standard list page token. */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }

          }
        }
        /**
         * An accessor for creating requests from the Operations collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
         *   {@code DiscoveryEngine.Operations.List request = discoveryengine.operations().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Operations operations() {
          return new Operations();
        }

        /**
         * The "operations" collection of methods.
         */
        public class Operations {

          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/operations/[^/]+$");

            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation's parent resource.
           * @return the request
           */
          public List list(java.lang.String name) throws java.io.IOException {
            List result = new List(name);
            initialize(result);
            return result;
          }

          public class List extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningListOperationsResponse> {

            private static final String REST_PATH = "v1alpha/{+name}/operations";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");

            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.list".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation's parent resource.
             * @since 1.13
             */
            protected List(java.lang.String name) {
              super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningListOperationsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation's parent resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation's parent resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation's parent resource. */
            public List setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** The standard list filter. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** The standard list filter.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** The standard list filter. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** The standard list page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The standard list page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The standard list page size. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The standard list page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The standard list page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The standard list page token. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the Schemas collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
         *   {@code DiscoveryEngine.Schemas.List request = discoveryengine.schemas().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Schemas schemas() {
          return new Schemas();
        }

        /**
         * The "schemas" collection of methods.
         */
        public class Schemas {

          /**
           * Creates a Schema.
           *
           * Create a request for the method "schemas.create".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The parent data store resource name, in the format of
           *        `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`
           *        .
           * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSchema}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSchema content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1alpha/{+parent}/schemas";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");

            /**
             * Creates a Schema.
             *
             * Create a request for the method "schemas.create".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The parent data store resource name, in the format of
           *        `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`
           *        .
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSchema}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSchema content) {
              super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The parent data store resource name, in the format of `projects/{project}/l
             * ocations/{location}/collections/{collection}/dataStores/{data_store}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The parent data store resource name, in the format of
           `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The parent data store resource name, in the format of `projects/{project}/l
             * ocations/{location}/collections/{collection}/dataStores/{data_store}`.
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Required. The ID to use for the Schema, which will become the final component of the
             * Schema.name. This field should conform to
             * [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63
             * characters.
             */
            @com.google.api.client.util.Key
            private java.lang.String schemaId;

            /** Required. The ID to use for the Schema, which will become the final component of the Schema.name.
           This field should conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length
           limit of 63 characters.
             */
            public java.lang.String getSchemaId() {
              return schemaId;
            }

            /**
             * Required. The ID to use for the Schema, which will become the final component of the
             * Schema.name. This field should conform to
             * [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63
             * characters.
             */
            public Create setSchemaId(java.lang.String schemaId) {
              this.schemaId = schemaId;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a Schema.
           *
           * Create a request for the method "schemas.delete".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The full resource name of the schema, in the format of `projects/{project}/locations/{loca
           *        tion}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/schemas/[^/]+$");

            /**
             * Deletes a Schema.
             *
             * Create a request for the method "schemas.delete".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The full resource name of the schema, in the format of `projects/{project}/locations/{loca
           *        tion}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(DiscoveryEngine.this, "DELETE", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/schemas/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The full resource name of the schema, in the format of `projects/{project}/
             * locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema
             * }`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The full resource name of the schema, in the format of `projects/{project}/locations/{loc
           ation}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The full resource name of the schema, in the format of `projects/{project}/
             * locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema
             * }`.
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/schemas/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets a Schema.
           *
           * Create a request for the method "schemas.get".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The full resource name of the schema, in the format of `projects/{project}/locations/{loca
           *        tion}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSchema> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/schemas/[^/]+$");

            /**
             * Gets a Schema.
             *
             * Create a request for the method "schemas.get".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The full resource name of the schema, in the format of `projects/{project}/locations/{loca
           *        tion}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSchema.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/schemas/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The full resource name of the schema, in the format of `projects/{project}/
             * locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema
             * }`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The full resource name of the schema, in the format of `projects/{project}/locations/{loc
           ation}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The full resource name of the schema, in the format of `projects/{project}/
             * locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema
             * }`.
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/schemas/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Gets a list of Schemas.
           *
           * Create a request for the method "schemas.list".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The parent data store resource name, in the format of
           *        `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`
           *        .
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaListSchemasResponse> {

            private static final String REST_PATH = "v1alpha/{+parent}/schemas";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");

            /**
             * Gets a list of Schemas.
             *
             * Create a request for the method "schemas.list".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The parent data store resource name, in the format of
           *        `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`
           *        .
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaListSchemasResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The parent data store resource name, in the format of `projects/{project}/l
             * ocations/{location}/collections/{collection}/dataStores/{data_store}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The parent data store resource name, in the format of
           `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The parent data store resource name, in the format of `projects/{project}/l
             * ocations/{location}/collections/{collection}/dataStores/{data_store}`.
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * The maximum number of Schemas to return. The service may return fewer than this
             * value. If unspecified, at most 100 Schemas will be returned. The maximum value is
             * 1000; values above 1000 will be coerced to 1000.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The maximum number of Schemas to return. The service may return fewer than this value. If
           unspecified, at most 100 Schemas will be returned. The maximum value is 1000; values above 1000
           will be coerced to 1000.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * The maximum number of Schemas to return. The service may return fewer than this
             * value. If unspecified, at most 100 Schemas will be returned. The maximum value is
             * 1000; values above 1000 will be coerced to 1000.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * A page token, received from a previous SchemaService.ListSchemas call. Provide this
             * to retrieve the subsequent page. When paginating, all other parameters provided to
             * SchemaService.ListSchemas must match the call that provided the page token.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** A page token, received from a previous SchemaService.ListSchemas call. Provide this to retrieve the
           subsequent page. When paginating, all other parameters provided to SchemaService.ListSchemas must
           match the call that provided the page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * A page token, received from a previous SchemaService.ListSchemas call. Provide this
             * to retrieve the subsequent page. When paginating, all other parameters provided to
             * SchemaService.ListSchemas must match the call that provided the page token.
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates a Schema.
           *
           * Create a request for the method "schemas.patch".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Immutable. The full resource name of the schema, in the format of `projects/{project}/locations/{loc
           *        ation}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`. This field must
           *        be a UTF-8 encoded string with a length limit of 1024 characters.
           * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSchema}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSchema content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/schemas/[^/]+$");

            /**
             * Updates a Schema.
             *
             * Create a request for the method "schemas.patch".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Immutable. The full resource name of the schema, in the format of `projects/{project}/locations/{loc
           *        ation}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`. This field must
           *        be a UTF-8 encoded string with a length limit of 1024 characters.
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSchema}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSchema content) {
              super(DiscoveryEngine.this, "PATCH", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/schemas/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Immutable. The full resource name of the schema, in the format of `projects/{project}
             * /locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schem
             * a}`. This field must be a UTF-8 encoded string with a length limit of 1024
             * characters.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Immutable. The full resource name of the schema, in the format of `projects/{project}/locations/{lo
           cation}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`. This field must be a
           UTF-8 encoded string with a length limit of 1024 characters.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Immutable. The full resource name of the schema, in the format of `projects/{project}
             * /locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schem
             * a}`. This field must be a UTF-8 encoded string with a length limit of 1024
             * characters.
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/schemas/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * If set to true, and the Schema is not found, a new Schema will be created. In this
             * situation, `update_mask` is ignored.
             */
            @com.google.api.client.util.Key
            private java.lang.Boolean allowMissing;

            /** If set to true, and the Schema is not found, a new Schema will be created. In this situation,
           `update_mask` is ignored.
             */
            public java.lang.Boolean getAllowMissing() {
              return allowMissing;
            }

            /**
             * If set to true, and the Schema is not found, a new Schema will be created. In this
             * situation, `update_mask` is ignored.
             */
            public Patch setAllowMissing(java.lang.Boolean allowMissing) {
              this.allowMissing = allowMissing;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the ServingConfigs collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
         *   {@code DiscoveryEngine.ServingConfigs.List request = discoveryengine.servingConfigs().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public ServingConfigs servingConfigs() {
          return new ServingConfigs();
        }

        /**
         * The "servingConfigs" collection of methods.
         */
        public class ServingConfigs {

          /**
           * Answer query method.
           *
           * Create a request for the method "servingConfigs.answer".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link Answer#execute()} method to invoke the remote operation.
           *
           * @param servingConfig Required. The resource name of the Search serving config, such as `projects/locations/global/collect
           *        ions/default_collection/engines/servingConfigs/default_serving_config`, or `projects/locat
           *        ions/global/collections/default_collection/dataStores/servingConfigs/default_serving_confi
           *        g`. This field is used to identify the serving configuration name, set of models used to
           *        make the search.
           * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaAnswerQueryRequest}
           * @return the request
           */
          public Answer answer(java.lang.String servingConfig, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaAnswerQueryRequest content) throws java.io.IOException {
            Answer result = new Answer(servingConfig, content);
            initialize(result);
            return result;
          }

          public class Answer extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaAnswerQueryResponse> {

            private static final String REST_PATH = "v1alpha/{+servingConfig}:answer";

            private final java.util.regex.Pattern SERVING_CONFIG_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/servingConfigs/[^/]+$");

            /**
             * Answer query method.
             *
             * Create a request for the method "servingConfigs.answer".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link Answer#execute()} method to invoke the remote operation.
             * <p> {@link
             * Answer#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param servingConfig Required. The resource name of the Search serving config, such as `projects/locations/global/collect
           *        ions/default_collection/engines/servingConfigs/default_serving_config`, or `projects/locat
           *        ions/global/collections/default_collection/dataStores/servingConfigs/default_serving_confi
           *        g`. This field is used to identify the serving configuration name, set of models used to
           *        make the search.
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaAnswerQueryRequest}
             * @since 1.13
             */
            protected Answer(java.lang.String servingConfig, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaAnswerQueryRequest content) {
              super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaAnswerQueryResponse.class);
              this.servingConfig = com.google.api.client.util.Preconditions.checkNotNull(servingConfig, "Required parameter servingConfig must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(SERVING_CONFIG_PATTERN.matcher(servingConfig).matches(),
                    "Parameter servingConfig must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/servingConfigs/[^/]+$");
              }
            }

            @Override
            public Answer set$Xgafv(java.lang.String $Xgafv) {
              return (Answer) super.set$Xgafv($Xgafv);
            }

            @Override
            public Answer setAccessToken(java.lang.String accessToken) {
              return (Answer) super.setAccessToken(accessToken);
            }

            @Override
            public Answer setAlt(java.lang.String alt) {
              return (Answer) super.setAlt(alt);
            }

            @Override
            public Answer setCallback(java.lang.String callback) {
              return (Answer) super.setCallback(callback);
            }

            @Override
            public Answer setFields(java.lang.String fields) {
              return (Answer) super.setFields(fields);
            }

            @Override
            public Answer setKey(java.lang.String key) {
              return (Answer) super.setKey(key);
            }

            @Override
            public Answer setOauthToken(java.lang.String oauthToken) {
              return (Answer) super.setOauthToken(oauthToken);
            }

            @Override
            public Answer setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Answer) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Answer setQuotaUser(java.lang.String quotaUser) {
              return (Answer) super.setQuotaUser(quotaUser);
            }

            @Override
            public Answer setUploadType(java.lang.String uploadType) {
              return (Answer) super.setUploadType(uploadType);
            }

            @Override
            public Answer setUploadProtocol(java.lang.String uploadProtocol) {
              return (Answer) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the Search serving config, such as `projects/locations
             * /global/collections/default_collection/engines/servingConfigs/default_serving_config`
             * , or `projects/locations/global/collections/default_collection/dataStores/servingConf
             * igs/default_serving_config`. This field is used to identify the serving configuration
             * name, set of models used to make the search.
             */
            @com.google.api.client.util.Key
            private java.lang.String servingConfig;

            /** Required. The resource name of the Search serving config, such as `projects/locations/global/collec
           tions/default_collection/engines/servingConfigs/default_serving_config`, or `projects/locations/glo
           bal/collections/default_collection/dataStores/servingConfigs/default_serving_config`. This field is
           used to identify the serving configuration name, set of models used to make the search.
             */
            public java.lang.String getServingConfig() {
              return servingConfig;
            }

            /**
             * Required. The resource name of the Search serving config, such as `projects/locations
             * /global/collections/default_collection/engines/servingConfigs/default_serving_config`
             * , or `projects/locations/global/collections/default_collection/dataStores/servingConf
             * igs/default_serving_config`. This field is used to identify the serving configuration
             * name, set of models used to make the search.
             */
            public Answer setServingConfig(java.lang.String servingConfig) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(SERVING_CONFIG_PATTERN.matcher(servingConfig).matches(),
                    "Parameter servingConfig must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/servingConfigs/[^/]+$");
              }
              this.servingConfig = servingConfig;
              return this;
            }

            @Override
            public Answer set(String parameterName, Object value) {
              return (Answer) super.set(parameterName, value);
            }
          }
          /**
           * Gets a ServingConfig. Returns a NotFound error if the ServingConfig does not exist.
           *
           * Create a request for the method "servingConfigs.get".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The resource name of the ServingConfig to get. Format: `projects/{project_number}/location
           *        s/{location}/collections/{collection}/engines/{engine}/servingConfigs/{serving_config_id}`
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaServingConfig> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/servingConfigs/[^/]+$");

            /**
             * Gets a ServingConfig. Returns a NotFound error if the ServingConfig does not exist.
             *
             * Create a request for the method "servingConfigs.get".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The resource name of the ServingConfig to get. Format: `projects/{project_number}/location
           *        s/{location}/collections/{collection}/engines/{engine}/servingConfigs/{serving_config_id}`
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaServingConfig.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/servingConfigs/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the ServingConfig to get. Format: `projects/{project_n
             * umber}/locations/{location}/collections/{collection}/engines/{engine}/servingConfigs/
             * {serving_config_id}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The resource name of the ServingConfig to get. Format: `projects/{project_number}/locatio
           ns/{location}/collections/{collection}/engines/{engine}/servingConfigs/{serving_config_id}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The resource name of the ServingConfig to get. Format: `projects/{project_n
             * umber}/locations/{location}/collections/{collection}/engines/{engine}/servingConfigs/
             * {serving_config_id}`
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/servingConfigs/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists all ServingConfigs linked to this dataStore.
           *
           * Create a request for the method "servingConfigs.list".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Full resource name of the parent resource. Format:
           *        `projects/{project_number}/locations/{location}/collections/{collection}/engines/{engine}`
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaListServingConfigsResponse> {

            private static final String REST_PATH = "v1alpha/{+parent}/servingConfigs";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");

            /**
             * Lists all ServingConfigs linked to this dataStore.
             *
             * Create a request for the method "servingConfigs.list".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Full resource name of the parent resource. Format:
           *        `projects/{project_number}/locations/{location}/collections/{collection}/engines/{engine}`
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaListServingConfigsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Full resource name of the parent resource. Format: `projects/{project_numbe
             * r}/locations/{location}/collections/{collection}/engines/{engine}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Full resource name of the parent resource. Format:
           `projects/{project_number}/locations/{location}/collections/{collection}/engines/{engine}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Full resource name of the parent resource. Format: `projects/{project_numbe
             * r}/locations/{location}/collections/{collection}/engines/{engine}`
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Optional. Maximum number of results to return. If unspecified, defaults to 100. If a
             * value greater than 100 is provided, at most 100 results are returned.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. Maximum number of results to return. If unspecified, defaults to 100. If a value greater
           than 100 is provided, at most 100 results are returned.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. Maximum number of results to return. If unspecified, defaults to 100. If a
             * value greater than 100 is provided, at most 100 results are returned.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * Optional. A page token, received from a previous `ListServingConfigs` call. Provide
             * this to retrieve the subsequent page.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. A page token, received from a previous `ListServingConfigs` call. Provide this to
           retrieve the subsequent page.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * Optional. A page token, received from a previous `ListServingConfigs` call. Provide
             * this to retrieve the subsequent page.
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates a ServingConfig. Returns a NOT_FOUND error if the ServingConfig does not exist.
           *
           * Create a request for the method "servingConfigs.patch".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Immutable. Fully qualified name `projects/{project}/locations/{location}/collections/{collection_id}
           *        /engines/{engine_id}/servingConfigs/{serving_config_id}`
           * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaServingConfig}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaServingConfig content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaServingConfig> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/servingConfigs/[^/]+$");

            /**
             * Updates a ServingConfig. Returns a NOT_FOUND error if the ServingConfig does not exist.
             *
             * Create a request for the method "servingConfigs.patch".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Immutable. Fully qualified name `projects/{project}/locations/{location}/collections/{collection_id}
           *        /engines/{engine_id}/servingConfigs/{serving_config_id}`
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaServingConfig}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaServingConfig content) {
              super(DiscoveryEngine.this, "PATCH", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaServingConfig.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/servingConfigs/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Immutable. Fully qualified name `projects/{project}/locations/{location}/collections/
             * {collection_id}/engines/{engine_id}/servingConfigs/{serving_config_id}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Immutable. Fully qualified name `projects/{project}/locations/{location}/collections/{collection_id
           }/engines/{engine_id}/servingConfigs/{serving_config_id}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Immutable. Fully qualified name `projects/{project}/locations/{location}/collections/
             * {collection_id}/engines/{engine_id}/servingConfigs/{serving_config_id}`
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/servingConfigs/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Indicates which fields in the provided ServingConfig to update. The following are NOT
             * supported: * ServingConfig.name If not set, all supported fields are updated.
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Indicates which fields in the provided ServingConfig to update. The following are NOT supported: *
           ServingConfig.name If not set, all supported fields are updated.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * Indicates which fields in the provided ServingConfig to update. The following are NOT
             * supported: * ServingConfig.name If not set, all supported fields are updated.
             */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }
          /**
           * Makes a recommendation, which requires a contextual user event.
           *
           * Create a request for the method "servingConfigs.recommend".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link Recommend#execute()} method to invoke the remote operation.
           *
           * @param servingConfig Required. Full resource name of a ServingConfig:
           *        `projects/locations/global/collections/engines/servingConfigs`, or
           *        `projects/locations/global/collections/dataStores/servingConfigs` One default serving
           *        config is created along with your recommendation engine creation. The engine ID will be
           *        used as the ID of the default serving config. For example, for Engine
           *        `projects/locations/global/collections/engines/my-engine`, you can use
           *        `projects/locations/global/collections/engines/my-engine/servingConfigs/my-engine` for
           *        your RecommendationService.Recommend requests.
           * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaRecommendRequest}
           * @return the request
           */
          public Recommend recommend(java.lang.String servingConfig, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaRecommendRequest content) throws java.io.IOException {
            Recommend result = new Recommend(servingConfig, content);
            initialize(result);
            return result;
          }

          public class Recommend extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaRecommendResponse> {

            private static final String REST_PATH = "v1alpha/{+servingConfig}:recommend";

            private final java.util.regex.Pattern SERVING_CONFIG_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/servingConfigs/[^/]+$");

            /**
             * Makes a recommendation, which requires a contextual user event.
             *
             * Create a request for the method "servingConfigs.recommend".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link Recommend#execute()} method to invoke the remote
             * operation. <p> {@link
             * Recommend#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param servingConfig Required. Full resource name of a ServingConfig:
           *        `projects/locations/global/collections/engines/servingConfigs`, or
           *        `projects/locations/global/collections/dataStores/servingConfigs` One default serving
           *        config is created along with your recommendation engine creation. The engine ID will be
           *        used as the ID of the default serving config. For example, for Engine
           *        `projects/locations/global/collections/engines/my-engine`, you can use
           *        `projects/locations/global/collections/engines/my-engine/servingConfigs/my-engine` for
           *        your RecommendationService.Recommend requests.
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaRecommendRequest}
             * @since 1.13
             */
            protected Recommend(java.lang.String servingConfig, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaRecommendRequest content) {
              super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaRecommendResponse.class);
              this.servingConfig = com.google.api.client.util.Preconditions.checkNotNull(servingConfig, "Required parameter servingConfig must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(SERVING_CONFIG_PATTERN.matcher(servingConfig).matches(),
                    "Parameter servingConfig must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/servingConfigs/[^/]+$");
              }
            }

            @Override
            public Recommend set$Xgafv(java.lang.String $Xgafv) {
              return (Recommend) super.set$Xgafv($Xgafv);
            }

            @Override
            public Recommend setAccessToken(java.lang.String accessToken) {
              return (Recommend) super.setAccessToken(accessToken);
            }

            @Override
            public Recommend setAlt(java.lang.String alt) {
              return (Recommend) super.setAlt(alt);
            }

            @Override
            public Recommend setCallback(java.lang.String callback) {
              return (Recommend) super.setCallback(callback);
            }

            @Override
            public Recommend setFields(java.lang.String fields) {
              return (Recommend) super.setFields(fields);
            }

            @Override
            public Recommend setKey(java.lang.String key) {
              return (Recommend) super.setKey(key);
            }

            @Override
            public Recommend setOauthToken(java.lang.String oauthToken) {
              return (Recommend) super.setOauthToken(oauthToken);
            }

            @Override
            public Recommend setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Recommend) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Recommend setQuotaUser(java.lang.String quotaUser) {
              return (Recommend) super.setQuotaUser(quotaUser);
            }

            @Override
            public Recommend setUploadType(java.lang.String uploadType) {
              return (Recommend) super.setUploadType(uploadType);
            }

            @Override
            public Recommend setUploadProtocol(java.lang.String uploadProtocol) {
              return (Recommend) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Full resource name of a ServingConfig:
             * `projects/locations/global/collections/engines/servingConfigs`, or
             * `projects/locations/global/collections/dataStores/servingConfigs` One default serving
             * config is created along with your recommendation engine creation. The engine ID will
             * be used as the ID of the default serving config. For example, for Engine
             * `projects/locations/global/collections/engines/my-engine`, you can use
             * `projects/locations/global/collections/engines/my-engine/servingConfigs/my-engine`
             * for your RecommendationService.Recommend requests.
             */
            @com.google.api.client.util.Key
            private java.lang.String servingConfig;

            /** Required. Full resource name of a ServingConfig:
           `projects/locations/global/collections/engines/servingConfigs`, or
           `projects/locations/global/collections/dataStores/servingConfigs` One default serving config is
           created along with your recommendation engine creation. The engine ID will be used as the ID of the
           default serving config. For example, for Engine `projects/locations/global/collections/engines/my-
           engine`, you can use `projects/locations/global/collections/engines/my-engine/servingConfigs/my-
           engine` for your RecommendationService.Recommend requests.
             */
            public java.lang.String getServingConfig() {
              return servingConfig;
            }

            /**
             * Required. Full resource name of a ServingConfig:
             * `projects/locations/global/collections/engines/servingConfigs`, or
             * `projects/locations/global/collections/dataStores/servingConfigs` One default serving
             * config is created along with your recommendation engine creation. The engine ID will
             * be used as the ID of the default serving config. For example, for Engine
             * `projects/locations/global/collections/engines/my-engine`, you can use
             * `projects/locations/global/collections/engines/my-engine/servingConfigs/my-engine`
             * for your RecommendationService.Recommend requests.
             */
            public Recommend setServingConfig(java.lang.String servingConfig) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(SERVING_CONFIG_PATTERN.matcher(servingConfig).matches(),
                    "Parameter servingConfig must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/servingConfigs/[^/]+$");
              }
              this.servingConfig = servingConfig;
              return this;
            }

            @Override
            public Recommend set(String parameterName, Object value) {
              return (Recommend) super.set(parameterName, value);
            }
          }
          /**
           * Performs a search.
           *
           * Create a request for the method "servingConfigs.search".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link Search#execute()} method to invoke the remote operation.
           *
           * @param servingConfig Required. The resource name of the Search serving config, such as `projects/locations/global/collect
           *        ions/default_collection/engines/servingConfigs/default_serving_config`, or `projects/locat
           *        ions/global/collections/default_collection/dataStores/default_data_store/servingConfigs/de
           *        fault_serving_config`. This field is used to identify the serving configuration name, set
           *        of models used to make the search.
           * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSearchRequest}
           * @return the request
           */
          public Search search(java.lang.String servingConfig, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSearchRequest content) throws java.io.IOException {
            Search result = new Search(servingConfig, content);
            initialize(result);
            return result;
          }

          public class Search extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSearchResponse> {

            private static final String REST_PATH = "v1alpha/{+servingConfig}:search";

            private final java.util.regex.Pattern SERVING_CONFIG_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/servingConfigs/[^/]+$");

            /**
             * Performs a search.
             *
             * Create a request for the method "servingConfigs.search".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link Search#execute()} method to invoke the remote operation.
             * <p> {@link
             * Search#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param servingConfig Required. The resource name of the Search serving config, such as `projects/locations/global/collect
           *        ions/default_collection/engines/servingConfigs/default_serving_config`, or `projects/locat
           *        ions/global/collections/default_collection/dataStores/default_data_store/servingConfigs/de
           *        fault_serving_config`. This field is used to identify the serving configuration name, set
           *        of models used to make the search.
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSearchRequest}
             * @since 1.13
             */
            protected Search(java.lang.String servingConfig, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSearchRequest content) {
              super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSearchResponse.class);
              this.servingConfig = com.google.api.client.util.Preconditions.checkNotNull(servingConfig, "Required parameter servingConfig must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(SERVING_CONFIG_PATTERN.matcher(servingConfig).matches(),
                    "Parameter servingConfig must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/servingConfigs/[^/]+$");
              }
            }

            @Override
            public Search set$Xgafv(java.lang.String $Xgafv) {
              return (Search) super.set$Xgafv($Xgafv);
            }

            @Override
            public Search setAccessToken(java.lang.String accessToken) {
              return (Search) super.setAccessToken(accessToken);
            }

            @Override
            public Search setAlt(java.lang.String alt) {
              return (Search) super.setAlt(alt);
            }

            @Override
            public Search setCallback(java.lang.String callback) {
              return (Search) super.setCallback(callback);
            }

            @Override
            public Search setFields(java.lang.String fields) {
              return (Search) super.setFields(fields);
            }

            @Override
            public Search setKey(java.lang.String key) {
              return (Search) super.setKey(key);
            }

            @Override
            public Search setOauthToken(java.lang.String oauthToken) {
              return (Search) super.setOauthToken(oauthToken);
            }

            @Override
            public Search setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Search) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Search setQuotaUser(java.lang.String quotaUser) {
              return (Search) super.setQuotaUser(quotaUser);
            }

            @Override
            public Search setUploadType(java.lang.String uploadType) {
              return (Search) super.setUploadType(uploadType);
            }

            @Override
            public Search setUploadProtocol(java.lang.String uploadProtocol) {
              return (Search) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the Search serving config, such as `projects/locations
             * /global/collections/default_collection/engines/servingConfigs/default_serving_config`
             * , or `projects/locations/global/collections/default_collection/dataStores/default_dat
             * a_store/servingConfigs/default_serving_config`. This field is used to identify the
             * serving configuration name, set of models used to make the search.
             */
            @com.google.api.client.util.Key
            private java.lang.String servingConfig;

            /** Required. The resource name of the Search serving config, such as `projects/locations/global/collec
           tions/default_collection/engines/servingConfigs/default_serving_config`, or `projects/locations/glo
           bal/collections/default_collection/dataStores/default_data_store/servingConfigs/default_serving_con
           fig`. This field is used to identify the serving configuration name, set of models used to make the
           search.
             */
            public java.lang.String getServingConfig() {
              return servingConfig;
            }

            /**
             * Required. The resource name of the Search serving config, such as `projects/locations
             * /global/collections/default_collection/engines/servingConfigs/default_serving_config`
             * , or `projects/locations/global/collections/default_collection/dataStores/default_dat
             * a_store/servingConfigs/default_serving_config`. This field is used to identify the
             * serving configuration name, set of models used to make the search.
             */
            public Search setServingConfig(java.lang.String servingConfig) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(SERVING_CONFIG_PATTERN.matcher(servingConfig).matches(),
                    "Parameter servingConfig must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/servingConfigs/[^/]+$");
              }
              this.servingConfig = servingConfig;
              return this;
            }

            @Override
            public Search set(String parameterName, Object value) {
              return (Search) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the Sessions collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
         *   {@code DiscoveryEngine.Sessions.List request = discoveryengine.sessions().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Sessions sessions() {
          return new Sessions();
        }

        /**
         * The "sessions" collection of methods.
         */
        public class Sessions {

          /**
           * Creates a Session. If the Session to create already exists, an ALREADY_EXISTS error is returned.
           *
           * Create a request for the method "sessions.create".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Full resource name of parent data store. Format: `projects/{project_number}/locations/{loc
           *        ation_id}/collections/{collection}/dataStores/{data_store_id}`
           * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSession}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSession content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSession> {

            private static final String REST_PATH = "v1alpha/{+parent}/sessions";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");

            /**
             * Creates a Session. If the Session to create already exists, an ALREADY_EXISTS error is
             * returned.
             *
             * Create a request for the method "sessions.create".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Full resource name of parent data store. Format: `projects/{project_number}/locations/{loc
           *        ation_id}/collections/{collection}/dataStores/{data_store_id}`
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSession}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSession content) {
              super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSession.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Full resource name of parent data store. Format: `projects/{project_number}
             * /locations/{location_id}/collections/{collection}/dataStores/{data_store_id}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Full resource name of parent data store. Format: `projects/{project_number}/locations/{lo
           cation_id}/collections/{collection}/dataStores/{data_store_id}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Full resource name of parent data store. Format: `projects/{project_number}
             * /locations/{location_id}/collections/{collection}/dataStores/{data_store_id}`
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a Session. If the Session to delete does not exist, a NOT_FOUND error is returned.
           *
           * Create a request for the method "sessions.delete".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The resource name of the Session to delete. Format: `projects/{project_number}/locations/{
           *        location_id}/collections/{collection}/dataStores/{data_store_id}/sessions/{session_id}`
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/sessions/[^/]+$");

            /**
             * Deletes a Session. If the Session to delete does not exist, a NOT_FOUND error is returned.
             *
             * Create a request for the method "sessions.delete".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The resource name of the Session to delete. Format: `projects/{project_number}/locations/{
           *        location_id}/collections/{collection}/dataStores/{data_store_id}/sessions/{session_id}`
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(DiscoveryEngine.this, "DELETE", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/sessions/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the Session to delete. Format: `projects/{project_numb
             * er}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/sessi
             * ons/{session_id}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The resource name of the Session to delete. Format: `projects/{project_number}/locations/
           {location_id}/collections/{collection}/dataStores/{data_store_id}/sessions/{session_id}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The resource name of the Session to delete. Format: `projects/{project_numb
             * er}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/sessi
             * ons/{session_id}`
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/sessions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets a Session.
           *
           * Create a request for the method "sessions.get".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The resource name of the Session to get. Format: `projects/{project_number}/locations/{loc
           *        ation_id}/collections/{collection}/dataStores/{data_store_id}/sessions/{session_id}`
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSession> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/sessions/[^/]+$");

            /**
             * Gets a Session.
             *
             * Create a request for the method "sessions.get".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The resource name of the Session to get. Format: `projects/{project_number}/locations/{loc
           *        ation_id}/collections/{collection}/dataStores/{data_store_id}/sessions/{session_id}`
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSession.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/sessions/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the Session to get. Format: `projects/{project_number}
             * /locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/sessions
             * /{session_id}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The resource name of the Session to get. Format: `projects/{project_number}/locations/{lo
           cation_id}/collections/{collection}/dataStores/{data_store_id}/sessions/{session_id}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The resource name of the Session to get. Format: `projects/{project_number}
             * /locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/sessions
             * /{session_id}`
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/sessions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists all Sessions by their parent DataStore.
           *
           * Create a request for the method "sessions.list".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The data store resource name. Format: `projects/{project_number}/locations/{location_id}/c
           *        ollections/{collection}/dataStores/{data_store_id}`
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaListSessionsResponse> {

            private static final String REST_PATH = "v1alpha/{+parent}/sessions";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");

            /**
             * Lists all Sessions by their parent DataStore.
             *
             * Create a request for the method "sessions.list".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The data store resource name. Format: `projects/{project_number}/locations/{location_id}/c
           *        ollections/{collection}/dataStores/{data_store_id}`
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaListSessionsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The data store resource name. Format: `projects/{project_number}/locations/
             * {location_id}/collections/{collection}/dataStores/{data_store_id}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The data store resource name. Format: `projects/{project_number}/locations/{location_id}/
           collections/{collection}/dataStores/{data_store_id}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The data store resource name. Format: `projects/{project_number}/locations/
             * {location_id}/collections/{collection}/dataStores/{data_store_id}`
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * A filter to apply on the list results. The supported features are: user_pseudo_id,
             * state. Example: "user_pseudo_id = some_id"
             */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** A filter to apply on the list results. The supported features are: user_pseudo_id, state. Example:
           "user_pseudo_id = some_id"
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /**
             * A filter to apply on the list results. The supported features are: user_pseudo_id,
             * state. Example: "user_pseudo_id = some_id"
             */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /**
             * A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
             * after a field name for descending. Supported fields: * `update_time` * `create_time`
             * * `session_name` Example: "update_time desc" "create_time"
             */
            @com.google.api.client.util.Key
            private java.lang.String orderBy;

            /** A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field
           name for descending. Supported fields: * `update_time` * `create_time` * `session_name` Example:
           "update_time desc" "create_time"
             */
            public java.lang.String getOrderBy() {
              return orderBy;
            }

            /**
             * A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
             * after a field name for descending. Supported fields: * `update_time` * `create_time`
             * * `session_name` Example: "update_time desc" "create_time"
             */
            public List setOrderBy(java.lang.String orderBy) {
              this.orderBy = orderBy;
              return this;
            }

            /**
             * Maximum number of results to return. If unspecified, defaults to 50. Max allowed
             * value is 1000.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Maximum number of results to return. If unspecified, defaults to 50. Max allowed value is 1000.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Maximum number of results to return. If unspecified, defaults to 50. Max allowed
             * value is 1000.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * A page token, received from a previous `ListSessions` call. Provide this to retrieve
             * the subsequent page.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** A page token, received from a previous `ListSessions` call. Provide this to retrieve the subsequent
           page.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * A page token, received from a previous `ListSessions` call. Provide this to retrieve
             * the subsequent page.
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates a Session. Session action type cannot be changed. If the Session to update does not
           * exist, a NOT_FOUND error is returned.
           *
           * Create a request for the method "sessions.patch".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Immutable. Fully qualified name
           *        `project/locations/global/collections/{collection}/engines/{engine}/sessions`
           * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSession}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSession content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSession> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/sessions/[^/]+$");

            /**
             * Updates a Session. Session action type cannot be changed. If the Session to update does not
             * exist, a NOT_FOUND error is returned.
             *
             * Create a request for the method "sessions.patch".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Immutable. Fully qualified name
           *        `project/locations/global/collections/{collection}/engines/{engine}/sessions`
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSession}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSession content) {
              super(DiscoveryEngine.this, "PATCH", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaSession.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/sessions/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Immutable. Fully qualified name
             * `project/locations/global/collections/{collection}/engines/{engine}/sessions`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Immutable. Fully qualified name
           `project/locations/global/collections/{collection}/engines/{engine}/sessions`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Immutable. Fully qualified name
             * `project/locations/global/collections/{collection}/engines/{engine}/sessions`
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/sessions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Indicates which fields in the provided Session to update. The following are NOT
             * supported: * Session.name If not set or empty, all supported fields are updated.
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Indicates which fields in the provided Session to update. The following are NOT supported: *
           Session.name If not set or empty, all supported fields are updated.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * Indicates which fields in the provided Session to update. The following are NOT
             * supported: * Session.name If not set or empty, all supported fields are updated.
             */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the Answers collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
           *   {@code DiscoveryEngine.Answers.List request = discoveryengine.answers().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Answers answers() {
            return new Answers();
          }

          /**
           * The "answers" collection of methods.
           */
          public class Answers {

            /**
             * Gets a Answer.
             *
             * Create a request for the method "answers.get".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name Required. The resource name of the Answer to get. Format: `projects/{project_number}/locations/{loca
             *        tion_id}/collections/{collection}/engines/{engine_id}/sessions/{session_id}/answers/{answe
             *        r_id}`
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaAnswer> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/sessions/[^/]+/answers/[^/]+$");

              /**
               * Gets a Answer.
               *
               * Create a request for the method "answers.get".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The resource name of the Answer to get. Format: `projects/{project_number}/locations/{loca
             *        tion_id}/collections/{collection}/engines/{engine_id}/sessions/{session_id}/answers/{answe
             *        r_id}`
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaAnswer.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/sessions/[^/]+/answers/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The resource name of the Answer to get. Format: `projects/{project_number
               * }/locations/{location_id}/collections/{collection}/engines/{engine_id}/sessions/{se
               * ssion_id}/answers/{answer_id}`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The resource name of the Answer to get. Format: `projects/{project_number}/locations/{loc
             ation_id}/collections/{collection}/engines/{engine_id}/sessions/{session_id}/answers/{answer_id}`
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The resource name of the Answer to get. Format: `projects/{project_number
               * }/locations/{location_id}/collections/{collection}/engines/{engine_id}/sessions/{se
               * ssion_id}/answers/{answer_id}`
               */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/sessions/[^/]+/answers/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }

          }
        }
        /**
         * An accessor for creating requests from the SiteSearchEngine collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
         *   {@code DiscoveryEngine.SiteSearchEngine.List request = discoveryengine.siteSearchEngine().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public SiteSearchEngine siteSearchEngine() {
          return new SiteSearchEngine();
        }

        /**
         * The "siteSearchEngine" collection of methods.
         */
        public class SiteSearchEngine {

          /**
           * Downgrade from advanced site search to basic site search.
           *
           * Create a request for the method "siteSearchEngine.disableAdvancedSiteSearch".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link DisableAdvancedSiteSearch#execute()} method to invoke the
           * remote operation.
           *
           * @param siteSearchEngine Required. Full resource name of the SiteSearchEngine, such as
           *        `projects/{project}/locations/{location}/dataStores/{data_store_id}/siteSearchEngine`.
           * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDisableAdvancedSiteSearchRequest}
           * @return the request
           */
          public DisableAdvancedSiteSearch disableAdvancedSiteSearch(java.lang.String siteSearchEngine, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDisableAdvancedSiteSearchRequest content) throws java.io.IOException {
            DisableAdvancedSiteSearch result = new DisableAdvancedSiteSearch(siteSearchEngine, content);
            initialize(result);
            return result;
          }

          public class DisableAdvancedSiteSearch extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1alpha/{+siteSearchEngine}:disableAdvancedSiteSearch";

            private final java.util.regex.Pattern SITE_SEARCH_ENGINE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/siteSearchEngine$");

            /**
             * Downgrade from advanced site search to basic site search.
             *
             * Create a request for the method "siteSearchEngine.disableAdvancedSiteSearch".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link DisableAdvancedSiteSearch#execute()} method to invoke the
             * remote operation. <p> {@link DisableAdvancedSiteSearch#initialize(com.google.api.client.googlea
             * pis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
             * immediately after invoking the constructor. </p>
             *
             * @param siteSearchEngine Required. Full resource name of the SiteSearchEngine, such as
           *        `projects/{project}/locations/{location}/dataStores/{data_store_id}/siteSearchEngine`.
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDisableAdvancedSiteSearchRequest}
             * @since 1.13
             */
            protected DisableAdvancedSiteSearch(java.lang.String siteSearchEngine, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaDisableAdvancedSiteSearchRequest content) {
              super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
              this.siteSearchEngine = com.google.api.client.util.Preconditions.checkNotNull(siteSearchEngine, "Required parameter siteSearchEngine must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(SITE_SEARCH_ENGINE_PATTERN.matcher(siteSearchEngine).matches(),
                    "Parameter siteSearchEngine must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/siteSearchEngine$");
              }
            }

            @Override
            public DisableAdvancedSiteSearch set$Xgafv(java.lang.String $Xgafv) {
              return (DisableAdvancedSiteSearch) super.set$Xgafv($Xgafv);
            }

            @Override
            public DisableAdvancedSiteSearch setAccessToken(java.lang.String accessToken) {
              return (DisableAdvancedSiteSearch) super.setAccessToken(accessToken);
            }

            @Override
            public DisableAdvancedSiteSearch setAlt(java.lang.String alt) {
              return (DisableAdvancedSiteSearch) super.setAlt(alt);
            }

            @Override
            public DisableAdvancedSiteSearch setCallback(java.lang.String callback) {
              return (DisableAdvancedSiteSearch) super.setCallback(callback);
            }

            @Override
            public DisableAdvancedSiteSearch setFields(java.lang.String fields) {
              return (DisableAdvancedSiteSearch) super.setFields(fields);
            }

            @Override
            public DisableAdvancedSiteSearch setKey(java.lang.String key) {
              return (DisableAdvancedSiteSearch) super.setKey(key);
            }

            @Override
            public DisableAdvancedSiteSearch setOauthToken(java.lang.String oauthToken) {
              return (DisableAdvancedSiteSearch) super.setOauthToken(oauthToken);
            }

            @Override
            public DisableAdvancedSiteSearch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (DisableAdvancedSiteSearch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public DisableAdvancedSiteSearch setQuotaUser(java.lang.String quotaUser) {
              return (DisableAdvancedSiteSearch) super.setQuotaUser(quotaUser);
            }

            @Override
            public DisableAdvancedSiteSearch setUploadType(java.lang.String uploadType) {
              return (DisableAdvancedSiteSearch) super.setUploadType(uploadType);
            }

            @Override
            public DisableAdvancedSiteSearch setUploadProtocol(java.lang.String uploadProtocol) {
              return (DisableAdvancedSiteSearch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Full resource name of the SiteSearchEngine, such as `projects/{project}/loc
             * ations/{location}/dataStores/{data_store_id}/siteSearchEngine`.
             */
            @com.google.api.client.util.Key
            private java.lang.String siteSearchEngine;

            /** Required. Full resource name of the SiteSearchEngine, such as
           `projects/{project}/locations/{location}/dataStores/{data_store_id}/siteSearchEngine`.
             */
            public java.lang.String getSiteSearchEngine() {
              return siteSearchEngine;
            }

            /**
             * Required. Full resource name of the SiteSearchEngine, such as `projects/{project}/loc
             * ations/{location}/dataStores/{data_store_id}/siteSearchEngine`.
             */
            public DisableAdvancedSiteSearch setSiteSearchEngine(java.lang.String siteSearchEngine) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(SITE_SEARCH_ENGINE_PATTERN.matcher(siteSearchEngine).matches(),
                    "Parameter siteSearchEngine must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/siteSearchEngine$");
              }
              this.siteSearchEngine = siteSearchEngine;
              return this;
            }

            @Override
            public DisableAdvancedSiteSearch set(String parameterName, Object value) {
              return (DisableAdvancedSiteSearch) super.set(parameterName, value);
            }
          }
          /**
           * Upgrade from basic site search to advanced site search.
           *
           * Create a request for the method "siteSearchEngine.enableAdvancedSiteSearch".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link EnableAdvancedSiteSearch#execute()} method to invoke the
           * remote operation.
           *
           * @param siteSearchEngine Required. Full resource name of the SiteSearchEngine, such as
           *        `projects/{project}/locations/{location}/dataStores/{data_store_id}/siteSearchEngine`.
           * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaEnableAdvancedSiteSearchRequest}
           * @return the request
           */
          public EnableAdvancedSiteSearch enableAdvancedSiteSearch(java.lang.String siteSearchEngine, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaEnableAdvancedSiteSearchRequest content) throws java.io.IOException {
            EnableAdvancedSiteSearch result = new EnableAdvancedSiteSearch(siteSearchEngine, content);
            initialize(result);
            return result;
          }

          public class EnableAdvancedSiteSearch extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1alpha/{+siteSearchEngine}:enableAdvancedSiteSearch";

            private final java.util.regex.Pattern SITE_SEARCH_ENGINE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/siteSearchEngine$");

            /**
             * Upgrade from basic site search to advanced site search.
             *
             * Create a request for the method "siteSearchEngine.enableAdvancedSiteSearch".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link EnableAdvancedSiteSearch#execute()} method to invoke the
             * remote operation. <p> {@link EnableAdvancedSiteSearch#initialize(com.google.api.client.googleap
             * is.services.AbstractGoogleClientRequest)} must be called to initialize this instance
             * immediately after invoking the constructor. </p>
             *
             * @param siteSearchEngine Required. Full resource name of the SiteSearchEngine, such as
           *        `projects/{project}/locations/{location}/dataStores/{data_store_id}/siteSearchEngine`.
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaEnableAdvancedSiteSearchRequest}
             * @since 1.13
             */
            protected EnableAdvancedSiteSearch(java.lang.String siteSearchEngine, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaEnableAdvancedSiteSearchRequest content) {
              super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
              this.siteSearchEngine = com.google.api.client.util.Preconditions.checkNotNull(siteSearchEngine, "Required parameter siteSearchEngine must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(SITE_SEARCH_ENGINE_PATTERN.matcher(siteSearchEngine).matches(),
                    "Parameter siteSearchEngine must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/siteSearchEngine$");
              }
            }

            @Override
            public EnableAdvancedSiteSearch set$Xgafv(java.lang.String $Xgafv) {
              return (EnableAdvancedSiteSearch) super.set$Xgafv($Xgafv);
            }

            @Override
            public EnableAdvancedSiteSearch setAccessToken(java.lang.String accessToken) {
              return (EnableAdvancedSiteSearch) super.setAccessToken(accessToken);
            }

            @Override
            public EnableAdvancedSiteSearch setAlt(java.lang.String alt) {
              return (EnableAdvancedSiteSearch) super.setAlt(alt);
            }

            @Override
            public EnableAdvancedSiteSearch setCallback(java.lang.String callback) {
              return (EnableAdvancedSiteSearch) super.setCallback(callback);
            }

            @Override
            public EnableAdvancedSiteSearch setFields(java.lang.String fields) {
              return (EnableAdvancedSiteSearch) super.setFields(fields);
            }

            @Override
            public EnableAdvancedSiteSearch setKey(java.lang.String key) {
              return (EnableAdvancedSiteSearch) super.setKey(key);
            }

            @Override
            public EnableAdvancedSiteSearch setOauthToken(java.lang.String oauthToken) {
              return (EnableAdvancedSiteSearch) super.setOauthToken(oauthToken);
            }

            @Override
            public EnableAdvancedSiteSearch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (EnableAdvancedSiteSearch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public EnableAdvancedSiteSearch setQuotaUser(java.lang.String quotaUser) {
              return (EnableAdvancedSiteSearch) super.setQuotaUser(quotaUser);
            }

            @Override
            public EnableAdvancedSiteSearch setUploadType(java.lang.String uploadType) {
              return (EnableAdvancedSiteSearch) super.setUploadType(uploadType);
            }

            @Override
            public EnableAdvancedSiteSearch setUploadProtocol(java.lang.String uploadProtocol) {
              return (EnableAdvancedSiteSearch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Full resource name of the SiteSearchEngine, such as `projects/{project}/loc
             * ations/{location}/dataStores/{data_store_id}/siteSearchEngine`.
             */
            @com.google.api.client.util.Key
            private java.lang.String siteSearchEngine;

            /** Required. Full resource name of the SiteSearchEngine, such as
           `projects/{project}/locations/{location}/dataStores/{data_store_id}/siteSearchEngine`.
             */
            public java.lang.String getSiteSearchEngine() {
              return siteSearchEngine;
            }

            /**
             * Required. Full resource name of the SiteSearchEngine, such as `projects/{project}/loc
             * ations/{location}/dataStores/{data_store_id}/siteSearchEngine`.
             */
            public EnableAdvancedSiteSearch setSiteSearchEngine(java.lang.String siteSearchEngine) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(SITE_SEARCH_ENGINE_PATTERN.matcher(siteSearchEngine).matches(),
                    "Parameter siteSearchEngine must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/siteSearchEngine$");
              }
              this.siteSearchEngine = siteSearchEngine;
              return this;
            }

            @Override
            public EnableAdvancedSiteSearch set(String parameterName, Object value) {
              return (EnableAdvancedSiteSearch) super.set(parameterName, value);
            }
          }
          /**
           * Request on-demand recrawl for a list of URIs.
           *
           * Create a request for the method "siteSearchEngine.recrawlUris".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link RecrawlUris#execute()} method to invoke the remote
           * operation.
           *
           * @param siteSearchEngine Required. Full resource name of the SiteSearchEngine, such as
           *        `projects/locations/collections/dataStores/siteSearchEngine`.
           * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaRecrawlUrisRequest}
           * @return the request
           */
          public RecrawlUris recrawlUris(java.lang.String siteSearchEngine, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaRecrawlUrisRequest content) throws java.io.IOException {
            RecrawlUris result = new RecrawlUris(siteSearchEngine, content);
            initialize(result);
            return result;
          }

          public class RecrawlUris extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1alpha/{+siteSearchEngine}:recrawlUris";

            private final java.util.regex.Pattern SITE_SEARCH_ENGINE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/siteSearchEngine$");

            /**
             * Request on-demand recrawl for a list of URIs.
             *
             * Create a request for the method "siteSearchEngine.recrawlUris".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link RecrawlUris#execute()} method to invoke the remote
             * operation. <p> {@link
             * RecrawlUris#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param siteSearchEngine Required. Full resource name of the SiteSearchEngine, such as
           *        `projects/locations/collections/dataStores/siteSearchEngine`.
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaRecrawlUrisRequest}
             * @since 1.13
             */
            protected RecrawlUris(java.lang.String siteSearchEngine, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaRecrawlUrisRequest content) {
              super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
              this.siteSearchEngine = com.google.api.client.util.Preconditions.checkNotNull(siteSearchEngine, "Required parameter siteSearchEngine must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(SITE_SEARCH_ENGINE_PATTERN.matcher(siteSearchEngine).matches(),
                    "Parameter siteSearchEngine must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/siteSearchEngine$");
              }
            }

            @Override
            public RecrawlUris set$Xgafv(java.lang.String $Xgafv) {
              return (RecrawlUris) super.set$Xgafv($Xgafv);
            }

            @Override
            public RecrawlUris setAccessToken(java.lang.String accessToken) {
              return (RecrawlUris) super.setAccessToken(accessToken);
            }

            @Override
            public RecrawlUris setAlt(java.lang.String alt) {
              return (RecrawlUris) super.setAlt(alt);
            }

            @Override
            public RecrawlUris setCallback(java.lang.String callback) {
              return (RecrawlUris) super.setCallback(callback);
            }

            @Override
            public RecrawlUris setFields(java.lang.String fields) {
              return (RecrawlUris) super.setFields(fields);
            }

            @Override
            public RecrawlUris setKey(java.lang.String key) {
              return (RecrawlUris) super.setKey(key);
            }

            @Override
            public RecrawlUris setOauthToken(java.lang.String oauthToken) {
              return (RecrawlUris) super.setOauthToken(oauthToken);
            }

            @Override
            public RecrawlUris setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (RecrawlUris) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public RecrawlUris setQuotaUser(java.lang.String quotaUser) {
              return (RecrawlUris) super.setQuotaUser(quotaUser);
            }

            @Override
            public RecrawlUris setUploadType(java.lang.String uploadType) {
              return (RecrawlUris) super.setUploadType(uploadType);
            }

            @Override
            public RecrawlUris setUploadProtocol(java.lang.String uploadProtocol) {
              return (RecrawlUris) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Full resource name of the SiteSearchEngine, such as
             * `projects/locations/collections/dataStores/siteSearchEngine`.
             */
            @com.google.api.client.util.Key
            private java.lang.String siteSearchEngine;

            /** Required. Full resource name of the SiteSearchEngine, such as
           `projects/locations/collections/dataStores/siteSearchEngine`.
             */
            public java.lang.String getSiteSearchEngine() {
              return siteSearchEngine;
            }

            /**
             * Required. Full resource name of the SiteSearchEngine, such as
             * `projects/locations/collections/dataStores/siteSearchEngine`.
             */
            public RecrawlUris setSiteSearchEngine(java.lang.String siteSearchEngine) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(SITE_SEARCH_ENGINE_PATTERN.matcher(siteSearchEngine).matches(),
                    "Parameter siteSearchEngine must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/siteSearchEngine$");
              }
              this.siteSearchEngine = siteSearchEngine;
              return this;
            }

            @Override
            public RecrawlUris set(String parameterName, Object value) {
              return (RecrawlUris) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the TargetSites collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
           *   {@code DiscoveryEngine.TargetSites.List request = discoveryengine.targetSites().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public TargetSites targetSites() {
            return new TargetSites();
          }

          /**
           * The "targetSites" collection of methods.
           */
          public class TargetSites {

            /**
             * Creates TargetSite in a batch.
             *
             * Create a request for the method "targetSites.batchCreate".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link BatchCreate#execute()} method to invoke the remote
             * operation.
             *
             * @param parent Required. The parent resource shared by all TargetSites being created. `projects/{project}/locations
             *        /{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`. The parent
             *        field in the CreateBookRequest messages must either be empty or match this field.
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaBatchCreateTargetSitesRequest}
             * @return the request
             */
            public BatchCreate batchCreate(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaBatchCreateTargetSitesRequest content) throws java.io.IOException {
              BatchCreate result = new BatchCreate(parent, content);
              initialize(result);
              return result;
            }

            public class BatchCreate extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1alpha/{+parent}/targetSites:batchCreate";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/siteSearchEngine$");

              /**
               * Creates TargetSite in a batch.
               *
               * Create a request for the method "targetSites.batchCreate".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link BatchCreate#execute()} method to invoke the remote
               * operation. <p> {@link
               * BatchCreate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The parent resource shared by all TargetSites being created. `projects/{project}/locations
             *        /{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`. The parent
             *        field in the CreateBookRequest messages must either be empty or match this field.
               * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaBatchCreateTargetSitesRequest}
               * @since 1.13
               */
              protected BatchCreate(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaBatchCreateTargetSitesRequest content) {
                super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/siteSearchEngine$");
                }
              }

              @Override
              public BatchCreate set$Xgafv(java.lang.String $Xgafv) {
                return (BatchCreate) super.set$Xgafv($Xgafv);
              }

              @Override
              public BatchCreate setAccessToken(java.lang.String accessToken) {
                return (BatchCreate) super.setAccessToken(accessToken);
              }

              @Override
              public BatchCreate setAlt(java.lang.String alt) {
                return (BatchCreate) super.setAlt(alt);
              }

              @Override
              public BatchCreate setCallback(java.lang.String callback) {
                return (BatchCreate) super.setCallback(callback);
              }

              @Override
              public BatchCreate setFields(java.lang.String fields) {
                return (BatchCreate) super.setFields(fields);
              }

              @Override
              public BatchCreate setKey(java.lang.String key) {
                return (BatchCreate) super.setKey(key);
              }

              @Override
              public BatchCreate setOauthToken(java.lang.String oauthToken) {
                return (BatchCreate) super.setOauthToken(oauthToken);
              }

              @Override
              public BatchCreate setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (BatchCreate) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public BatchCreate setQuotaUser(java.lang.String quotaUser) {
                return (BatchCreate) super.setQuotaUser(quotaUser);
              }

              @Override
              public BatchCreate setUploadType(java.lang.String uploadType) {
                return (BatchCreate) super.setUploadType(uploadType);
              }

              @Override
              public BatchCreate setUploadProtocol(java.lang.String uploadProtocol) {
                return (BatchCreate) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The parent resource shared by all TargetSites being created. `projects/{p
               * roject}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteS
               * earchEngine`. The parent field in the CreateBookRequest messages must either be
               * empty or match this field.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The parent resource shared by all TargetSites being created. `projects/{project}/location
             s/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`. The parent field
             in the CreateBookRequest messages must either be empty or match this field.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The parent resource shared by all TargetSites being created. `projects/{p
               * roject}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteS
               * earchEngine`. The parent field in the CreateBookRequest messages must either be
               * empty or match this field.
               */
              public BatchCreate setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/siteSearchEngine$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public BatchCreate set(String parameterName, Object value) {
                return (BatchCreate) super.set(parameterName, value);
              }
            }
            /**
             * Creates a TargetSite.
             *
             * Create a request for the method "targetSites.create".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             *
             * @param parent Required. Parent resource name of TargetSite, such as `projects/{project}/locations/{location}/colle
             *        ctions/{collection}/dataStores/{data_store}/siteSearchEngine`.
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaTargetSite}
             * @return the request
             */
            public Create create(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaTargetSite content) throws java.io.IOException {
              Create result = new Create(parent, content);
              initialize(result);
              return result;
            }

            public class Create extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1alpha/{+parent}/targetSites";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/siteSearchEngine$");

              /**
               * Creates a TargetSite.
               *
               * Create a request for the method "targetSites.create".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
               * <p> {@link
               * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. Parent resource name of TargetSite, such as `projects/{project}/locations/{location}/colle
             *        ctions/{collection}/dataStores/{data_store}/siteSearchEngine`.
               * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaTargetSite}
               * @since 1.13
               */
              protected Create(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaTargetSite content) {
                super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/siteSearchEngine$");
                }
              }

              @Override
              public Create set$Xgafv(java.lang.String $Xgafv) {
                return (Create) super.set$Xgafv($Xgafv);
              }

              @Override
              public Create setAccessToken(java.lang.String accessToken) {
                return (Create) super.setAccessToken(accessToken);
              }

              @Override
              public Create setAlt(java.lang.String alt) {
                return (Create) super.setAlt(alt);
              }

              @Override
              public Create setCallback(java.lang.String callback) {
                return (Create) super.setCallback(callback);
              }

              @Override
              public Create setFields(java.lang.String fields) {
                return (Create) super.setFields(fields);
              }

              @Override
              public Create setKey(java.lang.String key) {
                return (Create) super.setKey(key);
              }

              @Override
              public Create setOauthToken(java.lang.String oauthToken) {
                return (Create) super.setOauthToken(oauthToken);
              }

              @Override
              public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Create) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Create setQuotaUser(java.lang.String quotaUser) {
                return (Create) super.setQuotaUser(quotaUser);
              }

              @Override
              public Create setUploadType(java.lang.String uploadType) {
                return (Create) super.setUploadType(uploadType);
              }

              @Override
              public Create setUploadProtocol(java.lang.String uploadProtocol) {
                return (Create) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. Parent resource name of TargetSite, such as `projects/{project}/locations
               * /{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. Parent resource name of TargetSite, such as `projects/{project}/locations/{location}/coll
             ections/{collection}/dataStores/{data_store}/siteSearchEngine`.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. Parent resource name of TargetSite, such as `projects/{project}/locations
               * /{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`.
               */
              public Create setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/siteSearchEngine$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public Create set(String parameterName, Object value) {
                return (Create) super.set(parameterName, value);
              }
            }
            /**
             * Deletes a TargetSite.
             *
             * Create a request for the method "targetSites.delete".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param name Required. Full resource name of TargetSite, such as `projects/{project}/locations/{location}/collect
             *        ions/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}`. If
             *        the caller does not have permission to access the TargetSite, regardless of whether or not
             *        it exists, a PERMISSION_DENIED error is returned. If the requested TargetSite does not
             *        exist, a NOT_FOUND error is returned.
             * @return the request
             */
            public Delete delete(java.lang.String name) throws java.io.IOException {
              Delete result = new Delete(name);
              initialize(result);
              return result;
            }

            public class Delete extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/siteSearchEngine/targetSites/[^/]+$");

              /**
               * Deletes a TargetSite.
               *
               * Create a request for the method "targetSites.delete".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               * <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. Full resource name of TargetSite, such as `projects/{project}/locations/{location}/collect
             *        ions/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}`. If
             *        the caller does not have permission to access the TargetSite, regardless of whether or not
             *        it exists, a PERMISSION_DENIED error is returned. If the requested TargetSite does not
             *        exist, a NOT_FOUND error is returned.
               * @since 1.13
               */
              protected Delete(java.lang.String name) {
                super(DiscoveryEngine.this, "DELETE", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/siteSearchEngine/targetSites/[^/]+$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. Full resource name of TargetSite, such as `projects/{project}/locations/{
               * location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetS
               * ites/{target_site}`. If the caller does not have permission to access the
               * TargetSite, regardless of whether or not it exists, a PERMISSION_DENIED error is
               * returned. If the requested TargetSite does not exist, a NOT_FOUND error is
               * returned.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. Full resource name of TargetSite, such as `projects/{project}/locations/{location}/collec
             tions/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}`. If the
             caller does not have permission to access the TargetSite, regardless of whether or not it exists, a
             PERMISSION_DENIED error is returned. If the requested TargetSite does not exist, a NOT_FOUND error
             is returned.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. Full resource name of TargetSite, such as `projects/{project}/locations/{
               * location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetS
               * ites/{target_site}`. If the caller does not have permission to access the
               * TargetSite, regardless of whether or not it exists, a PERMISSION_DENIED error is
               * returned. If the requested TargetSite does not exist, a NOT_FOUND error is
               * returned.
               */
              public Delete setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/siteSearchEngine/targetSites/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * Gets a TargetSite.
             *
             * Create a request for the method "targetSites.get".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name Required. Full resource name of TargetSite, such as `projects/{project}/locations/{location}/collect
             *        ions/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}`. If
             *        the caller does not have permission to access the TargetSite, regardless of whether or not
             *        it exists, a PERMISSION_DENIED error is returned. If the requested TargetSite does not
             *        exist, a NOT_FOUND error is returned.
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaTargetSite> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/siteSearchEngine/targetSites/[^/]+$");

              /**
               * Gets a TargetSite.
               *
               * Create a request for the method "targetSites.get".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. Full resource name of TargetSite, such as `projects/{project}/locations/{location}/collect
             *        ions/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}`. If
             *        the caller does not have permission to access the TargetSite, regardless of whether or not
             *        it exists, a PERMISSION_DENIED error is returned. If the requested TargetSite does not
             *        exist, a NOT_FOUND error is returned.
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaTargetSite.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/siteSearchEngine/targetSites/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. Full resource name of TargetSite, such as `projects/{project}/locations/{
               * location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetS
               * ites/{target_site}`. If the caller does not have permission to access the
               * TargetSite, regardless of whether or not it exists, a PERMISSION_DENIED error is
               * returned. If the requested TargetSite does not exist, a NOT_FOUND error is
               * returned.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. Full resource name of TargetSite, such as `projects/{project}/locations/{location}/collec
             tions/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}`. If the
             caller does not have permission to access the TargetSite, regardless of whether or not it exists, a
             PERMISSION_DENIED error is returned. If the requested TargetSite does not exist, a NOT_FOUND error
             is returned.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. Full resource name of TargetSite, such as `projects/{project}/locations/{
               * location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetS
               * ites/{target_site}`. If the caller does not have permission to access the
               * TargetSite, regardless of whether or not it exists, a PERMISSION_DENIED error is
               * returned. If the requested TargetSite does not exist, a NOT_FOUND error is
               * returned.
               */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/siteSearchEngine/targetSites/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Gets a list of TargetSites.
             *
             * Create a request for the method "targetSites.list".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The parent site search engine resource name, such as `projects/{project}/locations/{locati
             *        on}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`. If the caller does
             *        not have permission to list TargetSites under this site search engine, regardless of
             *        whether or not this branch exists, a PERMISSION_DENIED error is returned.
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaListTargetSitesResponse> {

              private static final String REST_PATH = "v1alpha/{+parent}/targetSites";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/siteSearchEngine$");

              /**
               * Gets a list of TargetSites.
               *
               * Create a request for the method "targetSites.list".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The parent site search engine resource name, such as `projects/{project}/locations/{locati
             *        on}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`. If the caller does
             *        not have permission to list TargetSites under this site search engine, regardless of
             *        whether or not this branch exists, a PERMISSION_DENIED error is returned.
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaListTargetSitesResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/siteSearchEngine$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The parent site search engine resource name, such as `projects/{project}/
               * locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEng
               * ine`. If the caller does not have permission to list TargetSites under this site
               * search engine, regardless of whether or not this branch exists, a PERMISSION_DENIED
               * error is returned.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The parent site search engine resource name, such as `projects/{project}/locations/{locat
             ion}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`. If the caller does not
             have permission to list TargetSites under this site search engine, regardless of whether or not
             this branch exists, a PERMISSION_DENIED error is returned.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The parent site search engine resource name, such as `projects/{project}/
               * locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEng
               * ine`. If the caller does not have permission to list TargetSites under this site
               * search engine, regardless of whether or not this branch exists, a PERMISSION_DENIED
               * error is returned.
               */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/siteSearchEngine$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Requested page size. Server may return fewer items than requested. If unspecified,
               * server will pick an appropriate default. The maximum value is 1000; values above
               * 1000 will be coerced to 1000. If this field is negative, an INVALID_ARGUMENT error
               * is returned.
               */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** Requested page size. Server may return fewer items than requested. If unspecified, server will pick
             an appropriate default. The maximum value is 1000; values above 1000 will be coerced to 1000. If
             this field is negative, an INVALID_ARGUMENT error is returned.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /**
               * Requested page size. Server may return fewer items than requested. If unspecified,
               * server will pick an appropriate default. The maximum value is 1000; values above
               * 1000 will be coerced to 1000. If this field is negative, an INVALID_ARGUMENT error
               * is returned.
               */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /**
               * A page token, received from a previous `ListTargetSites` call. Provide this to
               * retrieve the subsequent page. When paginating, all other parameters provided to
               * `ListTargetSites` must match the call that provided the page token.
               */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** A page token, received from a previous `ListTargetSites` call. Provide this to retrieve the
             subsequent page. When paginating, all other parameters provided to `ListTargetSites` must match the
             call that provided the page token.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /**
               * A page token, received from a previous `ListTargetSites` call. Provide this to
               * retrieve the subsequent page. When paginating, all other parameters provided to
               * `ListTargetSites` must match the call that provided the page token.
               */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }
            /**
             * Updates a TargetSite.
             *
             * Create a request for the method "targetSites.patch".
             *
             * This request holds the parameters needed by the discoveryengine server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             *
             * @param name Output only. The fully qualified resource name of the target site. `projects/{project}/locations/{lo
             *        cation}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{tar
             *        get_site}` The `target_site_id` is system-generated.
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaTargetSite}
             * @return the request
             */
            public Patch patch(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaTargetSite content) throws java.io.IOException {
              Patch result = new Patch(name, content);
              initialize(result);
              return result;
            }

            public class Patch extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/siteSearchEngine/targetSites/[^/]+$");

              /**
               * Updates a TargetSite.
               *
               * Create a request for the method "targetSites.patch".
               *
               * This request holds the parameters needed by the the discoveryengine server.  After setting any
               * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
               * <p> {@link
               * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Output only. The fully qualified resource name of the target site. `projects/{project}/locations/{lo
             *        cation}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{tar
             *        get_site}` The `target_site_id` is system-generated.
               * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaTargetSite}
               * @since 1.13
               */
              protected Patch(java.lang.String name, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaTargetSite content) {
                super(DiscoveryEngine.this, "PATCH", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/siteSearchEngine/targetSites/[^/]+$");
                }
              }

              @Override
              public Patch set$Xgafv(java.lang.String $Xgafv) {
                return (Patch) super.set$Xgafv($Xgafv);
              }

              @Override
              public Patch setAccessToken(java.lang.String accessToken) {
                return (Patch) super.setAccessToken(accessToken);
              }

              @Override
              public Patch setAlt(java.lang.String alt) {
                return (Patch) super.setAlt(alt);
              }

              @Override
              public Patch setCallback(java.lang.String callback) {
                return (Patch) super.setCallback(callback);
              }

              @Override
              public Patch setFields(java.lang.String fields) {
                return (Patch) super.setFields(fields);
              }

              @Override
              public Patch setKey(java.lang.String key) {
                return (Patch) super.setKey(key);
              }

              @Override
              public Patch setOauthToken(java.lang.String oauthToken) {
                return (Patch) super.setOauthToken(oauthToken);
              }

              @Override
              public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Patch) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Patch setQuotaUser(java.lang.String quotaUser) {
                return (Patch) super.setQuotaUser(quotaUser);
              }

              @Override
              public Patch setUploadType(java.lang.String uploadType) {
                return (Patch) super.setUploadType(uploadType);
              }

              @Override
              public Patch setUploadProtocol(java.lang.String uploadProtocol) {
                return (Patch) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Output only. The fully qualified resource name of the target site. `projects/{proje
               * ct}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearc
               * hEngine/targetSites/{target_site}` The `target_site_id` is system-generated.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Output only. The fully qualified resource name of the target site. `projects/{project}/locations/{l
             ocation}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site
             }` The `target_site_id` is system-generated.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Output only. The fully qualified resource name of the target site. `projects/{proje
               * ct}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearc
               * hEngine/targetSites/{target_site}` The `target_site_id` is system-generated.
               */
              public Patch setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/siteSearchEngine/targetSites/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Patch set(String parameterName, Object value) {
                return (Patch) super.set(parameterName, value);
              }
            }

          }
        }
        /**
         * An accessor for creating requests from the SuggestionDenyListEntries collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
         *   {@code DiscoveryEngine.SuggestionDenyListEntries.List request = discoveryengine.suggestionDenyListEntries().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public SuggestionDenyListEntries suggestionDenyListEntries() {
          return new SuggestionDenyListEntries();
        }

        /**
         * The "suggestionDenyListEntries" collection of methods.
         */
        public class SuggestionDenyListEntries {

          /**
           * Imports all SuggestionDenyListEntry for a DataStore.
           *
           * Create a request for the method "suggestionDenyListEntries.import".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link DiscoveryEngineImport#execute()} method to invoke the remote
           * operation.
           *
           * @param parent Required. The parent data store resource name for which to import denylist entries. Follows pattern
           *        projects/locations/collections/dataStores.
           * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesRequest}
           * @return the request
           */
          public DiscoveryEngineImport discoveryengineImport(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesRequest content) throws java.io.IOException {
            DiscoveryEngineImport result = new DiscoveryEngineImport(parent, content);
            initialize(result);
            return result;
          }

          public class DiscoveryEngineImport extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1alpha/{+parent}/suggestionDenyListEntries:import";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");

            /**
             * Imports all SuggestionDenyListEntry for a DataStore.
             *
             * Create a request for the method "suggestionDenyListEntries.import".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link DiscoveryEngineImport#execute()} method to invoke the
             * remote operation. <p> {@link DiscoveryEngineImport#initialize(com.google.api.client.googleapis.
             * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
             * after invoking the constructor. </p>
             *
             * @param parent Required. The parent data store resource name for which to import denylist entries. Follows pattern
           *        projects/locations/collections/dataStores.
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesRequest}
             * @since 1.13
             */
            protected DiscoveryEngineImport(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesRequest content) {
              super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");
              }
            }

            @Override
            public DiscoveryEngineImport set$Xgafv(java.lang.String $Xgafv) {
              return (DiscoveryEngineImport) super.set$Xgafv($Xgafv);
            }

            @Override
            public DiscoveryEngineImport setAccessToken(java.lang.String accessToken) {
              return (DiscoveryEngineImport) super.setAccessToken(accessToken);
            }

            @Override
            public DiscoveryEngineImport setAlt(java.lang.String alt) {
              return (DiscoveryEngineImport) super.setAlt(alt);
            }

            @Override
            public DiscoveryEngineImport setCallback(java.lang.String callback) {
              return (DiscoveryEngineImport) super.setCallback(callback);
            }

            @Override
            public DiscoveryEngineImport setFields(java.lang.String fields) {
              return (DiscoveryEngineImport) super.setFields(fields);
            }

            @Override
            public DiscoveryEngineImport setKey(java.lang.String key) {
              return (DiscoveryEngineImport) super.setKey(key);
            }

            @Override
            public DiscoveryEngineImport setOauthToken(java.lang.String oauthToken) {
              return (DiscoveryEngineImport) super.setOauthToken(oauthToken);
            }

            @Override
            public DiscoveryEngineImport setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (DiscoveryEngineImport) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public DiscoveryEngineImport setQuotaUser(java.lang.String quotaUser) {
              return (DiscoveryEngineImport) super.setQuotaUser(quotaUser);
            }

            @Override
            public DiscoveryEngineImport setUploadType(java.lang.String uploadType) {
              return (DiscoveryEngineImport) super.setUploadType(uploadType);
            }

            @Override
            public DiscoveryEngineImport setUploadProtocol(java.lang.String uploadProtocol) {
              return (DiscoveryEngineImport) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The parent data store resource name for which to import denylist entries.
             * Follows pattern projects/locations/collections/dataStores.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The parent data store resource name for which to import denylist entries. Follows pattern
           projects/locations/collections/dataStores.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The parent data store resource name for which to import denylist entries.
             * Follows pattern projects/locations/collections/dataStores.
             */
            public DiscoveryEngineImport setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public DiscoveryEngineImport set(String parameterName, Object value) {
              return (DiscoveryEngineImport) super.set(parameterName, value);
            }
          }
          /**
           * Permanently deletes all SuggestionDenyListEntry for a DataStore.
           *
           * Create a request for the method "suggestionDenyListEntries.purge".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link Purge#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The parent data store resource name for which to import denylist entries. Follows pattern
           *        projects/locations/collections/dataStores.
           * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaPurgeSuggestionDenyListEntriesRequest}
           * @return the request
           */
          public Purge purge(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaPurgeSuggestionDenyListEntriesRequest content) throws java.io.IOException {
            Purge result = new Purge(parent, content);
            initialize(result);
            return result;
          }

          public class Purge extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1alpha/{+parent}/suggestionDenyListEntries:purge";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/.*$");

            /**
             * Permanently deletes all SuggestionDenyListEntry for a DataStore.
             *
             * Create a request for the method "suggestionDenyListEntries.purge".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link Purge#execute()} method to invoke the remote operation.
             * <p> {@link
             * Purge#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The parent data store resource name for which to import denylist entries. Follows pattern
           *        projects/locations/collections/dataStores.
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaPurgeSuggestionDenyListEntriesRequest}
             * @since 1.13
             */
            protected Purge(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaPurgeSuggestionDenyListEntriesRequest content) {
              super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/.*$");
              }
            }

            @Override
            public Purge set$Xgafv(java.lang.String $Xgafv) {
              return (Purge) super.set$Xgafv($Xgafv);
            }

            @Override
            public Purge setAccessToken(java.lang.String accessToken) {
              return (Purge) super.setAccessToken(accessToken);
            }

            @Override
            public Purge setAlt(java.lang.String alt) {
              return (Purge) super.setAlt(alt);
            }

            @Override
            public Purge setCallback(java.lang.String callback) {
              return (Purge) super.setCallback(callback);
            }

            @Override
            public Purge setFields(java.lang.String fields) {
              return (Purge) super.setFields(fields);
            }

            @Override
            public Purge setKey(java.lang.String key) {
              return (Purge) super.setKey(key);
            }

            @Override
            public Purge setOauthToken(java.lang.String oauthToken) {
              return (Purge) super.setOauthToken(oauthToken);
            }

            @Override
            public Purge setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Purge) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Purge setQuotaUser(java.lang.String quotaUser) {
              return (Purge) super.setQuotaUser(quotaUser);
            }

            @Override
            public Purge setUploadType(java.lang.String uploadType) {
              return (Purge) super.setUploadType(uploadType);
            }

            @Override
            public Purge setUploadProtocol(java.lang.String uploadProtocol) {
              return (Purge) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The parent data store resource name for which to import denylist entries.
             * Follows pattern projects/locations/collections/dataStores.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The parent data store resource name for which to import denylist entries. Follows pattern
           projects/locations/collections/dataStores.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The parent data store resource name for which to import denylist entries.
             * Follows pattern projects/locations/collections/dataStores.
             */
            public Purge setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/.*$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Purge set(String parameterName, Object value) {
              return (Purge) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the UserEvents collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
         *   {@code DiscoveryEngine.UserEvents.List request = discoveryengine.userEvents().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public UserEvents userEvents() {
          return new UserEvents();
        }

        /**
         * The "userEvents" collection of methods.
         */
        public class UserEvents {

          /**
           * Writes a single user event from the browser. This uses a GET request to due to browser
           * restriction of POST-ing to a third-party domain. This method is used only by the Discovery Engine
           * API JavaScript pixel and Google Tag Manager. Users should not call this method directly.
           *
           * Create a request for the method "userEvents.collect".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link Collect#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The parent DataStore resource name, such as
           *        `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`
           *        .
           * @return the request
           */
          public Collect collect(java.lang.String parent) throws java.io.IOException {
            Collect result = new Collect(parent);
            initialize(result);
            return result;
          }

          public class Collect extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleApiHttpBody> {

            private static final String REST_PATH = "v1alpha/{+parent}/userEvents:collect";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");

            /**
             * Writes a single user event from the browser. This uses a GET request to due to browser
             * restriction of POST-ing to a third-party domain. This method is used only by the Discovery
             * Engine API JavaScript pixel and Google Tag Manager. Users should not call this method directly.
             *
             * Create a request for the method "userEvents.collect".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link Collect#execute()} method to invoke the remote operation.
             * <p> {@link
             * Collect#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The parent DataStore resource name, such as
           *        `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`
           *        .
             * @since 1.13
             */
            protected Collect(java.lang.String parent) {
              super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleApiHttpBody.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Collect set$Xgafv(java.lang.String $Xgafv) {
              return (Collect) super.set$Xgafv($Xgafv);
            }

            @Override
            public Collect setAccessToken(java.lang.String accessToken) {
              return (Collect) super.setAccessToken(accessToken);
            }

            @Override
            public Collect setAlt(java.lang.String alt) {
              return (Collect) super.setAlt(alt);
            }

            @Override
            public Collect setCallback(java.lang.String callback) {
              return (Collect) super.setCallback(callback);
            }

            @Override
            public Collect setFields(java.lang.String fields) {
              return (Collect) super.setFields(fields);
            }

            @Override
            public Collect setKey(java.lang.String key) {
              return (Collect) super.setKey(key);
            }

            @Override
            public Collect setOauthToken(java.lang.String oauthToken) {
              return (Collect) super.setOauthToken(oauthToken);
            }

            @Override
            public Collect setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Collect) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Collect setQuotaUser(java.lang.String quotaUser) {
              return (Collect) super.setQuotaUser(quotaUser);
            }

            @Override
            public Collect setUploadType(java.lang.String uploadType) {
              return (Collect) super.setUploadType(uploadType);
            }

            @Override
            public Collect setUploadProtocol(java.lang.String uploadProtocol) {
              return (Collect) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The parent DataStore resource name, such as `projects/{project}/locations/{
             * location}/collections/{collection}/dataStores/{data_store}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The parent DataStore resource name, such as
           `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The parent DataStore resource name, such as `projects/{project}/locations/{
             * location}/collections/{collection}/dataStores/{data_store}`.
             */
            public Collect setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * The event timestamp in milliseconds. This prevents browser caching of otherwise
             * identical get requests. The name is abbreviated to reduce the payload bytes.
             */
            @com.google.api.client.util.Key
            private java.lang.Long ets;

            /** The event timestamp in milliseconds. This prevents browser caching of otherwise identical get
           requests. The name is abbreviated to reduce the payload bytes.
             */
            public java.lang.Long getEts() {
              return ets;
            }

            /**
             * The event timestamp in milliseconds. This prevents browser caching of otherwise
             * identical get requests. The name is abbreviated to reduce the payload bytes.
             */
            public Collect setEts(java.lang.Long ets) {
              this.ets = ets;
              return this;
            }

            /**
             * The URL including cgi-parameters but excluding the hash fragment with a length limit
             * of 5,000 characters. This is often more useful than the referer URL, because many
             * browsers only send the domain for third-party requests.
             */
            @com.google.api.client.util.Key
            private java.lang.String uri;

            /** The URL including cgi-parameters but excluding the hash fragment with a length limit of 5,000
           characters. This is often more useful than the referer URL, because many browsers only send the
           domain for third-party requests.
             */
            public java.lang.String getUri() {
              return uri;
            }

            /**
             * The URL including cgi-parameters but excluding the hash fragment with a length limit
             * of 5,000 characters. This is often more useful than the referer URL, because many
             * browsers only send the domain for third-party requests.
             */
            public Collect setUri(java.lang.String uri) {
              this.uri = uri;
              return this;
            }

            /**
             * Required. URL encoded UserEvent proto with a length limit of 2,000,000 characters.
             */
            @com.google.api.client.util.Key
            private java.lang.String userEvent;

            /** Required. URL encoded UserEvent proto with a length limit of 2,000,000 characters.
             */
            public java.lang.String getUserEvent() {
              return userEvent;
            }

            /**
             * Required. URL encoded UserEvent proto with a length limit of 2,000,000 characters.
             */
            public Collect setUserEvent(java.lang.String userEvent) {
              this.userEvent = userEvent;
              return this;
            }

            @Override
            public Collect set(String parameterName, Object value) {
              return (Collect) super.set(parameterName, value);
            }
          }
          /**
           * Bulk import of User events. Request processing might be synchronous. Events that already exist
           * are skipped. Use this method for backfilling historical user events. Operation.response is of
           * type ImportResponse. Note that it is possible for a subset of the items to be successfully
           * inserted. Operation.metadata is of type ImportMetadata.
           *
           * Create a request for the method "userEvents.import".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link DiscoveryEngineImport#execute()} method to invoke the remote
           * operation.
           *
           * @param parent Required. Parent DataStore resource name, of the form
           *        `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`
           * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaImportUserEventsRequest}
           * @return the request
           */
          public DiscoveryEngineImport discoveryengineImport(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaImportUserEventsRequest content) throws java.io.IOException {
            DiscoveryEngineImport result = new DiscoveryEngineImport(parent, content);
            initialize(result);
            return result;
          }

          public class DiscoveryEngineImport extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1alpha/{+parent}/userEvents:import";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");

            /**
             * Bulk import of User events. Request processing might be synchronous. Events that already exist
             * are skipped. Use this method for backfilling historical user events. Operation.response is of
             * type ImportResponse. Note that it is possible for a subset of the items to be successfully
             * inserted. Operation.metadata is of type ImportMetadata.
             *
             * Create a request for the method "userEvents.import".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link DiscoveryEngineImport#execute()} method to invoke the
             * remote operation. <p> {@link DiscoveryEngineImport#initialize(com.google.api.client.googleapis.
             * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
             * after invoking the constructor. </p>
             *
             * @param parent Required. Parent DataStore resource name, of the form
           *        `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaImportUserEventsRequest}
             * @since 1.13
             */
            protected DiscoveryEngineImport(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaImportUserEventsRequest content) {
              super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");
              }
            }

            @Override
            public DiscoveryEngineImport set$Xgafv(java.lang.String $Xgafv) {
              return (DiscoveryEngineImport) super.set$Xgafv($Xgafv);
            }

            @Override
            public DiscoveryEngineImport setAccessToken(java.lang.String accessToken) {
              return (DiscoveryEngineImport) super.setAccessToken(accessToken);
            }

            @Override
            public DiscoveryEngineImport setAlt(java.lang.String alt) {
              return (DiscoveryEngineImport) super.setAlt(alt);
            }

            @Override
            public DiscoveryEngineImport setCallback(java.lang.String callback) {
              return (DiscoveryEngineImport) super.setCallback(callback);
            }

            @Override
            public DiscoveryEngineImport setFields(java.lang.String fields) {
              return (DiscoveryEngineImport) super.setFields(fields);
            }

            @Override
            public DiscoveryEngineImport setKey(java.lang.String key) {
              return (DiscoveryEngineImport) super.setKey(key);
            }

            @Override
            public DiscoveryEngineImport setOauthToken(java.lang.String oauthToken) {
              return (DiscoveryEngineImport) super.setOauthToken(oauthToken);
            }

            @Override
            public DiscoveryEngineImport setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (DiscoveryEngineImport) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public DiscoveryEngineImport setQuotaUser(java.lang.String quotaUser) {
              return (DiscoveryEngineImport) super.setQuotaUser(quotaUser);
            }

            @Override
            public DiscoveryEngineImport setUploadType(java.lang.String uploadType) {
              return (DiscoveryEngineImport) super.setUploadType(uploadType);
            }

            @Override
            public DiscoveryEngineImport setUploadProtocol(java.lang.String uploadProtocol) {
              return (DiscoveryEngineImport) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Parent DataStore resource name, of the form `projects/{project}/locations/{
             * location}/collections/{collection}/dataStores/{data_store}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent DataStore resource name, of the form
           `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Parent DataStore resource name, of the form `projects/{project}/locations/{
             * location}/collections/{collection}/dataStores/{data_store}`
             */
            public DiscoveryEngineImport setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public DiscoveryEngineImport set(String parameterName, Object value) {
              return (DiscoveryEngineImport) super.set(parameterName, value);
            }
          }
          /**
           * Deletes permanently all user events specified by the filter provided. Depending on the number of
           * events specified by the filter, this operation could take hours or days to complete. To test a
           * filter, use the list command first.
           *
           * Create a request for the method "userEvents.purge".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link Purge#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The resource name of the catalog under which the events are created. The format is
           *        `projects/${projectId}/locations/global/collections/{$collectionId}/dataStores/${dataStore
           *        Id}`
           * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaPurgeUserEventsRequest}
           * @return the request
           */
          public Purge purge(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaPurgeUserEventsRequest content) throws java.io.IOException {
            Purge result = new Purge(parent, content);
            initialize(result);
            return result;
          }

          public class Purge extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1alpha/{+parent}/userEvents:purge";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");

            /**
             * Deletes permanently all user events specified by the filter provided. Depending on the number
             * of events specified by the filter, this operation could take hours or days to complete. To test
             * a filter, use the list command first.
             *
             * Create a request for the method "userEvents.purge".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link Purge#execute()} method to invoke the remote operation.
             * <p> {@link
             * Purge#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The resource name of the catalog under which the events are created. The format is
           *        `projects/${projectId}/locations/global/collections/{$collectionId}/dataStores/${dataStore
           *        Id}`
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaPurgeUserEventsRequest}
             * @since 1.13
             */
            protected Purge(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaPurgeUserEventsRequest content) {
              super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");
              }
            }

            @Override
            public Purge set$Xgafv(java.lang.String $Xgafv) {
              return (Purge) super.set$Xgafv($Xgafv);
            }

            @Override
            public Purge setAccessToken(java.lang.String accessToken) {
              return (Purge) super.setAccessToken(accessToken);
            }

            @Override
            public Purge setAlt(java.lang.String alt) {
              return (Purge) super.setAlt(alt);
            }

            @Override
            public Purge setCallback(java.lang.String callback) {
              return (Purge) super.setCallback(callback);
            }

            @Override
            public Purge setFields(java.lang.String fields) {
              return (Purge) super.setFields(fields);
            }

            @Override
            public Purge setKey(java.lang.String key) {
              return (Purge) super.setKey(key);
            }

            @Override
            public Purge setOauthToken(java.lang.String oauthToken) {
              return (Purge) super.setOauthToken(oauthToken);
            }

            @Override
            public Purge setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Purge) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Purge setQuotaUser(java.lang.String quotaUser) {
              return (Purge) super.setQuotaUser(quotaUser);
            }

            @Override
            public Purge setUploadType(java.lang.String uploadType) {
              return (Purge) super.setUploadType(uploadType);
            }

            @Override
            public Purge setUploadProtocol(java.lang.String uploadProtocol) {
              return (Purge) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the catalog under which the events are created. The
             * format is `projects/${projectId}/locations/global/collections/{$collectionId}/dataSto
             * res/${dataStoreId}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The resource name of the catalog under which the events are created. The format is
           `projects/${projectId}/locations/global/collections/{$collectionId}/dataStores/${dataStoreId}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The resource name of the catalog under which the events are created. The
             * format is `projects/${projectId}/locations/global/collections/{$collectionId}/dataSto
             * res/${dataStoreId}`
             */
            public Purge setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Purge set(String parameterName, Object value) {
              return (Purge) super.set(parameterName, value);
            }
          }
          /**
           * Writes a single user event.
           *
           * Create a request for the method "userEvents.write".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link Write#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The parent DataStore resource name, such as
           *        `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`
           *        .
           * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaUserEvent}
           * @return the request
           */
          public Write write(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaUserEvent content) throws java.io.IOException {
            Write result = new Write(parent, content);
            initialize(result);
            return result;
          }

          public class Write extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaUserEvent> {

            private static final String REST_PATH = "v1alpha/{+parent}/userEvents:write";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");

            /**
             * Writes a single user event.
             *
             * Create a request for the method "userEvents.write".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link Write#execute()} method to invoke the remote operation.
             * <p> {@link
             * Write#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The parent DataStore resource name, such as
           *        `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`
           *        .
             * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaUserEvent}
             * @since 1.13
             */
            protected Write(java.lang.String parent, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaUserEvent content) {
              super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaUserEvent.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");
              }
            }

            @Override
            public Write set$Xgafv(java.lang.String $Xgafv) {
              return (Write) super.set$Xgafv($Xgafv);
            }

            @Override
            public Write setAccessToken(java.lang.String accessToken) {
              return (Write) super.setAccessToken(accessToken);
            }

            @Override
            public Write setAlt(java.lang.String alt) {
              return (Write) super.setAlt(alt);
            }

            @Override
            public Write setCallback(java.lang.String callback) {
              return (Write) super.setCallback(callback);
            }

            @Override
            public Write setFields(java.lang.String fields) {
              return (Write) super.setFields(fields);
            }

            @Override
            public Write setKey(java.lang.String key) {
              return (Write) super.setKey(key);
            }

            @Override
            public Write setOauthToken(java.lang.String oauthToken) {
              return (Write) super.setOauthToken(oauthToken);
            }

            @Override
            public Write setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Write) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Write setQuotaUser(java.lang.String quotaUser) {
              return (Write) super.setQuotaUser(quotaUser);
            }

            @Override
            public Write setUploadType(java.lang.String uploadType) {
              return (Write) super.setUploadType(uploadType);
            }

            @Override
            public Write setUploadProtocol(java.lang.String uploadProtocol) {
              return (Write) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The parent DataStore resource name, such as `projects/{project}/locations/{
             * location}/collections/{collection}/dataStores/{data_store}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The parent DataStore resource name, such as
           `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The parent DataStore resource name, such as `projects/{project}/locations/{
             * location}/collections/{collection}/dataStores/{data_store}`.
             */
            public Write setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Write set(String parameterName, Object value) {
              return (Write) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the Evaluations collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
       *   {@code DiscoveryEngine.Evaluations.List request = discoveryengine.evaluations().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Evaluations evaluations() {
        return new Evaluations();
      }

      /**
       * The "evaluations" collection of methods.
       */
      public class Evaluations {

        /**
         * An accessor for creating requests from the Operations collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
         *   {@code DiscoveryEngine.Operations.List request = discoveryengine.operations().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Operations operations() {
          return new Operations();
        }

        /**
         * The "operations" collection of methods.
         */
        public class Operations {

          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the discoveryengine server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/evaluations/[^/]+/operations/[^/]+$");

            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the the discoveryengine server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/evaluations/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/evaluations/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the GroundingConfigs collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
       *   {@code DiscoveryEngine.GroundingConfigs.List request = discoveryengine.groundingConfigs().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public GroundingConfigs groundingConfigs() {
        return new GroundingConfigs();
      }

      /**
       * The "groundingConfigs" collection of methods.
       */
      public class GroundingConfigs {

        /**
         * Performs a grounding check.
         *
         * Create a request for the method "groundingConfigs.check".
         *
         * This request holds the parameters needed by the discoveryengine server.  After setting any
         * optional parameters, call the {@link Check#execute()} method to invoke the remote operation.
         *
         * @param groundingConfig Required. The resource name of the grounding config, such as
         *        `projects/locations/global/groundingConfigs/default_grounding_config`.
         * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaCheckGroundingRequest}
         * @return the request
         */
        public Check check(java.lang.String groundingConfig, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaCheckGroundingRequest content) throws java.io.IOException {
          Check result = new Check(groundingConfig, content);
          initialize(result);
          return result;
        }

        public class Check extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaCheckGroundingResponse> {

          private static final String REST_PATH = "v1alpha/{+groundingConfig}:check";

          private final java.util.regex.Pattern GROUNDING_CONFIG_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/groundingConfigs/[^/]+$");

          /**
           * Performs a grounding check.
           *
           * Create a request for the method "groundingConfigs.check".
           *
           * This request holds the parameters needed by the the discoveryengine server.  After setting any
           * optional parameters, call the {@link Check#execute()} method to invoke the remote operation.
           * <p> {@link
           * Check#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param groundingConfig Required. The resource name of the grounding config, such as
         *        `projects/locations/global/groundingConfigs/default_grounding_config`.
           * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaCheckGroundingRequest}
           * @since 1.13
           */
          protected Check(java.lang.String groundingConfig, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaCheckGroundingRequest content) {
            super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaCheckGroundingResponse.class);
            this.groundingConfig = com.google.api.client.util.Preconditions.checkNotNull(groundingConfig, "Required parameter groundingConfig must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(GROUNDING_CONFIG_PATTERN.matcher(groundingConfig).matches(),
                  "Parameter groundingConfig must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/groundingConfigs/[^/]+$");
            }
          }

          @Override
          public Check set$Xgafv(java.lang.String $Xgafv) {
            return (Check) super.set$Xgafv($Xgafv);
          }

          @Override
          public Check setAccessToken(java.lang.String accessToken) {
            return (Check) super.setAccessToken(accessToken);
          }

          @Override
          public Check setAlt(java.lang.String alt) {
            return (Check) super.setAlt(alt);
          }

          @Override
          public Check setCallback(java.lang.String callback) {
            return (Check) super.setCallback(callback);
          }

          @Override
          public Check setFields(java.lang.String fields) {
            return (Check) super.setFields(fields);
          }

          @Override
          public Check setKey(java.lang.String key) {
            return (Check) super.setKey(key);
          }

          @Override
          public Check setOauthToken(java.lang.String oauthToken) {
            return (Check) super.setOauthToken(oauthToken);
          }

          @Override
          public Check setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Check) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Check setQuotaUser(java.lang.String quotaUser) {
            return (Check) super.setQuotaUser(quotaUser);
          }

          @Override
          public Check setUploadType(java.lang.String uploadType) {
            return (Check) super.setUploadType(uploadType);
          }

          @Override
          public Check setUploadProtocol(java.lang.String uploadProtocol) {
            return (Check) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the grounding config, such as
           * `projects/locations/global/groundingConfigs/default_grounding_config`.
           */
          @com.google.api.client.util.Key
          private java.lang.String groundingConfig;

          /** Required. The resource name of the grounding config, such as
         `projects/locations/global/groundingConfigs/default_grounding_config`.
           */
          public java.lang.String getGroundingConfig() {
            return groundingConfig;
          }

          /**
           * Required. The resource name of the grounding config, such as
           * `projects/locations/global/groundingConfigs/default_grounding_config`.
           */
          public Check setGroundingConfig(java.lang.String groundingConfig) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(GROUNDING_CONFIG_PATTERN.matcher(groundingConfig).matches(),
                  "Parameter groundingConfig must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/groundingConfigs/[^/]+$");
            }
            this.groundingConfig = groundingConfig;
            return this;
          }

          @Override
          public Check set(String parameterName, Object value) {
            return (Check) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Operations collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
       *   {@code DiscoveryEngine.Operations.List request = discoveryengine.operations().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Operations operations() {
        return new Operations();
      }

      /**
       * The "operations" collection of methods.
       */
      public class Operations {

        /**
         * Gets the latest state of a long-running operation. Clients can use this method to poll the
         * operation result at intervals as recommended by the API service.
         *
         * Create a request for the method "operations.get".
         *
         * This request holds the parameters needed by the discoveryengine server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1alpha/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the the discoveryengine server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists operations that match the specified filter in the request. If the server doesn't support
         * this method, it returns `UNIMPLEMENTED`.
         *
         * Create a request for the method "operations.list".
         *
         * This request holds the parameters needed by the discoveryengine server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation's parent resource.
         * @return the request
         */
        public List list(java.lang.String name) throws java.io.IOException {
          List result = new List(name);
          initialize(result);
          return result;
        }

        public class List extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningListOperationsResponse> {

          private static final String REST_PATH = "v1alpha/{+name}/operations";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the the discoveryengine server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation's parent resource.
           * @since 1.13
           */
          protected List(java.lang.String name) {
            super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningListOperationsResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation's parent resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation's parent resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation's parent resource. */
          public List setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** The standard list filter. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** The standard list filter.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** The standard list filter. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** The standard list page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The standard list page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The standard list page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The standard list page token. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The standard list page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The standard list page token. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the RankingConfigs collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
       *   {@code DiscoveryEngine.RankingConfigs.List request = discoveryengine.rankingConfigs().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public RankingConfigs rankingConfigs() {
        return new RankingConfigs();
      }

      /**
       * The "rankingConfigs" collection of methods.
       */
      public class RankingConfigs {

        /**
         * Ranks a list of text records based on the given input query.
         *
         * Create a request for the method "rankingConfigs.rank".
         *
         * This request holds the parameters needed by the discoveryengine server.  After setting any
         * optional parameters, call the {@link Rank#execute()} method to invoke the remote operation.
         *
         * @param rankingConfig Required. The resource name of the rank service config, such as
         *        `projects/{project_num}/locations/{location_id}/rankingConfigs/default_ranking_config`.
         * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaRankRequest}
         * @return the request
         */
        public Rank rank(java.lang.String rankingConfig, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaRankRequest content) throws java.io.IOException {
          Rank result = new Rank(rankingConfig, content);
          initialize(result);
          return result;
        }

        public class Rank extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaRankResponse> {

          private static final String REST_PATH = "v1alpha/{+rankingConfig}:rank";

          private final java.util.regex.Pattern RANKING_CONFIG_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/rankingConfigs/[^/]+$");

          /**
           * Ranks a list of text records based on the given input query.
           *
           * Create a request for the method "rankingConfigs.rank".
           *
           * This request holds the parameters needed by the the discoveryengine server.  After setting any
           * optional parameters, call the {@link Rank#execute()} method to invoke the remote operation. <p>
           * {@link Rank#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param rankingConfig Required. The resource name of the rank service config, such as
         *        `projects/{project_num}/locations/{location_id}/rankingConfigs/default_ranking_config`.
           * @param content the {@link com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaRankRequest}
           * @since 1.13
           */
          protected Rank(java.lang.String rankingConfig, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaRankRequest content) {
            super(DiscoveryEngine.this, "POST", REST_PATH, content, com.google.api.services.discoveryengine.v1alpha.model.GoogleCloudDiscoveryengineV1alphaRankResponse.class);
            this.rankingConfig = com.google.api.client.util.Preconditions.checkNotNull(rankingConfig, "Required parameter rankingConfig must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RANKING_CONFIG_PATTERN.matcher(rankingConfig).matches(),
                  "Parameter rankingConfig must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/rankingConfigs/[^/]+$");
            }
          }

          @Override
          public Rank set$Xgafv(java.lang.String $Xgafv) {
            return (Rank) super.set$Xgafv($Xgafv);
          }

          @Override
          public Rank setAccessToken(java.lang.String accessToken) {
            return (Rank) super.setAccessToken(accessToken);
          }

          @Override
          public Rank setAlt(java.lang.String alt) {
            return (Rank) super.setAlt(alt);
          }

          @Override
          public Rank setCallback(java.lang.String callback) {
            return (Rank) super.setCallback(callback);
          }

          @Override
          public Rank setFields(java.lang.String fields) {
            return (Rank) super.setFields(fields);
          }

          @Override
          public Rank setKey(java.lang.String key) {
            return (Rank) super.setKey(key);
          }

          @Override
          public Rank setOauthToken(java.lang.String oauthToken) {
            return (Rank) super.setOauthToken(oauthToken);
          }

          @Override
          public Rank setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Rank) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Rank setQuotaUser(java.lang.String quotaUser) {
            return (Rank) super.setQuotaUser(quotaUser);
          }

          @Override
          public Rank setUploadType(java.lang.String uploadType) {
            return (Rank) super.setUploadType(uploadType);
          }

          @Override
          public Rank setUploadProtocol(java.lang.String uploadProtocol) {
            return (Rank) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the rank service config, such as
           * `projects/{project_num}/locations/{location_id}/rankingConfigs/default_ranking_config`.
           */
          @com.google.api.client.util.Key
          private java.lang.String rankingConfig;

          /** Required. The resource name of the rank service config, such as
         `projects/{project_num}/locations/{location_id}/rankingConfigs/default_ranking_config`.
           */
          public java.lang.String getRankingConfig() {
            return rankingConfig;
          }

          /**
           * Required. The resource name of the rank service config, such as
           * `projects/{project_num}/locations/{location_id}/rankingConfigs/default_ranking_config`.
           */
          public Rank setRankingConfig(java.lang.String rankingConfig) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RANKING_CONFIG_PATTERN.matcher(rankingConfig).matches(),
                  "Parameter rankingConfig must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/rankingConfigs/[^/]+$");
            }
            this.rankingConfig = rankingConfig;
            return this;
          }

          @Override
          public Rank set(String parameterName, Object value) {
            return (Rank) super.set(parameterName, value);
          }
        }

      }
    }
    /**
     * An accessor for creating requests from the Operations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code DiscoveryEngine discoveryengine = new DiscoveryEngine(...);}
     *   {@code DiscoveryEngine.Operations.List request = discoveryengine.operations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Operations operations() {
      return new Operations();
    }

    /**
     * The "operations" collection of methods.
     */
    public class Operations {

      /**
       * Gets the latest state of a long-running operation. Clients can use this method to poll the
       * operation result at intervals as recommended by the API service.
       *
       * Create a request for the method "operations.get".
       *
       * This request holds the parameters needed by the discoveryengine server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name The name of the operation resource.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/operations/[^/]+$");

        /**
         * Gets the latest state of a long-running operation. Clients can use this method to poll the
         * operation result at intervals as recommended by the API service.
         *
         * Create a request for the method "operations.get".
         *
         * This request holds the parameters needed by the the discoveryengine server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the operation resource.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningOperation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/operations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the operation resource. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the operation resource.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the operation resource. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/operations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists operations that match the specified filter in the request. If the server doesn't support
       * this method, it returns `UNIMPLEMENTED`.
       *
       * Create a request for the method "operations.list".
       *
       * This request holds the parameters needed by the discoveryengine server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param name The name of the operation's parent resource.
       * @return the request
       */
      public List list(java.lang.String name) throws java.io.IOException {
        List result = new List(name);
        initialize(result);
        return result;
      }

      public class List extends DiscoveryEngineRequest<com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningListOperationsResponse> {

        private static final String REST_PATH = "v1alpha/{+name}/operations";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Lists operations that match the specified filter in the request. If the server doesn't support
         * this method, it returns `UNIMPLEMENTED`.
         *
         * Create a request for the method "operations.list".
         *
         * This request holds the parameters needed by the the discoveryengine server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the operation's parent resource.
         * @since 1.13
         */
        protected List(java.lang.String name) {
          super(DiscoveryEngine.this, "GET", REST_PATH, null, com.google.api.services.discoveryengine.v1alpha.model.GoogleLongrunningListOperationsResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the operation's parent resource. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the operation's parent resource.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the operation's parent resource. */
        public List setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /** The standard list filter. */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** The standard list filter.
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /** The standard list filter. */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /** The standard list page size. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The standard list page size.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The standard list page size. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** The standard list page token. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** The standard list page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** The standard list page token. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * Builder for {@link DiscoveryEngine}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link DiscoveryEngine}. */
    @Override
    public DiscoveryEngine build() {
      return new DiscoveryEngine(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link DiscoveryEngineRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setDiscoveryEngineRequestInitializer(
        DiscoveryEngineRequestInitializer discoveryengineRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(discoveryengineRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }

    @Override
    public Builder setUniverseDomain(String universeDomain) {
      return (Builder) super.setUniverseDomain(universeDomain);
    }
  }
}
