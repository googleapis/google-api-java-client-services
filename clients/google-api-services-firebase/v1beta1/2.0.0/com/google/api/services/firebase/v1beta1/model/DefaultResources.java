/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.firebase.v1beta1.model;

/**
 * **DEPRECATED.** _Auto-provisioning of these resources is changing, so this object no longer
 * reliably provides information about the resources within the Project. Instead, retrieve
 * information about each resource directly from its resource-specific API._ The default auto-
 * provisioned resources associated with the Project.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Firebase Management API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class DefaultResources extends com.google.api.client.json.GenericJson {

  /**
   * Output only. **DEPRECATED.** _Instead, find the name of the default Firebase Hosting site using
   * [ListSites](https://firebase.google.com/docs/reference/hosting/rest/v1beta1/projects.sites/list
   * ) within the Firebase Hosting REST API. If the default Hosting site for the Project has not yet
   * been provisioned, the return might not contain a default site._ The name of the default
   * Firebase Hosting site, in the format: PROJECT_ID Though rare, your `projectId` might already be
   * used as the name for an existing Hosting site in another project (learn more about creating
   * non-default, [additional sites](https://firebase.google.com/docs/hosting/multisites)). In these
   * cases, your `projectId` is appended with a hyphen then five alphanumeric characters to create
   * your default Hosting site name. For example, if your `projectId` is `myproject123`, your
   * default Hosting site name might be: `myproject123-a5c16`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String hostingSite;

  /**
   * Output only. **DEPRECATED.** _Instead, use product-specific REST APIs to find the location of
   * each resource in a Project. This field may not be populated, especially for newly provisioned
   * projects after October 30, 2024._ The ID of the Project's ["location for default Google Cloud
   * resources"](https://firebase.google.com/docs/projects/locations#default-cloud-location), which
   * are resources associated with Google App Engine. The location is one of the available [Google
   * App Engine locations](https://cloud.google.com/about/locations#region). This field is omitted
   * if the location for default Google Cloud resources has not been set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String locationId;

  /**
   * Output only. **DEPRECATED.** _Instead, find the name of the default Realtime Database instance
   * using the [list endpoint](https://firebase.google.com/docs/reference/rest/database/database-
   * management/rest/v1beta/projects.locations.instances/list) within the Firebase Realtime Database
   * REST API. If the default Realtime Database instance for a Project has not yet been provisioned,
   * the return might not contain a default instance._ The default Firebase Realtime Database
   * instance name, in the format: PROJECT_ID Though rare, your `projectId` might already be used as
   * the name for an existing Realtime Database instance in another project (learn more about
   * [database sharding](https://firebase.google.com/docs/database/usage/sharding)). In these cases,
   * your `projectId` is appended with a hyphen then five alphanumeric characters to create your
   * default Realtime Database instance name. For example, if your `projectId` is `myproject123`,
   * your default database instance name might be: `myproject123-a5c16`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String realtimeDatabaseInstance;

  /**
   * Output only. **DEPRECATED.** _Instead, find the name of the default Cloud Storage for Firebase
   * bucket using the [list endpoint](https://firebase.google.com/docs/reference/rest/storage/rest/v
   * 1beta/projects.buckets/list) within the Cloud Storage for Firebase REST API. If the default
   * bucket for the Project has not yet been provisioned, the return might not contain a default
   * bucket._ The name of the default Cloud Storage for Firebase bucket, in one of the following
   * formats: * If provisioned _before_ October 30, 2024: PROJECT_ID.firebasestorage.app * If
   * provisioned _on or after_ October 30, 2024: PROJECT_ID.firebasestorage.app
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String storageBucket;

  /**
   * Output only. **DEPRECATED.** _Instead, find the name of the default Firebase Hosting site using
   * [ListSites](https://firebase.google.com/docs/reference/hosting/rest/v1beta1/projects.sites/list
   * ) within the Firebase Hosting REST API. If the default Hosting site for the Project has not yet
   * been provisioned, the return might not contain a default site._ The name of the default
   * Firebase Hosting site, in the format: PROJECT_ID Though rare, your `projectId` might already be
   * used as the name for an existing Hosting site in another project (learn more about creating
   * non-default, [additional sites](https://firebase.google.com/docs/hosting/multisites)). In these
   * cases, your `projectId` is appended with a hyphen then five alphanumeric characters to create
   * your default Hosting site name. For example, if your `projectId` is `myproject123`, your
   * default Hosting site name might be: `myproject123-a5c16`
   * @return value or {@code null} for none
   */
  public java.lang.String getHostingSite() {
    return hostingSite;
  }

  /**
   * Output only. **DEPRECATED.** _Instead, find the name of the default Firebase Hosting site using
   * [ListSites](https://firebase.google.com/docs/reference/hosting/rest/v1beta1/projects.sites/list
   * ) within the Firebase Hosting REST API. If the default Hosting site for the Project has not yet
   * been provisioned, the return might not contain a default site._ The name of the default
   * Firebase Hosting site, in the format: PROJECT_ID Though rare, your `projectId` might already be
   * used as the name for an existing Hosting site in another project (learn more about creating
   * non-default, [additional sites](https://firebase.google.com/docs/hosting/multisites)). In these
   * cases, your `projectId` is appended with a hyphen then five alphanumeric characters to create
   * your default Hosting site name. For example, if your `projectId` is `myproject123`, your
   * default Hosting site name might be: `myproject123-a5c16`
   * @param hostingSite hostingSite or {@code null} for none
   */
  public DefaultResources setHostingSite(java.lang.String hostingSite) {
    this.hostingSite = hostingSite;
    return this;
  }

  /**
   * Output only. **DEPRECATED.** _Instead, use product-specific REST APIs to find the location of
   * each resource in a Project. This field may not be populated, especially for newly provisioned
   * projects after October 30, 2024._ The ID of the Project's ["location for default Google Cloud
   * resources"](https://firebase.google.com/docs/projects/locations#default-cloud-location), which
   * are resources associated with Google App Engine. The location is one of the available [Google
   * App Engine locations](https://cloud.google.com/about/locations#region). This field is omitted
   * if the location for default Google Cloud resources has not been set.
   * @return value or {@code null} for none
   */
  public java.lang.String getLocationId() {
    return locationId;
  }

  /**
   * Output only. **DEPRECATED.** _Instead, use product-specific REST APIs to find the location of
   * each resource in a Project. This field may not be populated, especially for newly provisioned
   * projects after October 30, 2024._ The ID of the Project's ["location for default Google Cloud
   * resources"](https://firebase.google.com/docs/projects/locations#default-cloud-location), which
   * are resources associated with Google App Engine. The location is one of the available [Google
   * App Engine locations](https://cloud.google.com/about/locations#region). This field is omitted
   * if the location for default Google Cloud resources has not been set.
   * @param locationId locationId or {@code null} for none
   */
  public DefaultResources setLocationId(java.lang.String locationId) {
    this.locationId = locationId;
    return this;
  }

  /**
   * Output only. **DEPRECATED.** _Instead, find the name of the default Realtime Database instance
   * using the [list endpoint](https://firebase.google.com/docs/reference/rest/database/database-
   * management/rest/v1beta/projects.locations.instances/list) within the Firebase Realtime Database
   * REST API. If the default Realtime Database instance for a Project has not yet been provisioned,
   * the return might not contain a default instance._ The default Firebase Realtime Database
   * instance name, in the format: PROJECT_ID Though rare, your `projectId` might already be used as
   * the name for an existing Realtime Database instance in another project (learn more about
   * [database sharding](https://firebase.google.com/docs/database/usage/sharding)). In these cases,
   * your `projectId` is appended with a hyphen then five alphanumeric characters to create your
   * default Realtime Database instance name. For example, if your `projectId` is `myproject123`,
   * your default database instance name might be: `myproject123-a5c16`
   * @return value or {@code null} for none
   */
  public java.lang.String getRealtimeDatabaseInstance() {
    return realtimeDatabaseInstance;
  }

  /**
   * Output only. **DEPRECATED.** _Instead, find the name of the default Realtime Database instance
   * using the [list endpoint](https://firebase.google.com/docs/reference/rest/database/database-
   * management/rest/v1beta/projects.locations.instances/list) within the Firebase Realtime Database
   * REST API. If the default Realtime Database instance for a Project has not yet been provisioned,
   * the return might not contain a default instance._ The default Firebase Realtime Database
   * instance name, in the format: PROJECT_ID Though rare, your `projectId` might already be used as
   * the name for an existing Realtime Database instance in another project (learn more about
   * [database sharding](https://firebase.google.com/docs/database/usage/sharding)). In these cases,
   * your `projectId` is appended with a hyphen then five alphanumeric characters to create your
   * default Realtime Database instance name. For example, if your `projectId` is `myproject123`,
   * your default database instance name might be: `myproject123-a5c16`
   * @param realtimeDatabaseInstance realtimeDatabaseInstance or {@code null} for none
   */
  public DefaultResources setRealtimeDatabaseInstance(java.lang.String realtimeDatabaseInstance) {
    this.realtimeDatabaseInstance = realtimeDatabaseInstance;
    return this;
  }

  /**
   * Output only. **DEPRECATED.** _Instead, find the name of the default Cloud Storage for Firebase
   * bucket using the [list endpoint](https://firebase.google.com/docs/reference/rest/storage/rest/v
   * 1beta/projects.buckets/list) within the Cloud Storage for Firebase REST API. If the default
   * bucket for the Project has not yet been provisioned, the return might not contain a default
   * bucket._ The name of the default Cloud Storage for Firebase bucket, in one of the following
   * formats: * If provisioned _before_ October 30, 2024: PROJECT_ID.firebasestorage.app * If
   * provisioned _on or after_ October 30, 2024: PROJECT_ID.firebasestorage.app
   * @return value or {@code null} for none
   */
  public java.lang.String getStorageBucket() {
    return storageBucket;
  }

  /**
   * Output only. **DEPRECATED.** _Instead, find the name of the default Cloud Storage for Firebase
   * bucket using the [list endpoint](https://firebase.google.com/docs/reference/rest/storage/rest/v
   * 1beta/projects.buckets/list) within the Cloud Storage for Firebase REST API. If the default
   * bucket for the Project has not yet been provisioned, the return might not contain a default
   * bucket._ The name of the default Cloud Storage for Firebase bucket, in one of the following
   * formats: * If provisioned _before_ October 30, 2024: PROJECT_ID.firebasestorage.app * If
   * provisioned _on or after_ October 30, 2024: PROJECT_ID.firebasestorage.app
   * @param storageBucket storageBucket or {@code null} for none
   */
  public DefaultResources setStorageBucket(java.lang.String storageBucket) {
    this.storageBucket = storageBucket;
    return this;
  }

  @Override
  public DefaultResources set(String fieldName, Object value) {
    return (DefaultResources) super.set(fieldName, value);
  }

  @Override
  public DefaultResources clone() {
    return (DefaultResources) super.clone();
  }

}
