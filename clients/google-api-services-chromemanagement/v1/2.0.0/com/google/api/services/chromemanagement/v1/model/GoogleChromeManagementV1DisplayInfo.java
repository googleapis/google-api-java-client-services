/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.chromemanagement.v1.model;

/**
 * Information for a display.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Chrome Management API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleChromeManagementV1DisplayInfo extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Represents the graphics card device id.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long deviceId;

  /**
   * Output only. Indicates if display is internal or not.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isInternal;

  /**
   * Output only. Refresh rate in Hz.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer refreshRate;

  /**
   * Output only. Resolution height in pixels.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer resolutionHeight;

  /**
   * Output only. Resolution width in pixels.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer resolutionWidth;

  /**
   * Output only. Represents the graphics card device id.
   * @return value or {@code null} for none
   */
  public java.lang.Long getDeviceId() {
    return deviceId;
  }

  /**
   * Output only. Represents the graphics card device id.
   * @param deviceId deviceId or {@code null} for none
   */
  public GoogleChromeManagementV1DisplayInfo setDeviceId(java.lang.Long deviceId) {
    this.deviceId = deviceId;
    return this;
  }

  /**
   * Output only. Indicates if display is internal or not.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsInternal() {
    return isInternal;
  }

  /**
   * Output only. Indicates if display is internal or not.
   * @param isInternal isInternal or {@code null} for none
   */
  public GoogleChromeManagementV1DisplayInfo setIsInternal(java.lang.Boolean isInternal) {
    this.isInternal = isInternal;
    return this;
  }

  /**
   * Output only. Refresh rate in Hz.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getRefreshRate() {
    return refreshRate;
  }

  /**
   * Output only. Refresh rate in Hz.
   * @param refreshRate refreshRate or {@code null} for none
   */
  public GoogleChromeManagementV1DisplayInfo setRefreshRate(java.lang.Integer refreshRate) {
    this.refreshRate = refreshRate;
    return this;
  }

  /**
   * Output only. Resolution height in pixels.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getResolutionHeight() {
    return resolutionHeight;
  }

  /**
   * Output only. Resolution height in pixels.
   * @param resolutionHeight resolutionHeight or {@code null} for none
   */
  public GoogleChromeManagementV1DisplayInfo setResolutionHeight(java.lang.Integer resolutionHeight) {
    this.resolutionHeight = resolutionHeight;
    return this;
  }

  /**
   * Output only. Resolution width in pixels.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getResolutionWidth() {
    return resolutionWidth;
  }

  /**
   * Output only. Resolution width in pixels.
   * @param resolutionWidth resolutionWidth or {@code null} for none
   */
  public GoogleChromeManagementV1DisplayInfo setResolutionWidth(java.lang.Integer resolutionWidth) {
    this.resolutionWidth = resolutionWidth;
    return this;
  }

  @Override
  public GoogleChromeManagementV1DisplayInfo set(String fieldName, Object value) {
    return (GoogleChromeManagementV1DisplayInfo) super.set(fieldName, value);
  }

  @Override
  public GoogleChromeManagementV1DisplayInfo clone() {
    return (GoogleChromeManagementV1DisplayInfo) super.clone();
  }

}
