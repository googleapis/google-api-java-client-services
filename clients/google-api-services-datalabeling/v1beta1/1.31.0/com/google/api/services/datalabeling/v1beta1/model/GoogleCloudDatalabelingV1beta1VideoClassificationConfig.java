/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.datalabeling.v1beta1.model;

/**
 * Config for video classification human labeling task. Currently two types of video classification
 * are supported: 1. Assign labels on the entire video. 2. Split the video into multiple video clips
 * based on camera shot, and assign labels on each video clip.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Data Labeling API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDatalabelingV1beta1VideoClassificationConfig extends com.google.api.client.json.GenericJson {

  /**
   * Required. The list of annotation spec set configs. Since watching a video clip takes much
   * longer time than an image, we support label with multiple AnnotationSpecSet at the same time.
   * Labels in each AnnotationSpecSet will be shown in a group to contributors. Contributors can
   * select one or more (depending on whether to allow multi label) from each group.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudDatalabelingV1beta1AnnotationSpecSetConfig> annotationSpecSetConfigs;

  static {
    // hack to force ProGuard to consider GoogleCloudDatalabelingV1beta1AnnotationSpecSetConfig used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(GoogleCloudDatalabelingV1beta1AnnotationSpecSetConfig.class);
  }

  /**
   * Optional. Option to apply shot detection on the video.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean applyShotDetection;

  /**
   * Required. The list of annotation spec set configs. Since watching a video clip takes much
   * longer time than an image, we support label with multiple AnnotationSpecSet at the same time.
   * Labels in each AnnotationSpecSet will be shown in a group to contributors. Contributors can
   * select one or more (depending on whether to allow multi label) from each group.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudDatalabelingV1beta1AnnotationSpecSetConfig> getAnnotationSpecSetConfigs() {
    return annotationSpecSetConfigs;
  }

  /**
   * Required. The list of annotation spec set configs. Since watching a video clip takes much
   * longer time than an image, we support label with multiple AnnotationSpecSet at the same time.
   * Labels in each AnnotationSpecSet will be shown in a group to contributors. Contributors can
   * select one or more (depending on whether to allow multi label) from each group.
   * @param annotationSpecSetConfigs annotationSpecSetConfigs or {@code null} for none
   */
  public GoogleCloudDatalabelingV1beta1VideoClassificationConfig setAnnotationSpecSetConfigs(java.util.List<GoogleCloudDatalabelingV1beta1AnnotationSpecSetConfig> annotationSpecSetConfigs) {
    this.annotationSpecSetConfigs = annotationSpecSetConfigs;
    return this;
  }

  /**
   * Optional. Option to apply shot detection on the video.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getApplyShotDetection() {
    return applyShotDetection;
  }

  /**
   * Optional. Option to apply shot detection on the video.
   * @param applyShotDetection applyShotDetection or {@code null} for none
   */
  public GoogleCloudDatalabelingV1beta1VideoClassificationConfig setApplyShotDetection(java.lang.Boolean applyShotDetection) {
    this.applyShotDetection = applyShotDetection;
    return this;
  }

  @Override
  public GoogleCloudDatalabelingV1beta1VideoClassificationConfig set(String fieldName, Object value) {
    return (GoogleCloudDatalabelingV1beta1VideoClassificationConfig) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDatalabelingV1beta1VideoClassificationConfig clone() {
    return (GoogleCloudDatalabelingV1beta1VideoClassificationConfig) super.clone();
  }

}
