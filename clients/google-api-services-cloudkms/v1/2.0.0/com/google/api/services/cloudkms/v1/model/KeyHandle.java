/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudkms.v1.model;

/**
 * Resource-oriented representation of a request to Cloud KMS Autokey and the resulting provisioning
 * of a CryptoKey.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Key Management Service (KMS) API. For a
 * detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class KeyHandle extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Name of a CryptoKey that has been provisioned for Customer Managed Encryption Key
   * (CMEK) use in the KeyHandle project and location for the requested resource type. The CryptoKey
   * project will reflect the value configured in the AutokeyConfig on the resource project's
   * ancestor folder at the time of the KeyHandle creation. If more than one ancestor folder has a
   * configured AutokeyConfig, the nearest of these configurations is used.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String kmsKey;

  /**
   * Identifier. Name of the KeyHandle resource, e.g.
   * `projects/{PROJECT_ID}/locations/{LOCATION}/keyHandles/{KEY_HANDLE_ID}`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Required. Indicates the resource type that the resulting CryptoKey is meant to protect, e.g.
   * `{SERVICE}.googleapis.com/{TYPE}`. See documentation for supported resource types.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String resourceTypeSelector;

  /**
   * Output only. Name of a CryptoKey that has been provisioned for Customer Managed Encryption Key
   * (CMEK) use in the KeyHandle project and location for the requested resource type. The CryptoKey
   * project will reflect the value configured in the AutokeyConfig on the resource project's
   * ancestor folder at the time of the KeyHandle creation. If more than one ancestor folder has a
   * configured AutokeyConfig, the nearest of these configurations is used.
   * @return value or {@code null} for none
   */
  public java.lang.String getKmsKey() {
    return kmsKey;
  }

  /**
   * Output only. Name of a CryptoKey that has been provisioned for Customer Managed Encryption Key
   * (CMEK) use in the KeyHandle project and location for the requested resource type. The CryptoKey
   * project will reflect the value configured in the AutokeyConfig on the resource project's
   * ancestor folder at the time of the KeyHandle creation. If more than one ancestor folder has a
   * configured AutokeyConfig, the nearest of these configurations is used.
   * @param kmsKey kmsKey or {@code null} for none
   */
  public KeyHandle setKmsKey(java.lang.String kmsKey) {
    this.kmsKey = kmsKey;
    return this;
  }

  /**
   * Identifier. Name of the KeyHandle resource, e.g.
   * `projects/{PROJECT_ID}/locations/{LOCATION}/keyHandles/{KEY_HANDLE_ID}`.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Identifier. Name of the KeyHandle resource, e.g.
   * `projects/{PROJECT_ID}/locations/{LOCATION}/keyHandles/{KEY_HANDLE_ID}`.
   * @param name name or {@code null} for none
   */
  public KeyHandle setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Required. Indicates the resource type that the resulting CryptoKey is meant to protect, e.g.
   * `{SERVICE}.googleapis.com/{TYPE}`. See documentation for supported resource types.
   * @return value or {@code null} for none
   */
  public java.lang.String getResourceTypeSelector() {
    return resourceTypeSelector;
  }

  /**
   * Required. Indicates the resource type that the resulting CryptoKey is meant to protect, e.g.
   * `{SERVICE}.googleapis.com/{TYPE}`. See documentation for supported resource types.
   * @param resourceTypeSelector resourceTypeSelector or {@code null} for none
   */
  public KeyHandle setResourceTypeSelector(java.lang.String resourceTypeSelector) {
    this.resourceTypeSelector = resourceTypeSelector;
    return this;
  }

  @Override
  public KeyHandle set(String fieldName, Object value) {
    return (KeyHandle) super.set(fieldName, value);
  }

  @Override
  public KeyHandle clone() {
    return (KeyHandle) super.clone();
  }

}
