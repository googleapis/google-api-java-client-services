/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dataproc.model;

/**
 * Metadata describing the Analyze operation.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Dataproc API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AnalyzeOperationMetadata extends com.google.api.client.json.GenericJson {

  /**
   * Output only. name of the workload being analyzed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String analyzedWorkloadName;

  /**
   * Output only. Type of the workload being analyzed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String analyzedWorkloadType;

  /**
   * Output only. unique identifier of the workload typically generated by control plane. E.g. batch
   * uuid.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String analyzedWorkloadUuid;

  /**
   * Output only. The time when the operation was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Output only. Short description of the operation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Output only. The time when the operation finished.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String doneTime;

  /**
   * Output only. Labels associated with the operation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Output only. Warnings encountered during operation execution.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> warnings;

  /**
   * Output only. name of the workload being analyzed.
   * @return value or {@code null} for none
   */
  public java.lang.String getAnalyzedWorkloadName() {
    return analyzedWorkloadName;
  }

  /**
   * Output only. name of the workload being analyzed.
   * @param analyzedWorkloadName analyzedWorkloadName or {@code null} for none
   */
  public AnalyzeOperationMetadata setAnalyzedWorkloadName(java.lang.String analyzedWorkloadName) {
    this.analyzedWorkloadName = analyzedWorkloadName;
    return this;
  }

  /**
   * Output only. Type of the workload being analyzed.
   * @return value or {@code null} for none
   */
  public java.lang.String getAnalyzedWorkloadType() {
    return analyzedWorkloadType;
  }

  /**
   * Output only. Type of the workload being analyzed.
   * @param analyzedWorkloadType analyzedWorkloadType or {@code null} for none
   */
  public AnalyzeOperationMetadata setAnalyzedWorkloadType(java.lang.String analyzedWorkloadType) {
    this.analyzedWorkloadType = analyzedWorkloadType;
    return this;
  }

  /**
   * Output only. unique identifier of the workload typically generated by control plane. E.g. batch
   * uuid.
   * @return value or {@code null} for none
   */
  public java.lang.String getAnalyzedWorkloadUuid() {
    return analyzedWorkloadUuid;
  }

  /**
   * Output only. unique identifier of the workload typically generated by control plane. E.g. batch
   * uuid.
   * @param analyzedWorkloadUuid analyzedWorkloadUuid or {@code null} for none
   */
  public AnalyzeOperationMetadata setAnalyzedWorkloadUuid(java.lang.String analyzedWorkloadUuid) {
    this.analyzedWorkloadUuid = analyzedWorkloadUuid;
    return this;
  }

  /**
   * Output only. The time when the operation was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The time when the operation was created.
   * @param createTime createTime or {@code null} for none
   */
  public AnalyzeOperationMetadata setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Output only. Short description of the operation.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Output only. Short description of the operation.
   * @param description description or {@code null} for none
   */
  public AnalyzeOperationMetadata setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Output only. The time when the operation finished.
   * @return value or {@code null} for none
   */
  public String getDoneTime() {
    return doneTime;
  }

  /**
   * Output only. The time when the operation finished.
   * @param doneTime doneTime or {@code null} for none
   */
  public AnalyzeOperationMetadata setDoneTime(String doneTime) {
    this.doneTime = doneTime;
    return this;
  }

  /**
   * Output only. Labels associated with the operation.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Output only. Labels associated with the operation.
   * @param labels labels or {@code null} for none
   */
  public AnalyzeOperationMetadata setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Output only. Warnings encountered during operation execution.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getWarnings() {
    return warnings;
  }

  /**
   * Output only. Warnings encountered during operation execution.
   * @param warnings warnings or {@code null} for none
   */
  public AnalyzeOperationMetadata setWarnings(java.util.List<java.lang.String> warnings) {
    this.warnings = warnings;
    return this;
  }

  @Override
  public AnalyzeOperationMetadata set(String fieldName, Object value) {
    return (AnalyzeOperationMetadata) super.set(fieldName, value);
  }

  @Override
  public AnalyzeOperationMetadata clone() {
    return (AnalyzeOperationMetadata) super.clone();
  }

}
