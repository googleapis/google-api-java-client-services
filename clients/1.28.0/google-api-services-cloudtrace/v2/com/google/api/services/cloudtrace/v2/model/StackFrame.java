/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudtrace.v2.model;

/**
 * Represents a single stack frame in a stack trace.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Stackdriver Trace API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class StackFrame extends com.google.api.client.json.GenericJson {

  /**
   * The column number where the function call appears, if available. This is important in
   * JavaScript because of its anonymous functions.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long columnNumber;

  /**
   * The name of the source file where the function call appears (up to 256 bytes).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private TruncatableString fileName;

  /**
   * The fully-qualified name that uniquely identifies the function or method that is active in this
   * frame (up to 1024 bytes).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private TruncatableString functionName;

  /**
   * The line number in `file_name` where the function call appears.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long lineNumber;

  /**
   * The binary module from where the code was loaded.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Module loadModule;

  /**
   * An un-mangled function name, if `function_name` is
   * [mangled](http://www.avabodh.com/cxxin/namemangling.html). The name can be fully-qualified (up
   * to 1024 bytes).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private TruncatableString originalFunctionName;

  /**
   * The version of the deployed source code (up to 128 bytes).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private TruncatableString sourceVersion;

  /**
   * The column number where the function call appears, if available. This is important in
   * JavaScript because of its anonymous functions.
   * @return value or {@code null} for none
   */
  public java.lang.Long getColumnNumber() {
    return columnNumber;
  }

  /**
   * The column number where the function call appears, if available. This is important in
   * JavaScript because of its anonymous functions.
   * @param columnNumber columnNumber or {@code null} for none
   */
  public StackFrame setColumnNumber(java.lang.Long columnNumber) {
    this.columnNumber = columnNumber;
    return this;
  }

  /**
   * The name of the source file where the function call appears (up to 256 bytes).
   * @return value or {@code null} for none
   */
  public TruncatableString getFileName() {
    return fileName;
  }

  /**
   * The name of the source file where the function call appears (up to 256 bytes).
   * @param fileName fileName or {@code null} for none
   */
  public StackFrame setFileName(TruncatableString fileName) {
    this.fileName = fileName;
    return this;
  }

  /**
   * The fully-qualified name that uniquely identifies the function or method that is active in this
   * frame (up to 1024 bytes).
   * @return value or {@code null} for none
   */
  public TruncatableString getFunctionName() {
    return functionName;
  }

  /**
   * The fully-qualified name that uniquely identifies the function or method that is active in this
   * frame (up to 1024 bytes).
   * @param functionName functionName or {@code null} for none
   */
  public StackFrame setFunctionName(TruncatableString functionName) {
    this.functionName = functionName;
    return this;
  }

  /**
   * The line number in `file_name` where the function call appears.
   * @return value or {@code null} for none
   */
  public java.lang.Long getLineNumber() {
    return lineNumber;
  }

  /**
   * The line number in `file_name` where the function call appears.
   * @param lineNumber lineNumber or {@code null} for none
   */
  public StackFrame setLineNumber(java.lang.Long lineNumber) {
    this.lineNumber = lineNumber;
    return this;
  }

  /**
   * The binary module from where the code was loaded.
   * @return value or {@code null} for none
   */
  public Module getLoadModule() {
    return loadModule;
  }

  /**
   * The binary module from where the code was loaded.
   * @param loadModule loadModule or {@code null} for none
   */
  public StackFrame setLoadModule(Module loadModule) {
    this.loadModule = loadModule;
    return this;
  }

  /**
   * An un-mangled function name, if `function_name` is
   * [mangled](http://www.avabodh.com/cxxin/namemangling.html). The name can be fully-qualified (up
   * to 1024 bytes).
   * @return value or {@code null} for none
   */
  public TruncatableString getOriginalFunctionName() {
    return originalFunctionName;
  }

  /**
   * An un-mangled function name, if `function_name` is
   * [mangled](http://www.avabodh.com/cxxin/namemangling.html). The name can be fully-qualified (up
   * to 1024 bytes).
   * @param originalFunctionName originalFunctionName or {@code null} for none
   */
  public StackFrame setOriginalFunctionName(TruncatableString originalFunctionName) {
    this.originalFunctionName = originalFunctionName;
    return this;
  }

  /**
   * The version of the deployed source code (up to 128 bytes).
   * @return value or {@code null} for none
   */
  public TruncatableString getSourceVersion() {
    return sourceVersion;
  }

  /**
   * The version of the deployed source code (up to 128 bytes).
   * @param sourceVersion sourceVersion or {@code null} for none
   */
  public StackFrame setSourceVersion(TruncatableString sourceVersion) {
    this.sourceVersion = sourceVersion;
    return this;
  }

  @Override
  public StackFrame set(String fieldName, Object value) {
    return (StackFrame) super.set(fieldName, value);
  }

  @Override
  public StackFrame clone() {
    return (StackFrame) super.clone();
  }

}
