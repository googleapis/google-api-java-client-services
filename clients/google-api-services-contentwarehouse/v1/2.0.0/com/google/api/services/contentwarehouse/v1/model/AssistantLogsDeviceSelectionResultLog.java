/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Log the selection result. Next ID: 11
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AssistantLogsDeviceSelectionResultLog extends com.google.api.client.json.GenericJson {

  /**
   * Deprecated, please use qualified_devices.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantLogsAmbiguousTargetDeviceLog ambiguousTargetDevices;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantLogsMediaDeviceSelectionDecisionSummary deviceSelectionDecisionSummary;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String deviceTargetingErrorType;

  /**
   * The class name for the final filter/promoter used by Lumos for device targeting. This filter or
   * promoter runs for all users, and contains no data specific to the individual user.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String finalLumosStage;

  /**
   * // Ambiguous Results: the library failed to select the final target device(s) but it narrows
   * down to a set of devices which are all valid target device candidates. The client needs to do
   * further disambiguation, e.g., giving a dialog or having costomized logic. The low confidence
   * target device means the library falied to select the target device but it picked two devices
   * for the client to do disambiguation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantLogsLowConfidenceTargetDeviceLog lowConfidenceTargetDevice;

  /**
   * // This field log the error while selecting target device in media_focus_selector.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String mediaFocusSelectionErrorType;

  /**
   * The log for each stage of Lumos, showing the number of eliminated devices from each processor.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AssistantLogsLumosProcessorInfo> processorInfo;

  /**
   * We will apply several filters and dialogs to select a target device if media_focus_selector
   * fail to select one. This field should log the devices left after each filter or dialog. It also
   * log the detailed info of the final target device.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantLogsAmbiguousTargetDeviceLog qualifiedDevices;

  /**
   * // Unambiguous Results: the library successfully selected the final target device(s) and no
   * further disambiguation is needed. Deprecated, please use target_device.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantLogsDeviceInfoLog singleTargetDevice;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantLogsTargetDeviceLog targetDevice;

  /**
   * Deprecated, please use qualified_devices.
   * @return value or {@code null} for none
   */
  public AssistantLogsAmbiguousTargetDeviceLog getAmbiguousTargetDevices() {
    return ambiguousTargetDevices;
  }

  /**
   * Deprecated, please use qualified_devices.
   * @param ambiguousTargetDevices ambiguousTargetDevices or {@code null} for none
   */
  public AssistantLogsDeviceSelectionResultLog setAmbiguousTargetDevices(AssistantLogsAmbiguousTargetDeviceLog ambiguousTargetDevices) {
    this.ambiguousTargetDevices = ambiguousTargetDevices;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public AssistantLogsMediaDeviceSelectionDecisionSummary getDeviceSelectionDecisionSummary() {
    return deviceSelectionDecisionSummary;
  }

  /**
   * @param deviceSelectionDecisionSummary deviceSelectionDecisionSummary or {@code null} for none
   */
  public AssistantLogsDeviceSelectionResultLog setDeviceSelectionDecisionSummary(AssistantLogsMediaDeviceSelectionDecisionSummary deviceSelectionDecisionSummary) {
    this.deviceSelectionDecisionSummary = deviceSelectionDecisionSummary;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getDeviceTargetingErrorType() {
    return deviceTargetingErrorType;
  }

  /**
   * @param deviceTargetingErrorType deviceTargetingErrorType or {@code null} for none
   */
  public AssistantLogsDeviceSelectionResultLog setDeviceTargetingErrorType(java.lang.String deviceTargetingErrorType) {
    this.deviceTargetingErrorType = deviceTargetingErrorType;
    return this;
  }

  /**
   * The class name for the final filter/promoter used by Lumos for device targeting. This filter or
   * promoter runs for all users, and contains no data specific to the individual user.
   * @return value or {@code null} for none
   */
  public java.lang.String getFinalLumosStage() {
    return finalLumosStage;
  }

  /**
   * The class name for the final filter/promoter used by Lumos for device targeting. This filter or
   * promoter runs for all users, and contains no data specific to the individual user.
   * @param finalLumosStage finalLumosStage or {@code null} for none
   */
  public AssistantLogsDeviceSelectionResultLog setFinalLumosStage(java.lang.String finalLumosStage) {
    this.finalLumosStage = finalLumosStage;
    return this;
  }

  /**
   * // Ambiguous Results: the library failed to select the final target device(s) but it narrows
   * down to a set of devices which are all valid target device candidates. The client needs to do
   * further disambiguation, e.g., giving a dialog or having costomized logic. The low confidence
   * target device means the library falied to select the target device but it picked two devices
   * for the client to do disambiguation.
   * @return value or {@code null} for none
   */
  public AssistantLogsLowConfidenceTargetDeviceLog getLowConfidenceTargetDevice() {
    return lowConfidenceTargetDevice;
  }

  /**
   * // Ambiguous Results: the library failed to select the final target device(s) but it narrows
   * down to a set of devices which are all valid target device candidates. The client needs to do
   * further disambiguation, e.g., giving a dialog or having costomized logic. The low confidence
   * target device means the library falied to select the target device but it picked two devices
   * for the client to do disambiguation.
   * @param lowConfidenceTargetDevice lowConfidenceTargetDevice or {@code null} for none
   */
  public AssistantLogsDeviceSelectionResultLog setLowConfidenceTargetDevice(AssistantLogsLowConfidenceTargetDeviceLog lowConfidenceTargetDevice) {
    this.lowConfidenceTargetDevice = lowConfidenceTargetDevice;
    return this;
  }

  /**
   * // This field log the error while selecting target device in media_focus_selector.
   * @return value or {@code null} for none
   */
  public java.lang.String getMediaFocusSelectionErrorType() {
    return mediaFocusSelectionErrorType;
  }

  /**
   * // This field log the error while selecting target device in media_focus_selector.
   * @param mediaFocusSelectionErrorType mediaFocusSelectionErrorType or {@code null} for none
   */
  public AssistantLogsDeviceSelectionResultLog setMediaFocusSelectionErrorType(java.lang.String mediaFocusSelectionErrorType) {
    this.mediaFocusSelectionErrorType = mediaFocusSelectionErrorType;
    return this;
  }

  /**
   * The log for each stage of Lumos, showing the number of eliminated devices from each processor.
   * @return value or {@code null} for none
   */
  public java.util.List<AssistantLogsLumosProcessorInfo> getProcessorInfo() {
    return processorInfo;
  }

  /**
   * The log for each stage of Lumos, showing the number of eliminated devices from each processor.
   * @param processorInfo processorInfo or {@code null} for none
   */
  public AssistantLogsDeviceSelectionResultLog setProcessorInfo(java.util.List<AssistantLogsLumosProcessorInfo> processorInfo) {
    this.processorInfo = processorInfo;
    return this;
  }

  /**
   * We will apply several filters and dialogs to select a target device if media_focus_selector
   * fail to select one. This field should log the devices left after each filter or dialog. It also
   * log the detailed info of the final target device.
   * @return value or {@code null} for none
   */
  public AssistantLogsAmbiguousTargetDeviceLog getQualifiedDevices() {
    return qualifiedDevices;
  }

  /**
   * We will apply several filters and dialogs to select a target device if media_focus_selector
   * fail to select one. This field should log the devices left after each filter or dialog. It also
   * log the detailed info of the final target device.
   * @param qualifiedDevices qualifiedDevices or {@code null} for none
   */
  public AssistantLogsDeviceSelectionResultLog setQualifiedDevices(AssistantLogsAmbiguousTargetDeviceLog qualifiedDevices) {
    this.qualifiedDevices = qualifiedDevices;
    return this;
  }

  /**
   * // Unambiguous Results: the library successfully selected the final target device(s) and no
   * further disambiguation is needed. Deprecated, please use target_device.
   * @return value or {@code null} for none
   */
  public AssistantLogsDeviceInfoLog getSingleTargetDevice() {
    return singleTargetDevice;
  }

  /**
   * // Unambiguous Results: the library successfully selected the final target device(s) and no
   * further disambiguation is needed. Deprecated, please use target_device.
   * @param singleTargetDevice singleTargetDevice or {@code null} for none
   */
  public AssistantLogsDeviceSelectionResultLog setSingleTargetDevice(AssistantLogsDeviceInfoLog singleTargetDevice) {
    this.singleTargetDevice = singleTargetDevice;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public AssistantLogsTargetDeviceLog getTargetDevice() {
    return targetDevice;
  }

  /**
   * @param targetDevice targetDevice or {@code null} for none
   */
  public AssistantLogsDeviceSelectionResultLog setTargetDevice(AssistantLogsTargetDeviceLog targetDevice) {
    this.targetDevice = targetDevice;
    return this;
  }

  @Override
  public AssistantLogsDeviceSelectionResultLog set(String fieldName, Object value) {
    return (AssistantLogsDeviceSelectionResultLog) super.set(fieldName, value);
  }

  @Override
  public AssistantLogsDeviceSelectionResultLog clone() {
    return (AssistantLogsDeviceSelectionResultLog) super.clone();
  }

}
