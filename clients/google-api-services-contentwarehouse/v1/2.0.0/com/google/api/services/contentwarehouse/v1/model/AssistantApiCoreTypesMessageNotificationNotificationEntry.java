/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Structure of each notification in the MessageNotification Bundle. Attribute sender_name could be
 * different in case of group messages. Next Id: 6
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AssistantApiCoreTypesMessageNotificationNotificationEntry extends com.google.api.client.json.GenericJson {

  /**
   * Uri for the attachment (image, audio, video etc.).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String dataUri;

  /**
   * Content of the message body in the notification.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String messageBody;

  /**
   * Mime type of the data_uri. e.g. 'audio/wav', 'video/mp4', 'image/png'.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String mimeType;

  /**
   * Timestamp of the notification's post time.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String postTime;

  /**
   * Sender of the message notification.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiCoreTypesMessageNotificationPerson sender;

  /**
   * Uri for the attachment (image, audio, video etc.).
   * @return value or {@code null} for none
   */
  public java.lang.String getDataUri() {
    return dataUri;
  }

  /**
   * Uri for the attachment (image, audio, video etc.).
   * @param dataUri dataUri or {@code null} for none
   */
  public AssistantApiCoreTypesMessageNotificationNotificationEntry setDataUri(java.lang.String dataUri) {
    this.dataUri = dataUri;
    return this;
  }

  /**
   * Content of the message body in the notification.
   * @return value or {@code null} for none
   */
  public java.lang.String getMessageBody() {
    return messageBody;
  }

  /**
   * Content of the message body in the notification.
   * @param messageBody messageBody or {@code null} for none
   */
  public AssistantApiCoreTypesMessageNotificationNotificationEntry setMessageBody(java.lang.String messageBody) {
    this.messageBody = messageBody;
    return this;
  }

  /**
   * Mime type of the data_uri. e.g. 'audio/wav', 'video/mp4', 'image/png'.
   * @return value or {@code null} for none
   */
  public java.lang.String getMimeType() {
    return mimeType;
  }

  /**
   * Mime type of the data_uri. e.g. 'audio/wav', 'video/mp4', 'image/png'.
   * @param mimeType mimeType or {@code null} for none
   */
  public AssistantApiCoreTypesMessageNotificationNotificationEntry setMimeType(java.lang.String mimeType) {
    this.mimeType = mimeType;
    return this;
  }

  /**
   * Timestamp of the notification's post time.
   * @return value or {@code null} for none
   */
  public String getPostTime() {
    return postTime;
  }

  /**
   * Timestamp of the notification's post time.
   * @param postTime postTime or {@code null} for none
   */
  public AssistantApiCoreTypesMessageNotificationNotificationEntry setPostTime(String postTime) {
    this.postTime = postTime;
    return this;
  }

  /**
   * Sender of the message notification.
   * @return value or {@code null} for none
   */
  public AssistantApiCoreTypesMessageNotificationPerson getSender() {
    return sender;
  }

  /**
   * Sender of the message notification.
   * @param sender sender or {@code null} for none
   */
  public AssistantApiCoreTypesMessageNotificationNotificationEntry setSender(AssistantApiCoreTypesMessageNotificationPerson sender) {
    this.sender = sender;
    return this;
  }

  @Override
  public AssistantApiCoreTypesMessageNotificationNotificationEntry set(String fieldName, Object value) {
    return (AssistantApiCoreTypesMessageNotificationNotificationEntry) super.set(fieldName, value);
  }

  @Override
  public AssistantApiCoreTypesMessageNotificationNotificationEntry clone() {
    return (AssistantApiCoreTypesMessageNotificationNotificationEntry) super.clone();
  }

}
