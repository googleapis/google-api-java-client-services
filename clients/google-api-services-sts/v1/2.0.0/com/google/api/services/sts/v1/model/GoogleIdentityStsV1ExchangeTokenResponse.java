/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.sts.v1.model;

/**
 * Response message for ExchangeToken.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Security Token Service API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleIdentityStsV1ExchangeTokenResponse extends com.google.api.client.json.GenericJson {

  /**
   * The access boundary session key. This key is used along with the access boundary intermediary
   * token to generate Credential Access Boundary tokens at client side. This field is absent when
   * the `requested_token_type` from the request is not `urn:ietf:params:oauth:token-
   * type:access_boundary_intermediary_token`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("access_boundary_session_key")
  private java.lang.String accessBoundarySessionKey;

  /**
   * An OAuth 2.0 security token, issued by Google, in response to the token exchange request.
   * Tokens can vary in size, depending in part on the size of mapped claims, up to a maximum of
   * 12288 bytes (12 KB). Google reserves the right to change the token size and the maximum length
   * at any time.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("access_token")
  private java.lang.String accessToken;

  /**
   * The amount of time, in seconds, between the time when the access token was issued and the time
   * when the access token will expire. This field is absent when the `subject_token` in the request
   * is a a short-lived access token for a Cloud Identity or Google Workspace user account. In this
   * case, the access token has the same expiration time as the `subject_token`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("expires_in")
  private java.lang.Integer expiresIn;

  /**
   * The token type. Always matches the value of `requested_token_type` from the request.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("issued_token_type")
  private java.lang.String issuedTokenType;

  /**
   * The type of access token. Always has the value `Bearer`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("token_type")
  private java.lang.String tokenType;

  /**
   * The access boundary session key. This key is used along with the access boundary intermediary
   * token to generate Credential Access Boundary tokens at client side. This field is absent when
   * the `requested_token_type` from the request is not `urn:ietf:params:oauth:token-
   * type:access_boundary_intermediary_token`.
   * @see #decodeAccessBoundarySessionKey()
   * @return value or {@code null} for none
   */
  public java.lang.String getAccessBoundarySessionKey() {
    return accessBoundarySessionKey;
  }

  /**
   * The access boundary session key. This key is used along with the access boundary intermediary
   * token to generate Credential Access Boundary tokens at client side. This field is absent when
   * the `requested_token_type` from the request is not `urn:ietf:params:oauth:token-
   * type:access_boundary_intermediary_token`.
   * @see #getAccessBoundarySessionKey()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeAccessBoundarySessionKey() {
    return com.google.api.client.util.Base64.decodeBase64(accessBoundarySessionKey);
  }

  /**
   * The access boundary session key. This key is used along with the access boundary intermediary
   * token to generate Credential Access Boundary tokens at client side. This field is absent when
   * the `requested_token_type` from the request is not `urn:ietf:params:oauth:token-
   * type:access_boundary_intermediary_token`.
   * @see #encodeAccessBoundarySessionKey()
   * @param accessBoundarySessionKey accessBoundarySessionKey or {@code null} for none
   */
  public GoogleIdentityStsV1ExchangeTokenResponse setAccessBoundarySessionKey(java.lang.String accessBoundarySessionKey) {
    this.accessBoundarySessionKey = accessBoundarySessionKey;
    return this;
  }

  /**
   * The access boundary session key. This key is used along with the access boundary intermediary
   * token to generate Credential Access Boundary tokens at client side. This field is absent when
   * the `requested_token_type` from the request is not `urn:ietf:params:oauth:token-
   * type:access_boundary_intermediary_token`.
   * @see #setAccessBoundarySessionKey()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public GoogleIdentityStsV1ExchangeTokenResponse encodeAccessBoundarySessionKey(byte[] accessBoundarySessionKey) {
    this.accessBoundarySessionKey = com.google.api.client.util.Base64.encodeBase64URLSafeString(accessBoundarySessionKey);
    return this;
  }

  /**
   * An OAuth 2.0 security token, issued by Google, in response to the token exchange request.
   * Tokens can vary in size, depending in part on the size of mapped claims, up to a maximum of
   * 12288 bytes (12 KB). Google reserves the right to change the token size and the maximum length
   * at any time.
   * @return value or {@code null} for none
   */
  public java.lang.String getAccessToken() {
    return accessToken;
  }

  /**
   * An OAuth 2.0 security token, issued by Google, in response to the token exchange request.
   * Tokens can vary in size, depending in part on the size of mapped claims, up to a maximum of
   * 12288 bytes (12 KB). Google reserves the right to change the token size and the maximum length
   * at any time.
   * @param accessToken accessToken or {@code null} for none
   */
  public GoogleIdentityStsV1ExchangeTokenResponse setAccessToken(java.lang.String accessToken) {
    this.accessToken = accessToken;
    return this;
  }

  /**
   * The amount of time, in seconds, between the time when the access token was issued and the time
   * when the access token will expire. This field is absent when the `subject_token` in the request
   * is a a short-lived access token for a Cloud Identity or Google Workspace user account. In this
   * case, the access token has the same expiration time as the `subject_token`.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getExpiresIn() {
    return expiresIn;
  }

  /**
   * The amount of time, in seconds, between the time when the access token was issued and the time
   * when the access token will expire. This field is absent when the `subject_token` in the request
   * is a a short-lived access token for a Cloud Identity or Google Workspace user account. In this
   * case, the access token has the same expiration time as the `subject_token`.
   * @param expiresIn expiresIn or {@code null} for none
   */
  public GoogleIdentityStsV1ExchangeTokenResponse setExpiresIn(java.lang.Integer expiresIn) {
    this.expiresIn = expiresIn;
    return this;
  }

  /**
   * The token type. Always matches the value of `requested_token_type` from the request.
   * @return value or {@code null} for none
   */
  public java.lang.String getIssuedTokenType() {
    return issuedTokenType;
  }

  /**
   * The token type. Always matches the value of `requested_token_type` from the request.
   * @param issuedTokenType issuedTokenType or {@code null} for none
   */
  public GoogleIdentityStsV1ExchangeTokenResponse setIssuedTokenType(java.lang.String issuedTokenType) {
    this.issuedTokenType = issuedTokenType;
    return this;
  }

  /**
   * The type of access token. Always has the value `Bearer`.
   * @return value or {@code null} for none
   */
  public java.lang.String getTokenType() {
    return tokenType;
  }

  /**
   * The type of access token. Always has the value `Bearer`.
   * @param tokenType tokenType or {@code null} for none
   */
  public GoogleIdentityStsV1ExchangeTokenResponse setTokenType(java.lang.String tokenType) {
    this.tokenType = tokenType;
    return this;
  }

  @Override
  public GoogleIdentityStsV1ExchangeTokenResponse set(String fieldName, Object value) {
    return (GoogleIdentityStsV1ExchangeTokenResponse) super.set(fieldName, value);
  }

  @Override
  public GoogleIdentityStsV1ExchangeTokenResponse clone() {
    return (GoogleIdentityStsV1ExchangeTokenResponse) super.clone();
  }

}
