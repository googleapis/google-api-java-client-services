/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudbuild.v1.model;

/**
 * GitLabEventsConfig describes the configuration of a trigger that creates a build whenever a
 * GitLab event is received.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Build API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GitLabEventsConfig extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The GitLabConfig specified in the gitlab_config_resource field.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GitLabConfig gitlabConfig;

  /**
   * The GitLab config resource that this trigger config maps to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String gitlabConfigResource;

  /**
   * Namespace of the GitLab project.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String projectNamespace;

  /**
   * Filter to match changes in pull requests.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private PullRequestFilter pullRequest;

  /**
   * Filter to match changes in refs like branches, tags.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private PushFilter push;

  /**
   * Output only. The GitLabConfig specified in the gitlab_config_resource field.
   * @return value or {@code null} for none
   */
  public GitLabConfig getGitlabConfig() {
    return gitlabConfig;
  }

  /**
   * Output only. The GitLabConfig specified in the gitlab_config_resource field.
   * @param gitlabConfig gitlabConfig or {@code null} for none
   */
  public GitLabEventsConfig setGitlabConfig(GitLabConfig gitlabConfig) {
    this.gitlabConfig = gitlabConfig;
    return this;
  }

  /**
   * The GitLab config resource that this trigger config maps to.
   * @return value or {@code null} for none
   */
  public java.lang.String getGitlabConfigResource() {
    return gitlabConfigResource;
  }

  /**
   * The GitLab config resource that this trigger config maps to.
   * @param gitlabConfigResource gitlabConfigResource or {@code null} for none
   */
  public GitLabEventsConfig setGitlabConfigResource(java.lang.String gitlabConfigResource) {
    this.gitlabConfigResource = gitlabConfigResource;
    return this;
  }

  /**
   * Namespace of the GitLab project.
   * @return value or {@code null} for none
   */
  public java.lang.String getProjectNamespace() {
    return projectNamespace;
  }

  /**
   * Namespace of the GitLab project.
   * @param projectNamespace projectNamespace or {@code null} for none
   */
  public GitLabEventsConfig setProjectNamespace(java.lang.String projectNamespace) {
    this.projectNamespace = projectNamespace;
    return this;
  }

  /**
   * Filter to match changes in pull requests.
   * @return value or {@code null} for none
   */
  public PullRequestFilter getPullRequest() {
    return pullRequest;
  }

  /**
   * Filter to match changes in pull requests.
   * @param pullRequest pullRequest or {@code null} for none
   */
  public GitLabEventsConfig setPullRequest(PullRequestFilter pullRequest) {
    this.pullRequest = pullRequest;
    return this;
  }

  /**
   * Filter to match changes in refs like branches, tags.
   * @return value or {@code null} for none
   */
  public PushFilter getPush() {
    return push;
  }

  /**
   * Filter to match changes in refs like branches, tags.
   * @param push push or {@code null} for none
   */
  public GitLabEventsConfig setPush(PushFilter push) {
    this.push = push;
    return this;
  }

  @Override
  public GitLabEventsConfig set(String fieldName, Object value) {
    return (GitLabEventsConfig) super.set(fieldName, value);
  }

  @Override
  public GitLabEventsConfig clone() {
    return (GitLabEventsConfig) super.clone();
  }

}
