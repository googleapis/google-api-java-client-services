/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Represents a score for an entity. Next available tag: 39.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class RepositoryWebrefEntityNameScore extends com.google.api.client.json.GenericJson {

  /**
   * If the EntityNameScore is part of a bootstrapped model, then this field contains the
   * score_ratio from the previous model ("Model 0"). If Model 0 does not have a corresponding
   * entry, because it did not know about this name for this entity, then
   * bootstrapping_previous_iteration is left empty.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private RepositoryWebrefBootstrappingScore bootstrappingPreviousIteration;

  /**
   * Confidence that this name is a trusted name of the entity. A reasonable threshold for name
   * trust is 0.6. A name can be trusted and still have very low score_ratio, esp. if it is
   * ambiguous (e.g. 'mercury') and/or not the dominant interpretation (e.g. "siberian husky" ->
   * /m/06krnsr (a book)).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float confidence;

  /**
   * Debug information about the entity.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<RepositoryWebrefEntityDebugInfo> debugInfo;

  static {
    // hack to force ProGuard to consider RepositoryWebrefEntityDebugInfo used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(RepositoryWebrefEntityDebugInfo.class);
  }

  /**
   * Source and score data, this is internal to refx (e.g. for demo/debug).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<RepositoryWebrefPreprocessingNameVariantSignals> debugVariantSignals;

  /**
   * Stores region specific score ratios for the entity when it is significantly different from the
   * language version above.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<RepositoryWebrefExtendedEntityNameScore> extendedScoreRatio;

  /**
   * Include this name in the name lookup table.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean includeInModel;

  /**
   * Transient field, only used in bootstrap pipeline.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean internalBootstrapIsOpenWorld;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean internalIsClusterParent;

  /**
   * Set to true iff the concept is cluster parent and the name can be a name for any child of the
   * cluster. (e.g. 'starbucks' is cluster_global for the [Starbucks] chain cluster).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isClusterGlobal;

  /**
   * Documened at: repository/webref/universal/webref_data/enricher/entity-data.h
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isDropped;

  /**
   * Only for context names: Whether this EntityNameScore represents an entity that was dominant in
   * the search results but was not annotated by QRef during learning. Matchless result contexts are
   * useful for bootstrapping, where different model iterations may have different names and thus
   * context scores from Model 0 that are inconsistent with the names from Model 1.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isMatchlessResultContext;

  /**
   * Documened at: repository/webref/universal/webref_data/enricher/entity-data.h
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isPruned;

  /**
   * The id of the entity.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.math.BigInteger mid;

  /**
   * Metadata about this name aggregated from name signals.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private RepositoryWebrefPreprocessingNameEntityMetadata nameMetadata;

  /**
   * Metadata of segment range, which is annotated by this entity.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<RepositoryWebrefRangeMetadata> rangeMetadata;

  /**
   * The absolute score of that entity. score = artificial_score + volume_based_score
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float score;

  /**
   * Ratio between this entity score and the total score over all entities. This is including the
   * "open world" information if it was estimated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float scoreRatio;

  /**
   * When this field is true, we consider this context name as candidate in Enricher's names
   * pipeline.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean useAsNameCandidate;

  /**
   * Absolute score that comes from quantitative sources such as navboost clicks, anchors, etc.
   * artificial_score = score - volume_based_score
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float volumeBasedScore;

  /**
   * If the EntityNameScore is part of a bootstrapped model, then this field contains the
   * score_ratio from the previous model ("Model 0"). If Model 0 does not have a corresponding
   * entry, because it did not know about this name for this entity, then
   * bootstrapping_previous_iteration is left empty.
   * @return value or {@code null} for none
   */
  public RepositoryWebrefBootstrappingScore getBootstrappingPreviousIteration() {
    return bootstrappingPreviousIteration;
  }

  /**
   * If the EntityNameScore is part of a bootstrapped model, then this field contains the
   * score_ratio from the previous model ("Model 0"). If Model 0 does not have a corresponding
   * entry, because it did not know about this name for this entity, then
   * bootstrapping_previous_iteration is left empty.
   * @param bootstrappingPreviousIteration bootstrappingPreviousIteration or {@code null} for none
   */
  public RepositoryWebrefEntityNameScore setBootstrappingPreviousIteration(RepositoryWebrefBootstrappingScore bootstrappingPreviousIteration) {
    this.bootstrappingPreviousIteration = bootstrappingPreviousIteration;
    return this;
  }

  /**
   * Confidence that this name is a trusted name of the entity. A reasonable threshold for name
   * trust is 0.6. A name can be trusted and still have very low score_ratio, esp. if it is
   * ambiguous (e.g. 'mercury') and/or not the dominant interpretation (e.g. "siberian husky" ->
   * /m/06krnsr (a book)).
   * @return value or {@code null} for none
   */
  public java.lang.Float getConfidence() {
    return confidence;
  }

  /**
   * Confidence that this name is a trusted name of the entity. A reasonable threshold for name
   * trust is 0.6. A name can be trusted and still have very low score_ratio, esp. if it is
   * ambiguous (e.g. 'mercury') and/or not the dominant interpretation (e.g. "siberian husky" ->
   * /m/06krnsr (a book)).
   * @param confidence confidence or {@code null} for none
   */
  public RepositoryWebrefEntityNameScore setConfidence(java.lang.Float confidence) {
    this.confidence = confidence;
    return this;
  }

  /**
   * Debug information about the entity.
   * @return value or {@code null} for none
   */
  public java.util.List<RepositoryWebrefEntityDebugInfo> getDebugInfo() {
    return debugInfo;
  }

  /**
   * Debug information about the entity.
   * @param debugInfo debugInfo or {@code null} for none
   */
  public RepositoryWebrefEntityNameScore setDebugInfo(java.util.List<RepositoryWebrefEntityDebugInfo> debugInfo) {
    this.debugInfo = debugInfo;
    return this;
  }

  /**
   * Source and score data, this is internal to refx (e.g. for demo/debug).
   * @return value or {@code null} for none
   */
  public java.util.List<RepositoryWebrefPreprocessingNameVariantSignals> getDebugVariantSignals() {
    return debugVariantSignals;
  }

  /**
   * Source and score data, this is internal to refx (e.g. for demo/debug).
   * @param debugVariantSignals debugVariantSignals or {@code null} for none
   */
  public RepositoryWebrefEntityNameScore setDebugVariantSignals(java.util.List<RepositoryWebrefPreprocessingNameVariantSignals> debugVariantSignals) {
    this.debugVariantSignals = debugVariantSignals;
    return this;
  }

  /**
   * Stores region specific score ratios for the entity when it is significantly different from the
   * language version above.
   * @return value or {@code null} for none
   */
  public java.util.List<RepositoryWebrefExtendedEntityNameScore> getExtendedScoreRatio() {
    return extendedScoreRatio;
  }

  /**
   * Stores region specific score ratios for the entity when it is significantly different from the
   * language version above.
   * @param extendedScoreRatio extendedScoreRatio or {@code null} for none
   */
  public RepositoryWebrefEntityNameScore setExtendedScoreRatio(java.util.List<RepositoryWebrefExtendedEntityNameScore> extendedScoreRatio) {
    this.extendedScoreRatio = extendedScoreRatio;
    return this;
  }

  /**
   * Include this name in the name lookup table.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIncludeInModel() {
    return includeInModel;
  }

  /**
   * Include this name in the name lookup table.
   * @param includeInModel includeInModel or {@code null} for none
   */
  public RepositoryWebrefEntityNameScore setIncludeInModel(java.lang.Boolean includeInModel) {
    this.includeInModel = includeInModel;
    return this;
  }

  /**
   * Transient field, only used in bootstrap pipeline.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getInternalBootstrapIsOpenWorld() {
    return internalBootstrapIsOpenWorld;
  }

  /**
   * Transient field, only used in bootstrap pipeline.
   * @param internalBootstrapIsOpenWorld internalBootstrapIsOpenWorld or {@code null} for none
   */
  public RepositoryWebrefEntityNameScore setInternalBootstrapIsOpenWorld(java.lang.Boolean internalBootstrapIsOpenWorld) {
    this.internalBootstrapIsOpenWorld = internalBootstrapIsOpenWorld;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getInternalIsClusterParent() {
    return internalIsClusterParent;
  }

  /**
   * @param internalIsClusterParent internalIsClusterParent or {@code null} for none
   */
  public RepositoryWebrefEntityNameScore setInternalIsClusterParent(java.lang.Boolean internalIsClusterParent) {
    this.internalIsClusterParent = internalIsClusterParent;
    return this;
  }

  /**
   * Set to true iff the concept is cluster parent and the name can be a name for any child of the
   * cluster. (e.g. 'starbucks' is cluster_global for the [Starbucks] chain cluster).
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsClusterGlobal() {
    return isClusterGlobal;
  }

  /**
   * Set to true iff the concept is cluster parent and the name can be a name for any child of the
   * cluster. (e.g. 'starbucks' is cluster_global for the [Starbucks] chain cluster).
   * @param isClusterGlobal isClusterGlobal or {@code null} for none
   */
  public RepositoryWebrefEntityNameScore setIsClusterGlobal(java.lang.Boolean isClusterGlobal) {
    this.isClusterGlobal = isClusterGlobal;
    return this;
  }

  /**
   * Documened at: repository/webref/universal/webref_data/enricher/entity-data.h
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsDropped() {
    return isDropped;
  }

  /**
   * Documened at: repository/webref/universal/webref_data/enricher/entity-data.h
   * @param isDropped isDropped or {@code null} for none
   */
  public RepositoryWebrefEntityNameScore setIsDropped(java.lang.Boolean isDropped) {
    this.isDropped = isDropped;
    return this;
  }

  /**
   * Only for context names: Whether this EntityNameScore represents an entity that was dominant in
   * the search results but was not annotated by QRef during learning. Matchless result contexts are
   * useful for bootstrapping, where different model iterations may have different names and thus
   * context scores from Model 0 that are inconsistent with the names from Model 1.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsMatchlessResultContext() {
    return isMatchlessResultContext;
  }

  /**
   * Only for context names: Whether this EntityNameScore represents an entity that was dominant in
   * the search results but was not annotated by QRef during learning. Matchless result contexts are
   * useful for bootstrapping, where different model iterations may have different names and thus
   * context scores from Model 0 that are inconsistent with the names from Model 1.
   * @param isMatchlessResultContext isMatchlessResultContext or {@code null} for none
   */
  public RepositoryWebrefEntityNameScore setIsMatchlessResultContext(java.lang.Boolean isMatchlessResultContext) {
    this.isMatchlessResultContext = isMatchlessResultContext;
    return this;
  }

  /**
   * Documened at: repository/webref/universal/webref_data/enricher/entity-data.h
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsPruned() {
    return isPruned;
  }

  /**
   * Documened at: repository/webref/universal/webref_data/enricher/entity-data.h
   * @param isPruned isPruned or {@code null} for none
   */
  public RepositoryWebrefEntityNameScore setIsPruned(java.lang.Boolean isPruned) {
    this.isPruned = isPruned;
    return this;
  }

  /**
   * The id of the entity.
   * @return value or {@code null} for none
   */
  public java.math.BigInteger getMid() {
    return mid;
  }

  /**
   * The id of the entity.
   * @param mid mid or {@code null} for none
   */
  public RepositoryWebrefEntityNameScore setMid(java.math.BigInteger mid) {
    this.mid = mid;
    return this;
  }

  /**
   * Metadata about this name aggregated from name signals.
   * @return value or {@code null} for none
   */
  public RepositoryWebrefPreprocessingNameEntityMetadata getNameMetadata() {
    return nameMetadata;
  }

  /**
   * Metadata about this name aggregated from name signals.
   * @param nameMetadata nameMetadata or {@code null} for none
   */
  public RepositoryWebrefEntityNameScore setNameMetadata(RepositoryWebrefPreprocessingNameEntityMetadata nameMetadata) {
    this.nameMetadata = nameMetadata;
    return this;
  }

  /**
   * Metadata of segment range, which is annotated by this entity.
   * @return value or {@code null} for none
   */
  public java.util.List<RepositoryWebrefRangeMetadata> getRangeMetadata() {
    return rangeMetadata;
  }

  /**
   * Metadata of segment range, which is annotated by this entity.
   * @param rangeMetadata rangeMetadata or {@code null} for none
   */
  public RepositoryWebrefEntityNameScore setRangeMetadata(java.util.List<RepositoryWebrefRangeMetadata> rangeMetadata) {
    this.rangeMetadata = rangeMetadata;
    return this;
  }

  /**
   * The absolute score of that entity. score = artificial_score + volume_based_score
   * @return value or {@code null} for none
   */
  public java.lang.Float getScore() {
    return score;
  }

  /**
   * The absolute score of that entity. score = artificial_score + volume_based_score
   * @param score score or {@code null} for none
   */
  public RepositoryWebrefEntityNameScore setScore(java.lang.Float score) {
    this.score = score;
    return this;
  }

  /**
   * Ratio between this entity score and the total score over all entities. This is including the
   * "open world" information if it was estimated.
   * @return value or {@code null} for none
   */
  public java.lang.Float getScoreRatio() {
    return scoreRatio;
  }

  /**
   * Ratio between this entity score and the total score over all entities. This is including the
   * "open world" information if it was estimated.
   * @param scoreRatio scoreRatio or {@code null} for none
   */
  public RepositoryWebrefEntityNameScore setScoreRatio(java.lang.Float scoreRatio) {
    this.scoreRatio = scoreRatio;
    return this;
  }

  /**
   * When this field is true, we consider this context name as candidate in Enricher's names
   * pipeline.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getUseAsNameCandidate() {
    return useAsNameCandidate;
  }

  /**
   * When this field is true, we consider this context name as candidate in Enricher's names
   * pipeline.
   * @param useAsNameCandidate useAsNameCandidate or {@code null} for none
   */
  public RepositoryWebrefEntityNameScore setUseAsNameCandidate(java.lang.Boolean useAsNameCandidate) {
    this.useAsNameCandidate = useAsNameCandidate;
    return this;
  }

  /**
   * Absolute score that comes from quantitative sources such as navboost clicks, anchors, etc.
   * artificial_score = score - volume_based_score
   * @return value or {@code null} for none
   */
  public java.lang.Float getVolumeBasedScore() {
    return volumeBasedScore;
  }

  /**
   * Absolute score that comes from quantitative sources such as navboost clicks, anchors, etc.
   * artificial_score = score - volume_based_score
   * @param volumeBasedScore volumeBasedScore or {@code null} for none
   */
  public RepositoryWebrefEntityNameScore setVolumeBasedScore(java.lang.Float volumeBasedScore) {
    this.volumeBasedScore = volumeBasedScore;
    return this;
  }

  @Override
  public RepositoryWebrefEntityNameScore set(String fieldName, Object value) {
    return (RepositoryWebrefEntityNameScore) super.set(fieldName, value);
  }

  @Override
  public RepositoryWebrefEntityNameScore clone() {
    return (RepositoryWebrefEntityNameScore) super.clone();
  }

}
