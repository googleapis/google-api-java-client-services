/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.merchantapi.accounts_v1beta.model;

/**
 * URL settings for cart or checkout URL.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Merchant API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class UriSettings extends com.google.api.client.json.GenericJson {

  /**
   * Cart URL template. When the placeholders are expanded will redirect the buyer to the cart page
   * on the merchant website with the selected item in cart. For more details, check the [help
   * center doc](https://support.google.com/merchants/answer/13945960#method1&zippy=%2Cproduct-
   * level-url-formatting%2Caccount-level-url-formatting)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String cartUriTemplate;

  /**
   * Checkout URL template. When the placeholders are expanded will redirect the buyer to the
   * merchant checkout page with the item in the cart. For more details, check the [help center
   * doc](https://support.google.com/merchants/answer/13945960#method1&zippy=%2Cproduct-level-url-
   * formatting%2Caccount-level-url-formatting)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String checkoutUriTemplate;

  /**
   * Cart URL template. When the placeholders are expanded will redirect the buyer to the cart page
   * on the merchant website with the selected item in cart. For more details, check the [help
   * center doc](https://support.google.com/merchants/answer/13945960#method1&zippy=%2Cproduct-
   * level-url-formatting%2Caccount-level-url-formatting)
   * @return value or {@code null} for none
   */
  public java.lang.String getCartUriTemplate() {
    return cartUriTemplate;
  }

  /**
   * Cart URL template. When the placeholders are expanded will redirect the buyer to the cart page
   * on the merchant website with the selected item in cart. For more details, check the [help
   * center doc](https://support.google.com/merchants/answer/13945960#method1&zippy=%2Cproduct-
   * level-url-formatting%2Caccount-level-url-formatting)
   * @param cartUriTemplate cartUriTemplate or {@code null} for none
   */
  public UriSettings setCartUriTemplate(java.lang.String cartUriTemplate) {
    this.cartUriTemplate = cartUriTemplate;
    return this;
  }

  /**
   * Checkout URL template. When the placeholders are expanded will redirect the buyer to the
   * merchant checkout page with the item in the cart. For more details, check the [help center
   * doc](https://support.google.com/merchants/answer/13945960#method1&zippy=%2Cproduct-level-url-
   * formatting%2Caccount-level-url-formatting)
   * @return value or {@code null} for none
   */
  public java.lang.String getCheckoutUriTemplate() {
    return checkoutUriTemplate;
  }

  /**
   * Checkout URL template. When the placeholders are expanded will redirect the buyer to the
   * merchant checkout page with the item in the cart. For more details, check the [help center
   * doc](https://support.google.com/merchants/answer/13945960#method1&zippy=%2Cproduct-level-url-
   * formatting%2Caccount-level-url-formatting)
   * @param checkoutUriTemplate checkoutUriTemplate or {@code null} for none
   */
  public UriSettings setCheckoutUriTemplate(java.lang.String checkoutUriTemplate) {
    this.checkoutUriTemplate = checkoutUriTemplate;
    return this;
  }

  @Override
  public UriSettings set(String fieldName, Object value) {
    return (UriSettings) super.set(fieldName, value);
  }

  @Override
  public UriSettings clone() {
    return (UriSettings) super.clone();
  }

}
