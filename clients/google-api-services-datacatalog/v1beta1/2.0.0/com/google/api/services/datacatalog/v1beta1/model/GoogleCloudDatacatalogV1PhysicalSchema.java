/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.datacatalog.v1beta1.model;

/**
 * Native schema used by a resource represented as an entry. Used by query engines for deserializing
 * and parsing source data.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Cloud Data Catalog API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDatacatalogV1PhysicalSchema extends com.google.api.client.json.GenericJson {

  /**
   * Schema in Avro JSON format.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDatacatalogV1PhysicalSchemaAvroSchema avro;

  /**
   * Marks a CSV-encoded data source.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDatacatalogV1PhysicalSchemaCsvSchema csv;

  /**
   * Marks an ORC-encoded data source.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDatacatalogV1PhysicalSchemaOrcSchema orc;

  /**
   * Marks a Parquet-encoded data source.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDatacatalogV1PhysicalSchemaParquetSchema parquet;

  /**
   * Schema in protocol buffer format.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDatacatalogV1PhysicalSchemaProtobufSchema protobuf;

  /**
   * Schema in Thrift format.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDatacatalogV1PhysicalSchemaThriftSchema thrift;

  /**
   * Schema in Avro JSON format.
   * @return value or {@code null} for none
   */
  public GoogleCloudDatacatalogV1PhysicalSchemaAvroSchema getAvro() {
    return avro;
  }

  /**
   * Schema in Avro JSON format.
   * @param avro avro or {@code null} for none
   */
  public GoogleCloudDatacatalogV1PhysicalSchema setAvro(GoogleCloudDatacatalogV1PhysicalSchemaAvroSchema avro) {
    this.avro = avro;
    return this;
  }

  /**
   * Marks a CSV-encoded data source.
   * @return value or {@code null} for none
   */
  public GoogleCloudDatacatalogV1PhysicalSchemaCsvSchema getCsv() {
    return csv;
  }

  /**
   * Marks a CSV-encoded data source.
   * @param csv csv or {@code null} for none
   */
  public GoogleCloudDatacatalogV1PhysicalSchema setCsv(GoogleCloudDatacatalogV1PhysicalSchemaCsvSchema csv) {
    this.csv = csv;
    return this;
  }

  /**
   * Marks an ORC-encoded data source.
   * @return value or {@code null} for none
   */
  public GoogleCloudDatacatalogV1PhysicalSchemaOrcSchema getOrc() {
    return orc;
  }

  /**
   * Marks an ORC-encoded data source.
   * @param orc orc or {@code null} for none
   */
  public GoogleCloudDatacatalogV1PhysicalSchema setOrc(GoogleCloudDatacatalogV1PhysicalSchemaOrcSchema orc) {
    this.orc = orc;
    return this;
  }

  /**
   * Marks a Parquet-encoded data source.
   * @return value or {@code null} for none
   */
  public GoogleCloudDatacatalogV1PhysicalSchemaParquetSchema getParquet() {
    return parquet;
  }

  /**
   * Marks a Parquet-encoded data source.
   * @param parquet parquet or {@code null} for none
   */
  public GoogleCloudDatacatalogV1PhysicalSchema setParquet(GoogleCloudDatacatalogV1PhysicalSchemaParquetSchema parquet) {
    this.parquet = parquet;
    return this;
  }

  /**
   * Schema in protocol buffer format.
   * @return value or {@code null} for none
   */
  public GoogleCloudDatacatalogV1PhysicalSchemaProtobufSchema getProtobuf() {
    return protobuf;
  }

  /**
   * Schema in protocol buffer format.
   * @param protobuf protobuf or {@code null} for none
   */
  public GoogleCloudDatacatalogV1PhysicalSchema setProtobuf(GoogleCloudDatacatalogV1PhysicalSchemaProtobufSchema protobuf) {
    this.protobuf = protobuf;
    return this;
  }

  /**
   * Schema in Thrift format.
   * @return value or {@code null} for none
   */
  public GoogleCloudDatacatalogV1PhysicalSchemaThriftSchema getThrift() {
    return thrift;
  }

  /**
   * Schema in Thrift format.
   * @param thrift thrift or {@code null} for none
   */
  public GoogleCloudDatacatalogV1PhysicalSchema setThrift(GoogleCloudDatacatalogV1PhysicalSchemaThriftSchema thrift) {
    this.thrift = thrift;
    return this;
  }

  @Override
  public GoogleCloudDatacatalogV1PhysicalSchema set(String fieldName, Object value) {
    return (GoogleCloudDatacatalogV1PhysicalSchema) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDatacatalogV1PhysicalSchema clone() {
    return (GoogleCloudDatacatalogV1PhysicalSchema) super.clone();
  }

}
