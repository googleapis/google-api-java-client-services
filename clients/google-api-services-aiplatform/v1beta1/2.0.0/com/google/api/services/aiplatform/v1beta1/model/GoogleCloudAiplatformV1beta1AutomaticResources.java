/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.aiplatform.v1beta1.model;

/**
 * A description of resources that to large degree are decided by Vertex AI, and require only a
 * modest additional configuration. Each Model supporting these resources documents its specific
 * guidelines.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Vertex AI API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudAiplatformV1beta1AutomaticResources extends com.google.api.client.json.GenericJson {

  /**
   * Immutable. The maximum number of replicas this DeployedModel may be deployed on when the
   * traffic against it increases. If the requested value is too large, the deployment will error,
   * but if deployment succeeds then the ability to scale the model to that many replicas is
   * guaranteed (barring service outages). If traffic against the DeployedModel increases beyond
   * what its replicas at maximum may handle, a portion of the traffic will be dropped. If this
   * value is not provided, a no upper bound for scaling under heavy traffic will be assume, though
   * Vertex AI may be unable to scale beyond certain replica number.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer maxReplicaCount;

  /**
   * Immutable. The minimum number of replicas this DeployedModel will be always deployed on. If
   * traffic against it increases, it may dynamically be deployed onto more replicas up to
   * max_replica_count, and as traffic decreases, some of these extra replicas may be freed. If the
   * requested value is too large, the deployment will error.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer minReplicaCount;

  /**
   * Immutable. The maximum number of replicas this DeployedModel may be deployed on when the
   * traffic against it increases. If the requested value is too large, the deployment will error,
   * but if deployment succeeds then the ability to scale the model to that many replicas is
   * guaranteed (barring service outages). If traffic against the DeployedModel increases beyond
   * what its replicas at maximum may handle, a portion of the traffic will be dropped. If this
   * value is not provided, a no upper bound for scaling under heavy traffic will be assume, though
   * Vertex AI may be unable to scale beyond certain replica number.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMaxReplicaCount() {
    return maxReplicaCount;
  }

  /**
   * Immutable. The maximum number of replicas this DeployedModel may be deployed on when the
   * traffic against it increases. If the requested value is too large, the deployment will error,
   * but if deployment succeeds then the ability to scale the model to that many replicas is
   * guaranteed (barring service outages). If traffic against the DeployedModel increases beyond
   * what its replicas at maximum may handle, a portion of the traffic will be dropped. If this
   * value is not provided, a no upper bound for scaling under heavy traffic will be assume, though
   * Vertex AI may be unable to scale beyond certain replica number.
   * @param maxReplicaCount maxReplicaCount or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1AutomaticResources setMaxReplicaCount(java.lang.Integer maxReplicaCount) {
    this.maxReplicaCount = maxReplicaCount;
    return this;
  }

  /**
   * Immutable. The minimum number of replicas this DeployedModel will be always deployed on. If
   * traffic against it increases, it may dynamically be deployed onto more replicas up to
   * max_replica_count, and as traffic decreases, some of these extra replicas may be freed. If the
   * requested value is too large, the deployment will error.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMinReplicaCount() {
    return minReplicaCount;
  }

  /**
   * Immutable. The minimum number of replicas this DeployedModel will be always deployed on. If
   * traffic against it increases, it may dynamically be deployed onto more replicas up to
   * max_replica_count, and as traffic decreases, some of these extra replicas may be freed. If the
   * requested value is too large, the deployment will error.
   * @param minReplicaCount minReplicaCount or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1AutomaticResources setMinReplicaCount(java.lang.Integer minReplicaCount) {
    this.minReplicaCount = minReplicaCount;
    return this;
  }

  @Override
  public GoogleCloudAiplatformV1beta1AutomaticResources set(String fieldName, Object value) {
    return (GoogleCloudAiplatformV1beta1AutomaticResources) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudAiplatformV1beta1AutomaticResources clone() {
    return (GoogleCloudAiplatformV1beta1AutomaticResources) super.clone();
  }

}
