/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * A Principal represents something to which permissions are assigned, often but not always a user
 * or group of some kind. It is most appropriate for use in ACLs and authorization checks. Callers
 * should prefer to use the wrapper classes in google3/security/credentials/public/principal.h
 * google3/java/com/google/security/credentials/Principal.java
 * google3/security/credentials/go/principal.go unless direct proto access is essential. If you
 * update this protocol buffer, please update the wrapper classes as well. LINT.IfChange
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class SecurityCredentialsPrincipalProto extends com.google.api.client.json.GenericJson {

  /**
   * scope = ALL_AUTHENTICATED_USERS
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SecurityCredentialsAllAuthenticatedUsersProto allAuthenticatedUsers;

  /**
   * scope = CAP_TOKEN_HOLDER
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SecurityCredentialsCapTokenHolderProto capTokenHolder;

  /**
   * scope = CHAT
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SecurityCredentialsChatProto chat;

  /**
   * scope = CIRCLE
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SecurityCredentialsCircleProto circle;

  /**
   * scope = CLOUD_PRINCIPAL
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SecurityCredentialsCloudPrincipalProto cloudPrincipal;

  /**
   * scope = CONTACT_GROUP
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SecurityCredentialsContactGroupProto contactGroup;

  /**
   * scope = EMAIL_OWNER
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SecurityCredentialsEmailOwnerProto emailOwner;

  /**
   * scope = EVENT
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SecurityCredentialsEventProto event;

  /**
   * scope = GAIA_GROUP
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SecurityCredentialsGaiaGroupProto gaiaGroup;

  /**
   * scope = GAIA_USER
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SecurityCredentialsGaiaUserProto gaiaUser;

  /**
   * scope = HOST
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SecurityCredentialsHostProto host;

  /**
   * scope = LDAP_GROUP
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SecurityCredentialsLdapGroupProto ldapGroup;

  /**
   * scope = LDAP_USER
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SecurityCredentialsLdapUserProto ldapUser;

  /**
   * scope = MDB_GROUP
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SecurityCredentialsMdbGroupProto mdbGroup;

  /**
   * scope = MDB_USER
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SecurityCredentialsMdbUserProto mdbUser;

  /**
   * scope = OAUTH_CONSUMER;
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SecurityCredentialsOAuthConsumerProto oauthConsumer;

  /**
   * scope = POSTINI_USER
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SecurityCredentialsPostiniUserProto postiniUser;

  /**
   * scope = RBAC_ROLE
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SecurityCredentialsRbacRoleProto rbacRole;

  /**
   * scope = RBAC_SUBJECT
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SecurityCredentialsRbacSubjectProto rbacSubject;

  /**
   * scope = RESOURCE_ROLE
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SecurityCredentialsResourceRoleProto resourceRole;

  /**
   * This is only optional because required enums cannot be extended. Currently required.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String scope;

  /**
   * scope = SIGNING_KEY_POSSESSOR
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SecurityCredentialsSigningKeyPossessorProto signingKeyPossessor;

  /**
   * scope = SIMPLE_SECRET_HOLDER
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SecurityCredentialsSimpleSecretHolderProto simpleSecretHolder;

  /**
   * scope = SOCIAL_GRAPH_NODE
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SecurityCredentialsSocialGraphNodeProto socialGraphNode;

  /**
   * scope = SQUARE
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SecurityCredentialsSquareProto square;

  /**
   * scope = YOUTUBE_USER
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SecurityCredentialsYoutubeUserProto youtubeUser;

  /**
   * scope = ZWIEBACK_SESSION
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SecurityCredentialsZwiebackSessionProto zwiebackSession;

  /**
   * scope = ALL_AUTHENTICATED_USERS
   * @return value or {@code null} for none
   */
  public SecurityCredentialsAllAuthenticatedUsersProto getAllAuthenticatedUsers() {
    return allAuthenticatedUsers;
  }

  /**
   * scope = ALL_AUTHENTICATED_USERS
   * @param allAuthenticatedUsers allAuthenticatedUsers or {@code null} for none
   */
  public SecurityCredentialsPrincipalProto setAllAuthenticatedUsers(SecurityCredentialsAllAuthenticatedUsersProto allAuthenticatedUsers) {
    this.allAuthenticatedUsers = allAuthenticatedUsers;
    return this;
  }

  /**
   * scope = CAP_TOKEN_HOLDER
   * @return value or {@code null} for none
   */
  public SecurityCredentialsCapTokenHolderProto getCapTokenHolder() {
    return capTokenHolder;
  }

  /**
   * scope = CAP_TOKEN_HOLDER
   * @param capTokenHolder capTokenHolder or {@code null} for none
   */
  public SecurityCredentialsPrincipalProto setCapTokenHolder(SecurityCredentialsCapTokenHolderProto capTokenHolder) {
    this.capTokenHolder = capTokenHolder;
    return this;
  }

  /**
   * scope = CHAT
   * @return value or {@code null} for none
   */
  public SecurityCredentialsChatProto getChat() {
    return chat;
  }

  /**
   * scope = CHAT
   * @param chat chat or {@code null} for none
   */
  public SecurityCredentialsPrincipalProto setChat(SecurityCredentialsChatProto chat) {
    this.chat = chat;
    return this;
  }

  /**
   * scope = CIRCLE
   * @return value or {@code null} for none
   */
  public SecurityCredentialsCircleProto getCircle() {
    return circle;
  }

  /**
   * scope = CIRCLE
   * @param circle circle or {@code null} for none
   */
  public SecurityCredentialsPrincipalProto setCircle(SecurityCredentialsCircleProto circle) {
    this.circle = circle;
    return this;
  }

  /**
   * scope = CLOUD_PRINCIPAL
   * @return value or {@code null} for none
   */
  public SecurityCredentialsCloudPrincipalProto getCloudPrincipal() {
    return cloudPrincipal;
  }

  /**
   * scope = CLOUD_PRINCIPAL
   * @param cloudPrincipal cloudPrincipal or {@code null} for none
   */
  public SecurityCredentialsPrincipalProto setCloudPrincipal(SecurityCredentialsCloudPrincipalProto cloudPrincipal) {
    this.cloudPrincipal = cloudPrincipal;
    return this;
  }

  /**
   * scope = CONTACT_GROUP
   * @return value or {@code null} for none
   */
  public SecurityCredentialsContactGroupProto getContactGroup() {
    return contactGroup;
  }

  /**
   * scope = CONTACT_GROUP
   * @param contactGroup contactGroup or {@code null} for none
   */
  public SecurityCredentialsPrincipalProto setContactGroup(SecurityCredentialsContactGroupProto contactGroup) {
    this.contactGroup = contactGroup;
    return this;
  }

  /**
   * scope = EMAIL_OWNER
   * @return value or {@code null} for none
   */
  public SecurityCredentialsEmailOwnerProto getEmailOwner() {
    return emailOwner;
  }

  /**
   * scope = EMAIL_OWNER
   * @param emailOwner emailOwner or {@code null} for none
   */
  public SecurityCredentialsPrincipalProto setEmailOwner(SecurityCredentialsEmailOwnerProto emailOwner) {
    this.emailOwner = emailOwner;
    return this;
  }

  /**
   * scope = EVENT
   * @return value or {@code null} for none
   */
  public SecurityCredentialsEventProto getEvent() {
    return event;
  }

  /**
   * scope = EVENT
   * @param event event or {@code null} for none
   */
  public SecurityCredentialsPrincipalProto setEvent(SecurityCredentialsEventProto event) {
    this.event = event;
    return this;
  }

  /**
   * scope = GAIA_GROUP
   * @return value or {@code null} for none
   */
  public SecurityCredentialsGaiaGroupProto getGaiaGroup() {
    return gaiaGroup;
  }

  /**
   * scope = GAIA_GROUP
   * @param gaiaGroup gaiaGroup or {@code null} for none
   */
  public SecurityCredentialsPrincipalProto setGaiaGroup(SecurityCredentialsGaiaGroupProto gaiaGroup) {
    this.gaiaGroup = gaiaGroup;
    return this;
  }

  /**
   * scope = GAIA_USER
   * @return value or {@code null} for none
   */
  public SecurityCredentialsGaiaUserProto getGaiaUser() {
    return gaiaUser;
  }

  /**
   * scope = GAIA_USER
   * @param gaiaUser gaiaUser or {@code null} for none
   */
  public SecurityCredentialsPrincipalProto setGaiaUser(SecurityCredentialsGaiaUserProto gaiaUser) {
    this.gaiaUser = gaiaUser;
    return this;
  }

  /**
   * scope = HOST
   * @return value or {@code null} for none
   */
  public SecurityCredentialsHostProto getHost() {
    return host;
  }

  /**
   * scope = HOST
   * @param host host or {@code null} for none
   */
  public SecurityCredentialsPrincipalProto setHost(SecurityCredentialsHostProto host) {
    this.host = host;
    return this;
  }

  /**
   * scope = LDAP_GROUP
   * @return value or {@code null} for none
   */
  public SecurityCredentialsLdapGroupProto getLdapGroup() {
    return ldapGroup;
  }

  /**
   * scope = LDAP_GROUP
   * @param ldapGroup ldapGroup or {@code null} for none
   */
  public SecurityCredentialsPrincipalProto setLdapGroup(SecurityCredentialsLdapGroupProto ldapGroup) {
    this.ldapGroup = ldapGroup;
    return this;
  }

  /**
   * scope = LDAP_USER
   * @return value or {@code null} for none
   */
  public SecurityCredentialsLdapUserProto getLdapUser() {
    return ldapUser;
  }

  /**
   * scope = LDAP_USER
   * @param ldapUser ldapUser or {@code null} for none
   */
  public SecurityCredentialsPrincipalProto setLdapUser(SecurityCredentialsLdapUserProto ldapUser) {
    this.ldapUser = ldapUser;
    return this;
  }

  /**
   * scope = MDB_GROUP
   * @return value or {@code null} for none
   */
  public SecurityCredentialsMdbGroupProto getMdbGroup() {
    return mdbGroup;
  }

  /**
   * scope = MDB_GROUP
   * @param mdbGroup mdbGroup or {@code null} for none
   */
  public SecurityCredentialsPrincipalProto setMdbGroup(SecurityCredentialsMdbGroupProto mdbGroup) {
    this.mdbGroup = mdbGroup;
    return this;
  }

  /**
   * scope = MDB_USER
   * @return value or {@code null} for none
   */
  public SecurityCredentialsMdbUserProto getMdbUser() {
    return mdbUser;
  }

  /**
   * scope = MDB_USER
   * @param mdbUser mdbUser or {@code null} for none
   */
  public SecurityCredentialsPrincipalProto setMdbUser(SecurityCredentialsMdbUserProto mdbUser) {
    this.mdbUser = mdbUser;
    return this;
  }

  /**
   * scope = OAUTH_CONSUMER;
   * @return value or {@code null} for none
   */
  public SecurityCredentialsOAuthConsumerProto getOauthConsumer() {
    return oauthConsumer;
  }

  /**
   * scope = OAUTH_CONSUMER;
   * @param oauthConsumer oauthConsumer or {@code null} for none
   */
  public SecurityCredentialsPrincipalProto setOauthConsumer(SecurityCredentialsOAuthConsumerProto oauthConsumer) {
    this.oauthConsumer = oauthConsumer;
    return this;
  }

  /**
   * scope = POSTINI_USER
   * @return value or {@code null} for none
   */
  public SecurityCredentialsPostiniUserProto getPostiniUser() {
    return postiniUser;
  }

  /**
   * scope = POSTINI_USER
   * @param postiniUser postiniUser or {@code null} for none
   */
  public SecurityCredentialsPrincipalProto setPostiniUser(SecurityCredentialsPostiniUserProto postiniUser) {
    this.postiniUser = postiniUser;
    return this;
  }

  /**
   * scope = RBAC_ROLE
   * @return value or {@code null} for none
   */
  public SecurityCredentialsRbacRoleProto getRbacRole() {
    return rbacRole;
  }

  /**
   * scope = RBAC_ROLE
   * @param rbacRole rbacRole or {@code null} for none
   */
  public SecurityCredentialsPrincipalProto setRbacRole(SecurityCredentialsRbacRoleProto rbacRole) {
    this.rbacRole = rbacRole;
    return this;
  }

  /**
   * scope = RBAC_SUBJECT
   * @return value or {@code null} for none
   */
  public SecurityCredentialsRbacSubjectProto getRbacSubject() {
    return rbacSubject;
  }

  /**
   * scope = RBAC_SUBJECT
   * @param rbacSubject rbacSubject or {@code null} for none
   */
  public SecurityCredentialsPrincipalProto setRbacSubject(SecurityCredentialsRbacSubjectProto rbacSubject) {
    this.rbacSubject = rbacSubject;
    return this;
  }

  /**
   * scope = RESOURCE_ROLE
   * @return value or {@code null} for none
   */
  public SecurityCredentialsResourceRoleProto getResourceRole() {
    return resourceRole;
  }

  /**
   * scope = RESOURCE_ROLE
   * @param resourceRole resourceRole or {@code null} for none
   */
  public SecurityCredentialsPrincipalProto setResourceRole(SecurityCredentialsResourceRoleProto resourceRole) {
    this.resourceRole = resourceRole;
    return this;
  }

  /**
   * This is only optional because required enums cannot be extended. Currently required.
   * @return value or {@code null} for none
   */
  public java.lang.String getScope() {
    return scope;
  }

  /**
   * This is only optional because required enums cannot be extended. Currently required.
   * @param scope scope or {@code null} for none
   */
  public SecurityCredentialsPrincipalProto setScope(java.lang.String scope) {
    this.scope = scope;
    return this;
  }

  /**
   * scope = SIGNING_KEY_POSSESSOR
   * @return value or {@code null} for none
   */
  public SecurityCredentialsSigningKeyPossessorProto getSigningKeyPossessor() {
    return signingKeyPossessor;
  }

  /**
   * scope = SIGNING_KEY_POSSESSOR
   * @param signingKeyPossessor signingKeyPossessor or {@code null} for none
   */
  public SecurityCredentialsPrincipalProto setSigningKeyPossessor(SecurityCredentialsSigningKeyPossessorProto signingKeyPossessor) {
    this.signingKeyPossessor = signingKeyPossessor;
    return this;
  }

  /**
   * scope = SIMPLE_SECRET_HOLDER
   * @return value or {@code null} for none
   */
  public SecurityCredentialsSimpleSecretHolderProto getSimpleSecretHolder() {
    return simpleSecretHolder;
  }

  /**
   * scope = SIMPLE_SECRET_HOLDER
   * @param simpleSecretHolder simpleSecretHolder or {@code null} for none
   */
  public SecurityCredentialsPrincipalProto setSimpleSecretHolder(SecurityCredentialsSimpleSecretHolderProto simpleSecretHolder) {
    this.simpleSecretHolder = simpleSecretHolder;
    return this;
  }

  /**
   * scope = SOCIAL_GRAPH_NODE
   * @return value or {@code null} for none
   */
  public SecurityCredentialsSocialGraphNodeProto getSocialGraphNode() {
    return socialGraphNode;
  }

  /**
   * scope = SOCIAL_GRAPH_NODE
   * @param socialGraphNode socialGraphNode or {@code null} for none
   */
  public SecurityCredentialsPrincipalProto setSocialGraphNode(SecurityCredentialsSocialGraphNodeProto socialGraphNode) {
    this.socialGraphNode = socialGraphNode;
    return this;
  }

  /**
   * scope = SQUARE
   * @return value or {@code null} for none
   */
  public SecurityCredentialsSquareProto getSquare() {
    return square;
  }

  /**
   * scope = SQUARE
   * @param square square or {@code null} for none
   */
  public SecurityCredentialsPrincipalProto setSquare(SecurityCredentialsSquareProto square) {
    this.square = square;
    return this;
  }

  /**
   * scope = YOUTUBE_USER
   * @return value or {@code null} for none
   */
  public SecurityCredentialsYoutubeUserProto getYoutubeUser() {
    return youtubeUser;
  }

  /**
   * scope = YOUTUBE_USER
   * @param youtubeUser youtubeUser or {@code null} for none
   */
  public SecurityCredentialsPrincipalProto setYoutubeUser(SecurityCredentialsYoutubeUserProto youtubeUser) {
    this.youtubeUser = youtubeUser;
    return this;
  }

  /**
   * scope = ZWIEBACK_SESSION
   * @return value or {@code null} for none
   */
  public SecurityCredentialsZwiebackSessionProto getZwiebackSession() {
    return zwiebackSession;
  }

  /**
   * scope = ZWIEBACK_SESSION
   * @param zwiebackSession zwiebackSession or {@code null} for none
   */
  public SecurityCredentialsPrincipalProto setZwiebackSession(SecurityCredentialsZwiebackSessionProto zwiebackSession) {
    this.zwiebackSession = zwiebackSession;
    return this;
  }

  @Override
  public SecurityCredentialsPrincipalProto set(String fieldName, Object value) {
    return (SecurityCredentialsPrincipalProto) super.set(fieldName, value);
  }

  @Override
  public SecurityCredentialsPrincipalProto clone() {
    return (SecurityCredentialsPrincipalProto) super.clone();
  }

}
