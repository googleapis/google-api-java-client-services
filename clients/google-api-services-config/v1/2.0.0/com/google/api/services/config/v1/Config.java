/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.config.v1;

/**
 * Service definition for Config (v1).
 *
 * <p>
 * Creates and manages Google Cloud Platform resources and infrastructure.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/infrastructure-manager/docs" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link ConfigRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Config extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        (com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1))) ||
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION >= 2,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "2.0.0 of the Infrastructure Manager API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://config.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://config.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Config(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Config(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Config config = new Config(...);}
   *   {@code Config.Projects.List request = config.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the Locations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Config config = new Config(...);}
     *   {@code Config.Locations.List request = config.locations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Locations locations() {
      return new Locations();
    }

    /**
     * The "locations" collection of methods.
     */
    public class Locations {

      /**
       * Gets information about a location.
       *
       * Create a request for the method "locations.get".
       *
       * This request holds the parameters needed by the config server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Resource name for the location.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ConfigRequest<com.google.api.services.config.v1.model.Location> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

        /**
         * Gets information about a location.
         *
         * Create a request for the method "locations.get".
         *
         * This request holds the parameters needed by the the config server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Resource name for the location.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Config.this, "GET", REST_PATH, null, com.google.api.services.config.v1.model.Location.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Resource name for the location. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Resource name for the location.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Resource name for the location. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists information about the supported locations for this service.
       *
       * Create a request for the method "locations.list".
       *
       * This request holds the parameters needed by the config server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param name The resource that owns the locations collection, if applicable.
       * @return the request
       */
      public List list(java.lang.String name) throws java.io.IOException {
        List result = new List(name);
        initialize(result);
        return result;
      }

      public class List extends ConfigRequest<com.google.api.services.config.v1.model.ListLocationsResponse> {

        private static final String REST_PATH = "v1/{+name}/locations";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Lists information about the supported locations for this service.
         *
         * Create a request for the method "locations.list".
         *
         * This request holds the parameters needed by the the config server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The resource that owns the locations collection, if applicable.
         * @since 1.13
         */
        protected List(java.lang.String name) {
          super(Config.this, "GET", REST_PATH, null, com.google.api.services.config.v1.model.ListLocationsResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** The resource that owns the locations collection, if applicable. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The resource that owns the locations collection, if applicable.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The resource that owns the locations collection, if applicable. */
        public List setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * A filter to narrow down results to a preferred subset. The filtering language accepts
         * strings like `"displayName=tokyo"`, and is documented in more detail in
         * [AIP-160](https://google.aip.dev/160).
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** A filter to narrow down results to a preferred subset. The filtering language accepts strings like
       `"displayName=tokyo"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * A filter to narrow down results to a preferred subset. The filtering language accepts
         * strings like `"displayName=tokyo"`, and is documented in more detail in
         * [AIP-160](https://google.aip.dev/160).
         */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /** The maximum number of results to return. If not set, the service selects a default. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of results to return. If not set, the service selects a default.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The maximum number of results to return. If not set, the service selects a default. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token received from the `next_page_token` field in the response. Send that page
         * token to receive the subsequent page.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token received from the `next_page_token` field in the response. Send that page token to
       receive the subsequent page.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token received from the `next_page_token` field in the response. Send that page
         * token to receive the subsequent page.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Deployments collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Config config = new Config(...);}
       *   {@code Config.Deployments.List request = config.deployments().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Deployments deployments() {
        return new Deployments();
      }

      /**
       * The "deployments" collection of methods.
       */
      public class Deployments {

        /**
         * Creates a Deployment.
         *
         * Create a request for the method "deployments.create".
         *
         * This request holds the parameters needed by the config server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent in whose context the Deployment is created. The parent value is in the format:
         *        'projects/{project_id}/locations/{location}'.
         * @param content the {@link com.google.api.services.config.v1.model.Deployment}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.config.v1.model.Deployment content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ConfigRequest<com.google.api.services.config.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+parent}/deployments";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a Deployment.
           *
           * Create a request for the method "deployments.create".
           *
           * This request holds the parameters needed by the the config server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent in whose context the Deployment is created. The parent value is in the format:
         *        'projects/{project_id}/locations/{location}'.
           * @param content the {@link com.google.api.services.config.v1.model.Deployment}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.config.v1.model.Deployment content) {
            super(Config.this, "POST", REST_PATH, content, com.google.api.services.config.v1.model.Operation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent in whose context the Deployment is created. The parent value is in
           * the format: 'projects/{project_id}/locations/{location}'.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent in whose context the Deployment is created. The parent value is in the format:
         'projects/{project_id}/locations/{location}'.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent in whose context the Deployment is created. The parent value is in
           * the format: 'projects/{project_id}/locations/{location}'.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Required. The Deployment ID. */
          @com.google.api.client.util.Key
          private java.lang.String deploymentId;

          /** Required. The Deployment ID.
           */
          public java.lang.String getDeploymentId() {
            return deploymentId;
          }

          /** Required. The Deployment ID. */
          public Create setDeploymentId(java.lang.String deploymentId) {
            this.deploymentId = deploymentId;
            return this;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * since the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. An optional request ID to identify requests. Specify a unique request ID so that if you
         must retry your request, the server will know to ignore the request if it has already been
         completed. The server will guarantee that for at least 60 minutes since the first request. For
         example, consider a situation where you make an initial request and the request times out. If you
         make the request again with the same request ID, the server can check if original operation with
         the same request ID was received, and if so, will ignore the second request. This prevents clients
         from accidentally creating duplicate commitments. The request ID must be a valid UUID with the
         exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * since the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public Create setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a Deployment.
         *
         * Create a request for the method "deployments.delete".
         *
         * This request holds the parameters needed by the config server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the Deployment in the format:
         *        'projects/{project_id}/locations/{location}/deployments/{deployment}'.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ConfigRequest<com.google.api.services.config.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/deployments/[^/]+$");

          /**
           * Deletes a Deployment.
           *
           * Create a request for the method "deployments.delete".
           *
           * This request holds the parameters needed by the the config server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the Deployment in the format:
         *        'projects/{project_id}/locations/{location}/deployments/{deployment}'.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Config.this, "DELETE", REST_PATH, null, com.google.api.services.config.v1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/deployments/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Deployment in the format:
           * 'projects/{project_id}/locations/{location}/deployments/{deployment}'.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the Deployment in the format:
         'projects/{project_id}/locations/{location}/deployments/{deployment}'.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the Deployment in the format:
           * 'projects/{project_id}/locations/{location}/deployments/{deployment}'.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/deployments/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. Policy on how resources actuated by the deployment should be deleted. If
           * unspecified, the default behavior is to delete the underlying resources.
           */
          @com.google.api.client.util.Key
          private java.lang.String deletePolicy;

          /** Optional. Policy on how resources actuated by the deployment should be deleted. If unspecified, the
         default behavior is to delete the underlying resources.
           */
          public java.lang.String getDeletePolicy() {
            return deletePolicy;
          }

          /**
           * Optional. Policy on how resources actuated by the deployment should be deleted. If
           * unspecified, the default behavior is to delete the underlying resources.
           */
          public Delete setDeletePolicy(java.lang.String deletePolicy) {
            this.deletePolicy = deletePolicy;
            return this;
          }

          /**
           * Optional. If set to true, any revisions for this deployment will also be deleted.
           * (Otherwise, the request will only work if the deployment has no revisions.)
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean force;

          /** Optional. If set to true, any revisions for this deployment will also be deleted. (Otherwise, the
         request will only work if the deployment has no revisions.)
           */
          public java.lang.Boolean getForce() {
            return force;
          }

          /**
           * Optional. If set to true, any revisions for this deployment will also be deleted.
           * (Otherwise, the request will only work if the deployment has no revisions.)
           */
          public Delete setForce(java.lang.Boolean force) {
            this.force = force;
            return this;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * after the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. An optional request ID to identify requests. Specify a unique request ID so that if you
         must retry your request, the server will know to ignore the request if it has already been
         completed. The server will guarantee that for at least 60 minutes after the first request. For
         example, consider a situation where you make an initial request and the request times out. If you
         make the request again with the same request ID, the server can check if original operation with
         the same request ID was received, and if so, will ignore the second request. This prevents clients
         from accidentally creating duplicate commitments. The request ID must be a valid UUID with the
         exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * after the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public Delete setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Deletes Terraform state file in a given deployment.
         *
         * Create a request for the method "deployments.deleteState".
         *
         * This request holds the parameters needed by the config server.  After setting any optional
         * parameters, call the {@link DeleteState#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the deployment in the format:
         *        'projects/{project_id}/locations/{location}/deployments/{deployment}'.
         * @param content the {@link com.google.api.services.config.v1.model.DeleteStatefileRequest}
         * @return the request
         */
        public DeleteState deleteState(java.lang.String name, com.google.api.services.config.v1.model.DeleteStatefileRequest content) throws java.io.IOException {
          DeleteState result = new DeleteState(name, content);
          initialize(result);
          return result;
        }

        public class DeleteState extends ConfigRequest<com.google.api.services.config.v1.model.Empty> {

          private static final String REST_PATH = "v1/{+name}:deleteState";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/deployments/[^/]+$");

          /**
           * Deletes Terraform state file in a given deployment.
           *
           * Create a request for the method "deployments.deleteState".
           *
           * This request holds the parameters needed by the the config server.  After setting any optional
           * parameters, call the {@link DeleteState#execute()} method to invoke the remote operation. <p>
           * {@link
           * DeleteState#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the deployment in the format:
         *        'projects/{project_id}/locations/{location}/deployments/{deployment}'.
           * @param content the {@link com.google.api.services.config.v1.model.DeleteStatefileRequest}
           * @since 1.13
           */
          protected DeleteState(java.lang.String name, com.google.api.services.config.v1.model.DeleteStatefileRequest content) {
            super(Config.this, "POST", REST_PATH, content, com.google.api.services.config.v1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/deployments/[^/]+$");
            }
          }

          @Override
          public DeleteState set$Xgafv(java.lang.String $Xgafv) {
            return (DeleteState) super.set$Xgafv($Xgafv);
          }

          @Override
          public DeleteState setAccessToken(java.lang.String accessToken) {
            return (DeleteState) super.setAccessToken(accessToken);
          }

          @Override
          public DeleteState setAlt(java.lang.String alt) {
            return (DeleteState) super.setAlt(alt);
          }

          @Override
          public DeleteState setCallback(java.lang.String callback) {
            return (DeleteState) super.setCallback(callback);
          }

          @Override
          public DeleteState setFields(java.lang.String fields) {
            return (DeleteState) super.setFields(fields);
          }

          @Override
          public DeleteState setKey(java.lang.String key) {
            return (DeleteState) super.setKey(key);
          }

          @Override
          public DeleteState setOauthToken(java.lang.String oauthToken) {
            return (DeleteState) super.setOauthToken(oauthToken);
          }

          @Override
          public DeleteState setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (DeleteState) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public DeleteState setQuotaUser(java.lang.String quotaUser) {
            return (DeleteState) super.setQuotaUser(quotaUser);
          }

          @Override
          public DeleteState setUploadType(java.lang.String uploadType) {
            return (DeleteState) super.setUploadType(uploadType);
          }

          @Override
          public DeleteState setUploadProtocol(java.lang.String uploadProtocol) {
            return (DeleteState) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the deployment in the format:
           * 'projects/{project_id}/locations/{location}/deployments/{deployment}'.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the deployment in the format:
         'projects/{project_id}/locations/{location}/deployments/{deployment}'.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the deployment in the format:
           * 'projects/{project_id}/locations/{location}/deployments/{deployment}'.
           */
          public DeleteState setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/deployments/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public DeleteState set(String parameterName, Object value) {
            return (DeleteState) super.set(parameterName, value);
          }
        }
        /**
         * Exports the lock info on a locked deployment.
         *
         * Create a request for the method "deployments.exportLock".
         *
         * This request holds the parameters needed by the config server.  After setting any optional
         * parameters, call the {@link ExportLock#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the deployment in the format:
         *        'projects/{project_id}/locations/{location}/deployments/{deployment}'.
         * @return the request
         */
        public ExportLock exportLock(java.lang.String name) throws java.io.IOException {
          ExportLock result = new ExportLock(name);
          initialize(result);
          return result;
        }

        public class ExportLock extends ConfigRequest<com.google.api.services.config.v1.model.LockInfo> {

          private static final String REST_PATH = "v1/{+name}:exportLock";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/deployments/[^/]+$");

          /**
           * Exports the lock info on a locked deployment.
           *
           * Create a request for the method "deployments.exportLock".
           *
           * This request holds the parameters needed by the the config server.  After setting any optional
           * parameters, call the {@link ExportLock#execute()} method to invoke the remote operation. <p>
           * {@link
           * ExportLock#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the deployment in the format:
         *        'projects/{project_id}/locations/{location}/deployments/{deployment}'.
           * @since 1.13
           */
          protected ExportLock(java.lang.String name) {
            super(Config.this, "GET", REST_PATH, null, com.google.api.services.config.v1.model.LockInfo.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/deployments/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public ExportLock set$Xgafv(java.lang.String $Xgafv) {
            return (ExportLock) super.set$Xgafv($Xgafv);
          }

          @Override
          public ExportLock setAccessToken(java.lang.String accessToken) {
            return (ExportLock) super.setAccessToken(accessToken);
          }

          @Override
          public ExportLock setAlt(java.lang.String alt) {
            return (ExportLock) super.setAlt(alt);
          }

          @Override
          public ExportLock setCallback(java.lang.String callback) {
            return (ExportLock) super.setCallback(callback);
          }

          @Override
          public ExportLock setFields(java.lang.String fields) {
            return (ExportLock) super.setFields(fields);
          }

          @Override
          public ExportLock setKey(java.lang.String key) {
            return (ExportLock) super.setKey(key);
          }

          @Override
          public ExportLock setOauthToken(java.lang.String oauthToken) {
            return (ExportLock) super.setOauthToken(oauthToken);
          }

          @Override
          public ExportLock setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (ExportLock) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public ExportLock setQuotaUser(java.lang.String quotaUser) {
            return (ExportLock) super.setQuotaUser(quotaUser);
          }

          @Override
          public ExportLock setUploadType(java.lang.String uploadType) {
            return (ExportLock) super.setUploadType(uploadType);
          }

          @Override
          public ExportLock setUploadProtocol(java.lang.String uploadProtocol) {
            return (ExportLock) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the deployment in the format:
           * 'projects/{project_id}/locations/{location}/deployments/{deployment}'.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the deployment in the format:
         'projects/{project_id}/locations/{location}/deployments/{deployment}'.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the deployment in the format:
           * 'projects/{project_id}/locations/{location}/deployments/{deployment}'.
           */
          public ExportLock setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/deployments/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public ExportLock set(String parameterName, Object value) {
            return (ExportLock) super.set(parameterName, value);
          }
        }
        /**
         * Exports Terraform state file from a given deployment.
         *
         * Create a request for the method "deployments.exportState".
         *
         * This request holds the parameters needed by the config server.  After setting any optional
         * parameters, call the {@link ExportState#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent in whose context the statefile is listed. The parent value is in the format:
         *        'projects/{project_id}/locations/{location}/deployments/{deployment}'.
         * @param content the {@link com.google.api.services.config.v1.model.ExportDeploymentStatefileRequest}
         * @return the request
         */
        public ExportState exportState(java.lang.String parent, com.google.api.services.config.v1.model.ExportDeploymentStatefileRequest content) throws java.io.IOException {
          ExportState result = new ExportState(parent, content);
          initialize(result);
          return result;
        }

        public class ExportState extends ConfigRequest<com.google.api.services.config.v1.model.Statefile> {

          private static final String REST_PATH = "v1/{+parent}:exportState";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/deployments/[^/]+$");

          /**
           * Exports Terraform state file from a given deployment.
           *
           * Create a request for the method "deployments.exportState".
           *
           * This request holds the parameters needed by the the config server.  After setting any optional
           * parameters, call the {@link ExportState#execute()} method to invoke the remote operation. <p>
           * {@link
           * ExportState#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent in whose context the statefile is listed. The parent value is in the format:
         *        'projects/{project_id}/locations/{location}/deployments/{deployment}'.
           * @param content the {@link com.google.api.services.config.v1.model.ExportDeploymentStatefileRequest}
           * @since 1.13
           */
          protected ExportState(java.lang.String parent, com.google.api.services.config.v1.model.ExportDeploymentStatefileRequest content) {
            super(Config.this, "POST", REST_PATH, content, com.google.api.services.config.v1.model.Statefile.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/deployments/[^/]+$");
            }
          }

          @Override
          public ExportState set$Xgafv(java.lang.String $Xgafv) {
            return (ExportState) super.set$Xgafv($Xgafv);
          }

          @Override
          public ExportState setAccessToken(java.lang.String accessToken) {
            return (ExportState) super.setAccessToken(accessToken);
          }

          @Override
          public ExportState setAlt(java.lang.String alt) {
            return (ExportState) super.setAlt(alt);
          }

          @Override
          public ExportState setCallback(java.lang.String callback) {
            return (ExportState) super.setCallback(callback);
          }

          @Override
          public ExportState setFields(java.lang.String fields) {
            return (ExportState) super.setFields(fields);
          }

          @Override
          public ExportState setKey(java.lang.String key) {
            return (ExportState) super.setKey(key);
          }

          @Override
          public ExportState setOauthToken(java.lang.String oauthToken) {
            return (ExportState) super.setOauthToken(oauthToken);
          }

          @Override
          public ExportState setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (ExportState) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public ExportState setQuotaUser(java.lang.String quotaUser) {
            return (ExportState) super.setQuotaUser(quotaUser);
          }

          @Override
          public ExportState setUploadType(java.lang.String uploadType) {
            return (ExportState) super.setUploadType(uploadType);
          }

          @Override
          public ExportState setUploadProtocol(java.lang.String uploadProtocol) {
            return (ExportState) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent in whose context the statefile is listed. The parent value is in
           * the format: 'projects/{project_id}/locations/{location}/deployments/{deployment}'.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent in whose context the statefile is listed. The parent value is in the format:
         'projects/{project_id}/locations/{location}/deployments/{deployment}'.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent in whose context the statefile is listed. The parent value is in
           * the format: 'projects/{project_id}/locations/{location}/deployments/{deployment}'.
           */
          public ExportState setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/deployments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public ExportState set(String parameterName, Object value) {
            return (ExportState) super.set(parameterName, value);
          }
        }
        /**
         * Gets details about a Deployment.
         *
         * Create a request for the method "deployments.get".
         *
         * This request holds the parameters needed by the config server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the deployment. Format:
         *        'projects/{project_id}/locations/{location}/deployments/{deployment}'.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ConfigRequest<com.google.api.services.config.v1.model.Deployment> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/deployments/[^/]+$");

          /**
           * Gets details about a Deployment.
           *
           * Create a request for the method "deployments.get".
           *
           * This request holds the parameters needed by the the config server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the deployment. Format:
         *        'projects/{project_id}/locations/{location}/deployments/{deployment}'.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Config.this, "GET", REST_PATH, null, com.google.api.services.config.v1.model.Deployment.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/deployments/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the deployment. Format:
           * 'projects/{project_id}/locations/{location}/deployments/{deployment}'.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the deployment. Format:
         'projects/{project_id}/locations/{location}/deployments/{deployment}'.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the deployment. Format:
           * 'projects/{project_id}/locations/{location}/deployments/{deployment}'.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/deployments/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
         * does not have a policy set.
         *
         * Create a request for the method "deployments.getIamPolicy".
         *
         * This request holds the parameters needed by the config server.  After setting any optional
         * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @return the request
         */
        public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
          GetIamPolicy result = new GetIamPolicy(resource);
          initialize(result);
          return result;
        }

        public class GetIamPolicy extends ConfigRequest<com.google.api.services.config.v1.model.Policy> {

          private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/deployments/[^/]+$");

          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists
           * and does not have a policy set.
           *
           * Create a request for the method "deployments.getIamPolicy".
           *
           * This request holds the parameters needed by the the config server.  After setting any optional
           * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation. <p>
           * {@link
           * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @since 1.13
           */
          protected GetIamPolicy(java.lang.String resource) {
            super(Config.this, "GET", REST_PATH, null, com.google.api.services.config.v1.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/deployments/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (GetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (GetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public GetIamPolicy setAlt(java.lang.String alt) {
            return (GetIamPolicy) super.setAlt(alt);
          }

          @Override
          public GetIamPolicy setCallback(java.lang.String callback) {
            return (GetIamPolicy) super.setCallback(callback);
          }

          @Override
          public GetIamPolicy setFields(java.lang.String fields) {
            return (GetIamPolicy) super.setFields(fields);
          }

          @Override
          public GetIamPolicy setKey(java.lang.String key) {
            return (GetIamPolicy) super.setKey(key);
          }

          @Override
          public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (GetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (GetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetIamPolicy setUploadType(java.lang.String uploadType) {
            return (GetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public GetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/deployments/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          @com.google.api.client.util.Key("options.requestedPolicyVersion")
          private java.lang.Integer optionsRequestedPolicyVersion;

          /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1,
         and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
         conditional role bindings must specify version 3. Policies with no conditional role bindings may
         specify any valid value or leave the field unset. The policy in the response might use the policy
         version that you specified, or it might use a lower policy version. For example, if you specify
         version 3, but the policy has no conditional role bindings, the response uses version 1. To learn
         which resources support conditions in their IAM policies, see the [IAM
         documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public java.lang.Integer getOptionsRequestedPolicyVersion() {
            return optionsRequestedPolicyVersion;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
            this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
            return this;
          }

          @Override
          public GetIamPolicy set(String parameterName, Object value) {
            return (GetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Imports Terraform state file in a given deployment. The state file does not take effect until the
         * Deployment has been unlocked.
         *
         * Create a request for the method "deployments.importState".
         *
         * This request holds the parameters needed by the config server.  After setting any optional
         * parameters, call the {@link ImportState#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent in whose context the statefile is listed. The parent value is in the format:
         *        'projects/{project_id}/locations/{location}/deployments/{deployment}'.
         * @param content the {@link com.google.api.services.config.v1.model.ImportStatefileRequest}
         * @return the request
         */
        public ImportState importState(java.lang.String parent, com.google.api.services.config.v1.model.ImportStatefileRequest content) throws java.io.IOException {
          ImportState result = new ImportState(parent, content);
          initialize(result);
          return result;
        }

        public class ImportState extends ConfigRequest<com.google.api.services.config.v1.model.Statefile> {

          private static final String REST_PATH = "v1/{+parent}:importState";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/deployments/[^/]+$");

          /**
           * Imports Terraform state file in a given deployment. The state file does not take effect until
           * the Deployment has been unlocked.
           *
           * Create a request for the method "deployments.importState".
           *
           * This request holds the parameters needed by the the config server.  After setting any optional
           * parameters, call the {@link ImportState#execute()} method to invoke the remote operation. <p>
           * {@link
           * ImportState#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent in whose context the statefile is listed. The parent value is in the format:
         *        'projects/{project_id}/locations/{location}/deployments/{deployment}'.
           * @param content the {@link com.google.api.services.config.v1.model.ImportStatefileRequest}
           * @since 1.13
           */
          protected ImportState(java.lang.String parent, com.google.api.services.config.v1.model.ImportStatefileRequest content) {
            super(Config.this, "POST", REST_PATH, content, com.google.api.services.config.v1.model.Statefile.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/deployments/[^/]+$");
            }
          }

          @Override
          public ImportState set$Xgafv(java.lang.String $Xgafv) {
            return (ImportState) super.set$Xgafv($Xgafv);
          }

          @Override
          public ImportState setAccessToken(java.lang.String accessToken) {
            return (ImportState) super.setAccessToken(accessToken);
          }

          @Override
          public ImportState setAlt(java.lang.String alt) {
            return (ImportState) super.setAlt(alt);
          }

          @Override
          public ImportState setCallback(java.lang.String callback) {
            return (ImportState) super.setCallback(callback);
          }

          @Override
          public ImportState setFields(java.lang.String fields) {
            return (ImportState) super.setFields(fields);
          }

          @Override
          public ImportState setKey(java.lang.String key) {
            return (ImportState) super.setKey(key);
          }

          @Override
          public ImportState setOauthToken(java.lang.String oauthToken) {
            return (ImportState) super.setOauthToken(oauthToken);
          }

          @Override
          public ImportState setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (ImportState) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public ImportState setQuotaUser(java.lang.String quotaUser) {
            return (ImportState) super.setQuotaUser(quotaUser);
          }

          @Override
          public ImportState setUploadType(java.lang.String uploadType) {
            return (ImportState) super.setUploadType(uploadType);
          }

          @Override
          public ImportState setUploadProtocol(java.lang.String uploadProtocol) {
            return (ImportState) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent in whose context the statefile is listed. The parent value is in
           * the format: 'projects/{project_id}/locations/{location}/deployments/{deployment}'.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent in whose context the statefile is listed. The parent value is in the format:
         'projects/{project_id}/locations/{location}/deployments/{deployment}'.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent in whose context the statefile is listed. The parent value is in
           * the format: 'projects/{project_id}/locations/{location}/deployments/{deployment}'.
           */
          public ImportState setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/deployments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public ImportState set(String parameterName, Object value) {
            return (ImportState) super.set(parameterName, value);
          }
        }
        /**
         * Lists Deployments in a given project and location.
         *
         * Create a request for the method "deployments.list".
         *
         * This request holds the parameters needed by the config server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent in whose context the Deployments are listed. The parent value is in the format:
         *        'projects/{project_id}/locations/{location}'.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ConfigRequest<com.google.api.services.config.v1.model.ListDeploymentsResponse> {

          private static final String REST_PATH = "v1/{+parent}/deployments";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists Deployments in a given project and location.
           *
           * Create a request for the method "deployments.list".
           *
           * This request holds the parameters needed by the the config server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent in whose context the Deployments are listed. The parent value is in the format:
         *        'projects/{project_id}/locations/{location}'.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Config.this, "GET", REST_PATH, null, com.google.api.services.config.v1.model.ListDeploymentsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent in whose context the Deployments are listed. The parent value is
           * in the format: 'projects/{project_id}/locations/{location}'.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent in whose context the Deployments are listed. The parent value is in the
         format: 'projects/{project_id}/locations/{location}'.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent in whose context the Deployments are listed. The parent value is
           * in the format: 'projects/{project_id}/locations/{location}'.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Lists the Deployments that match the filter expression. A filter expression filters the
           * resources listed in the response. The expression must be of the form '{field}
           * {operator} {value}' where operators: '<', '>', '<=', '>=', '!=', '=', ':' are supported
           * (colon ':' represents a HAS operator which is roughly synonymous with equality).
           * {field} can refer to a proto or JSON field, or a synthetic field. Field names can be
           * camelCase or snake_case. Examples: - Filter by name: name = "projects/foo/locations/us-
           * central1/deployments/bar - Filter by labels: - Resources that have a key called 'foo'
           * labels.foo:* - Resources that have a key called 'foo' whose value is 'bar' labels.foo =
           * bar - Filter by state: - Deployments in CREATING state. state=CREATING
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Lists the Deployments that match the filter expression. A filter expression filters the resources
         listed in the response. The expression must be of the form '{field} {operator} {value}' where
         operators: '<', '>', '<=', '>=', '!=', '=', ':' are supported (colon ':' represents a HAS operator
         which is roughly synonymous with equality). {field} can refer to a proto or JSON field, or a
         synthetic field. Field names can be camelCase or snake_case. Examples: - Filter by name: name =
         "projects/foo/locations/us-central1/deployments/bar - Filter by labels: - Resources that have a key
         called 'foo' labels.foo:* - Resources that have a key called 'foo' whose value is 'bar' labels.foo
         = bar - Filter by state: - Deployments in CREATING state. state=CREATING
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * Lists the Deployments that match the filter expression. A filter expression filters the
           * resources listed in the response. The expression must be of the form '{field}
           * {operator} {value}' where operators: '<', '>', '<=', '>=', '!=', '=', ':' are supported
           * (colon ':' represents a HAS operator which is roughly synonymous with equality).
           * {field} can refer to a proto or JSON field, or a synthetic field. Field names can be
           * camelCase or snake_case. Examples: - Filter by name: name = "projects/foo/locations/us-
           * central1/deployments/bar - Filter by labels: - Resources that have a key called 'foo'
           * labels.foo:* - Resources that have a key called 'foo' whose value is 'bar' labels.foo =
           * bar - Filter by state: - Deployments in CREATING state. state=CREATING
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** Field to use to sort the list. */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Field to use to sort the list.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /** Field to use to sort the list. */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /**
           * When requesting a page of resources, 'page_size' specifies number of resources to
           * return. If unspecified, at most 500 will be returned. The maximum value is 1000.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** When requesting a page of resources, 'page_size' specifies number of resources to return. If
         unspecified, at most 500 will be returned. The maximum value is 1000.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * When requesting a page of resources, 'page_size' specifies number of resources to
           * return. If unspecified, at most 500 will be returned. The maximum value is 1000.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Token returned by previous call to 'ListDeployments' which specifies the position in
           * the list from where to continue listing the resources.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Token returned by previous call to 'ListDeployments' which specifies the position in the list from
         where to continue listing the resources.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Token returned by previous call to 'ListDeployments' which specifies the position in
           * the list from where to continue listing the resources.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Locks a deployment.
         *
         * Create a request for the method "deployments.lock".
         *
         * This request holds the parameters needed by the config server.  After setting any optional
         * parameters, call the {@link Lock#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the deployment in the format:
         *        'projects/{project_id}/locations/{location}/deployments/{deployment}'.
         * @param content the {@link com.google.api.services.config.v1.model.LockDeploymentRequest}
         * @return the request
         */
        public Lock lock(java.lang.String name, com.google.api.services.config.v1.model.LockDeploymentRequest content) throws java.io.IOException {
          Lock result = new Lock(name, content);
          initialize(result);
          return result;
        }

        public class Lock extends ConfigRequest<com.google.api.services.config.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+name}:lock";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/deployments/[^/]+$");

          /**
           * Locks a deployment.
           *
           * Create a request for the method "deployments.lock".
           *
           * This request holds the parameters needed by the the config server.  After setting any optional
           * parameters, call the {@link Lock#execute()} method to invoke the remote operation. <p> {@link
           * Lock#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the deployment in the format:
         *        'projects/{project_id}/locations/{location}/deployments/{deployment}'.
           * @param content the {@link com.google.api.services.config.v1.model.LockDeploymentRequest}
           * @since 1.13
           */
          protected Lock(java.lang.String name, com.google.api.services.config.v1.model.LockDeploymentRequest content) {
            super(Config.this, "POST", REST_PATH, content, com.google.api.services.config.v1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/deployments/[^/]+$");
            }
          }

          @Override
          public Lock set$Xgafv(java.lang.String $Xgafv) {
            return (Lock) super.set$Xgafv($Xgafv);
          }

          @Override
          public Lock setAccessToken(java.lang.String accessToken) {
            return (Lock) super.setAccessToken(accessToken);
          }

          @Override
          public Lock setAlt(java.lang.String alt) {
            return (Lock) super.setAlt(alt);
          }

          @Override
          public Lock setCallback(java.lang.String callback) {
            return (Lock) super.setCallback(callback);
          }

          @Override
          public Lock setFields(java.lang.String fields) {
            return (Lock) super.setFields(fields);
          }

          @Override
          public Lock setKey(java.lang.String key) {
            return (Lock) super.setKey(key);
          }

          @Override
          public Lock setOauthToken(java.lang.String oauthToken) {
            return (Lock) super.setOauthToken(oauthToken);
          }

          @Override
          public Lock setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Lock) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Lock setQuotaUser(java.lang.String quotaUser) {
            return (Lock) super.setQuotaUser(quotaUser);
          }

          @Override
          public Lock setUploadType(java.lang.String uploadType) {
            return (Lock) super.setUploadType(uploadType);
          }

          @Override
          public Lock setUploadProtocol(java.lang.String uploadProtocol) {
            return (Lock) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the deployment in the format:
           * 'projects/{project_id}/locations/{location}/deployments/{deployment}'.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the deployment in the format:
         'projects/{project_id}/locations/{location}/deployments/{deployment}'.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the deployment in the format:
           * 'projects/{project_id}/locations/{location}/deployments/{deployment}'.
           */
          public Lock setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/deployments/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Lock set(String parameterName, Object value) {
            return (Lock) super.set(parameterName, value);
          }
        }
        /**
         * Updates a Deployment.
         *
         * Create a request for the method "deployments.patch".
         *
         * This request holds the parameters needed by the config server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Resource name of the deployment. Format:
         *        `projects/{project}/locations/{location}/deployments/{deployment}`
         * @param content the {@link com.google.api.services.config.v1.model.Deployment}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.config.v1.model.Deployment content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends ConfigRequest<com.google.api.services.config.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/deployments/[^/]+$");

          /**
           * Updates a Deployment.
           *
           * Create a request for the method "deployments.patch".
           *
           * This request holds the parameters needed by the the config server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Resource name of the deployment. Format:
         *        `projects/{project}/locations/{location}/deployments/{deployment}`
           * @param content the {@link com.google.api.services.config.v1.model.Deployment}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.config.v1.model.Deployment content) {
            super(Config.this, "PATCH", REST_PATH, content, com.google.api.services.config.v1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/deployments/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Resource name of the deployment. Format:
           * `projects/{project}/locations/{location}/deployments/{deployment}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Resource name of the deployment. Format:
         `projects/{project}/locations/{location}/deployments/{deployment}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Resource name of the deployment. Format:
           * `projects/{project}/locations/{location}/deployments/{deployment}`
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/deployments/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * since the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. An optional request ID to identify requests. Specify a unique request ID so that if you
         must retry your request, the server will know to ignore the request if it has already been
         completed. The server will guarantee that for at least 60 minutes since the first request. For
         example, consider a situation where you make an initial request and the request times out. If you
         make the request again with the same request ID, the server can check if original operation with
         the same request ID was received, and if so, will ignore the second request. This prevents clients
         from accidentally creating duplicate commitments. The request ID must be a valid UUID with the
         exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * since the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public Patch setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * Optional. Field mask used to specify the fields to be overwritten in the Deployment
           * resource by the update. The fields specified in the update_mask are relative to the
           * resource, not the full request. A field will be overwritten if it is in the mask. If
           * the user does not provide a mask then all fields will be overwritten.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Optional. Field mask used to specify the fields to be overwritten in the Deployment resource by the
         update. The fields specified in the update_mask are relative to the resource, not the full request.
         A field will be overwritten if it is in the mask. If the user does not provide a mask then all
         fields will be overwritten.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Optional. Field mask used to specify the fields to be overwritten in the Deployment
           * resource by the update. The fields specified in the update_mask are relative to the
           * resource, not the full request. A field will be overwritten if it is in the mask. If
           * the user does not provide a mask then all fields will be overwritten.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Sets the access control policy on the specified resource. Replaces any existing policy. Can
         * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
         *
         * Create a request for the method "deployments.setIamPolicy".
         *
         * This request holds the parameters needed by the config server.  After setting any optional
         * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @param content the {@link com.google.api.services.config.v1.model.SetIamPolicyRequest}
         * @return the request
         */
        public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.config.v1.model.SetIamPolicyRequest content) throws java.io.IOException {
          SetIamPolicy result = new SetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class SetIamPolicy extends ConfigRequest<com.google.api.services.config.v1.model.Policy> {

          private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/deployments/[^/]+$");

          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy. Can
           * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
           *
           * Create a request for the method "deployments.setIamPolicy".
           *
           * This request holds the parameters needed by the the config server.  After setting any optional
           * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation. <p>
           * {@link
           * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @param content the {@link com.google.api.services.config.v1.model.SetIamPolicyRequest}
           * @since 1.13
           */
          protected SetIamPolicy(java.lang.String resource, com.google.api.services.config.v1.model.SetIamPolicyRequest content) {
            super(Config.this, "POST", REST_PATH, content, com.google.api.services.config.v1.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/deployments/[^/]+$");
            }
          }

          @Override
          public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (SetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public SetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (SetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public SetIamPolicy setAlt(java.lang.String alt) {
            return (SetIamPolicy) super.setAlt(alt);
          }

          @Override
          public SetIamPolicy setCallback(java.lang.String callback) {
            return (SetIamPolicy) super.setCallback(callback);
          }

          @Override
          public SetIamPolicy setFields(java.lang.String fields) {
            return (SetIamPolicy) super.setFields(fields);
          }

          @Override
          public SetIamPolicy setKey(java.lang.String key) {
            return (SetIamPolicy) super.setKey(key);
          }

          @Override
          public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (SetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (SetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public SetIamPolicy setUploadType(java.lang.String uploadType) {
            return (SetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being specified. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public SetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/deployments/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public SetIamPolicy set(String parameterName, Object value) {
            return (SetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Returns permissions that a caller has on the specified resource. If the resource does not exist,
         * this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
         * designed to be used for building permission-aware UIs and command-line tools, not for
         * authorization checking. This operation may "fail open" without warning.
         *
         * Create a request for the method "deployments.testIamPermissions".
         *
         * This request holds the parameters needed by the config server.  After setting any optional
         * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @param content the {@link com.google.api.services.config.v1.model.TestIamPermissionsRequest}
         * @return the request
         */
        public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.config.v1.model.TestIamPermissionsRequest content) throws java.io.IOException {
          TestIamPermissions result = new TestIamPermissions(resource, content);
          initialize(result);
          return result;
        }

        public class TestIamPermissions extends ConfigRequest<com.google.api.services.config.v1.model.TestIamPermissionsResponse> {

          private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/deployments/[^/]+$");

          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not
           * exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This
           * operation is designed to be used for building permission-aware UIs and command-line tools, not
           * for authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "deployments.testIamPermissions".
           *
           * This request holds the parameters needed by the the config server.  After setting any optional
           * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
           * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
           * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @param content the {@link com.google.api.services.config.v1.model.TestIamPermissionsRequest}
           * @since 1.13
           */
          protected TestIamPermissions(java.lang.String resource, com.google.api.services.config.v1.model.TestIamPermissionsRequest content) {
            super(Config.this, "POST", REST_PATH, content, com.google.api.services.config.v1.model.TestIamPermissionsResponse.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/deployments/[^/]+$");
            }
          }

          @Override
          public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
            return (TestIamPermissions) super.set$Xgafv($Xgafv);
          }

          @Override
          public TestIamPermissions setAccessToken(java.lang.String accessToken) {
            return (TestIamPermissions) super.setAccessToken(accessToken);
          }

          @Override
          public TestIamPermissions setAlt(java.lang.String alt) {
            return (TestIamPermissions) super.setAlt(alt);
          }

          @Override
          public TestIamPermissions setCallback(java.lang.String callback) {
            return (TestIamPermissions) super.setCallback(callback);
          }

          @Override
          public TestIamPermissions setFields(java.lang.String fields) {
            return (TestIamPermissions) super.setFields(fields);
          }

          @Override
          public TestIamPermissions setKey(java.lang.String key) {
            return (TestIamPermissions) super.setKey(key);
          }

          @Override
          public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
            return (TestIamPermissions) super.setOauthToken(oauthToken);
          }

          @Override
          public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
            return (TestIamPermissions) super.setQuotaUser(quotaUser);
          }

          @Override
          public TestIamPermissions setUploadType(java.lang.String uploadType) {
            return (TestIamPermissions) super.setUploadType(uploadType);
          }

          @Override
          public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
            return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public TestIamPermissions setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/deployments/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public TestIamPermissions set(String parameterName, Object value) {
            return (TestIamPermissions) super.set(parameterName, value);
          }
        }
        /**
         * Unlocks a locked deployment.
         *
         * Create a request for the method "deployments.unlock".
         *
         * This request holds the parameters needed by the config server.  After setting any optional
         * parameters, call the {@link Unlock#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the deployment in the format:
         *        'projects/{project_id}/locations/{location}/deployments/{deployment}'.
         * @param content the {@link com.google.api.services.config.v1.model.UnlockDeploymentRequest}
         * @return the request
         */
        public Unlock unlock(java.lang.String name, com.google.api.services.config.v1.model.UnlockDeploymentRequest content) throws java.io.IOException {
          Unlock result = new Unlock(name, content);
          initialize(result);
          return result;
        }

        public class Unlock extends ConfigRequest<com.google.api.services.config.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+name}:unlock";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/deployments/[^/]+$");

          /**
           * Unlocks a locked deployment.
           *
           * Create a request for the method "deployments.unlock".
           *
           * This request holds the parameters needed by the the config server.  After setting any optional
           * parameters, call the {@link Unlock#execute()} method to invoke the remote operation. <p> {@link
           * Unlock#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the deployment in the format:
         *        'projects/{project_id}/locations/{location}/deployments/{deployment}'.
           * @param content the {@link com.google.api.services.config.v1.model.UnlockDeploymentRequest}
           * @since 1.13
           */
          protected Unlock(java.lang.String name, com.google.api.services.config.v1.model.UnlockDeploymentRequest content) {
            super(Config.this, "POST", REST_PATH, content, com.google.api.services.config.v1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/deployments/[^/]+$");
            }
          }

          @Override
          public Unlock set$Xgafv(java.lang.String $Xgafv) {
            return (Unlock) super.set$Xgafv($Xgafv);
          }

          @Override
          public Unlock setAccessToken(java.lang.String accessToken) {
            return (Unlock) super.setAccessToken(accessToken);
          }

          @Override
          public Unlock setAlt(java.lang.String alt) {
            return (Unlock) super.setAlt(alt);
          }

          @Override
          public Unlock setCallback(java.lang.String callback) {
            return (Unlock) super.setCallback(callback);
          }

          @Override
          public Unlock setFields(java.lang.String fields) {
            return (Unlock) super.setFields(fields);
          }

          @Override
          public Unlock setKey(java.lang.String key) {
            return (Unlock) super.setKey(key);
          }

          @Override
          public Unlock setOauthToken(java.lang.String oauthToken) {
            return (Unlock) super.setOauthToken(oauthToken);
          }

          @Override
          public Unlock setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Unlock) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Unlock setQuotaUser(java.lang.String quotaUser) {
            return (Unlock) super.setQuotaUser(quotaUser);
          }

          @Override
          public Unlock setUploadType(java.lang.String uploadType) {
            return (Unlock) super.setUploadType(uploadType);
          }

          @Override
          public Unlock setUploadProtocol(java.lang.String uploadProtocol) {
            return (Unlock) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the deployment in the format:
           * 'projects/{project_id}/locations/{location}/deployments/{deployment}'.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the deployment in the format:
         'projects/{project_id}/locations/{location}/deployments/{deployment}'.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the deployment in the format:
           * 'projects/{project_id}/locations/{location}/deployments/{deployment}'.
           */
          public Unlock setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/deployments/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Unlock set(String parameterName, Object value) {
            return (Unlock) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Revisions collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Config config = new Config(...);}
         *   {@code Config.Revisions.List request = config.revisions().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Revisions revisions() {
          return new Revisions();
        }

        /**
         * The "revisions" collection of methods.
         */
        public class Revisions {

          /**
           * Exports Terraform state file from a given revision.
           *
           * Create a request for the method "revisions.exportState".
           *
           * This request holds the parameters needed by the config server.  After setting any optional
           * parameters, call the {@link ExportState#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The parent in whose context the statefile is listed. The parent value is in the format:
           *        'projects/{project_id}/locations/{location}/deployments/{deployment}/revisions/{revision}'
           *        .
           * @param content the {@link com.google.api.services.config.v1.model.ExportRevisionStatefileRequest}
           * @return the request
           */
          public ExportState exportState(java.lang.String parent, com.google.api.services.config.v1.model.ExportRevisionStatefileRequest content) throws java.io.IOException {
            ExportState result = new ExportState(parent, content);
            initialize(result);
            return result;
          }

          public class ExportState extends ConfigRequest<com.google.api.services.config.v1.model.Statefile> {

            private static final String REST_PATH = "v1/{+parent}:exportState";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/deployments/[^/]+/revisions/[^/]+$");

            /**
             * Exports Terraform state file from a given revision.
             *
             * Create a request for the method "revisions.exportState".
             *
             * This request holds the parameters needed by the the config server.  After setting any optional
             * parameters, call the {@link ExportState#execute()} method to invoke the remote operation. <p>
             * {@link
             * ExportState#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The parent in whose context the statefile is listed. The parent value is in the format:
           *        'projects/{project_id}/locations/{location}/deployments/{deployment}/revisions/{revision}'
           *        .
             * @param content the {@link com.google.api.services.config.v1.model.ExportRevisionStatefileRequest}
             * @since 1.13
             */
            protected ExportState(java.lang.String parent, com.google.api.services.config.v1.model.ExportRevisionStatefileRequest content) {
              super(Config.this, "POST", REST_PATH, content, com.google.api.services.config.v1.model.Statefile.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/deployments/[^/]+/revisions/[^/]+$");
              }
            }

            @Override
            public ExportState set$Xgafv(java.lang.String $Xgafv) {
              return (ExportState) super.set$Xgafv($Xgafv);
            }

            @Override
            public ExportState setAccessToken(java.lang.String accessToken) {
              return (ExportState) super.setAccessToken(accessToken);
            }

            @Override
            public ExportState setAlt(java.lang.String alt) {
              return (ExportState) super.setAlt(alt);
            }

            @Override
            public ExportState setCallback(java.lang.String callback) {
              return (ExportState) super.setCallback(callback);
            }

            @Override
            public ExportState setFields(java.lang.String fields) {
              return (ExportState) super.setFields(fields);
            }

            @Override
            public ExportState setKey(java.lang.String key) {
              return (ExportState) super.setKey(key);
            }

            @Override
            public ExportState setOauthToken(java.lang.String oauthToken) {
              return (ExportState) super.setOauthToken(oauthToken);
            }

            @Override
            public ExportState setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (ExportState) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public ExportState setQuotaUser(java.lang.String quotaUser) {
              return (ExportState) super.setQuotaUser(quotaUser);
            }

            @Override
            public ExportState setUploadType(java.lang.String uploadType) {
              return (ExportState) super.setUploadType(uploadType);
            }

            @Override
            public ExportState setUploadProtocol(java.lang.String uploadProtocol) {
              return (ExportState) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The parent in whose context the statefile is listed. The parent value is in
             * the format: 'projects/{project_id}/locations/{location}/deployments/{deployment}/revi
             * sions/{revision}'.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The parent in whose context the statefile is listed. The parent value is in the format:
           'projects/{project_id}/locations/{location}/deployments/{deployment}/revisions/{revision}'.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The parent in whose context the statefile is listed. The parent value is in
             * the format: 'projects/{project_id}/locations/{location}/deployments/{deployment}/revi
             * sions/{revision}'.
             */
            public ExportState setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/deployments/[^/]+/revisions/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public ExportState set(String parameterName, Object value) {
              return (ExportState) super.set(parameterName, value);
            }
          }
          /**
           * Gets details about a Revision.
           *
           * Create a request for the method "revisions.get".
           *
           * This request holds the parameters needed by the config server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the Revision in the format:
           *        'projects/{project_id}/locations/{location}/deployments/{deployment}/revisions/{revision}'
           *        .
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends ConfigRequest<com.google.api.services.config.v1.model.Revision> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/deployments/[^/]+/revisions/[^/]+$");

            /**
             * Gets details about a Revision.
             *
             * Create a request for the method "revisions.get".
             *
             * This request holds the parameters needed by the the config server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
             * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the Revision in the format:
           *        'projects/{project_id}/locations/{location}/deployments/{deployment}/revisions/{revision}'
           *        .
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Config.this, "GET", REST_PATH, null, com.google.api.services.config.v1.model.Revision.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/deployments/[^/]+/revisions/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the Revision in the format: 'projects/{project_id}/locations/{l
             * ocation}/deployments/{deployment}/revisions/{revision}'.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the Revision in the format:
           'projects/{project_id}/locations/{location}/deployments/{deployment}/revisions/{revision}'.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the Revision in the format: 'projects/{project_id}/locations/{l
             * ocation}/deployments/{deployment}/revisions/{revision}'.
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/deployments/[^/]+/revisions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists Revisions of a deployment.
           *
           * Create a request for the method "revisions.list".
           *
           * This request holds the parameters needed by the config server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The parent in whose context the Revisions are listed. The parent value is in the format:
           *        'projects/{project_id}/locations/{location}/deployments/{deployment}'.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends ConfigRequest<com.google.api.services.config.v1.model.ListRevisionsResponse> {

            private static final String REST_PATH = "v1/{+parent}/revisions";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/deployments/[^/]+$");

            /**
             * Lists Revisions of a deployment.
             *
             * Create a request for the method "revisions.list".
             *
             * This request holds the parameters needed by the the config server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The parent in whose context the Revisions are listed. The parent value is in the format:
           *        'projects/{project_id}/locations/{location}/deployments/{deployment}'.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Config.this, "GET", REST_PATH, null, com.google.api.services.config.v1.model.ListRevisionsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/deployments/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The parent in whose context the Revisions are listed. The parent value is
             * in the format: 'projects/{project_id}/locations/{location}/deployments/{deployment}'.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The parent in whose context the Revisions are listed. The parent value is in the format:
           'projects/{project_id}/locations/{location}/deployments/{deployment}'.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The parent in whose context the Revisions are listed. The parent value is
             * in the format: 'projects/{project_id}/locations/{location}/deployments/{deployment}'.
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/deployments/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Lists the Revisions that match the filter expression. A filter expression filters the
             * resources listed in the response. The expression must be of the form '{field}
             * {operator} {value}' where operators: '<', '>', '<=', '>=', '!=', '=', ':' are
             * supported (colon ':' represents a HAS operator which is roughly synonymous with
             * equality). {field} can refer to a proto or JSON field, or a synthetic field. Field
             * names can be camelCase or snake_case. Examples: - Filter by name: name =
             * "projects/foo/locations/us-central1/deployments/dep/revisions/bar - Filter by labels:
             * - Resources that have a key called 'foo' labels.foo:* - Resources that have a key
             * called 'foo' whose value is 'bar' labels.foo = bar - Filter by state: - Revisions in
             * CREATING state. state=CREATING
             */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Lists the Revisions that match the filter expression. A filter expression filters the resources
           listed in the response. The expression must be of the form '{field} {operator} {value}' where
           operators: '<', '>', '<=', '>=', '!=', '=', ':' are supported (colon ':' represents a HAS operator
           which is roughly synonymous with equality). {field} can refer to a proto or JSON field, or a
           synthetic field. Field names can be camelCase or snake_case. Examples: - Filter by name: name =
           "projects/foo/locations/us-central1/deployments/dep/revisions/bar - Filter by labels: - Resources
           that have a key called 'foo' labels.foo:* - Resources that have a key called 'foo' whose value is
           'bar' labels.foo = bar - Filter by state: - Revisions in CREATING state. state=CREATING
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /**
             * Lists the Revisions that match the filter expression. A filter expression filters the
             * resources listed in the response. The expression must be of the form '{field}
             * {operator} {value}' where operators: '<', '>', '<=', '>=', '!=', '=', ':' are
             * supported (colon ':' represents a HAS operator which is roughly synonymous with
             * equality). {field} can refer to a proto or JSON field, or a synthetic field. Field
             * names can be camelCase or snake_case. Examples: - Filter by name: name =
             * "projects/foo/locations/us-central1/deployments/dep/revisions/bar - Filter by labels:
             * - Resources that have a key called 'foo' labels.foo:* - Resources that have a key
             * called 'foo' whose value is 'bar' labels.foo = bar - Filter by state: - Revisions in
             * CREATING state. state=CREATING
             */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** Field to use to sort the list. */
            @com.google.api.client.util.Key
            private java.lang.String orderBy;

            /** Field to use to sort the list.
             */
            public java.lang.String getOrderBy() {
              return orderBy;
            }

            /** Field to use to sort the list. */
            public List setOrderBy(java.lang.String orderBy) {
              this.orderBy = orderBy;
              return this;
            }

            /**
             * When requesting a page of resources, `page_size` specifies number of resources to
             * return. If unspecified, at most 500 will be returned. The maximum value is 1000.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** When requesting a page of resources, `page_size` specifies number of resources to return. If
           unspecified, at most 500 will be returned. The maximum value is 1000.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * When requesting a page of resources, `page_size` specifies number of resources to
             * return. If unspecified, at most 500 will be returned. The maximum value is 1000.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * Token returned by previous call to 'ListRevisions' which specifies the position in
             * the list from where to continue listing the resources.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Token returned by previous call to 'ListRevisions' which specifies the position in the list from
           where to continue listing the resources.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * Token returned by previous call to 'ListRevisions' which specifies the position in
             * the list from where to continue listing the resources.
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the Resources collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Config config = new Config(...);}
           *   {@code Config.Resources.List request = config.resources().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Resources resources() {
            return new Resources();
          }

          /**
           * The "resources" collection of methods.
           */
          public class Resources {

            /**
             * Gets details about a Resource deployed by Infra Manager.
             *
             * Create a request for the method "resources.get".
             *
             * This request holds the parameters needed by the config server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name Required. The name of the Resource in the format: 'projects/{project_id}/locations/{location}/deploy
             *        ments/{deployment}/revisions/{revision}/resource/{resource}'.
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends ConfigRequest<com.google.api.services.config.v1.model.Resource> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/deployments/[^/]+/revisions/[^/]+/resources/[^/]+$");

              /**
               * Gets details about a Resource deployed by Infra Manager.
               *
               * Create a request for the method "resources.get".
               *
               * This request holds the parameters needed by the the config server.  After setting any optional
               * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
               * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
               * called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the Resource in the format: 'projects/{project_id}/locations/{location}/deploy
             *        ments/{deployment}/revisions/{revision}/resource/{resource}'.
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(Config.this, "GET", REST_PATH, null, com.google.api.services.config.v1.model.Resource.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/deployments/[^/]+/revisions/[^/]+/resources/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the Resource in the format: 'projects/{project_id}/locations/
               * {location}/deployments/{deployment}/revisions/{revision}/resource/{resource}'.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the Resource in the format: 'projects/{project_id}/locations/{location}/deplo
             yments/{deployment}/revisions/{revision}/resource/{resource}'.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The name of the Resource in the format: 'projects/{project_id}/locations/
               * {location}/deployments/{deployment}/revisions/{revision}/resource/{resource}'.
               */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/deployments/[^/]+/revisions/[^/]+/resources/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Lists Resources in a given revision.
             *
             * Create a request for the method "resources.list".
             *
             * This request holds the parameters needed by the config server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The parent in whose context the Resources are listed. The parent value is in the format:
             *        'projects/{project_id}/locations/{location}/deployments/{deployment}/revisions/{revision}'
             *        .
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends ConfigRequest<com.google.api.services.config.v1.model.ListResourcesResponse> {

              private static final String REST_PATH = "v1/{+parent}/resources";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/deployments/[^/]+/revisions/[^/]+$");

              /**
               * Lists Resources in a given revision.
               *
               * Create a request for the method "resources.list".
               *
               * This request holds the parameters needed by the the config server.  After setting any optional
               * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
               * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
               * called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The parent in whose context the Resources are listed. The parent value is in the format:
             *        'projects/{project_id}/locations/{location}/deployments/{deployment}/revisions/{revision}'
             *        .
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(Config.this, "GET", REST_PATH, null, com.google.api.services.config.v1.model.ListResourcesResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/deployments/[^/]+/revisions/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The parent in whose context the Resources are listed. The parent value is
               * in the format: 'projects/{project_id}/locations/{location}/deployments/{deployment}
               * /revisions/{revision}'.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The parent in whose context the Resources are listed. The parent value is in the format:
             'projects/{project_id}/locations/{location}/deployments/{deployment}/revisions/{revision}'.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The parent in whose context the Resources are listed. The parent value is
               * in the format: 'projects/{project_id}/locations/{location}/deployments/{deployment}
               * /revisions/{revision}'.
               */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/deployments/[^/]+/revisions/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Lists the Resources that match the filter expression. A filter expression filters
               * the resources listed in the response. The expression must be of the form '{field}
               * {operator} {value}' where operators: '<', '>', '<=', '>=', '!=', '=', ':' are
               * supported (colon ':' represents a HAS operator which is roughly synonymous with
               * equality). {field} can refer to a proto or JSON field, or a synthetic field. Field
               * names can be camelCase or snake_case. Examples: - Filter by name: name =
               * "projects/foo/locations/us-central1/deployments/dep/revisions/bar/resources/baz
               */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** Lists the Resources that match the filter expression. A filter expression filters the resources
             listed in the response. The expression must be of the form '{field} {operator} {value}' where
             operators: '<', '>', '<=', '>=', '!=', '=', ':' are supported (colon ':' represents a HAS operator
             which is roughly synonymous with equality). {field} can refer to a proto or JSON field, or a
             synthetic field. Field names can be camelCase or snake_case. Examples: - Filter by name: name =
             "projects/foo/locations/us-central1/deployments/dep/revisions/bar/resources/baz
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /**
               * Lists the Resources that match the filter expression. A filter expression filters
               * the resources listed in the response. The expression must be of the form '{field}
               * {operator} {value}' where operators: '<', '>', '<=', '>=', '!=', '=', ':' are
               * supported (colon ':' represents a HAS operator which is roughly synonymous with
               * equality). {field} can refer to a proto or JSON field, or a synthetic field. Field
               * names can be camelCase or snake_case. Examples: - Filter by name: name =
               * "projects/foo/locations/us-central1/deployments/dep/revisions/bar/resources/baz
               */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /** Field to use to sort the list. */
              @com.google.api.client.util.Key
              private java.lang.String orderBy;

              /** Field to use to sort the list.
               */
              public java.lang.String getOrderBy() {
                return orderBy;
              }

              /** Field to use to sort the list. */
              public List setOrderBy(java.lang.String orderBy) {
                this.orderBy = orderBy;
                return this;
              }

              /**
               * When requesting a page of resources, 'page_size' specifies number of resources to
               * return. If unspecified, at most 500 will be returned. The maximum value is 1000.
               */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** When requesting a page of resources, 'page_size' specifies number of resources to return. If
             unspecified, at most 500 will be returned. The maximum value is 1000.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /**
               * When requesting a page of resources, 'page_size' specifies number of resources to
               * return. If unspecified, at most 500 will be returned. The maximum value is 1000.
               */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /**
               * Token returned by previous call to 'ListResources' which specifies the position in
               * the list from where to continue listing the resources.
               */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** Token returned by previous call to 'ListResources' which specifies the position in the list from
             where to continue listing the resources.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /**
               * Token returned by previous call to 'ListResources' which specifies the position in
               * the list from where to continue listing the resources.
               */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }

          }
        }
      }
      /**
       * An accessor for creating requests from the Operations collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Config config = new Config(...);}
       *   {@code Config.Operations.List request = config.operations().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Operations operations() {
        return new Operations();
      }

      /**
       * The "operations" collection of methods.
       */
      public class Operations {

        /**
         * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
         * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
         * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
         * methods to check whether the cancellation succeeded or whether the operation completed despite
         * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
         * operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to
         * `Code.CANCELLED`.
         *
         * Create a request for the method "operations.cancel".
         *
         * This request holds the parameters needed by the config server.  After setting any optional
         * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource to be cancelled.
         * @param content the {@link com.google.api.services.config.v1.model.CancelOperationRequest}
         * @return the request
         */
        public Cancel cancel(java.lang.String name, com.google.api.services.config.v1.model.CancelOperationRequest content) throws java.io.IOException {
          Cancel result = new Cancel(name, content);
          initialize(result);
          return result;
        }

        public class Cancel extends ConfigRequest<com.google.api.services.config.v1.model.Empty> {

          private static final String REST_PATH = "v1/{+name}:cancel";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
           * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
           * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
           * methods to check whether the cancellation succeeded or whether the operation completed despite
           * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
           * operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to
           * `Code.CANCELLED`.
           *
           * Create a request for the method "operations.cancel".
           *
           * This request holds the parameters needed by the the config server.  After setting any optional
           * parameters, call the {@link Cancel#execute()} method to invoke the remote operation. <p> {@link
           * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource to be cancelled.
           * @param content the {@link com.google.api.services.config.v1.model.CancelOperationRequest}
           * @since 1.13
           */
          protected Cancel(java.lang.String name, com.google.api.services.config.v1.model.CancelOperationRequest content) {
            super(Config.this, "POST", REST_PATH, content, com.google.api.services.config.v1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public Cancel set$Xgafv(java.lang.String $Xgafv) {
            return (Cancel) super.set$Xgafv($Xgafv);
          }

          @Override
          public Cancel setAccessToken(java.lang.String accessToken) {
            return (Cancel) super.setAccessToken(accessToken);
          }

          @Override
          public Cancel setAlt(java.lang.String alt) {
            return (Cancel) super.setAlt(alt);
          }

          @Override
          public Cancel setCallback(java.lang.String callback) {
            return (Cancel) super.setCallback(callback);
          }

          @Override
          public Cancel setFields(java.lang.String fields) {
            return (Cancel) super.setFields(fields);
          }

          @Override
          public Cancel setKey(java.lang.String key) {
            return (Cancel) super.setKey(key);
          }

          @Override
          public Cancel setOauthToken(java.lang.String oauthToken) {
            return (Cancel) super.setOauthToken(oauthToken);
          }

          @Override
          public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Cancel) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Cancel setQuotaUser(java.lang.String quotaUser) {
            return (Cancel) super.setQuotaUser(quotaUser);
          }

          @Override
          public Cancel setUploadType(java.lang.String uploadType) {
            return (Cancel) super.setUploadType(uploadType);
          }

          @Override
          public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
            return (Cancel) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource to be cancelled. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource to be cancelled.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource to be cancelled. */
          public Cancel setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Cancel set(String parameterName, Object value) {
            return (Cancel) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a long-running operation. This method indicates that the client is no longer interested
         * in the operation result. It does not cancel the operation. If the server doesn't support this
         * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
         *
         * Create a request for the method "operations.delete".
         *
         * This request holds the parameters needed by the config server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource to be deleted.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ConfigRequest<com.google.api.services.config.v1.model.Empty> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Deletes a long-running operation. This method indicates that the client is no longer interested
           * in the operation result. It does not cancel the operation. If the server doesn't support this
           * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.delete".
           *
           * This request holds the parameters needed by the the config server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource to be deleted.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Config.this, "DELETE", REST_PATH, null, com.google.api.services.config.v1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource to be deleted. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource to be deleted.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource to be deleted. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets the latest state of a long-running operation. Clients can use this method to poll the
         * operation result at intervals as recommended by the API service.
         *
         * Create a request for the method "operations.get".
         *
         * This request holds the parameters needed by the config server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ConfigRequest<com.google.api.services.config.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the the config server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Config.this, "GET", REST_PATH, null, com.google.api.services.config.v1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists operations that match the specified filter in the request. If the server doesn't support
         * this method, it returns `UNIMPLEMENTED`.
         *
         * Create a request for the method "operations.list".
         *
         * This request holds the parameters needed by the config server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation's parent resource.
         * @return the request
         */
        public List list(java.lang.String name) throws java.io.IOException {
          List result = new List(name);
          initialize(result);
          return result;
        }

        public class List extends ConfigRequest<com.google.api.services.config.v1.model.ListOperationsResponse> {

          private static final String REST_PATH = "v1/{+name}/operations";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the the config server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation's parent resource.
           * @since 1.13
           */
          protected List(java.lang.String name) {
            super(Config.this, "GET", REST_PATH, null, com.google.api.services.config.v1.model.ListOperationsResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation's parent resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation's parent resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation's parent resource. */
          public List setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** The standard list filter. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** The standard list filter.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** The standard list filter. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** The standard list page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The standard list page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The standard list page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The standard list page token. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The standard list page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The standard list page token. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Previews collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Config config = new Config(...);}
       *   {@code Config.Previews.List request = config.previews().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Previews previews() {
        return new Previews();
      }

      /**
       * The "previews" collection of methods.
       */
      public class Previews {

        /**
         * Creates a Preview.
         *
         * Create a request for the method "previews.create".
         *
         * This request holds the parameters needed by the config server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent in whose context the Preview is created. The parent value is in the format:
         *        'projects/{project_id}/locations/{location}'.
         * @param content the {@link com.google.api.services.config.v1.model.Preview}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.config.v1.model.Preview content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ConfigRequest<com.google.api.services.config.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+parent}/previews";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a Preview.
           *
           * Create a request for the method "previews.create".
           *
           * This request holds the parameters needed by the the config server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent in whose context the Preview is created. The parent value is in the format:
         *        'projects/{project_id}/locations/{location}'.
           * @param content the {@link com.google.api.services.config.v1.model.Preview}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.config.v1.model.Preview content) {
            super(Config.this, "POST", REST_PATH, content, com.google.api.services.config.v1.model.Operation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent in whose context the Preview is created. The parent value is in
           * the format: 'projects/{project_id}/locations/{location}'.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent in whose context the Preview is created. The parent value is in the format:
         'projects/{project_id}/locations/{location}'.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent in whose context the Preview is created. The parent value is in
           * the format: 'projects/{project_id}/locations/{location}'.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Optional. The preview ID. */
          @com.google.api.client.util.Key
          private java.lang.String previewId;

          /** Optional. The preview ID.
           */
          public java.lang.String getPreviewId() {
            return previewId;
          }

          /** Optional. The preview ID. */
          public Create setPreviewId(java.lang.String previewId) {
            this.previewId = previewId;
            return this;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * since the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. An optional request ID to identify requests. Specify a unique request ID so that if you
         must retry your request, the server will know to ignore the request if it has already been
         completed. The server will guarantee that for at least 60 minutes since the first request. For
         example, consider a situation where you make an initial request and the request times out. If you
         make the request again with the same request ID, the server can check if original operation with
         the same request ID was received, and if so, will ignore the second request. This prevents clients
         from accidentally creating duplicate commitments. The request ID must be a valid UUID with the
         exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * since the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public Create setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a Preview.
         *
         * Create a request for the method "previews.delete".
         *
         * This request holds the parameters needed by the config server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the Preview in the format:
         *        'projects/{project_id}/locations/{location}/previews/{preview}'.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ConfigRequest<com.google.api.services.config.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/previews/[^/]+$");

          /**
           * Deletes a Preview.
           *
           * Create a request for the method "previews.delete".
           *
           * This request holds the parameters needed by the the config server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the Preview in the format:
         *        'projects/{project_id}/locations/{location}/previews/{preview}'.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Config.this, "DELETE", REST_PATH, null, com.google.api.services.config.v1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/previews/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Preview in the format:
           * 'projects/{project_id}/locations/{location}/previews/{preview}'.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the Preview in the format:
         'projects/{project_id}/locations/{location}/previews/{preview}'.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the Preview in the format:
           * 'projects/{project_id}/locations/{location}/previews/{preview}'.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/previews/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * after the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. An optional request ID to identify requests. Specify a unique request ID so that if you
         must retry your request, the server will know to ignore the request if it has already been
         completed. The server will guarantee that for at least 60 minutes after the first request. For
         example, consider a situation where you make an initial request and the request times out. If you
         make the request again with the same request ID, the server can check if original operation with
         the same request ID was received, and if so, will ignore the second request. This prevents clients
         from accidentally creating duplicate commitments. The request ID must be a valid UUID with the
         exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * after the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public Delete setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Export Preview results.
         *
         * Create a request for the method "previews.export".
         *
         * This request holds the parameters needed by the config server.  After setting any optional
         * parameters, call the {@link Export#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The preview whose results should be exported. The preview value is in the format:
         *        'projects/{project_id}/locations/{location}/previews/{preview}'.
         * @param content the {@link com.google.api.services.config.v1.model.ExportPreviewResultRequest}
         * @return the request
         */
        public Export export(java.lang.String parent, com.google.api.services.config.v1.model.ExportPreviewResultRequest content) throws java.io.IOException {
          Export result = new Export(parent, content);
          initialize(result);
          return result;
        }

        public class Export extends ConfigRequest<com.google.api.services.config.v1.model.ExportPreviewResultResponse> {

          private static final String REST_PATH = "v1/{+parent}:export";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/previews/[^/]+$");

          /**
           * Export Preview results.
           *
           * Create a request for the method "previews.export".
           *
           * This request holds the parameters needed by the the config server.  After setting any optional
           * parameters, call the {@link Export#execute()} method to invoke the remote operation. <p> {@link
           * Export#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The preview whose results should be exported. The preview value is in the format:
         *        'projects/{project_id}/locations/{location}/previews/{preview}'.
           * @param content the {@link com.google.api.services.config.v1.model.ExportPreviewResultRequest}
           * @since 1.13
           */
          protected Export(java.lang.String parent, com.google.api.services.config.v1.model.ExportPreviewResultRequest content) {
            super(Config.this, "POST", REST_PATH, content, com.google.api.services.config.v1.model.ExportPreviewResultResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/previews/[^/]+$");
            }
          }

          @Override
          public Export set$Xgafv(java.lang.String $Xgafv) {
            return (Export) super.set$Xgafv($Xgafv);
          }

          @Override
          public Export setAccessToken(java.lang.String accessToken) {
            return (Export) super.setAccessToken(accessToken);
          }

          @Override
          public Export setAlt(java.lang.String alt) {
            return (Export) super.setAlt(alt);
          }

          @Override
          public Export setCallback(java.lang.String callback) {
            return (Export) super.setCallback(callback);
          }

          @Override
          public Export setFields(java.lang.String fields) {
            return (Export) super.setFields(fields);
          }

          @Override
          public Export setKey(java.lang.String key) {
            return (Export) super.setKey(key);
          }

          @Override
          public Export setOauthToken(java.lang.String oauthToken) {
            return (Export) super.setOauthToken(oauthToken);
          }

          @Override
          public Export setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Export) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Export setQuotaUser(java.lang.String quotaUser) {
            return (Export) super.setQuotaUser(quotaUser);
          }

          @Override
          public Export setUploadType(java.lang.String uploadType) {
            return (Export) super.setUploadType(uploadType);
          }

          @Override
          public Export setUploadProtocol(java.lang.String uploadProtocol) {
            return (Export) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The preview whose results should be exported. The preview value is in the
           * format: 'projects/{project_id}/locations/{location}/previews/{preview}'.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The preview whose results should be exported. The preview value is in the format:
         'projects/{project_id}/locations/{location}/previews/{preview}'.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The preview whose results should be exported. The preview value is in the
           * format: 'projects/{project_id}/locations/{location}/previews/{preview}'.
           */
          public Export setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/previews/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Export set(String parameterName, Object value) {
            return (Export) super.set(parameterName, value);
          }
        }
        /**
         * Gets details about a Preview.
         *
         * Create a request for the method "previews.get".
         *
         * This request holds the parameters needed by the config server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the preview. Format:
         *        'projects/{project_id}/locations/{location}/previews/{preview}'.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ConfigRequest<com.google.api.services.config.v1.model.Preview> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/previews/[^/]+$");

          /**
           * Gets details about a Preview.
           *
           * Create a request for the method "previews.get".
           *
           * This request holds the parameters needed by the the config server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the preview. Format:
         *        'projects/{project_id}/locations/{location}/previews/{preview}'.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Config.this, "GET", REST_PATH, null, com.google.api.services.config.v1.model.Preview.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/previews/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the preview. Format:
           * 'projects/{project_id}/locations/{location}/previews/{preview}'.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the preview. Format:
         'projects/{project_id}/locations/{location}/previews/{preview}'.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the preview. Format:
           * 'projects/{project_id}/locations/{location}/previews/{preview}'.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/previews/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists Previews in a given project and location.
         *
         * Create a request for the method "previews.list".
         *
         * This request holds the parameters needed by the config server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent in whose context the Previews are listed. The parent value is in the format:
         *        'projects/{project_id}/locations/{location}'.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ConfigRequest<com.google.api.services.config.v1.model.ListPreviewsResponse> {

          private static final String REST_PATH = "v1/{+parent}/previews";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists Previews in a given project and location.
           *
           * Create a request for the method "previews.list".
           *
           * This request holds the parameters needed by the the config server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent in whose context the Previews are listed. The parent value is in the format:
         *        'projects/{project_id}/locations/{location}'.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Config.this, "GET", REST_PATH, null, com.google.api.services.config.v1.model.ListPreviewsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent in whose context the Previews are listed. The parent value is in
           * the format: 'projects/{project_id}/locations/{location}'.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent in whose context the Previews are listed. The parent value is in the format:
         'projects/{project_id}/locations/{location}'.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent in whose context the Previews are listed. The parent value is in
           * the format: 'projects/{project_id}/locations/{location}'.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. Lists the Deployments that match the filter expression. A filter expression
           * filters the resources listed in the response. The expression must be of the form
           * '{field} {operator} {value}' where operators: '<', '>', '<=', '>=', '!=', '=', ':' are
           * supported (colon ':' represents a HAS operator which is roughly synonymous with
           * equality). {field} can refer to a proto or JSON field, or a synthetic field. Field
           * names can be camelCase or snake_case. Examples: - Filter by name: name =
           * "projects/foo/locations/us-central1/deployments/bar - Filter by labels: - Resources
           * that have a key called 'foo' labels.foo:* - Resources that have a key called 'foo'
           * whose value is 'bar' labels.foo = bar - Filter by state: - Deployments in CREATING
           * state. state=CREATING
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Optional. Lists the Deployments that match the filter expression. A filter expression filters the
         resources listed in the response. The expression must be of the form '{field} {operator} {value}'
         where operators: '<', '>', '<=', '>=', '!=', '=', ':' are supported (colon ':' represents a HAS
         operator which is roughly synonymous with equality). {field} can refer to a proto or JSON field, or
         a synthetic field. Field names can be camelCase or snake_case. Examples: - Filter by name: name =
         "projects/foo/locations/us-central1/deployments/bar - Filter by labels: - Resources that have a key
         called 'foo' labels.foo:* - Resources that have a key called 'foo' whose value is 'bar' labels.foo
         = bar - Filter by state: - Deployments in CREATING state. state=CREATING
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * Optional. Lists the Deployments that match the filter expression. A filter expression
           * filters the resources listed in the response. The expression must be of the form
           * '{field} {operator} {value}' where operators: '<', '>', '<=', '>=', '!=', '=', ':' are
           * supported (colon ':' represents a HAS operator which is roughly synonymous with
           * equality). {field} can refer to a proto or JSON field, or a synthetic field. Field
           * names can be camelCase or snake_case. Examples: - Filter by name: name =
           * "projects/foo/locations/us-central1/deployments/bar - Filter by labels: - Resources
           * that have a key called 'foo' labels.foo:* - Resources that have a key called 'foo'
           * whose value is 'bar' labels.foo = bar - Filter by state: - Deployments in CREATING
           * state. state=CREATING
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** Optional. Field to use to sort the list. */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Optional. Field to use to sort the list.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /** Optional. Field to use to sort the list. */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /**
           * Optional. When requesting a page of resources, 'page_size' specifies number of
           * resources to return. If unspecified, at most 500 will be returned. The maximum value is
           * 1000.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. When requesting a page of resources, 'page_size' specifies number of resources to return.
         If unspecified, at most 500 will be returned. The maximum value is 1000.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. When requesting a page of resources, 'page_size' specifies number of
           * resources to return. If unspecified, at most 500 will be returned. The maximum value is
           * 1000.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Optional. Token returned by previous call to 'ListDeployments' which specifies the
           * position in the list from where to continue listing the resources.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. Token returned by previous call to 'ListDeployments' which specifies the position in the
         list from where to continue listing the resources.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Optional. Token returned by previous call to 'ListDeployments' which specifies the
           * position in the list from where to continue listing the resources.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the TerraformVersions collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Config config = new Config(...);}
       *   {@code Config.TerraformVersions.List request = config.terraformVersions().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public TerraformVersions terraformVersions() {
        return new TerraformVersions();
      }

      /**
       * The "terraformVersions" collection of methods.
       */
      public class TerraformVersions {

        /**
         * Gets details about a TerraformVersion.
         *
         * Create a request for the method "terraformVersions.get".
         *
         * This request holds the parameters needed by the config server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the TerraformVersion. Format:
         *        'projects/{project_id}/locations/{location}/terraformVersions/{terraform_version}'
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ConfigRequest<com.google.api.services.config.v1.model.TerraformVersion> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/terraformVersions/[^/]+$");

          /**
           * Gets details about a TerraformVersion.
           *
           * Create a request for the method "terraformVersions.get".
           *
           * This request holds the parameters needed by the the config server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the TerraformVersion. Format:
         *        'projects/{project_id}/locations/{location}/terraformVersions/{terraform_version}'
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Config.this, "GET", REST_PATH, null, com.google.api.services.config.v1.model.TerraformVersion.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/terraformVersions/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the TerraformVersion. Format:
           * 'projects/{project_id}/locations/{location}/terraformVersions/{terraform_version}'
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the TerraformVersion. Format:
         'projects/{project_id}/locations/{location}/terraformVersions/{terraform_version}'
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the TerraformVersion. Format:
           * 'projects/{project_id}/locations/{location}/terraformVersions/{terraform_version}'
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/terraformVersions/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists TerraformVersions in a given project and location.
         *
         * Create a request for the method "terraformVersions.list".
         *
         * This request holds the parameters needed by the config server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent in whose context the TerraformVersions are listed. The parent value is in the
         *        format: 'projects/{project_id}/locations/{location}'.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ConfigRequest<com.google.api.services.config.v1.model.ListTerraformVersionsResponse> {

          private static final String REST_PATH = "v1/{+parent}/terraformVersions";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists TerraformVersions in a given project and location.
           *
           * Create a request for the method "terraformVersions.list".
           *
           * This request holds the parameters needed by the the config server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent in whose context the TerraformVersions are listed. The parent value is in the
         *        format: 'projects/{project_id}/locations/{location}'.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Config.this, "GET", REST_PATH, null, com.google.api.services.config.v1.model.ListTerraformVersionsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent in whose context the TerraformVersions are listed. The parent
           * value is in the format: 'projects/{project_id}/locations/{location}'.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent in whose context the TerraformVersions are listed. The parent value is in the
         format: 'projects/{project_id}/locations/{location}'.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent in whose context the TerraformVersions are listed. The parent
           * value is in the format: 'projects/{project_id}/locations/{location}'.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. Lists the TerraformVersions that match the filter expression. A filter
           * expression filters the resources listed in the response. The expression must be of the
           * form '{field} {operator} {value}' where operators: '<', '>', '<=', '>=', '!=', '=', ':'
           * are supported (colon ':' represents a HAS operator which is roughly synonymous with
           * equality). {field} can refer to a proto or JSON field, or a synthetic field. Field
           * names can be camelCase or snake_case.
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Optional. Lists the TerraformVersions that match the filter expression. A filter expression filters
         the resources listed in the response. The expression must be of the form '{field} {operator}
         {value}' where operators: '<', '>', '<=', '>=', '!=', '=', ':' are supported (colon ':' represents
         a HAS operator which is roughly synonymous with equality). {field} can refer to a proto or JSON
         field, or a synthetic field. Field names can be camelCase or snake_case.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * Optional. Lists the TerraformVersions that match the filter expression. A filter
           * expression filters the resources listed in the response. The expression must be of the
           * form '{field} {operator} {value}' where operators: '<', '>', '<=', '>=', '!=', '=', ':'
           * are supported (colon ':' represents a HAS operator which is roughly synonymous with
           * equality). {field} can refer to a proto or JSON field, or a synthetic field. Field
           * names can be camelCase or snake_case.
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** Optional. Field to use to sort the list. */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Optional. Field to use to sort the list.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /** Optional. Field to use to sort the list. */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /**
           * Optional. When requesting a page of terraform versions, 'page_size' specifies number of
           * terraform versions to return. If unspecified, at most 500 will be returned. The maximum
           * value is 1000.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. When requesting a page of terraform versions, 'page_size' specifies number of terraform
         versions to return. If unspecified, at most 500 will be returned. The maximum value is 1000.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. When requesting a page of terraform versions, 'page_size' specifies number of
           * terraform versions to return. If unspecified, at most 500 will be returned. The maximum
           * value is 1000.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Optional. Token returned by previous call to 'ListTerraformVersions' which specifies
           * the position in the list from where to continue listing the terraform versions.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. Token returned by previous call to 'ListTerraformVersions' which specifies the position
         in the list from where to continue listing the terraform versions.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Optional. Token returned by previous call to 'ListTerraformVersions' which specifies
           * the position in the list from where to continue listing the terraform versions.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
    }
  }

  /**
   * Builder for {@link Config}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link Config}. */
    @Override
    public Config build() {
      return new Config(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link ConfigRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setConfigRequestInitializer(
        ConfigRequestInitializer configRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(configRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }

    @Override
    public Builder setUniverseDomain(String universeDomain) {
      return (Builder) super.setUniverseDomain(universeDomain);
    }
  }
}
