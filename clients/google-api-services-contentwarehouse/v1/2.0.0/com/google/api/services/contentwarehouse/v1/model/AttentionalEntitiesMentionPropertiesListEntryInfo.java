/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Contains information about how an entity was presented as part of a list.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AttentionalEntitiesMentionPropertiesListEntryInfo extends com.google.api.client.json.GenericJson {

  /**
   * The index of the entity presented to the user. NOTE: Indexing starts from 0.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long index;

  /**
   * A string which uniquely identifies the list item this entity represents in the list. For
   * example, consider the "OrderPizza" intent with the "size" slot: U: I want to order a pizza A:
   * Sure. What size do you want: large, medium, or small? U: Gigantic The lexical_groundings_id can
   * be "large" to identify the large item in the list. This lexical_groundings_id together with the
   * semantic role fields (i.e., role.intent_id & role.role_id) can be used to match the
   * nlp_semantic_parsing::LexicalGroundings::ValueTermType to utilize lexical grounding for i18n of
   * static list selection items. Note that this field only needs to be populated when developers
   * expect to provide lexical groundings for the list item this entity represents. Effectively,
   * this field will be populated when this entity is published by ListPresentationFrame and the
   * ::quality::dialog_manager::IntentStageSignals::FieldCandidate.lexical_groundings_id field is
   * populated. See go/lpf-i18nv2 & go/taskstate-ae-sync for more details.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String lexicalGroundingsId;

  /**
   * The index of the entity presented to the user. NOTE: Indexing starts from 0.
   * @return value or {@code null} for none
   */
  public java.lang.Long getIndex() {
    return index;
  }

  /**
   * The index of the entity presented to the user. NOTE: Indexing starts from 0.
   * @param index index or {@code null} for none
   */
  public AttentionalEntitiesMentionPropertiesListEntryInfo setIndex(java.lang.Long index) {
    this.index = index;
    return this;
  }

  /**
   * A string which uniquely identifies the list item this entity represents in the list. For
   * example, consider the "OrderPizza" intent with the "size" slot: U: I want to order a pizza A:
   * Sure. What size do you want: large, medium, or small? U: Gigantic The lexical_groundings_id can
   * be "large" to identify the large item in the list. This lexical_groundings_id together with the
   * semantic role fields (i.e., role.intent_id & role.role_id) can be used to match the
   * nlp_semantic_parsing::LexicalGroundings::ValueTermType to utilize lexical grounding for i18n of
   * static list selection items. Note that this field only needs to be populated when developers
   * expect to provide lexical groundings for the list item this entity represents. Effectively,
   * this field will be populated when this entity is published by ListPresentationFrame and the
   * ::quality::dialog_manager::IntentStageSignals::FieldCandidate.lexical_groundings_id field is
   * populated. See go/lpf-i18nv2 & go/taskstate-ae-sync for more details.
   * @return value or {@code null} for none
   */
  public java.lang.String getLexicalGroundingsId() {
    return lexicalGroundingsId;
  }

  /**
   * A string which uniquely identifies the list item this entity represents in the list. For
   * example, consider the "OrderPizza" intent with the "size" slot: U: I want to order a pizza A:
   * Sure. What size do you want: large, medium, or small? U: Gigantic The lexical_groundings_id can
   * be "large" to identify the large item in the list. This lexical_groundings_id together with the
   * semantic role fields (i.e., role.intent_id & role.role_id) can be used to match the
   * nlp_semantic_parsing::LexicalGroundings::ValueTermType to utilize lexical grounding for i18n of
   * static list selection items. Note that this field only needs to be populated when developers
   * expect to provide lexical groundings for the list item this entity represents. Effectively,
   * this field will be populated when this entity is published by ListPresentationFrame and the
   * ::quality::dialog_manager::IntentStageSignals::FieldCandidate.lexical_groundings_id field is
   * populated. See go/lpf-i18nv2 & go/taskstate-ae-sync for more details.
   * @param lexicalGroundingsId lexicalGroundingsId or {@code null} for none
   */
  public AttentionalEntitiesMentionPropertiesListEntryInfo setLexicalGroundingsId(java.lang.String lexicalGroundingsId) {
    this.lexicalGroundingsId = lexicalGroundingsId;
    return this;
  }

  @Override
  public AttentionalEntitiesMentionPropertiesListEntryInfo set(String fieldName, Object value) {
    return (AttentionalEntitiesMentionPropertiesListEntryInfo) super.set(fieldName, value);
  }

  @Override
  public AttentionalEntitiesMentionPropertiesListEntryInfo clone() {
    return (AttentionalEntitiesMentionPropertiesListEntryInfo) super.clone();
  }

}
