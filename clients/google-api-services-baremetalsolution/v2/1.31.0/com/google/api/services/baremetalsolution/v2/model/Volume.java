/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.baremetalsolution.v2.model;

/**
 * A storage volume.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Bare Metal Solution API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Volume extends com.google.api.client.json.GenericJson {

  /**
   * The size, in GiB, that this storage volume has expanded as a result of an auto grow policy. In
   * the absence of auto-grow, the value is 0.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long autoGrownSizeGib;

  /**
   * The current size of this storage volume, in GiB, including space reserved for snapshots. This
   * size might be different than the requested size if the storage volume has been configured with
   * auto grow or auto shrink.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long currentSizeGib;

  /**
   * Additional emergency size that was requested for this Volume, in GiB. current_size_gib includes
   * this value.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long emergencySizeGib;

  /**
   * An identifier for the `Volume`, generated by the backend.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String id;

  /**
   * Labels as key value pairs.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow
   * the conventions in https://cloud.google.com/apis/design/resource_names. Format:
   * `projects/{project}/locations/{location}/volumes/{volume}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Immutable. Pod name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String pod;

  /**
   * The space remaining in the storage volume for new LUNs, in GiB, excluding space reserved for
   * snapshots.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long remainingSpaceGib;

  /**
   * The requested size of this storage volume, in GiB.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long requestedSizeGib;

  /**
   * The behavior to use when snapshot reserved space is full.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String snapshotAutoDeleteBehavior;

  /**
   * Whether snapshots are enabled.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean snapshotEnabled;

  /**
   * Details about snapshot space reservation and usage on the storage volume.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SnapshotReservationDetail snapshotReservationDetail;

  /**
   * The name of the snapshot schedule policy in use for this volume, if any.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String snapshotSchedulePolicy;

  /**
   * The state of this storage volume.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * The storage type for this volume.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String storageType;

  /**
   * The size, in GiB, that this storage volume has expanded as a result of an auto grow policy. In
   * the absence of auto-grow, the value is 0.
   * @return value or {@code null} for none
   */
  public java.lang.Long getAutoGrownSizeGib() {
    return autoGrownSizeGib;
  }

  /**
   * The size, in GiB, that this storage volume has expanded as a result of an auto grow policy. In
   * the absence of auto-grow, the value is 0.
   * @param autoGrownSizeGib autoGrownSizeGib or {@code null} for none
   */
  public Volume setAutoGrownSizeGib(java.lang.Long autoGrownSizeGib) {
    this.autoGrownSizeGib = autoGrownSizeGib;
    return this;
  }

  /**
   * The current size of this storage volume, in GiB, including space reserved for snapshots. This
   * size might be different than the requested size if the storage volume has been configured with
   * auto grow or auto shrink.
   * @return value or {@code null} for none
   */
  public java.lang.Long getCurrentSizeGib() {
    return currentSizeGib;
  }

  /**
   * The current size of this storage volume, in GiB, including space reserved for snapshots. This
   * size might be different than the requested size if the storage volume has been configured with
   * auto grow or auto shrink.
   * @param currentSizeGib currentSizeGib or {@code null} for none
   */
  public Volume setCurrentSizeGib(java.lang.Long currentSizeGib) {
    this.currentSizeGib = currentSizeGib;
    return this;
  }

  /**
   * Additional emergency size that was requested for this Volume, in GiB. current_size_gib includes
   * this value.
   * @return value or {@code null} for none
   */
  public java.lang.Long getEmergencySizeGib() {
    return emergencySizeGib;
  }

  /**
   * Additional emergency size that was requested for this Volume, in GiB. current_size_gib includes
   * this value.
   * @param emergencySizeGib emergencySizeGib or {@code null} for none
   */
  public Volume setEmergencySizeGib(java.lang.Long emergencySizeGib) {
    this.emergencySizeGib = emergencySizeGib;
    return this;
  }

  /**
   * An identifier for the `Volume`, generated by the backend.
   * @return value or {@code null} for none
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * An identifier for the `Volume`, generated by the backend.
   * @param id id or {@code null} for none
   */
  public Volume setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  /**
   * Labels as key value pairs.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Labels as key value pairs.
   * @param labels labels or {@code null} for none
   */
  public Volume setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow
   * the conventions in https://cloud.google.com/apis/design/resource_names. Format:
   * `projects/{project}/locations/{location}/volumes/{volume}`
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow
   * the conventions in https://cloud.google.com/apis/design/resource_names. Format:
   * `projects/{project}/locations/{location}/volumes/{volume}`
   * @param name name or {@code null} for none
   */
  public Volume setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Immutable. Pod name.
   * @return value or {@code null} for none
   */
  public java.lang.String getPod() {
    return pod;
  }

  /**
   * Immutable. Pod name.
   * @param pod pod or {@code null} for none
   */
  public Volume setPod(java.lang.String pod) {
    this.pod = pod;
    return this;
  }

  /**
   * The space remaining in the storage volume for new LUNs, in GiB, excluding space reserved for
   * snapshots.
   * @return value or {@code null} for none
   */
  public java.lang.Long getRemainingSpaceGib() {
    return remainingSpaceGib;
  }

  /**
   * The space remaining in the storage volume for new LUNs, in GiB, excluding space reserved for
   * snapshots.
   * @param remainingSpaceGib remainingSpaceGib or {@code null} for none
   */
  public Volume setRemainingSpaceGib(java.lang.Long remainingSpaceGib) {
    this.remainingSpaceGib = remainingSpaceGib;
    return this;
  }

  /**
   * The requested size of this storage volume, in GiB.
   * @return value or {@code null} for none
   */
  public java.lang.Long getRequestedSizeGib() {
    return requestedSizeGib;
  }

  /**
   * The requested size of this storage volume, in GiB.
   * @param requestedSizeGib requestedSizeGib or {@code null} for none
   */
  public Volume setRequestedSizeGib(java.lang.Long requestedSizeGib) {
    this.requestedSizeGib = requestedSizeGib;
    return this;
  }

  /**
   * The behavior to use when snapshot reserved space is full.
   * @return value or {@code null} for none
   */
  public java.lang.String getSnapshotAutoDeleteBehavior() {
    return snapshotAutoDeleteBehavior;
  }

  /**
   * The behavior to use when snapshot reserved space is full.
   * @param snapshotAutoDeleteBehavior snapshotAutoDeleteBehavior or {@code null} for none
   */
  public Volume setSnapshotAutoDeleteBehavior(java.lang.String snapshotAutoDeleteBehavior) {
    this.snapshotAutoDeleteBehavior = snapshotAutoDeleteBehavior;
    return this;
  }

  /**
   * Whether snapshots are enabled.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSnapshotEnabled() {
    return snapshotEnabled;
  }

  /**
   * Whether snapshots are enabled.
   * @param snapshotEnabled snapshotEnabled or {@code null} for none
   */
  public Volume setSnapshotEnabled(java.lang.Boolean snapshotEnabled) {
    this.snapshotEnabled = snapshotEnabled;
    return this;
  }

  /**
   * Details about snapshot space reservation and usage on the storage volume.
   * @return value or {@code null} for none
   */
  public SnapshotReservationDetail getSnapshotReservationDetail() {
    return snapshotReservationDetail;
  }

  /**
   * Details about snapshot space reservation and usage on the storage volume.
   * @param snapshotReservationDetail snapshotReservationDetail or {@code null} for none
   */
  public Volume setSnapshotReservationDetail(SnapshotReservationDetail snapshotReservationDetail) {
    this.snapshotReservationDetail = snapshotReservationDetail;
    return this;
  }

  /**
   * The name of the snapshot schedule policy in use for this volume, if any.
   * @return value or {@code null} for none
   */
  public java.lang.String getSnapshotSchedulePolicy() {
    return snapshotSchedulePolicy;
  }

  /**
   * The name of the snapshot schedule policy in use for this volume, if any.
   * @param snapshotSchedulePolicy snapshotSchedulePolicy or {@code null} for none
   */
  public Volume setSnapshotSchedulePolicy(java.lang.String snapshotSchedulePolicy) {
    this.snapshotSchedulePolicy = snapshotSchedulePolicy;
    return this;
  }

  /**
   * The state of this storage volume.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * The state of this storage volume.
   * @param state state or {@code null} for none
   */
  public Volume setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * The storage type for this volume.
   * @return value or {@code null} for none
   */
  public java.lang.String getStorageType() {
    return storageType;
  }

  /**
   * The storage type for this volume.
   * @param storageType storageType or {@code null} for none
   */
  public Volume setStorageType(java.lang.String storageType) {
    this.storageType = storageType;
    return this;
  }

  @Override
  public Volume set(String fieldName, Object value) {
    return (Volume) super.set(fieldName, value);
  }

  @Override
  public Volume clone() {
    return (Volume) super.clone();
  }

}
