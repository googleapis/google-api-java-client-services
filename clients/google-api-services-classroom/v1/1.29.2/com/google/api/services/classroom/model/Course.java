/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.classroom.model;

/**
 * A Course in Classroom.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Classroom API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Course extends com.google.api.client.json.GenericJson {

  /**
   * Absolute link to this course in the Classroom web UI.
   *
   * Read-only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String alternateLink;

  /**
   * The Calendar ID for a calendar that all course members can see, to which Classroom adds events
   * for course work and announcements in the course.
   *
   * Read-only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String calendarId;

  /**
   * The email address of a Google group containing all members of the course. This group does not
   * accept email and can only be used for permissions.
   *
   * Read-only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String courseGroupEmail;

  /**
   * Sets of materials that appear on the "about" page of this course.
   *
   * Read-only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<CourseMaterialSet> courseMaterialSets;

  /**
   * State of the course. If unspecified, the default state is `PROVISIONED`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String courseState;

  /**
   * Creation time of the course. Specifying this field in a course update mask results in an error.
   *
   * Read-only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String creationTime;

  /**
   * Optional description. For example, "We'll be learning about the structure of living creatures
   * from a combination of textbooks, guest lectures, and lab work. Expect to be excited!" If set,
   * this field must be a valid UTF-8 string and no longer than 30,000 characters.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Optional heading for the description. For example, "Welcome to 10th Grade Biology." If set,
   * this field must be a valid UTF-8 string and no longer than 3600 characters.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String descriptionHeading;

  /**
   * Enrollment code to use when joining this course. Specifying this field in a course update mask
   * results in an error.
   *
   * Read-only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String enrollmentCode;

  /**
   * Whether or not guardian notifications are enabled for this course.
   *
   * Read-only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean guardiansEnabled;

  /**
   * Identifier for this course assigned by Classroom.
   *
   * When creating a course, you may optionally set this identifier to an alias string in the
   * request to create a corresponding alias. The `id` is still assigned by Classroom and cannot be
   * updated after the course is created.
   *
   * Specifying this field in a course update mask results in an error.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String id;

  /**
   * Name of the course. For example, "10th Grade Biology". The name is required. It must be between
   * 1 and 750 characters and a valid UTF-8 string.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * The identifier of the owner of a course.
   *
   * When specified as a parameter of a create course request, this field is required. The
   * identifier can be one of the following:
   *
   * * the numeric identifier for the user * the email address of the user * the string literal
   * `"me"`, indicating the requesting user
   *
   * This must be set in a create request. Admins can also specify this field in a patch course
   * request to transfer ownership. In other contexts, it is read-only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String ownerId;

  /**
   * Optional room location. For example, "301". If set, this field must be a valid UTF-8 string and
   * no longer than 650 characters.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String room;

  /**
   * Section of the course. For example, "Period 2". If set, this field must be a valid UTF-8 string
   * and no longer than 2800 characters.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String section;

  /**
   * Information about a Drive Folder that is shared with all teachers of the course.
   *
   * This field will only be set for teachers of the course and domain administrators.
   *
   * Read-only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DriveFolder teacherFolder;

  /**
   * The email address of a Google group containing all teachers of the course. This group does not
   * accept email and can only be used for permissions.
   *
   * Read-only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String teacherGroupEmail;

  /**
   * Time of the most recent update to this course. Specifying this field in a course update mask
   * results in an error.
   *
   * Read-only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Absolute link to this course in the Classroom web UI.
   *
   * Read-only.
   * @return value or {@code null} for none
   */
  public java.lang.String getAlternateLink() {
    return alternateLink;
  }

  /**
   * Absolute link to this course in the Classroom web UI.
   *
   * Read-only.
   * @param alternateLink alternateLink or {@code null} for none
   */
  public Course setAlternateLink(java.lang.String alternateLink) {
    this.alternateLink = alternateLink;
    return this;
  }

  /**
   * The Calendar ID for a calendar that all course members can see, to which Classroom adds events
   * for course work and announcements in the course.
   *
   * Read-only.
   * @return value or {@code null} for none
   */
  public java.lang.String getCalendarId() {
    return calendarId;
  }

  /**
   * The Calendar ID for a calendar that all course members can see, to which Classroom adds events
   * for course work and announcements in the course.
   *
   * Read-only.
   * @param calendarId calendarId or {@code null} for none
   */
  public Course setCalendarId(java.lang.String calendarId) {
    this.calendarId = calendarId;
    return this;
  }

  /**
   * The email address of a Google group containing all members of the course. This group does not
   * accept email and can only be used for permissions.
   *
   * Read-only.
   * @return value or {@code null} for none
   */
  public java.lang.String getCourseGroupEmail() {
    return courseGroupEmail;
  }

  /**
   * The email address of a Google group containing all members of the course. This group does not
   * accept email and can only be used for permissions.
   *
   * Read-only.
   * @param courseGroupEmail courseGroupEmail or {@code null} for none
   */
  public Course setCourseGroupEmail(java.lang.String courseGroupEmail) {
    this.courseGroupEmail = courseGroupEmail;
    return this;
  }

  /**
   * Sets of materials that appear on the "about" page of this course.
   *
   * Read-only.
   * @return value or {@code null} for none
   */
  public java.util.List<CourseMaterialSet> getCourseMaterialSets() {
    return courseMaterialSets;
  }

  /**
   * Sets of materials that appear on the "about" page of this course.
   *
   * Read-only.
   * @param courseMaterialSets courseMaterialSets or {@code null} for none
   */
  public Course setCourseMaterialSets(java.util.List<CourseMaterialSet> courseMaterialSets) {
    this.courseMaterialSets = courseMaterialSets;
    return this;
  }

  /**
   * State of the course. If unspecified, the default state is `PROVISIONED`.
   * @return value or {@code null} for none
   */
  public java.lang.String getCourseState() {
    return courseState;
  }

  /**
   * State of the course. If unspecified, the default state is `PROVISIONED`.
   * @param courseState courseState or {@code null} for none
   */
  public Course setCourseState(java.lang.String courseState) {
    this.courseState = courseState;
    return this;
  }

  /**
   * Creation time of the course. Specifying this field in a course update mask results in an error.
   *
   * Read-only.
   * @return value or {@code null} for none
   */
  public String getCreationTime() {
    return creationTime;
  }

  /**
   * Creation time of the course. Specifying this field in a course update mask results in an error.
   *
   * Read-only.
   * @param creationTime creationTime or {@code null} for none
   */
  public Course setCreationTime(String creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Optional description. For example, "We'll be learning about the structure of living creatures
   * from a combination of textbooks, guest lectures, and lab work. Expect to be excited!" If set,
   * this field must be a valid UTF-8 string and no longer than 30,000 characters.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Optional description. For example, "We'll be learning about the structure of living creatures
   * from a combination of textbooks, guest lectures, and lab work. Expect to be excited!" If set,
   * this field must be a valid UTF-8 string and no longer than 30,000 characters.
   * @param description description or {@code null} for none
   */
  public Course setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Optional heading for the description. For example, "Welcome to 10th Grade Biology." If set,
   * this field must be a valid UTF-8 string and no longer than 3600 characters.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescriptionHeading() {
    return descriptionHeading;
  }

  /**
   * Optional heading for the description. For example, "Welcome to 10th Grade Biology." If set,
   * this field must be a valid UTF-8 string and no longer than 3600 characters.
   * @param descriptionHeading descriptionHeading or {@code null} for none
   */
  public Course setDescriptionHeading(java.lang.String descriptionHeading) {
    this.descriptionHeading = descriptionHeading;
    return this;
  }

  /**
   * Enrollment code to use when joining this course. Specifying this field in a course update mask
   * results in an error.
   *
   * Read-only.
   * @return value or {@code null} for none
   */
  public java.lang.String getEnrollmentCode() {
    return enrollmentCode;
  }

  /**
   * Enrollment code to use when joining this course. Specifying this field in a course update mask
   * results in an error.
   *
   * Read-only.
   * @param enrollmentCode enrollmentCode or {@code null} for none
   */
  public Course setEnrollmentCode(java.lang.String enrollmentCode) {
    this.enrollmentCode = enrollmentCode;
    return this;
  }

  /**
   * Whether or not guardian notifications are enabled for this course.
   *
   * Read-only.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getGuardiansEnabled() {
    return guardiansEnabled;
  }

  /**
   * Whether or not guardian notifications are enabled for this course.
   *
   * Read-only.
   * @param guardiansEnabled guardiansEnabled or {@code null} for none
   */
  public Course setGuardiansEnabled(java.lang.Boolean guardiansEnabled) {
    this.guardiansEnabled = guardiansEnabled;
    return this;
  }

  /**
   * Identifier for this course assigned by Classroom.
   *
   * When creating a course, you may optionally set this identifier to an alias string in the
   * request to create a corresponding alias. The `id` is still assigned by Classroom and cannot be
   * updated after the course is created.
   *
   * Specifying this field in a course update mask results in an error.
   * @return value or {@code null} for none
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * Identifier for this course assigned by Classroom.
   *
   * When creating a course, you may optionally set this identifier to an alias string in the
   * request to create a corresponding alias. The `id` is still assigned by Classroom and cannot be
   * updated after the course is created.
   *
   * Specifying this field in a course update mask results in an error.
   * @param id id or {@code null} for none
   */
  public Course setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  /**
   * Name of the course. For example, "10th Grade Biology". The name is required. It must be between
   * 1 and 750 characters and a valid UTF-8 string.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Name of the course. For example, "10th Grade Biology". The name is required. It must be between
   * 1 and 750 characters and a valid UTF-8 string.
   * @param name name or {@code null} for none
   */
  public Course setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * The identifier of the owner of a course.
   *
   * When specified as a parameter of a create course request, this field is required. The
   * identifier can be one of the following:
   *
   * * the numeric identifier for the user * the email address of the user * the string literal
   * `"me"`, indicating the requesting user
   *
   * This must be set in a create request. Admins can also specify this field in a patch course
   * request to transfer ownership. In other contexts, it is read-only.
   * @return value or {@code null} for none
   */
  public java.lang.String getOwnerId() {
    return ownerId;
  }

  /**
   * The identifier of the owner of a course.
   *
   * When specified as a parameter of a create course request, this field is required. The
   * identifier can be one of the following:
   *
   * * the numeric identifier for the user * the email address of the user * the string literal
   * `"me"`, indicating the requesting user
   *
   * This must be set in a create request. Admins can also specify this field in a patch course
   * request to transfer ownership. In other contexts, it is read-only.
   * @param ownerId ownerId or {@code null} for none
   */
  public Course setOwnerId(java.lang.String ownerId) {
    this.ownerId = ownerId;
    return this;
  }

  /**
   * Optional room location. For example, "301". If set, this field must be a valid UTF-8 string and
   * no longer than 650 characters.
   * @return value or {@code null} for none
   */
  public java.lang.String getRoom() {
    return room;
  }

  /**
   * Optional room location. For example, "301". If set, this field must be a valid UTF-8 string and
   * no longer than 650 characters.
   * @param room room or {@code null} for none
   */
  public Course setRoom(java.lang.String room) {
    this.room = room;
    return this;
  }

  /**
   * Section of the course. For example, "Period 2". If set, this field must be a valid UTF-8 string
   * and no longer than 2800 characters.
   * @return value or {@code null} for none
   */
  public java.lang.String getSection() {
    return section;
  }

  /**
   * Section of the course. For example, "Period 2". If set, this field must be a valid UTF-8 string
   * and no longer than 2800 characters.
   * @param section section or {@code null} for none
   */
  public Course setSection(java.lang.String section) {
    this.section = section;
    return this;
  }

  /**
   * Information about a Drive Folder that is shared with all teachers of the course.
   *
   * This field will only be set for teachers of the course and domain administrators.
   *
   * Read-only.
   * @return value or {@code null} for none
   */
  public DriveFolder getTeacherFolder() {
    return teacherFolder;
  }

  /**
   * Information about a Drive Folder that is shared with all teachers of the course.
   *
   * This field will only be set for teachers of the course and domain administrators.
   *
   * Read-only.
   * @param teacherFolder teacherFolder or {@code null} for none
   */
  public Course setTeacherFolder(DriveFolder teacherFolder) {
    this.teacherFolder = teacherFolder;
    return this;
  }

  /**
   * The email address of a Google group containing all teachers of the course. This group does not
   * accept email and can only be used for permissions.
   *
   * Read-only.
   * @return value or {@code null} for none
   */
  public java.lang.String getTeacherGroupEmail() {
    return teacherGroupEmail;
  }

  /**
   * The email address of a Google group containing all teachers of the course. This group does not
   * accept email and can only be used for permissions.
   *
   * Read-only.
   * @param teacherGroupEmail teacherGroupEmail or {@code null} for none
   */
  public Course setTeacherGroupEmail(java.lang.String teacherGroupEmail) {
    this.teacherGroupEmail = teacherGroupEmail;
    return this;
  }

  /**
   * Time of the most recent update to this course. Specifying this field in a course update mask
   * results in an error.
   *
   * Read-only.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Time of the most recent update to this course. Specifying this field in a course update mask
   * results in an error.
   *
   * Read-only.
   * @param updateTime updateTime or {@code null} for none
   */
  public Course setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public Course set(String fieldName, Object value) {
    return (Course) super.set(fieldName, value);
  }

  @Override
  public Course clone() {
    return (Course) super.clone();
  }

}
