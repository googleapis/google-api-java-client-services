/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.searchconsole.v1.model;

/**
 * An object that may be returned with your query results, providing context about the state of the
 * data. When you request recent data (using `all` or `hourly_all` for `dataState`), some of the
 * rows returned may represent data that is incomplete, which means that the data is still being
 * collected and processed. This metadata object helps you identify exactly when this starts and
 * ends. All dates and times provided in this object are in the `America/Los_Angeles` time zone. The
 * specific field returned within this object depends on how you've grouped your data in the
 * request. See details in inner fields.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Search Console API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Metadata extends com.google.api.client.json.GenericJson {

  /**
   * The first date for which the data is still being collected and processed, presented in `YYYY-
   * MM-DD` format (ISO-8601 extended local date format). This field is populated only when the
   * request's `dataState` is "`all`", data is grouped by "`DATE`", and the requested date range
   * contains incomplete data points. All values after the `first_incomplete_date` may still change
   * noticeably.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String firstIncompleteDate;

  /**
   * The first hour for which the data is still being collected and processed, presented in `YYYY-
   * MM-DDThh:mm:ss[+|-]hh:mm` format (ISO-8601 extended offset date-time format). This field is
   * populated only when the request's `dataState` is "`hourly_all`", data is grouped by "`HOUR`"
   * and the requested date range contains incomplete data points. All values after the
   * `first_incomplete_hour` may still change noticeably.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String firstIncompleteHour;

  /**
   * The first date for which the data is still being collected and processed, presented in `YYYY-
   * MM-DD` format (ISO-8601 extended local date format). This field is populated only when the
   * request's `dataState` is "`all`", data is grouped by "`DATE`", and the requested date range
   * contains incomplete data points. All values after the `first_incomplete_date` may still change
   * noticeably.
   * @return value or {@code null} for none
   */
  public java.lang.String getFirstIncompleteDate() {
    return firstIncompleteDate;
  }

  /**
   * The first date for which the data is still being collected and processed, presented in `YYYY-
   * MM-DD` format (ISO-8601 extended local date format). This field is populated only when the
   * request's `dataState` is "`all`", data is grouped by "`DATE`", and the requested date range
   * contains incomplete data points. All values after the `first_incomplete_date` may still change
   * noticeably.
   * @param firstIncompleteDate firstIncompleteDate or {@code null} for none
   */
  public Metadata setFirstIncompleteDate(java.lang.String firstIncompleteDate) {
    this.firstIncompleteDate = firstIncompleteDate;
    return this;
  }

  /**
   * The first hour for which the data is still being collected and processed, presented in `YYYY-
   * MM-DDThh:mm:ss[+|-]hh:mm` format (ISO-8601 extended offset date-time format). This field is
   * populated only when the request's `dataState` is "`hourly_all`", data is grouped by "`HOUR`"
   * and the requested date range contains incomplete data points. All values after the
   * `first_incomplete_hour` may still change noticeably.
   * @return value or {@code null} for none
   */
  public java.lang.String getFirstIncompleteHour() {
    return firstIncompleteHour;
  }

  /**
   * The first hour for which the data is still being collected and processed, presented in `YYYY-
   * MM-DDThh:mm:ss[+|-]hh:mm` format (ISO-8601 extended offset date-time format). This field is
   * populated only when the request's `dataState` is "`hourly_all`", data is grouped by "`HOUR`"
   * and the requested date range contains incomplete data points. All values after the
   * `first_incomplete_hour` may still change noticeably.
   * @param firstIncompleteHour firstIncompleteHour or {@code null} for none
   */
  public Metadata setFirstIncompleteHour(java.lang.String firstIncompleteHour) {
    this.firstIncompleteHour = firstIncompleteHour;
    return this;
  }

  @Override
  public Metadata set(String fieldName, Object value) {
    return (Metadata) super.set(fieldName, value);
  }

  @Override
  public Metadata clone() {
    return (Metadata) super.clone();
  }

}
