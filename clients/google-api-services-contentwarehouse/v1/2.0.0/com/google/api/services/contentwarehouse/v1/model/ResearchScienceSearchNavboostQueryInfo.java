/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * The information representing one navboost query for the dataset source_url.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ResearchScienceSearchNavboostQueryInfo extends com.google.api.client.json.GenericJson {

  /**
   * imp_count stores an estimate of the number of impressions for this tuple.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float impCount;

  /**
   * lcc_count stores an estimate of the number of long clicks for this tuple. NOTE: It is similar
   * to query_doc_count, but calculated in different manner.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float lccCount;

  /**
   * The query string.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String query;

  /**
   * The query_count stores the counts on this query.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float queryCount;

  /**
   * The query_doc_count stores the number of long-clicks on this pair.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float queryDocCount;

  /**
   * imp_count stores an estimate of the number of impressions for this tuple.
   * @return value or {@code null} for none
   */
  public java.lang.Float getImpCount() {
    return impCount;
  }

  /**
   * imp_count stores an estimate of the number of impressions for this tuple.
   * @param impCount impCount or {@code null} for none
   */
  public ResearchScienceSearchNavboostQueryInfo setImpCount(java.lang.Float impCount) {
    this.impCount = impCount;
    return this;
  }

  /**
   * lcc_count stores an estimate of the number of long clicks for this tuple. NOTE: It is similar
   * to query_doc_count, but calculated in different manner.
   * @return value or {@code null} for none
   */
  public java.lang.Float getLccCount() {
    return lccCount;
  }

  /**
   * lcc_count stores an estimate of the number of long clicks for this tuple. NOTE: It is similar
   * to query_doc_count, but calculated in different manner.
   * @param lccCount lccCount or {@code null} for none
   */
  public ResearchScienceSearchNavboostQueryInfo setLccCount(java.lang.Float lccCount) {
    this.lccCount = lccCount;
    return this;
  }

  /**
   * The query string.
   * @return value or {@code null} for none
   */
  public java.lang.String getQuery() {
    return query;
  }

  /**
   * The query string.
   * @param query query or {@code null} for none
   */
  public ResearchScienceSearchNavboostQueryInfo setQuery(java.lang.String query) {
    this.query = query;
    return this;
  }

  /**
   * The query_count stores the counts on this query.
   * @return value or {@code null} for none
   */
  public java.lang.Float getQueryCount() {
    return queryCount;
  }

  /**
   * The query_count stores the counts on this query.
   * @param queryCount queryCount or {@code null} for none
   */
  public ResearchScienceSearchNavboostQueryInfo setQueryCount(java.lang.Float queryCount) {
    this.queryCount = queryCount;
    return this;
  }

  /**
   * The query_doc_count stores the number of long-clicks on this pair.
   * @return value or {@code null} for none
   */
  public java.lang.Float getQueryDocCount() {
    return queryDocCount;
  }

  /**
   * The query_doc_count stores the number of long-clicks on this pair.
   * @param queryDocCount queryDocCount or {@code null} for none
   */
  public ResearchScienceSearchNavboostQueryInfo setQueryDocCount(java.lang.Float queryDocCount) {
    this.queryDocCount = queryDocCount;
    return this;
  }

  @Override
  public ResearchScienceSearchNavboostQueryInfo set(String fieldName, Object value) {
    return (ResearchScienceSearchNavboostQueryInfo) super.set(fieldName, value);
  }

  @Override
  public ResearchScienceSearchNavboostQueryInfo clone() {
    return (ResearchScienceSearchNavboostQueryInfo) super.clone();
  }

}
