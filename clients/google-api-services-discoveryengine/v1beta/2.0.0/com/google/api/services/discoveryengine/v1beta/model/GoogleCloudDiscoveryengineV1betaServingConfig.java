/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.discoveryengine.v1beta.model;

/**
 * Configures metadata that is used to generate serving time results (e.g. search results or
 * recommendation predictions). The ServingConfig is passed in the search and predict request and
 * generates results.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Discovery Engine API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDiscoveryengineV1betaServingConfig extends com.google.api.client.json.GenericJson {

  /**
   * Boost controls to use in serving path. All triggered boost controls will be applied. Boost
   * controls must be in the same data store as the serving config. Maximum of 20 boost controls.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> boostControlIds;

  /**
   * Output only. ServingConfig created timestamp.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Required. The human readable serving config display name. Used in Discovery UI. This field must
   * be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT
   * error is returned.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Condition do not associate specifications. If multiple do not associate conditions match, all
   * matching do not associate controls in the list will execute. Order does not matter. Maximum
   * number of specifications is 100. Can only be set if SolutionType is SOLUTION_TYPE_SEARCH.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> dissociateControlIds;

  /**
   * How much diversity to use in recommendation model results e.g. `medium-diversity` or `high-
   * diversity`. Currently supported values: * `no-diversity` * `low-diversity` * `medium-diversity`
   * * `high-diversity` * `auto-diversity` If not specified, we choose default based on
   * recommendation model type. Default value: `no-diversity`. Can only be set if SolutionType is
   * SOLUTION_TYPE_RECOMMENDATION.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String diversityLevel;

  /**
   * Bring your own embedding config. The config is used for search semantic retrieval. The
   * retrieval is based on the dot product of SearchRequest.EmbeddingSpec.EmbeddingVector.vector and
   * the document embeddings that are provided by this EmbeddingConfig. If
   * SearchRequest.EmbeddingSpec.EmbeddingVector.vector is provided, it overrides this
   * ServingConfig.embedding_config.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDiscoveryengineV1betaEmbeddingConfig embeddingConfig;

  /**
   * Filter controls to use in serving path. All triggered filter controls will be applied. Filter
   * controls must be in the same data store as the serving config. Maximum of 20 filter controls.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> filterControlIds;

  /**
   * The GenericConfig of the serving configuration.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDiscoveryengineV1betaServingConfigGenericConfig genericConfig;

  /**
   * Condition ignore specifications. If multiple ignore conditions match, all matching ignore
   * controls in the list will execute. Order does not matter. Maximum number of specifications is
   * 100.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> ignoreControlIds;

  /**
   * The MediaConfig of the serving configuration.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig mediaConfig;

  /**
   * The id of the model to use at serving time. Currently only RecommendationModels are supported.
   * Can be changed but only to a compatible model (e.g. others-you-may-like CTR to others-you-may-
   * like CVR). Required when SolutionType is SOLUTION_TYPE_RECOMMENDATION.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String modelId;

  /**
   * Immutable. Fully qualified name `projects/{project}/locations/{location}/collections/{collectio
   * n_id}/engines/{engine_id}/servingConfigs/{serving_config_id}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Condition oneway synonyms specifications. If multiple oneway synonyms conditions match, all
   * matching oneway synonyms controls in the list will execute. Maximum number of specifications is
   * 100. Can only be set if SolutionType is SOLUTION_TYPE_SEARCH.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> onewaySynonymsControlIds;

  /**
   * The ranking expression controls the customized ranking on retrieval documents. To leverage
   * this, document embedding is required. The ranking expression setting in ServingConfig applies
   * to all search requests served by the serving config. However, if
   * SearchRequest.ranking_expression is specified, it overrides the ServingConfig ranking
   * expression. The ranking expression is a single function or multiple functions that are joined
   * by "+". * ranking_expression = function, { " + ", function }; Supported functions: * double *
   * relevance_score * double * dotProduct(embedding_field_path) Function variables: *
   * `relevance_score`: pre-defined keywords, used for measure relevance between query and document.
   * * `embedding_field_path`: the document embedding field used with query embedding vector. *
   * `dotProduct`: embedding function between embedding_field_path and query embedding vector.
   * Example ranking expression: If document has an embedding field doc_embedding, the ranking
   * expression could be `0.5 * relevance_score + 0.3 * dotProduct(doc_embedding)`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String rankingExpression;

  /**
   * IDs of the redirect controls. Only the first triggered redirect action is applied, even if
   * multiple apply. Maximum number of specifications is 100. Can only be set if SolutionType is
   * SOLUTION_TYPE_SEARCH.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> redirectControlIds;

  /**
   * Condition replacement specifications. Applied according to the order in the list. A previously
   * replaced term can not be re-replaced. Maximum number of specifications is 100. Can only be set
   * if SolutionType is SOLUTION_TYPE_SEARCH.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> replacementControlIds;

  /**
   * Required. Immutable. Specifies the solution type that a serving config can be associated with.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String solutionType;

  /**
   * Condition synonyms specifications. If multiple synonyms conditions match, all matching synonyms
   * controls in the list will execute. Maximum number of specifications is 100. Can only be set if
   * SolutionType is SOLUTION_TYPE_SEARCH.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> synonymsControlIds;

  /**
   * Output only. ServingConfig updated timestamp.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Boost controls to use in serving path. All triggered boost controls will be applied. Boost
   * controls must be in the same data store as the serving config. Maximum of 20 boost controls.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getBoostControlIds() {
    return boostControlIds;
  }

  /**
   * Boost controls to use in serving path. All triggered boost controls will be applied. Boost
   * controls must be in the same data store as the serving config. Maximum of 20 boost controls.
   * @param boostControlIds boostControlIds or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaServingConfig setBoostControlIds(java.util.List<java.lang.String> boostControlIds) {
    this.boostControlIds = boostControlIds;
    return this;
  }

  /**
   * Output only. ServingConfig created timestamp.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. ServingConfig created timestamp.
   * @param createTime createTime or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaServingConfig setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Required. The human readable serving config display name. Used in Discovery UI. This field must
   * be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT
   * error is returned.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Required. The human readable serving config display name. Used in Discovery UI. This field must
   * be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT
   * error is returned.
   * @param displayName displayName or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaServingConfig setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Condition do not associate specifications. If multiple do not associate conditions match, all
   * matching do not associate controls in the list will execute. Order does not matter. Maximum
   * number of specifications is 100. Can only be set if SolutionType is SOLUTION_TYPE_SEARCH.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getDissociateControlIds() {
    return dissociateControlIds;
  }

  /**
   * Condition do not associate specifications. If multiple do not associate conditions match, all
   * matching do not associate controls in the list will execute. Order does not matter. Maximum
   * number of specifications is 100. Can only be set if SolutionType is SOLUTION_TYPE_SEARCH.
   * @param dissociateControlIds dissociateControlIds or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaServingConfig setDissociateControlIds(java.util.List<java.lang.String> dissociateControlIds) {
    this.dissociateControlIds = dissociateControlIds;
    return this;
  }

  /**
   * How much diversity to use in recommendation model results e.g. `medium-diversity` or `high-
   * diversity`. Currently supported values: * `no-diversity` * `low-diversity` * `medium-diversity`
   * * `high-diversity` * `auto-diversity` If not specified, we choose default based on
   * recommendation model type. Default value: `no-diversity`. Can only be set if SolutionType is
   * SOLUTION_TYPE_RECOMMENDATION.
   * @return value or {@code null} for none
   */
  public java.lang.String getDiversityLevel() {
    return diversityLevel;
  }

  /**
   * How much diversity to use in recommendation model results e.g. `medium-diversity` or `high-
   * diversity`. Currently supported values: * `no-diversity` * `low-diversity` * `medium-diversity`
   * * `high-diversity` * `auto-diversity` If not specified, we choose default based on
   * recommendation model type. Default value: `no-diversity`. Can only be set if SolutionType is
   * SOLUTION_TYPE_RECOMMENDATION.
   * @param diversityLevel diversityLevel or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaServingConfig setDiversityLevel(java.lang.String diversityLevel) {
    this.diversityLevel = diversityLevel;
    return this;
  }

  /**
   * Bring your own embedding config. The config is used for search semantic retrieval. The
   * retrieval is based on the dot product of SearchRequest.EmbeddingSpec.EmbeddingVector.vector and
   * the document embeddings that are provided by this EmbeddingConfig. If
   * SearchRequest.EmbeddingSpec.EmbeddingVector.vector is provided, it overrides this
   * ServingConfig.embedding_config.
   * @return value or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaEmbeddingConfig getEmbeddingConfig() {
    return embeddingConfig;
  }

  /**
   * Bring your own embedding config. The config is used for search semantic retrieval. The
   * retrieval is based on the dot product of SearchRequest.EmbeddingSpec.EmbeddingVector.vector and
   * the document embeddings that are provided by this EmbeddingConfig. If
   * SearchRequest.EmbeddingSpec.EmbeddingVector.vector is provided, it overrides this
   * ServingConfig.embedding_config.
   * @param embeddingConfig embeddingConfig or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaServingConfig setEmbeddingConfig(GoogleCloudDiscoveryengineV1betaEmbeddingConfig embeddingConfig) {
    this.embeddingConfig = embeddingConfig;
    return this;
  }

  /**
   * Filter controls to use in serving path. All triggered filter controls will be applied. Filter
   * controls must be in the same data store as the serving config. Maximum of 20 filter controls.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getFilterControlIds() {
    return filterControlIds;
  }

  /**
   * Filter controls to use in serving path. All triggered filter controls will be applied. Filter
   * controls must be in the same data store as the serving config. Maximum of 20 filter controls.
   * @param filterControlIds filterControlIds or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaServingConfig setFilterControlIds(java.util.List<java.lang.String> filterControlIds) {
    this.filterControlIds = filterControlIds;
    return this;
  }

  /**
   * The GenericConfig of the serving configuration.
   * @return value or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaServingConfigGenericConfig getGenericConfig() {
    return genericConfig;
  }

  /**
   * The GenericConfig of the serving configuration.
   * @param genericConfig genericConfig or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaServingConfig setGenericConfig(GoogleCloudDiscoveryengineV1betaServingConfigGenericConfig genericConfig) {
    this.genericConfig = genericConfig;
    return this;
  }

  /**
   * Condition ignore specifications. If multiple ignore conditions match, all matching ignore
   * controls in the list will execute. Order does not matter. Maximum number of specifications is
   * 100.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getIgnoreControlIds() {
    return ignoreControlIds;
  }

  /**
   * Condition ignore specifications. If multiple ignore conditions match, all matching ignore
   * controls in the list will execute. Order does not matter. Maximum number of specifications is
   * 100.
   * @param ignoreControlIds ignoreControlIds or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaServingConfig setIgnoreControlIds(java.util.List<java.lang.String> ignoreControlIds) {
    this.ignoreControlIds = ignoreControlIds;
    return this;
  }

  /**
   * The MediaConfig of the serving configuration.
   * @return value or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig getMediaConfig() {
    return mediaConfig;
  }

  /**
   * The MediaConfig of the serving configuration.
   * @param mediaConfig mediaConfig or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaServingConfig setMediaConfig(GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig mediaConfig) {
    this.mediaConfig = mediaConfig;
    return this;
  }

  /**
   * The id of the model to use at serving time. Currently only RecommendationModels are supported.
   * Can be changed but only to a compatible model (e.g. others-you-may-like CTR to others-you-may-
   * like CVR). Required when SolutionType is SOLUTION_TYPE_RECOMMENDATION.
   * @return value or {@code null} for none
   */
  public java.lang.String getModelId() {
    return modelId;
  }

  /**
   * The id of the model to use at serving time. Currently only RecommendationModels are supported.
   * Can be changed but only to a compatible model (e.g. others-you-may-like CTR to others-you-may-
   * like CVR). Required when SolutionType is SOLUTION_TYPE_RECOMMENDATION.
   * @param modelId modelId or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaServingConfig setModelId(java.lang.String modelId) {
    this.modelId = modelId;
    return this;
  }

  /**
   * Immutable. Fully qualified name `projects/{project}/locations/{location}/collections/{collectio
   * n_id}/engines/{engine_id}/servingConfigs/{serving_config_id}`
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Immutable. Fully qualified name `projects/{project}/locations/{location}/collections/{collectio
   * n_id}/engines/{engine_id}/servingConfigs/{serving_config_id}`
   * @param name name or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaServingConfig setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Condition oneway synonyms specifications. If multiple oneway synonyms conditions match, all
   * matching oneway synonyms controls in the list will execute. Maximum number of specifications is
   * 100. Can only be set if SolutionType is SOLUTION_TYPE_SEARCH.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getOnewaySynonymsControlIds() {
    return onewaySynonymsControlIds;
  }

  /**
   * Condition oneway synonyms specifications. If multiple oneway synonyms conditions match, all
   * matching oneway synonyms controls in the list will execute. Maximum number of specifications is
   * 100. Can only be set if SolutionType is SOLUTION_TYPE_SEARCH.
   * @param onewaySynonymsControlIds onewaySynonymsControlIds or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaServingConfig setOnewaySynonymsControlIds(java.util.List<java.lang.String> onewaySynonymsControlIds) {
    this.onewaySynonymsControlIds = onewaySynonymsControlIds;
    return this;
  }

  /**
   * The ranking expression controls the customized ranking on retrieval documents. To leverage
   * this, document embedding is required. The ranking expression setting in ServingConfig applies
   * to all search requests served by the serving config. However, if
   * SearchRequest.ranking_expression is specified, it overrides the ServingConfig ranking
   * expression. The ranking expression is a single function or multiple functions that are joined
   * by "+". * ranking_expression = function, { " + ", function }; Supported functions: * double *
   * relevance_score * double * dotProduct(embedding_field_path) Function variables: *
   * `relevance_score`: pre-defined keywords, used for measure relevance between query and document.
   * * `embedding_field_path`: the document embedding field used with query embedding vector. *
   * `dotProduct`: embedding function between embedding_field_path and query embedding vector.
   * Example ranking expression: If document has an embedding field doc_embedding, the ranking
   * expression could be `0.5 * relevance_score + 0.3 * dotProduct(doc_embedding)`.
   * @return value or {@code null} for none
   */
  public java.lang.String getRankingExpression() {
    return rankingExpression;
  }

  /**
   * The ranking expression controls the customized ranking on retrieval documents. To leverage
   * this, document embedding is required. The ranking expression setting in ServingConfig applies
   * to all search requests served by the serving config. However, if
   * SearchRequest.ranking_expression is specified, it overrides the ServingConfig ranking
   * expression. The ranking expression is a single function or multiple functions that are joined
   * by "+". * ranking_expression = function, { " + ", function }; Supported functions: * double *
   * relevance_score * double * dotProduct(embedding_field_path) Function variables: *
   * `relevance_score`: pre-defined keywords, used for measure relevance between query and document.
   * * `embedding_field_path`: the document embedding field used with query embedding vector. *
   * `dotProduct`: embedding function between embedding_field_path and query embedding vector.
   * Example ranking expression: If document has an embedding field doc_embedding, the ranking
   * expression could be `0.5 * relevance_score + 0.3 * dotProduct(doc_embedding)`.
   * @param rankingExpression rankingExpression or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaServingConfig setRankingExpression(java.lang.String rankingExpression) {
    this.rankingExpression = rankingExpression;
    return this;
  }

  /**
   * IDs of the redirect controls. Only the first triggered redirect action is applied, even if
   * multiple apply. Maximum number of specifications is 100. Can only be set if SolutionType is
   * SOLUTION_TYPE_SEARCH.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getRedirectControlIds() {
    return redirectControlIds;
  }

  /**
   * IDs of the redirect controls. Only the first triggered redirect action is applied, even if
   * multiple apply. Maximum number of specifications is 100. Can only be set if SolutionType is
   * SOLUTION_TYPE_SEARCH.
   * @param redirectControlIds redirectControlIds or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaServingConfig setRedirectControlIds(java.util.List<java.lang.String> redirectControlIds) {
    this.redirectControlIds = redirectControlIds;
    return this;
  }

  /**
   * Condition replacement specifications. Applied according to the order in the list. A previously
   * replaced term can not be re-replaced. Maximum number of specifications is 100. Can only be set
   * if SolutionType is SOLUTION_TYPE_SEARCH.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getReplacementControlIds() {
    return replacementControlIds;
  }

  /**
   * Condition replacement specifications. Applied according to the order in the list. A previously
   * replaced term can not be re-replaced. Maximum number of specifications is 100. Can only be set
   * if SolutionType is SOLUTION_TYPE_SEARCH.
   * @param replacementControlIds replacementControlIds or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaServingConfig setReplacementControlIds(java.util.List<java.lang.String> replacementControlIds) {
    this.replacementControlIds = replacementControlIds;
    return this;
  }

  /**
   * Required. Immutable. Specifies the solution type that a serving config can be associated with.
   * @return value or {@code null} for none
   */
  public java.lang.String getSolutionType() {
    return solutionType;
  }

  /**
   * Required. Immutable. Specifies the solution type that a serving config can be associated with.
   * @param solutionType solutionType or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaServingConfig setSolutionType(java.lang.String solutionType) {
    this.solutionType = solutionType;
    return this;
  }

  /**
   * Condition synonyms specifications. If multiple synonyms conditions match, all matching synonyms
   * controls in the list will execute. Maximum number of specifications is 100. Can only be set if
   * SolutionType is SOLUTION_TYPE_SEARCH.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getSynonymsControlIds() {
    return synonymsControlIds;
  }

  /**
   * Condition synonyms specifications. If multiple synonyms conditions match, all matching synonyms
   * controls in the list will execute. Maximum number of specifications is 100. Can only be set if
   * SolutionType is SOLUTION_TYPE_SEARCH.
   * @param synonymsControlIds synonymsControlIds or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaServingConfig setSynonymsControlIds(java.util.List<java.lang.String> synonymsControlIds) {
    this.synonymsControlIds = synonymsControlIds;
    return this;
  }

  /**
   * Output only. ServingConfig updated timestamp.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. ServingConfig updated timestamp.
   * @param updateTime updateTime or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaServingConfig setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public GoogleCloudDiscoveryengineV1betaServingConfig set(String fieldName, Object value) {
    return (GoogleCloudDiscoveryengineV1betaServingConfig) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDiscoveryengineV1betaServingConfig clone() {
    return (GoogleCloudDiscoveryengineV1betaServingConfig) super.clone();
  }

}
