/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.migrationcenter.v1alpha1.model;

/**
 * Disk Partition details.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Migration Center API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class DiskPartition extends com.google.api.client.json.GenericJson {

  /**
   * Partition capacity.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long capacityBytes;

  /**
   * Partition file system.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String fileSystem;

  /**
   * Partition free space.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long freeBytes;

  /**
   * Mount pount (Linux/Windows) or drive letter (Windows).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String mountPoint;

  /**
   * Sub-partitions.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DiskPartitionList subPartitions;

  /**
   * Partition type (e.g. BIOS boot).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * Partition UUID.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String uuid;

  /**
   * Partition capacity.
   * @return value or {@code null} for none
   */
  public java.lang.Long getCapacityBytes() {
    return capacityBytes;
  }

  /**
   * Partition capacity.
   * @param capacityBytes capacityBytes or {@code null} for none
   */
  public DiskPartition setCapacityBytes(java.lang.Long capacityBytes) {
    this.capacityBytes = capacityBytes;
    return this;
  }

  /**
   * Partition file system.
   * @return value or {@code null} for none
   */
  public java.lang.String getFileSystem() {
    return fileSystem;
  }

  /**
   * Partition file system.
   * @param fileSystem fileSystem or {@code null} for none
   */
  public DiskPartition setFileSystem(java.lang.String fileSystem) {
    this.fileSystem = fileSystem;
    return this;
  }

  /**
   * Partition free space.
   * @return value or {@code null} for none
   */
  public java.lang.Long getFreeBytes() {
    return freeBytes;
  }

  /**
   * Partition free space.
   * @param freeBytes freeBytes or {@code null} for none
   */
  public DiskPartition setFreeBytes(java.lang.Long freeBytes) {
    this.freeBytes = freeBytes;
    return this;
  }

  /**
   * Mount pount (Linux/Windows) or drive letter (Windows).
   * @return value or {@code null} for none
   */
  public java.lang.String getMountPoint() {
    return mountPoint;
  }

  /**
   * Mount pount (Linux/Windows) or drive letter (Windows).
   * @param mountPoint mountPoint or {@code null} for none
   */
  public DiskPartition setMountPoint(java.lang.String mountPoint) {
    this.mountPoint = mountPoint;
    return this;
  }

  /**
   * Sub-partitions.
   * @return value or {@code null} for none
   */
  public DiskPartitionList getSubPartitions() {
    return subPartitions;
  }

  /**
   * Sub-partitions.
   * @param subPartitions subPartitions or {@code null} for none
   */
  public DiskPartition setSubPartitions(DiskPartitionList subPartitions) {
    this.subPartitions = subPartitions;
    return this;
  }

  /**
   * Partition type (e.g. BIOS boot).
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * Partition type (e.g. BIOS boot).
   * @param type type or {@code null} for none
   */
  public DiskPartition setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  /**
   * Partition UUID.
   * @return value or {@code null} for none
   */
  public java.lang.String getUuid() {
    return uuid;
  }

  /**
   * Partition UUID.
   * @param uuid uuid or {@code null} for none
   */
  public DiskPartition setUuid(java.lang.String uuid) {
    this.uuid = uuid;
    return this;
  }

  @Override
  public DiskPartition set(String fieldName, Object value) {
    return (DiskPartition) super.set(fieldName, value);
  }

  @Override
  public DiskPartition clone() {
    return (DiskPartition) super.clone();
  }

}
