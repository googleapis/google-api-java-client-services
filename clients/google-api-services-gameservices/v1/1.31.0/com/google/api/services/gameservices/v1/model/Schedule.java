/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.gameservices.v1.model;

/**
 * The schedule of a recurring or one time event. The event's time span is specified by start_time
 * and end_time. If the scheduled event's timespan is larger than the cron_spec + cron_job_duration,
 * the event will be recurring. If only cron_spec + cron_job_duration are specified, the event is
 * effective starting at the local time specified by cron_spec, and is recurring.
 * start_time|-------[cron job]-------[cron job]-------[cron job]---|end_time cron job: cron spec
 * start time + duration
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Game Services API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Schedule extends com.google.api.client.json.GenericJson {

  /**
   * The duration for the cron job event. The duration of the event is effective after the cron
   * job's start time.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String cronJobDuration;

  /**
   * The cron definition of the scheduled event. See https://en.wikipedia.org/wiki/Cron. Cron spec
   * specifies the local time as defined by the realm.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String cronSpec;

  /**
   * The end time of the event.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String endTime;

  /**
   * The start time of the event.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String startTime;

  /**
   * The duration for the cron job event. The duration of the event is effective after the cron
   * job's start time.
   * @return value or {@code null} for none
   */
  public String getCronJobDuration() {
    return cronJobDuration;
  }

  /**
   * The duration for the cron job event. The duration of the event is effective after the cron
   * job's start time.
   * @param cronJobDuration cronJobDuration or {@code null} for none
   */
  public Schedule setCronJobDuration(String cronJobDuration) {
    this.cronJobDuration = cronJobDuration;
    return this;
  }

  /**
   * The cron definition of the scheduled event. See https://en.wikipedia.org/wiki/Cron. Cron spec
   * specifies the local time as defined by the realm.
   * @return value or {@code null} for none
   */
  public java.lang.String getCronSpec() {
    return cronSpec;
  }

  /**
   * The cron definition of the scheduled event. See https://en.wikipedia.org/wiki/Cron. Cron spec
   * specifies the local time as defined by the realm.
   * @param cronSpec cronSpec or {@code null} for none
   */
  public Schedule setCronSpec(java.lang.String cronSpec) {
    this.cronSpec = cronSpec;
    return this;
  }

  /**
   * The end time of the event.
   * @return value or {@code null} for none
   */
  public String getEndTime() {
    return endTime;
  }

  /**
   * The end time of the event.
   * @param endTime endTime or {@code null} for none
   */
  public Schedule setEndTime(String endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * The start time of the event.
   * @return value or {@code null} for none
   */
  public String getStartTime() {
    return startTime;
  }

  /**
   * The start time of the event.
   * @param startTime startTime or {@code null} for none
   */
  public Schedule setStartTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

  @Override
  public Schedule set(String fieldName, Object value) {
    return (Schedule) super.set(fieldName, value);
  }

  @Override
  public Schedule clone() {
    return (Schedule) super.clone();
  }

}
