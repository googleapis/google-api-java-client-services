/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dlp.v2.model;

/**
 * Details about a piece of potentially sensitive information that was detected when the data
 * resource was profiled.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Sensitive Data Protection (DLP). For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GooglePrivacyDlpV2DataProfileFinding extends com.google.api.client.json.GenericJson {

  /**
   * Resource name of the data profile associated with the finding.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String dataProfileResourceName;

  /**
   * A unique identifier for the finding.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String findingId;

  /**
   * The [type of content](https://cloud.google.com/sensitive-data-protection/docs/infotypes-
   * reference) that might have been found.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GooglePrivacyDlpV2InfoType infotype;

  /**
   * Where the content was found.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GooglePrivacyDlpV2DataProfileFindingLocation location;

  /**
   * The content that was found. Even if the content is not textual, it may be converted to a
   * textual representation here. If the finding exceeds 4096 bytes in length, the quote may be
   * omitted.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String quote;

  /**
   * Contains data parsed from quotes. Currently supported infoTypes: DATE, DATE_OF_BIRTH, and TIME.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GooglePrivacyDlpV2QuoteInfo quoteInfo;

  /**
   * How broadly a resource has been shared.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String resourceVisibility;

  /**
   * Timestamp when the finding was detected.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String timestamp;

  /**
   * Resource name of the data profile associated with the finding.
   * @return value or {@code null} for none
   */
  public java.lang.String getDataProfileResourceName() {
    return dataProfileResourceName;
  }

  /**
   * Resource name of the data profile associated with the finding.
   * @param dataProfileResourceName dataProfileResourceName or {@code null} for none
   */
  public GooglePrivacyDlpV2DataProfileFinding setDataProfileResourceName(java.lang.String dataProfileResourceName) {
    this.dataProfileResourceName = dataProfileResourceName;
    return this;
  }

  /**
   * A unique identifier for the finding.
   * @return value or {@code null} for none
   */
  public java.lang.String getFindingId() {
    return findingId;
  }

  /**
   * A unique identifier for the finding.
   * @param findingId findingId or {@code null} for none
   */
  public GooglePrivacyDlpV2DataProfileFinding setFindingId(java.lang.String findingId) {
    this.findingId = findingId;
    return this;
  }

  /**
   * The [type of content](https://cloud.google.com/sensitive-data-protection/docs/infotypes-
   * reference) that might have been found.
   * @return value or {@code null} for none
   */
  public GooglePrivacyDlpV2InfoType getInfotype() {
    return infotype;
  }

  /**
   * The [type of content](https://cloud.google.com/sensitive-data-protection/docs/infotypes-
   * reference) that might have been found.
   * @param infotype infotype or {@code null} for none
   */
  public GooglePrivacyDlpV2DataProfileFinding setInfotype(GooglePrivacyDlpV2InfoType infotype) {
    this.infotype = infotype;
    return this;
  }

  /**
   * Where the content was found.
   * @return value or {@code null} for none
   */
  public GooglePrivacyDlpV2DataProfileFindingLocation getLocation() {
    return location;
  }

  /**
   * Where the content was found.
   * @param location location or {@code null} for none
   */
  public GooglePrivacyDlpV2DataProfileFinding setLocation(GooglePrivacyDlpV2DataProfileFindingLocation location) {
    this.location = location;
    return this;
  }

  /**
   * The content that was found. Even if the content is not textual, it may be converted to a
   * textual representation here. If the finding exceeds 4096 bytes in length, the quote may be
   * omitted.
   * @return value or {@code null} for none
   */
  public java.lang.String getQuote() {
    return quote;
  }

  /**
   * The content that was found. Even if the content is not textual, it may be converted to a
   * textual representation here. If the finding exceeds 4096 bytes in length, the quote may be
   * omitted.
   * @param quote quote or {@code null} for none
   */
  public GooglePrivacyDlpV2DataProfileFinding setQuote(java.lang.String quote) {
    this.quote = quote;
    return this;
  }

  /**
   * Contains data parsed from quotes. Currently supported infoTypes: DATE, DATE_OF_BIRTH, and TIME.
   * @return value or {@code null} for none
   */
  public GooglePrivacyDlpV2QuoteInfo getQuoteInfo() {
    return quoteInfo;
  }

  /**
   * Contains data parsed from quotes. Currently supported infoTypes: DATE, DATE_OF_BIRTH, and TIME.
   * @param quoteInfo quoteInfo or {@code null} for none
   */
  public GooglePrivacyDlpV2DataProfileFinding setQuoteInfo(GooglePrivacyDlpV2QuoteInfo quoteInfo) {
    this.quoteInfo = quoteInfo;
    return this;
  }

  /**
   * How broadly a resource has been shared.
   * @return value or {@code null} for none
   */
  public java.lang.String getResourceVisibility() {
    return resourceVisibility;
  }

  /**
   * How broadly a resource has been shared.
   * @param resourceVisibility resourceVisibility or {@code null} for none
   */
  public GooglePrivacyDlpV2DataProfileFinding setResourceVisibility(java.lang.String resourceVisibility) {
    this.resourceVisibility = resourceVisibility;
    return this;
  }

  /**
   * Timestamp when the finding was detected.
   * @return value or {@code null} for none
   */
  public String getTimestamp() {
    return timestamp;
  }

  /**
   * Timestamp when the finding was detected.
   * @param timestamp timestamp or {@code null} for none
   */
  public GooglePrivacyDlpV2DataProfileFinding setTimestamp(String timestamp) {
    this.timestamp = timestamp;
    return this;
  }

  @Override
  public GooglePrivacyDlpV2DataProfileFinding set(String fieldName, Object value) {
    return (GooglePrivacyDlpV2DataProfileFinding) super.set(fieldName, value);
  }

  @Override
  public GooglePrivacyDlpV2DataProfileFinding clone() {
    return (GooglePrivacyDlpV2DataProfileFinding) super.clone();
  }

}
