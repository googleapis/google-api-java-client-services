/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * LabelGroup is a set of labels produced by a single model, or by multiple models that share the
 * same versioning. It can be used to store results from ICA, box classifier, visible labels,
 * noun+attribute, and so on.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ImageUnderstandingIndexingLabelGroup extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<ImageUnderstandingIndexingLabel> label;

  static {
    // hack to force ProGuard to consider ImageUnderstandingIndexingLabel used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(ImageUnderstandingIndexingLabel.class);
  }

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String version;

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<ImageUnderstandingIndexingLabel> getLabel() {
    return label;
  }

  /**
   * @param label label or {@code null} for none
   */
  public ImageUnderstandingIndexingLabelGroup setLabel(java.util.List<ImageUnderstandingIndexingLabel> label) {
    this.label = label;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getVersion() {
    return version;
  }

  /**
   * @param version version or {@code null} for none
   */
  public ImageUnderstandingIndexingLabelGroup setVersion(java.lang.String version) {
    this.version = version;
    return this;
  }

  @Override
  public ImageUnderstandingIndexingLabelGroup set(String fieldName, Object value) {
    return (ImageUnderstandingIndexingLabelGroup) super.set(fieldName, value);
  }

  @Override
  public ImageUnderstandingIndexingLabelGroup clone() {
    return (ImageUnderstandingIndexingLabelGroup) super.clone();
  }

}
