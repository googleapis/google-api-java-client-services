/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudsearch.v1.model;

/**
 * Information about how devices in a meeting have acked for a session/operation.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Search API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AckInfo extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Number of meeting devices that have not acked yet.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer unackedDeviceCount;

  /**
   * Output only. IDs of meeting devices (at most ten are provided) that have not acked yet.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> unackedDeviceIds;

  /**
   * Output only. Number of meeting devices that have not acked yet.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getUnackedDeviceCount() {
    return unackedDeviceCount;
  }

  /**
   * Output only. Number of meeting devices that have not acked yet.
   * @param unackedDeviceCount unackedDeviceCount or {@code null} for none
   */
  public AckInfo setUnackedDeviceCount(java.lang.Integer unackedDeviceCount) {
    this.unackedDeviceCount = unackedDeviceCount;
    return this;
  }

  /**
   * Output only. IDs of meeting devices (at most ten are provided) that have not acked yet.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getUnackedDeviceIds() {
    return unackedDeviceIds;
  }

  /**
   * Output only. IDs of meeting devices (at most ten are provided) that have not acked yet.
   * @param unackedDeviceIds unackedDeviceIds or {@code null} for none
   */
  public AckInfo setUnackedDeviceIds(java.util.List<java.lang.String> unackedDeviceIds) {
    this.unackedDeviceIds = unackedDeviceIds;
    return this;
  }

  @Override
  public AckInfo set(String fieldName, Object value) {
    return (AckInfo) super.set(fieldName, value);
  }

  @Override
  public AckInfo clone() {
    return (AckInfo) super.clone();
  }

}
