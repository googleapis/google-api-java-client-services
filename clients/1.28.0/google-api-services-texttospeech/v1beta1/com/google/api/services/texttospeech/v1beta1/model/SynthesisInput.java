/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.texttospeech.v1beta1.model;

/**
 * Contains text input to be synthesized. Either `text` or `ssml` must be supplied. Supplying both
 * or neither returns google.rpc.Code.INVALID_ARGUMENT. The input size is limited to 5000
 * characters.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Text-to-Speech API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class SynthesisInput extends com.google.api.client.json.GenericJson {

  /**
   * The SSML document to be synthesized. The SSML document must be valid and well-formed. Otherwise
   * the RPC will fail and return google.rpc.Code.INVALID_ARGUMENT. For more information, see
   * [SSML](/speech/text-to-speech/docs/ssml).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String ssml;

  /**
   * The raw text to be synthesized.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String text;

  /**
   * The SSML document to be synthesized. The SSML document must be valid and well-formed. Otherwise
   * the RPC will fail and return google.rpc.Code.INVALID_ARGUMENT. For more information, see
   * [SSML](/speech/text-to-speech/docs/ssml).
   * @return value or {@code null} for none
   */
  public java.lang.String getSsml() {
    return ssml;
  }

  /**
   * The SSML document to be synthesized. The SSML document must be valid and well-formed. Otherwise
   * the RPC will fail and return google.rpc.Code.INVALID_ARGUMENT. For more information, see
   * [SSML](/speech/text-to-speech/docs/ssml).
   * @param ssml ssml or {@code null} for none
   */
  public SynthesisInput setSsml(java.lang.String ssml) {
    this.ssml = ssml;
    return this;
  }

  /**
   * The raw text to be synthesized.
   * @return value or {@code null} for none
   */
  public java.lang.String getText() {
    return text;
  }

  /**
   * The raw text to be synthesized.
   * @param text text or {@code null} for none
   */
  public SynthesisInput setText(java.lang.String text) {
    this.text = text;
    return this;
  }

  @Override
  public SynthesisInput set(String fieldName, Object value) {
    return (SynthesisInput) super.set(fieldName, value);
  }

  @Override
  public SynthesisInput clone() {
    return (SynthesisInput) super.clone();
  }

}
