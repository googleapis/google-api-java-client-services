/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.androidmanagement.v1.model;

/**
 * Preferential network service settings.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Android Management API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class PreferentialNetworkServiceSettings extends com.google.api.client.json.GenericJson {

  /**
   * Required. Default preferential network ID for the applications that are not in applications or
   * if ApplicationPolicy.preferentialNetworkId is set to PREFERENTIAL_NETWORK_ID_UNSPECIFIED. There
   * must be a configuration for the specified network ID in preferentialNetworkServiceConfigs,
   * unless this is set to NO_PREFERENTIAL_NETWORK. If set to PREFERENTIAL_NETWORK_ID_UNSPECIFIED or
   * unset, this defaults to NO_PREFERENTIAL_NETWORK. Note: If the default preferential network is
   * misconfigured, applications with no ApplicationPolicy.preferentialNetworkId set are not able to
   * access the internet. This setting does not apply to the following critical apps:
   * com.google.android.apps.work.clouddpc
   * com.google.android.gmsApplicationPolicy.preferentialNetworkId can still be used to configure
   * the preferential network for them.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String defaultPreferentialNetworkId;

  /**
   * Required. Preferential network service configurations which enables having multiple enterprise
   * slices. There must not be multiple configurations with the same preferentialNetworkId. If a
   * configuration is not referenced by any application by setting
   * ApplicationPolicy.preferentialNetworkId or by setting defaultPreferentialNetworkId, it will be
   * ignored. For devices on 4G networks, enterprise APN needs to be configured additionally to set
   * up data call for preferential network service. These APNs can be added using apnPolicy.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<PreferentialNetworkServiceConfig> preferentialNetworkServiceConfigs;

  static {
    // hack to force ProGuard to consider PreferentialNetworkServiceConfig used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(PreferentialNetworkServiceConfig.class);
  }

  /**
   * Required. Default preferential network ID for the applications that are not in applications or
   * if ApplicationPolicy.preferentialNetworkId is set to PREFERENTIAL_NETWORK_ID_UNSPECIFIED. There
   * must be a configuration for the specified network ID in preferentialNetworkServiceConfigs,
   * unless this is set to NO_PREFERENTIAL_NETWORK. If set to PREFERENTIAL_NETWORK_ID_UNSPECIFIED or
   * unset, this defaults to NO_PREFERENTIAL_NETWORK. Note: If the default preferential network is
   * misconfigured, applications with no ApplicationPolicy.preferentialNetworkId set are not able to
   * access the internet. This setting does not apply to the following critical apps:
   * com.google.android.apps.work.clouddpc
   * com.google.android.gmsApplicationPolicy.preferentialNetworkId can still be used to configure
   * the preferential network for them.
   * @return value or {@code null} for none
   */
  public java.lang.String getDefaultPreferentialNetworkId() {
    return defaultPreferentialNetworkId;
  }

  /**
   * Required. Default preferential network ID for the applications that are not in applications or
   * if ApplicationPolicy.preferentialNetworkId is set to PREFERENTIAL_NETWORK_ID_UNSPECIFIED. There
   * must be a configuration for the specified network ID in preferentialNetworkServiceConfigs,
   * unless this is set to NO_PREFERENTIAL_NETWORK. If set to PREFERENTIAL_NETWORK_ID_UNSPECIFIED or
   * unset, this defaults to NO_PREFERENTIAL_NETWORK. Note: If the default preferential network is
   * misconfigured, applications with no ApplicationPolicy.preferentialNetworkId set are not able to
   * access the internet. This setting does not apply to the following critical apps:
   * com.google.android.apps.work.clouddpc
   * com.google.android.gmsApplicationPolicy.preferentialNetworkId can still be used to configure
   * the preferential network for them.
   * @param defaultPreferentialNetworkId defaultPreferentialNetworkId or {@code null} for none
   */
  public PreferentialNetworkServiceSettings setDefaultPreferentialNetworkId(java.lang.String defaultPreferentialNetworkId) {
    this.defaultPreferentialNetworkId = defaultPreferentialNetworkId;
    return this;
  }

  /**
   * Required. Preferential network service configurations which enables having multiple enterprise
   * slices. There must not be multiple configurations with the same preferentialNetworkId. If a
   * configuration is not referenced by any application by setting
   * ApplicationPolicy.preferentialNetworkId or by setting defaultPreferentialNetworkId, it will be
   * ignored. For devices on 4G networks, enterprise APN needs to be configured additionally to set
   * up data call for preferential network service. These APNs can be added using apnPolicy.
   * @return value or {@code null} for none
   */
  public java.util.List<PreferentialNetworkServiceConfig> getPreferentialNetworkServiceConfigs() {
    return preferentialNetworkServiceConfigs;
  }

  /**
   * Required. Preferential network service configurations which enables having multiple enterprise
   * slices. There must not be multiple configurations with the same preferentialNetworkId. If a
   * configuration is not referenced by any application by setting
   * ApplicationPolicy.preferentialNetworkId or by setting defaultPreferentialNetworkId, it will be
   * ignored. For devices on 4G networks, enterprise APN needs to be configured additionally to set
   * up data call for preferential network service. These APNs can be added using apnPolicy.
   * @param preferentialNetworkServiceConfigs preferentialNetworkServiceConfigs or {@code null} for none
   */
  public PreferentialNetworkServiceSettings setPreferentialNetworkServiceConfigs(java.util.List<PreferentialNetworkServiceConfig> preferentialNetworkServiceConfigs) {
    this.preferentialNetworkServiceConfigs = preferentialNetworkServiceConfigs;
    return this;
  }

  @Override
  public PreferentialNetworkServiceSettings set(String fieldName, Object value) {
    return (PreferentialNetworkServiceSettings) super.set(fieldName, value);
  }

  @Override
  public PreferentialNetworkServiceSettings clone() {
    return (PreferentialNetworkServiceSettings) super.clone();
  }

}
