/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Video stream description with no PII.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class VideoMediaOverviewVideoOverview extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String aspectRatio;

  /**
   * Prefer average_fps to match the logic used in transcoder for format profile frame rate checks.
   * First added for Photos, see b/165839654.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double averageFps;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer codecId;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String colorDynamicRange;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double fps;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer height;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String resolution;

  /**
   * Approximate video length. Data is rounded up to the next second, to avoid being PII. (Long ago,
   * YTFE set a precedent of rounding up durations, rather than rounding to the closest second.)
   * This value is derived from metadata in the source video, and often differs from the actual
   * duration of any given transcode. In videos without valid timestamps, this value is not
   * calculable, and is reported as zero. Prefer the value from MediaInfo::VideoStream over this
   * value, which was added to resolve b/202864365.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer roundedUpOriginalDurationSec;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean videoHasClosedCaptions;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer width;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getAspectRatio() {
    return aspectRatio;
  }

  /**
   * @param aspectRatio aspectRatio or {@code null} for none
   */
  public VideoMediaOverviewVideoOverview setAspectRatio(java.lang.String aspectRatio) {
    this.aspectRatio = aspectRatio;
    return this;
  }

  /**
   * Prefer average_fps to match the logic used in transcoder for format profile frame rate checks.
   * First added for Photos, see b/165839654.
   * @return value or {@code null} for none
   */
  public java.lang.Double getAverageFps() {
    return averageFps;
  }

  /**
   * Prefer average_fps to match the logic used in transcoder for format profile frame rate checks.
   * First added for Photos, see b/165839654.
   * @param averageFps averageFps or {@code null} for none
   */
  public VideoMediaOverviewVideoOverview setAverageFps(java.lang.Double averageFps) {
    this.averageFps = averageFps;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getCodecId() {
    return codecId;
  }

  /**
   * @param codecId codecId or {@code null} for none
   */
  public VideoMediaOverviewVideoOverview setCodecId(java.lang.Integer codecId) {
    this.codecId = codecId;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getColorDynamicRange() {
    return colorDynamicRange;
  }

  /**
   * @param colorDynamicRange colorDynamicRange or {@code null} for none
   */
  public VideoMediaOverviewVideoOverview setColorDynamicRange(java.lang.String colorDynamicRange) {
    this.colorDynamicRange = colorDynamicRange;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Double getFps() {
    return fps;
  }

  /**
   * @param fps fps or {@code null} for none
   */
  public VideoMediaOverviewVideoOverview setFps(java.lang.Double fps) {
    this.fps = fps;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getHeight() {
    return height;
  }

  /**
   * @param height height or {@code null} for none
   */
  public VideoMediaOverviewVideoOverview setHeight(java.lang.Integer height) {
    this.height = height;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getResolution() {
    return resolution;
  }

  /**
   * @param resolution resolution or {@code null} for none
   */
  public VideoMediaOverviewVideoOverview setResolution(java.lang.String resolution) {
    this.resolution = resolution;
    return this;
  }

  /**
   * Approximate video length. Data is rounded up to the next second, to avoid being PII. (Long ago,
   * YTFE set a precedent of rounding up durations, rather than rounding to the closest second.)
   * This value is derived from metadata in the source video, and often differs from the actual
   * duration of any given transcode. In videos without valid timestamps, this value is not
   * calculable, and is reported as zero. Prefer the value from MediaInfo::VideoStream over this
   * value, which was added to resolve b/202864365.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getRoundedUpOriginalDurationSec() {
    return roundedUpOriginalDurationSec;
  }

  /**
   * Approximate video length. Data is rounded up to the next second, to avoid being PII. (Long ago,
   * YTFE set a precedent of rounding up durations, rather than rounding to the closest second.)
   * This value is derived from metadata in the source video, and often differs from the actual
   * duration of any given transcode. In videos without valid timestamps, this value is not
   * calculable, and is reported as zero. Prefer the value from MediaInfo::VideoStream over this
   * value, which was added to resolve b/202864365.
   * @param roundedUpOriginalDurationSec roundedUpOriginalDurationSec or {@code null} for none
   */
  public VideoMediaOverviewVideoOverview setRoundedUpOriginalDurationSec(java.lang.Integer roundedUpOriginalDurationSec) {
    this.roundedUpOriginalDurationSec = roundedUpOriginalDurationSec;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getVideoHasClosedCaptions() {
    return videoHasClosedCaptions;
  }

  /**
   * @param videoHasClosedCaptions videoHasClosedCaptions or {@code null} for none
   */
  public VideoMediaOverviewVideoOverview setVideoHasClosedCaptions(java.lang.Boolean videoHasClosedCaptions) {
    this.videoHasClosedCaptions = videoHasClosedCaptions;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getWidth() {
    return width;
  }

  /**
   * @param width width or {@code null} for none
   */
  public VideoMediaOverviewVideoOverview setWidth(java.lang.Integer width) {
    this.width = width;
    return this;
  }

  @Override
  public VideoMediaOverviewVideoOverview set(String fieldName, Object value) {
    return (VideoMediaOverviewVideoOverview) super.set(fieldName, value);
  }

  @Override
  public VideoMediaOverviewVideoOverview clone() {
    return (VideoMediaOverviewVideoOverview) super.clone();
  }

}
