/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.integrations.v1alpha.model;

/**
 * Model definition for EnterpriseCrmEventbusProtoCloudKmsConfig.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Application Integration API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class EnterpriseCrmEventbusProtoCloudKmsConfig extends com.google.api.client.json.GenericJson {

  /**
   * Optional. The id of GCP project where the KMS key is stored. If not provided, assume the key is
   * stored in the same GCP project defined in Client (tag 14).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String gcpProjectId;

  /**
   * A Cloud KMS key is a named object containing one or more key versions, along with metadata for
   * the key. A key exists on exactly one key ring tied to a specific location.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String keyName;

  /**
   * A key ring organizes keys in a specific Google Cloud location and allows you to manage access
   * control on groups of keys. A key ring's name does not need to be unique across a Google Cloud
   * project, but must be unique within a given location.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String keyRingName;

  /**
   * Optional. Each version of a key contains key material used for encryption or signing. A key's
   * version is represented by an integer, starting at 1. To decrypt data or verify a signature, you
   * must use the same key version that was used to encrypt or sign the data.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String keyVersionName;

  /**
   * Location name of the key ring, e.g. "us-west1".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String locationName;

  /**
   * Optional. The service account used for authentication of this KMS key. If this is not provided,
   * the service account in Client.clientSource will be used.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String serviceAccount;

  /**
   * Optional. The id of GCP project where the KMS key is stored. If not provided, assume the key is
   * stored in the same GCP project defined in Client (tag 14).
   * @return value or {@code null} for none
   */
  public java.lang.String getGcpProjectId() {
    return gcpProjectId;
  }

  /**
   * Optional. The id of GCP project where the KMS key is stored. If not provided, assume the key is
   * stored in the same GCP project defined in Client (tag 14).
   * @param gcpProjectId gcpProjectId or {@code null} for none
   */
  public EnterpriseCrmEventbusProtoCloudKmsConfig setGcpProjectId(java.lang.String gcpProjectId) {
    this.gcpProjectId = gcpProjectId;
    return this;
  }

  /**
   * A Cloud KMS key is a named object containing one or more key versions, along with metadata for
   * the key. A key exists on exactly one key ring tied to a specific location.
   * @return value or {@code null} for none
   */
  public java.lang.String getKeyName() {
    return keyName;
  }

  /**
   * A Cloud KMS key is a named object containing one or more key versions, along with metadata for
   * the key. A key exists on exactly one key ring tied to a specific location.
   * @param keyName keyName or {@code null} for none
   */
  public EnterpriseCrmEventbusProtoCloudKmsConfig setKeyName(java.lang.String keyName) {
    this.keyName = keyName;
    return this;
  }

  /**
   * A key ring organizes keys in a specific Google Cloud location and allows you to manage access
   * control on groups of keys. A key ring's name does not need to be unique across a Google Cloud
   * project, but must be unique within a given location.
   * @return value or {@code null} for none
   */
  public java.lang.String getKeyRingName() {
    return keyRingName;
  }

  /**
   * A key ring organizes keys in a specific Google Cloud location and allows you to manage access
   * control on groups of keys. A key ring's name does not need to be unique across a Google Cloud
   * project, but must be unique within a given location.
   * @param keyRingName keyRingName or {@code null} for none
   */
  public EnterpriseCrmEventbusProtoCloudKmsConfig setKeyRingName(java.lang.String keyRingName) {
    this.keyRingName = keyRingName;
    return this;
  }

  /**
   * Optional. Each version of a key contains key material used for encryption or signing. A key's
   * version is represented by an integer, starting at 1. To decrypt data or verify a signature, you
   * must use the same key version that was used to encrypt or sign the data.
   * @return value or {@code null} for none
   */
  public java.lang.String getKeyVersionName() {
    return keyVersionName;
  }

  /**
   * Optional. Each version of a key contains key material used for encryption or signing. A key's
   * version is represented by an integer, starting at 1. To decrypt data or verify a signature, you
   * must use the same key version that was used to encrypt or sign the data.
   * @param keyVersionName keyVersionName or {@code null} for none
   */
  public EnterpriseCrmEventbusProtoCloudKmsConfig setKeyVersionName(java.lang.String keyVersionName) {
    this.keyVersionName = keyVersionName;
    return this;
  }

  /**
   * Location name of the key ring, e.g. "us-west1".
   * @return value or {@code null} for none
   */
  public java.lang.String getLocationName() {
    return locationName;
  }

  /**
   * Location name of the key ring, e.g. "us-west1".
   * @param locationName locationName or {@code null} for none
   */
  public EnterpriseCrmEventbusProtoCloudKmsConfig setLocationName(java.lang.String locationName) {
    this.locationName = locationName;
    return this;
  }

  /**
   * Optional. The service account used for authentication of this KMS key. If this is not provided,
   * the service account in Client.clientSource will be used.
   * @return value or {@code null} for none
   */
  public java.lang.String getServiceAccount() {
    return serviceAccount;
  }

  /**
   * Optional. The service account used for authentication of this KMS key. If this is not provided,
   * the service account in Client.clientSource will be used.
   * @param serviceAccount serviceAccount or {@code null} for none
   */
  public EnterpriseCrmEventbusProtoCloudKmsConfig setServiceAccount(java.lang.String serviceAccount) {
    this.serviceAccount = serviceAccount;
    return this;
  }

  @Override
  public EnterpriseCrmEventbusProtoCloudKmsConfig set(String fieldName, Object value) {
    return (EnterpriseCrmEventbusProtoCloudKmsConfig) super.set(fieldName, value);
  }

  @Override
  public EnterpriseCrmEventbusProtoCloudKmsConfig clone() {
    return (EnterpriseCrmEventbusProtoCloudKmsConfig) super.clone();
  }

}
