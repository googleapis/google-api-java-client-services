/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.displayvideo.v1.model;

/**
 * Settings that control how conversions are counted. All post-click conversions will be counted. A
 * percentage value can be set for post-view conversions counting.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Display & Video 360 API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ConversionCountingConfig extends com.google.api.client.json.GenericJson {

  /**
   * The Floodlight activity configs used to track conversions. The number of conversions counted is
   * the sum of all of the conversions counted by all of the Floodlight activity IDs specified in
   * this field.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<TrackingFloodlightActivityConfig> floodlightActivityConfigs;

  /**
   * The percentage of post-view conversions to count, in millis (1/1000 of a percent). Must be
   * between 0 and 100000 inclusive. For example, to track 50% of the post-click conversions, set a
   * value of 50000.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long postViewCountPercentageMillis;

  /**
   * The Floodlight activity configs used to track conversions. The number of conversions counted is
   * the sum of all of the conversions counted by all of the Floodlight activity IDs specified in
   * this field.
   * @return value or {@code null} for none
   */
  public java.util.List<TrackingFloodlightActivityConfig> getFloodlightActivityConfigs() {
    return floodlightActivityConfigs;
  }

  /**
   * The Floodlight activity configs used to track conversions. The number of conversions counted is
   * the sum of all of the conversions counted by all of the Floodlight activity IDs specified in
   * this field.
   * @param floodlightActivityConfigs floodlightActivityConfigs or {@code null} for none
   */
  public ConversionCountingConfig setFloodlightActivityConfigs(java.util.List<TrackingFloodlightActivityConfig> floodlightActivityConfigs) {
    this.floodlightActivityConfigs = floodlightActivityConfigs;
    return this;
  }

  /**
   * The percentage of post-view conversions to count, in millis (1/1000 of a percent). Must be
   * between 0 and 100000 inclusive. For example, to track 50% of the post-click conversions, set a
   * value of 50000.
   * @return value or {@code null} for none
   */
  public java.lang.Long getPostViewCountPercentageMillis() {
    return postViewCountPercentageMillis;
  }

  /**
   * The percentage of post-view conversions to count, in millis (1/1000 of a percent). Must be
   * between 0 and 100000 inclusive. For example, to track 50% of the post-click conversions, set a
   * value of 50000.
   * @param postViewCountPercentageMillis postViewCountPercentageMillis or {@code null} for none
   */
  public ConversionCountingConfig setPostViewCountPercentageMillis(java.lang.Long postViewCountPercentageMillis) {
    this.postViewCountPercentageMillis = postViewCountPercentageMillis;
    return this;
  }

  @Override
  public ConversionCountingConfig set(String fieldName, Object value) {
    return (ConversionCountingConfig) super.set(fieldName, value);
  }

  @Override
  public ConversionCountingConfig clone() {
    return (ConversionCountingConfig) super.clone();
  }

}
