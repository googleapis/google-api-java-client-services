/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.replicapool.model;

/**
 * Parameters for creating a Compute Engine Instance resource. Most fields are identical to the
 * corresponding Compute Engine resource.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Replica Pool API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class VmParams extends com.google.api.client.json.GenericJson {

  /**
   * Deprecated. Please use baseInstanceName instead.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String baseInstanceName;

  /**
   * Enables IP Forwarding, which allows this instance to receive packets destined for a different
   * IP address, and send packets with a different source IP. See IP Forwarding for more
   * information.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean canIpForward;

  /**
   * An optional textual description of the instance.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * A list of existing Persistent Disk resources to attach to each replica in the pool. Each disk
   * will be attached in read-only mode to every replica.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<ExistingDisk> disksToAttach;

  static {
    // hack to force ProGuard to consider ExistingDisk used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(ExistingDisk.class);
  }

  /**
   * A list of Disk resources to create and attach to each Replica in the Pool. Currently, you can
   * only define one disk and it must be a root persistent disk. Note that Replica Pool will create
   * a root persistent disk for each replica.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<NewDisk> disksToCreate;

  static {
    // hack to force ProGuard to consider NewDisk used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(NewDisk.class);
  }

  /**
   * The machine type for this instance. The resource name (e.g. n1-standard-1).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String machineType;

  /**
   * The metadata key/value pairs assigned to this instance.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Metadata metadata;

  /**
   * A list of network interfaces for the instance. Currently only one interface is supported by
   * Google Compute Engine, ONE_TO_ONE_NAT.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<NetworkInterface> networkInterfaces;

  static {
    // hack to force ProGuard to consider NetworkInterface used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(NetworkInterface.class);
  }

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String onHostMaintenance;

  /**
   * A list of Service Accounts to enable for this instance.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<ServiceAccount> serviceAccounts;

  static {
    // hack to force ProGuard to consider ServiceAccount used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(ServiceAccount.class);
  }

  /**
   * A list of tags to apply to the Google Compute Engine instance to identify resources.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Tag tags;

  /**
   * Deprecated. Please use baseInstanceName instead.
   * @return value or {@code null} for none
   */
  public java.lang.String getBaseInstanceName() {
    return baseInstanceName;
  }

  /**
   * Deprecated. Please use baseInstanceName instead.
   * @param baseInstanceName baseInstanceName or {@code null} for none
   */
  public VmParams setBaseInstanceName(java.lang.String baseInstanceName) {
    this.baseInstanceName = baseInstanceName;
    return this;
  }

  /**
   * Enables IP Forwarding, which allows this instance to receive packets destined for a different
   * IP address, and send packets with a different source IP. See IP Forwarding for more
   * information.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getCanIpForward() {
    return canIpForward;
  }

  /**
   * Enables IP Forwarding, which allows this instance to receive packets destined for a different
   * IP address, and send packets with a different source IP. See IP Forwarding for more
   * information.
   * @param canIpForward canIpForward or {@code null} for none
   */
  public VmParams setCanIpForward(java.lang.Boolean canIpForward) {
    this.canIpForward = canIpForward;
    return this;
  }

  /**
   * An optional textual description of the instance.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * An optional textual description of the instance.
   * @param description description or {@code null} for none
   */
  public VmParams setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * A list of existing Persistent Disk resources to attach to each replica in the pool. Each disk
   * will be attached in read-only mode to every replica.
   * @return value or {@code null} for none
   */
  public java.util.List<ExistingDisk> getDisksToAttach() {
    return disksToAttach;
  }

  /**
   * A list of existing Persistent Disk resources to attach to each replica in the pool. Each disk
   * will be attached in read-only mode to every replica.
   * @param disksToAttach disksToAttach or {@code null} for none
   */
  public VmParams setDisksToAttach(java.util.List<ExistingDisk> disksToAttach) {
    this.disksToAttach = disksToAttach;
    return this;
  }

  /**
   * A list of Disk resources to create and attach to each Replica in the Pool. Currently, you can
   * only define one disk and it must be a root persistent disk. Note that Replica Pool will create
   * a root persistent disk for each replica.
   * @return value or {@code null} for none
   */
  public java.util.List<NewDisk> getDisksToCreate() {
    return disksToCreate;
  }

  /**
   * A list of Disk resources to create and attach to each Replica in the Pool. Currently, you can
   * only define one disk and it must be a root persistent disk. Note that Replica Pool will create
   * a root persistent disk for each replica.
   * @param disksToCreate disksToCreate or {@code null} for none
   */
  public VmParams setDisksToCreate(java.util.List<NewDisk> disksToCreate) {
    this.disksToCreate = disksToCreate;
    return this;
  }

  /**
   * The machine type for this instance. The resource name (e.g. n1-standard-1).
   * @return value or {@code null} for none
   */
  public java.lang.String getMachineType() {
    return machineType;
  }

  /**
   * The machine type for this instance. The resource name (e.g. n1-standard-1).
   * @param machineType machineType or {@code null} for none
   */
  public VmParams setMachineType(java.lang.String machineType) {
    this.machineType = machineType;
    return this;
  }

  /**
   * The metadata key/value pairs assigned to this instance.
   * @return value or {@code null} for none
   */
  public Metadata getMetadata() {
    return metadata;
  }

  /**
   * The metadata key/value pairs assigned to this instance.
   * @param metadata metadata or {@code null} for none
   */
  public VmParams setMetadata(Metadata metadata) {
    this.metadata = metadata;
    return this;
  }

  /**
   * A list of network interfaces for the instance. Currently only one interface is supported by
   * Google Compute Engine, ONE_TO_ONE_NAT.
   * @return value or {@code null} for none
   */
  public java.util.List<NetworkInterface> getNetworkInterfaces() {
    return networkInterfaces;
  }

  /**
   * A list of network interfaces for the instance. Currently only one interface is supported by
   * Google Compute Engine, ONE_TO_ONE_NAT.
   * @param networkInterfaces networkInterfaces or {@code null} for none
   */
  public VmParams setNetworkInterfaces(java.util.List<NetworkInterface> networkInterfaces) {
    this.networkInterfaces = networkInterfaces;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getOnHostMaintenance() {
    return onHostMaintenance;
  }

  /**
   * @param onHostMaintenance onHostMaintenance or {@code null} for none
   */
  public VmParams setOnHostMaintenance(java.lang.String onHostMaintenance) {
    this.onHostMaintenance = onHostMaintenance;
    return this;
  }

  /**
   * A list of Service Accounts to enable for this instance.
   * @return value or {@code null} for none
   */
  public java.util.List<ServiceAccount> getServiceAccounts() {
    return serviceAccounts;
  }

  /**
   * A list of Service Accounts to enable for this instance.
   * @param serviceAccounts serviceAccounts or {@code null} for none
   */
  public VmParams setServiceAccounts(java.util.List<ServiceAccount> serviceAccounts) {
    this.serviceAccounts = serviceAccounts;
    return this;
  }

  /**
   * A list of tags to apply to the Google Compute Engine instance to identify resources.
   * @return value or {@code null} for none
   */
  public Tag getTags() {
    return tags;
  }

  /**
   * A list of tags to apply to the Google Compute Engine instance to identify resources.
   * @param tags tags or {@code null} for none
   */
  public VmParams setTags(Tag tags) {
    this.tags = tags;
    return this;
  }

  @Override
  public VmParams set(String fieldName, Object value) {
    return (VmParams) super.set(fieldName, value);
  }

  @Override
  public VmParams clone() {
    return (VmParams) super.clone();
  }

}
