/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.gkeonprem.v1.model;

/**
 * BareMetalNodePoolConfig describes the configuration of all nodes within a given bare metal node
 * pool.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Anthos On-Prem API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class BareMetalNodePoolConfig extends com.google.api.client.json.GenericJson {

  /**
   * The modifiable kubelet configurations for the bare metal machines.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private BareMetalKubeletConfig kubeletConfig;

  /**
   * The labels assigned to nodes of this node pool. An object containing a list of key/value pairs.
   * Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Required. The list of machine addresses in the bare metal node pool.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<BareMetalNodeConfig> nodeConfigs;

  static {
    // hack to force ProGuard to consider BareMetalNodeConfig used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(BareMetalNodeConfig.class);
  }

  /**
   * Specifies the nodes operating system (default: LINUX).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String operatingSystem;

  /**
   * The initial taints assigned to nodes of this node pool.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<NodeTaint> taints;

  /**
   * The modifiable kubelet configurations for the bare metal machines.
   * @return value or {@code null} for none
   */
  public BareMetalKubeletConfig getKubeletConfig() {
    return kubeletConfig;
  }

  /**
   * The modifiable kubelet configurations for the bare metal machines.
   * @param kubeletConfig kubeletConfig or {@code null} for none
   */
  public BareMetalNodePoolConfig setKubeletConfig(BareMetalKubeletConfig kubeletConfig) {
    this.kubeletConfig = kubeletConfig;
    return this;
  }

  /**
   * The labels assigned to nodes of this node pool. An object containing a list of key/value pairs.
   * Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * The labels assigned to nodes of this node pool. An object containing a list of key/value pairs.
   * Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
   * @param labels labels or {@code null} for none
   */
  public BareMetalNodePoolConfig setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Required. The list of machine addresses in the bare metal node pool.
   * @return value or {@code null} for none
   */
  public java.util.List<BareMetalNodeConfig> getNodeConfigs() {
    return nodeConfigs;
  }

  /**
   * Required. The list of machine addresses in the bare metal node pool.
   * @param nodeConfigs nodeConfigs or {@code null} for none
   */
  public BareMetalNodePoolConfig setNodeConfigs(java.util.List<BareMetalNodeConfig> nodeConfigs) {
    this.nodeConfigs = nodeConfigs;
    return this;
  }

  /**
   * Specifies the nodes operating system (default: LINUX).
   * @return value or {@code null} for none
   */
  public java.lang.String getOperatingSystem() {
    return operatingSystem;
  }

  /**
   * Specifies the nodes operating system (default: LINUX).
   * @param operatingSystem operatingSystem or {@code null} for none
   */
  public BareMetalNodePoolConfig setOperatingSystem(java.lang.String operatingSystem) {
    this.operatingSystem = operatingSystem;
    return this;
  }

  /**
   * The initial taints assigned to nodes of this node pool.
   * @return value or {@code null} for none
   */
  public java.util.List<NodeTaint> getTaints() {
    return taints;
  }

  /**
   * The initial taints assigned to nodes of this node pool.
   * @param taints taints or {@code null} for none
   */
  public BareMetalNodePoolConfig setTaints(java.util.List<NodeTaint> taints) {
    this.taints = taints;
    return this;
  }

  @Override
  public BareMetalNodePoolConfig set(String fieldName, Object value) {
    return (BareMetalNodePoolConfig) super.set(fieldName, value);
  }

  @Override
  public BareMetalNodePoolConfig clone() {
    return (BareMetalNodePoolConfig) super.clone();
  }

}
