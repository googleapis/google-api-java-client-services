/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.migrationcenter.v1alpha1.model;

/**
 * The preferences that apply to all assets in a given context.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Migration Center API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class PreferenceSet extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The timestamp when the preference set was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * A description of the preference set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * User-friendly display name. Maximum length is 63 characters.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Output only. Name of the preference set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. The timestamp when the preference set was last updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * A set of preferences that applies to all virtual machines in the context.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private VirtualMachinePreferences virtualMachinePreferences;

  /**
   * Output only. The timestamp when the preference set was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The timestamp when the preference set was created.
   * @param createTime createTime or {@code null} for none
   */
  public PreferenceSet setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * A description of the preference set.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * A description of the preference set.
   * @param description description or {@code null} for none
   */
  public PreferenceSet setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * User-friendly display name. Maximum length is 63 characters.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * User-friendly display name. Maximum length is 63 characters.
   * @param displayName displayName or {@code null} for none
   */
  public PreferenceSet setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Output only. Name of the preference set.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. Name of the preference set.
   * @param name name or {@code null} for none
   */
  public PreferenceSet setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. The timestamp when the preference set was last updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. The timestamp when the preference set was last updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public PreferenceSet setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  /**
   * A set of preferences that applies to all virtual machines in the context.
   * @return value or {@code null} for none
   */
  public VirtualMachinePreferences getVirtualMachinePreferences() {
    return virtualMachinePreferences;
  }

  /**
   * A set of preferences that applies to all virtual machines in the context.
   * @param virtualMachinePreferences virtualMachinePreferences or {@code null} for none
   */
  public PreferenceSet setVirtualMachinePreferences(VirtualMachinePreferences virtualMachinePreferences) {
    this.virtualMachinePreferences = virtualMachinePreferences;
    return this;
  }

  @Override
  public PreferenceSet set(String fieldName, Object value) {
    return (PreferenceSet) super.set(fieldName, value);
  }

  @Override
  public PreferenceSet clone() {
    return (PreferenceSet) super.clone();
  }

}
