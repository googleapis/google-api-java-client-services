/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dlp.v2.model;

/**
 * A pattern to match against one or more database resources. At least one pattern must be
 * specified. Regular expressions use RE2 [syntax](https://github.com/google/re2/wiki/Syntax); a
 * guide can be found under the google/re2 repository on GitHub.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Sensitive Data Protection (DLP). For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GooglePrivacyDlpV2DatabaseResourceRegex extends com.google.api.client.json.GenericJson {

  /**
   * Regex to test the database name against. If empty, all databases match.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String databaseRegex;

  /**
   * Regex to test the database resource's name against. An example of a database resource name is a
   * table's name. Other database resource names like view names could be included in the future. If
   * empty, all database resources match.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String databaseResourceNameRegex;

  /**
   * Regex to test the instance name against. If empty, all instances match.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String instanceRegex;

  /**
   * For organizations, if unset, will match all projects. Has no effect for configurations created
   * within a project.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String projectIdRegex;

  /**
   * Regex to test the database name against. If empty, all databases match.
   * @return value or {@code null} for none
   */
  public java.lang.String getDatabaseRegex() {
    return databaseRegex;
  }

  /**
   * Regex to test the database name against. If empty, all databases match.
   * @param databaseRegex databaseRegex or {@code null} for none
   */
  public GooglePrivacyDlpV2DatabaseResourceRegex setDatabaseRegex(java.lang.String databaseRegex) {
    this.databaseRegex = databaseRegex;
    return this;
  }

  /**
   * Regex to test the database resource's name against. An example of a database resource name is a
   * table's name. Other database resource names like view names could be included in the future. If
   * empty, all database resources match.
   * @return value or {@code null} for none
   */
  public java.lang.String getDatabaseResourceNameRegex() {
    return databaseResourceNameRegex;
  }

  /**
   * Regex to test the database resource's name against. An example of a database resource name is a
   * table's name. Other database resource names like view names could be included in the future. If
   * empty, all database resources match.
   * @param databaseResourceNameRegex databaseResourceNameRegex or {@code null} for none
   */
  public GooglePrivacyDlpV2DatabaseResourceRegex setDatabaseResourceNameRegex(java.lang.String databaseResourceNameRegex) {
    this.databaseResourceNameRegex = databaseResourceNameRegex;
    return this;
  }

  /**
   * Regex to test the instance name against. If empty, all instances match.
   * @return value or {@code null} for none
   */
  public java.lang.String getInstanceRegex() {
    return instanceRegex;
  }

  /**
   * Regex to test the instance name against. If empty, all instances match.
   * @param instanceRegex instanceRegex or {@code null} for none
   */
  public GooglePrivacyDlpV2DatabaseResourceRegex setInstanceRegex(java.lang.String instanceRegex) {
    this.instanceRegex = instanceRegex;
    return this;
  }

  /**
   * For organizations, if unset, will match all projects. Has no effect for configurations created
   * within a project.
   * @return value or {@code null} for none
   */
  public java.lang.String getProjectIdRegex() {
    return projectIdRegex;
  }

  /**
   * For organizations, if unset, will match all projects. Has no effect for configurations created
   * within a project.
   * @param projectIdRegex projectIdRegex or {@code null} for none
   */
  public GooglePrivacyDlpV2DatabaseResourceRegex setProjectIdRegex(java.lang.String projectIdRegex) {
    this.projectIdRegex = projectIdRegex;
    return this;
  }

  @Override
  public GooglePrivacyDlpV2DatabaseResourceRegex set(String fieldName, Object value) {
    return (GooglePrivacyDlpV2DatabaseResourceRegex) super.set(fieldName, value);
  }

  @Override
  public GooglePrivacyDlpV2DatabaseResourceRegex clone() {
    return (GooglePrivacyDlpV2DatabaseResourceRegex) super.clone();
  }

}
