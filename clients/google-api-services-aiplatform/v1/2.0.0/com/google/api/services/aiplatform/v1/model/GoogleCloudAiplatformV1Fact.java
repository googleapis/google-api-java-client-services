/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.aiplatform.v1.model;

/**
 * The fact used in grounding.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Vertex AI API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudAiplatformV1Fact extends com.google.api.client.json.GenericJson {

  /**
   * Query that is used to retrieve this fact.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String query;

  /**
   * If present, according to the underlying Vector DB and the selected metric type, the score can
   * be either the distance or the similarity between the query and the fact and its range depends
   * on the metric type. For example, if the metric type is COSINE_DISTANCE, it represents the
   * distance between the query and the fact. The larger the distance, the less relevant the fact is
   * to the query. The range is [0, 2], while 0 means the most relevant and 2 means the least
   * relevant.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double score;

  /**
   * If present, the summary/snippet of the fact.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String summary;

  /**
   * If present, it refers to the title of this fact.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String title;

  /**
   * If present, this uri links to the source of the fact.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String uri;

  /**
   * If present, the distance between the query vector and this fact vector.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double vectorDistance;

  /**
   * Query that is used to retrieve this fact.
   * @return value or {@code null} for none
   */
  public java.lang.String getQuery() {
    return query;
  }

  /**
   * Query that is used to retrieve this fact.
   * @param query query or {@code null} for none
   */
  public GoogleCloudAiplatformV1Fact setQuery(java.lang.String query) {
    this.query = query;
    return this;
  }

  /**
   * If present, according to the underlying Vector DB and the selected metric type, the score can
   * be either the distance or the similarity between the query and the fact and its range depends
   * on the metric type. For example, if the metric type is COSINE_DISTANCE, it represents the
   * distance between the query and the fact. The larger the distance, the less relevant the fact is
   * to the query. The range is [0, 2], while 0 means the most relevant and 2 means the least
   * relevant.
   * @return value or {@code null} for none
   */
  public java.lang.Double getScore() {
    return score;
  }

  /**
   * If present, according to the underlying Vector DB and the selected metric type, the score can
   * be either the distance or the similarity between the query and the fact and its range depends
   * on the metric type. For example, if the metric type is COSINE_DISTANCE, it represents the
   * distance between the query and the fact. The larger the distance, the less relevant the fact is
   * to the query. The range is [0, 2], while 0 means the most relevant and 2 means the least
   * relevant.
   * @param score score or {@code null} for none
   */
  public GoogleCloudAiplatformV1Fact setScore(java.lang.Double score) {
    this.score = score;
    return this;
  }

  /**
   * If present, the summary/snippet of the fact.
   * @return value or {@code null} for none
   */
  public java.lang.String getSummary() {
    return summary;
  }

  /**
   * If present, the summary/snippet of the fact.
   * @param summary summary or {@code null} for none
   */
  public GoogleCloudAiplatformV1Fact setSummary(java.lang.String summary) {
    this.summary = summary;
    return this;
  }

  /**
   * If present, it refers to the title of this fact.
   * @return value or {@code null} for none
   */
  public java.lang.String getTitle() {
    return title;
  }

  /**
   * If present, it refers to the title of this fact.
   * @param title title or {@code null} for none
   */
  public GoogleCloudAiplatformV1Fact setTitle(java.lang.String title) {
    this.title = title;
    return this;
  }

  /**
   * If present, this uri links to the source of the fact.
   * @return value or {@code null} for none
   */
  public java.lang.String getUri() {
    return uri;
  }

  /**
   * If present, this uri links to the source of the fact.
   * @param uri uri or {@code null} for none
   */
  public GoogleCloudAiplatformV1Fact setUri(java.lang.String uri) {
    this.uri = uri;
    return this;
  }

  /**
   * If present, the distance between the query vector and this fact vector.
   * @return value or {@code null} for none
   */
  public java.lang.Double getVectorDistance() {
    return vectorDistance;
  }

  /**
   * If present, the distance between the query vector and this fact vector.
   * @param vectorDistance vectorDistance or {@code null} for none
   */
  public GoogleCloudAiplatformV1Fact setVectorDistance(java.lang.Double vectorDistance) {
    this.vectorDistance = vectorDistance;
    return this;
  }

  @Override
  public GoogleCloudAiplatformV1Fact set(String fieldName, Object value) {
    return (GoogleCloudAiplatformV1Fact) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudAiplatformV1Fact clone() {
    return (GoogleCloudAiplatformV1Fact) super.clone();
  }

}
