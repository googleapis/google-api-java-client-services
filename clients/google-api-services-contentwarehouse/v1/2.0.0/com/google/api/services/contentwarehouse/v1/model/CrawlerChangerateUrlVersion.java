/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * NEXT_TAG: 15
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class CrawlerChangerateUrlVersion extends com.google.api.client.json.GenericJson {

  /**
   * Same as the field in UrlChange. This allows us to merge identical UrlVersions into a single
   * UrlVersion.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer additionalChangesMerged;

  /**
   * The content type of the page.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer contentType;

  /**
   * Whether this is an IMS response (a 304, not modified).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isImsNotModified;

  /**
   * The date from the LastModified header, if present.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer lastModified;

  /**
   * The checksum of all the off-domain links on the page.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer offDomainLinksChecksum;

  /**
   * The count of all the off-domain links on the page.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer offDomainLinksCount;

  /**
   * The count of all the on-domain links on the page. We aren't worried about the contents
   * themselves, since they might often change (e.g., session ids). We assume that a change in the
   * number of links is significant, however.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer onDomainLinksCount;

  /**
   * The simhash value obtained from shingles.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private IndexingConverterShingleFingerprint shingleSimhash;

  /**
   * The simhash-v1 value. The simhash-v1 is now deprecated and new UrlVersions should only populate
   * simhash-v2. During migration phase from using simhash-v1 to simhash-v2, it is possible that
   * previous UrlChange only contain simhash-v1 and the next UrlChange / UrlVersion could only
   * contain simhash-v2. In this case, we skip that interval in our changerate computation. [go
   * /changerate-simhash-v2-migration]
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.math.BigInteger simhash;

  /**
   * Whether the simhash-v1 should be trusted.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean simhashIsTrusted;

  /**
   * The simhash-v2 value.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.math.BigInteger simhashV2;

  /**
   * Whether the simhash-v2 value should be trusted.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean simhashV2IsTrusted;

  /**
   * The tiles of the document body. We use int32s instead of int64s (the norm) in order to save
   * space. Since rare inaccuracy doesn't really matter, we've decided this is an okay tradeoff.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.Integer> tile;

  /**
   * The timestamp we crawled the page.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer timestamp;

  /**
   * Same as the field in UrlChange. This allows us to merge identical UrlVersions into a single
   * UrlVersion.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getAdditionalChangesMerged() {
    return additionalChangesMerged;
  }

  /**
   * Same as the field in UrlChange. This allows us to merge identical UrlVersions into a single
   * UrlVersion.
   * @param additionalChangesMerged additionalChangesMerged or {@code null} for none
   */
  public CrawlerChangerateUrlVersion setAdditionalChangesMerged(java.lang.Integer additionalChangesMerged) {
    this.additionalChangesMerged = additionalChangesMerged;
    return this;
  }

  /**
   * The content type of the page.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getContentType() {
    return contentType;
  }

  /**
   * The content type of the page.
   * @param contentType contentType or {@code null} for none
   */
  public CrawlerChangerateUrlVersion setContentType(java.lang.Integer contentType) {
    this.contentType = contentType;
    return this;
  }

  /**
   * Whether this is an IMS response (a 304, not modified).
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsImsNotModified() {
    return isImsNotModified;
  }

  /**
   * Whether this is an IMS response (a 304, not modified).
   * @param isImsNotModified isImsNotModified or {@code null} for none
   */
  public CrawlerChangerateUrlVersion setIsImsNotModified(java.lang.Boolean isImsNotModified) {
    this.isImsNotModified = isImsNotModified;
    return this;
  }

  /**
   * The date from the LastModified header, if present.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getLastModified() {
    return lastModified;
  }

  /**
   * The date from the LastModified header, if present.
   * @param lastModified lastModified or {@code null} for none
   */
  public CrawlerChangerateUrlVersion setLastModified(java.lang.Integer lastModified) {
    this.lastModified = lastModified;
    return this;
  }

  /**
   * The checksum of all the off-domain links on the page.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getOffDomainLinksChecksum() {
    return offDomainLinksChecksum;
  }

  /**
   * The checksum of all the off-domain links on the page.
   * @param offDomainLinksChecksum offDomainLinksChecksum or {@code null} for none
   */
  public CrawlerChangerateUrlVersion setOffDomainLinksChecksum(java.lang.Integer offDomainLinksChecksum) {
    this.offDomainLinksChecksum = offDomainLinksChecksum;
    return this;
  }

  /**
   * The count of all the off-domain links on the page.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getOffDomainLinksCount() {
    return offDomainLinksCount;
  }

  /**
   * The count of all the off-domain links on the page.
   * @param offDomainLinksCount offDomainLinksCount or {@code null} for none
   */
  public CrawlerChangerateUrlVersion setOffDomainLinksCount(java.lang.Integer offDomainLinksCount) {
    this.offDomainLinksCount = offDomainLinksCount;
    return this;
  }

  /**
   * The count of all the on-domain links on the page. We aren't worried about the contents
   * themselves, since they might often change (e.g., session ids). We assume that a change in the
   * number of links is significant, however.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getOnDomainLinksCount() {
    return onDomainLinksCount;
  }

  /**
   * The count of all the on-domain links on the page. We aren't worried about the contents
   * themselves, since they might often change (e.g., session ids). We assume that a change in the
   * number of links is significant, however.
   * @param onDomainLinksCount onDomainLinksCount or {@code null} for none
   */
  public CrawlerChangerateUrlVersion setOnDomainLinksCount(java.lang.Integer onDomainLinksCount) {
    this.onDomainLinksCount = onDomainLinksCount;
    return this;
  }

  /**
   * The simhash value obtained from shingles.
   * @return value or {@code null} for none
   */
  public IndexingConverterShingleFingerprint getShingleSimhash() {
    return shingleSimhash;
  }

  /**
   * The simhash value obtained from shingles.
   * @param shingleSimhash shingleSimhash or {@code null} for none
   */
  public CrawlerChangerateUrlVersion setShingleSimhash(IndexingConverterShingleFingerprint shingleSimhash) {
    this.shingleSimhash = shingleSimhash;
    return this;
  }

  /**
   * The simhash-v1 value. The simhash-v1 is now deprecated and new UrlVersions should only populate
   * simhash-v2. During migration phase from using simhash-v1 to simhash-v2, it is possible that
   * previous UrlChange only contain simhash-v1 and the next UrlChange / UrlVersion could only
   * contain simhash-v2. In this case, we skip that interval in our changerate computation. [go
   * /changerate-simhash-v2-migration]
   * @return value or {@code null} for none
   */
  public java.math.BigInteger getSimhash() {
    return simhash;
  }

  /**
   * The simhash-v1 value. The simhash-v1 is now deprecated and new UrlVersions should only populate
   * simhash-v2. During migration phase from using simhash-v1 to simhash-v2, it is possible that
   * previous UrlChange only contain simhash-v1 and the next UrlChange / UrlVersion could only
   * contain simhash-v2. In this case, we skip that interval in our changerate computation. [go
   * /changerate-simhash-v2-migration]
   * @param simhash simhash or {@code null} for none
   */
  public CrawlerChangerateUrlVersion setSimhash(java.math.BigInteger simhash) {
    this.simhash = simhash;
    return this;
  }

  /**
   * Whether the simhash-v1 should be trusted.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSimhashIsTrusted() {
    return simhashIsTrusted;
  }

  /**
   * Whether the simhash-v1 should be trusted.
   * @param simhashIsTrusted simhashIsTrusted or {@code null} for none
   */
  public CrawlerChangerateUrlVersion setSimhashIsTrusted(java.lang.Boolean simhashIsTrusted) {
    this.simhashIsTrusted = simhashIsTrusted;
    return this;
  }

  /**
   * The simhash-v2 value.
   * @return value or {@code null} for none
   */
  public java.math.BigInteger getSimhashV2() {
    return simhashV2;
  }

  /**
   * The simhash-v2 value.
   * @param simhashV2 simhashV2 or {@code null} for none
   */
  public CrawlerChangerateUrlVersion setSimhashV2(java.math.BigInteger simhashV2) {
    this.simhashV2 = simhashV2;
    return this;
  }

  /**
   * Whether the simhash-v2 value should be trusted.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSimhashV2IsTrusted() {
    return simhashV2IsTrusted;
  }

  /**
   * Whether the simhash-v2 value should be trusted.
   * @param simhashV2IsTrusted simhashV2IsTrusted or {@code null} for none
   */
  public CrawlerChangerateUrlVersion setSimhashV2IsTrusted(java.lang.Boolean simhashV2IsTrusted) {
    this.simhashV2IsTrusted = simhashV2IsTrusted;
    return this;
  }

  /**
   * The tiles of the document body. We use int32s instead of int64s (the norm) in order to save
   * space. Since rare inaccuracy doesn't really matter, we've decided this is an okay tradeoff.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Integer> getTile() {
    return tile;
  }

  /**
   * The tiles of the document body. We use int32s instead of int64s (the norm) in order to save
   * space. Since rare inaccuracy doesn't really matter, we've decided this is an okay tradeoff.
   * @param tile tile or {@code null} for none
   */
  public CrawlerChangerateUrlVersion setTile(java.util.List<java.lang.Integer> tile) {
    this.tile = tile;
    return this;
  }

  /**
   * The timestamp we crawled the page.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getTimestamp() {
    return timestamp;
  }

  /**
   * The timestamp we crawled the page.
   * @param timestamp timestamp or {@code null} for none
   */
  public CrawlerChangerateUrlVersion setTimestamp(java.lang.Integer timestamp) {
    this.timestamp = timestamp;
    return this;
  }

  @Override
  public CrawlerChangerateUrlVersion set(String fieldName, Object value) {
    return (CrawlerChangerateUrlVersion) super.set(fieldName, value);
  }

  @Override
  public CrawlerChangerateUrlVersion clone() {
    return (CrawlerChangerateUrlVersion) super.clone();
  }

}
