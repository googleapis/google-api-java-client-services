/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.backupdr.v1.model;

/**
 * Message describing a Backup object.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Backup and DR Service API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Backup extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private BackupApplianceBackupProperties backupApplianceBackupProperties;

  /**
   * Optional. The list of BackupLocks taken by the accessor Backup Appliance.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<BackupLock> backupApplianceLocks;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String backupType;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ComputeInstanceBackupProperties computeInstanceBackupProperties;

  /**
   * Output only. The point in time when this backup was captured from the source.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String consistencyTime;

  /**
   * Output only. The time when the instance was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Output only. The description of the Backup instance (2048 characters or less).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Optional. The backup can not be deleted before this time.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String enforcedRetentionEndTime;

  /**
   * Optional. Server specified ETag to prevent updates from overwriting each other.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String etag;

  /**
   * Optional. When this backup is automatically expired.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String expireTime;

  /**
   * Output only. Configuration for a Google Cloud resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GCPBackupPlanInfo gcpBackupPlanInfo;

  /**
   * Optional. Resource labels to represent user provided metadata. No labels currently defined.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Output only. Name of the resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. source resource size in bytes at the time of the backup.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long resourceSizeBytes;

  /**
   * Output only. The list of BackupLocks taken by the service to prevent the deletion of the
   * backup.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<BackupLock> serviceLocks;

  /**
   * Output only. The Backup resource instance state.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Output only. The time when the instance was updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * @return value or {@code null} for none
   */
  public BackupApplianceBackupProperties getBackupApplianceBackupProperties() {
    return backupApplianceBackupProperties;
  }

  /**
   * @param backupApplianceBackupProperties backupApplianceBackupProperties or {@code null} for none
   */
  public Backup setBackupApplianceBackupProperties(BackupApplianceBackupProperties backupApplianceBackupProperties) {
    this.backupApplianceBackupProperties = backupApplianceBackupProperties;
    return this;
  }

  /**
   * Optional. The list of BackupLocks taken by the accessor Backup Appliance.
   * @return value or {@code null} for none
   */
  public java.util.List<BackupLock> getBackupApplianceLocks() {
    return backupApplianceLocks;
  }

  /**
   * Optional. The list of BackupLocks taken by the accessor Backup Appliance.
   * @param backupApplianceLocks backupApplianceLocks or {@code null} for none
   */
  public Backup setBackupApplianceLocks(java.util.List<BackupLock> backupApplianceLocks) {
    this.backupApplianceLocks = backupApplianceLocks;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getBackupType() {
    return backupType;
  }

  /**
   * @param backupType backupType or {@code null} for none
   */
  public Backup setBackupType(java.lang.String backupType) {
    this.backupType = backupType;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public ComputeInstanceBackupProperties getComputeInstanceBackupProperties() {
    return computeInstanceBackupProperties;
  }

  /**
   * @param computeInstanceBackupProperties computeInstanceBackupProperties or {@code null} for none
   */
  public Backup setComputeInstanceBackupProperties(ComputeInstanceBackupProperties computeInstanceBackupProperties) {
    this.computeInstanceBackupProperties = computeInstanceBackupProperties;
    return this;
  }

  /**
   * Output only. The point in time when this backup was captured from the source.
   * @return value or {@code null} for none
   */
  public String getConsistencyTime() {
    return consistencyTime;
  }

  /**
   * Output only. The point in time when this backup was captured from the source.
   * @param consistencyTime consistencyTime or {@code null} for none
   */
  public Backup setConsistencyTime(String consistencyTime) {
    this.consistencyTime = consistencyTime;
    return this;
  }

  /**
   * Output only. The time when the instance was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The time when the instance was created.
   * @param createTime createTime or {@code null} for none
   */
  public Backup setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Output only. The description of the Backup instance (2048 characters or less).
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Output only. The description of the Backup instance (2048 characters or less).
   * @param description description or {@code null} for none
   */
  public Backup setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Optional. The backup can not be deleted before this time.
   * @return value or {@code null} for none
   */
  public String getEnforcedRetentionEndTime() {
    return enforcedRetentionEndTime;
  }

  /**
   * Optional. The backup can not be deleted before this time.
   * @param enforcedRetentionEndTime enforcedRetentionEndTime or {@code null} for none
   */
  public Backup setEnforcedRetentionEndTime(String enforcedRetentionEndTime) {
    this.enforcedRetentionEndTime = enforcedRetentionEndTime;
    return this;
  }

  /**
   * Optional. Server specified ETag to prevent updates from overwriting each other.
   * @return value or {@code null} for none
   */
  public java.lang.String getEtag() {
    return etag;
  }

  /**
   * Optional. Server specified ETag to prevent updates from overwriting each other.
   * @param etag etag or {@code null} for none
   */
  public Backup setEtag(java.lang.String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * Optional. When this backup is automatically expired.
   * @return value or {@code null} for none
   */
  public String getExpireTime() {
    return expireTime;
  }

  /**
   * Optional. When this backup is automatically expired.
   * @param expireTime expireTime or {@code null} for none
   */
  public Backup setExpireTime(String expireTime) {
    this.expireTime = expireTime;
    return this;
  }

  /**
   * Output only. Configuration for a Google Cloud resource.
   * @return value or {@code null} for none
   */
  public GCPBackupPlanInfo getGcpBackupPlanInfo() {
    return gcpBackupPlanInfo;
  }

  /**
   * Output only. Configuration for a Google Cloud resource.
   * @param gcpBackupPlanInfo gcpBackupPlanInfo or {@code null} for none
   */
  public Backup setGcpBackupPlanInfo(GCPBackupPlanInfo gcpBackupPlanInfo) {
    this.gcpBackupPlanInfo = gcpBackupPlanInfo;
    return this;
  }

  /**
   * Optional. Resource labels to represent user provided metadata. No labels currently defined.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Optional. Resource labels to represent user provided metadata. No labels currently defined.
   * @param labels labels or {@code null} for none
   */
  public Backup setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Output only. Name of the resource.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. Name of the resource.
   * @param name name or {@code null} for none
   */
  public Backup setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. source resource size in bytes at the time of the backup.
   * @return value or {@code null} for none
   */
  public java.lang.Long getResourceSizeBytes() {
    return resourceSizeBytes;
  }

  /**
   * Output only. source resource size in bytes at the time of the backup.
   * @param resourceSizeBytes resourceSizeBytes or {@code null} for none
   */
  public Backup setResourceSizeBytes(java.lang.Long resourceSizeBytes) {
    this.resourceSizeBytes = resourceSizeBytes;
    return this;
  }

  /**
   * Output only. The list of BackupLocks taken by the service to prevent the deletion of the
   * backup.
   * @return value or {@code null} for none
   */
  public java.util.List<BackupLock> getServiceLocks() {
    return serviceLocks;
  }

  /**
   * Output only. The list of BackupLocks taken by the service to prevent the deletion of the
   * backup.
   * @param serviceLocks serviceLocks or {@code null} for none
   */
  public Backup setServiceLocks(java.util.List<BackupLock> serviceLocks) {
    this.serviceLocks = serviceLocks;
    return this;
  }

  /**
   * Output only. The Backup resource instance state.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. The Backup resource instance state.
   * @param state state or {@code null} for none
   */
  public Backup setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Output only. The time when the instance was updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. The time when the instance was updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public Backup setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public Backup set(String fieldName, Object value) {
    return (Backup) super.set(fieldName, value);
  }

  @Override
  public Backup clone() {
    return (Backup) super.clone();
  }

}
