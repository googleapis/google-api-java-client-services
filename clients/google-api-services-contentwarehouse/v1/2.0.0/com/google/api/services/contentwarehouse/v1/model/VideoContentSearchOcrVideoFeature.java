/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Features for video level info.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class VideoContentSearchOcrVideoFeature extends com.google.api.client.json.GenericJson {

  /**
   * Average text area ratio throughout video frames. Text area ratio for a frame is defined by
   * sum(text area) / image area.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float averageTextAreaRatio;

  /**
   * Cluster id to the num of frames in each cluster.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.Integer> clusterIdToFrameSize;

  /**
   * Total time of this video in milliseconds.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer durationInMs;

  /**
   * Video level detected language by lang id, aggregated from each frame.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String langIdDetectedLanguage;

  /**
   * The number of ShotInfo clusters.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer numClusters;

  /**
   * The number of video frames contained in ShotInfo cluster.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer numFrames;

  /**
   * Video level detected language, aggregated from each frame.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String ocrDetectedLanguage;

  /**
   * Average text area ratio throughout video frames. Text area ratio for a frame is defined by
   * sum(text area) / image area.
   * @return value or {@code null} for none
   */
  public java.lang.Float getAverageTextAreaRatio() {
    return averageTextAreaRatio;
  }

  /**
   * Average text area ratio throughout video frames. Text area ratio for a frame is defined by
   * sum(text area) / image area.
   * @param averageTextAreaRatio averageTextAreaRatio or {@code null} for none
   */
  public VideoContentSearchOcrVideoFeature setAverageTextAreaRatio(java.lang.Float averageTextAreaRatio) {
    this.averageTextAreaRatio = averageTextAreaRatio;
    return this;
  }

  /**
   * Cluster id to the num of frames in each cluster.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.Integer> getClusterIdToFrameSize() {
    return clusterIdToFrameSize;
  }

  /**
   * Cluster id to the num of frames in each cluster.
   * @param clusterIdToFrameSize clusterIdToFrameSize or {@code null} for none
   */
  public VideoContentSearchOcrVideoFeature setClusterIdToFrameSize(java.util.Map<String, java.lang.Integer> clusterIdToFrameSize) {
    this.clusterIdToFrameSize = clusterIdToFrameSize;
    return this;
  }

  /**
   * Total time of this video in milliseconds.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getDurationInMs() {
    return durationInMs;
  }

  /**
   * Total time of this video in milliseconds.
   * @param durationInMs durationInMs or {@code null} for none
   */
  public VideoContentSearchOcrVideoFeature setDurationInMs(java.lang.Integer durationInMs) {
    this.durationInMs = durationInMs;
    return this;
  }

  /**
   * Video level detected language by lang id, aggregated from each frame.
   * @return value or {@code null} for none
   */
  public java.lang.String getLangIdDetectedLanguage() {
    return langIdDetectedLanguage;
  }

  /**
   * Video level detected language by lang id, aggregated from each frame.
   * @param langIdDetectedLanguage langIdDetectedLanguage or {@code null} for none
   */
  public VideoContentSearchOcrVideoFeature setLangIdDetectedLanguage(java.lang.String langIdDetectedLanguage) {
    this.langIdDetectedLanguage = langIdDetectedLanguage;
    return this;
  }

  /**
   * The number of ShotInfo clusters.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getNumClusters() {
    return numClusters;
  }

  /**
   * The number of ShotInfo clusters.
   * @param numClusters numClusters or {@code null} for none
   */
  public VideoContentSearchOcrVideoFeature setNumClusters(java.lang.Integer numClusters) {
    this.numClusters = numClusters;
    return this;
  }

  /**
   * The number of video frames contained in ShotInfo cluster.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getNumFrames() {
    return numFrames;
  }

  /**
   * The number of video frames contained in ShotInfo cluster.
   * @param numFrames numFrames or {@code null} for none
   */
  public VideoContentSearchOcrVideoFeature setNumFrames(java.lang.Integer numFrames) {
    this.numFrames = numFrames;
    return this;
  }

  /**
   * Video level detected language, aggregated from each frame.
   * @return value or {@code null} for none
   */
  public java.lang.String getOcrDetectedLanguage() {
    return ocrDetectedLanguage;
  }

  /**
   * Video level detected language, aggregated from each frame.
   * @param ocrDetectedLanguage ocrDetectedLanguage or {@code null} for none
   */
  public VideoContentSearchOcrVideoFeature setOcrDetectedLanguage(java.lang.String ocrDetectedLanguage) {
    this.ocrDetectedLanguage = ocrDetectedLanguage;
    return this;
  }

  @Override
  public VideoContentSearchOcrVideoFeature set(String fieldName, Object value) {
    return (VideoContentSearchOcrVideoFeature) super.set(fieldName, value);
  }

  @Override
  public VideoContentSearchOcrVideoFeature clone() {
    return (VideoContentSearchOcrVideoFeature) super.clone();
  }

}
