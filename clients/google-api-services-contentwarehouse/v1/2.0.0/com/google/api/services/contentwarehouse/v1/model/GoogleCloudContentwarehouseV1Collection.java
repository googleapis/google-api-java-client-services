/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Defines the structure for content warehouse collection proto.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudContentwarehouseV1Collection extends com.google.api.client.json.GenericJson {

  /**
   * Whether allow the collection to link to documents. Cannot be updated after the collection is
   * created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean allowLinkDocuments;

  /**
   * Other collection attributes for the use cases.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.Object> attributes;

  /**
   * Indicate this collection’s type.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String collectionType;

  /**
   * Output only. The time when the document is created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Required. Display name of the collection given by the user.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * The resource name of the collection. Format:
   * projects/{project_number}/locations/{location}/collections/{collection}. The name is ignored
   * when creating a collection.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * The parent collection ID of the collection. One collection only can have one parent collection,
   * and they should be in the same project and location.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String parentCollectionId;

  /**
   * If it is true, after adding the document to the collection, the users with document edit
   * permission will only have view permission. Can not be updated after the collection is created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean revokeDocEditPermission;

  /**
   * Output only. The time when the document is last updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Whether allow the collection to link to documents. Cannot be updated after the collection is
   * created.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getAllowLinkDocuments() {
    return allowLinkDocuments;
  }

  /**
   * Whether allow the collection to link to documents. Cannot be updated after the collection is
   * created.
   * @param allowLinkDocuments allowLinkDocuments or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1Collection setAllowLinkDocuments(java.lang.Boolean allowLinkDocuments) {
    this.allowLinkDocuments = allowLinkDocuments;
    return this;
  }

  /**
   * Other collection attributes for the use cases.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.Object> getAttributes() {
    return attributes;
  }

  /**
   * Other collection attributes for the use cases.
   * @param attributes attributes or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1Collection setAttributes(java.util.Map<String, java.lang.Object> attributes) {
    this.attributes = attributes;
    return this;
  }

  /**
   * Indicate this collection’s type.
   * @return value or {@code null} for none
   */
  public java.lang.String getCollectionType() {
    return collectionType;
  }

  /**
   * Indicate this collection’s type.
   * @param collectionType collectionType or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1Collection setCollectionType(java.lang.String collectionType) {
    this.collectionType = collectionType;
    return this;
  }

  /**
   * Output only. The time when the document is created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The time when the document is created.
   * @param createTime createTime or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1Collection setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Required. Display name of the collection given by the user.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Required. Display name of the collection given by the user.
   * @param displayName displayName or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1Collection setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * The resource name of the collection. Format:
   * projects/{project_number}/locations/{location}/collections/{collection}. The name is ignored
   * when creating a collection.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * The resource name of the collection. Format:
   * projects/{project_number}/locations/{location}/collections/{collection}. The name is ignored
   * when creating a collection.
   * @param name name or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1Collection setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * The parent collection ID of the collection. One collection only can have one parent collection,
   * and they should be in the same project and location.
   * @return value or {@code null} for none
   */
  public java.lang.String getParentCollectionId() {
    return parentCollectionId;
  }

  /**
   * The parent collection ID of the collection. One collection only can have one parent collection,
   * and they should be in the same project and location.
   * @param parentCollectionId parentCollectionId or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1Collection setParentCollectionId(java.lang.String parentCollectionId) {
    this.parentCollectionId = parentCollectionId;
    return this;
  }

  /**
   * If it is true, after adding the document to the collection, the users with document edit
   * permission will only have view permission. Can not be updated after the collection is created.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getRevokeDocEditPermission() {
    return revokeDocEditPermission;
  }

  /**
   * If it is true, after adding the document to the collection, the users with document edit
   * permission will only have view permission. Can not be updated after the collection is created.
   * @param revokeDocEditPermission revokeDocEditPermission or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1Collection setRevokeDocEditPermission(java.lang.Boolean revokeDocEditPermission) {
    this.revokeDocEditPermission = revokeDocEditPermission;
    return this;
  }

  /**
   * Output only. The time when the document is last updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. The time when the document is last updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1Collection setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public GoogleCloudContentwarehouseV1Collection set(String fieldName, Object value) {
    return (GoogleCloudContentwarehouseV1Collection) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudContentwarehouseV1Collection clone() {
    return (GoogleCloudContentwarehouseV1Collection) super.clone();
  }

}
