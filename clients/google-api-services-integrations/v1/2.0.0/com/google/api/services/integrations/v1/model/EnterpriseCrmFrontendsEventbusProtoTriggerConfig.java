/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.integrations.v1.model;

/**
 * Configuration detail of a trigger. Next available id: 17
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Application Integration API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class EnterpriseCrmFrontendsEventbusProtoTriggerConfig extends com.google.api.client.json.GenericJson {

  /**
   * An alert threshold configuration for the [trigger + client + workflow] tuple. If these values
   * are not specified in the trigger config, default values will be populated by the system. Note
   * that there must be exactly one alert threshold configured per [client + trigger + workflow]
   * when published.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<EnterpriseCrmEventbusProtoWorkflowAlertConfig> alertConfig;

  static {
    // hack to force ProGuard to consider EnterpriseCrmEventbusProtoWorkflowAlertConfig used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(EnterpriseCrmEventbusProtoWorkflowAlertConfig.class);
  }

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private EnterpriseCrmEventbusProtoCloudSchedulerConfig cloudSchedulerConfig;

  /**
   * User-provided description intended to give more business context about the task.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Required. The list of client ids which are enabled to execute the workflow using this trigger.
   * In other words, these clients have the workflow execution privledges for this trigger. For API
   * trigger, the client id in the incoming request is validated against the list of enabled
   * clients. For non-API triggers, one workflow execution is triggered on behalf of each enabled
   * client.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> enabledClients;

  /**
   * The user created label for a particular trigger.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String label;

  /**
   * Dictates how next tasks will be executed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String nextTasksExecutionPolicy;

  /**
   * Optional. If set to true, any upcoming requests for this trigger config will be paused and the
   * executions will be resumed later when the flag is reset. The workflow to which this trigger
   * config belongs has to be in ACTIVE status for the executions to be paused or resumed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean pauseWorkflowExecutions;

  /**
   * Optional. Informs the front-end application where to draw this trigger config on the UI.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private EnterpriseCrmEventbusProtoCoordinate position;

  /**
   * Configurable properties of the trigger, not to be confused with workflow parameters. E.g.
   * "name" is a property for API triggers and "subscription" is a property for Cloud Pubsub
   * triggers.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> properties;

  /**
   * Set of tasks numbers from where the workflow execution is started by this trigger. If this is
   * empty, then workflow is executed with default start tasks. In the list of start tasks, none of
   * two tasks can have direct ancestor-descendant relationships (i.e. in a same workflow execution
   * graph).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<EnterpriseCrmEventbusProtoNextTask> startTasks;

  static {
    // hack to force ProGuard to consider EnterpriseCrmEventbusProtoNextTask used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(EnterpriseCrmEventbusProtoNextTask.class);
  }

  /**
   * Optional. When set, Eventbus will run the task specified in the trigger_criteria and validate
   * the result using the trigger_criteria.condition, and only execute the workflow when result is
   * true.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private EnterpriseCrmEventbusProtoTriggerCriteria triggerCriteria;

  /**
   * The backend trigger ID.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String triggerId;

  /**
   * Required. A number to uniquely identify each trigger config within the workflow on UI.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String triggerNumber;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String triggerType;

  /**
   * An alert threshold configuration for the [trigger + client + workflow] tuple. If these values
   * are not specified in the trigger config, default values will be populated by the system. Note
   * that there must be exactly one alert threshold configured per [client + trigger + workflow]
   * when published.
   * @return value or {@code null} for none
   */
  public java.util.List<EnterpriseCrmEventbusProtoWorkflowAlertConfig> getAlertConfig() {
    return alertConfig;
  }

  /**
   * An alert threshold configuration for the [trigger + client + workflow] tuple. If these values
   * are not specified in the trigger config, default values will be populated by the system. Note
   * that there must be exactly one alert threshold configured per [client + trigger + workflow]
   * when published.
   * @param alertConfig alertConfig or {@code null} for none
   */
  public EnterpriseCrmFrontendsEventbusProtoTriggerConfig setAlertConfig(java.util.List<EnterpriseCrmEventbusProtoWorkflowAlertConfig> alertConfig) {
    this.alertConfig = alertConfig;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public EnterpriseCrmEventbusProtoCloudSchedulerConfig getCloudSchedulerConfig() {
    return cloudSchedulerConfig;
  }

  /**
   * @param cloudSchedulerConfig cloudSchedulerConfig or {@code null} for none
   */
  public EnterpriseCrmFrontendsEventbusProtoTriggerConfig setCloudSchedulerConfig(EnterpriseCrmEventbusProtoCloudSchedulerConfig cloudSchedulerConfig) {
    this.cloudSchedulerConfig = cloudSchedulerConfig;
    return this;
  }

  /**
   * User-provided description intended to give more business context about the task.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * User-provided description intended to give more business context about the task.
   * @param description description or {@code null} for none
   */
  public EnterpriseCrmFrontendsEventbusProtoTriggerConfig setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Required. The list of client ids which are enabled to execute the workflow using this trigger.
   * In other words, these clients have the workflow execution privledges for this trigger. For API
   * trigger, the client id in the incoming request is validated against the list of enabled
   * clients. For non-API triggers, one workflow execution is triggered on behalf of each enabled
   * client.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getEnabledClients() {
    return enabledClients;
  }

  /**
   * Required. The list of client ids which are enabled to execute the workflow using this trigger.
   * In other words, these clients have the workflow execution privledges for this trigger. For API
   * trigger, the client id in the incoming request is validated against the list of enabled
   * clients. For non-API triggers, one workflow execution is triggered on behalf of each enabled
   * client.
   * @param enabledClients enabledClients or {@code null} for none
   */
  public EnterpriseCrmFrontendsEventbusProtoTriggerConfig setEnabledClients(java.util.List<java.lang.String> enabledClients) {
    this.enabledClients = enabledClients;
    return this;
  }

  /**
   * The user created label for a particular trigger.
   * @return value or {@code null} for none
   */
  public java.lang.String getLabel() {
    return label;
  }

  /**
   * The user created label for a particular trigger.
   * @param label label or {@code null} for none
   */
  public EnterpriseCrmFrontendsEventbusProtoTriggerConfig setLabel(java.lang.String label) {
    this.label = label;
    return this;
  }

  /**
   * Dictates how next tasks will be executed.
   * @return value or {@code null} for none
   */
  public java.lang.String getNextTasksExecutionPolicy() {
    return nextTasksExecutionPolicy;
  }

  /**
   * Dictates how next tasks will be executed.
   * @param nextTasksExecutionPolicy nextTasksExecutionPolicy or {@code null} for none
   */
  public EnterpriseCrmFrontendsEventbusProtoTriggerConfig setNextTasksExecutionPolicy(java.lang.String nextTasksExecutionPolicy) {
    this.nextTasksExecutionPolicy = nextTasksExecutionPolicy;
    return this;
  }

  /**
   * Optional. If set to true, any upcoming requests for this trigger config will be paused and the
   * executions will be resumed later when the flag is reset. The workflow to which this trigger
   * config belongs has to be in ACTIVE status for the executions to be paused or resumed.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getPauseWorkflowExecutions() {
    return pauseWorkflowExecutions;
  }

  /**
   * Optional. If set to true, any upcoming requests for this trigger config will be paused and the
   * executions will be resumed later when the flag is reset. The workflow to which this trigger
   * config belongs has to be in ACTIVE status for the executions to be paused or resumed.
   * @param pauseWorkflowExecutions pauseWorkflowExecutions or {@code null} for none
   */
  public EnterpriseCrmFrontendsEventbusProtoTriggerConfig setPauseWorkflowExecutions(java.lang.Boolean pauseWorkflowExecutions) {
    this.pauseWorkflowExecutions = pauseWorkflowExecutions;
    return this;
  }

  /**
   * Optional. Informs the front-end application where to draw this trigger config on the UI.
   * @return value or {@code null} for none
   */
  public EnterpriseCrmEventbusProtoCoordinate getPosition() {
    return position;
  }

  /**
   * Optional. Informs the front-end application where to draw this trigger config on the UI.
   * @param position position or {@code null} for none
   */
  public EnterpriseCrmFrontendsEventbusProtoTriggerConfig setPosition(EnterpriseCrmEventbusProtoCoordinate position) {
    this.position = position;
    return this;
  }

  /**
   * Configurable properties of the trigger, not to be confused with workflow parameters. E.g.
   * "name" is a property for API triggers and "subscription" is a property for Cloud Pubsub
   * triggers.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getProperties() {
    return properties;
  }

  /**
   * Configurable properties of the trigger, not to be confused with workflow parameters. E.g.
   * "name" is a property for API triggers and "subscription" is a property for Cloud Pubsub
   * triggers.
   * @param properties properties or {@code null} for none
   */
  public EnterpriseCrmFrontendsEventbusProtoTriggerConfig setProperties(java.util.Map<String, java.lang.String> properties) {
    this.properties = properties;
    return this;
  }

  /**
   * Set of tasks numbers from where the workflow execution is started by this trigger. If this is
   * empty, then workflow is executed with default start tasks. In the list of start tasks, none of
   * two tasks can have direct ancestor-descendant relationships (i.e. in a same workflow execution
   * graph).
   * @return value or {@code null} for none
   */
  public java.util.List<EnterpriseCrmEventbusProtoNextTask> getStartTasks() {
    return startTasks;
  }

  /**
   * Set of tasks numbers from where the workflow execution is started by this trigger. If this is
   * empty, then workflow is executed with default start tasks. In the list of start tasks, none of
   * two tasks can have direct ancestor-descendant relationships (i.e. in a same workflow execution
   * graph).
   * @param startTasks startTasks or {@code null} for none
   */
  public EnterpriseCrmFrontendsEventbusProtoTriggerConfig setStartTasks(java.util.List<EnterpriseCrmEventbusProtoNextTask> startTasks) {
    this.startTasks = startTasks;
    return this;
  }

  /**
   * Optional. When set, Eventbus will run the task specified in the trigger_criteria and validate
   * the result using the trigger_criteria.condition, and only execute the workflow when result is
   * true.
   * @return value or {@code null} for none
   */
  public EnterpriseCrmEventbusProtoTriggerCriteria getTriggerCriteria() {
    return triggerCriteria;
  }

  /**
   * Optional. When set, Eventbus will run the task specified in the trigger_criteria and validate
   * the result using the trigger_criteria.condition, and only execute the workflow when result is
   * true.
   * @param triggerCriteria triggerCriteria or {@code null} for none
   */
  public EnterpriseCrmFrontendsEventbusProtoTriggerConfig setTriggerCriteria(EnterpriseCrmEventbusProtoTriggerCriteria triggerCriteria) {
    this.triggerCriteria = triggerCriteria;
    return this;
  }

  /**
   * The backend trigger ID.
   * @return value or {@code null} for none
   */
  public java.lang.String getTriggerId() {
    return triggerId;
  }

  /**
   * The backend trigger ID.
   * @param triggerId triggerId or {@code null} for none
   */
  public EnterpriseCrmFrontendsEventbusProtoTriggerConfig setTriggerId(java.lang.String triggerId) {
    this.triggerId = triggerId;
    return this;
  }

  /**
   * Required. A number to uniquely identify each trigger config within the workflow on UI.
   * @return value or {@code null} for none
   */
  public java.lang.String getTriggerNumber() {
    return triggerNumber;
  }

  /**
   * Required. A number to uniquely identify each trigger config within the workflow on UI.
   * @param triggerNumber triggerNumber or {@code null} for none
   */
  public EnterpriseCrmFrontendsEventbusProtoTriggerConfig setTriggerNumber(java.lang.String triggerNumber) {
    this.triggerNumber = triggerNumber;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getTriggerType() {
    return triggerType;
  }

  /**
   * @param triggerType triggerType or {@code null} for none
   */
  public EnterpriseCrmFrontendsEventbusProtoTriggerConfig setTriggerType(java.lang.String triggerType) {
    this.triggerType = triggerType;
    return this;
  }

  @Override
  public EnterpriseCrmFrontendsEventbusProtoTriggerConfig set(String fieldName, Object value) {
    return (EnterpriseCrmFrontendsEventbusProtoTriggerConfig) super.set(fieldName, value);
  }

  @Override
  public EnterpriseCrmFrontendsEventbusProtoTriggerConfig clone() {
    return (EnterpriseCrmFrontendsEventbusProtoTriggerConfig) super.clone();
  }

}
