/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.developerconnect.v1.model;

/**
 * AccountConnector encapsulates what a platform administrator needs to configure for users to
 * connect to the service providers, which includes, among other fields, the OAuth client ID, client
 * secret, and authorization and token endpoints.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Developer Connect API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AccountConnector extends com.google.api.client.json.GenericJson {

  /**
   * Optional. Allows users to store small amounts of arbitrary data.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> annotations;

  /**
   * Output only. The timestamp when the accountConnector was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Optional. This checksum is computed by the server based on the value of other fields, and may
   * be sent on update and delete requests to ensure the client has an up-to-date value before
   * proceeding.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String etag;

  /**
   * Optional. Labels as key value pairs
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Identifier. The resource name of the accountConnector, in the format
   * `projects/{project}/locations/{location}/accountConnectors/{account_connector_id}`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. Start OAuth flow by clicking on this URL.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String oauthStartUri;

  /**
   * Provider OAuth config.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ProviderOAuthConfig providerOauthConfig;

  /**
   * Output only. The timestamp when the accountConnector was updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Optional. Allows users to store small amounts of arbitrary data.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getAnnotations() {
    return annotations;
  }

  /**
   * Optional. Allows users to store small amounts of arbitrary data.
   * @param annotations annotations or {@code null} for none
   */
  public AccountConnector setAnnotations(java.util.Map<String, java.lang.String> annotations) {
    this.annotations = annotations;
    return this;
  }

  /**
   * Output only. The timestamp when the accountConnector was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The timestamp when the accountConnector was created.
   * @param createTime createTime or {@code null} for none
   */
  public AccountConnector setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Optional. This checksum is computed by the server based on the value of other fields, and may
   * be sent on update and delete requests to ensure the client has an up-to-date value before
   * proceeding.
   * @return value or {@code null} for none
   */
  public java.lang.String getEtag() {
    return etag;
  }

  /**
   * Optional. This checksum is computed by the server based on the value of other fields, and may
   * be sent on update and delete requests to ensure the client has an up-to-date value before
   * proceeding.
   * @param etag etag or {@code null} for none
   */
  public AccountConnector setEtag(java.lang.String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * Optional. Labels as key value pairs
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Optional. Labels as key value pairs
   * @param labels labels or {@code null} for none
   */
  public AccountConnector setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Identifier. The resource name of the accountConnector, in the format
   * `projects/{project}/locations/{location}/accountConnectors/{account_connector_id}`.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Identifier. The resource name of the accountConnector, in the format
   * `projects/{project}/locations/{location}/accountConnectors/{account_connector_id}`.
   * @param name name or {@code null} for none
   */
  public AccountConnector setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. Start OAuth flow by clicking on this URL.
   * @return value or {@code null} for none
   */
  public java.lang.String getOauthStartUri() {
    return oauthStartUri;
  }

  /**
   * Output only. Start OAuth flow by clicking on this URL.
   * @param oauthStartUri oauthStartUri or {@code null} for none
   */
  public AccountConnector setOauthStartUri(java.lang.String oauthStartUri) {
    this.oauthStartUri = oauthStartUri;
    return this;
  }

  /**
   * Provider OAuth config.
   * @return value or {@code null} for none
   */
  public ProviderOAuthConfig getProviderOauthConfig() {
    return providerOauthConfig;
  }

  /**
   * Provider OAuth config.
   * @param providerOauthConfig providerOauthConfig or {@code null} for none
   */
  public AccountConnector setProviderOauthConfig(ProviderOAuthConfig providerOauthConfig) {
    this.providerOauthConfig = providerOauthConfig;
    return this;
  }

  /**
   * Output only. The timestamp when the accountConnector was updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. The timestamp when the accountConnector was updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public AccountConnector setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public AccountConnector set(String fieldName, Object value) {
    return (AccountConnector) super.set(fieldName, value);
  }

  @Override
  public AccountConnector clone() {
    return (AccountConnector) super.clone();
  }

}
