/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.language.v1.model;

/**
 * Model definition for XPSSpeechPreprocessStats.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Natural Language API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class XPSSpeechPreprocessStats extends com.google.api.client.json.GenericJson {

  /**
   * Different types of data errors and the counts associated with them.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<XPSDataErrors> dataErrors;

  static {
    // hack to force ProGuard to consider XPSDataErrors used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(XPSDataErrors.class);
  }

  /**
   * The number of rows marked HUMAN_LABELLED
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer numHumanLabeledExamples;

  /**
   * The number of samples found in the previously recorded logs data.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer numLogsExamples;

  /**
   * The number of rows marked as MACHINE_TRANSCRIBED
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer numMachineTranscribedExamples;

  /**
   * The number of examples labelled as TEST by Speech xps server.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer testExamplesCount;

  /**
   * The number of sentences in the test data set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer testSentencesCount;

  /**
   * The number of words in the test data set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer testWordsCount;

  /**
   * The number of examples labeled as TRAIN by Speech xps server.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer trainExamplesCount;

  /**
   * The number of sentences in the training data set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer trainSentencesCount;

  /**
   * The number of words in the training data set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer trainWordsCount;

  /**
   * Different types of data errors and the counts associated with them.
   * @return value or {@code null} for none
   */
  public java.util.List<XPSDataErrors> getDataErrors() {
    return dataErrors;
  }

  /**
   * Different types of data errors and the counts associated with them.
   * @param dataErrors dataErrors or {@code null} for none
   */
  public XPSSpeechPreprocessStats setDataErrors(java.util.List<XPSDataErrors> dataErrors) {
    this.dataErrors = dataErrors;
    return this;
  }

  /**
   * The number of rows marked HUMAN_LABELLED
   * @return value or {@code null} for none
   */
  public java.lang.Integer getNumHumanLabeledExamples() {
    return numHumanLabeledExamples;
  }

  /**
   * The number of rows marked HUMAN_LABELLED
   * @param numHumanLabeledExamples numHumanLabeledExamples or {@code null} for none
   */
  public XPSSpeechPreprocessStats setNumHumanLabeledExamples(java.lang.Integer numHumanLabeledExamples) {
    this.numHumanLabeledExamples = numHumanLabeledExamples;
    return this;
  }

  /**
   * The number of samples found in the previously recorded logs data.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getNumLogsExamples() {
    return numLogsExamples;
  }

  /**
   * The number of samples found in the previously recorded logs data.
   * @param numLogsExamples numLogsExamples or {@code null} for none
   */
  public XPSSpeechPreprocessStats setNumLogsExamples(java.lang.Integer numLogsExamples) {
    this.numLogsExamples = numLogsExamples;
    return this;
  }

  /**
   * The number of rows marked as MACHINE_TRANSCRIBED
   * @return value or {@code null} for none
   */
  public java.lang.Integer getNumMachineTranscribedExamples() {
    return numMachineTranscribedExamples;
  }

  /**
   * The number of rows marked as MACHINE_TRANSCRIBED
   * @param numMachineTranscribedExamples numMachineTranscribedExamples or {@code null} for none
   */
  public XPSSpeechPreprocessStats setNumMachineTranscribedExamples(java.lang.Integer numMachineTranscribedExamples) {
    this.numMachineTranscribedExamples = numMachineTranscribedExamples;
    return this;
  }

  /**
   * The number of examples labelled as TEST by Speech xps server.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getTestExamplesCount() {
    return testExamplesCount;
  }

  /**
   * The number of examples labelled as TEST by Speech xps server.
   * @param testExamplesCount testExamplesCount or {@code null} for none
   */
  public XPSSpeechPreprocessStats setTestExamplesCount(java.lang.Integer testExamplesCount) {
    this.testExamplesCount = testExamplesCount;
    return this;
  }

  /**
   * The number of sentences in the test data set.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getTestSentencesCount() {
    return testSentencesCount;
  }

  /**
   * The number of sentences in the test data set.
   * @param testSentencesCount testSentencesCount or {@code null} for none
   */
  public XPSSpeechPreprocessStats setTestSentencesCount(java.lang.Integer testSentencesCount) {
    this.testSentencesCount = testSentencesCount;
    return this;
  }

  /**
   * The number of words in the test data set.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getTestWordsCount() {
    return testWordsCount;
  }

  /**
   * The number of words in the test data set.
   * @param testWordsCount testWordsCount or {@code null} for none
   */
  public XPSSpeechPreprocessStats setTestWordsCount(java.lang.Integer testWordsCount) {
    this.testWordsCount = testWordsCount;
    return this;
  }

  /**
   * The number of examples labeled as TRAIN by Speech xps server.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getTrainExamplesCount() {
    return trainExamplesCount;
  }

  /**
   * The number of examples labeled as TRAIN by Speech xps server.
   * @param trainExamplesCount trainExamplesCount or {@code null} for none
   */
  public XPSSpeechPreprocessStats setTrainExamplesCount(java.lang.Integer trainExamplesCount) {
    this.trainExamplesCount = trainExamplesCount;
    return this;
  }

  /**
   * The number of sentences in the training data set.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getTrainSentencesCount() {
    return trainSentencesCount;
  }

  /**
   * The number of sentences in the training data set.
   * @param trainSentencesCount trainSentencesCount or {@code null} for none
   */
  public XPSSpeechPreprocessStats setTrainSentencesCount(java.lang.Integer trainSentencesCount) {
    this.trainSentencesCount = trainSentencesCount;
    return this;
  }

  /**
   * The number of words in the training data set.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getTrainWordsCount() {
    return trainWordsCount;
  }

  /**
   * The number of words in the training data set.
   * @param trainWordsCount trainWordsCount or {@code null} for none
   */
  public XPSSpeechPreprocessStats setTrainWordsCount(java.lang.Integer trainWordsCount) {
    this.trainWordsCount = trainWordsCount;
    return this;
  }

  @Override
  public XPSSpeechPreprocessStats set(String fieldName, Object value) {
    return (XPSSpeechPreprocessStats) super.set(fieldName, value);
  }

  @Override
  public XPSSpeechPreprocessStats clone() {
    return (XPSSpeechPreprocessStats) super.clone();
  }

}
