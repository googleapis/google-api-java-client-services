/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.checks.v1alpha.model;

/**
 * Model definition for PolicyPurposeOfUseAnnotation.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Checks API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class PolicyPurposeOfUseAnnotation extends com.google.api.client.json.GenericJson {

  /**
   * Byte offsets for the end of the purpose of use sentence inside the full text.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long endOffset;

  /**
   * Purpose of use mentioned in the policy.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String purposeOfUse;

  /**
   * Score given by the model representing how confident it was regarding this `text_content` being
   * of `purpose_of_use`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float score;

  /**
   * Byte offsets for the start of the purpose of use sentence inside the full text.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long startOffset;

  /**
   * The bytes of actual text content in the sentence that mentions the purpose of use. This makes
   * it much easier to consume the information.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String textContent;

  /**
   * Byte offsets for the end of the purpose of use sentence inside the full text.
   * @return value or {@code null} for none
   */
  public java.lang.Long getEndOffset() {
    return endOffset;
  }

  /**
   * Byte offsets for the end of the purpose of use sentence inside the full text.
   * @param endOffset endOffset or {@code null} for none
   */
  public PolicyPurposeOfUseAnnotation setEndOffset(java.lang.Long endOffset) {
    this.endOffset = endOffset;
    return this;
  }

  /**
   * Purpose of use mentioned in the policy.
   * @return value or {@code null} for none
   */
  public java.lang.String getPurposeOfUse() {
    return purposeOfUse;
  }

  /**
   * Purpose of use mentioned in the policy.
   * @param purposeOfUse purposeOfUse or {@code null} for none
   */
  public PolicyPurposeOfUseAnnotation setPurposeOfUse(java.lang.String purposeOfUse) {
    this.purposeOfUse = purposeOfUse;
    return this;
  }

  /**
   * Score given by the model representing how confident it was regarding this `text_content` being
   * of `purpose_of_use`.
   * @return value or {@code null} for none
   */
  public java.lang.Float getScore() {
    return score;
  }

  /**
   * Score given by the model representing how confident it was regarding this `text_content` being
   * of `purpose_of_use`.
   * @param score score or {@code null} for none
   */
  public PolicyPurposeOfUseAnnotation setScore(java.lang.Float score) {
    this.score = score;
    return this;
  }

  /**
   * Byte offsets for the start of the purpose of use sentence inside the full text.
   * @return value or {@code null} for none
   */
  public java.lang.Long getStartOffset() {
    return startOffset;
  }

  /**
   * Byte offsets for the start of the purpose of use sentence inside the full text.
   * @param startOffset startOffset or {@code null} for none
   */
  public PolicyPurposeOfUseAnnotation setStartOffset(java.lang.Long startOffset) {
    this.startOffset = startOffset;
    return this;
  }

  /**
   * The bytes of actual text content in the sentence that mentions the purpose of use. This makes
   * it much easier to consume the information.
   * @return value or {@code null} for none
   */
  public java.lang.String getTextContent() {
    return textContent;
  }

  /**
   * The bytes of actual text content in the sentence that mentions the purpose of use. This makes
   * it much easier to consume the information.
   * @param textContent textContent or {@code null} for none
   */
  public PolicyPurposeOfUseAnnotation setTextContent(java.lang.String textContent) {
    this.textContent = textContent;
    return this;
  }

  @Override
  public PolicyPurposeOfUseAnnotation set(String fieldName, Object value) {
    return (PolicyPurposeOfUseAnnotation) super.set(fieldName, value);
  }

  @Override
  public PolicyPurposeOfUseAnnotation clone() {
    return (PolicyPurposeOfUseAnnotation) super.clone();
  }

}
