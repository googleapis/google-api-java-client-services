/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.genomics.model;

/**
 * Model definition for Experiment.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Genomics API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Experiment extends com.google.api.client.json.GenericJson {

  /**
   * The instrument model used as part of this experiment. This maps to sequencing technology in the
   * SAM spec.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String instrumentModel;

  /**
   * A client-supplied library identifier; a library is a collection of DNA fragments which have
   * been prepared for sequencing from a sample. This field is important for quality control as
   * error or bias can be introduced during sample preparation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String libraryId;

  /**
   * The platform unit used as part of this experiment, for example flowcell-barcode.lane for
   * Illumina or slide for SOLiD. Corresponds to the @RG PU field in the SAM spec.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String platformUnit;

  /**
   * The sequencing center used as part of this experiment.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String sequencingCenter;

  /**
   * The instrument model used as part of this experiment. This maps to sequencing technology in the
   * SAM spec.
   * @return value or {@code null} for none
   */
  public java.lang.String getInstrumentModel() {
    return instrumentModel;
  }

  /**
   * The instrument model used as part of this experiment. This maps to sequencing technology in the
   * SAM spec.
   * @param instrumentModel instrumentModel or {@code null} for none
   */
  public Experiment setInstrumentModel(java.lang.String instrumentModel) {
    this.instrumentModel = instrumentModel;
    return this;
  }

  /**
   * A client-supplied library identifier; a library is a collection of DNA fragments which have
   * been prepared for sequencing from a sample. This field is important for quality control as
   * error or bias can be introduced during sample preparation.
   * @return value or {@code null} for none
   */
  public java.lang.String getLibraryId() {
    return libraryId;
  }

  /**
   * A client-supplied library identifier; a library is a collection of DNA fragments which have
   * been prepared for sequencing from a sample. This field is important for quality control as
   * error or bias can be introduced during sample preparation.
   * @param libraryId libraryId or {@code null} for none
   */
  public Experiment setLibraryId(java.lang.String libraryId) {
    this.libraryId = libraryId;
    return this;
  }

  /**
   * The platform unit used as part of this experiment, for example flowcell-barcode.lane for
   * Illumina or slide for SOLiD. Corresponds to the @RG PU field in the SAM spec.
   * @return value or {@code null} for none
   */
  public java.lang.String getPlatformUnit() {
    return platformUnit;
  }

  /**
   * The platform unit used as part of this experiment, for example flowcell-barcode.lane for
   * Illumina or slide for SOLiD. Corresponds to the @RG PU field in the SAM spec.
   * @param platformUnit platformUnit or {@code null} for none
   */
  public Experiment setPlatformUnit(java.lang.String platformUnit) {
    this.platformUnit = platformUnit;
    return this;
  }

  /**
   * The sequencing center used as part of this experiment.
   * @return value or {@code null} for none
   */
  public java.lang.String getSequencingCenter() {
    return sequencingCenter;
  }

  /**
   * The sequencing center used as part of this experiment.
   * @param sequencingCenter sequencingCenter or {@code null} for none
   */
  public Experiment setSequencingCenter(java.lang.String sequencingCenter) {
    this.sequencingCenter = sequencingCenter;
    return this;
  }

  @Override
  public Experiment set(String fieldName, Object value) {
    return (Experiment) super.set(fieldName, value);
  }

  @Override
  public Experiment clone() {
    return (Experiment) super.clone();
  }

}
