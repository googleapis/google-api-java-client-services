/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Since this is stored in BE, any update on this proto needs LGTM by ARIS storage owner
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AssistantRemindersMemoryPayload extends com.google.api.client.json.GenericJson {

  /**
   * Whether the reminder created has a referenced_entity attached to it or not(go/hub-memory-
   * payload). Since we plan to set this in Assistant reminder creation path flow, in case later the
   * referenced_entity is removed from the reminder, then this bit might still remain true. Also in
   * case referenced_entity is later added to reminder(for example when referenced_entity is
   * attached by Server), then also this bit might remain false. This bit will be used to *guess* if
   * the user has a memory-enabled AGSA, thus we'll surface the "open memory" button on hubpage.
   * This check is not perfect, as the user might have other phones with older AGSA, so this is just
   * a *best guess*. This field won't be stored in Memory backend, and will not be populated back
   * when retrieving reminders.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean hasReferencedEntityAtCreation;

  /**
   * Id of record that is associated with Reminder. This will be set for all Assistant reminders
   * created after the first launch of the Reminder Memory integration, see go/reminders-memory for
   * more details. Also, this might apply to all other types of reminders.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String recordId;

  /**
   * Whether the reminder created has a referenced_entity attached to it or not(go/hub-memory-
   * payload). Since we plan to set this in Assistant reminder creation path flow, in case later the
   * referenced_entity is removed from the reminder, then this bit might still remain true. Also in
   * case referenced_entity is later added to reminder(for example when referenced_entity is
   * attached by Server), then also this bit might remain false. This bit will be used to *guess* if
   * the user has a memory-enabled AGSA, thus we'll surface the "open memory" button on hubpage.
   * This check is not perfect, as the user might have other phones with older AGSA, so this is just
   * a *best guess*. This field won't be stored in Memory backend, and will not be populated back
   * when retrieving reminders.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getHasReferencedEntityAtCreation() {
    return hasReferencedEntityAtCreation;
  }

  /**
   * Whether the reminder created has a referenced_entity attached to it or not(go/hub-memory-
   * payload). Since we plan to set this in Assistant reminder creation path flow, in case later the
   * referenced_entity is removed from the reminder, then this bit might still remain true. Also in
   * case referenced_entity is later added to reminder(for example when referenced_entity is
   * attached by Server), then also this bit might remain false. This bit will be used to *guess* if
   * the user has a memory-enabled AGSA, thus we'll surface the "open memory" button on hubpage.
   * This check is not perfect, as the user might have other phones with older AGSA, so this is just
   * a *best guess*. This field won't be stored in Memory backend, and will not be populated back
   * when retrieving reminders.
   * @param hasReferencedEntityAtCreation hasReferencedEntityAtCreation or {@code null} for none
   */
  public AssistantRemindersMemoryPayload setHasReferencedEntityAtCreation(java.lang.Boolean hasReferencedEntityAtCreation) {
    this.hasReferencedEntityAtCreation = hasReferencedEntityAtCreation;
    return this;
  }

  /**
   * Id of record that is associated with Reminder. This will be set for all Assistant reminders
   * created after the first launch of the Reminder Memory integration, see go/reminders-memory for
   * more details. Also, this might apply to all other types of reminders.
   * @return value or {@code null} for none
   */
  public java.lang.String getRecordId() {
    return recordId;
  }

  /**
   * Id of record that is associated with Reminder. This will be set for all Assistant reminders
   * created after the first launch of the Reminder Memory integration, see go/reminders-memory for
   * more details. Also, this might apply to all other types of reminders.
   * @param recordId recordId or {@code null} for none
   */
  public AssistantRemindersMemoryPayload setRecordId(java.lang.String recordId) {
    this.recordId = recordId;
    return this;
  }

  @Override
  public AssistantRemindersMemoryPayload set(String fieldName, Object value) {
    return (AssistantRemindersMemoryPayload) super.set(fieldName, value);
  }

  @Override
  public AssistantRemindersMemoryPayload clone() {
    return (AssistantRemindersMemoryPayload) super.clone();
  }

}
