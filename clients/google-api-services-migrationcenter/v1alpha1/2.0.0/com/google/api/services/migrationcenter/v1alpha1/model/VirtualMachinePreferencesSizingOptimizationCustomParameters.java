/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.migrationcenter.v1alpha1.model;

/**
 * Custom data to use for sizing optimizations.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Migration Center API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class VirtualMachinePreferencesSizingOptimizationCustomParameters extends com.google.api.client.json.GenericJson {

  /**
   * Optional. Type of statistical aggregation of a resource utilization data, on which to base the
   * sizing metrics.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String aggregationMethod;

  /**
   * Optional. Desired percentage of CPU usage. Must be in the interval [1, 100] (or 0 for default
   * value).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer cpuUsagePercentage;

  /**
   * Optional. Desired percentage of memory usage. Must be in the interval [1, 100] (or 0 for
   * default value).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer memoryUsagePercentage;

  /**
   * Optional. Desired increase factor of storage, relative to currently used storage. Must be in
   * the interval [1.0, 2.0] (or 0 for default value).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double storageMultiplier;

  /**
   * Optional. Type of statistical aggregation of a resource utilization data, on which to base the
   * sizing metrics.
   * @return value or {@code null} for none
   */
  public java.lang.String getAggregationMethod() {
    return aggregationMethod;
  }

  /**
   * Optional. Type of statistical aggregation of a resource utilization data, on which to base the
   * sizing metrics.
   * @param aggregationMethod aggregationMethod or {@code null} for none
   */
  public VirtualMachinePreferencesSizingOptimizationCustomParameters setAggregationMethod(java.lang.String aggregationMethod) {
    this.aggregationMethod = aggregationMethod;
    return this;
  }

  /**
   * Optional. Desired percentage of CPU usage. Must be in the interval [1, 100] (or 0 for default
   * value).
   * @return value or {@code null} for none
   */
  public java.lang.Integer getCpuUsagePercentage() {
    return cpuUsagePercentage;
  }

  /**
   * Optional. Desired percentage of CPU usage. Must be in the interval [1, 100] (or 0 for default
   * value).
   * @param cpuUsagePercentage cpuUsagePercentage or {@code null} for none
   */
  public VirtualMachinePreferencesSizingOptimizationCustomParameters setCpuUsagePercentage(java.lang.Integer cpuUsagePercentage) {
    this.cpuUsagePercentage = cpuUsagePercentage;
    return this;
  }

  /**
   * Optional. Desired percentage of memory usage. Must be in the interval [1, 100] (or 0 for
   * default value).
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMemoryUsagePercentage() {
    return memoryUsagePercentage;
  }

  /**
   * Optional. Desired percentage of memory usage. Must be in the interval [1, 100] (or 0 for
   * default value).
   * @param memoryUsagePercentage memoryUsagePercentage or {@code null} for none
   */
  public VirtualMachinePreferencesSizingOptimizationCustomParameters setMemoryUsagePercentage(java.lang.Integer memoryUsagePercentage) {
    this.memoryUsagePercentage = memoryUsagePercentage;
    return this;
  }

  /**
   * Optional. Desired increase factor of storage, relative to currently used storage. Must be in
   * the interval [1.0, 2.0] (or 0 for default value).
   * @return value or {@code null} for none
   */
  public java.lang.Double getStorageMultiplier() {
    return storageMultiplier;
  }

  /**
   * Optional. Desired increase factor of storage, relative to currently used storage. Must be in
   * the interval [1.0, 2.0] (or 0 for default value).
   * @param storageMultiplier storageMultiplier or {@code null} for none
   */
  public VirtualMachinePreferencesSizingOptimizationCustomParameters setStorageMultiplier(java.lang.Double storageMultiplier) {
    this.storageMultiplier = storageMultiplier;
    return this;
  }

  @Override
  public VirtualMachinePreferencesSizingOptimizationCustomParameters set(String fieldName, Object value) {
    return (VirtualMachinePreferencesSizingOptimizationCustomParameters) super.set(fieldName, value);
  }

  @Override
  public VirtualMachinePreferencesSizingOptimizationCustomParameters clone() {
    return (VirtualMachinePreferencesSizingOptimizationCustomParameters) super.clone();
  }

}
