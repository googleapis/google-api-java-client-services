/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.datalabeling.v1beta1.model;

/**
 * Instruction of how to perform the labeling task for human operators. Currently only PDF
 * instruction is supported.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Data Labeling API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDatalabelingV1beta1Instruction extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The names of any related resources that are blocking changes to the instruction.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> blockingResources;

  /**
   * Output only. Creation time of instruction.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Deprecated: this instruction format is not supported any more. Instruction from a CSV file,
   * such as for classification task. The CSV file should have exact two columns, in the following
   * format: * The first column is labeled data, such as an image reference, text. * The second
   * column is comma separated labels associated with data.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDatalabelingV1beta1CsvInstruction csvInstruction;

  /**
   * Required. The data type of this instruction.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String dataType;

  /**
   * Optional. User-provided description of the instruction. The description can be up to 10000
   * characters long.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Required. The display name of the instruction. Maximum of 64 characters.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Output only. Instruction resource name, format:
   * projects/{project_id}/instructions/{instruction_id}
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Instruction from a PDF document. The PDF should be in a Cloud Storage bucket.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDatalabelingV1beta1PdfInstruction pdfInstruction;

  /**
   * Output only. Last update time of instruction.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Output only. The names of any related resources that are blocking changes to the instruction.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getBlockingResources() {
    return blockingResources;
  }

  /**
   * Output only. The names of any related resources that are blocking changes to the instruction.
   * @param blockingResources blockingResources or {@code null} for none
   */
  public GoogleCloudDatalabelingV1beta1Instruction setBlockingResources(java.util.List<java.lang.String> blockingResources) {
    this.blockingResources = blockingResources;
    return this;
  }

  /**
   * Output only. Creation time of instruction.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. Creation time of instruction.
   * @param createTime createTime or {@code null} for none
   */
  public GoogleCloudDatalabelingV1beta1Instruction setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Deprecated: this instruction format is not supported any more. Instruction from a CSV file,
   * such as for classification task. The CSV file should have exact two columns, in the following
   * format: * The first column is labeled data, such as an image reference, text. * The second
   * column is comma separated labels associated with data.
   * @return value or {@code null} for none
   */
  public GoogleCloudDatalabelingV1beta1CsvInstruction getCsvInstruction() {
    return csvInstruction;
  }

  /**
   * Deprecated: this instruction format is not supported any more. Instruction from a CSV file,
   * such as for classification task. The CSV file should have exact two columns, in the following
   * format: * The first column is labeled data, such as an image reference, text. * The second
   * column is comma separated labels associated with data.
   * @param csvInstruction csvInstruction or {@code null} for none
   */
  public GoogleCloudDatalabelingV1beta1Instruction setCsvInstruction(GoogleCloudDatalabelingV1beta1CsvInstruction csvInstruction) {
    this.csvInstruction = csvInstruction;
    return this;
  }

  /**
   * Required. The data type of this instruction.
   * @return value or {@code null} for none
   */
  public java.lang.String getDataType() {
    return dataType;
  }

  /**
   * Required. The data type of this instruction.
   * @param dataType dataType or {@code null} for none
   */
  public GoogleCloudDatalabelingV1beta1Instruction setDataType(java.lang.String dataType) {
    this.dataType = dataType;
    return this;
  }

  /**
   * Optional. User-provided description of the instruction. The description can be up to 10000
   * characters long.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Optional. User-provided description of the instruction. The description can be up to 10000
   * characters long.
   * @param description description or {@code null} for none
   */
  public GoogleCloudDatalabelingV1beta1Instruction setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Required. The display name of the instruction. Maximum of 64 characters.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Required. The display name of the instruction. Maximum of 64 characters.
   * @param displayName displayName or {@code null} for none
   */
  public GoogleCloudDatalabelingV1beta1Instruction setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Output only. Instruction resource name, format:
   * projects/{project_id}/instructions/{instruction_id}
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. Instruction resource name, format:
   * projects/{project_id}/instructions/{instruction_id}
   * @param name name or {@code null} for none
   */
  public GoogleCloudDatalabelingV1beta1Instruction setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Instruction from a PDF document. The PDF should be in a Cloud Storage bucket.
   * @return value or {@code null} for none
   */
  public GoogleCloudDatalabelingV1beta1PdfInstruction getPdfInstruction() {
    return pdfInstruction;
  }

  /**
   * Instruction from a PDF document. The PDF should be in a Cloud Storage bucket.
   * @param pdfInstruction pdfInstruction or {@code null} for none
   */
  public GoogleCloudDatalabelingV1beta1Instruction setPdfInstruction(GoogleCloudDatalabelingV1beta1PdfInstruction pdfInstruction) {
    this.pdfInstruction = pdfInstruction;
    return this;
  }

  /**
   * Output only. Last update time of instruction.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. Last update time of instruction.
   * @param updateTime updateTime or {@code null} for none
   */
  public GoogleCloudDatalabelingV1beta1Instruction setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public GoogleCloudDatalabelingV1beta1Instruction set(String fieldName, Object value) {
    return (GoogleCloudDatalabelingV1beta1Instruction) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDatalabelingV1beta1Instruction clone() {
    return (GoogleCloudDatalabelingV1beta1Instruction) super.clone();
  }

}
