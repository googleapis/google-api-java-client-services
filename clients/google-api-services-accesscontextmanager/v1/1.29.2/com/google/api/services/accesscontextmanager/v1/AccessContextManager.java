/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.accesscontextmanager.v1;

/**
 * Service definition for AccessContextManager (v1).
 *
 * <p>
 * An API for setting attribute based access control to requests to GCP services.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/access-context-manager/docs/reference/rest/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link AccessContextManagerRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class AccessContextManager extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.29.2 of the Access Context Manager API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://accesscontextmanager.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public AccessContextManager(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  AccessContextManager(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the AccessPolicies collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code AccessContextManager accesscontextmanager = new AccessContextManager(...);}
   *   {@code AccessContextManager.AccessPolicies.List request = accesscontextmanager.accessPolicies().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public AccessPolicies accessPolicies() {
    return new AccessPolicies();
  }

  /**
   * The "accessPolicies" collection of methods.
   */
  public class AccessPolicies {

    /**
     * Create an `AccessPolicy`. Fails if this organization already has a `AccessPolicy`. The
     * longrunning Operation will have a successful status once the `AccessPolicy` has propagated to
     * long-lasting storage. Syntactic and basic semantic errors will be returned in `metadata` as a
     * BadRequest proto.
     *
     * Create a request for the method "accessPolicies.create".
     *
     * This request holds the parameters needed by the accesscontextmanager server.  After setting any
     * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.accesscontextmanager.v1.model.AccessPolicy}
     * @return the request
     */
    public Create create(com.google.api.services.accesscontextmanager.v1.model.AccessPolicy content) throws java.io.IOException {
      Create result = new Create(content);
      initialize(result);
      return result;
    }

    public class Create extends AccessContextManagerRequest<com.google.api.services.accesscontextmanager.v1.model.Operation> {

      private static final String REST_PATH = "v1/accessPolicies";

      /**
       * Create an `AccessPolicy`. Fails if this organization already has a `AccessPolicy`. The
       * longrunning Operation will have a successful status once the `AccessPolicy` has propagated to
       * long-lasting storage. Syntactic and basic semantic errors will be returned in `metadata` as a
       * BadRequest proto.
       *
       * Create a request for the method "accessPolicies.create".
       *
       * This request holds the parameters needed by the the accesscontextmanager server.  After setting
       * any optional parameters, call the {@link Create#execute()} method to invoke the remote
       * operation. <p> {@link
       * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.accesscontextmanager.v1.model.AccessPolicy}
       * @since 1.13
       */
      protected Create(com.google.api.services.accesscontextmanager.v1.model.AccessPolicy content) {
        super(AccessContextManager.this, "POST", REST_PATH, content, com.google.api.services.accesscontextmanager.v1.model.Operation.class);
      }

      @Override
      public Create set$Xgafv(java.lang.String $Xgafv) {
        return (Create) super.set$Xgafv($Xgafv);
      }

      @Override
      public Create setAccessToken(java.lang.String accessToken) {
        return (Create) super.setAccessToken(accessToken);
      }

      @Override
      public Create setAlt(java.lang.String alt) {
        return (Create) super.setAlt(alt);
      }

      @Override
      public Create setCallback(java.lang.String callback) {
        return (Create) super.setCallback(callback);
      }

      @Override
      public Create setFields(java.lang.String fields) {
        return (Create) super.setFields(fields);
      }

      @Override
      public Create setKey(java.lang.String key) {
        return (Create) super.setKey(key);
      }

      @Override
      public Create setOauthToken(java.lang.String oauthToken) {
        return (Create) super.setOauthToken(oauthToken);
      }

      @Override
      public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Create) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Create setQuotaUser(java.lang.String quotaUser) {
        return (Create) super.setQuotaUser(quotaUser);
      }

      @Override
      public Create setUploadType(java.lang.String uploadType) {
        return (Create) super.setUploadType(uploadType);
      }

      @Override
      public Create setUploadProtocol(java.lang.String uploadProtocol) {
        return (Create) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public Create set(String parameterName, Object value) {
        return (Create) super.set(parameterName, value);
      }
    }
    /**
     * Delete an AccessPolicy by resource name. The longrunning Operation will have a successful status
     * once the AccessPolicy has been removed from long-lasting storage.
     *
     * Create a request for the method "accessPolicies.delete".
     *
     * This request holds the parameters needed by the accesscontextmanager server.  After setting any
     * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param name Required. Resource name for the access policy to delete.
    Format `accessPolicies/{policy_id}`
     * @return the request
     */
    public Delete delete(java.lang.String name) throws java.io.IOException {
      Delete result = new Delete(name);
      initialize(result);
      return result;
    }

    public class Delete extends AccessContextManagerRequest<com.google.api.services.accesscontextmanager.v1.model.Operation> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^accessPolicies/[^/]+$");

      /**
       * Delete an AccessPolicy by resource name. The longrunning Operation will have a successful
       * status once the AccessPolicy has been removed from long-lasting storage.
       *
       * Create a request for the method "accessPolicies.delete".
       *
       * This request holds the parameters needed by the the accesscontextmanager server.  After setting
       * any optional parameters, call the {@link Delete#execute()} method to invoke the remote
       * operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Required. Resource name for the access policy to delete.
    Format `accessPolicies/{policy_id}`
       * @since 1.13
       */
      protected Delete(java.lang.String name) {
        super(AccessContextManager.this, "DELETE", REST_PATH, null, com.google.api.services.accesscontextmanager.v1.model.Operation.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^accessPolicies/[^/]+$");
        }
      }

      @Override
      public Delete set$Xgafv(java.lang.String $Xgafv) {
        return (Delete) super.set$Xgafv($Xgafv);
      }

      @Override
      public Delete setAccessToken(java.lang.String accessToken) {
        return (Delete) super.setAccessToken(accessToken);
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setCallback(java.lang.String callback) {
        return (Delete) super.setCallback(callback);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUploadType(java.lang.String uploadType) {
        return (Delete) super.setUploadType(uploadType);
      }

      @Override
      public Delete setUploadProtocol(java.lang.String uploadProtocol) {
        return (Delete) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. Resource name for the access policy to delete.
       *
       * Format `accessPolicies/{policy_id}`
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. Resource name for the access policy to delete.

     Format `accessPolicies/{policy_id}`
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. Resource name for the access policy to delete.
       *
       * Format `accessPolicies/{policy_id}`
       */
      public Delete setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^accessPolicies/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Get an AccessPolicy by name.
     *
     * Create a request for the method "accessPolicies.get".
     *
     * This request holds the parameters needed by the accesscontextmanager server.  After setting any
     * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param name Required. Resource name for the access policy to get.
    Format `accessPolicies/{policy_id}`
     * @return the request
     */
    public Get get(java.lang.String name) throws java.io.IOException {
      Get result = new Get(name);
      initialize(result);
      return result;
    }

    public class Get extends AccessContextManagerRequest<com.google.api.services.accesscontextmanager.v1.model.AccessPolicy> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^accessPolicies/[^/]+$");

      /**
       * Get an AccessPolicy by name.
       *
       * Create a request for the method "accessPolicies.get".
       *
       * This request holds the parameters needed by the the accesscontextmanager server.  After setting
       * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       * <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Required. Resource name for the access policy to get.
    Format `accessPolicies/{policy_id}`
       * @since 1.13
       */
      protected Get(java.lang.String name) {
        super(AccessContextManager.this, "GET", REST_PATH, null, com.google.api.services.accesscontextmanager.v1.model.AccessPolicy.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^accessPolicies/[^/]+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. Resource name for the access policy to get.
       *
       * Format `accessPolicies/{policy_id}`
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. Resource name for the access policy to get.

     Format `accessPolicies/{policy_id}`
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. Resource name for the access policy to get.
       *
       * Format `accessPolicies/{policy_id}`
       */
      public Get setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^accessPolicies/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * List all AccessPolicies under a container.
     *
     * Create a request for the method "accessPolicies.list".
     *
     * This request holds the parameters needed by the accesscontextmanager server.  After setting any
     * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public List list() throws java.io.IOException {
      List result = new List();
      initialize(result);
      return result;
    }

    public class List extends AccessContextManagerRequest<com.google.api.services.accesscontextmanager.v1.model.ListAccessPoliciesResponse> {

      private static final String REST_PATH = "v1/accessPolicies";

      /**
       * List all AccessPolicies under a container.
       *
       * Create a request for the method "accessPolicies.list".
       *
       * This request holds the parameters needed by the the accesscontextmanager server.  After setting
       * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       * <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected List() {
        super(AccessContextManager.this, "GET", REST_PATH, null, com.google.api.services.accesscontextmanager.v1.model.ListAccessPoliciesResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /** Number of AccessPolicy instances to include in the list. Default 100. */
      @com.google.api.client.util.Key
      private java.lang.Integer pageSize;

      /** Number of AccessPolicy instances to include in the list. Default 100.
       */
      public java.lang.Integer getPageSize() {
        return pageSize;
      }

      /** Number of AccessPolicy instances to include in the list. Default 100. */
      public List setPageSize(java.lang.Integer pageSize) {
        this.pageSize = pageSize;
        return this;
      }

      /**
       * Next page token for the next batch of AccessPolicy instances. Defaults to the first page of
       * results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Next page token for the next batch of AccessPolicy instances. Defaults to the first page of
     results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Next page token for the next batch of AccessPolicy instances. Defaults to the first page of
       * results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      /**
       * Required. Resource name for the container to list AccessPolicy instances from.
       *
       * Format: `organizations/{org_id}`
       */
      @com.google.api.client.util.Key
      private java.lang.String parent;

      /** Required. Resource name for the container to list AccessPolicy instances from.

     Format: `organizations/{org_id}`
       */
      public java.lang.String getParent() {
        return parent;
      }

      /**
       * Required. Resource name for the container to list AccessPolicy instances from.
       *
       * Format: `organizations/{org_id}`
       */
      public List setParent(java.lang.String parent) {
        this.parent = parent;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Update an AccessPolicy. The longrunning Operation from this RPC will have a successful status
     * once the changes to the AccessPolicy have propagated to long-lasting storage. Syntactic and basic
     * semantic errors will be returned in `metadata` as a BadRequest proto.
     *
     * Create a request for the method "accessPolicies.patch".
     *
     * This request holds the parameters needed by the accesscontextmanager server.  After setting any
     * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param name Output only. Resource name of the `AccessPolicy`. Format:
    `accessPolicies/{policy_id}`
     * @param content the {@link com.google.api.services.accesscontextmanager.v1.model.AccessPolicy}
     * @return the request
     */
    public Patch patch(java.lang.String name, com.google.api.services.accesscontextmanager.v1.model.AccessPolicy content) throws java.io.IOException {
      Patch result = new Patch(name, content);
      initialize(result);
      return result;
    }

    public class Patch extends AccessContextManagerRequest<com.google.api.services.accesscontextmanager.v1.model.Operation> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^accessPolicies/[^/]+$");

      /**
       * Update an AccessPolicy. The longrunning Operation from this RPC will have a successful status
       * once the changes to the AccessPolicy have propagated to long-lasting storage. Syntactic and
       * basic semantic errors will be returned in `metadata` as a BadRequest proto.
       *
       * Create a request for the method "accessPolicies.patch".
       *
       * This request holds the parameters needed by the the accesscontextmanager server.  After setting
       * any optional parameters, call the {@link Patch#execute()} method to invoke the remote
       * operation. <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Output only. Resource name of the `AccessPolicy`. Format:
    `accessPolicies/{policy_id}`
       * @param content the {@link com.google.api.services.accesscontextmanager.v1.model.AccessPolicy}
       * @since 1.13
       */
      protected Patch(java.lang.String name, com.google.api.services.accesscontextmanager.v1.model.AccessPolicy content) {
        super(AccessContextManager.this, "PATCH", REST_PATH, content, com.google.api.services.accesscontextmanager.v1.model.Operation.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^accessPolicies/[^/]+$");
        }
      }

      @Override
      public Patch set$Xgafv(java.lang.String $Xgafv) {
        return (Patch) super.set$Xgafv($Xgafv);
      }

      @Override
      public Patch setAccessToken(java.lang.String accessToken) {
        return (Patch) super.setAccessToken(accessToken);
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setCallback(java.lang.String callback) {
        return (Patch) super.setCallback(callback);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUploadType(java.lang.String uploadType) {
        return (Patch) super.setUploadType(uploadType);
      }

      @Override
      public Patch setUploadProtocol(java.lang.String uploadProtocol) {
        return (Patch) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Output only. Resource name of the `AccessPolicy`. Format: `accessPolicies/{policy_id}`
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Output only. Resource name of the `AccessPolicy`. Format: `accessPolicies/{policy_id}`
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Output only. Resource name of the `AccessPolicy`. Format: `accessPolicies/{policy_id}`
       */
      public Patch setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^accessPolicies/[^/]+$");
        }
        this.name = name;
        return this;
      }

      /** Required. Mask to control which fields get updated. Must be non-empty. */
      @com.google.api.client.util.Key
      private String updateMask;

      /** Required. Mask to control which fields get updated. Must be non-empty.
       */
      public String getUpdateMask() {
        return updateMask;
      }

      /** Required. Mask to control which fields get updated. Must be non-empty. */
      public Patch setUpdateMask(String updateMask) {
        this.updateMask = updateMask;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the AccessLevels collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code AccessContextManager accesscontextmanager = new AccessContextManager(...);}
     *   {@code AccessContextManager.AccessLevels.List request = accesscontextmanager.accessLevels().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public AccessLevels accessLevels() {
      return new AccessLevels();
    }

    /**
     * The "accessLevels" collection of methods.
     */
    public class AccessLevels {

      /**
       * Create an Access Level. The longrunning operation from this RPC will have a successful status
       * once the Access Level has propagated to long-lasting storage. Access Levels containing errors
       * will result in an error response for the first error encountered.
       *
       * Create a request for the method "accessLevels.create".
       *
       * This request holds the parameters needed by the accesscontextmanager server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Resource name for the access policy which owns this Access
      Level.
      Format:
       *        `accessPolicies/{policy_id}`
       * @param content the {@link com.google.api.services.accesscontextmanager.v1.model.AccessLevel}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.accesscontextmanager.v1.model.AccessLevel content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends AccessContextManagerRequest<com.google.api.services.accesscontextmanager.v1.model.Operation> {

        private static final String REST_PATH = "v1/{+parent}/accessLevels";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^accessPolicies/[^/]+$");

        /**
         * Create an Access Level. The longrunning operation from this RPC will have a successful status
         * once the Access Level has propagated to long-lasting storage. Access Levels containing errors
         * will result in an error response for the first error encountered.
         *
         * Create a request for the method "accessLevels.create".
         *
         * This request holds the parameters needed by the the accesscontextmanager server.  After setting
         * any optional parameters, call the {@link Create#execute()} method to invoke the remote
         * operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Resource name for the access policy which owns this Access
      Level.
      Format:
       *        `accessPolicies/{policy_id}`
         * @param content the {@link com.google.api.services.accesscontextmanager.v1.model.AccessLevel}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.accesscontextmanager.v1.model.AccessLevel content) {
          super(AccessContextManager.this, "POST", REST_PATH, content, com.google.api.services.accesscontextmanager.v1.model.Operation.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accessPolicies/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Resource name for the access policy which owns this Access Level.
         *
         * Format: `accessPolicies/{policy_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Resource name for the access policy which owns this Access Level.

       Format: `accessPolicies/{policy_id}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Resource name for the access policy which owns this Access Level.
         *
         * Format: `accessPolicies/{policy_id}`
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accessPolicies/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Delete an Access Level by resource name. The longrunning operation from this RPC will have a
       * successful status once the Access Level has been removed from long-lasting storage.
       *
       * Create a request for the method "accessLevels.delete".
       *
       * This request holds the parameters needed by the accesscontextmanager server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. Resource name for the Access Level.
      Format:
       *        `accessPolicies/{policy_id}/accessLevels/{access_level_id}`
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends AccessContextManagerRequest<com.google.api.services.accesscontextmanager.v1.model.Operation> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accessPolicies/[^/]+/accessLevels/[^/]+$");

        /**
         * Delete an Access Level by resource name. The longrunning operation from this RPC will have a
         * successful status once the Access Level has been removed from long-lasting storage.
         *
         * Create a request for the method "accessLevels.delete".
         *
         * This request holds the parameters needed by the the accesscontextmanager server.  After setting
         * any optional parameters, call the {@link Delete#execute()} method to invoke the remote
         * operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Resource name for the Access Level.
      Format:
       *        `accessPolicies/{policy_id}/accessLevels/{access_level_id}`
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(AccessContextManager.this, "DELETE", REST_PATH, null, com.google.api.services.accesscontextmanager.v1.model.Operation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accessPolicies/[^/]+/accessLevels/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Resource name for the Access Level.
         *
         * Format: `accessPolicies/{policy_id}/accessLevels/{access_level_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Resource name for the Access Level.

       Format: `accessPolicies/{policy_id}/accessLevels/{access_level_id}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Resource name for the Access Level.
         *
         * Format: `accessPolicies/{policy_id}/accessLevels/{access_level_id}`
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accessPolicies/[^/]+/accessLevels/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Get an Access Level by resource name.
       *
       * Create a request for the method "accessLevels.get".
       *
       * This request holds the parameters needed by the accesscontextmanager server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. Resource name for the Access Level.
      Format:
       *        `accessPolicies/{policy_id}/accessLevels/{access_level_id}`
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends AccessContextManagerRequest<com.google.api.services.accesscontextmanager.v1.model.AccessLevel> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accessPolicies/[^/]+/accessLevels/[^/]+$");

        /**
         * Get an Access Level by resource name.
         *
         * Create a request for the method "accessLevels.get".
         *
         * This request holds the parameters needed by the the accesscontextmanager server.  After setting
         * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         * <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Resource name for the Access Level.
      Format:
       *        `accessPolicies/{policy_id}/accessLevels/{access_level_id}`
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(AccessContextManager.this, "GET", REST_PATH, null, com.google.api.services.accesscontextmanager.v1.model.AccessLevel.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accessPolicies/[^/]+/accessLevels/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Resource name for the Access Level.
         *
         * Format: `accessPolicies/{policy_id}/accessLevels/{access_level_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Resource name for the Access Level.

       Format: `accessPolicies/{policy_id}/accessLevels/{access_level_id}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Resource name for the Access Level.
         *
         * Format: `accessPolicies/{policy_id}/accessLevels/{access_level_id}`
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accessPolicies/[^/]+/accessLevels/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * Whether to return `BasicLevels` in the Cloud Common Expression Language rather than as
         * `BasicLevels`. Defaults to AS_DEFINED, where Access Levels are returned as `BasicLevels`
         * or `CustomLevels` based on how they were created. If set to CEL, all Access Levels are
         * returned as `CustomLevels`. In the CEL case, `BasicLevels` are translated to equivalent
         * `CustomLevels`.
         */
        @com.google.api.client.util.Key
        private java.lang.String accessLevelFormat;

        /** Whether to return `BasicLevels` in the Cloud Common Expression Language rather than as
       `BasicLevels`. Defaults to AS_DEFINED, where Access Levels are returned as `BasicLevels` or
       `CustomLevels` based on how they were created. If set to CEL, all Access Levels are returned as
       `CustomLevels`. In the CEL case, `BasicLevels` are translated to equivalent `CustomLevels`.
         */
        public java.lang.String getAccessLevelFormat() {
          return accessLevelFormat;
        }

        /**
         * Whether to return `BasicLevels` in the Cloud Common Expression Language rather than as
         * `BasicLevels`. Defaults to AS_DEFINED, where Access Levels are returned as `BasicLevels`
         * or `CustomLevels` based on how they were created. If set to CEL, all Access Levels are
         * returned as `CustomLevels`. In the CEL case, `BasicLevels` are translated to equivalent
         * `CustomLevels`.
         */
        public Get setAccessLevelFormat(java.lang.String accessLevelFormat) {
          this.accessLevelFormat = accessLevelFormat;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * List all Access Levels for an access policy.
       *
       * Create a request for the method "accessLevels.list".
       *
       * This request holds the parameters needed by the accesscontextmanager server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Resource name for the access policy to list Access Levels from.
      Format:
       *        `accessPolicies/{policy_id}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends AccessContextManagerRequest<com.google.api.services.accesscontextmanager.v1.model.ListAccessLevelsResponse> {

        private static final String REST_PATH = "v1/{+parent}/accessLevels";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^accessPolicies/[^/]+$");

        /**
         * List all Access Levels for an access policy.
         *
         * Create a request for the method "accessLevels.list".
         *
         * This request holds the parameters needed by the the accesscontextmanager server.  After setting
         * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         * <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Resource name for the access policy to list Access Levels from.
      Format:
       *        `accessPolicies/{policy_id}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(AccessContextManager.this, "GET", REST_PATH, null, com.google.api.services.accesscontextmanager.v1.model.ListAccessLevelsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accessPolicies/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Resource name for the access policy to list Access Levels from.
         *
         * Format: `accessPolicies/{policy_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Resource name for the access policy to list Access Levels from.

       Format: `accessPolicies/{policy_id}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Resource name for the access policy to list Access Levels from.
         *
         * Format: `accessPolicies/{policy_id}`
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accessPolicies/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Whether to return `BasicLevels` in the Cloud Common Expression language, as
         * `CustomLevels`, rather than as `BasicLevels`. Defaults to returning `AccessLevels` in the
         * format they were defined.
         */
        @com.google.api.client.util.Key
        private java.lang.String accessLevelFormat;

        /** Whether to return `BasicLevels` in the Cloud Common Expression language, as `CustomLevels`, rather
       than as `BasicLevels`. Defaults to returning `AccessLevels` in the format they were defined.
         */
        public java.lang.String getAccessLevelFormat() {
          return accessLevelFormat;
        }

        /**
         * Whether to return `BasicLevels` in the Cloud Common Expression language, as
         * `CustomLevels`, rather than as `BasicLevels`. Defaults to returning `AccessLevels` in the
         * format they were defined.
         */
        public List setAccessLevelFormat(java.lang.String accessLevelFormat) {
          this.accessLevelFormat = accessLevelFormat;
          return this;
        }

        /**
         * Number of Access Levels to include in the list. Default 100.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Number of Access Levels to include in the list. Default 100.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Number of Access Levels to include in the list. Default 100.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Next page token for the next batch of Access Level instances. Defaults to the first page
         * of results.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Next page token for the next batch of Access Level instances. Defaults to the first page of
       results.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Next page token for the next batch of Access Level instances. Defaults to the first page
         * of results.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Update an Access Level. The longrunning operation from this RPC will have a successful status
       * once the changes to the Access Level have propagated to long-lasting storage. Access Levels
       * containing errors will result in an error response for the first error encountered.
       *
       * Create a request for the method "accessLevels.patch".
       *
       * This request holds the parameters needed by the accesscontextmanager server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Required. Resource name for the Access Level. The `short_name` component
      must begin with a letter
       *        and only include alphanumeric and '_'. Format:
       *        `accessPolicies/{policy_id}/accessLevels/{short_name}`
       * @param content the {@link com.google.api.services.accesscontextmanager.v1.model.AccessLevel}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.accesscontextmanager.v1.model.AccessLevel content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends AccessContextManagerRequest<com.google.api.services.accesscontextmanager.v1.model.Operation> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accessPolicies/[^/]+/accessLevels/[^/]+$");

        /**
         * Update an Access Level. The longrunning operation from this RPC will have a successful status
         * once the changes to the Access Level have propagated to long-lasting storage. Access Levels
         * containing errors will result in an error response for the first error encountered.
         *
         * Create a request for the method "accessLevels.patch".
         *
         * This request holds the parameters needed by the the accesscontextmanager server.  After setting
         * any optional parameters, call the {@link Patch#execute()} method to invoke the remote
         * operation. <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Resource name for the Access Level. The `short_name` component
      must begin with a letter
       *        and only include alphanumeric and '_'. Format:
       *        `accessPolicies/{policy_id}/accessLevels/{short_name}`
         * @param content the {@link com.google.api.services.accesscontextmanager.v1.model.AccessLevel}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.accesscontextmanager.v1.model.AccessLevel content) {
          super(AccessContextManager.this, "PATCH", REST_PATH, content, com.google.api.services.accesscontextmanager.v1.model.Operation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accessPolicies/[^/]+/accessLevels/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Resource name for the Access Level. The `short_name` component must begin with
         * a letter and only include alphanumeric and '_'. Format:
         * `accessPolicies/{policy_id}/accessLevels/{short_name}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Resource name for the Access Level. The `short_name` component must begin with a letter
       and only include alphanumeric and '_'. Format:
       `accessPolicies/{policy_id}/accessLevels/{short_name}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Resource name for the Access Level. The `short_name` component must begin with
         * a letter and only include alphanumeric and '_'. Format:
         * `accessPolicies/{policy_id}/accessLevels/{short_name}`
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accessPolicies/[^/]+/accessLevels/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /** Required.  Mask to control which fields get updated. Must be non-empty. */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Required.  Mask to control which fields get updated. Must be non-empty.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /** Required.  Mask to control which fields get updated. Must be non-empty. */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the ServicePerimeters collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code AccessContextManager accesscontextmanager = new AccessContextManager(...);}
     *   {@code AccessContextManager.ServicePerimeters.List request = accesscontextmanager.servicePerimeters().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public ServicePerimeters servicePerimeters() {
      return new ServicePerimeters();
    }

    /**
     * The "servicePerimeters" collection of methods.
     */
    public class ServicePerimeters {

      /**
       * Create an Service Perimeter. The longrunning operation from this RPC will have a successful
       * status once the Service Perimeter has propagated to long-lasting storage. Service Perimeters
       * containing errors will result in an error response for the first error encountered.
       *
       * Create a request for the method "servicePerimeters.create".
       *
       * This request holds the parameters needed by the accesscontextmanager server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Resource name for the access policy which owns this Service
      Perimeter.
      Format:
       *        `accessPolicies/{policy_id}`
       * @param content the {@link com.google.api.services.accesscontextmanager.v1.model.ServicePerimeter}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.accesscontextmanager.v1.model.ServicePerimeter content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends AccessContextManagerRequest<com.google.api.services.accesscontextmanager.v1.model.Operation> {

        private static final String REST_PATH = "v1/{+parent}/servicePerimeters";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^accessPolicies/[^/]+$");

        /**
         * Create an Service Perimeter. The longrunning operation from this RPC will have a successful
         * status once the Service Perimeter has propagated to long-lasting storage. Service Perimeters
         * containing errors will result in an error response for the first error encountered.
         *
         * Create a request for the method "servicePerimeters.create".
         *
         * This request holds the parameters needed by the the accesscontextmanager server.  After setting
         * any optional parameters, call the {@link Create#execute()} method to invoke the remote
         * operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Resource name for the access policy which owns this Service
      Perimeter.
      Format:
       *        `accessPolicies/{policy_id}`
         * @param content the {@link com.google.api.services.accesscontextmanager.v1.model.ServicePerimeter}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.accesscontextmanager.v1.model.ServicePerimeter content) {
          super(AccessContextManager.this, "POST", REST_PATH, content, com.google.api.services.accesscontextmanager.v1.model.Operation.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accessPolicies/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Resource name for the access policy which owns this Service Perimeter.
         *
         * Format: `accessPolicies/{policy_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Resource name for the access policy which owns this Service Perimeter.

       Format: `accessPolicies/{policy_id}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Resource name for the access policy which owns this Service Perimeter.
         *
         * Format: `accessPolicies/{policy_id}`
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accessPolicies/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Delete an Service Perimeter by resource name. The longrunning operation from this RPC will have a
       * successful status once the Service Perimeter has been removed from long-lasting storage.
       *
       * Create a request for the method "servicePerimeters.delete".
       *
       * This request holds the parameters needed by the accesscontextmanager server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. Resource name for the Service Perimeter.
      Format:
       *        `accessPolicies/{policy_id}/servicePerimeters/{service_perimeter_id}`
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends AccessContextManagerRequest<com.google.api.services.accesscontextmanager.v1.model.Operation> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accessPolicies/[^/]+/servicePerimeters/[^/]+$");

        /**
         * Delete an Service Perimeter by resource name. The longrunning operation from this RPC will have
         * a successful status once the Service Perimeter has been removed from long-lasting storage.
         *
         * Create a request for the method "servicePerimeters.delete".
         *
         * This request holds the parameters needed by the the accesscontextmanager server.  After setting
         * any optional parameters, call the {@link Delete#execute()} method to invoke the remote
         * operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Resource name for the Service Perimeter.
      Format:
       *        `accessPolicies/{policy_id}/servicePerimeters/{service_perimeter_id}`
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(AccessContextManager.this, "DELETE", REST_PATH, null, com.google.api.services.accesscontextmanager.v1.model.Operation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accessPolicies/[^/]+/servicePerimeters/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Resource name for the Service Perimeter.
         *
         * Format: `accessPolicies/{policy_id}/servicePerimeters/{service_perimeter_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Resource name for the Service Perimeter.

       Format: `accessPolicies/{policy_id}/servicePerimeters/{service_perimeter_id}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Resource name for the Service Perimeter.
         *
         * Format: `accessPolicies/{policy_id}/servicePerimeters/{service_perimeter_id}`
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accessPolicies/[^/]+/servicePerimeters/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Get an Service Perimeter by resource name.
       *
       * Create a request for the method "servicePerimeters.get".
       *
       * This request holds the parameters needed by the accesscontextmanager server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. Resource name for the Service Perimeter.
      Format:
       *        `accessPolicies/{policy_id}/servicePerimeters/{service_perimeters_id}`
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends AccessContextManagerRequest<com.google.api.services.accesscontextmanager.v1.model.ServicePerimeter> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accessPolicies/[^/]+/servicePerimeters/[^/]+$");

        /**
         * Get an Service Perimeter by resource name.
         *
         * Create a request for the method "servicePerimeters.get".
         *
         * This request holds the parameters needed by the the accesscontextmanager server.  After setting
         * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         * <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Resource name for the Service Perimeter.
      Format:
       *        `accessPolicies/{policy_id}/servicePerimeters/{service_perimeters_id}`
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(AccessContextManager.this, "GET", REST_PATH, null, com.google.api.services.accesscontextmanager.v1.model.ServicePerimeter.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accessPolicies/[^/]+/servicePerimeters/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Resource name for the Service Perimeter.
         *
         * Format: `accessPolicies/{policy_id}/servicePerimeters/{service_perimeters_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Resource name for the Service Perimeter.

       Format: `accessPolicies/{policy_id}/servicePerimeters/{service_perimeters_id}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Resource name for the Service Perimeter.
         *
         * Format: `accessPolicies/{policy_id}/servicePerimeters/{service_perimeters_id}`
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accessPolicies/[^/]+/servicePerimeters/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * List all Service Perimeters for an access policy.
       *
       * Create a request for the method "servicePerimeters.list".
       *
       * This request holds the parameters needed by the accesscontextmanager server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Resource name for the access policy to list Service Perimeters from.
      Format:
       *        `accessPolicies/{policy_id}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends AccessContextManagerRequest<com.google.api.services.accesscontextmanager.v1.model.ListServicePerimetersResponse> {

        private static final String REST_PATH = "v1/{+parent}/servicePerimeters";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^accessPolicies/[^/]+$");

        /**
         * List all Service Perimeters for an access policy.
         *
         * Create a request for the method "servicePerimeters.list".
         *
         * This request holds the parameters needed by the the accesscontextmanager server.  After setting
         * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         * <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Resource name for the access policy to list Service Perimeters from.
      Format:
       *        `accessPolicies/{policy_id}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(AccessContextManager.this, "GET", REST_PATH, null, com.google.api.services.accesscontextmanager.v1.model.ListServicePerimetersResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accessPolicies/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Resource name for the access policy to list Service Perimeters from.
         *
         * Format: `accessPolicies/{policy_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Resource name for the access policy to list Service Perimeters from.

       Format: `accessPolicies/{policy_id}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Resource name for the access policy to list Service Perimeters from.
         *
         * Format: `accessPolicies/{policy_id}`
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accessPolicies/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Number of Service Perimeters to include in the list. Default 100.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Number of Service Perimeters to include in the list. Default 100.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Number of Service Perimeters to include in the list. Default 100.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Next page token for the next batch of Service Perimeter instances. Defaults to the first
         * page of results.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Next page token for the next batch of Service Perimeter instances. Defaults to the first page of
       results.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Next page token for the next batch of Service Perimeter instances. Defaults to the first
         * page of results.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Update an Service Perimeter. The longrunning operation from this RPC will have a successful
       * status once the changes to the Service Perimeter have propagated to long-lasting storage. Service
       * Perimeter containing errors will result in an error response for the first error encountered.
       *
       * Create a request for the method "servicePerimeters.patch".
       *
       * This request holds the parameters needed by the accesscontextmanager server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Required. Resource name for the ServicePerimeter.  The `short_name`
      component must begin with a
       *        letter and only include alphanumeric and '_'.
      Format:
       *        `accessPolicies/{policy_id}/servicePerimeters/{short_name}`
       * @param content the {@link com.google.api.services.accesscontextmanager.v1.model.ServicePerimeter}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.accesscontextmanager.v1.model.ServicePerimeter content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends AccessContextManagerRequest<com.google.api.services.accesscontextmanager.v1.model.Operation> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accessPolicies/[^/]+/servicePerimeters/[^/]+$");

        /**
         * Update an Service Perimeter. The longrunning operation from this RPC will have a successful
         * status once the changes to the Service Perimeter have propagated to long-lasting storage.
         * Service Perimeter containing errors will result in an error response for the first error
         * encountered.
         *
         * Create a request for the method "servicePerimeters.patch".
         *
         * This request holds the parameters needed by the the accesscontextmanager server.  After setting
         * any optional parameters, call the {@link Patch#execute()} method to invoke the remote
         * operation. <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Resource name for the ServicePerimeter.  The `short_name`
      component must begin with a
       *        letter and only include alphanumeric and '_'.
      Format:
       *        `accessPolicies/{policy_id}/servicePerimeters/{short_name}`
         * @param content the {@link com.google.api.services.accesscontextmanager.v1.model.ServicePerimeter}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.accesscontextmanager.v1.model.ServicePerimeter content) {
          super(AccessContextManager.this, "PATCH", REST_PATH, content, com.google.api.services.accesscontextmanager.v1.model.Operation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accessPolicies/[^/]+/servicePerimeters/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Resource name for the ServicePerimeter.  The `short_name` component must begin
         * with a letter and only include alphanumeric and '_'. Format:
         * `accessPolicies/{policy_id}/servicePerimeters/{short_name}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Resource name for the ServicePerimeter.  The `short_name` component must begin with a
       letter and only include alphanumeric and '_'. Format:
       `accessPolicies/{policy_id}/servicePerimeters/{short_name}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Resource name for the ServicePerimeter.  The `short_name` component must begin
         * with a letter and only include alphanumeric and '_'. Format:
         * `accessPolicies/{policy_id}/servicePerimeters/{short_name}`
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accessPolicies/[^/]+/servicePerimeters/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /** Required. Mask to control which fields get updated. Must be non-empty. */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Required. Mask to control which fields get updated. Must be non-empty.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /** Required. Mask to control which fields get updated. Must be non-empty. */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * An accessor for creating requests from the Operations collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code AccessContextManager accesscontextmanager = new AccessContextManager(...);}
   *   {@code AccessContextManager.Operations.List request = accesscontextmanager.operations().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Operations operations() {
    return new Operations();
  }

  /**
   * The "operations" collection of methods.
   */
  public class Operations {

    /**
     * Starts asynchronous cancellation on a long-running operation.  The server makes a best effort to
     * cancel the operation, but success is not guaranteed.  If the server doesn't support this method,
     * it returns `google.rpc.Code.UNIMPLEMENTED`.  Clients can use Operations.GetOperation or other
     * methods to check whether the cancellation succeeded or whether the operation completed despite
     * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
     * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
     * `Code.CANCELLED`.
     *
     * Create a request for the method "operations.cancel".
     *
     * This request holds the parameters needed by the accesscontextmanager server.  After setting any
     * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
     *
     * @param name The name of the operation resource to be cancelled.
     * @param content the {@link com.google.api.services.accesscontextmanager.v1.model.CancelOperationRequest}
     * @return the request
     */
    public Cancel cancel(java.lang.String name, com.google.api.services.accesscontextmanager.v1.model.CancelOperationRequest content) throws java.io.IOException {
      Cancel result = new Cancel(name, content);
      initialize(result);
      return result;
    }

    public class Cancel extends AccessContextManagerRequest<com.google.api.services.accesscontextmanager.v1.model.Empty> {

      private static final String REST_PATH = "v1/{+name}:cancel";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^operations/.+$");

      /**
       * Starts asynchronous cancellation on a long-running operation.  The server makes a best effort
       * to cancel the operation, but success is not guaranteed.  If the server doesn't support this
       * method, it returns `google.rpc.Code.UNIMPLEMENTED`.  Clients can use Operations.GetOperation or
       * other methods to check whether the cancellation succeeded or whether the operation completed
       * despite cancellation. On successful cancellation, the operation is not deleted; instead, it
       * becomes an operation with an Operation.error value with a google.rpc.Status.code of 1,
       * corresponding to `Code.CANCELLED`.
       *
       * Create a request for the method "operations.cancel".
       *
       * This request holds the parameters needed by the the accesscontextmanager server.  After setting
       * any optional parameters, call the {@link Cancel#execute()} method to invoke the remote
       * operation. <p> {@link
       * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name The name of the operation resource to be cancelled.
       * @param content the {@link com.google.api.services.accesscontextmanager.v1.model.CancelOperationRequest}
       * @since 1.13
       */
      protected Cancel(java.lang.String name, com.google.api.services.accesscontextmanager.v1.model.CancelOperationRequest content) {
        super(AccessContextManager.this, "POST", REST_PATH, content, com.google.api.services.accesscontextmanager.v1.model.Empty.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^operations/.+$");
        }
      }

      @Override
      public Cancel set$Xgafv(java.lang.String $Xgafv) {
        return (Cancel) super.set$Xgafv($Xgafv);
      }

      @Override
      public Cancel setAccessToken(java.lang.String accessToken) {
        return (Cancel) super.setAccessToken(accessToken);
      }

      @Override
      public Cancel setAlt(java.lang.String alt) {
        return (Cancel) super.setAlt(alt);
      }

      @Override
      public Cancel setCallback(java.lang.String callback) {
        return (Cancel) super.setCallback(callback);
      }

      @Override
      public Cancel setFields(java.lang.String fields) {
        return (Cancel) super.setFields(fields);
      }

      @Override
      public Cancel setKey(java.lang.String key) {
        return (Cancel) super.setKey(key);
      }

      @Override
      public Cancel setOauthToken(java.lang.String oauthToken) {
        return (Cancel) super.setOauthToken(oauthToken);
      }

      @Override
      public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Cancel) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Cancel setQuotaUser(java.lang.String quotaUser) {
        return (Cancel) super.setQuotaUser(quotaUser);
      }

      @Override
      public Cancel setUploadType(java.lang.String uploadType) {
        return (Cancel) super.setUploadType(uploadType);
      }

      @Override
      public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
        return (Cancel) super.setUploadProtocol(uploadProtocol);
      }

      /** The name of the operation resource to be cancelled. */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** The name of the operation resource to be cancelled.
       */
      public java.lang.String getName() {
        return name;
      }

      /** The name of the operation resource to be cancelled. */
      public Cancel setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^operations/.+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Cancel set(String parameterName, Object value) {
        return (Cancel) super.set(parameterName, value);
      }
    }
    /**
     * Deletes a long-running operation. This method indicates that the client is no longer interested
     * in the operation result. It does not cancel the operation. If the server doesn't support this
     * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
     *
     * Create a request for the method "operations.delete".
     *
     * This request holds the parameters needed by the accesscontextmanager server.  After setting any
     * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param name The name of the operation resource to be deleted.
     * @return the request
     */
    public Delete delete(java.lang.String name) throws java.io.IOException {
      Delete result = new Delete(name);
      initialize(result);
      return result;
    }

    public class Delete extends AccessContextManagerRequest<com.google.api.services.accesscontextmanager.v1.model.Empty> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^operations/.+$");

      /**
       * Deletes a long-running operation. This method indicates that the client is no longer interested
       * in the operation result. It does not cancel the operation. If the server doesn't support this
       * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
       *
       * Create a request for the method "operations.delete".
       *
       * This request holds the parameters needed by the the accesscontextmanager server.  After setting
       * any optional parameters, call the {@link Delete#execute()} method to invoke the remote
       * operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name The name of the operation resource to be deleted.
       * @since 1.13
       */
      protected Delete(java.lang.String name) {
        super(AccessContextManager.this, "DELETE", REST_PATH, null, com.google.api.services.accesscontextmanager.v1.model.Empty.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^operations/.+$");
        }
      }

      @Override
      public Delete set$Xgafv(java.lang.String $Xgafv) {
        return (Delete) super.set$Xgafv($Xgafv);
      }

      @Override
      public Delete setAccessToken(java.lang.String accessToken) {
        return (Delete) super.setAccessToken(accessToken);
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setCallback(java.lang.String callback) {
        return (Delete) super.setCallback(callback);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUploadType(java.lang.String uploadType) {
        return (Delete) super.setUploadType(uploadType);
      }

      @Override
      public Delete setUploadProtocol(java.lang.String uploadProtocol) {
        return (Delete) super.setUploadProtocol(uploadProtocol);
      }

      /** The name of the operation resource to be deleted. */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** The name of the operation resource to be deleted.
       */
      public java.lang.String getName() {
        return name;
      }

      /** The name of the operation resource to be deleted. */
      public Delete setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^operations/.+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Gets the latest state of a long-running operation.  Clients can use this method to poll the
     * operation result at intervals as recommended by the API service.
     *
     * Create a request for the method "operations.get".
     *
     * This request holds the parameters needed by the accesscontextmanager server.  After setting any
     * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param name The name of the operation resource.
     * @return the request
     */
    public Get get(java.lang.String name) throws java.io.IOException {
      Get result = new Get(name);
      initialize(result);
      return result;
    }

    public class Get extends AccessContextManagerRequest<com.google.api.services.accesscontextmanager.v1.model.Operation> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^operations/.+$");

      /**
       * Gets the latest state of a long-running operation.  Clients can use this method to poll the
       * operation result at intervals as recommended by the API service.
       *
       * Create a request for the method "operations.get".
       *
       * This request holds the parameters needed by the the accesscontextmanager server.  After setting
       * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       * <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name The name of the operation resource.
       * @since 1.13
       */
      protected Get(java.lang.String name) {
        super(AccessContextManager.this, "GET", REST_PATH, null, com.google.api.services.accesscontextmanager.v1.model.Operation.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^operations/.+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /** The name of the operation resource. */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** The name of the operation resource.
       */
      public java.lang.String getName() {
        return name;
      }

      /** The name of the operation resource. */
      public Get setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^operations/.+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Lists operations that match the specified filter in the request. If the server doesn't support
     * this method, it returns `UNIMPLEMENTED`.
     *
     * NOTE: the `name` binding allows API services to override the binding to use different resource
     * name schemes, such as `users/operations`. To override the binding, API services can add a binding
     * such as `"/v1/{name=users}/operations"` to their service configuration. For backwards
     * compatibility, the default name includes the operations collection id, however overriding users
     * must ensure the name binding is the parent resource, without the operations collection id.
     *
     * Create a request for the method "operations.list".
     *
     * This request holds the parameters needed by the accesscontextmanager server.  After setting any
     * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param name The name of the operation's parent resource.
     * @return the request
     */
    public List list(java.lang.String name) throws java.io.IOException {
      List result = new List(name);
      initialize(result);
      return result;
    }

    public class List extends AccessContextManagerRequest<com.google.api.services.accesscontextmanager.v1.model.ListOperationsResponse> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^operations$");

      /**
       * Lists operations that match the specified filter in the request. If the server doesn't support
       * this method, it returns `UNIMPLEMENTED`.
       *
       * NOTE: the `name` binding allows API services to override the binding to use different resource
       * name schemes, such as `users/operations`. To override the binding, API services can add a
       * binding such as `"/v1/{name=users}/operations"` to their service configuration. For backwards
       * compatibility, the default name includes the operations collection id, however overriding users
       * must ensure the name binding is the parent resource, without the operations collection id.
       *
       * Create a request for the method "operations.list".
       *
       * This request holds the parameters needed by the the accesscontextmanager server.  After setting
       * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       * <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name The name of the operation's parent resource.
       * @since 1.13
       */
      protected List(java.lang.String name) {
        super(AccessContextManager.this, "GET", REST_PATH, null, com.google.api.services.accesscontextmanager.v1.model.ListOperationsResponse.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^operations$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /** The name of the operation's parent resource. */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** The name of the operation's parent resource.
       */
      public java.lang.String getName() {
        return name;
      }

      /** The name of the operation's parent resource. */
      public List setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^operations$");
        }
        this.name = name;
        return this;
      }

      /** The standard list filter. */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** The standard list filter.
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /** The standard list filter. */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /** The standard list page size. */
      @com.google.api.client.util.Key
      private java.lang.Integer pageSize;

      /** The standard list page size.
       */
      public java.lang.Integer getPageSize() {
        return pageSize;
      }

      /** The standard list page size. */
      public List setPageSize(java.lang.Integer pageSize) {
        this.pageSize = pageSize;
        return this;
      }

      /** The standard list page token. */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** The standard list page token.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /** The standard list page token. */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link AccessContextManager}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link AccessContextManager}. */
    @Override
    public AccessContextManager build() {
      return new AccessContextManager(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link AccessContextManagerRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setAccessContextManagerRequestInitializer(
        AccessContextManagerRequestInitializer accesscontextmanagerRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(accesscontextmanagerRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
