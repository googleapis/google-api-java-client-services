/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.netapp.v1beta1.model;

/**
 * A NetApp BackupVault.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the NetApp API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class BackupVault extends com.google.api.client.json.GenericJson {

  /**
   * Optional. Region where the backups are stored. Format:
   * `projects/{project_id}/locations/{location}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String backupRegion;

  /**
   * Optional. Type of backup vault to be created. Default is IN_REGION.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String backupVaultType;

  /**
   * Output only. Create time of the backup vault.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Description of the backup vault.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Output only. Name of the Backup vault created in backup region. Format:
   * `projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String destinationBackupVault;

  /**
   * Resource labels to represent user provided metadata.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Identifier. The resource name of the backup vault. Format:
   * `projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. Name of the Backup vault created in source region. Format:
   * `projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String sourceBackupVault;

  /**
   * Output only. Region in which the backup vault is created. Format:
   * `projects/{project_id}/locations/{location}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String sourceRegion;

  /**
   * Output only. The backup vault state.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Optional. Region where the backups are stored. Format:
   * `projects/{project_id}/locations/{location}`
   * @return value or {@code null} for none
   */
  public java.lang.String getBackupRegion() {
    return backupRegion;
  }

  /**
   * Optional. Region where the backups are stored. Format:
   * `projects/{project_id}/locations/{location}`
   * @param backupRegion backupRegion or {@code null} for none
   */
  public BackupVault setBackupRegion(java.lang.String backupRegion) {
    this.backupRegion = backupRegion;
    return this;
  }

  /**
   * Optional. Type of backup vault to be created. Default is IN_REGION.
   * @return value or {@code null} for none
   */
  public java.lang.String getBackupVaultType() {
    return backupVaultType;
  }

  /**
   * Optional. Type of backup vault to be created. Default is IN_REGION.
   * @param backupVaultType backupVaultType or {@code null} for none
   */
  public BackupVault setBackupVaultType(java.lang.String backupVaultType) {
    this.backupVaultType = backupVaultType;
    return this;
  }

  /**
   * Output only. Create time of the backup vault.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. Create time of the backup vault.
   * @param createTime createTime or {@code null} for none
   */
  public BackupVault setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Description of the backup vault.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Description of the backup vault.
   * @param description description or {@code null} for none
   */
  public BackupVault setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Output only. Name of the Backup vault created in backup region. Format:
   * `projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}`
   * @return value or {@code null} for none
   */
  public java.lang.String getDestinationBackupVault() {
    return destinationBackupVault;
  }

  /**
   * Output only. Name of the Backup vault created in backup region. Format:
   * `projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}`
   * @param destinationBackupVault destinationBackupVault or {@code null} for none
   */
  public BackupVault setDestinationBackupVault(java.lang.String destinationBackupVault) {
    this.destinationBackupVault = destinationBackupVault;
    return this;
  }

  /**
   * Resource labels to represent user provided metadata.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Resource labels to represent user provided metadata.
   * @param labels labels or {@code null} for none
   */
  public BackupVault setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Identifier. The resource name of the backup vault. Format:
   * `projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}`.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Identifier. The resource name of the backup vault. Format:
   * `projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}`.
   * @param name name or {@code null} for none
   */
  public BackupVault setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. Name of the Backup vault created in source region. Format:
   * `projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}`
   * @return value or {@code null} for none
   */
  public java.lang.String getSourceBackupVault() {
    return sourceBackupVault;
  }

  /**
   * Output only. Name of the Backup vault created in source region. Format:
   * `projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}`
   * @param sourceBackupVault sourceBackupVault or {@code null} for none
   */
  public BackupVault setSourceBackupVault(java.lang.String sourceBackupVault) {
    this.sourceBackupVault = sourceBackupVault;
    return this;
  }

  /**
   * Output only. Region in which the backup vault is created. Format:
   * `projects/{project_id}/locations/{location}`
   * @return value or {@code null} for none
   */
  public java.lang.String getSourceRegion() {
    return sourceRegion;
  }

  /**
   * Output only. Region in which the backup vault is created. Format:
   * `projects/{project_id}/locations/{location}`
   * @param sourceRegion sourceRegion or {@code null} for none
   */
  public BackupVault setSourceRegion(java.lang.String sourceRegion) {
    this.sourceRegion = sourceRegion;
    return this;
  }

  /**
   * Output only. The backup vault state.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. The backup vault state.
   * @param state state or {@code null} for none
   */
  public BackupVault setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  @Override
  public BackupVault set(String fieldName, Object value) {
    return (BackupVault) super.set(fieldName, value);
  }

  @Override
  public BackupVault clone() {
    return (BackupVault) super.clone();
  }

}
