/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.displayvideo.v3.model;

/**
 * Settings that control what third-party vendors are measuring specific line item metrics.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Display & Video 360 API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ThirdPartyMeasurementConfigs extends com.google.api.client.json.GenericJson {

  /**
   * Optional. The third-party vendors measuring brand lift. The following third-party vendors are
   * applicable: * `THIRD_PARTY_VENDOR_DYNATA` * `THIRD_PARTY_VENDOR_KANTAR`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<ThirdPartyVendorConfig> brandLiftVendorConfigs;

  /**
   * Optional. The third-party vendors measuring brand safety. The following third-party vendors are
   * applicable: * `THIRD_PARTY_VENDOR_ZERF` * `THIRD_PARTY_VENDOR_DOUBLE_VERIFY` *
   * `THIRD_PARTY_VENDOR_INTEGRAL_AD_SCIENCE`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<ThirdPartyVendorConfig> brandSafetyVendorConfigs;

  /**
   * Optional. The third-party vendors measuring reach. The following third-party vendors are
   * applicable: * `THIRD_PARTY_VENDOR_NIELSEN` * `THIRD_PARTY_VENDOR_COMSCORE` *
   * `THIRD_PARTY_VENDOR_KANTAR`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<ThirdPartyVendorConfig> reachVendorConfigs;

  /**
   * Optional. The third-party vendors measuring viewability. The following third-party vendors are
   * applicable: * `THIRD_PARTY_VENDOR_MOAT` * `THIRD_PARTY_VENDOR_DOUBLE_VERIFY` *
   * `THIRD_PARTY_VENDOR_INTEGRAL_AD_SCIENCE` * `THIRD_PARTY_VENDOR_COMSCORE` *
   * `THIRD_PARTY_VENDOR_TELEMETRY` * `THIRD_PARTY_VENDOR_MEETRICS`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<ThirdPartyVendorConfig> viewabilityVendorConfigs;

  /**
   * Optional. The third-party vendors measuring brand lift. The following third-party vendors are
   * applicable: * `THIRD_PARTY_VENDOR_DYNATA` * `THIRD_PARTY_VENDOR_KANTAR`
   * @return value or {@code null} for none
   */
  public java.util.List<ThirdPartyVendorConfig> getBrandLiftVendorConfigs() {
    return brandLiftVendorConfigs;
  }

  /**
   * Optional. The third-party vendors measuring brand lift. The following third-party vendors are
   * applicable: * `THIRD_PARTY_VENDOR_DYNATA` * `THIRD_PARTY_VENDOR_KANTAR`
   * @param brandLiftVendorConfigs brandLiftVendorConfigs or {@code null} for none
   */
  public ThirdPartyMeasurementConfigs setBrandLiftVendorConfigs(java.util.List<ThirdPartyVendorConfig> brandLiftVendorConfigs) {
    this.brandLiftVendorConfigs = brandLiftVendorConfigs;
    return this;
  }

  /**
   * Optional. The third-party vendors measuring brand safety. The following third-party vendors are
   * applicable: * `THIRD_PARTY_VENDOR_ZERF` * `THIRD_PARTY_VENDOR_DOUBLE_VERIFY` *
   * `THIRD_PARTY_VENDOR_INTEGRAL_AD_SCIENCE`
   * @return value or {@code null} for none
   */
  public java.util.List<ThirdPartyVendorConfig> getBrandSafetyVendorConfigs() {
    return brandSafetyVendorConfigs;
  }

  /**
   * Optional. The third-party vendors measuring brand safety. The following third-party vendors are
   * applicable: * `THIRD_PARTY_VENDOR_ZERF` * `THIRD_PARTY_VENDOR_DOUBLE_VERIFY` *
   * `THIRD_PARTY_VENDOR_INTEGRAL_AD_SCIENCE`
   * @param brandSafetyVendorConfigs brandSafetyVendorConfigs or {@code null} for none
   */
  public ThirdPartyMeasurementConfigs setBrandSafetyVendorConfigs(java.util.List<ThirdPartyVendorConfig> brandSafetyVendorConfigs) {
    this.brandSafetyVendorConfigs = brandSafetyVendorConfigs;
    return this;
  }

  /**
   * Optional. The third-party vendors measuring reach. The following third-party vendors are
   * applicable: * `THIRD_PARTY_VENDOR_NIELSEN` * `THIRD_PARTY_VENDOR_COMSCORE` *
   * `THIRD_PARTY_VENDOR_KANTAR`
   * @return value or {@code null} for none
   */
  public java.util.List<ThirdPartyVendorConfig> getReachVendorConfigs() {
    return reachVendorConfigs;
  }

  /**
   * Optional. The third-party vendors measuring reach. The following third-party vendors are
   * applicable: * `THIRD_PARTY_VENDOR_NIELSEN` * `THIRD_PARTY_VENDOR_COMSCORE` *
   * `THIRD_PARTY_VENDOR_KANTAR`
   * @param reachVendorConfigs reachVendorConfigs or {@code null} for none
   */
  public ThirdPartyMeasurementConfigs setReachVendorConfigs(java.util.List<ThirdPartyVendorConfig> reachVendorConfigs) {
    this.reachVendorConfigs = reachVendorConfigs;
    return this;
  }

  /**
   * Optional. The third-party vendors measuring viewability. The following third-party vendors are
   * applicable: * `THIRD_PARTY_VENDOR_MOAT` * `THIRD_PARTY_VENDOR_DOUBLE_VERIFY` *
   * `THIRD_PARTY_VENDOR_INTEGRAL_AD_SCIENCE` * `THIRD_PARTY_VENDOR_COMSCORE` *
   * `THIRD_PARTY_VENDOR_TELEMETRY` * `THIRD_PARTY_VENDOR_MEETRICS`
   * @return value or {@code null} for none
   */
  public java.util.List<ThirdPartyVendorConfig> getViewabilityVendorConfigs() {
    return viewabilityVendorConfigs;
  }

  /**
   * Optional. The third-party vendors measuring viewability. The following third-party vendors are
   * applicable: * `THIRD_PARTY_VENDOR_MOAT` * `THIRD_PARTY_VENDOR_DOUBLE_VERIFY` *
   * `THIRD_PARTY_VENDOR_INTEGRAL_AD_SCIENCE` * `THIRD_PARTY_VENDOR_COMSCORE` *
   * `THIRD_PARTY_VENDOR_TELEMETRY` * `THIRD_PARTY_VENDOR_MEETRICS`
   * @param viewabilityVendorConfigs viewabilityVendorConfigs or {@code null} for none
   */
  public ThirdPartyMeasurementConfigs setViewabilityVendorConfigs(java.util.List<ThirdPartyVendorConfig> viewabilityVendorConfigs) {
    this.viewabilityVendorConfigs = viewabilityVendorConfigs;
    return this;
  }

  @Override
  public ThirdPartyMeasurementConfigs set(String fieldName, Object value) {
    return (ThirdPartyMeasurementConfigs) super.set(fieldName, value);
  }

  @Override
  public ThirdPartyMeasurementConfigs clone() {
    return (ThirdPartyMeasurementConfigs) super.clone();
  }

}
