{
  "canonicalName": "Shopping Content",
  "resources": {
    "shippingsettings": {
      "methods": {
        "custombatch": {
          "httpMethod": "POST",
          "parameters": {
            "dryRun": {
              "type": "boolean",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "location": "query"
            }
          },
          "flatPath": "content/v2/shippingsettings/batch",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [],
          "description": "Retrieves and updates the shipping settings of multiple accounts in a single request.",
          "response": {
            "$ref": "ShippingsettingsCustomBatchResponse"
          },
          "id": "content.shippingsettings.custombatch",
          "request": {
            "$ref": "ShippingsettingsCustomBatchRequest"
          },
          "path": "content/v2/shippingsettings/batch"
        },
        "list": {
          "parameters": {
            "merchantId": {
              "description": "The ID of the managing account. This must be a multi-client account.",
              "required": true,
              "format": "uint64",
              "type": "string",
              "location": "path"
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "The token returned by the previous request."
            },
            "maxResults": {
              "type": "integer",
              "description": "The maximum number of shipping settings to return in the response, used for paging.",
              "format": "uint32",
              "location": "query"
            }
          },
          "flatPath": "content/v2/{merchantId}/shippingsettings",
          "response": {
            "$ref": "ShippingsettingsListResponse"
          },
          "path": "content/v2/{merchantId}/shippingsettings",
          "description": "Lists the shipping settings of the sub-accounts in your Merchant Center account.",
          "id": "content.shippingsettings.list",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId"
          ],
          "httpMethod": "GET"
        },
        "get": {
          "httpMethod": "GET",
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "id": "content.shippingsettings.get",
          "path": "content/v2/{merchantId}/shippingsettings/{accountId}",
          "response": {
            "$ref": "ShippingSettings"
          },
          "parameters": {
            "accountId": {
              "description": "The ID of the account for which to get/update shipping settings.",
              "required": true,
              "format": "uint64",
              "type": "string",
              "location": "path"
            },
            "merchantId": {
              "required": true,
              "location": "path",
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "type": "string",
              "format": "uint64"
            }
          },
          "description": "Retrieves the shipping settings of the account.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "content/v2/{merchantId}/shippingsettings/{accountId}"
        },
        "getsupportedholidays": {
          "parameterOrder": [
            "merchantId"
          ],
          "description": "Retrieves supported holidays for an account.",
          "response": {
            "$ref": "ShippingsettingsGetSupportedHolidaysResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "GET",
          "flatPath": "content/v2/{merchantId}/supportedHolidays",
          "id": "content.shippingsettings.getsupportedholidays",
          "parameters": {
            "merchantId": {
              "description": "The ID of the account for which to retrieve the supported holidays.",
              "type": "string",
              "required": true,
              "location": "path",
              "format": "uint64"
            }
          },
          "path": "content/v2/{merchantId}/supportedHolidays"
        },
        "getsupportedcarriers": {
          "flatPath": "content/v2/{merchantId}/supportedCarriers",
          "path": "content/v2/{merchantId}/supportedCarriers",
          "parameters": {
            "merchantId": {
              "required": true,
              "location": "path",
              "description": "The ID of the account for which to retrieve the supported carriers.",
              "format": "uint64",
              "type": "string"
            }
          },
          "description": "Retrieves supported carriers and carrier services for an account.",
          "id": "content.shippingsettings.getsupportedcarriers",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "ShippingsettingsGetSupportedCarriersResponse"
          },
          "httpMethod": "GET",
          "parameterOrder": [
            "merchantId"
          ]
        },
        "update": {
          "path": "content/v2/{merchantId}/shippingsettings/{accountId}",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "parameters": {
            "accountId": {
              "description": "The ID of the account for which to get/update shipping settings.",
              "location": "path",
              "required": true,
              "type": "string",
              "format": "uint64"
            },
            "dryRun": {
              "location": "query",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "type": "boolean"
            },
            "merchantId": {
              "format": "uint64",
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "location": "path",
              "type": "string",
              "required": true
            }
          },
          "request": {
            "$ref": "ShippingSettings"
          },
          "response": {
            "$ref": "ShippingSettings"
          },
          "httpMethod": "PUT",
          "flatPath": "content/v2/{merchantId}/shippingsettings/{accountId}",
          "id": "content.shippingsettings.update",
          "description": "Updates the shipping settings of the account. Any fields that are not provided are deleted from the resource."
        },
        "getsupportedpickupservices": {
          "response": {
            "$ref": "ShippingsettingsGetSupportedPickupServicesResponse"
          },
          "path": "content/v2/{merchantId}/supportedPickupServices",
          "id": "content.shippingsettings.getsupportedpickupservices",
          "parameterOrder": [
            "merchantId"
          ],
          "description": "Retrieves supported pickup services for an account.",
          "parameters": {
            "merchantId": {
              "required": true,
              "description": "The ID of the account for which to retrieve the supported pickup services.",
              "format": "uint64",
              "type": "string",
              "location": "path"
            }
          },
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "content/v2/{merchantId}/supportedPickupServices"
        }
      }
    },
    "products": {
      "methods": {
        "custombatch": {
          "parameterOrder": [],
          "path": "content/v2/products/batch",
          "response": {
            "$ref": "ProductsCustomBatchResponse"
          },
          "request": {
            "$ref": "ProductsCustomBatchRequest"
          },
          "parameters": {
            "dryRun": {
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "type": "boolean",
              "location": "query"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Retrieves, inserts, and deletes multiple products in a single request.",
          "flatPath": "content/v2/products/batch",
          "httpMethod": "POST",
          "id": "content.products.custombatch"
        },
        "insert": {
          "path": "content/v2/{merchantId}/products",
          "parameters": {
            "dryRun": {
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "type": "boolean",
              "location": "query"
            },
            "merchantId": {
              "location": "path",
              "format": "uint64",
              "required": true,
              "description": "The ID of the account that contains the product. This account cannot be a multi-client account.",
              "type": "string"
            }
          },
          "request": {
            "$ref": "Product"
          },
          "flatPath": "content/v2/{merchantId}/products",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "POST",
          "parameterOrder": [
            "merchantId"
          ],
          "description": "Uploads a product to your Merchant Center account. If an item with the same channel, contentLanguage, offerId, and targetCountry already exists, this method updates that entry.",
          "id": "content.products.insert",
          "response": {
            "$ref": "Product"
          }
        },
        "list": {
          "parameterOrder": [
            "merchantId"
          ],
          "parameters": {
            "includeInvalidInsertedItems": {
              "location": "query",
              "type": "boolean",
              "description": "Flag to include the invalid inserted items in the result of the list request. By default the invalid items are not shown (the default value is false)."
            },
            "merchantId": {
              "required": true,
              "format": "uint64",
              "type": "string",
              "description": "The ID of the account that contains the products. This account cannot be a multi-client account.",
              "location": "path"
            },
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "The token returned by the previous request."
            },
            "maxResults": {
              "description": "The maximum number of products to return in the response, used for paging.",
              "location": "query",
              "type": "integer",
              "format": "uint32"
            }
          },
          "response": {
            "$ref": "ProductsListResponse"
          },
          "id": "content.products.list",
          "flatPath": "content/v2/{merchantId}/products",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "content/v2/{merchantId}/products",
          "description": "Lists the products in your Merchant Center account. The response might contain fewer items than specified by maxResults. Rely on nextPageToken to determine if there are more items to be requested.",
          "httpMethod": "GET"
        },
        "delete": {
          "flatPath": "content/v2/{merchantId}/products/{productId}",
          "path": "content/v2/{merchantId}/products/{productId}",
          "parameters": {
            "productId": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "The REST ID of the product."
            },
            "merchantId": {
              "format": "uint64",
              "description": "The ID of the account that contains the product. This account cannot be a multi-client account.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "dryRun": {
              "type": "boolean",
              "location": "query",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any)."
            }
          },
          "id": "content.products.delete",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "DELETE",
          "parameterOrder": [
            "merchantId",
            "productId"
          ],
          "description": "Deletes a product from your Merchant Center account."
        },
        "get": {
          "response": {
            "$ref": "Product"
          },
          "description": "Retrieves a product from your Merchant Center account.",
          "parameterOrder": [
            "merchantId",
            "productId"
          ],
          "path": "content/v2/{merchantId}/products/{productId}",
          "parameters": {
            "productId": {
              "description": "The REST ID of the product.",
              "required": true,
              "location": "path",
              "type": "string"
            },
            "merchantId": {
              "type": "string",
              "required": true,
              "description": "The ID of the account that contains the product. This account cannot be a multi-client account.",
              "location": "path",
              "format": "uint64"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.products.get",
          "flatPath": "content/v2/{merchantId}/products/{productId}",
          "httpMethod": "GET"
        }
      }
    },
    "liasettings": {
      "methods": {
        "getaccessiblegmbaccounts": {
          "id": "content.liasettings.getaccessiblegmbaccounts",
          "path": "content/v2/{merchantId}/liasettings/{accountId}/accessiblegmbaccounts",
          "parameters": {
            "merchantId": {
              "required": true,
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "location": "path",
              "format": "uint64",
              "type": "string"
            },
            "accountId": {
              "type": "string",
              "format": "uint64",
              "required": true,
              "description": "The ID of the account for which to retrieve accessible Google My Business accounts.",
              "location": "path"
            }
          },
          "response": {
            "$ref": "LiasettingsGetAccessibleGmbAccountsResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Retrieves the list of accessible Google My Business accounts.",
          "httpMethod": "GET",
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "flatPath": "content/v2/{merchantId}/liasettings/{accountId}/accessiblegmbaccounts"
        },
        "get": {
          "parameters": {
            "merchantId": {
              "format": "uint64",
              "required": true,
              "type": "string",
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "location": "path"
            },
            "accountId": {
              "location": "path",
              "required": true,
              "type": "string",
              "format": "uint64",
              "description": "The ID of the account for which to get or update LIA settings."
            }
          },
          "path": "content/v2/{merchantId}/liasettings/{accountId}",
          "flatPath": "content/v2/{merchantId}/liasettings/{accountId}",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "LiaSettings"
          },
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "description": "Retrieves the LIA settings of the account.",
          "id": "content.liasettings.get",
          "httpMethod": "GET"
        },
        "setinventoryverificationcontact": {
          "path": "content/v2/{merchantId}/liasettings/{accountId}/setinventoryverificationcontact",
          "id": "content.liasettings.setinventoryverificationcontact",
          "parameterOrder": [
            "merchantId",
            "accountId",
            "country",
            "language",
            "contactName",
            "contactEmail"
          ],
          "httpMethod": "POST",
          "flatPath": "content/v2/{merchantId}/liasettings/{accountId}/setinventoryverificationcontact",
          "description": "Sets the inventory verification contract for the specified country.",
          "parameters": {
            "merchantId": {
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "format": "uint64",
              "location": "path",
              "type": "string",
              "required": true
            },
            "contactEmail": {
              "description": "The email of the inventory verification contact.",
              "required": true,
              "location": "query",
              "type": "string"
            },
            "accountId": {
              "type": "string",
              "format": "uint64",
              "required": true,
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "location": "path"
            },
            "language": {
              "description": "The language for which inventory verification is requested.",
              "required": true,
              "location": "query",
              "type": "string"
            },
            "country": {
              "required": true,
              "description": "The country for which inventory verification is requested.",
              "location": "query",
              "type": "string"
            },
            "contactName": {
              "location": "query",
              "required": true,
              "type": "string",
              "description": "The name of the inventory verification contact."
            }
          },
          "response": {
            "$ref": "LiasettingsSetInventoryVerificationContactResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "requestgmbaccess": {
          "flatPath": "content/v2/{merchantId}/liasettings/{accountId}/requestgmbaccess",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "content/v2/{merchantId}/liasettings/{accountId}/requestgmbaccess",
          "parameterOrder": [
            "merchantId",
            "accountId",
            "gmbEmail"
          ],
          "parameters": {
            "gmbEmail": {
              "required": true,
              "location": "query",
              "type": "string",
              "description": "The email of the Google My Business account."
            },
            "accountId": {
              "format": "uint64",
              "location": "path",
              "description": "The ID of the account for which GMB access is requested.",
              "type": "string",
              "required": true
            },
            "merchantId": {
              "type": "string",
              "location": "path",
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "format": "uint64",
              "required": true
            }
          },
          "description": "Requests access to a specified Google My Business account.",
          "response": {
            "$ref": "LiasettingsRequestGmbAccessResponse"
          },
          "id": "content.liasettings.requestgmbaccess"
        },
        "list": {
          "response": {
            "$ref": "LiasettingsListResponse"
          },
          "id": "content.liasettings.list",
          "description": "Lists the LIA settings of the sub-accounts in your Merchant Center account.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "maxResults": {
              "location": "query",
              "type": "integer",
              "description": "The maximum number of LIA settings to return in the response, used for paging.",
              "format": "uint32"
            },
            "merchantId": {
              "required": true,
              "format": "uint64",
              "location": "path",
              "type": "string",
              "description": "The ID of the managing account. This must be a multi-client account."
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "The token returned by the previous request."
            }
          },
          "parameterOrder": [
            "merchantId"
          ],
          "path": "content/v2/{merchantId}/liasettings",
          "flatPath": "content/v2/{merchantId}/liasettings",
          "httpMethod": "GET"
        },
        "setposdataprovider": {
          "parameters": {
            "merchantId": {
              "format": "uint64",
              "required": true,
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "location": "path",
              "type": "string"
            },
            "country": {
              "required": true,
              "location": "query",
              "description": "The country for which the POS data provider is selected.",
              "type": "string"
            },
            "posDataProviderId": {
              "format": "uint64",
              "description": "The ID of POS data provider.",
              "type": "string",
              "location": "query"
            },
            "accountId": {
              "description": "The ID of the account for which to retrieve accessible Google My Business accounts.",
              "location": "path",
              "format": "uint64",
              "required": true,
              "type": "string"
            },
            "posExternalAccountId": {
              "location": "query",
              "description": "The account ID by which this merchant is known to the POS data provider.",
              "type": "string"
            }
          },
          "id": "content.liasettings.setposdataprovider",
          "description": "Sets the POS data provider for the specified country.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "LiasettingsSetPosDataProviderResponse"
          },
          "path": "content/v2/{merchantId}/liasettings/{accountId}/setposdataprovider",
          "parameterOrder": [
            "merchantId",
            "accountId",
            "country"
          ],
          "flatPath": "content/v2/{merchantId}/liasettings/{accountId}/setposdataprovider",
          "httpMethod": "POST"
        },
        "update": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "content/v2/{merchantId}/liasettings/{accountId}",
          "id": "content.liasettings.update",
          "description": "Updates the LIA settings of the account. Any fields that are not provided are deleted from the resource.",
          "response": {
            "$ref": "LiaSettings"
          },
          "httpMethod": "PUT",
          "request": {
            "$ref": "LiaSettings"
          },
          "parameters": {
            "dryRun": {
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "type": "boolean",
              "location": "query"
            },
            "accountId": {
              "format": "uint64",
              "type": "string",
              "location": "path",
              "required": true,
              "description": "The ID of the account for which to get or update LIA settings."
            },
            "merchantId": {
              "location": "path",
              "format": "uint64",
              "required": true,
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "type": "string"
            }
          },
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "path": "content/v2/{merchantId}/liasettings/{accountId}"
        },
        "listposdataproviders": {
          "parameterOrder": [],
          "path": "content/v2/liasettings/posdataproviders",
          "parameters": {},
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "content/v2/liasettings/posdataproviders",
          "httpMethod": "GET",
          "description": "Retrieves the list of POS data providers that have active settings for the all eiligible countries.",
          "response": {
            "$ref": "LiasettingsListPosDataProvidersResponse"
          },
          "id": "content.liasettings.listposdataproviders"
        },
        "custombatch": {
          "httpMethod": "POST",
          "description": "Retrieves and/or updates the LIA settings of multiple accounts in a single request.",
          "path": "content/v2/liasettings/batch",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "dryRun": {
              "type": "boolean",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "location": "query"
            }
          },
          "response": {
            "$ref": "LiasettingsCustomBatchResponse"
          },
          "id": "content.liasettings.custombatch",
          "request": {
            "$ref": "LiasettingsCustomBatchRequest"
          },
          "flatPath": "content/v2/liasettings/batch",
          "parameterOrder": []
        },
        "requestinventoryverification": {
          "id": "content.liasettings.requestinventoryverification",
          "httpMethod": "POST",
          "path": "content/v2/{merchantId}/liasettings/{accountId}/requestinventoryverification/{country}",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "merchantId": {
              "type": "string",
              "required": true,
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "location": "path",
              "format": "uint64"
            },
            "accountId": {
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "type": "string",
              "format": "uint64",
              "required": true,
              "location": "path"
            },
            "country": {
              "location": "path",
              "required": true,
              "description": "The country for which inventory validation is requested.",
              "type": "string"
            }
          },
          "description": "Requests inventory validation for the specified country.",
          "flatPath": "content/v2/{merchantId}/liasettings/{accountId}/requestinventoryverification/{country}",
          "parameterOrder": [
            "merchantId",
            "accountId",
            "country"
          ],
          "response": {
            "$ref": "LiasettingsRequestInventoryVerificationResponse"
          }
        }
      }
    },
    "productstatuses": {
      "methods": {
        "list": {
          "httpMethod": "GET",
          "response": {
            "$ref": "ProductstatusesListResponse"
          },
          "flatPath": "content/v2/{merchantId}/productstatuses",
          "id": "content.productstatuses.list",
          "parameters": {
            "destinations": {
              "type": "string",
              "location": "query",
              "repeated": true,
              "description": "If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination."
            },
            "merchantId": {
              "required": true,
              "type": "string",
              "description": "The ID of the account that contains the products. This account cannot be a multi-client account.",
              "location": "path",
              "format": "uint64"
            },
            "maxResults": {
              "location": "query",
              "description": "The maximum number of product statuses to return in the response, used for paging.",
              "format": "uint32",
              "type": "integer"
            },
            "pageToken": {
              "description": "The token returned by the previous request.",
              "type": "string",
              "location": "query"
            },
            "includeInvalidInsertedItems": {
              "type": "boolean",
              "location": "query",
              "description": "Flag to include the invalid inserted items in the result of the list request. By default the invalid items are not shown (the default value is false)."
            },
            "includeAttributes": {
              "location": "query",
              "type": "boolean",
              "description": "Flag to include full product data in the results of the list request. The default value is false."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "content/v2/{merchantId}/productstatuses",
          "description": "Lists the statuses of the products in your Merchant Center account.",
          "parameterOrder": [
            "merchantId"
          ]
        },
        "get": {
          "description": "Gets the status of a product from your Merchant Center account.",
          "path": "content/v2/{merchantId}/productstatuses/{productId}",
          "httpMethod": "GET",
          "parameters": {
            "destinations": {
              "repeated": true,
              "description": "If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.",
              "location": "query",
              "type": "string"
            },
            "includeAttributes": {
              "type": "boolean",
              "description": "Flag to include full product data in the result of this get request. The default value is false.",
              "location": "query"
            },
            "productId": {
              "type": "string",
              "description": "The REST ID of the product.",
              "required": true,
              "location": "path"
            },
            "merchantId": {
              "format": "uint64",
              "required": true,
              "type": "string",
              "description": "The ID of the account that contains the product. This account cannot be a multi-client account.",
              "location": "path"
            }
          },
          "flatPath": "content/v2/{merchantId}/productstatuses/{productId}",
          "parameterOrder": [
            "merchantId",
            "productId"
          ],
          "id": "content.productstatuses.get",
          "response": {
            "$ref": "ProductStatus"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "custombatch": {
          "httpMethod": "POST",
          "id": "content.productstatuses.custombatch",
          "response": {
            "$ref": "ProductstatusesCustomBatchResponse"
          },
          "parameterOrder": [],
          "flatPath": "content/v2/productstatuses/batch",
          "path": "content/v2/productstatuses/batch",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Gets the statuses of multiple products in a single request.",
          "request": {
            "$ref": "ProductstatusesCustomBatchRequest"
          },
          "parameters": {
            "includeAttributes": {
              "description": "Flag to include full product data in the results of this request. The default value is false.",
              "location": "query",
              "type": "boolean"
            }
          }
        }
      }
    },
    "accounttax": {
      "methods": {
        "update": {
          "id": "content.accounttax.update",
          "request": {
            "$ref": "AccountTax"
          },
          "httpMethod": "PUT",
          "flatPath": "content/v2/{merchantId}/accounttax/{accountId}",
          "response": {
            "$ref": "AccountTax"
          },
          "description": "Updates the tax settings of the account. Any fields that are not provided are deleted from the resource.",
          "parameters": {
            "dryRun": {
              "location": "query",
              "type": "boolean",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any)."
            },
            "merchantId": {
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "format": "uint64",
              "required": true,
              "type": "string",
              "location": "path"
            },
            "accountId": {
              "format": "uint64",
              "location": "path",
              "description": "The ID of the account for which to get/update account tax settings.",
              "required": true,
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "content/v2/{merchantId}/accounttax/{accountId}",
          "parameterOrder": [
            "merchantId",
            "accountId"
          ]
        },
        "list": {
          "parameters": {
            "merchantId": {
              "location": "path",
              "type": "string",
              "description": "The ID of the managing account. This must be a multi-client account.",
              "required": true,
              "format": "uint64"
            },
            "pageToken": {
              "description": "The token returned by the previous request.",
              "location": "query",
              "type": "string"
            },
            "maxResults": {
              "format": "uint32",
              "location": "query",
              "type": "integer",
              "description": "The maximum number of tax settings to return in the response, used for paging."
            }
          },
          "response": {
            "$ref": "AccounttaxListResponse"
          },
          "description": "Lists the tax settings of the sub-accounts in your Merchant Center account.",
          "httpMethod": "GET",
          "id": "content.accounttax.list",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "content/v2/{merchantId}/accounttax",
          "flatPath": "content/v2/{merchantId}/accounttax",
          "parameterOrder": [
            "merchantId"
          ]
        },
        "get": {
          "path": "content/v2/{merchantId}/accounttax/{accountId}",
          "parameters": {
            "accountId": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "The ID of the account for which to get/update account tax settings.",
              "format": "uint64"
            },
            "merchantId": {
              "required": true,
              "format": "uint64",
              "type": "string",
              "location": "path",
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "description": "Retrieves the tax settings of the account.",
          "response": {
            "$ref": "AccountTax"
          },
          "id": "content.accounttax.get",
          "httpMethod": "GET",
          "flatPath": "content/v2/{merchantId}/accounttax/{accountId}"
        },
        "custombatch": {
          "description": "Retrieves and updates tax settings of multiple accounts in a single request.",
          "id": "content.accounttax.custombatch",
          "flatPath": "content/v2/accounttax/batch",
          "path": "content/v2/accounttax/batch",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "POST",
          "parameterOrder": [],
          "response": {
            "$ref": "AccounttaxCustomBatchResponse"
          },
          "request": {
            "$ref": "AccounttaxCustomBatchRequest"
          },
          "parameters": {
            "dryRun": {
              "type": "boolean",
              "location": "query",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any)."
            }
          }
        }
      }
    },
    "orderinvoices": {
      "methods": {
        "createrefundinvoice": {
          "httpMethod": "POST",
          "description": "Creates a refund invoice for one or more shipment groups, and triggers a refund for orderinvoice enabled orders. This can only be used for line items that have previously been charged using `createChargeInvoice`. All amounts (except for the summary) are incremental with respect to the previous invoice.",
          "id": "content.orderinvoices.createrefundinvoice",
          "flatPath": "content/v2/{merchantId}/orderinvoices/{orderId}/createRefundInvoice",
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "response": {
            "$ref": "OrderinvoicesCreateRefundInvoiceResponse"
          },
          "request": {
            "$ref": "OrderinvoicesCreateRefundInvoiceRequest"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "content/v2/{merchantId}/orderinvoices/{orderId}/createRefundInvoice",
          "parameters": {
            "orderId": {
              "required": true,
              "description": "The ID of the order.",
              "type": "string",
              "location": "path"
            },
            "merchantId": {
              "type": "string",
              "format": "uint64",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "required": true,
              "location": "path"
            }
          }
        },
        "createchargeinvoice": {
          "path": "content/v2/{merchantId}/orderinvoices/{orderId}/createChargeInvoice",
          "response": {
            "$ref": "OrderinvoicesCreateChargeInvoiceResponse"
          },
          "description": "Creates a charge invoice for a shipment group, and triggers a charge capture for orderinvoice enabled orders.",
          "parameters": {
            "merchantId": {
              "format": "uint64",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "required": true,
              "type": "string",
              "location": "path"
            },
            "orderId": {
              "location": "path",
              "description": "The ID of the order.",
              "required": true,
              "type": "string"
            }
          },
          "id": "content.orderinvoices.createchargeinvoice",
          "httpMethod": "POST",
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "content/v2/{merchantId}/orderinvoices/{orderId}/createChargeInvoice",
          "request": {
            "$ref": "OrderinvoicesCreateChargeInvoiceRequest"
          }
        }
      }
    },
    "orderreports": {
      "methods": {
        "listdisbursements": {
          "path": "content/v2/{merchantId}/orderreports/disbursements",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "OrderreportsListDisbursementsResponse"
          },
          "parameters": {
            "maxResults": {
              "type": "integer",
              "format": "uint32",
              "description": "The maximum number of disbursements to return in the response, used for paging.",
              "location": "query"
            },
            "disbursementEndDate": {
              "type": "string",
              "location": "query",
              "description": "The last date which disbursements occurred. In ISO 8601 format. Default: current date."
            },
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "The token returned by the previous request."
            },
            "merchantId": {
              "required": true,
              "format": "uint64",
              "location": "path",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "type": "string"
            },
            "disbursementStartDate": {
              "type": "string",
              "description": "The first date which disbursements occurred. In ISO 8601 format.",
              "location": "query"
            }
          },
          "description": "Retrieves a report for disbursements from your Merchant Center account.",
          "id": "content.orderreports.listdisbursements",
          "httpMethod": "GET",
          "flatPath": "content/v2/{merchantId}/orderreports/disbursements",
          "parameterOrder": [
            "merchantId"
          ]
        },
        "listtransactions": {
          "response": {
            "$ref": "OrderreportsListTransactionsResponse"
          },
          "description": "Retrieves a list of transactions for a disbursement from your Merchant Center account.",
          "path": "content/v2/{merchantId}/orderreports/disbursements/{disbursementId}/transactions",
          "flatPath": "content/v2/{merchantId}/orderreports/disbursements/{disbursementId}/transactions",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId",
            "disbursementId"
          ],
          "parameters": {
            "maxResults": {
              "format": "uint32",
              "location": "query",
              "description": "The maximum number of disbursements to return in the response, used for paging.",
              "type": "integer"
            },
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "The token returned by the previous request."
            },
            "transactionEndDate": {
              "description": "The last date in which transaction occurred. In ISO 8601 format. Default: current date.",
              "location": "query",
              "type": "string"
            },
            "disbursementId": {
              "type": "string",
              "description": "The Google-provided ID of the disbursement (found in Wallet).",
              "required": true,
              "location": "path"
            },
            "merchantId": {
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "type": "string",
              "format": "uint64",
              "required": true,
              "location": "path"
            },
            "transactionStartDate": {
              "type": "string",
              "description": "The first date in which transaction occurred. In ISO 8601 format.",
              "location": "query"
            }
          },
          "httpMethod": "GET",
          "id": "content.orderreports.listtransactions"
        }
      }
    },
    "pos": {
      "methods": {
        "sale": {
          "id": "content.pos.sale",
          "path": "content/v2/{merchantId}/pos/{targetMerchantId}/sale",
          "flatPath": "content/v2/{merchantId}/pos/{targetMerchantId}/sale",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "PosSaleResponse"
          },
          "httpMethod": "POST",
          "request": {
            "$ref": "PosSaleRequest"
          },
          "parameters": {
            "targetMerchantId": {
              "location": "path",
              "format": "uint64",
              "type": "string",
              "description": "The ID of the target merchant.",
              "required": true
            },
            "merchantId": {
              "required": true,
              "format": "uint64",
              "type": "string",
              "description": "The ID of the POS or inventory data provider.",
              "location": "path"
            },
            "dryRun": {
              "type": "boolean",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "location": "query"
            }
          },
          "parameterOrder": [
            "merchantId",
            "targetMerchantId"
          ],
          "description": "Submit a sale event for the given merchant."
        },
        "custombatch": {
          "id": "content.pos.custombatch",
          "path": "content/v2/pos/batch",
          "parameterOrder": [],
          "description": "Batches multiple POS-related calls in a single request.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "PosCustomBatchResponse"
          },
          "httpMethod": "POST",
          "flatPath": "content/v2/pos/batch",
          "parameters": {
            "dryRun": {
              "type": "boolean",
              "location": "query",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any)."
            }
          },
          "request": {
            "$ref": "PosCustomBatchRequest"
          }
        },
        "get": {
          "flatPath": "content/v2/{merchantId}/pos/{targetMerchantId}/store/{storeCode}",
          "parameters": {
            "merchantId": {
              "description": "The ID of the POS or inventory data provider.",
              "required": true,
              "format": "uint64",
              "location": "path",
              "type": "string"
            },
            "storeCode": {
              "type": "string",
              "location": "path",
              "description": "A store code that is unique per merchant.",
              "required": true
            },
            "targetMerchantId": {
              "location": "path",
              "description": "The ID of the target merchant.",
              "required": true,
              "type": "string",
              "format": "uint64"
            }
          },
          "response": {
            "$ref": "PosStore"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId",
            "targetMerchantId",
            "storeCode"
          ],
          "path": "content/v2/{merchantId}/pos/{targetMerchantId}/store/{storeCode}",
          "description": "Retrieves information about the given store.",
          "id": "content.pos.get",
          "httpMethod": "GET"
        },
        "delete": {
          "description": "Deletes a store for the given merchant.",
          "flatPath": "content/v2/{merchantId}/pos/{targetMerchantId}/store/{storeCode}",
          "path": "content/v2/{merchantId}/pos/{targetMerchantId}/store/{storeCode}",
          "id": "content.pos.delete",
          "parameterOrder": [
            "merchantId",
            "targetMerchantId",
            "storeCode"
          ],
          "parameters": {
            "dryRun": {
              "type": "boolean",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "location": "query"
            },
            "storeCode": {
              "required": true,
              "location": "path",
              "description": "A store code that is unique per merchant.",
              "type": "string"
            },
            "merchantId": {
              "required": true,
              "location": "path",
              "type": "string",
              "format": "uint64",
              "description": "The ID of the POS or inventory data provider."
            },
            "targetMerchantId": {
              "location": "path",
              "format": "uint64",
              "description": "The ID of the target merchant.",
              "type": "string",
              "required": true
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "DELETE"
        },
        "insert": {
          "path": "content/v2/{merchantId}/pos/{targetMerchantId}/store",
          "flatPath": "content/v2/{merchantId}/pos/{targetMerchantId}/store",
          "description": "Creates a store for the given merchant.",
          "response": {
            "$ref": "PosStore"
          },
          "parameters": {
            "dryRun": {
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "location": "query",
              "type": "boolean"
            },
            "merchantId": {
              "format": "uint64",
              "required": true,
              "location": "path",
              "description": "The ID of the POS or inventory data provider.",
              "type": "string"
            },
            "targetMerchantId": {
              "description": "The ID of the target merchant.",
              "location": "path",
              "format": "uint64",
              "type": "string",
              "required": true
            }
          },
          "parameterOrder": [
            "merchantId",
            "targetMerchantId"
          ],
          "id": "content.pos.insert",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "request": {
            "$ref": "PosStore"
          },
          "httpMethod": "POST"
        },
        "inventory": {
          "path": "content/v2/{merchantId}/pos/{targetMerchantId}/inventory",
          "id": "content.pos.inventory",
          "parameterOrder": [
            "merchantId",
            "targetMerchantId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "POST",
          "parameters": {
            "dryRun": {
              "location": "query",
              "type": "boolean",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any)."
            },
            "merchantId": {
              "type": "string",
              "description": "The ID of the POS or inventory data provider.",
              "required": true,
              "format": "uint64",
              "location": "path"
            },
            "targetMerchantId": {
              "description": "The ID of the target merchant.",
              "type": "string",
              "required": true,
              "format": "uint64",
              "location": "path"
            }
          },
          "request": {
            "$ref": "PosInventoryRequest"
          },
          "description": "Submit inventory for the given merchant.",
          "response": {
            "$ref": "PosInventoryResponse"
          },
          "flatPath": "content/v2/{merchantId}/pos/{targetMerchantId}/inventory"
        },
        "list": {
          "response": {
            "$ref": "PosListResponse"
          },
          "parameterOrder": [
            "merchantId",
            "targetMerchantId"
          ],
          "id": "content.pos.list",
          "description": "Lists the stores of the target merchant.",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "targetMerchantId": {
              "description": "The ID of the target merchant.",
              "format": "uint64",
              "type": "string",
              "required": true,
              "location": "path"
            },
            "merchantId": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "The ID of the POS or inventory data provider.",
              "format": "uint64"
            }
          },
          "flatPath": "content/v2/{merchantId}/pos/{targetMerchantId}/store",
          "path": "content/v2/{merchantId}/pos/{targetMerchantId}/store"
        }
      }
    },
    "datafeeds": {
      "methods": {
        "get": {
          "parameters": {
            "datafeedId": {
              "format": "uint64",
              "type": "string",
              "location": "path",
              "required": true,
              "description": "The ID of the datafeed."
            },
            "merchantId": {
              "description": "The ID of the account that manages the datafeed. This account cannot be a multi-client account.",
              "required": true,
              "type": "string",
              "location": "path",
              "format": "uint64"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "content/v2/{merchantId}/datafeeds/{datafeedId}",
          "parameterOrder": [
            "merchantId",
            "datafeedId"
          ],
          "id": "content.datafeeds.get",
          "response": {
            "$ref": "Datafeed"
          },
          "path": "content/v2/{merchantId}/datafeeds/{datafeedId}",
          "description": "Retrieves a datafeed configuration from your Merchant Center account.",
          "httpMethod": "GET"
        },
        "fetchnow": {
          "parameters": {
            "merchantId": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "The ID of the account that manages the datafeed. This account cannot be a multi-client account.",
              "format": "uint64"
            },
            "datafeedId": {
              "required": true,
              "location": "path",
              "description": "The ID of the datafeed to be fetched.",
              "format": "uint64",
              "type": "string"
            },
            "dryRun": {
              "type": "boolean",
              "location": "query",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any)."
            }
          },
          "id": "content.datafeeds.fetchnow",
          "response": {
            "$ref": "DatafeedsFetchNowResponse"
          },
          "description": "Invokes a fetch for the datafeed in your Merchant Center account.",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId",
            "datafeedId"
          ],
          "path": "content/v2/{merchantId}/datafeeds/{datafeedId}/fetchNow",
          "flatPath": "content/v2/{merchantId}/datafeeds/{datafeedId}/fetchNow"
        },
        "update": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId",
            "datafeedId"
          ],
          "flatPath": "content/v2/{merchantId}/datafeeds/{datafeedId}",
          "parameters": {
            "merchantId": {
              "format": "uint64",
              "type": "string",
              "location": "path",
              "required": true,
              "description": "The ID of the account that manages the datafeed. This account cannot be a multi-client account."
            },
            "dryRun": {
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "type": "boolean",
              "location": "query"
            },
            "datafeedId": {
              "location": "path",
              "description": "The ID of the datafeed.",
              "required": true,
              "type": "string",
              "format": "uint64"
            }
          },
          "description": "Updates a datafeed configuration of your Merchant Center account. Any fields that are not provided are deleted from the resource.",
          "path": "content/v2/{merchantId}/datafeeds/{datafeedId}",
          "id": "content.datafeeds.update",
          "request": {
            "$ref": "Datafeed"
          },
          "response": {
            "$ref": "Datafeed"
          },
          "httpMethod": "PUT"
        },
        "insert": {
          "request": {
            "$ref": "Datafeed"
          },
          "description": "Registers a datafeed configuration with your Merchant Center account.",
          "flatPath": "content/v2/{merchantId}/datafeeds",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "dryRun": {
              "location": "query",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "type": "boolean"
            },
            "merchantId": {
              "format": "uint64",
              "type": "string",
              "required": true,
              "description": "The ID of the account that manages the datafeed. This account cannot be a multi-client account.",
              "location": "path"
            }
          },
          "id": "content.datafeeds.insert",
          "response": {
            "$ref": "Datafeed"
          },
          "parameterOrder": [
            "merchantId"
          ],
          "path": "content/v2/{merchantId}/datafeeds"
        },
        "custombatch": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [],
          "response": {
            "$ref": "DatafeedsCustomBatchResponse"
          },
          "description": "Deletes, fetches, gets, inserts and updates multiple datafeeds in a single request.",
          "path": "content/v2/datafeeds/batch",
          "parameters": {
            "dryRun": {
              "type": "boolean",
              "location": "query",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any)."
            }
          },
          "id": "content.datafeeds.custombatch",
          "request": {
            "$ref": "DatafeedsCustomBatchRequest"
          },
          "flatPath": "content/v2/datafeeds/batch",
          "httpMethod": "POST"
        },
        "list": {
          "flatPath": "content/v2/{merchantId}/datafeeds",
          "parameterOrder": [
            "merchantId"
          ],
          "httpMethod": "GET",
          "response": {
            "$ref": "DatafeedsListResponse"
          },
          "path": "content/v2/{merchantId}/datafeeds",
          "parameters": {
            "merchantId": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "The ID of the account that manages the datafeeds. This account cannot be a multi-client account.",
              "format": "uint64"
            },
            "maxResults": {
              "description": "The maximum number of products to return in the response, used for paging.",
              "type": "integer",
              "format": "uint32",
              "location": "query"
            },
            "pageToken": {
              "location": "query",
              "description": "The token returned by the previous request.",
              "type": "string"
            }
          },
          "description": "Lists the configurations for datafeeds in your Merchant Center account.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.datafeeds.list"
        },
        "delete": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Deletes a datafeed configuration from your Merchant Center account.",
          "httpMethod": "DELETE",
          "parameters": {
            "merchantId": {
              "type": "string",
              "description": "The ID of the account that manages the datafeed. This account cannot be a multi-client account.",
              "format": "uint64",
              "location": "path",
              "required": true
            },
            "dryRun": {
              "type": "boolean",
              "location": "query",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any)."
            },
            "datafeedId": {
              "format": "uint64",
              "required": true,
              "location": "path",
              "type": "string",
              "description": "The ID of the datafeed."
            }
          },
          "parameterOrder": [
            "merchantId",
            "datafeedId"
          ],
          "id": "content.datafeeds.delete",
          "flatPath": "content/v2/{merchantId}/datafeeds/{datafeedId}",
          "path": "content/v2/{merchantId}/datafeeds/{datafeedId}"
        }
      }
    },
    "accounts": {
      "methods": {
        "link": {
          "parameters": {
            "accountId": {
              "required": true,
              "description": "The ID of the account that should be linked.",
              "format": "uint64",
              "location": "path",
              "type": "string"
            },
            "merchantId": {
              "required": true,
              "type": "string",
              "format": "uint64",
              "location": "path",
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account."
            }
          },
          "httpMethod": "POST",
          "id": "content.accounts.link",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "AccountsLinkResponse"
          },
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "path": "content/v2/{merchantId}/accounts/{accountId}/link",
          "flatPath": "content/v2/{merchantId}/accounts/{accountId}/link",
          "request": {
            "$ref": "AccountsLinkRequest"
          },
          "description": "Performs an action on a link between two Merchant Center accounts, namely accountId and linkedAccountId."
        },
        "custombatch": {
          "flatPath": "content/v2/accounts/batch",
          "id": "content.accounts.custombatch",
          "description": "Retrieves, inserts, updates, and deletes multiple Merchant Center (sub-)accounts in a single request.",
          "httpMethod": "POST",
          "parameterOrder": [],
          "response": {
            "$ref": "AccountsCustomBatchResponse"
          },
          "path": "content/v2/accounts/batch",
          "parameters": {
            "dryRun": {
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "type": "boolean",
              "location": "query"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "request": {
            "$ref": "AccountsCustomBatchRequest"
          }
        },
        "claimwebsite": {
          "parameters": {
            "merchantId": {
              "location": "path",
              "required": true,
              "type": "string",
              "format": "uint64",
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account."
            },
            "overwrite": {
              "location": "query",
              "type": "boolean",
              "description": "Only available to selected merchants. When set to `True`, this flag removes any existing claim on the requested website by another account and replaces it with a claim from this account."
            },
            "accountId": {
              "location": "path",
              "required": true,
              "description": "The ID of the account whose website is claimed.",
              "type": "string",
              "format": "uint64"
            }
          },
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "content/v2/{merchantId}/accounts/{accountId}/claimwebsite",
          "response": {
            "$ref": "AccountsClaimWebsiteResponse"
          },
          "httpMethod": "POST",
          "id": "content.accounts.claimwebsite",
          "description": "Claims the website of a Merchant Center sub-account.",
          "flatPath": "content/v2/{merchantId}/accounts/{accountId}/claimwebsite"
        },
        "delete": {
          "path": "content/v2/{merchantId}/accounts/{accountId}",
          "description": "Deletes a Merchant Center sub-account.",
          "id": "content.accounts.delete",
          "flatPath": "content/v2/{merchantId}/accounts/{accountId}",
          "httpMethod": "DELETE",
          "parameters": {
            "accountId": {
              "required": true,
              "description": "The ID of the account.",
              "type": "string",
              "format": "uint64",
              "location": "path"
            },
            "dryRun": {
              "location": "query",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "type": "boolean"
            },
            "force": {
              "type": "boolean",
              "default": "false",
              "description": "Flag to delete sub-accounts with products. The default value is false.",
              "location": "query"
            },
            "merchantId": {
              "description": "The ID of the managing account. This must be a multi-client account, and accountId must be the ID of a sub-account of this account.",
              "required": true,
              "location": "path",
              "type": "string",
              "format": "uint64"
            }
          },
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "get": {
          "parameters": {
            "merchantId": {
              "location": "path",
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "required": true,
              "format": "uint64",
              "type": "string"
            },
            "accountId": {
              "type": "string",
              "required": true,
              "location": "path",
              "format": "uint64",
              "description": "The ID of the account."
            }
          },
          "flatPath": "content/v2/{merchantId}/accounts/{accountId}",
          "response": {
            "$ref": "Account"
          },
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "id": "content.accounts.get",
          "description": "Retrieves a Merchant Center account.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "content/v2/{merchantId}/accounts/{accountId}",
          "httpMethod": "GET"
        },
        "list": {
          "httpMethod": "GET",
          "parameters": {
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "The token returned by the previous request."
            },
            "merchantId": {
              "required": true,
              "location": "path",
              "format": "uint64",
              "description": "The ID of the managing account. This must be a multi-client account.",
              "type": "string"
            },
            "maxResults": {
              "description": "The maximum number of accounts to return in the response, used for paging.",
              "location": "query",
              "format": "uint32",
              "type": "integer"
            }
          },
          "description": "Lists the sub-accounts in your Merchant Center account.",
          "id": "content.accounts.list",
          "flatPath": "content/v2/{merchantId}/accounts",
          "parameterOrder": [
            "merchantId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "AccountsListResponse"
          },
          "path": "content/v2/{merchantId}/accounts"
        },
        "update": {
          "flatPath": "content/v2/{merchantId}/accounts/{accountId}",
          "parameters": {
            "merchantId": {
              "location": "path",
              "format": "uint64",
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "type": "string",
              "required": true
            },
            "accountId": {
              "description": "The ID of the account.",
              "required": true,
              "format": "uint64",
              "type": "string",
              "location": "path"
            },
            "dryRun": {
              "type": "boolean",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "location": "query"
            }
          },
          "request": {
            "$ref": "Account"
          },
          "httpMethod": "PUT",
          "description": "Updates a Merchant Center account. Any fields that are not provided are deleted from the resource.",
          "id": "content.accounts.update",
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "Account"
          },
          "path": "content/v2/{merchantId}/accounts/{accountId}"
        },
        "authinfo": {
          "description": "Returns information about the authenticated user.",
          "flatPath": "content/v2/accounts/authinfo",
          "parameters": {},
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [],
          "path": "content/v2/accounts/authinfo",
          "id": "content.accounts.authinfo",
          "response": {
            "$ref": "AccountsAuthInfoResponse"
          }
        },
        "insert": {
          "httpMethod": "POST",
          "parameterOrder": [
            "merchantId"
          ],
          "response": {
            "$ref": "Account"
          },
          "path": "content/v2/{merchantId}/accounts",
          "parameters": {
            "merchantId": {
              "description": "The ID of the managing account. This must be a multi-client account.",
              "type": "string",
              "format": "uint64",
              "required": true,
              "location": "path"
            },
            "dryRun": {
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "location": "query",
              "type": "boolean"
            }
          },
          "description": "Creates a Merchant Center sub-account.",
          "flatPath": "content/v2/{merchantId}/accounts",
          "id": "content.accounts.insert",
          "request": {
            "$ref": "Account"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        }
      }
    },
    "orders": {
      "methods": {
        "returnlineitem": {
          "httpMethod": "POST",
          "id": "content.orders.returnlineitem",
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "response": {
            "$ref": "OrdersReturnLineItemResponse"
          },
          "flatPath": "content/v2/{merchantId}/orders/{orderId}/returnLineItem",
          "path": "content/v2/{merchantId}/orders/{orderId}/returnLineItem",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "request": {
            "$ref": "OrdersReturnLineItemRequest"
          },
          "description": "Returns a line item.",
          "parameters": {
            "merchantId": {
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "type": "string",
              "required": true,
              "location": "path",
              "format": "uint64"
            },
            "orderId": {
              "description": "The ID of the order.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          }
        },
        "acknowledge": {
          "parameters": {
            "merchantId": {
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "location": "path",
              "type": "string",
              "required": true,
              "format": "uint64"
            },
            "orderId": {
              "type": "string",
              "description": "The ID of the order.",
              "required": true,
              "location": "path"
            }
          },
          "request": {
            "$ref": "OrdersAcknowledgeRequest"
          },
          "description": "Marks an order as acknowledged.",
          "response": {
            "$ref": "OrdersAcknowledgeResponse"
          },
          "flatPath": "content/v2/{merchantId}/orders/{orderId}/acknowledge",
          "httpMethod": "POST",
          "id": "content.orders.acknowledge",
          "path": "content/v2/{merchantId}/orders/{orderId}/acknowledge",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId",
            "orderId"
          ]
        },
        "getbymerchantorderid": {
          "description": "Retrieves an order using merchant order ID.",
          "response": {
            "$ref": "OrdersGetByMerchantOrderIdResponse"
          },
          "parameters": {
            "merchantId": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "format": "uint64"
            },
            "merchantOrderId": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "The merchant order ID to be looked for."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "GET",
          "flatPath": "content/v2/{merchantId}/ordersbymerchantid/{merchantOrderId}",
          "parameterOrder": [
            "merchantId",
            "merchantOrderId"
          ],
          "id": "content.orders.getbymerchantorderid",
          "path": "content/v2/{merchantId}/ordersbymerchantid/{merchantOrderId}"
        },
        "get": {
          "response": {
            "$ref": "Order"
          },
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "parameters": {
            "merchantId": {
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "location": "path",
              "format": "uint64",
              "type": "string",
              "required": true
            },
            "orderId": {
              "type": "string",
              "location": "path",
              "description": "The ID of the order.",
              "required": true
            }
          },
          "flatPath": "content/v2/{merchantId}/orders/{orderId}",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Retrieves an order from your Merchant Center account.",
          "path": "content/v2/{merchantId}/orders/{orderId}",
          "id": "content.orders.get"
        },
        "setlineitemmetadata": {
          "response": {
            "$ref": "OrdersSetLineItemMetadataResponse"
          },
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "request": {
            "$ref": "OrdersSetLineItemMetadataRequest"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "POST",
          "flatPath": "content/v2/{merchantId}/orders/{orderId}/setLineItemMetadata",
          "parameters": {
            "merchantId": {
              "format": "uint64",
              "location": "path",
              "type": "string",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "required": true
            },
            "orderId": {
              "required": true,
              "type": "string",
              "description": "The ID of the order.",
              "location": "path"
            }
          },
          "path": "content/v2/{merchantId}/orders/{orderId}/setLineItemMetadata",
          "description": "Sets (or overrides if it already exists) merchant provided annotations in the form of key-value pairs. A common use case would be to supply us with additional structured information about a line item that cannot be provided via other methods. Submitted key-value pairs can be retrieved as part of the orders resource.",
          "id": "content.orders.setlineitemmetadata"
        },
        "list": {
          "flatPath": "content/v2/{merchantId}/orders",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Lists the orders in your Merchant Center account.",
          "parameters": {
            "acknowledged": {
              "type": "boolean",
              "location": "query",
              "description": "Obtains orders that match the acknowledgement status. When set to true, obtains orders that have been acknowledged. When false, obtains orders that have not been acknowledged. We recommend using this filter set to `false`, in conjunction with the `acknowledge` call, such that only un-acknowledged orders are returned. "
            },
            "statuses": {
              "enumDescriptions": [
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
              ],
              "repeated": true,
              "type": "string",
              "location": "query",
              "description": "Obtains orders that match any of the specified statuses. Please note that `active` is a shortcut for `pendingShipment` and `partiallyShipped`, and `completed` is a shortcut for `shipped`, `partiallyDelivered`, `delivered`, `partiallyReturned`, `returned`, and `canceled`.",
              "enum": [
                "ACTIVE",
                "COMPLETED",
                "CANCELED",
                "IN_PROGRESS",
                "PENDING_SHIPMENT",
                "PARTIALLY_SHIPPED",
                "SHIPPED",
                "PARTIALLY_DELIVERED",
                "DELIVERED",
                "PARTIALLY_RETURNED",
                "RETURNED"
              ]
            },
            "pageToken": {
              "description": "The token returned by the previous request.",
              "type": "string",
              "location": "query"
            },
            "placedDateEnd": {
              "description": "Obtains orders placed before this date (exclusively), in ISO 8601 format.",
              "location": "query",
              "type": "string"
            },
            "placedDateStart": {
              "description": "Obtains orders placed after this date (inclusively), in ISO 8601 format.",
              "type": "string",
              "location": "query"
            },
            "maxResults": {
              "format": "uint32",
              "location": "query",
              "type": "integer",
              "description": "The maximum number of orders to return in the response, used for paging. The default value is 25 orders per page, and the maximum allowed value is 250 orders per page."
            },
            "orderBy": {
              "type": "string",
              "location": "query",
              "description": "Order results by placement date in descending or ascending order. Acceptable values are: - placedDateAsc - placedDateDesc "
            },
            "merchantId": {
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "required": true,
              "type": "string",
              "format": "uint64",
              "location": "path"
            }
          },
          "response": {
            "$ref": "OrdersListResponse"
          },
          "httpMethod": "GET",
          "id": "content.orders.list",
          "path": "content/v2/{merchantId}/orders",
          "parameterOrder": [
            "merchantId"
          ]
        },
        "updateshipment": {
          "flatPath": "content/v2/{merchantId}/orders/{orderId}/updateShipment",
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "httpMethod": "POST",
          "response": {
            "$ref": "OrdersUpdateShipmentResponse"
          },
          "description": "Updates a shipment's status, carrier, and/or tracking ID.",
          "request": {
            "$ref": "OrdersUpdateShipmentRequest"
          },
          "path": "content/v2/{merchantId}/orders/{orderId}/updateShipment",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "merchantId": {
              "required": true,
              "type": "string",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "location": "path",
              "format": "uint64"
            },
            "orderId": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "The ID of the order."
            }
          },
          "id": "content.orders.updateshipment"
        },
        "custombatch": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Retrieves or modifies multiple orders in a single request.",
          "request": {
            "$ref": "OrdersCustomBatchRequest"
          },
          "response": {
            "$ref": "OrdersCustomBatchResponse"
          },
          "httpMethod": "POST",
          "path": "content/v2/orders/batch",
          "id": "content.orders.custombatch",
          "parameterOrder": [],
          "flatPath": "content/v2/orders/batch",
          "parameters": {}
        },
        "shiplineitems": {
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "id": "content.orders.shiplineitems",
          "path": "content/v2/{merchantId}/orders/{orderId}/shipLineItems",
          "flatPath": "content/v2/{merchantId}/orders/{orderId}/shipLineItems",
          "description": "Marks line item(s) as shipped.",
          "request": {
            "$ref": "OrdersShipLineItemsRequest"
          },
          "response": {
            "$ref": "OrdersShipLineItemsResponse"
          },
          "parameters": {
            "orderId": {
              "description": "The ID of the order.",
              "required": true,
              "location": "path",
              "type": "string"
            },
            "merchantId": {
              "format": "uint64",
              "location": "path",
              "required": true,
              "type": "string",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "POST"
        },
        "updatemerchantorderid": {
          "path": "content/v2/{merchantId}/orders/{orderId}/updateMerchantOrderId",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "POST",
          "response": {
            "$ref": "OrdersUpdateMerchantOrderIdResponse"
          },
          "id": "content.orders.updatemerchantorderid",
          "request": {
            "$ref": "OrdersUpdateMerchantOrderIdRequest"
          },
          "parameters": {
            "orderId": {
              "type": "string",
              "required": true,
              "description": "The ID of the order.",
              "location": "path"
            },
            "merchantId": {
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "required": true,
              "location": "path",
              "type": "string",
              "format": "uint64"
            }
          },
          "flatPath": "content/v2/{merchantId}/orders/{orderId}/updateMerchantOrderId",
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "description": "Updates the merchant order ID for a given order."
        },
        "gettestordertemplate": {
          "httpMethod": "GET",
          "parameterOrder": [
            "merchantId",
            "templateName"
          ],
          "path": "content/v2/{merchantId}/testordertemplates/{templateName}",
          "id": "content.orders.gettestordertemplate",
          "response": {
            "$ref": "OrdersGetTestOrderTemplateResponse"
          },
          "flatPath": "content/v2/{merchantId}/testordertemplates/{templateName}",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "merchantId": {
              "location": "path",
              "description": "The ID of the account that should manage the order. This cannot be a multi-client account.",
              "required": true,
              "type": "string",
              "format": "uint64"
            },
            "templateName": {
              "description": "The name of the template to retrieve.",
              "location": "path",
              "type": "string",
              "enum": [
                "TEMPLATE1",
                "TEMPLATE2",
                "TEMPLATE1A",
                "TEMPLATE1B",
                "TEMPLATE3"
              ],
              "required": true,
              "enumDescriptions": [
                "",
                "",
                "",
                "",
                ""
              ]
            },
            "country": {
              "location": "query",
              "type": "string",
              "description": "The country of the template to retrieve. Defaults to `US`."
            }
          },
          "description": "Sandbox only. Retrieves an order template that can be used to quickly create a new order in sandbox."
        },
        "rejectreturnlineitem": {
          "path": "content/v2/{merchantId}/orders/{orderId}/rejectReturnLineItem",
          "request": {
            "$ref": "OrdersRejectReturnLineItemRequest"
          },
          "response": {
            "$ref": "OrdersRejectReturnLineItemResponse"
          },
          "flatPath": "content/v2/{merchantId}/orders/{orderId}/rejectReturnLineItem",
          "id": "content.orders.rejectreturnlineitem",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "POST",
          "parameters": {
            "merchantId": {
              "required": true,
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "format": "uint64",
              "type": "string",
              "location": "path"
            },
            "orderId": {
              "type": "string",
              "description": "The ID of the order.",
              "required": true,
              "location": "path"
            }
          },
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "description": "Rejects return on an line item."
        },
        "cancel": {
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "parameters": {
            "merchantId": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "format": "uint64"
            },
            "orderId": {
              "description": "The ID of the order to cancel.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "httpMethod": "POST",
          "response": {
            "$ref": "OrdersCancelResponse"
          },
          "description": "Cancels all line items in an order, making a full refund.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "content/v2/{merchantId}/orders/{orderId}/cancel",
          "id": "content.orders.cancel",
          "path": "content/v2/{merchantId}/orders/{orderId}/cancel",
          "request": {
            "$ref": "OrdersCancelRequest"
          }
        },
        "returnrefundlineitem": {
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Returns and refunds a line item. Note that this method can only be called on fully shipped orders. Please also note that the Orderreturns API is the preferred way to handle returns after you receive a return from a customer. You can use Orderreturns.list or Orderreturns.get to search for the return, and then use Orderreturns.processreturn to issue the refund. If the return cannot be found, then we recommend using this API to issue a refund.",
          "path": "content/v2/{merchantId}/orders/{orderId}/returnRefundLineItem",
          "flatPath": "content/v2/{merchantId}/orders/{orderId}/returnRefundLineItem",
          "response": {
            "$ref": "OrdersReturnRefundLineItemResponse"
          },
          "request": {
            "$ref": "OrdersReturnRefundLineItemRequest"
          },
          "parameters": {
            "merchantId": {
              "required": true,
              "location": "path",
              "format": "uint64",
              "type": "string",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account."
            },
            "orderId": {
              "description": "The ID of the order.",
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "id": "content.orders.returnrefundlineitem"
        },
        "createtestorder": {
          "response": {
            "$ref": "OrdersCreateTestOrderResponse"
          },
          "id": "content.orders.createtestorder",
          "description": "Sandbox only. Creates a test order.",
          "httpMethod": "POST",
          "parameters": {
            "merchantId": {
              "required": true,
              "format": "uint64",
              "location": "path",
              "description": "The ID of the account that should manage the order. This cannot be a multi-client account.",
              "type": "string"
            }
          },
          "request": {
            "$ref": "OrdersCreateTestOrderRequest"
          },
          "path": "content/v2/{merchantId}/testorders",
          "parameterOrder": [
            "merchantId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "content/v2/{merchantId}/testorders"
        },
        "instorerefundlineitem": {
          "path": "content/v2/{merchantId}/orders/{orderId}/inStoreRefundLineItem",
          "parameters": {
            "merchantId": {
              "required": true,
              "location": "path",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "format": "uint64",
              "type": "string"
            },
            "orderId": {
              "location": "path",
              "description": "The ID of the order.",
              "type": "string",
              "required": true
            }
          },
          "httpMethod": "POST",
          "request": {
            "$ref": "OrdersInStoreRefundLineItemRequest"
          },
          "response": {
            "$ref": "OrdersInStoreRefundLineItemResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Deprecated. Notifies that item return and refund was handled directly by merchant outside of Google payments processing (e.g. cash refund done in store). Note: We recommend calling the returnrefundlineitem method to refund in-store returns. We will issue the refund directly to the customer. This helps to prevent possible differences arising between merchant and Google transaction records. We also recommend having the point of sale system communicate with Google to ensure that customers do not receive a double refund by first refunding via Google then via an in-store return.",
          "flatPath": "content/v2/{merchantId}/orders/{orderId}/inStoreRefundLineItem",
          "id": "content.orders.instorerefundlineitem",
          "parameterOrder": [
            "merchantId",
            "orderId"
          ]
        },
        "createtestreturn": {
          "id": "content.orders.createtestreturn",
          "description": "Sandbox only. Creates a test return.",
          "request": {
            "$ref": "OrdersCreateTestReturnRequest"
          },
          "response": {
            "$ref": "OrdersCreateTestReturnResponse"
          },
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "content/v2/{merchantId}/orders/{orderId}/testreturn",
          "flatPath": "content/v2/{merchantId}/orders/{orderId}/testreturn",
          "parameters": {
            "merchantId": {
              "type": "string",
              "location": "path",
              "format": "uint64",
              "required": true,
              "description": "The ID of the account that manages the order. This cannot be a multi-client account."
            },
            "orderId": {
              "description": "The ID of the order.",
              "required": true,
              "type": "string",
              "location": "path"
            }
          },
          "httpMethod": "POST"
        },
        "refund": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "content/v2/{merchantId}/orders/{orderId}/refund",
          "path": "content/v2/{merchantId}/orders/{orderId}/refund",
          "response": {
            "$ref": "OrdersRefundResponse"
          },
          "description": "Deprecated, please use returnRefundLineItem instead.",
          "parameters": {
            "merchantId": {
              "location": "path",
              "format": "uint64",
              "required": true,
              "type": "string",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account."
            },
            "orderId": {
              "description": "The ID of the order to refund.",
              "location": "path",
              "type": "string",
              "required": true
            }
          },
          "request": {
            "$ref": "OrdersRefundRequest"
          },
          "id": "content.orders.refund",
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "httpMethod": "POST"
        },
        "advancetestorder": {
          "response": {
            "$ref": "OrdersAdvanceTestOrderResponse"
          },
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "path": "content/v2/{merchantId}/testorders/{orderId}/advance",
          "httpMethod": "POST",
          "description": "Sandbox only. Moves a test order from state \"`inProgress`\" to state \"`pendingShipment`\".",
          "flatPath": "content/v2/{merchantId}/testorders/{orderId}/advance",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "merchantId": {
              "location": "path",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "format": "uint64",
              "required": true,
              "type": "string"
            },
            "orderId": {
              "location": "path",
              "description": "The ID of the test order to modify.",
              "type": "string",
              "required": true
            }
          },
          "id": "content.orders.advancetestorder"
        },
        "canceltestorderbycustomer": {
          "flatPath": "content/v2/{merchantId}/testorders/{orderId}/cancelByCustomer",
          "id": "content.orders.canceltestorderbycustomer",
          "request": {
            "$ref": "OrdersCancelTestOrderByCustomerRequest"
          },
          "parameters": {
            "orderId": {
              "description": "The ID of the test order to cancel.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "merchantId": {
              "type": "string",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "location": "path",
              "format": "uint64",
              "required": true
            }
          },
          "path": "content/v2/{merchantId}/testorders/{orderId}/cancelByCustomer",
          "response": {
            "$ref": "OrdersCancelTestOrderByCustomerResponse"
          },
          "httpMethod": "POST",
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "description": "Sandbox only. Cancels a test order for customer-initiated cancellation.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "updatelineitemshippingdetails": {
          "response": {
            "$ref": "OrdersUpdateLineItemShippingDetailsResponse"
          },
          "description": "Updates ship by and delivery by dates for a line item.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "request": {
            "$ref": "OrdersUpdateLineItemShippingDetailsRequest"
          },
          "flatPath": "content/v2/{merchantId}/orders/{orderId}/updateLineItemShippingDetails",
          "path": "content/v2/{merchantId}/orders/{orderId}/updateLineItemShippingDetails",
          "parameters": {
            "merchantId": {
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "location": "path",
              "type": "string",
              "required": true,
              "format": "uint64"
            },
            "orderId": {
              "required": true,
              "description": "The ID of the order.",
              "type": "string",
              "location": "path"
            }
          },
          "id": "content.orders.updatelineitemshippingdetails",
          "httpMethod": "POST",
          "parameterOrder": [
            "merchantId",
            "orderId"
          ]
        },
        "cancellineitem": {
          "path": "content/v2/{merchantId}/orders/{orderId}/cancelLineItem",
          "id": "content.orders.cancellineitem",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "content/v2/{merchantId}/orders/{orderId}/cancelLineItem",
          "response": {
            "$ref": "OrdersCancelLineItemResponse"
          },
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "request": {
            "$ref": "OrdersCancelLineItemRequest"
          },
          "parameters": {
            "merchantId": {
              "type": "string",
              "format": "uint64",
              "required": true,
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "location": "path"
            },
            "orderId": {
              "location": "path",
              "description": "The ID of the order.",
              "required": true,
              "type": "string"
            }
          },
          "description": "Cancels a line item, making a full refund."
        }
      }
    },
    "inventory": {
      "methods": {
        "custombatch": {
          "request": {
            "$ref": "InventoryCustomBatchRequest"
          },
          "response": {
            "$ref": "InventoryCustomBatchResponse"
          },
          "id": "content.inventory.custombatch",
          "httpMethod": "POST",
          "parameterOrder": [],
          "parameters": {
            "dryRun": {
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "location": "query",
              "type": "boolean"
            }
          },
          "path": "content/v2/inventory/batch",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Updates price and availability for multiple products or stores in a single request. This operation does not update the expiration date of the products.",
          "flatPath": "content/v2/inventory/batch"
        },
        "set": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "storeCode": {
              "location": "path",
              "description": "The code of the store for which to update price and availability. Use `online` to update price and availability of an online product.",
              "type": "string",
              "required": true
            },
            "merchantId": {
              "description": "The ID of the account that contains the product. This account cannot be a multi-client account.",
              "location": "path",
              "format": "uint64",
              "type": "string",
              "required": true
            },
            "productId": {
              "description": "The REST ID of the product for which to update price and availability.",
              "location": "path",
              "type": "string",
              "required": true
            },
            "dryRun": {
              "type": "boolean",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "location": "query"
            }
          },
          "flatPath": "content/v2/{merchantId}/inventory/{storeCode}/products/{productId}",
          "response": {
            "$ref": "InventorySetResponse"
          },
          "httpMethod": "POST",
          "request": {
            "$ref": "InventorySetRequest"
          },
          "path": "content/v2/{merchantId}/inventory/{storeCode}/products/{productId}",
          "parameterOrder": [
            "merchantId",
            "storeCode",
            "productId"
          ],
          "id": "content.inventory.set",
          "description": "Updates price and availability of a product in your Merchant Center account."
        }
      }
    },
    "accountstatuses": {
      "methods": {
        "list": {
          "parameters": {
            "merchantId": {
              "description": "The ID of the managing account. This must be a multi-client account.",
              "location": "path",
              "required": true,
              "format": "uint64",
              "type": "string"
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "The token returned by the previous request."
            },
            "destinations": {
              "description": "If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.",
              "location": "query",
              "repeated": true,
              "type": "string"
            },
            "maxResults": {
              "format": "uint32",
              "type": "integer",
              "location": "query",
              "description": "The maximum number of account statuses to return in the response, used for paging."
            }
          },
          "httpMethod": "GET",
          "flatPath": "content/v2/{merchantId}/accountstatuses",
          "parameterOrder": [
            "merchantId"
          ],
          "response": {
            "$ref": "AccountstatusesListResponse"
          },
          "description": "Lists the statuses of the sub-accounts in your Merchant Center account.",
          "path": "content/v2/{merchantId}/accountstatuses",
          "id": "content.accountstatuses.list",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "get": {
          "path": "content/v2/{merchantId}/accountstatuses/{accountId}",
          "response": {
            "$ref": "AccountStatus"
          },
          "httpMethod": "GET",
          "id": "content.accountstatuses.get",
          "flatPath": "content/v2/{merchantId}/accountstatuses/{accountId}",
          "description": "Retrieves the status of a Merchant Center account. No itemLevelIssues are returned for multi-client accounts.",
          "parameters": {
            "merchantId": {
              "location": "path",
              "type": "string",
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "format": "uint64",
              "required": true
            },
            "accountId": {
              "required": true,
              "format": "uint64",
              "type": "string",
              "description": "The ID of the account.",
              "location": "path"
            },
            "destinations": {
              "type": "string",
              "repeated": true,
              "description": "If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.",
              "location": "query"
            }
          },
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "custombatch": {
          "httpMethod": "POST",
          "flatPath": "content/v2/accountstatuses/batch",
          "parameterOrder": [],
          "id": "content.accountstatuses.custombatch",
          "description": "Retrieves multiple Merchant Center account statuses in a single request.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "content/v2/accountstatuses/batch",
          "parameters": {},
          "request": {
            "$ref": "AccountstatusesCustomBatchRequest"
          },
          "response": {
            "$ref": "AccountstatusesCustomBatchResponse"
          }
        }
      }
    },
    "datafeedstatuses": {
      "methods": {
        "list": {
          "parameterOrder": [
            "merchantId"
          ],
          "path": "content/v2/{merchantId}/datafeedstatuses",
          "description": "Lists the statuses of the datafeeds in your Merchant Center account.",
          "parameters": {
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "The token returned by the previous request."
            },
            "maxResults": {
              "format": "uint32",
              "type": "integer",
              "location": "query",
              "description": "The maximum number of products to return in the response, used for paging."
            },
            "merchantId": {
              "location": "path",
              "required": true,
              "description": "The ID of the account that manages the datafeeds. This account cannot be a multi-client account.",
              "type": "string",
              "format": "uint64"
            }
          },
          "id": "content.datafeedstatuses.list",
          "response": {
            "$ref": "DatafeedstatusesListResponse"
          },
          "httpMethod": "GET",
          "flatPath": "content/v2/{merchantId}/datafeedstatuses",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "get": {
          "id": "content.datafeedstatuses.get",
          "parameterOrder": [
            "merchantId",
            "datafeedId"
          ],
          "flatPath": "content/v2/{merchantId}/datafeedstatuses/{datafeedId}",
          "parameters": {
            "language": {
              "location": "query",
              "type": "string",
              "description": "The language for which to get the datafeed status. If this parameter is provided then country must also be provided. Note that this parameter is required for feeds targeting multiple countries and languages, since a feed may have a different status for each target."
            },
            "datafeedId": {
              "required": true,
              "description": "The ID of the datafeed.",
              "location": "path",
              "format": "uint64",
              "type": "string"
            },
            "merchantId": {
              "format": "uint64",
              "location": "path",
              "required": true,
              "type": "string",
              "description": "The ID of the account that manages the datafeed. This account cannot be a multi-client account."
            },
            "country": {
              "description": "The country for which to get the datafeed status. If this parameter is provided then language must also be provided. Note that this parameter is required for feeds targeting multiple countries and languages, since a feed may have a different status for each target.",
              "location": "query",
              "type": "string"
            }
          },
          "path": "content/v2/{merchantId}/datafeedstatuses/{datafeedId}",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Retrieves the status of a datafeed from your Merchant Center account.",
          "httpMethod": "GET",
          "response": {
            "$ref": "DatafeedStatus"
          }
        },
        "custombatch": {
          "id": "content.datafeedstatuses.custombatch",
          "response": {
            "$ref": "DatafeedstatusesCustomBatchResponse"
          },
          "description": "Gets multiple Merchant Center datafeed statuses in a single request.",
          "httpMethod": "POST",
          "request": {
            "$ref": "DatafeedstatusesCustomBatchRequest"
          },
          "parameters": {},
          "parameterOrder": [],
          "path": "content/v2/datafeedstatuses/batch",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "content/v2/datafeedstatuses/batch"
        }
      }
    },
    "orderreturns": {
      "methods": {
        "list": {
          "flatPath": "content/v2/{merchantId}/orderreturns",
          "parameters": {
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "The token returned by the previous request."
            },
            "maxResults": {
              "format": "uint32",
              "description": "The maximum number of order returns to return in the response, used for paging. The default value is 25 returns per page, and the maximum allowed value is 250 returns per page.",
              "location": "query",
              "type": "integer"
            },
            "createdEndDate": {
              "type": "string",
              "description": "Obtains order returns created before this date (inclusively), in ISO 8601 format.",
              "location": "query"
            },
            "merchantId": {
              "format": "uint64",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "type": "string",
              "location": "path",
              "required": true
            },
            "createdStartDate": {
              "type": "string",
              "location": "query",
              "description": "Obtains order returns created after this date (inclusively), in ISO 8601 format."
            },
            "orderBy": {
              "description": "Return the results in the specified order.",
              "location": "query",
              "enumDescriptions": [
                "",
                ""
              ],
              "enum": [
                "RETURN_CREATION_TIME_DESC",
                "RETURN_CREATION_TIME_ASC"
              ],
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "content/v2/{merchantId}/orderreturns",
          "parameterOrder": [
            "merchantId"
          ],
          "response": {
            "$ref": "OrderreturnsListResponse"
          },
          "description": "Lists order returns in your Merchant Center account.",
          "httpMethod": "GET",
          "id": "content.orderreturns.list"
        },
        "get": {
          "description": "Retrieves an order return from your Merchant Center account.",
          "flatPath": "content/v2/{merchantId}/orderreturns/{returnId}",
          "path": "content/v2/{merchantId}/orderreturns/{returnId}",
          "parameters": {
            "merchantId": {
              "location": "path",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "type": "string",
              "required": true,
              "format": "uint64"
            },
            "returnId": {
              "description": "Merchant order return ID generated by Google.",
              "required": true,
              "location": "path",
              "type": "string"
            }
          },
          "id": "content.orderreturns.get",
          "response": {
            "$ref": "MerchantOrderReturn"
          },
          "parameterOrder": [
            "merchantId",
            "returnId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "GET"
        }
      }
    }
  },
  "name": "content",
  "mtlsRootUrl": "https://shoppingcontent.mtls.googleapis.com/",
  "version": "v2",
  "ownerDomain": "google.com",
  "schemas": {
    "AccountStatusDataQualityIssue": {
      "type": "object",
      "id": "AccountStatusDataQualityIssue",
      "properties": {
        "detail": {
          "type": "string"
        },
        "exampleItems": {
          "items": {
            "$ref": "AccountStatusExampleItem"
          },
          "type": "array"
        },
        "submittedValue": {
          "type": "string"
        },
        "numItems": {
          "format": "uint32",
          "type": "integer"
        },
        "destination": {
          "type": "string"
        },
        "displayedValue": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "lastChecked": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "severity": {
          "description": " Acceptable values are: - \"`critical`\" - \"`error`\" - \"`suggestion`\" ",
          "type": "string"
        }
      }
    },
    "OrdersUpdateLineItemShippingDetailsResponse": {
      "id": "OrdersUpdateLineItemShippingDetailsResponse",
      "properties": {
        "executionStatus": {
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" ",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersUpdateLineItemShippingDetailsResponse\"."
        }
      },
      "type": "object"
    },
    "AccountsLinkRequest": {
      "id": "AccountsLinkRequest",
      "properties": {
        "action": {
          "description": "Action to perform for this link. The `\"request\"` action is only available to select merchants. Acceptable values are: - \"`approve`\" - \"`remove`\" - \"`request`\" ",
          "type": "string"
        },
        "linkedAccountId": {
          "description": "The ID of the linked account.",
          "type": "string"
        },
        "linkType": {
          "description": "Type of the link between the two accounts. Acceptable values are: - \"`channelPartner`\" - \"`eCommercePlatform`\" ",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrderRefund": {
      "properties": {
        "creationDate": {
          "description": "Date on which the item has been created, in ISO 8601 format.",
          "type": "string"
        },
        "actor": {
          "type": "string",
          "description": "The actor that created the refund. Acceptable values are: - \"`customer`\" - \"`googleBot`\" - \"`googleCustomerService`\" - \"`googlePayments`\" - \"`googleSabre`\" - \"`merchant`\" "
        },
        "amount": {
          "$ref": "Price",
          "description": "The amount that is refunded."
        },
        "reason": {
          "description": "The reason for the refund. Acceptable values are: - \"`adjustment`\" - \"`autoPostInternal`\" - \"`autoPostInvalidBillingAddress`\" - \"`autoPostNoInventory`\" - \"`autoPostPriceError`\" - \"`autoPostUndeliverableShippingAddress`\" - \"`couponAbuse`\" - \"`courtesyAdjustment`\" - \"`customerCanceled`\" - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`customerSupportRequested`\" - \"`deliveredLateByCarrier`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`failToPushOrderGoogleError`\" - \"`failToPushOrderMerchantError`\" - \"`failToPushOrderMerchantFulfillmentError`\" - \"`failToPushOrderToMerchant`\" - \"`failToPushOrderToMerchantOutOfStock`\" - \"`feeAdjustment`\" - \"`invalidCoupon`\" - \"`lateShipmentCredit`\" - \"`malformedShippingAddress`\" - \"`merchantDidNotShipOnTime`\" - \"`noInventory`\" - \"`orderTimeout`\" - \"`other`\" - \"`paymentAbuse`\" - \"`paymentDeclined`\" - \"`priceAdjustment`\" - \"`priceError`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`promoReallocation`\" - \"`qualityNotAsExpected`\" - \"`returnRefundAbuse`\" - \"`shippingCostAdjustment`\" - \"`shippingPriceError`\" - \"`taxAdjustment`\" - \"`taxError`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" ",
          "type": "string"
        },
        "reasonText": {
          "type": "string",
          "description": "The explanation of the reason."
        }
      },
      "type": "object",
      "id": "OrderRefund"
    },
    "UnitInvoice": {
      "properties": {
        "promotions": {
          "type": "array",
          "description": "Deprecated.",
          "items": {
            "$ref": "Promotion"
          }
        },
        "unitPricePretax": {
          "description": "[required] Price of the unit, before applying taxes.",
          "$ref": "Price"
        },
        "unitPriceTaxes": {
          "items": {
            "$ref": "UnitInvoiceTaxLine"
          },
          "type": "array",
          "description": "Tax amounts to apply to the unit price."
        },
        "additionalCharges": {
          "description": "Additional charges for a unit, e.g. shipping costs.",
          "type": "array",
          "items": {
            "$ref": "UnitInvoiceAdditionalCharge"
          }
        }
      },
      "type": "object",
      "id": "UnitInvoice"
    },
    "AccountUser": {
      "id": "AccountUser",
      "properties": {
        "admin": {
          "description": "Whether user is an admin.",
          "type": "boolean"
        },
        "paymentsAnalyst": {
          "type": "boolean",
          "description": "Whether user can access payment statements."
        },
        "emailAddress": {
          "description": "User's email address.",
          "type": "string"
        },
        "paymentsManager": {
          "description": "Whether user can manage payment settings.",
          "type": "boolean"
        },
        "orderManager": {
          "type": "boolean",
          "description": "Whether user is an order manager."
        }
      },
      "type": "object"
    },
    "OrdersUpdateLineItemShippingDetailsRequest": {
      "id": "OrdersUpdateLineItemShippingDetailsRequest",
      "type": "object",
      "properties": {
        "lineItemId": {
          "type": "string",
          "description": "The ID of the line item to set metadata. Either lineItemId or productId is required."
        },
        "deliverByDate": {
          "type": "string",
          "description": "Updated delivery by date, in ISO 8601 format. If not specified only ship by date is updated. Provided date should be within 1 year timeframe and can not be a date in the past."
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product to set metadata. This is the REST ID used in the products service. Either lineItemId or productId is required."
        },
        "operationId": {
          "description": "The ID of the operation. Unique across all operations for a given order.",
          "type": "string"
        },
        "shipByDate": {
          "description": "Updated ship by date, in ISO 8601 format. If not specified only deliver by date is updated. Provided date should be within 1 year timeframe and can not be a date in the past.",
          "type": "string"
        }
      }
    },
    "OrdersShipLineItemsRequest": {
      "properties": {
        "trackingId": {
          "type": "string",
          "description": "Deprecated. Please use shipmentInfo instead. The tracking ID for the shipment."
        },
        "lineItems": {
          "description": "Line items to ship.",
          "type": "array",
          "items": {
            "$ref": "OrderShipmentLineItemShipment"
          }
        },
        "shipmentInfos": {
          "type": "array",
          "description": "Shipment information. This field is repeated because a single line item can be shipped in several packages (and have several tracking IDs).",
          "items": {
            "$ref": "OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo"
          }
        },
        "shipmentGroupId": {
          "type": "string",
          "description": "ID of the shipment group. Required for orders that use the orderinvoices service."
        },
        "carrier": {
          "type": "string",
          "description": "Deprecated. Please use shipmentInfo instead. The carrier handling the shipment. See `shipments[].carrier` in the Orders resource representation for a list of acceptable values."
        },
        "operationId": {
          "type": "string",
          "description": "The ID of the operation. Unique across all operations for a given order."
        },
        "shipmentId": {
          "type": "string",
          "description": "Deprecated. Please use shipmentInfo instead. The ID of the shipment."
        }
      },
      "type": "object",
      "id": "OrdersShipLineItemsRequest"
    },
    "OrderPickupDetailsCollector": {
      "id": "OrderPickupDetailsCollector",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the person picking up the shipment."
        },
        "phoneNumber": {
          "type": "string",
          "description": "Phone number of the person picking up the shipment."
        }
      }
    },
    "OrderMerchantProvidedAnnotation": {
      "properties": {
        "key": {
          "type": "string",
          "description": "Key for additional merchant provided (as key-value pairs) annotation about the line item."
        },
        "value": {
          "type": "string",
          "description": "Value for additional merchant provided (as key-value pairs) annotation about the line item."
        }
      },
      "id": "OrderMerchantProvidedAnnotation",
      "type": "object"
    },
    "PostalCodeRange": {
      "properties": {
        "postalCodeRangeEnd": {
          "type": "string",
          "description": "A postal code or a pattern of the form `prefix*` denoting the inclusive upper bound of the range defining the area. It must have the same length as `postalCodeRangeBegin`: if `postalCodeRangeBegin` is a postal code then `postalCodeRangeEnd` must be a postal code too; if `postalCodeRangeBegin` is a pattern then `postalCodeRangeEnd` must be a pattern with the same prefix length. Optional: if not set, then the area is defined as being all the postal codes matching `postalCodeRangeBegin`."
        },
        "postalCodeRangeBegin": {
          "description": "A postal code or a pattern of the form `prefix*` denoting the inclusive lower bound of the range defining the area. Examples values: `\"94108\"`, `\"9410*\"`, `\"9*\"`. Required.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "PostalCodeRange"
    },
    "OrdersCustomBatchRequestEntryCreateTestReturnReturnItem": {
      "id": "OrdersCustomBatchRequestEntryCreateTestReturnReturnItem",
      "type": "object",
      "properties": {
        "quantity": {
          "format": "uint32",
          "type": "integer",
          "description": "Quantity that is returned."
        },
        "lineItemId": {
          "type": "string",
          "description": "The ID of the line item to return."
        }
      }
    },
    "OrdersInStoreRefundLineItemResponse": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersInStoreRefundLineItemResponse\"."
        },
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        }
      },
      "id": "OrdersInStoreRefundLineItemResponse"
    },
    "Amount": {
      "id": "Amount",
      "properties": {
        "pretax": {
          "description": "[required] Value before taxes.",
          "$ref": "Price"
        },
        "tax": {
          "$ref": "Price",
          "description": "[required] Tax value."
        }
      },
      "type": "object"
    },
    "ShipmentTrackingInfo": {
      "properties": {
        "carrier": {
          "description": "The shipping carrier that handles the package. Acceptable values are: - \"`boxtal`\" - \"`bpost`\" - \"`chronopost`\" - \"`colisPrive`\" - \"`colissimo`\" - \"`cxt`\" - \"`deliv`\" - \"`dhl`\" - \"`dpd`\" - \"`dynamex`\" - \"`eCourier`\" - \"`easypost`\" - \"`efw`\" - \"`fedex`\" - \"`fedexSmartpost`\" - \"`geodis`\" - \"`gls`\" - \"`googleCourier`\" - \"`gsx`\" - \"`jdLogistics`\" - \"`laPoste`\" - \"`lasership`\" - \"`manual`\" - \"`mpx`\" - \"`onTrac`\" - \"`other`\" - \"`tnt`\" - \"`uds`\" - \"`ups`\" - \"`usps`\" ",
          "type": "string"
        },
        "trackingNumber": {
          "description": "The tracking number for the package.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ShipmentTrackingInfo"
    },
    "Datafeed": {
      "type": "object",
      "properties": {
        "targets": {
          "description": "The targets this feed should apply to (country, language, destinations).",
          "items": {
            "$ref": "DatafeedTarget"
          },
          "type": "array"
        },
        "contentType": {
          "description": "Required. The type of data feed. For product inventory feeds, only feeds for local stores, not online stores, are supported. Acceptable values are: - \"`local products`\" - \"`product inventory`\" - \"`products`\" ",
          "type": "string"
        },
        "attributeLanguage": {
          "description": "The two-letter ISO 639-1 language in which the attributes are defined in the data feed.",
          "type": "string"
        },
        "intendedDestinations": {
          "description": "[DEPRECATED] Please use targets[].includedDestinations instead. The list of intended destinations (corresponds to checked check boxes in Merchant Center).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "contentLanguage": {
          "description": "[DEPRECATED] Please use targets[].language instead. The two-letter ISO 639-1 language of the items in the feed. Must be a valid language for `targetCountry`.",
          "type": "string"
        },
        "format": {
          "description": "Format of the feed file.",
          "$ref": "DatafeedFormat"
        },
        "id": {
          "description": "Required for update. The ID of the data feed.",
          "format": "int64",
          "type": "string"
        },
        "fileName": {
          "type": "string",
          "description": "Required. The filename of the feed. All feeds must have a unique file name."
        },
        "targetCountry": {
          "description": "[DEPRECATED] Please use targets[].country instead. The country where the items in the feed will be included in the search index, represented as a CLDR territory code.",
          "type": "string"
        },
        "fetchSchedule": {
          "description": "Fetch schedule for the feed file.",
          "$ref": "DatafeedFetchSchedule"
        },
        "name": {
          "description": "Required for insert. A descriptive name of the data feed.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#datafeed`\"",
          "type": "string"
        }
      },
      "description": "Datafeed configuration data.",
      "id": "Datafeed"
    },
    "DatafeedstatusesCustomBatchResponse": {
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#datafeedstatusesCustomBatchResponse\".",
          "type": "string"
        },
        "entries": {
          "type": "array",
          "description": "The result of the execution of the batch requests.",
          "items": {
            "$ref": "DatafeedstatusesCustomBatchResponseEntry"
          }
        }
      },
      "type": "object",
      "id": "DatafeedstatusesCustomBatchResponse"
    },
    "LiasettingsCustomBatchRequest": {
      "type": "object",
      "id": "LiasettingsCustomBatchRequest",
      "properties": {
        "entries": {
          "items": {
            "$ref": "LiasettingsCustomBatchRequestEntry"
          },
          "type": "array",
          "description": "The request entries to be processed in the batch."
        }
      }
    },
    "CustomGroup": {
      "id": "CustomGroup",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the group. Underscores will be replaced by spaces upon insertion."
        },
        "attributes": {
          "description": "The sub-attributes.",
          "items": {
            "$ref": "CustomAttribute"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ShippingsettingsGetSupportedPickupServicesResponse": {
      "type": "object",
      "properties": {
        "pickupServices": {
          "description": "A list of supported pickup services. May be empty.",
          "items": {
            "$ref": "PickupServicesPickupService"
          },
          "type": "array"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#shippingsettingsGetSupportedPickupServicesResponse\".",
          "type": "string"
        }
      },
      "id": "ShippingsettingsGetSupportedPickupServicesResponse"
    },
    "AccountCustomerService": {
      "id": "AccountCustomerService",
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": "Customer service email."
        },
        "phoneNumber": {
          "type": "string",
          "description": "Customer service phone number."
        },
        "url": {
          "description": "Customer service URL.",
          "type": "string"
        }
      }
    },
    "ShipmentInvoiceLineItemInvoice": {
      "id": "ShipmentInvoiceLineItemInvoice",
      "properties": {
        "productId": {
          "type": "string",
          "description": "ID of the product. This is the REST ID used in the products service. Either lineItemId or productId must be set."
        },
        "shipmentUnitIds": {
          "description": "[required] The shipment unit ID is assigned by the merchant and defines individual quantities within a line item. The same ID can be assigned to units that are the same while units that differ must be assigned a different ID (for example: free or promotional units).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lineItemId": {
          "type": "string",
          "description": "ID of the line item. Either lineItemId or productId must be set."
        },
        "unitInvoice": {
          "$ref": "UnitInvoice",
          "description": "[required] Invoice details for a single unit."
        }
      },
      "type": "object"
    },
    "PosInventory": {
      "description": "The absolute quantity of an item available at the given store.",
      "id": "PosInventory",
      "properties": {
        "targetCountry": {
          "type": "string",
          "description": "Required. The CLDR territory code for the item."
        },
        "itemId": {
          "type": "string",
          "description": "Required. A unique identifier for the item."
        },
        "quantity": {
          "description": "Required. The available quantity of the item.",
          "format": "int64",
          "type": "string"
        },
        "storeCode": {
          "description": "Required. The identifier of the merchant's store. Either a `storeCode` inserted via the API or the code of the store in Google My Business.",
          "type": "string"
        },
        "contentLanguage": {
          "type": "string",
          "description": "Required. The two-letter ISO 639-1 language code for the item."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#posInventory`\"",
          "type": "string"
        },
        "timestamp": {
          "description": "Required. The inventory timestamp, in ISO 8601 format.",
          "type": "string"
        },
        "price": {
          "description": "Required. The current price of the item.",
          "$ref": "Price"
        },
        "gtin": {
          "description": "Global Trade Item Number.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PostalCodeGroup": {
      "id": "PostalCodeGroup",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the postal code group, referred to in headers. Required.",
          "type": "string"
        },
        "country": {
          "description": "The CLDR territory code of the country the postal code group applies to. Required.",
          "type": "string"
        },
        "postalCodeRanges": {
          "type": "array",
          "description": "A range of postal codes. Required.",
          "items": {
            "$ref": "PostalCodeRange"
          }
        }
      }
    },
    "OrderLineItemProduct": {
      "id": "OrderLineItemProduct",
      "type": "object",
      "properties": {
        "offerId": {
          "type": "string",
          "description": "An identifier of the item."
        },
        "brand": {
          "description": "Brand of the item.",
          "type": "string"
        },
        "condition": {
          "description": "Condition or state of the item. Acceptable values are: - \"`new`\" - \"`refurbished`\" - \"`used`\" ",
          "type": "string"
        },
        "contentLanguage": {
          "description": "The two-letter ISO 639-1 language code for the item.",
          "type": "string"
        },
        "mpn": {
          "description": "Manufacturer Part Number (MPN) of the item.",
          "type": "string"
        },
        "fees": {
          "type": "array",
          "items": {
            "$ref": "OrderLineItemProductFee"
          },
          "description": "Associated fees at order creation time."
        },
        "id": {
          "description": "The REST ID of the product.",
          "type": "string"
        },
        "title": {
          "type": "string",
          "description": "The title of the product."
        },
        "channel": {
          "description": "The item's channel (online or local). Acceptable values are: - \"`local`\" - \"`online`\" ",
          "type": "string"
        },
        "price": {
          "description": "Price of the item.",
          "$ref": "Price"
        },
        "imageLink": {
          "description": "URL of an image of the item.",
          "type": "string"
        },
        "gtin": {
          "description": "Global Trade Item Number (GTIN) of the item.",
          "type": "string"
        },
        "shownImage": {
          "type": "string",
          "description": "URL to the cached image shown to the user when order was placed."
        },
        "itemGroupId": {
          "description": "Shared identifier for all variants of the same product.",
          "type": "string"
        },
        "targetCountry": {
          "type": "string",
          "description": "The CLDR territory // code of the target country of the product."
        },
        "variantAttributes": {
          "items": {
            "$ref": "OrderLineItemProductVariantAttribute"
          },
          "type": "array",
          "description": "Variant attributes for the item. These are dimensions of the product, such as color, gender, material, pattern, and size. You can find a comprehensive list of variant attributes here."
        }
      }
    },
    "AccountBusinessInformation": {
      "properties": {
        "address": {
          "description": "The address of the business.",
          "$ref": "AccountAddress"
        },
        "customerService": {
          "$ref": "AccountCustomerService",
          "description": "The customer service information of the business."
        },
        "phoneNumber": {
          "type": "string",
          "description": "The phone number of the business."
        }
      },
      "type": "object",
      "id": "AccountBusinessInformation"
    },
    "AccounttaxCustomBatchRequestEntry": {
      "id": "AccounttaxCustomBatchRequestEntry",
      "properties": {
        "accountId": {
          "description": "The ID of the account for which to get/update account tax settings.",
          "type": "string",
          "format": "uint64"
        },
        "method": {
          "description": "The method of the batch entry. Acceptable values are: - \"`get`\" - \"`update`\" ",
          "type": "string"
        },
        "accountTax": {
          "description": "The account tax settings to update. Only defined if the method is `update`.",
          "$ref": "AccountTax"
        },
        "batchId": {
          "type": "integer",
          "format": "uint32",
          "description": "An entry ID, unique within the batch request."
        },
        "merchantId": {
          "type": "string",
          "format": "uint64",
          "description": "The ID of the managing account."
        }
      },
      "type": "object",
      "description": "A batch entry encoding a single non-batch accounttax request."
    },
    "Promotion": {
      "type": "object",
      "id": "Promotion",
      "properties": {
        "promotionAmount": {
          "description": "[required] Amount of the promotion. The values here are the promotion applied to the unit price pretax and to the total of the tax amounts.",
          "$ref": "Amount"
        },
        "promotionId": {
          "type": "string",
          "description": "[required] ID of the promotion."
        }
      }
    },
    "OrderinvoicesCreateChargeInvoiceRequest": {
      "id": "OrderinvoicesCreateChargeInvoiceRequest",
      "properties": {
        "invoiceSummary": {
          "description": "[required] Invoice summary.",
          "$ref": "InvoiceSummary"
        },
        "operationId": {
          "type": "string",
          "description": "[required] The ID of the operation, unique across all operations for a given order."
        },
        "lineItemInvoices": {
          "description": "[required] Invoice details per line item.",
          "type": "array",
          "items": {
            "$ref": "ShipmentInvoiceLineItemInvoice"
          }
        },
        "invoiceId": {
          "description": "[required] The ID of the invoice.",
          "type": "string"
        },
        "shipmentGroupId": {
          "description": "[required] ID of the shipment group. It is assigned by the merchant in the `shipLineItems` method and is used to group multiple line items that have the same kind of shipping charges.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PosCustomBatchRequestEntry": {
      "id": "PosCustomBatchRequestEntry",
      "type": "object",
      "properties": {
        "store": {
          "$ref": "PosStore",
          "description": "The store information to submit. Set this only if the method is `insert`."
        },
        "sale": {
          "description": "The sale information to submit. Set this only if the method is `sale`.",
          "$ref": "PosSale"
        },
        "storeCode": {
          "type": "string",
          "description": "The store code. Set this only if the method is `delete` or `get`."
        },
        "method": {
          "description": "The method of the batch entry. Acceptable values are: - \"`delete`\" - \"`get`\" - \"`insert`\" - \"`inventory`\" - \"`sale`\" ",
          "type": "string"
        },
        "inventory": {
          "$ref": "PosInventory",
          "description": "The inventory to submit. Set this only if the method is `inventory`."
        },
        "merchantId": {
          "type": "string",
          "description": "The ID of the POS data provider.",
          "format": "uint64"
        },
        "targetMerchantId": {
          "type": "string",
          "description": "The ID of the account for which to get/submit data.",
          "format": "uint64"
        },
        "batchId": {
          "type": "integer",
          "format": "uint32",
          "description": "An entry ID, unique within the batch request."
        }
      }
    },
    "OrdersCancelLineItemRequest": {
      "type": "object",
      "id": "OrdersCancelLineItemRequest",
      "properties": {
        "amountTax": {
          "$ref": "Price",
          "description": "Tax amount that corresponds to cancellation amount in amountPretax. Optional, but if filled, then amountPretax must be set. Calculated automatically if not provided."
        },
        "lineItemId": {
          "type": "string",
          "description": "The ID of the line item to cancel. Either lineItemId or productId is required."
        },
        "reasonText": {
          "description": "The explanation of the reason.",
          "type": "string"
        },
        "quantity": {
          "type": "integer",
          "format": "uint32",
          "description": "The quantity to cancel."
        },
        "reason": {
          "description": "The reason for the cancellation. Acceptable values are: - \"`customerInitiatedCancel`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`noInventory`\" - \"`other`\" - \"`priceError`\" - \"`shippingPriceError`\" - \"`taxError`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" ",
          "type": "string"
        },
        "amountPretax": {
          "$ref": "Price",
          "description": "Amount to refund for the cancelation. Optional. If not set, Google will calculate the default based on the price and tax of the items involved. The amount must not be larger than the net amount left on the order."
        },
        "productId": {
          "description": "The ID of the product to cancel. This is the REST ID used in the products service. Either lineItemId or productId is required.",
          "type": "string"
        },
        "amount": {
          "description": "Deprecated. Please use amountPretax and amountTax instead.",
          "$ref": "Price"
        },
        "operationId": {
          "description": "The ID of the operation. Unique across all operations for a given order.",
          "type": "string"
        }
      }
    },
    "OrdersReturnLineItemResponse": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersReturnLineItemResponse\"."
        },
        "executionStatus": {
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" ",
          "type": "string"
        }
      },
      "id": "OrdersReturnLineItemResponse"
    },
    "OrdersCustomBatchRequestEntryUpdateShipment": {
      "id": "OrdersCustomBatchRequestEntryUpdateShipment",
      "properties": {
        "trackingId": {
          "type": "string",
          "description": "The tracking ID for the shipment. Not updated if missing."
        },
        "carrier": {
          "description": "The carrier handling the shipment. Not updated if missing. See `shipments[].carrier` in the Orders resource representation for a list of acceptable values.",
          "type": "string"
        },
        "shipmentId": {
          "description": "The ID of the shipment.",
          "type": "string"
        },
        "deliveryDate": {
          "type": "string",
          "description": "Date on which the shipment has been delivered, in ISO 8601 format. Optional and can be provided only if `status` is `delivered`."
        },
        "status": {
          "type": "string",
          "description": "New status for the shipment. Not updated if missing. Acceptable values are: - \"`delivered`\" - \"`undeliverable`\" - \"`readyForPickup`\" "
        }
      },
      "type": "object"
    },
    "OrdersListResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The token for the retrieval of the next page of orders."
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "Order"
          }
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersListResponse\"."
        }
      },
      "id": "OrdersListResponse"
    },
    "AccountStatusProducts": {
      "type": "object",
      "properties": {
        "destination": {
          "description": "The destination the data applies to.",
          "type": "string"
        },
        "itemLevelIssues": {
          "items": {
            "$ref": "AccountStatusItemLevelIssue"
          },
          "type": "array",
          "description": "List of item-level issues."
        },
        "country": {
          "type": "string",
          "description": "The country the data applies to."
        },
        "statistics": {
          "$ref": "AccountStatusStatistics",
          "description": "Aggregated product statistics."
        },
        "channel": {
          "type": "string",
          "description": "The channel the data applies to. Acceptable values are: - \"`local`\" - \"`online`\" "
        }
      },
      "id": "AccountStatusProducts"
    },
    "TransitTable": {
      "properties": {
        "rows": {
          "items": {
            "$ref": "TransitTableTransitTimeRow"
          },
          "type": "array"
        },
        "postalCodeGroupNames": {
          "type": "array",
          "description": "A list of postal group names. The last value can be `\"all other locations\"`. Example: `[\"zone 1\", \"zone 2\", \"all other locations\"]`. The referred postal code groups must match the delivery country of the service.",
          "items": {
            "type": "string"
          }
        },
        "transitTimeLabels": {
          "description": "A list of transit time labels. The last value can be `\"all other labels\"`. Example: `[\"food\", \"electronics\", \"all other labels\"]`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "TransitTable",
      "type": "object"
    },
    "ShippingsettingsGetSupportedHolidaysResponse": {
      "type": "object",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#shippingsettingsGetSupportedHolidaysResponse\".",
          "type": "string"
        },
        "holidays": {
          "description": "A list of holidays applicable for delivery guarantees. May be empty.",
          "items": {
            "$ref": "HolidaysHoliday"
          },
          "type": "array"
        }
      },
      "id": "ShippingsettingsGetSupportedHolidaysResponse"
    },
    "LiasettingsRequestInventoryVerificationResponse": {
      "type": "object",
      "id": "LiasettingsRequestInventoryVerificationResponse",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#liasettingsRequestInventoryVerificationResponse\"."
        }
      }
    },
    "AccountAddress": {
      "properties": {
        "locality": {
          "type": "string",
          "description": "City, town or commune. May also include dependent localities or sublocalities (e.g. neighborhoods or suburbs)."
        },
        "region": {
          "type": "string",
          "description": "Top-level administrative subdivision of the country. For example, a state like California (\"CA\") or a province like Quebec (\"QC\")."
        },
        "streetAddress": {
          "type": "string",
          "description": "Street-level part of the address."
        },
        "postalCode": {
          "type": "string",
          "description": "Postal code or ZIP (e.g. \"94043\")."
        },
        "country": {
          "description": "CLDR country code (e.g. \"US\"). This value cannot be set for a sub-account of an MCA. All MCA sub-accounts inherit the country of their parent MCA.",
          "type": "string"
        }
      },
      "id": "AccountAddress",
      "type": "object"
    },
    "ProductsListResponse": {
      "id": "ProductsListResponse",
      "properties": {
        "resources": {
          "items": {
            "$ref": "Product"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#productsListResponse\"."
        },
        "nextPageToken": {
          "description": "The token for the retrieval of the next page of products.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrdersCustomBatchRequestEntryReturnLineItem": {
      "type": "object",
      "id": "OrdersCustomBatchRequestEntryReturnLineItem",
      "properties": {
        "productId": {
          "description": "The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required.",
          "type": "string"
        },
        "lineItemId": {
          "description": "The ID of the line item to return. Either lineItemId or productId is required.",
          "type": "string"
        },
        "reasonText": {
          "type": "string",
          "description": "The explanation of the reason."
        },
        "reason": {
          "type": "string",
          "description": "The reason for the return. Acceptable values are: - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`other`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`qualityNotAsExpected`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" "
        },
        "quantity": {
          "type": "integer",
          "format": "uint32",
          "description": "The quantity to return."
        }
      }
    },
    "Headers": {
      "id": "Headers",
      "type": "object",
      "description": "A non-empty list of row or column headers for a table. Exactly one of `prices`, `weights`, `numItems`, `postalCodeGroupNames`, or `location` must be set.",
      "properties": {
        "numberOfItems": {
          "description": "A list of inclusive number of items upper bounds. The last value can be `\"infinity\"`. For example `[\"10\", \"50\", \"infinity\"]` represents the headers \"\u003c= 10 items\", \"\u003c= 50 items\", and \"\u003e 50 items\". Must be non-empty. Can only be set if all other fields are not set.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "locations": {
          "description": "A list of location ID sets. Must be non-empty. Can only be set if all other fields are not set.",
          "type": "array",
          "items": {
            "$ref": "LocationIdSet"
          }
        },
        "postalCodeGroupNames": {
          "items": {
            "type": "string"
          },
          "description": "A list of postal group names. The last value can be `\"all other locations\"`. Example: `[\"zone 1\", \"zone 2\", \"all other locations\"]`. The referred postal code groups must match the delivery country of the service. Must be non-empty. Can only be set if all other fields are not set.",
          "type": "array"
        },
        "prices": {
          "items": {
            "$ref": "Price"
          },
          "type": "array",
          "description": "A list of inclusive order price upper bounds. The last price's value can be `\"infinity\"`. For example `[{\"value\": \"10\", \"currency\": \"USD\"}, {\"value\": \"500\", \"currency\": \"USD\"}, {\"value\": \"infinity\", \"currency\": \"USD\"}]` represents the headers \"\u003c= $10\", \"\u003c= $500\", and \"\u003e $500\". All prices within a service must have the same currency. Must be non-empty. Can only be set if all other fields are not set."
        },
        "weights": {
          "description": "A list of inclusive order weight upper bounds. The last weight's value can be `\"infinity\"`. For example `[{\"value\": \"10\", \"unit\": \"kg\"}, {\"value\": \"50\", \"unit\": \"kg\"}, {\"value\": \"infinity\", \"unit\": \"kg\"}]` represents the headers \"\u003c= 10kg\", \"\u003c= 50kg\", and \"\u003e 50kg\". All weights within a service must have the same unit. Must be non-empty. Can only be set if all other fields are not set.",
          "items": {
            "$ref": "Weight"
          },
          "type": "array"
        }
      }
    },
    "InventorySetRequest": {
      "type": "object",
      "properties": {
        "instoreProductLocation": {
          "description": "The instore product location. Supported only for local products.",
          "type": "string"
        },
        "customLabel3": {
          "type": "string",
          "description": "Custom label 3 for custom grouping of items in a Shopping campaign. Only supported for online products."
        },
        "customLabel2": {
          "description": "Custom label 2 for custom grouping of items in a Shopping campaign. Only supported for online products.",
          "type": "string"
        },
        "customLabel4": {
          "type": "string",
          "description": "Custom label 3 for custom grouping of items in a Shopping campaign. Only supported for online products."
        },
        "loyaltyPoints": {
          "$ref": "LoyaltyPoints",
          "description": "Loyalty points that users receive after purchasing the item. Japan only."
        },
        "availability": {
          "description": "The availability of the product. Acceptable values are: - \"`in stock`\" - \"`out of stock`\" - \"`preorder`\" ",
          "type": "string"
        },
        "customLabel0": {
          "description": "Custom label 0 for custom grouping of items in a Shopping campaign. Only supported for online products.",
          "type": "string"
        },
        "customLabel1": {
          "description": "Custom label 1 for custom grouping of items in a Shopping campaign. Only supported for online products.",
          "type": "string"
        },
        "price": {
          "$ref": "Price",
          "description": "The price of the product."
        },
        "pickup": {
          "$ref": "InventoryPickup",
          "description": "Store pickup information. Only supported for local inventory. Not setting `pickup` means \"don't update\" while setting it to the empty value (`{}` in JSON) means \"delete\". Otherwise, `pickupMethod` and `pickupSla` must be set together, unless `pickupMethod` is \"not supported\"."
        },
        "salePriceEffectiveDate": {
          "description": "A date range represented by a pair of ISO 8601 dates separated by a space, comma, or slash. Both dates might be specified as 'null' if undecided.",
          "type": "string"
        },
        "quantity": {
          "format": "uint32",
          "description": "The quantity of the product. Must be equal to or greater than zero. Supported only for local products.",
          "type": "integer"
        },
        "sellOnGoogleQuantity": {
          "type": "integer",
          "description": "The quantity of the product that is available for selling on Google. Supported only for online products.",
          "format": "uint32"
        },
        "salePrice": {
          "description": "The sale price of the product. Mandatory if `sale_price_effective_date` is defined.",
          "$ref": "Price"
        },
        "installment": {
          "description": "Number and amount of installments to pay for an item. Brazil only.",
          "$ref": "Installment"
        }
      },
      "id": "InventorySetRequest"
    },
    "OrdersRefundResponse": {
      "type": "object",
      "id": "OrdersRefundResponse",
      "properties": {
        "executionStatus": {
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" ",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersRefundResponse\"."
        }
      }
    },
    "OrdersReturnRefundLineItemRequest": {
      "type": "object",
      "properties": {
        "productId": {
          "description": "The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required.",
          "type": "string"
        },
        "operationId": {
          "type": "string",
          "description": "The ID of the operation. Unique across all operations for a given order."
        },
        "quantity": {
          "format": "uint32",
          "type": "integer",
          "description": "The quantity to return and refund."
        },
        "reasonText": {
          "type": "string",
          "description": "The explanation of the reason."
        },
        "amountPretax": {
          "$ref": "Price",
          "description": "The amount that is refunded. If omitted, refundless return is assumed (same as calling returnLineItem method)."
        },
        "reason": {
          "type": "string",
          "description": "The reason for the return. Acceptable values are: - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`other`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`qualityNotAsExpected`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" "
        },
        "amountTax": {
          "$ref": "Price",
          "description": "Tax amount that corresponds to refund amount in amountPretax. Optional, but if filled, then amountPretax must be set. Calculated automatically if not provided."
        },
        "lineItemId": {
          "description": "The ID of the line item to return. Either lineItemId or productId is required.",
          "type": "string"
        }
      },
      "id": "OrdersReturnRefundLineItemRequest"
    },
    "Order": {
      "properties": {
        "placedDate": {
          "description": "The date when the order was placed, in ISO 8601 format.",
          "type": "string"
        },
        "lineItems": {
          "type": "array",
          "description": "Line items that are ordered.",
          "items": {
            "$ref": "OrderLineItem"
          }
        },
        "id": {
          "type": "string",
          "description": "The REST ID of the order. Globally unique."
        },
        "promotions": {
          "items": {
            "$ref": "OrderLegacyPromotion"
          },
          "description": "The details of the merchant provided promotions applied to the order. To determine which promotions apply to which products, check the `Promotions[].Benefits[].OfferIds` field against the `LineItems[].Product.OfferId` field for each promotion. If a promotion is applied to more than 1 `offerId`, divide the discount value by the number of affected offers to determine how much discount to apply to each `offerId`. Examples: 1. To calculate the line item level discount for a single specific item: For each promotion, subtract the `Promotions[].Benefits[].Discount.value` amount from the `LineItems[].Price.value`. 2. To calculate the line item level discount for multiple quantity of a specific item: For each promotion, divide the `Promotions[].Benefits[].Discount.value` by the quantity of products and substract it from `LineItems[].Product.Price.value` for each quantity item. Only 1 promotion can be applied to an offerId in a given order. To refund an item which had a promotion applied to it, make sure to refund the amount after first subtracting the promotion discount from the item price. More details about the program are here.",
          "type": "array"
        },
        "netAmount": {
          "$ref": "Price",
          "description": "The net amount for the order. For example, if an order was originally for a grand total of $100 and a refund was issued for $20, the net amount will be $80."
        },
        "merchantOrderId": {
          "description": "Merchant-provided ID of the order.",
          "type": "string"
        },
        "merchantId": {
          "type": "string",
          "format": "uint64"
        },
        "taxCollector": {
          "type": "string",
          "description": "The party responsible for collecting and remitting taxes. Acceptable values are: - \"`marketplaceFacilitator`\" - \"`merchant`\" "
        },
        "deliveryDetails": {
          "$ref": "OrderDeliveryDetails",
          "description": "Delivery details for shipments of type `delivery`."
        },
        "paymentMethod": {
          "$ref": "OrderPaymentMethod",
          "description": "The details of the payment method."
        },
        "paymentStatus": {
          "description": "The status of the payment. Acceptable values are: - \"`paymentCaptured`\" - \"`paymentRejected`\" - \"`paymentSecured`\" - \"`pendingAuthorization`\" ",
          "type": "string"
        },
        "shippingOption": {
          "type": "string",
          "description": "Deprecated. Shipping details are provided with line items instead. Acceptable values are: - \"`economy`\" - \"`expedited`\" - \"`oneDay`\" - \"`sameDay`\" - \"`standard`\" - \"`twoDay`\" "
        },
        "pickupDetails": {
          "description": "Pickup details for shipments of type `pickup`.",
          "$ref": "OrderPickupDetails"
        },
        "shipments": {
          "items": {
            "$ref": "OrderShipment"
          },
          "description": "Shipments of the order.",
          "type": "array"
        },
        "acknowledged": {
          "description": "Whether the order was acknowledged.",
          "type": "boolean"
        },
        "shippingCost": {
          "description": "The total cost of shipping for all items.",
          "$ref": "Price"
        },
        "shippingCostTax": {
          "$ref": "Price",
          "description": "The tax for the total shipping cost."
        },
        "status": {
          "description": "The status of the order. Acceptable values are: - \"`canceled`\" - \"`delivered`\" - \"`inProgress`\" - \"`partiallyDelivered`\" - \"`partiallyReturned`\" - \"`partiallyShipped`\" - \"`pendingShipment`\" - \"`returned`\" - \"`shipped`\" ",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#order`\"",
          "type": "string"
        },
        "channelType": {
          "description": "Deprecated. Acceptable values are: - \"`googleExpress`\" - \"`purchasesOnGoogle`\" ",
          "type": "string"
        },
        "customer": {
          "description": "The details of the customer who placed the order.",
          "$ref": "OrderCustomer"
        },
        "refunds": {
          "description": "Refunds for the order.",
          "items": {
            "$ref": "OrderRefund"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "Order",
      "description": "Order. Production access (all methods) requires the order manager role. Sandbox access does not."
    },
    "LocationIdSet": {
      "type": "object",
      "id": "LocationIdSet",
      "properties": {
        "locationIds": {
          "type": "array",
          "description": "A non-empty list of location IDs. They must all be of the same location type (e.g., state).",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OrderLegacyPromotion": {
      "type": "object",
      "id": "OrderLegacyPromotion",
      "properties": {
        "effectiveDates": {
          "type": "string",
          "description": "The date and time frame when the promotion is active and ready for validation review. Note that the promotion live time may be delayed for a few hours due to the validation review. Start date and end date are separated by a forward slash (/). The start date is specified by the format (YYYY-MM-DD), followed by the letter ?T?, the time of the day when the sale starts (in Greenwich Mean Time, GMT), followed by an expression of the time zone for the sale. The end date is in the same format."
        },
        "genericRedemptionCode": {
          "description": "Optional. The text code that corresponds to the promotion when applied on the retailer?s website.",
          "type": "string"
        },
        "benefits": {
          "items": {
            "$ref": "OrderLegacyPromotionBenefit"
          },
          "type": "array"
        },
        "redemptionChannel": {
          "type": "string",
          "description": "Indicates that the promotion is valid online. Acceptable values are: - \"`online`\" "
        },
        "longTitle": {
          "description": "The full title of the promotion.",
          "type": "string"
        },
        "productApplicability": {
          "type": "string",
          "description": "Whether the promotion is applicable to all products or only specific products. Acceptable values are: - \"`allProducts`\" - \"`specificProducts`\" "
        },
        "id": {
          "type": "string",
          "description": "The unique ID of the promotion."
        }
      }
    },
    "OrdersCustomBatchRequestEntryCancelLineItem": {
      "id": "OrdersCustomBatchRequestEntryCancelLineItem",
      "properties": {
        "amountTax": {
          "$ref": "Price",
          "description": "Tax amount that corresponds to cancellation amount in amountPretax. Optional, but if filled, then amountPretax must be set. Calculated automatically if not provided."
        },
        "lineItemId": {
          "description": "The ID of the line item to cancel. Either lineItemId or productId is required.",
          "type": "string"
        },
        "reason": {
          "description": "The reason for the cancellation. Acceptable values are: - \"`customerInitiatedCancel`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`noInventory`\" - \"`other`\" - \"`priceError`\" - \"`shippingPriceError`\" - \"`taxError`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" ",
          "type": "string"
        },
        "reasonText": {
          "type": "string",
          "description": "The explanation of the reason."
        },
        "quantity": {
          "description": "The quantity to cancel.",
          "format": "uint32",
          "type": "integer"
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product to cancel. This is the REST ID used in the products service. Either lineItemId or productId is required."
        },
        "amount": {
          "description": "Deprecated. Please use amountPretax and amountTax instead.",
          "$ref": "Price"
        },
        "amountPretax": {
          "description": "Amount to refund for the cancelation. Optional. If not set, Google will calculate the default based on the price and tax of the items involved. The amount must not be larger than the net amount left on the order.",
          "$ref": "Price"
        }
      },
      "type": "object"
    },
    "ShippingsettingsCustomBatchRequestEntry": {
      "id": "ShippingsettingsCustomBatchRequestEntry",
      "type": "object",
      "description": "A batch entry encoding a single non-batch shippingsettings request.",
      "properties": {
        "shippingSettings": {
          "$ref": "ShippingSettings",
          "description": "The account shipping settings to update. Only defined if the method is `update`."
        },
        "batchId": {
          "type": "integer",
          "description": "An entry ID, unique within the batch request.",
          "format": "uint32"
        },
        "merchantId": {
          "description": "The ID of the managing account.",
          "format": "uint64",
          "type": "string"
        },
        "method": {
          "type": "string",
          "description": "The method of the batch entry. Acceptable values are: - \"`get`\" - \"`update`\" "
        },
        "accountId": {
          "description": "The ID of the account for which to get/update account shipping settings.",
          "format": "uint64",
          "type": "string"
        }
      }
    },
    "OrdersAdvanceTestOrderResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersAdvanceTestOrderResponse\"."
        }
      },
      "id": "OrdersAdvanceTestOrderResponse",
      "type": "object"
    },
    "InventoryCustomBatchRequest": {
      "type": "object",
      "id": "InventoryCustomBatchRequest",
      "properties": {
        "entries": {
          "items": {
            "$ref": "InventoryCustomBatchRequestEntry"
          },
          "type": "array",
          "description": "The request entries to be processed in the batch."
        }
      }
    },
    "Installment": {
      "id": "Installment",
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "Price",
          "description": "The amount the buyer has to pay per month."
        },
        "months": {
          "description": "The number of installments the buyer has to pay.",
          "format": "int64",
          "type": "string"
        }
      }
    },
    "AccountsCustomBatchResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#accountsCustomBatchResponse\"."
        },
        "entries": {
          "items": {
            "$ref": "AccountsCustomBatchResponseEntry"
          },
          "description": "The result of the execution of the batch requests.",
          "type": "array"
        }
      },
      "id": "AccountsCustomBatchResponse",
      "type": "object"
    },
    "CarriersCarrier": {
      "properties": {
        "name": {
          "description": "The name of the carrier (e.g., `\"UPS\"`). Always present.",
          "type": "string"
        },
        "country": {
          "description": "The CLDR country code of the carrier (e.g., \"US\"). Always present.",
          "type": "string"
        },
        "services": {
          "description": "A list of supported services (e.g., `\"ground\"`) for that carrier. Contains at least one service.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "CarriersCarrier"
    },
    "UnitInvoiceAdditionalCharge": {
      "type": "object",
      "id": "UnitInvoiceAdditionalCharge",
      "properties": {
        "additionalChargePromotions": {
          "type": "array",
          "description": "Deprecated.",
          "items": {
            "$ref": "Promotion"
          }
        },
        "type": {
          "type": "string",
          "description": "[required] Type of the additional charge. Acceptable values are: - \"`shipping`\" "
        },
        "additionalChargeAmount": {
          "description": "[required] Amount of the additional charge.",
          "$ref": "Amount"
        }
      }
    },
    "AccountStatusStatistics": {
      "id": "AccountStatusStatistics",
      "type": "object",
      "properties": {
        "pending": {
          "format": "int64",
          "type": "string",
          "description": "Number of pending offers."
        },
        "active": {
          "format": "int64",
          "type": "string",
          "description": "Number of active offers."
        },
        "expiring": {
          "format": "int64",
          "description": "Number of expiring offers.",
          "type": "string"
        },
        "disapproved": {
          "format": "int64",
          "type": "string",
          "description": "Number of disapproved offers."
        }
      }
    },
    "HolidayCutoff": {
      "id": "HolidayCutoff",
      "properties": {
        "visibleFromDate": {
          "type": "string",
          "description": "Date on which the deadline will become visible to consumers in ISO 8601 format. E.g. \"2016-10-31\" for 31st October 2016. Required."
        },
        "deadlineHour": {
          "format": "uint32",
          "type": "integer",
          "description": "Hour of the day on the deadline date until which the order has to be placed to qualify for the delivery guarantee. Possible values are: 0 (midnight), 1, ..., 12 (noon), 13, ..., 23. Required."
        },
        "deadlineTimezone": {
          "description": "Timezone identifier for the deadline hour. A list of identifiers can be found in the AdWords API documentation. E.g. \"Europe/Zurich\". Required.",
          "type": "string"
        },
        "holidayId": {
          "description": "Unique identifier for the holiday. Required.",
          "type": "string"
        },
        "deadlineDate": {
          "type": "string",
          "description": "Date of the order deadline, in ISO 8601 format. E.g. \"2016-11-29\" for 29th November 2016. Required."
        }
      },
      "type": "object"
    },
    "AccountYouTubeChannelLink": {
      "properties": {
        "status": {
          "description": "Status of the link between this Merchant Center account and the YouTube channel. Upon retrieval, it represents the actual status of the link and can be either `active` if it was approved in YT Creator Studio or `pending` if it's pending approval. Upon insertion, it represents the *intended* status of the link. Re-uploading a link with status `active` when it's still pending or with status `pending` when it's already active will have no effect: the status will remain unchanged. Re-uploading a link with deprecated status `inactive` is equivalent to not submitting the link at all and will delete the link if it was active or cancel the link request if it was pending.",
          "type": "string"
        },
        "channelId": {
          "type": "string",
          "description": "Channel ID."
        }
      },
      "type": "object",
      "id": "AccountYouTubeChannelLink"
    },
    "DeliveryTime": {
      "id": "DeliveryTime",
      "type": "object",
      "properties": {
        "minHandlingTimeInDays": {
          "format": "uint32",
          "type": "integer",
          "description": "Minimum number of business days spent before an order is shipped. 0 means same day shipped, 1 means next day shipped."
        },
        "transitTimeTable": {
          "$ref": "TransitTable",
          "description": "Transit time table, number of business days spent in transit based on row and column dimensions. Either `{min,max}TransitTimeInDays` or `transitTimeTable` can be set, but not both."
        },
        "transitBusinessDayConfig": {
          "$ref": "BusinessDayConfig",
          "description": "The business days during which orders can be in-transit. If not provided, Monday to Friday business days will be assumed."
        },
        "handlingBusinessDayConfig": {
          "description": "The business days during which orders can be handled. If not provided, Monday to Friday business days will be assumed.",
          "$ref": "BusinessDayConfig"
        },
        "maxTransitTimeInDays": {
          "type": "integer",
          "description": "Maximum number of business days that is spent in transit. 0 means same day delivery, 1 means next day delivery. Must be greater than or equal to `minTransitTimeInDays`.",
          "format": "uint32"
        },
        "cutoffTime": {
          "$ref": "CutoffTime",
          "description": "Business days cutoff time definition. If not configured the cutoff time will be defaulted to 8AM PST."
        },
        "maxHandlingTimeInDays": {
          "format": "uint32",
          "type": "integer",
          "description": "Maximum number of business days spent before an order is shipped. 0 means same day shipped, 1 means next day shipped. Must be greater than or equal to `minHandlingTimeInDays`."
        },
        "holidayCutoffs": {
          "type": "array",
          "items": {
            "$ref": "HolidayCutoff"
          },
          "description": "Holiday cutoff definitions. If configured, they specify order cutoff times for holiday-specific shipping."
        },
        "minTransitTimeInDays": {
          "type": "integer",
          "format": "uint32",
          "description": "Minimum number of business days that is spent in transit. 0 means same day delivery, 1 means next day delivery. Either `{min,max}TransitTimeInDays` or `transitTimeTable` must be set, but not both."
        }
      }
    },
    "AccountsCustomBatchRequestEntry": {
      "description": "A batch entry encoding a single non-batch accounts request.",
      "id": "AccountsCustomBatchRequestEntry",
      "properties": {
        "force": {
          "description": "Whether the account should be deleted if the account has offers. Only applicable if the method is `delete`.",
          "type": "boolean"
        },
        "labelIds": {
          "items": {
            "type": "string",
            "format": "uint64"
          },
          "description": "Label IDs for the 'updatelabels' request.",
          "type": "array"
        },
        "overwrite": {
          "type": "boolean",
          "description": "Only applicable if the method is `claimwebsite`. Indicates whether or not to take the claim from another account in case there is a conflict."
        },
        "accountId": {
          "type": "string",
          "description": "The ID of the targeted account. Only defined if the method is not `insert`.",
          "format": "uint64"
        },
        "linkRequest": {
          "$ref": "AccountsCustomBatchRequestEntryLinkRequest",
          "description": "Details about the `link` request."
        },
        "merchantId": {
          "format": "uint64",
          "type": "string",
          "description": "The ID of the managing account."
        },
        "method": {
          "description": "The method of the batch entry. Acceptable values are: - \"`claimWebsite`\" - \"`delete`\" - \"`get`\" - \"`insert`\" - \"`link`\" - \"`update`\" ",
          "type": "string"
        },
        "batchId": {
          "format": "uint32",
          "description": "An entry ID, unique within the batch request.",
          "type": "integer"
        },
        "account": {
          "$ref": "Account",
          "description": "The account to create or update. Only defined if the method is `insert` or `update`."
        }
      },
      "type": "object"
    },
    "ProductUnitPricingBaseMeasure": {
      "properties": {
        "unit": {
          "type": "string",
          "description": "The unit of the denominator."
        },
        "value": {
          "type": "string",
          "description": "The denominator of the unit price.",
          "format": "int64"
        }
      },
      "id": "ProductUnitPricingBaseMeasure",
      "type": "object"
    },
    "OrdersCustomBatchResponseEntry": {
      "type": "object",
      "id": "OrdersCustomBatchResponseEntry",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#ordersCustomBatchResponseEntry`\"",
          "type": "string"
        },
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Only defined if 1. the request was successful; and 2. the method is not `get`, `getByMerchantOrderId`, or one of the test methods. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        },
        "errors": {
          "$ref": "Errors",
          "description": "A list of errors defined if and only if the request failed."
        },
        "order": {
          "description": "The retrieved order. Only defined if the method is `get` and if the request was successful.",
          "$ref": "Order"
        },
        "batchId": {
          "description": "The ID of the request entry this entry responds to.",
          "format": "uint32",
          "type": "integer"
        }
      }
    },
    "ProductstatusesCustomBatchResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#productstatusesCustomBatchResponse\"."
        },
        "entries": {
          "type": "array",
          "items": {
            "$ref": "ProductstatusesCustomBatchResponseEntry"
          },
          "description": "The result of the execution of the batch requests."
        }
      },
      "id": "ProductstatusesCustomBatchResponse",
      "type": "object"
    },
    "LiasettingsSetPosDataProviderResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#liasettingsSetPosDataProviderResponse\"."
        }
      },
      "id": "LiasettingsSetPosDataProviderResponse",
      "type": "object"
    },
    "OrdersAcknowledgeRequest": {
      "id": "OrdersAcknowledgeRequest",
      "properties": {
        "operationId": {
          "description": "The ID of the operation. Unique across all operations for a given order.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrdersCreateTestReturnRequest": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "description": "Returned items.",
          "items": {
            "$ref": "OrdersCustomBatchRequestEntryCreateTestReturnReturnItem"
          }
        }
      },
      "id": "OrdersCreateTestReturnRequest"
    },
    "CustomerReturnReason": {
      "id": "CustomerReturnReason",
      "type": "object",
      "properties": {
        "reasonCode": {
          "type": "string",
          "description": "Code of the return reason. Acceptable values are: - \"`betterPriceFound`\" - \"`changedMind`\" - \"`damagedOrDefectiveItem`\" - \"`didNotMatchDescription`\" - \"`doesNotFit`\" - \"`expiredItem`\" - \"`incorrectItemReceived`\" - \"`noLongerNeeded`\" - \"`notSpecified`\" - \"`orderedWrongItem`\" - \"`other`\" - \"`qualityNotExpected`\" - \"`receivedTooLate`\" - \"`undeliverable`\" "
        },
        "description": {
          "type": "string",
          "description": "Description of the reason."
        }
      }
    },
    "OrderLineItemShippingDetailsMethod": {
      "id": "OrderLineItemShippingDetailsMethod",
      "type": "object",
      "properties": {
        "maxDaysInTransit": {
          "format": "uint32",
          "type": "integer",
          "description": "Required. Maximum transit time."
        },
        "minDaysInTransit": {
          "format": "uint32",
          "description": "Required. Minimum transit time.",
          "type": "integer"
        },
        "carrier": {
          "type": "string",
          "description": "The carrier for the shipping. Optional. See `shipments[].carrier` for a list of acceptable values."
        },
        "methodName": {
          "type": "string",
          "description": "Required. The name of the shipping method."
        }
      }
    },
    "TestOrderCustomerMarketingRightsInfo": {
      "properties": {
        "lastUpdatedTimestamp": {
          "description": "Timestamp when last time marketing preference was updated. Could be empty, if user wasn't offered a selection yet.",
          "type": "string"
        },
        "explicitMarketingPreference": {
          "type": "string",
          "description": "Last know user use selection regards marketing preferences. In certain cases selection might not be known, so this field would be empty. Acceptable values are: - \"`denied`\" - \"`granted`\" "
        }
      },
      "type": "object",
      "id": "TestOrderCustomerMarketingRightsInfo"
    },
    "OrdersSetLineItemMetadataResponse": {
      "id": "OrdersSetLineItemMetadataResponse",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersSetLineItemMetadataResponse\".",
          "type": "string"
        },
        "executionStatus": {
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" ",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PosInventoryRequest": {
      "id": "PosInventoryRequest",
      "properties": {
        "price": {
          "$ref": "Price",
          "description": "Required. The current price of the item."
        },
        "contentLanguage": {
          "description": "Required. The two-letter ISO 639-1 language code for the item.",
          "type": "string"
        },
        "targetCountry": {
          "type": "string",
          "description": "Required. The CLDR territory code for the item."
        },
        "gtin": {
          "type": "string",
          "description": "Global Trade Item Number."
        },
        "quantity": {
          "description": "Required. The available quantity of the item.",
          "type": "string",
          "format": "int64"
        },
        "itemId": {
          "description": "Required. A unique identifier for the item.",
          "type": "string"
        },
        "storeCode": {
          "description": "Required. The identifier of the merchant's store. Either a `storeCode` inserted via the API or the code of the store in Google My Business.",
          "type": "string"
        },
        "timestamp": {
          "description": "Required. The inventory timestamp, in ISO 8601 format.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Account": {
      "description": "Account data. After the creation of a new account it may take a few minutes before it is fully operational. The methods delete, insert, and update require the admin role.",
      "properties": {
        "sellerId": {
          "type": "string",
          "description": "Client-specific, locally-unique, internal ID for the child account."
        },
        "businessInformation": {
          "$ref": "AccountBusinessInformation",
          "description": "The business information of the account."
        },
        "adultContent": {
          "type": "boolean",
          "description": "Indicates whether the merchant sells adult content."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#account`\"",
          "type": "string"
        },
        "websiteUrl": {
          "type": "string",
          "description": "The merchant's website."
        },
        "googleMyBusinessLink": {
          "$ref": "AccountGoogleMyBusinessLink",
          "description": "The GMB account which is linked or in the process of being linked with the Merchant Center account."
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "AccountUser"
          },
          "description": "Users with access to the account. Every account (except for subaccounts) must have at least one admin user."
        },
        "name": {
          "type": "string",
          "description": "Required. Display name for the account."
        },
        "adwordsLinks": {
          "description": "List of linked AdWords accounts that are active or pending approval. To create a new link request, add a new link with status `active` to the list. It will remain in a `pending` state until approved or rejected either in the AdWords interface or through the AdWords API. To delete an active link, or to cancel a link request, remove it from the list.",
          "type": "array",
          "items": {
            "$ref": "AccountAdwordsLink"
          }
        },
        "reviewsUrl": {
          "type": "string",
          "description": "[DEPRECATED] This field is never returned and will be ignored if provided."
        },
        "youtubeChannelLinks": {
          "type": "array",
          "description": "List of linked YouTube channels that are active or pending approval. To create a new link request, add a new link with status `active` to the list. It will remain in a `pending` state until approved or rejected in the YT Creator Studio interface. To delete an active link, or to cancel a link request, remove it from the list.",
          "items": {
            "$ref": "AccountYouTubeChannelLink"
          }
        },
        "id": {
          "format": "uint64",
          "description": "Required for update. Merchant Center account ID.",
          "type": "string"
        }
      },
      "id": "Account",
      "type": "object"
    },
    "InventoryPickup": {
      "id": "InventoryPickup",
      "type": "object",
      "properties": {
        "pickupMethod": {
          "type": "string",
          "description": "Whether store pickup is available for this offer and whether the pickup option should be shown as buy, reserve, or not supported. Only supported for local inventory. Unless the value is \"not supported\", must be submitted together with `pickupSla`. Acceptable values are: - \"`buy`\" - \"`not supported`\" - \"`reserve`\" - \"`ship to store`\" "
        },
        "pickupSla": {
          "description": "The expected date that an order will be ready for pickup, relative to when the order is placed. Only supported for local inventory. Must be submitted together with `pickupMethod`. Acceptable values are: - \"`five day`\" - \"`four day`\" - \"`multi day`\" - \"`multi week`\" - \"`next day`\" - \"`same day`\" - \"`seven day`\" - \"`six day`\" - \"`three day`\" - \"`two day`\" ",
          "type": "string"
        }
      }
    },
    "AccounttaxCustomBatchResponse": {
      "id": "AccounttaxCustomBatchResponse",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#accounttaxCustomBatchResponse\".",
          "type": "string"
        },
        "entries": {
          "type": "array",
          "description": "The result of the execution of the batch requests.",
          "items": {
            "$ref": "AccounttaxCustomBatchResponseEntry"
          }
        }
      }
    },
    "MerchantOrderReturn": {
      "id": "MerchantOrderReturn",
      "description": "Order return. Production access (all methods) requires the order manager role. Sandbox access does not.",
      "type": "object",
      "properties": {
        "orderId": {
          "type": "string",
          "description": "Google order ID."
        },
        "orderReturnId": {
          "description": "Order return ID generated by Google.",
          "type": "string"
        },
        "returnShipments": {
          "description": "Shipments of the return.",
          "type": "array",
          "items": {
            "$ref": "ReturnShipment"
          }
        },
        "merchantOrderId": {
          "type": "string",
          "description": "Merchant defined order ID."
        },
        "returnItems": {
          "items": {
            "$ref": "MerchantOrderReturnItem"
          },
          "description": "Items of the return.",
          "type": "array"
        },
        "creationDate": {
          "type": "string",
          "description": "The date of creation of the return, in ISO 8601 format."
        }
      }
    },
    "OrdersCreateTestOrderRequest": {
      "id": "OrdersCreateTestOrderRequest",
      "type": "object",
      "properties": {
        "testOrder": {
          "$ref": "TestOrder",
          "description": "The test order to create."
        },
        "country": {
          "type": "string",
          "description": "The CLDR territory code of the country of the test order to create. Affects the currency and addresses of orders created via `template_name`, or the addresses of orders created via `test_order`. Acceptable values are: - \"`US`\" - \"`FR`\" Defaults to `US`."
        },
        "templateName": {
          "description": "The test order template to use. Specify as an alternative to `testOrder` as a shortcut for retrieving a template and then creating an order using that template. Acceptable values are: - \"`template1`\" - \"`template1a`\" - \"`template1b`\" - \"`template2`\" - \"`template3`\" ",
          "type": "string"
        }
      }
    },
    "AccountsAuthInfoResponse": {
      "id": "AccountsAuthInfoResponse",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#accountsAuthInfoResponse\"."
        },
        "accountIdentifiers": {
          "type": "array",
          "items": {
            "$ref": "AccountIdentifier"
          },
          "description": "The account identifiers corresponding to the authenticated user. - For an individual account: only the merchant ID is defined - For an aggregator: only the aggregator ID is defined - For a subaccount of an MCA: both the merchant ID and the aggregator ID are defined. "
        }
      },
      "type": "object"
    },
    "OrderReportTransaction": {
      "id": "OrderReportTransaction",
      "properties": {
        "disbursementId": {
          "description": "The ID of the disbursement.",
          "type": "string"
        },
        "productAmount": {
          "description": "Total amount for the items.",
          "$ref": "Amount"
        },
        "merchantOrderId": {
          "type": "string",
          "description": "Merchant-provided ID of the order."
        },
        "disbursementCreationDate": {
          "type": "string",
          "description": "The date the disbursement was created, in ISO 8601 format."
        },
        "orderId": {
          "description": "The ID of the order.",
          "type": "string"
        },
        "productAmountWithRemittedTax": {
          "$ref": "ProductAmount",
          "description": "Total amount with remitted tax for the items."
        },
        "merchantId": {
          "type": "string",
          "description": "The ID of the managing account.",
          "format": "uint64"
        },
        "disbursementAmount": {
          "$ref": "Price",
          "description": "The disbursement amount."
        },
        "disbursementDate": {
          "description": "The date the disbursement was initiated, in ISO 8601 format.",
          "type": "string"
        },
        "transactionDate": {
          "description": "The date of the transaction, in ISO 8601 format.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrderCancellation": {
      "type": "object",
      "id": "OrderCancellation",
      "properties": {
        "reasonText": {
          "description": "The explanation of the reason.",
          "type": "string"
        },
        "quantity": {
          "type": "integer",
          "description": "The quantity that was canceled.",
          "format": "uint32"
        },
        "actor": {
          "description": "The actor that created the cancellation. Acceptable values are: - \"`customer`\" - \"`googleBot`\" - \"`googleCustomerService`\" - \"`googlePayments`\" - \"`googleSabre`\" - \"`merchant`\" ",
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "description": "Date on which the cancellation has been created, in ISO 8601 format."
        },
        "reason": {
          "type": "string",
          "description": "The reason for the cancellation. Orders that are canceled with a noInventory reason will lead to the removal of the product from Shopping Actions until you make an update to that product. This will not affect your Shopping ads. Acceptable values are: - \"`autoPostInternal`\" - \"`autoPostInvalidBillingAddress`\" - \"`autoPostNoInventory`\" - \"`autoPostPriceError`\" - \"`autoPostUndeliverableShippingAddress`\" - \"`couponAbuse`\" - \"`customerCanceled`\" - \"`customerInitiatedCancel`\" - \"`customerSupportRequested`\" - \"`failToPushOrderGoogleError`\" - \"`failToPushOrderMerchantError`\" - \"`failToPushOrderMerchantFulfillmentError`\" - \"`failToPushOrderToMerchant`\" - \"`failToPushOrderToMerchantOutOfStock`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`merchantDidNotShipOnTime`\" - \"`noInventory`\" - \"`orderTimeout`\" - \"`other`\" - \"`paymentAbuse`\" - \"`paymentDeclined`\" - \"`priceError`\" - \"`returnRefundAbuse`\" - \"`shippingPriceError`\" - \"`taxError`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" "
        }
      }
    },
    "OrderShipmentScheduledDeliveryDetails": {
      "type": "object",
      "properties": {
        "scheduledDate": {
          "type": "string",
          "description": "The date a shipment is scheduled for delivery, in ISO 8601 format."
        },
        "carrierPhoneNumber": {
          "type": "string",
          "description": "The phone number of the carrier fulfilling the delivery. The phone number is formatted as the international notation in ITU-T Recommendation E.123 (e.g., \"+41 44 668 1800\")."
        }
      },
      "id": "OrderShipmentScheduledDeliveryDetails"
    },
    "ProductstatusesCustomBatchRequest": {
      "id": "ProductstatusesCustomBatchRequest",
      "type": "object",
      "properties": {
        "entries": {
          "description": "The request entries to be processed in the batch.",
          "type": "array",
          "items": {
            "$ref": "ProductstatusesCustomBatchRequestEntry"
          }
        }
      }
    },
    "PosListResponse": {
      "id": "PosListResponse",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#posListResponse\".",
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "PosStore"
          }
        }
      }
    },
    "AccountsClaimWebsiteResponse": {
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#accountsClaimWebsiteResponse\".",
          "type": "string"
        }
      },
      "type": "object",
      "id": "AccountsClaimWebsiteResponse"
    },
    "OrdersGetTestOrderTemplateResponse": {
      "id": "OrdersGetTestOrderTemplateResponse",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersGetTestOrderTemplateResponse\".",
          "type": "string"
        },
        "template": {
          "$ref": "TestOrder",
          "description": "The requested test order template."
        }
      },
      "type": "object"
    },
    "OrderinvoicesCreateRefundInvoiceRequest": {
      "id": "OrderinvoicesCreateRefundInvoiceRequest",
      "properties": {
        "invoiceId": {
          "type": "string",
          "description": "[required] The ID of the invoice."
        },
        "operationId": {
          "description": "[required] The ID of the operation, unique across all operations for a given order.",
          "type": "string"
        },
        "shipmentInvoices": {
          "items": {
            "$ref": "ShipmentInvoice"
          },
          "description": "Invoice details for different shipment groups.",
          "type": "array"
        },
        "refundOnlyOption": {
          "description": "Option to create a refund-only invoice. Exactly one of `refundOnlyOption` or `returnOption` must be provided.",
          "$ref": "OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption"
        },
        "returnOption": {
          "$ref": "OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption",
          "description": "Option to create an invoice for a refund and mark all items within the invoice as returned. Exactly one of `refundOnlyOption` or `returnOption` must be provided."
        }
      },
      "type": "object"
    },
    "LiaInventorySettings": {
      "id": "LiaInventorySettings",
      "properties": {
        "inventoryVerificationContactEmail": {
          "type": "string",
          "description": "The email of the contact for the inventory verification process."
        },
        "inventoryVerificationContactName": {
          "description": "The name of the contact for the inventory verification process.",
          "type": "string"
        },
        "status": {
          "type": "string",
          "description": "The status of the inventory verification process. Acceptable values are: - \"`active`\" - \"`inactive`\" - \"`pending`\" "
        },
        "inventoryVerificationContactStatus": {
          "description": "The status of the verification contact. Acceptable values are: - \"`active`\" - \"`inactive`\" - \"`pending`\" ",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BusinessDayConfig": {
      "id": "BusinessDayConfig",
      "properties": {
        "businessDays": {
          "description": "Regular business days. May not be empty.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "AccountGoogleMyBusinessLink": {
      "type": "object",
      "id": "AccountGoogleMyBusinessLink",
      "properties": {
        "status": {
          "type": "string",
          "description": "Status of the link between this Merchant Center account and the GMB account. Acceptable values are: - \"`active`\" - \"`pending`\" "
        },
        "gmbEmail": {
          "description": "The GMB email address of which a specific account within a GMB account. A sample account within a GMB account could be a business account with set of locations, managed under the GMB account.",
          "type": "string"
        }
      }
    },
    "DatafeedStatus": {
      "id": "DatafeedStatus",
      "properties": {
        "itemsTotal": {
          "description": "The number of items in the feed that were processed.",
          "format": "uint64",
          "type": "string"
        },
        "itemsValid": {
          "type": "string",
          "format": "uint64",
          "description": "The number of items in the feed that were valid."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#datafeedStatus`\"",
          "type": "string"
        },
        "errors": {
          "description": "The list of errors occurring in the feed.",
          "items": {
            "$ref": "DatafeedStatusError"
          },
          "type": "array"
        },
        "country": {
          "type": "string",
          "description": "The country for which the status is reported, represented as a CLDR territory code."
        },
        "lastUploadDate": {
          "type": "string",
          "description": "The last date at which the feed was uploaded."
        },
        "language": {
          "type": "string",
          "description": "The two-letter ISO 639-1 language for which the status is reported."
        },
        "processingStatus": {
          "description": "The processing status of the feed. Acceptable values are: - \"`\"`failure`\": The feed could not be processed or all items had errors.`\" - \"`in progress`\": The feed is being processed. - \"`none`\": The feed has not yet been processed. For example, a feed that has never been uploaded will have this processing status. - \"`success`\": The feed was processed successfully, though some items might have had errors. ",
          "type": "string"
        },
        "datafeedId": {
          "format": "uint64",
          "type": "string",
          "description": "The ID of the feed for which the status is reported."
        },
        "warnings": {
          "items": {
            "$ref": "DatafeedStatusError"
          },
          "description": "The list of errors occurring in the feed.",
          "type": "array"
        }
      },
      "description": "The status of a datafeed, i.e., the result of the last retrieval of the datafeed computed asynchronously when the feed processing is finished.",
      "type": "object"
    },
    "DatafeedsCustomBatchResponse": {
      "type": "object",
      "properties": {
        "entries": {
          "items": {
            "$ref": "DatafeedsCustomBatchResponseEntry"
          },
          "description": "The result of the execution of the batch requests.",
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#datafeedsCustomBatchResponse\"."
        }
      },
      "id": "DatafeedsCustomBatchResponse"
    },
    "OrdersCustomBatchRequestEntryReturnRefundLineItem": {
      "id": "OrdersCustomBatchRequestEntryReturnRefundLineItem",
      "properties": {
        "amountPretax": {
          "$ref": "Price",
          "description": "The amount that is refunded. If omitted, refundless return is assumed (same as calling returnLineItem method)."
        },
        "amountTax": {
          "$ref": "Price",
          "description": "Tax amount that corresponds to refund amount in amountPretax. Optional, but if filled, then amountPretax must be set. Calculated automatically if not provided."
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required."
        },
        "lineItemId": {
          "description": "The ID of the line item to return. Either lineItemId or productId is required.",
          "type": "string"
        },
        "reason": {
          "description": "The reason for the return. Acceptable values are: - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`other`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`qualityNotAsExpected`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" ",
          "type": "string"
        },
        "quantity": {
          "description": "The quantity to return and refund.",
          "format": "uint32",
          "type": "integer"
        },
        "reasonText": {
          "type": "string",
          "description": "The explanation of the reason."
        }
      },
      "type": "object"
    },
    "RateGroup": {
      "properties": {
        "carrierRates": {
          "type": "array",
          "items": {
            "$ref": "CarrierRate"
          },
          "description": "A list of carrier rates that can be referred to by `mainTable` or `singleValue`."
        },
        "mainTable": {
          "description": "A table defining the rate group, when `singleValue` is not expressive enough. Can only be set if `singleValue` is not set.",
          "$ref": "Table"
        },
        "singleValue": {
          "description": "The value of the rate group (e.g. flat rate $10). Can only be set if `mainTable` and `subtables` are not set.",
          "$ref": "Value"
        },
        "applicableShippingLabels": {
          "items": {
            "type": "string"
          },
          "description": "A list of shipping labels defining the products to which this rate group applies to. This is a disjunction: only one of the labels has to match for the rate group to apply. May only be empty for the last rate group of a service. Required.",
          "type": "array"
        },
        "name": {
          "description": "Name of the rate group. Optional. If set has to be unique within shipping service.",
          "type": "string"
        },
        "subtables": {
          "type": "array",
          "items": {
            "$ref": "Table"
          },
          "description": "A list of subtables referred to by `mainTable`. Can only be set if `mainTable` is set."
        }
      },
      "id": "RateGroup",
      "type": "object"
    },
    "ProductDestination": {
      "properties": {
        "intention": {
          "type": "string",
          "description": "Whether the destination is required, excluded or should be validated. Acceptable values are: - \"`default`\" - \"`excluded`\" - \"`optional`\" - \"`required`\" "
        },
        "destinationName": {
          "description": "The name of the destination.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ProductDestination"
    },
    "OrdersReturnLineItemRequest": {
      "id": "OrdersReturnLineItemRequest",
      "properties": {
        "productId": {
          "description": "The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required.",
          "type": "string"
        },
        "reason": {
          "description": "The reason for the return. Acceptable values are: - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`other`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`qualityNotAsExpected`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" ",
          "type": "string"
        },
        "reasonText": {
          "type": "string",
          "description": "The explanation of the reason."
        },
        "lineItemId": {
          "description": "The ID of the line item to return. Either lineItemId or productId is required.",
          "type": "string"
        },
        "operationId": {
          "description": "The ID of the operation. Unique across all operations for a given order.",
          "type": "string"
        },
        "quantity": {
          "format": "uint32",
          "description": "The quantity to return.",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "PickupServicesPickupService": {
      "properties": {
        "serviceName": {
          "type": "string",
          "description": "The name of the pickup service (e.g., `\"Access point\"`). Always present."
        },
        "carrierName": {
          "description": "The name of the carrier (e.g., `\"UPS\"`). Always present.",
          "type": "string"
        },
        "country": {
          "description": "The CLDR country code of the carrier (e.g., \"US\"). Always present.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "PickupServicesPickupService"
    },
    "ProductShippingDimension": {
      "properties": {
        "unit": {
          "description": "The unit of value.",
          "type": "string"
        },
        "value": {
          "format": "double",
          "type": "number",
          "description": "The dimension of the product used to calculate the shipping cost of the item."
        }
      },
      "type": "object",
      "id": "ProductShippingDimension"
    },
    "PickupCarrierService": {
      "id": "PickupCarrierService",
      "properties": {
        "carrierName": {
          "description": "The name of the pickup carrier (e.g., `\"UPS\"`). Required.",
          "type": "string"
        },
        "serviceName": {
          "type": "string",
          "description": "The name of the pickup service (e.g., `\"Access point\"`). Required."
        }
      },
      "type": "object"
    },
    "LiasettingsSetInventoryVerificationContactResponse": {
      "id": "LiasettingsSetInventoryVerificationContactResponse",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#liasettingsSetInventoryVerificationContactResponse\".",
          "type": "string"
        }
      }
    },
    "DatafeedsFetchNowResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#datafeedsFetchNowResponse\"."
        }
      },
      "id": "DatafeedsFetchNowResponse",
      "type": "object"
    },
    "ProductAmount": {
      "properties": {
        "remittedTaxAmount": {
          "description": "Remitted tax value.",
          "$ref": "Price"
        },
        "priceAmount": {
          "$ref": "Price",
          "description": "The pre-tax or post-tax price depending on the location of the order."
        },
        "taxAmount": {
          "$ref": "Price",
          "description": "Tax value."
        }
      },
      "type": "object",
      "id": "ProductAmount"
    },
    "OrderinvoicesCreateChargeInvoiceResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#orderinvoicesCreateChargeInvoiceResponse\"."
        },
        "executionStatus": {
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" ",
          "type": "string"
        }
      },
      "id": "OrderinvoicesCreateChargeInvoiceResponse",
      "type": "object"
    },
    "ShipmentInvoice": {
      "properties": {
        "lineItemInvoices": {
          "description": "[required] Invoice details per line item.",
          "items": {
            "$ref": "ShipmentInvoiceLineItemInvoice"
          },
          "type": "array"
        },
        "shipmentGroupId": {
          "description": "[required] ID of the shipment group. It is assigned by the merchant in the `shipLineItems` method and is used to group multiple line items that have the same kind of shipping charges.",
          "type": "string"
        },
        "invoiceSummary": {
          "$ref": "InvoiceSummary",
          "description": "[required] Invoice summary."
        }
      },
      "id": "ShipmentInvoice",
      "type": "object"
    },
    "AccountIdentifier": {
      "id": "AccountIdentifier",
      "type": "object",
      "properties": {
        "aggregatorId": {
          "format": "uint64",
          "type": "string",
          "description": "The aggregator ID, set for aggregators and subaccounts (in that case, it represents the aggregator of the subaccount)."
        },
        "merchantId": {
          "format": "uint64",
          "type": "string",
          "description": "The merchant account ID, set for individual accounts and subaccounts."
        }
      }
    },
    "AccountTax": {
      "id": "AccountTax",
      "type": "object",
      "properties": {
        "accountId": {
          "format": "uint64",
          "type": "string",
          "description": "Required. The ID of the account to which these account tax settings belong."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#accountTax\"."
        },
        "rules": {
          "items": {
            "$ref": "AccountTaxTaxRule"
          },
          "type": "array",
          "description": "Tax rules. Updating the tax rules will enable US taxes (not reversible). Defining no rules is equivalent to not charging tax at all."
        }
      },
      "description": "The tax settings of a merchant account. All methods require the admin role."
    },
    "OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo": {
      "type": "object",
      "properties": {
        "carrier": {
          "description": "The carrier handling the shipment. See `shipments[].carrier` in the Orders resource representation for a list of acceptable values.",
          "type": "string"
        },
        "shipmentId": {
          "type": "string",
          "description": "Required. The ID of the shipment. This is assigned by the merchant and is unique to each shipment."
        },
        "trackingId": {
          "type": "string",
          "description": "The tracking ID for the shipment."
        }
      },
      "id": "OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo"
    },
    "DatafeedsCustomBatchRequest": {
      "type": "object",
      "id": "DatafeedsCustomBatchRequest",
      "properties": {
        "entries": {
          "items": {
            "$ref": "DatafeedsCustomBatchRequestEntry"
          },
          "type": "array",
          "description": "The request entries to be processed in the batch."
        }
      }
    },
    "OrderAddress": {
      "properties": {
        "region": {
          "description": "Top-level administrative subdivision of the country. For example, a state like California (\"CA\") or a province like Quebec (\"QC\").",
          "type": "string"
        },
        "locality": {
          "type": "string",
          "description": "City, town or commune. May also include dependent localities or sublocalities (e.g. neighborhoods or suburbs)."
        },
        "recipientName": {
          "description": "Name of the recipient.",
          "type": "string"
        },
        "fullAddress": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Strings representing the lines of the printed label for mailing the order, for example: John Smith 1600 Amphitheatre Parkway Mountain View, CA, 94043 United States "
        },
        "isPostOfficeBox": {
          "type": "boolean",
          "description": "Whether the address is a post office box."
        },
        "country": {
          "description": "CLDR country code (e.g. \"US\").",
          "type": "string"
        },
        "streetAddress": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Street-level part of the address."
        },
        "postalCode": {
          "type": "string",
          "description": "Postal Code or ZIP (e.g. \"94043\")."
        }
      },
      "id": "OrderAddress",
      "type": "object"
    },
    "ProductTax": {
      "id": "ProductTax",
      "type": "object",
      "properties": {
        "taxShip": {
          "description": "Set to true if tax is charged on shipping.",
          "type": "boolean"
        },
        "country": {
          "description": "The country within which the item is taxed, specified as a CLDR territory code.",
          "type": "string"
        },
        "region": {
          "type": "string",
          "description": "The geographic region to which the tax rate applies."
        },
        "locationId": {
          "type": "string",
          "format": "int64",
          "description": "The numeric ID of a location that the tax rate applies to as defined in the AdWords API."
        },
        "postalCode": {
          "type": "string",
          "description": "The postal code range that the tax rate applies to, represented by a ZIP code, a ZIP code prefix using * wildcard, a range between two ZIP codes or two ZIP code prefixes of equal length. Examples: 94114, 94*, 94002-95460, 94*-95*."
        },
        "rate": {
          "type": "number",
          "format": "double",
          "description": "The percentage of tax rate that applies to the item price."
        }
      }
    },
    "PosCustomBatchRequest": {
      "type": "object",
      "properties": {
        "entries": {
          "items": {
            "$ref": "PosCustomBatchRequestEntry"
          },
          "type": "array",
          "description": "The request entries to be processed in the batch."
        }
      },
      "id": "PosCustomBatchRequest"
    },
    "OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption": {
      "type": "object",
      "id": "OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption",
      "properties": {
        "description": {
          "description": "Optional description of the return reason.",
          "type": "string"
        },
        "reason": {
          "description": "[required] Reason for the return. Acceptable values are: - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`other`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`qualityNotAsExpected`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" ",
          "type": "string"
        }
      }
    },
    "InvoiceSummary": {
      "properties": {
        "merchantBalance": {
          "$ref": "Amount",
          "description": "Deprecated."
        },
        "additionalChargeSummaries": {
          "type": "array",
          "items": {
            "$ref": "InvoiceSummaryAdditionalChargeSummary"
          },
          "description": "Summary of the total amounts of the additional charges."
        },
        "googleBalance": {
          "description": "Deprecated.",
          "$ref": "Amount"
        },
        "promotionSummaries": {
          "description": "Deprecated.",
          "items": {
            "$ref": "Promotion"
          },
          "type": "array"
        },
        "customerBalance": {
          "description": "Deprecated.",
          "$ref": "Amount"
        },
        "productTotal": {
          "description": "[required] Total price for the product.",
          "$ref": "Amount"
        }
      },
      "id": "InvoiceSummary",
      "type": "object"
    },
    "AccountstatusesCustomBatchResponse": {
      "id": "AccountstatusesCustomBatchResponse",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#accountstatusesCustomBatchResponse\"."
        },
        "entries": {
          "type": "array",
          "description": "The result of the execution of the batch requests.",
          "items": {
            "$ref": "AccountstatusesCustomBatchResponseEntry"
          }
        }
      },
      "type": "object"
    },
    "ProductShippingWeight": {
      "type": "object",
      "id": "ProductShippingWeight",
      "properties": {
        "value": {
          "type": "number",
          "format": "double",
          "description": "The weight of the product used to calculate the shipping cost of the item."
        },
        "unit": {
          "type": "string",
          "description": "The unit of value."
        }
      }
    },
    "ShippingsettingsCustomBatchResponse": {
      "properties": {
        "entries": {
          "items": {
            "$ref": "ShippingsettingsCustomBatchResponseEntry"
          },
          "type": "array",
          "description": "The result of the execution of the batch requests."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#shippingsettingsCustomBatchResponse\".",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ShippingsettingsCustomBatchResponse"
    },
    "AccountStatusExampleItem": {
      "properties": {
        "link": {
          "type": "string"
        },
        "valueOnLandingPage": {
          "type": "string"
        },
        "itemId": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "submittedValue": {
          "type": "string"
        }
      },
      "type": "object",
      "id": "AccountStatusExampleItem"
    },
    "OrdersCancelResponse": {
      "id": "OrdersCancelResponse",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersCancelResponse\".",
          "type": "string"
        },
        "executionStatus": {
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" ",
          "type": "string"
        }
      }
    },
    "AccountstatusesListResponse": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#accountstatusesListResponse\"."
        },
        "nextPageToken": {
          "description": "The token for the retrieval of the next page of account statuses.",
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "AccountStatus"
          }
        }
      },
      "id": "AccountstatusesListResponse"
    },
    "DatafeedstatusesCustomBatchRequestEntry": {
      "id": "DatafeedstatusesCustomBatchRequestEntry",
      "description": "A batch entry encoding a single non-batch datafeedstatuses request.",
      "type": "object",
      "properties": {
        "method": {
          "type": "string",
          "description": "The method of the batch entry. Acceptable values are: - \"`get`\" "
        },
        "datafeedId": {
          "description": "The ID of the data feed to get.",
          "format": "uint64",
          "type": "string"
        },
        "batchId": {
          "description": "An entry ID, unique within the batch request.",
          "type": "integer",
          "format": "uint32"
        },
        "language": {
          "description": "The language for which to get the datafeed status. If this parameter is provided then country must also be provided. Note that for multi-target datafeeds this parameter is required.",
          "type": "string"
        },
        "merchantId": {
          "description": "The ID of the managing account.",
          "type": "string",
          "format": "uint64"
        },
        "country": {
          "type": "string",
          "description": "The country for which to get the datafeed status. If this parameter is provided then language must also be provided. Note that for multi-target datafeeds this parameter is required."
        }
      }
    },
    "OrdersUpdateShipmentResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersUpdateShipmentResponse\"."
        },
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        }
      },
      "type": "object",
      "id": "OrdersUpdateShipmentResponse"
    },
    "Errors": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "Error"
          },
          "description": "A list of errors."
        },
        "message": {
          "type": "string",
          "description": "The message of the first error in `errors`."
        },
        "code": {
          "description": "The HTTP status of the first error in `errors`.",
          "type": "integer",
          "format": "uint32"
        }
      },
      "id": "Errors",
      "description": "A list of errors returned by a failed batch entry."
    },
    "Row": {
      "type": "object",
      "id": "Row",
      "properties": {
        "cells": {
          "type": "array",
          "items": {
            "$ref": "Value"
          },
          "description": "The list of cells that constitute the row. Must have the same length as `columnHeaders` for two-dimensional tables, a length of 1 for one-dimensional tables. Required."
        }
      }
    },
    "AccountsLinkResponse": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#accountsLinkResponse\"."
        }
      },
      "id": "AccountsLinkResponse"
    },
    "ShippingsettingsCustomBatchRequest": {
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "ShippingsettingsCustomBatchRequestEntry"
          },
          "description": "The request entries to be processed in the batch."
        }
      },
      "type": "object",
      "id": "ShippingsettingsCustomBatchRequest"
    },
    "LiaOnDisplayToOrderSettings": {
      "properties": {
        "shippingCostPolicyUrl": {
          "type": "string",
          "description": "Shipping cost and policy URL."
        },
        "status": {
          "description": "The status of the ?On display to order? feature. Acceptable values are: - \"`active`\" - \"`inactive`\" - \"`pending`\" ",
          "type": "string"
        }
      },
      "id": "LiaOnDisplayToOrderSettings",
      "type": "object"
    },
    "TransitTableTransitTimeRowTransitTimeValue": {
      "type": "object",
      "properties": {
        "maxTransitTimeInDays": {
          "format": "uint32",
          "type": "integer",
          "description": "Must be greater than or equal to `minTransitTimeInDays`."
        },
        "minTransitTimeInDays": {
          "type": "integer",
          "format": "uint32",
          "description": "Transit time range (min-max) in business days. 0 means same day delivery, 1 means next day delivery."
        }
      },
      "id": "TransitTableTransitTimeRowTransitTimeValue"
    },
    "Inventory": {
      "id": "Inventory",
      "type": "object",
      "properties": {
        "customLabel4": {
          "type": "string",
          "description": "Custom label 3 for custom grouping of items in a Shopping campaign. Only supported for online products."
        },
        "instoreProductLocation": {
          "description": "The instore product location. Supported only for local products.",
          "type": "string"
        },
        "installment": {
          "$ref": "Installment",
          "description": "Number and amount of installments to pay for an item. Brazil only."
        },
        "customLabel3": {
          "type": "string",
          "description": "Custom label 3 for custom grouping of items in a Shopping campaign. Only supported for online products."
        },
        "price": {
          "$ref": "Price",
          "description": "The price of the product."
        },
        "customLabel0": {
          "type": "string",
          "description": "Custom label 0 for custom grouping of items in a Shopping campaign. Only supported for online products."
        },
        "customLabel1": {
          "description": "Custom label 1 for custom grouping of items in a Shopping campaign. Only supported for online products.",
          "type": "string"
        },
        "quantity": {
          "type": "integer",
          "description": "The quantity of the product. Must be equal to or greater than zero. Supported only for local products.",
          "format": "uint32"
        },
        "sellOnGoogleQuantity": {
          "description": "The quantity of the product that is available for selling on Google. Supported only for online products.",
          "format": "uint32",
          "type": "integer"
        },
        "salePriceEffectiveDate": {
          "type": "string",
          "description": "A date range represented by a pair of ISO 8601 dates separated by a space, comma, or slash. Both dates might be specified as 'null' if undecided."
        },
        "pickup": {
          "$ref": "InventoryPickup",
          "description": "Store pickup information. Only supported for local inventory. Not setting `pickup` means \"don't update\" while setting it to the empty value (`{}` in JSON) means \"delete\". Otherwise, `pickupMethod` and `pickupSla` must be set together, unless `pickupMethod` is \"not supported\"."
        },
        "customLabel2": {
          "description": "Custom label 2 for custom grouping of items in a Shopping campaign. Only supported for online products.",
          "type": "string"
        },
        "loyaltyPoints": {
          "$ref": "LoyaltyPoints",
          "description": "Loyalty points that users receive after purchasing the item. Japan only."
        },
        "availability": {
          "type": "string",
          "description": "The availability of the product. Acceptable values are: - \"`in stock`\" - \"`out of stock`\" - \"`preorder`\" "
        },
        "salePrice": {
          "$ref": "Price",
          "description": "The sale price of the product. Mandatory if `sale_price_effective_date` is defined."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#inventory`\"",
          "type": "string"
        }
      }
    },
    "PosDataProviders": {
      "id": "PosDataProviders",
      "properties": {
        "country": {
          "type": "string",
          "description": "Country code."
        },
        "posDataProviders": {
          "items": {
            "$ref": "PosDataProvidersPosDataProvider"
          },
          "description": "A list of POS data providers.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "OrderLineItemProductFee": {
      "id": "OrderLineItemProductFee",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the fee."
        },
        "amount": {
          "description": "Amount of the fee.",
          "$ref": "Price"
        }
      },
      "type": "object"
    },
    "OrdersUpdateShipmentRequest": {
      "type": "object",
      "properties": {
        "operationId": {
          "type": "string",
          "description": "The ID of the operation. Unique across all operations for a given order."
        },
        "trackingId": {
          "type": "string",
          "description": "The tracking ID for the shipment. Not updated if missing."
        },
        "status": {
          "description": "New status for the shipment. Not updated if missing. Acceptable values are: - \"`delivered`\" - \"`undeliverable`\" - \"`readyForPickup`\" ",
          "type": "string"
        },
        "shipmentId": {
          "type": "string",
          "description": "The ID of the shipment."
        },
        "carrier": {
          "type": "string",
          "description": "The carrier handling the shipment. Not updated if missing. See `shipments[].carrier` in the Orders resource representation for a list of acceptable values."
        },
        "deliveryDate": {
          "description": "Date on which the shipment has been delivered, in ISO 8601 format. Optional and can be provided only if `status` is `delivered`.",
          "type": "string"
        }
      },
      "id": "OrdersUpdateShipmentRequest"
    },
    "InventoryCustomBatchResponseEntry": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#inventoryCustomBatchResponseEntry`\""
        },
        "batchId": {
          "type": "integer",
          "format": "uint32",
          "description": "The ID of the request entry this entry responds to."
        },
        "errors": {
          "description": "A list of errors defined if and only if the request failed.",
          "$ref": "Errors"
        }
      },
      "description": "A batch entry encoding a single non-batch inventory response.",
      "id": "InventoryCustomBatchResponseEntry",
      "type": "object"
    },
    "ProductStatusDataQualityIssue": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "valueProvided": {
          "type": "string"
        },
        "destination": {
          "type": "string"
        },
        "fetchStatus": {
          "type": "string"
        },
        "detail": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "severity": {
          "type": "string"
        },
        "valueOnLandingPage": {
          "type": "string"
        }
      },
      "id": "ProductStatusDataQualityIssue"
    },
    "OrdersCustomBatchResponse": {
      "id": "OrdersCustomBatchResponse",
      "type": "object",
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "OrdersCustomBatchResponseEntry"
          },
          "description": "The result of the execution of the batch requests."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersCustomBatchResponse\"."
        }
      }
    },
    "PosSale": {
      "description": "The change of the available quantity of an item at the given store.",
      "id": "PosSale",
      "properties": {
        "quantity": {
          "format": "int64",
          "description": "Required. The relative change of the available quantity. Negative for items returned.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#posSale`\"",
          "type": "string"
        },
        "contentLanguage": {
          "description": "Required. The two-letter ISO 639-1 language code for the item.",
          "type": "string"
        },
        "gtin": {
          "type": "string",
          "description": "Global Trade Item Number."
        },
        "saleId": {
          "description": "A unique ID to group items from the same sale event.",
          "type": "string"
        },
        "itemId": {
          "type": "string",
          "description": "Required. A unique identifier for the item."
        },
        "targetCountry": {
          "type": "string",
          "description": "Required. The CLDR territory code for the item."
        },
        "storeCode": {
          "description": "Required. The identifier of the merchant's store. Either a `storeCode` inserted via the API or the code of the store in Google My Business.",
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "description": "Required. The inventory timestamp, in ISO 8601 format."
        },
        "price": {
          "description": "Required. The price of the item.",
          "$ref": "Price"
        }
      },
      "type": "object"
    },
    "OrderReturn": {
      "id": "OrderReturn",
      "type": "object",
      "properties": {
        "actor": {
          "description": "The actor that created the refund. Acceptable values are: - \"`customer`\" - \"`googleBot`\" - \"`googleCustomerService`\" - \"`googlePayments`\" - \"`googleSabre`\" - \"`merchant`\" ",
          "type": "string"
        },
        "creationDate": {
          "description": "Date on which the item has been created, in ISO 8601 format.",
          "type": "string"
        },
        "quantity": {
          "format": "uint32",
          "description": "Quantity that is returned.",
          "type": "integer"
        },
        "reason": {
          "type": "string",
          "description": "The reason for the return. Acceptable values are: - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`other`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`qualityNotAsExpected`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" "
        },
        "reasonText": {
          "description": "The explanation of the reason.",
          "type": "string"
        }
      }
    },
    "DatafeedStatusExample": {
      "type": "object",
      "id": "DatafeedStatusExample",
      "properties": {
        "value": {
          "description": "The problematic value.",
          "type": "string"
        },
        "lineNumber": {
          "type": "string",
          "format": "uint64",
          "description": "Line number in the data feed where the example is found."
        },
        "itemId": {
          "description": "The ID of the example item.",
          "type": "string"
        }
      },
      "description": "An example occurrence for a particular error."
    },
    "OrderDeliveryDetails": {
      "id": "OrderDeliveryDetails",
      "properties": {
        "phoneNumber": {
          "type": "string",
          "description": "The phone number of the person receiving the delivery."
        },
        "address": {
          "description": "The delivery address",
          "$ref": "OrderAddress"
        }
      },
      "type": "object"
    },
    "OrderreturnsListResponse": {
      "id": "OrderreturnsListResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The token for the retrieval of the next page of returns."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#orderreturnsListResponse\".",
          "type": "string"
        },
        "resources": {
          "items": {
            "$ref": "MerchantOrderReturn"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ProductsCustomBatchResponseEntry": {
      "properties": {
        "batchId": {
          "description": "The ID of the request entry this entry responds to.",
          "format": "uint32",
          "type": "integer"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#productsCustomBatchResponseEntry`\""
        },
        "product": {
          "description": "The inserted product. Only defined if the method is `insert` and if the request was successful.",
          "$ref": "Product"
        },
        "errors": {
          "$ref": "Errors",
          "description": "A list of errors defined if and only if the request failed."
        }
      },
      "description": "A batch entry encoding a single non-batch products response.",
      "type": "object",
      "id": "ProductsCustomBatchResponseEntry"
    },
    "MinimumOrderValueTableStoreCodeSetWithMov": {
      "type": "object",
      "properties": {
        "value": {
          "description": "The minimum order value for the given stores.",
          "$ref": "Price"
        },
        "storeCodes": {
          "items": {
            "type": "string"
          },
          "description": "A list of unique store codes or empty for the catch all.",
          "type": "array"
        }
      },
      "description": "A list of store code sets sharing the same minimum order value. At least two sets are required and the last one must be empty, which signifies 'MOV for all other stores'. Each store code can only appear once across all the sets. All prices within a service must have the same currency.",
      "id": "MinimumOrderValueTableStoreCodeSetWithMov"
    },
    "LiasettingsListResponse": {
      "id": "LiasettingsListResponse",
      "type": "object",
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "$ref": "LiaSettings"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token for the retrieval of the next page of LIA settings."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#liasettingsListResponse\".",
          "type": "string"
        }
      }
    },
    "AccountsCustomBatchRequestEntryLinkRequest": {
      "id": "AccountsCustomBatchRequestEntryLinkRequest",
      "type": "object",
      "properties": {
        "linkedAccountId": {
          "description": "The ID of the linked account.",
          "type": "string"
        },
        "action": {
          "description": "Action to perform for this link. The `\"request\"` action is only available to select merchants. Acceptable values are: - \"`approve`\" - \"`remove`\" - \"`request`\" ",
          "type": "string"
        },
        "linkType": {
          "description": "Type of the link between the two accounts. Acceptable values are: - \"`channelPartner`\" - \"`eCommercePlatform`\" ",
          "type": "string"
        }
      }
    },
    "OrdersCustomBatchRequestEntryCancel": {
      "type": "object",
      "properties": {
        "reasonText": {
          "type": "string",
          "description": "The explanation of the reason."
        },
        "reason": {
          "description": "The reason for the cancellation. Acceptable values are: - \"`customerInitiatedCancel`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`noInventory`\" - \"`other`\" - \"`priceError`\" - \"`shippingPriceError`\" - \"`taxError`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" ",
          "type": "string"
        }
      },
      "id": "OrdersCustomBatchRequestEntryCancel"
    },
    "OrderinvoicesCreateRefundInvoiceResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#orderinvoicesCreateRefundInvoiceResponse\"."
        },
        "executionStatus": {
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" ",
          "type": "string"
        }
      },
      "id": "OrderinvoicesCreateRefundInvoiceResponse",
      "type": "object"
    },
    "PosSaleRequest": {
      "id": "PosSaleRequest",
      "properties": {
        "price": {
          "$ref": "Price",
          "description": "Required. The price of the item."
        },
        "gtin": {
          "description": "Global Trade Item Number.",
          "type": "string"
        },
        "storeCode": {
          "description": "Required. The identifier of the merchant's store. Either a `storeCode` inserted via the API or the code of the store in Google My Business.",
          "type": "string"
        },
        "saleId": {
          "description": "A unique ID to group items from the same sale event.",
          "type": "string"
        },
        "targetCountry": {
          "description": "Required. The CLDR territory code for the item.",
          "type": "string"
        },
        "contentLanguage": {
          "description": "Required. The two-letter ISO 639-1 language code for the item.",
          "type": "string"
        },
        "quantity": {
          "description": "Required. The relative change of the available quantity. Negative for items returned.",
          "type": "string",
          "format": "int64"
        },
        "timestamp": {
          "type": "string",
          "description": "Required. The inventory timestamp, in ISO 8601 format."
        },
        "itemId": {
          "type": "string",
          "description": "Required. A unique identifier for the item."
        }
      },
      "type": "object"
    },
    "Value": {
      "properties": {
        "carrierRateName": {
          "description": "The name of a carrier rate referring to a carrier rate defined in the same rate group. Can only be set if all other fields are not set.",
          "type": "string"
        },
        "subtableName": {
          "type": "string",
          "description": "The name of a subtable. Can only be set in table cells (i.e., not for single values), and only if all other fields are not set."
        },
        "pricePercentage": {
          "description": "A percentage of the price represented as a number in decimal notation (e.g., `\"5.4\"`). Can only be set if all other fields are not set.",
          "type": "string"
        },
        "flatRate": {
          "$ref": "Price",
          "description": "A flat rate. Can only be set if all other fields are not set."
        },
        "noShipping": {
          "type": "boolean",
          "description": "If true, then the product can't ship. Must be true when set, can only be set if all other fields are not set."
        }
      },
      "id": "Value",
      "type": "object",
      "description": "The single value of a rate group or the value of a rate group table's cell. Exactly one of `noShipping`, `flatRate`, `pricePercentage`, `carrierRateName`, `subtableName` must be set."
    },
    "ProductStatus": {
      "properties": {
        "lastUpdateDate": {
          "description": "Date on which the item has been last updated, in ISO 8601 format.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#productStatus`\"",
          "type": "string"
        },
        "itemLevelIssues": {
          "items": {
            "$ref": "ProductStatusItemLevelIssue"
          },
          "description": "A list of all issues associated with the product.",
          "type": "array"
        },
        "destinationStatuses": {
          "type": "array",
          "items": {
            "$ref": "ProductStatusDestinationStatus"
          },
          "description": "The intended destinations for the product."
        },
        "title": {
          "type": "string",
          "description": "The title of the product."
        },
        "link": {
          "description": "The link to the product.",
          "type": "string"
        },
        "creationDate": {
          "description": "Date on which the item has been created, in ISO 8601 format.",
          "type": "string"
        },
        "product": {
          "description": "Product data after applying all the join inputs.",
          "$ref": "Product"
        },
        "googleExpirationDate": {
          "type": "string",
          "description": "Date on which the item expires in Google Shopping, in ISO 8601 format."
        },
        "dataQualityIssues": {
          "description": "DEPRECATED - never populated",
          "type": "array",
          "items": {
            "$ref": "ProductStatusDataQualityIssue"
          }
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product for which status is reported."
        }
      },
      "type": "object",
      "description": "The status of a product, i.e., information about a product computed asynchronously.",
      "id": "ProductStatus"
    },
    "AccountStatusItemLevelIssue": {
      "type": "object",
      "id": "AccountStatusItemLevelIssue",
      "properties": {
        "attributeName": {
          "type": "string",
          "description": "The attribute's name, if the issue is caused by a single attribute."
        },
        "servability": {
          "description": "How this issue affects serving of the offer.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "A short issue description in English."
        },
        "documentation": {
          "type": "string",
          "description": "The URL of a web page to help with resolving this issue."
        },
        "numItems": {
          "type": "string",
          "format": "int64",
          "description": "Number of items with this issue."
        },
        "resolution": {
          "type": "string",
          "description": "Whether the issue can be resolved by the merchant."
        },
        "detail": {
          "type": "string",
          "description": "A detailed issue description in English."
        },
        "code": {
          "description": "The error code of the issue.",
          "type": "string"
        }
      }
    },
    "OrdersShipLineItemsResponse": {
      "properties": {
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersShipLineItemsResponse\".",
          "type": "string"
        }
      },
      "type": "object",
      "id": "OrdersShipLineItemsResponse"
    },
    "ProductStatusItemLevelIssue": {
      "properties": {
        "description": {
          "type": "string",
          "description": "A short issue description in English."
        },
        "resolution": {
          "type": "string",
          "description": "Whether the issue can be resolved by the merchant."
        },
        "servability": {
          "type": "string",
          "description": "How this issue affects serving of the offer."
        },
        "destination": {
          "type": "string",
          "description": "The destination the issue applies to."
        },
        "attributeName": {
          "type": "string",
          "description": "The attribute's name, if the issue is caused by a single attribute."
        },
        "code": {
          "type": "string",
          "description": "The error code of the issue."
        },
        "documentation": {
          "type": "string",
          "description": "The URL of a web page to help with resolving this issue."
        },
        "detail": {
          "description": "A detailed issue description in English.",
          "type": "string"
        }
      },
      "id": "ProductStatusItemLevelIssue",
      "type": "object"
    },
    "OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption": {
      "id": "OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption",
      "type": "object",
      "properties": {
        "reason": {
          "description": "[required] Reason for the refund. Acceptable values are: - \"`adjustment`\" - \"`autoPostInternal`\" - \"`autoPostInvalidBillingAddress`\" - \"`autoPostNoInventory`\" - \"`autoPostPriceError`\" - \"`autoPostUndeliverableShippingAddress`\" - \"`couponAbuse`\" - \"`courtesyAdjustment`\" - \"`customerCanceled`\" - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`customerSupportRequested`\" - \"`deliveredLateByCarrier`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`failToPushOrderGoogleError`\" - \"`failToPushOrderMerchantError`\" - \"`failToPushOrderMerchantFulfillmentError`\" - \"`failToPushOrderToMerchant`\" - \"`failToPushOrderToMerchantOutOfStock`\" - \"`feeAdjustment`\" - \"`invalidCoupon`\" - \"`lateShipmentCredit`\" - \"`malformedShippingAddress`\" - \"`merchantDidNotShipOnTime`\" - \"`noInventory`\" - \"`orderTimeout`\" - \"`other`\" - \"`paymentAbuse`\" - \"`paymentDeclined`\" - \"`priceAdjustment`\" - \"`priceError`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`promoReallocation`\" - \"`qualityNotAsExpected`\" - \"`returnRefundAbuse`\" - \"`shippingCostAdjustment`\" - \"`shippingPriceError`\" - \"`taxAdjustment`\" - \"`taxError`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" ",
          "type": "string"
        },
        "description": {
          "description": "Optional description of the refund reason.",
          "type": "string"
        }
      }
    },
    "ShippingsettingsListResponse": {
      "id": "ShippingsettingsListResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The token for the retrieval of the next page of shipping settings."
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "ShippingSettings"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#shippingsettingsListResponse\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LiasettingsCustomBatchResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#liasettingsCustomBatchResponse\"."
        },
        "entries": {
          "description": "The result of the execution of the batch requests.",
          "items": {
            "$ref": "LiasettingsCustomBatchResponseEntry"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "LiasettingsCustomBatchResponse"
    },
    "DatafeedFormat": {
      "id": "DatafeedFormat",
      "properties": {
        "fileEncoding": {
          "type": "string",
          "description": "Character encoding scheme of the data feed. If not specified, the encoding will be auto-detected. Acceptable values are: - \"`latin-1`\" - \"`utf-16be`\" - \"`utf-16le`\" - \"`utf-8`\" - \"`windows-1252`\" "
        },
        "quotingMode": {
          "type": "string",
          "description": "Specifies how double quotes are interpreted. If not specified, the mode will be auto-detected. Ignored for non-DSV data feeds. Acceptable values are: - \"`normal character`\" - \"`value quoting`\" "
        },
        "columnDelimiter": {
          "description": "Delimiter for the separation of values in a delimiter-separated values feed. If not specified, the delimiter will be auto-detected. Ignored for non-DSV data feeds. Acceptable values are: - \"`pipe`\" - \"`tab`\" - \"`tilde`\" ",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrdersCreateTestOrderResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersCreateTestOrderResponse\"."
        },
        "orderId": {
          "type": "string",
          "description": "The ID of the newly created test order."
        }
      },
      "id": "OrdersCreateTestOrderResponse",
      "type": "object"
    },
    "AccountstatusesCustomBatchRequestEntry": {
      "id": "AccountstatusesCustomBatchRequestEntry",
      "properties": {
        "destinations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination."
        },
        "batchId": {
          "description": "An entry ID, unique within the batch request.",
          "type": "integer",
          "format": "uint32"
        },
        "merchantId": {
          "format": "uint64",
          "description": "The ID of the managing account.",
          "type": "string"
        },
        "method": {
          "description": "The method of the batch entry. Acceptable values are: - \"`get`\" ",
          "type": "string"
        },
        "accountId": {
          "format": "uint64",
          "description": "The ID of the (sub-)account whose status to get.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A batch entry encoding a single non-batch accountstatuses request."
    },
    "DatafeedFetchSchedule": {
      "id": "DatafeedFetchSchedule",
      "description": "The required fields vary based on the frequency of fetching. For a monthly fetch schedule, day_of_month and hour are required. For a weekly fetch schedule, weekday and hour are required. For a daily fetch schedule, only hour is required.",
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "description": "An optional user name for fetch_url."
        },
        "paused": {
          "description": "Whether the scheduled fetch is paused or not.",
          "type": "boolean"
        },
        "password": {
          "type": "string",
          "description": "An optional password for fetch_url."
        },
        "timeZone": {
          "description": "Time zone used for schedule. UTC by default. E.g., \"America/Los_Angeles\".",
          "type": "string"
        },
        "dayOfMonth": {
          "format": "uint32",
          "description": "The day of the month the feed file should be fetched (1-31).",
          "type": "integer"
        },
        "hour": {
          "type": "integer",
          "format": "uint32",
          "description": "The hour of the day the feed file should be fetched (0-23)."
        },
        "minuteOfHour": {
          "type": "integer",
          "format": "uint32",
          "description": "The minute of the hour the feed file should be fetched (0-59). Read-only."
        },
        "weekday": {
          "type": "string",
          "description": "The day of the week the feed file should be fetched. Acceptable values are: - \"`monday`\" - \"`tuesday`\" - \"`wednesday`\" - \"`thursday`\" - \"`friday`\" - \"`saturday`\" - \"`sunday`\" "
        },
        "fetchUrl": {
          "type": "string",
          "description": "The URL where the feed file can be fetched. Google Merchant Center will support automatic scheduled uploads using the HTTP, HTTPS, FTP, or SFTP protocols, so the value will need to be a valid link using one of those four protocols."
        }
      }
    },
    "PosCustomBatchResponseEntry": {
      "id": "PosCustomBatchResponseEntry",
      "type": "object",
      "properties": {
        "sale": {
          "$ref": "PosSale",
          "description": "The updated sale information."
        },
        "store": {
          "description": "The retrieved or updated store information.",
          "$ref": "PosStore"
        },
        "batchId": {
          "description": "The ID of the request entry to which this entry responds.",
          "type": "integer",
          "format": "uint32"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#posCustomBatchResponseEntry`\""
        },
        "inventory": {
          "$ref": "PosInventory",
          "description": "The updated inventory information."
        },
        "errors": {
          "description": "A list of errors defined if, and only if, the request failed.",
          "$ref": "Errors"
        }
      }
    },
    "Error": {
      "id": "Error",
      "description": "An error returned by the API.",
      "type": "object",
      "properties": {
        "reason": {
          "type": "string",
          "description": "The error code."
        },
        "domain": {
          "type": "string",
          "description": "The domain of the error."
        },
        "message": {
          "type": "string",
          "description": "A description of the error."
        }
      }
    },
    "OrdersAcknowledgeResponse": {
      "id": "OrdersAcknowledgeResponse",
      "type": "object",
      "properties": {
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersAcknowledgeResponse\"."
        }
      }
    },
    "OrderLegacyPromotionBenefit": {
      "type": "object",
      "properties": {
        "type": {
          "description": "Describes whether the promotion applies to products (e.g. 20% off) or to shipping (e.g. Free Shipping). Acceptable values are: - \"`product`\" - \"`shipping`\" ",
          "type": "string"
        },
        "subType": {
          "description": "Further describes the benefit of the promotion. Note that we will expand on this enumeration as we support new promotion sub-types. Acceptable values are: - \"`buyMGetMoneyOff`\" - \"`buyMGetNMoneyOff`\" - \"`buyMGetNPercentOff`\" - \"`buyMGetPercentOff`\" - \"`freeGift`\" - \"`freeGiftWithItemId`\" - \"`freeGiftWithValue`\" - \"`freeOvernightShipping`\" - \"`freeShipping`\" - \"`freeTwoDayShipping`\" - \"`moneyOff`\" - \"`percentageOff`\" - \"`rewardPoints`\" - \"`salePrice`\" ",
          "type": "string"
        },
        "discount": {
          "$ref": "Price",
          "description": "The discount in the order price when the promotion is applied."
        },
        "taxImpact": {
          "$ref": "Price",
          "description": "The impact on tax when the promotion is applied."
        },
        "offerIds": {
          "items": {
            "type": "string"
          },
          "description": "The OfferId(s) that were purchased in this order and map to this specific benefit of the promotion.",
          "type": "array"
        }
      },
      "id": "OrderLegacyPromotionBenefit"
    },
    "OrdersCustomBatchRequest": {
      "properties": {
        "entries": {
          "type": "array",
          "description": "The request entries to be processed in the batch.",
          "items": {
            "$ref": "OrdersCustomBatchRequestEntry"
          }
        }
      },
      "type": "object",
      "id": "OrdersCustomBatchRequest"
    },
    "Service": {
      "properties": {
        "pickupService": {
          "description": "The carrier-service pair delivering items to collection points. The list of supported pickup services can be retrieved via the `getSupportedPickupServices` method. Required if and only if the service delivery type is `pickup`.",
          "$ref": "PickupCarrierService"
        },
        "deliveryTime": {
          "$ref": "DeliveryTime",
          "description": "Time spent in various aspects from order to the delivery of the product. Required."
        },
        "name": {
          "description": "Free-form name of the service. Must be unique within target account. Required.",
          "type": "string"
        },
        "deliveryCountry": {
          "description": "The CLDR territory code of the country to which the service applies. Required.",
          "type": "string"
        },
        "minimumOrderValue": {
          "$ref": "Price",
          "description": "Minimum order value for this service. If set, indicates that customers will have to spend at least this amount. All prices within a service must have the same currency. Cannot be set together with minimum_order_value_table."
        },
        "rateGroups": {
          "type": "array",
          "description": "Shipping rate group definitions. Only the last one is allowed to have an empty `applicableShippingLabels`, which means \"everything else\". The other `applicableShippingLabels` must not overlap.",
          "items": {
            "$ref": "RateGroup"
          }
        },
        "minimumOrderValueTable": {
          "$ref": "MinimumOrderValueTable",
          "description": "Table of per store minimum order values for the pickup fulfillment type. Cannot be set together with minimum_order_value."
        },
        "shipmentType": {
          "description": "Type of locations this service ships orders to. Acceptable values are: - \"`delivery`\" - \"`pickup`\" ",
          "type": "string"
        },
        "active": {
          "type": "boolean",
          "description": "A boolean exposing the active status of the shipping service. Required."
        },
        "eligibility": {
          "description": "Eligibility for this service. Acceptable values are: - \"`All scenarios`\" - \"`All scenarios except Shopping Actions`\" - \"`Shopping Actions`\" ",
          "type": "string"
        },
        "currency": {
          "type": "string",
          "description": "The CLDR code of the currency to which this service applies. Must match that of the prices in rate groups."
        }
      },
      "id": "Service",
      "type": "object"
    },
    "OrderLineItemProductVariantAttribute": {
      "type": "object",
      "id": "OrderLineItemProductVariantAttribute",
      "properties": {
        "dimension": {
          "type": "string",
          "description": "The dimension of the variant."
        },
        "value": {
          "type": "string",
          "description": "The value for the dimension."
        }
      }
    },
    "OrdersRefundRequest": {
      "properties": {
        "reasonText": {
          "type": "string",
          "description": "The explanation of the reason."
        },
        "amountPretax": {
          "$ref": "Price",
          "description": "The amount that is refunded. Either amount or amountPretax should be filled."
        },
        "amount": {
          "$ref": "Price",
          "description": "Deprecated. Please use amountPretax and amountTax instead."
        },
        "reason": {
          "description": "The reason for the refund. Acceptable values are: - \"`adjustment`\" - \"`courtesyAdjustment`\" - \"`customerCanceled`\" - \"`customerDiscretionaryReturn`\" - \"`deliveredLateByCarrier`\" - \"`feeAdjustment`\" - \"`lateShipmentCredit`\" - \"`noInventory`\" - \"`other`\" - \"`priceError`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`shippingCostAdjustment`\" - \"`taxAdjustment`\" - \"`undeliverableShippingAddress`\" - \"`wrongProductShipped`\" ",
          "type": "string"
        },
        "amountTax": {
          "$ref": "Price",
          "description": "Tax amount that corresponds to refund amount in amountPretax. Optional, but if filled, amountPretax must be set. Calculated automatically if not provided."
        },
        "operationId": {
          "description": "The ID of the operation. Unique across all operations for a given order.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "OrdersRefundRequest"
    },
    "OrderPaymentMethod": {
      "id": "OrderPaymentMethod",
      "type": "object",
      "properties": {
        "billingAddress": {
          "description": "The billing address.",
          "$ref": "OrderAddress"
        },
        "lastFourDigits": {
          "description": "The last four digits of the card number.",
          "type": "string"
        },
        "expirationYear": {
          "type": "integer",
          "description": "The card expiration year (4-digit, e.g. 2015).",
          "format": "int32"
        },
        "phoneNumber": {
          "description": "The billing phone number.",
          "type": "string"
        },
        "expirationMonth": {
          "description": "The card expiration month (January = 1, February = 2 etc.).",
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "description": "The type of instrument. Acceptable values are: - \"`AMEX`\" - \"`DISCOVER`\" - \"`JCB`\" - \"`MASTERCARD`\" - \"`UNIONPAY`\" - \"`VISA`\" - \"``\" ",
          "type": "string"
        }
      }
    },
    "GmbAccountsGmbAccount": {
      "type": "object",
      "id": "GmbAccountsGmbAccount",
      "properties": {
        "listingCount": {
          "format": "uint64",
          "description": "Number of listings under this account.",
          "type": "string"
        },
        "name": {
          "description": "The name of the GMB account.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "The type of the GMB account (User or Business)."
        },
        "email": {
          "type": "string",
          "description": "The email which identifies the GMB account."
        }
      }
    },
    "OrdersCustomBatchRequestEntryRejectReturnLineItem": {
      "properties": {
        "reason": {
          "type": "string",
          "description": "The reason for the return. Acceptable values are: - \"`damagedOrUsed`\" - \"`missingComponent`\" - \"`notEligible`\" - \"`other`\" - \"`outOfReturnWindow`\" "
        },
        "quantity": {
          "format": "uint32",
          "description": "The quantity to return and refund.",
          "type": "integer"
        },
        "productId": {
          "description": "The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required.",
          "type": "string"
        },
        "lineItemId": {
          "description": "The ID of the line item to return. Either lineItemId or productId is required.",
          "type": "string"
        },
        "reasonText": {
          "type": "string",
          "description": "The explanation of the reason."
        }
      },
      "type": "object",
      "id": "OrdersCustomBatchRequestEntryRejectReturnLineItem"
    },
    "AccounttaxCustomBatchResponseEntry": {
      "properties": {
        "accountTax": {
          "$ref": "AccountTax",
          "description": "The retrieved or updated account tax settings."
        },
        "errors": {
          "description": "A list of errors defined if and only if the request failed.",
          "$ref": "Errors"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#accounttaxCustomBatchResponseEntry`\""
        },
        "batchId": {
          "type": "integer",
          "format": "uint32",
          "description": "The ID of the request entry this entry responds to."
        }
      },
      "type": "object",
      "description": "A batch entry encoding a single non-batch accounttax response.",
      "id": "AccounttaxCustomBatchResponseEntry"
    },
    "OrderLineItem": {
      "id": "OrderLineItem",
      "properties": {
        "returnInfo": {
          "$ref": "OrderLineItemReturnInfo",
          "description": "Details of the return policy for the line item."
        },
        "product": {
          "$ref": "OrderLineItemProduct",
          "description": "Product data as seen by customer from the time of the order placement. Note that certain attributes values (e.g. title or gtin) might be reformatted and no longer match values submitted via product feed."
        },
        "cancellations": {
          "description": "Cancellations of the line item.",
          "type": "array",
          "items": {
            "$ref": "OrderCancellation"
          }
        },
        "annotations": {
          "type": "array",
          "items": {
            "$ref": "OrderMerchantProvidedAnnotation"
          },
          "description": "Annotations that are attached to the line item."
        },
        "quantityDelivered": {
          "description": "Number of items delivered.",
          "format": "uint32",
          "type": "integer"
        },
        "price": {
          "$ref": "Price",
          "description": "Total price for the line item. For example, if two items for $10 are purchased, the total price will be $20."
        },
        "id": {
          "type": "string",
          "description": "The ID of the line item."
        },
        "tax": {
          "$ref": "Price",
          "description": "Total tax amount for the line item. For example, if two items are purchased, and each have a cost tax of $2, the total tax amount will be $4."
        },
        "quantityShipped": {
          "format": "uint32",
          "type": "integer",
          "description": "Number of items shipped."
        },
        "quantityPending": {
          "description": "Number of items pending.",
          "format": "uint32",
          "type": "integer"
        },
        "returns": {
          "items": {
            "$ref": "OrderReturn"
          },
          "type": "array",
          "description": "Returns of the line item."
        },
        "quantityOrdered": {
          "format": "uint32",
          "description": "Number of items ordered.",
          "type": "integer"
        },
        "quantityReturned": {
          "type": "integer",
          "format": "uint32",
          "description": "Number of items returned."
        },
        "quantityReadyForPickup": {
          "type": "integer",
          "format": "uint32",
          "description": "Number of items ready for pickup."
        },
        "quantityCanceled": {
          "description": "Number of items canceled.",
          "format": "uint32",
          "type": "integer"
        },
        "shippingDetails": {
          "$ref": "OrderLineItemShippingDetails",
          "description": "Details of the requested shipping for the line item."
        }
      },
      "type": "object"
    },
    "Table": {
      "id": "Table",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the table. Required for subtables, ignored for the main table."
        },
        "rowHeaders": {
          "description": "Headers of the table's rows. Required.",
          "$ref": "Headers"
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "Row"
          },
          "description": "The list of rows that constitute the table. Must have the same length as `rowHeaders`. Required."
        },
        "columnHeaders": {
          "$ref": "Headers",
          "description": "Headers of the table's columns. Optional: if not set then the table has only one dimension."
        }
      }
    },
    "OrdersRejectReturnLineItemResponse": {
      "type": "object",
      "properties": {
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersRejectReturnLineItemResponse\"."
        }
      },
      "id": "OrdersRejectReturnLineItemResponse"
    },
    "GmbAccounts": {
      "type": "object",
      "id": "GmbAccounts",
      "properties": {
        "gmbAccounts": {
          "description": "A list of GMB accounts which are available to the merchant.",
          "items": {
            "$ref": "GmbAccountsGmbAccount"
          },
          "type": "array"
        },
        "accountId": {
          "description": "The ID of the Merchant Center account.",
          "format": "uint64",
          "type": "string"
        }
      }
    },
    "DatafeedTarget": {
      "type": "object",
      "id": "DatafeedTarget",
      "properties": {
        "country": {
          "description": "The country where the items in the feed will be included in the search index, represented as a CLDR territory code.",
          "type": "string"
        },
        "language": {
          "type": "string",
          "description": "The two-letter ISO 639-1 language of the items in the feed. Must be a valid language for `targets[].country`."
        },
        "excludedDestinations": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The list of destinations to exclude for this target (corresponds to unchecked check boxes in Merchant Center)."
        },
        "includedDestinations": {
          "type": "array",
          "description": "The list of destinations to include for this target (corresponds to checked check boxes in Merchant Center). Default destinations are always included unless provided in `excludedDestinations`. List of supported destinations (if available to the account): - DisplayAds - Shopping - ShoppingActions - SurfacesAcrossGoogle ",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PosDataProvidersPosDataProvider": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The display name of Pos data Provider."
        },
        "fullName": {
          "type": "string",
          "description": "The full name of this POS data Provider."
        },
        "providerId": {
          "description": "The ID of the account.",
          "type": "string",
          "format": "uint64"
        }
      },
      "type": "object",
      "id": "PosDataProvidersPosDataProvider"
    },
    "OrdersCancelTestOrderByCustomerResponse": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersCancelTestOrderByCustomerResponse\"."
        }
      },
      "id": "OrdersCancelTestOrderByCustomerResponse"
    },
    "AccountsCustomBatchResponseEntry": {
      "id": "AccountsCustomBatchResponseEntry",
      "description": "A batch entry encoding a single non-batch accounts response.",
      "properties": {
        "batchId": {
          "description": "The ID of the request entry this entry responds to.",
          "type": "integer",
          "format": "uint32"
        },
        "linkStatus": {
          "description": "Deprecated. This field is never set. Acceptable values are: - \"`active`\" - \"`inactive`\" - \"`pending`\" ",
          "type": "string"
        },
        "errors": {
          "$ref": "Errors",
          "description": "A list of errors defined if and only if the request failed."
        },
        "account": {
          "description": "The retrieved, created, or updated account. Not defined if the method was `delete`, `claimwebsite` or `link`.",
          "$ref": "Account"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#accountsCustomBatchResponseEntry`\""
        }
      },
      "type": "object"
    },
    "PosCustomBatchResponse": {
      "type": "object",
      "id": "PosCustomBatchResponse",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#posCustomBatchResponse\".",
          "type": "string"
        },
        "entries": {
          "items": {
            "$ref": "PosCustomBatchResponseEntry"
          },
          "description": "The result of the execution of the batch requests.",
          "type": "array"
        }
      }
    },
    "OrdersUpdateMerchantOrderIdRequest": {
      "properties": {
        "merchantOrderId": {
          "type": "string",
          "description": "The merchant order id to be assigned to the order. Must be unique per merchant."
        },
        "operationId": {
          "type": "string",
          "description": "The ID of the operation. Unique across all operations for a given order."
        }
      },
      "id": "OrdersUpdateMerchantOrderIdRequest",
      "type": "object"
    },
    "LiasettingsCustomBatchRequestEntry": {
      "type": "object",
      "id": "LiasettingsCustomBatchRequestEntry",
      "properties": {
        "method": {
          "description": "The method of the batch entry. Acceptable values are: - \"`get`\" - \"`getAccessibleGmbAccounts`\" - \"`requestGmbAccess`\" - \"`requestInventoryVerification`\" - \"`setInventoryVerificationContact`\" - \"`update`\" ",
          "type": "string"
        },
        "country": {
          "description": "The country code. Required only for RequestInventoryVerification.",
          "type": "string"
        },
        "merchantId": {
          "type": "string",
          "description": "The ID of the managing account.",
          "format": "uint64"
        },
        "contactName": {
          "type": "string",
          "description": "Inventory validation contact name. Required only for SetInventoryValidationContact."
        },
        "accountId": {
          "description": "The ID of the account for which to get/update account LIA settings.",
          "type": "string",
          "format": "uint64"
        },
        "contactEmail": {
          "description": "Inventory validation contact email. Required only for SetInventoryValidationContact.",
          "type": "string"
        },
        "posDataProviderId": {
          "format": "uint64",
          "description": "The ID of POS data provider. Required only for SetPosProvider.",
          "type": "string"
        },
        "posExternalAccountId": {
          "description": "The account ID by which this merchant is known to the POS provider.",
          "type": "string"
        },
        "liaSettings": {
          "$ref": "LiaSettings",
          "description": "The account Lia settings to update. Only defined if the method is `update`."
        },
        "batchId": {
          "description": "An entry ID, unique within the batch request.",
          "type": "integer",
          "format": "uint32"
        },
        "gmbEmail": {
          "description": "The GMB account. Required only for RequestGmbAccess.",
          "type": "string"
        }
      }
    },
    "DatafeedsListResponse": {
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#datafeedsListResponse\".",
          "type": "string"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token for the retrieval of the next page of datafeeds."
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "Datafeed"
          }
        }
      },
      "type": "object",
      "id": "DatafeedsListResponse"
    },
    "DatafeedstatusesCustomBatchResponseEntry": {
      "id": "DatafeedstatusesCustomBatchResponseEntry",
      "type": "object",
      "description": "A batch entry encoding a single non-batch datafeedstatuses response.",
      "properties": {
        "errors": {
          "description": "A list of errors defined if and only if the request failed.",
          "$ref": "Errors"
        },
        "batchId": {
          "description": "The ID of the request entry this entry responds to.",
          "type": "integer",
          "format": "uint32"
        },
        "datafeedStatus": {
          "$ref": "DatafeedStatus",
          "description": "The requested data feed status. Defined if and only if the request was successful."
        }
      }
    },
    "AccountStatus": {
      "id": "AccountStatus",
      "properties": {
        "products": {
          "description": "List of product-related data by channel, destination, and country. Data in this field may be delayed by up to 30 minutes.",
          "items": {
            "$ref": "AccountStatusProducts"
          },
          "type": "array"
        },
        "websiteClaimed": {
          "description": "Whether the account's website is claimed or not.",
          "type": "boolean"
        },
        "accountId": {
          "type": "string",
          "description": "The ID of the account for which the status is reported."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#accountStatus`\""
        },
        "accountLevelIssues": {
          "type": "array",
          "items": {
            "$ref": "AccountStatusAccountLevelIssue"
          },
          "description": "A list of account level issues."
        },
        "dataQualityIssues": {
          "items": {
            "$ref": "AccountStatusDataQualityIssue"
          },
          "type": "array",
          "description": "DEPRECATED - never populated."
        }
      },
      "description": "The status of an account, i.e., information about its products, which is computed offline and not returned immediately at insertion time.",
      "type": "object"
    },
    "OrdersRejectReturnLineItemRequest": {
      "type": "object",
      "properties": {
        "operationId": {
          "type": "string",
          "description": "The ID of the operation. Unique across all operations for a given order."
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required."
        },
        "reason": {
          "description": "The reason for the return. Acceptable values are: - \"`damagedOrUsed`\" - \"`missingComponent`\" - \"`notEligible`\" - \"`other`\" - \"`outOfReturnWindow`\" ",
          "type": "string"
        },
        "quantity": {
          "format": "uint32",
          "type": "integer",
          "description": "The quantity to return and refund."
        },
        "reasonText": {
          "type": "string",
          "description": "The explanation of the reason."
        },
        "lineItemId": {
          "type": "string",
          "description": "The ID of the line item to return. Either lineItemId or productId is required."
        }
      },
      "id": "OrdersRejectReturnLineItemRequest"
    },
    "LiaPosDataProvider": {
      "type": "object",
      "id": "LiaPosDataProvider",
      "properties": {
        "posDataProviderId": {
          "format": "uint64",
          "description": "The ID of the POS data provider.",
          "type": "string"
        },
        "posExternalAccountId": {
          "type": "string",
          "description": "The account ID by which this merchant is known to the POS data provider."
        }
      }
    },
    "AccounttaxListResponse": {
      "properties": {
        "resources": {
          "items": {
            "$ref": "AccountTax"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "The token for the retrieval of the next page of account tax settings.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#accounttaxListResponse\".",
          "type": "string"
        }
      },
      "id": "AccounttaxListResponse",
      "type": "object"
    },
    "OrdersReturnRefundLineItemResponse": {
      "properties": {
        "executionStatus": {
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" ",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersReturnRefundLineItemResponse\"."
        }
      },
      "type": "object",
      "id": "OrdersReturnRefundLineItemResponse"
    },
    "TestOrderLineItem": {
      "id": "TestOrderLineItem",
      "type": "object",
      "properties": {
        "quantityOrdered": {
          "type": "integer",
          "description": "Required. Number of items ordered.",
          "format": "uint32"
        },
        "returnInfo": {
          "description": "Required. Details of the return policy for the line item.",
          "$ref": "OrderLineItemReturnInfo"
        },
        "unitTax": {
          "$ref": "Price",
          "description": "Deprecated. Ignored if provided."
        },
        "product": {
          "$ref": "TestOrderLineItemProduct",
          "description": "Required. Product data from the time of the order placement."
        },
        "shippingDetails": {
          "description": "Required. Details of the requested shipping for the line item.",
          "$ref": "OrderLineItemShippingDetails"
        }
      }
    },
    "DatafeedstatusesListResponse": {
      "id": "DatafeedstatusesListResponse",
      "type": "object",
      "properties": {
        "resources": {
          "items": {
            "$ref": "DatafeedStatus"
          },
          "type": "array"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#datafeedstatusesListResponse\".",
          "type": "string"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token for the retrieval of the next page of datafeed statuses."
        }
      }
    },
    "OrdersInStoreRefundLineItemRequest": {
      "properties": {
        "productId": {
          "description": "The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required.",
          "type": "string"
        },
        "reasonText": {
          "type": "string",
          "description": "The explanation of the reason."
        },
        "amountTax": {
          "description": "Tax amount that correspond to refund amount in amountPretax. Required.",
          "$ref": "Price"
        },
        "amountPretax": {
          "$ref": "Price",
          "description": "The amount that is refunded. Required."
        },
        "lineItemId": {
          "description": "The ID of the line item to return. Either lineItemId or productId is required.",
          "type": "string"
        },
        "quantity": {
          "description": "The quantity to return and refund.",
          "format": "uint32",
          "type": "integer"
        },
        "reason": {
          "description": "The reason for the return. Acceptable values are: - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`other`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`qualityNotAsExpected`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" ",
          "type": "string"
        },
        "operationId": {
          "type": "string",
          "description": "The ID of the operation. Unique across all operations for a given order."
        }
      },
      "type": "object",
      "id": "OrdersInStoreRefundLineItemRequest"
    },
    "AccountStatusAccountLevelIssue": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Issue identifier."
        },
        "documentation": {
          "description": "The URL of a web page to help resolving this issue.",
          "type": "string"
        },
        "detail": {
          "type": "string",
          "description": "Additional details about the issue."
        },
        "destination": {
          "type": "string",
          "description": "The destination the issue applies to. If this field is empty then the issue applies to all available destinations."
        },
        "title": {
          "type": "string",
          "description": "Short description of the issue."
        },
        "severity": {
          "type": "string",
          "description": "Severity of the issue. Acceptable values are: - \"`critical`\" - \"`error`\" - \"`suggestion`\" "
        },
        "country": {
          "description": "Country for which this issue is reported.",
          "type": "string"
        }
      },
      "id": "AccountStatusAccountLevelIssue"
    },
    "OrderCustomerMarketingRightsInfo": {
      "properties": {
        "explicitMarketingPreference": {
          "description": "Last known customer selection regarding marketing preferences. In certain cases this selection might not be known, so this field would be empty. If a customer selected `granted` in their most recent order, they can be subscribed to marketing emails. Customers who have chosen `denied` must not be subscribed, or must be unsubscribed if already opted-in. Acceptable values are: - \"`denied`\" - \"`granted`\" ",
          "type": "string"
        },
        "marketingEmailAddress": {
          "description": "Email address that can be used for marketing purposes. The field may be empty even if `explicitMarketingPreference` is 'granted'. This happens when retrieving an old order from the customer who deleted their account.",
          "type": "string"
        },
        "lastUpdatedTimestamp": {
          "description": "Timestamp when last time marketing preference was updated. Could be empty, if user wasn't offered a selection yet.",
          "type": "string"
        }
      },
      "id": "OrderCustomerMarketingRightsInfo",
      "type": "object"
    },
    "ProductUnitPricingMeasure": {
      "id": "ProductUnitPricingMeasure",
      "type": "object",
      "properties": {
        "unit": {
          "type": "string",
          "description": "The unit of the measure."
        },
        "value": {
          "type": "number",
          "description": "The measure of an item.",
          "format": "double"
        }
      }
    },
    "MinimumOrderValueTable": {
      "properties": {
        "storeCodeSetWithMovs": {
          "items": {
            "$ref": "MinimumOrderValueTableStoreCodeSetWithMov"
          },
          "type": "array"
        }
      },
      "id": "MinimumOrderValueTable",
      "type": "object"
    },
    "PosInventoryResponse": {
      "id": "PosInventoryResponse",
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "description": "Required. The inventory timestamp, in ISO 8601 format."
        },
        "itemId": {
          "type": "string",
          "description": "Required. A unique identifier for the item."
        },
        "contentLanguage": {
          "description": "Required. The two-letter ISO 639-1 language code for the item.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#posInventoryResponse\"."
        },
        "quantity": {
          "format": "int64",
          "description": "Required. The available quantity of the item.",
          "type": "string"
        },
        "storeCode": {
          "type": "string",
          "description": "Required. The identifier of the merchant's store. Either a `storeCode` inserted via the API or the code of the store in Google My Business."
        },
        "gtin": {
          "type": "string",
          "description": "Global Trade Item Number."
        },
        "price": {
          "$ref": "Price",
          "description": "Required. The current price of the item."
        },
        "targetCountry": {
          "type": "string",
          "description": "Required. The CLDR territory code for the item."
        }
      }
    },
    "PosStore": {
      "description": "Store resource.",
      "type": "object",
      "id": "PosStore",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#posStore`\""
        },
        "storeCode": {
          "type": "string",
          "description": "Required. A store identifier that is unique for the given merchant."
        },
        "storeAddress": {
          "description": "Required. The street address of the store.",
          "type": "string"
        }
      }
    },
    "OrderReportDisbursement": {
      "type": "object",
      "description": "Order disbursement. All methods require the payment analyst role.",
      "id": "OrderReportDisbursement",
      "properties": {
        "disbursementId": {
          "description": "The ID of the disbursement.",
          "type": "string"
        },
        "disbursementCreationDate": {
          "description": "The disbursement date, in ISO 8601 format.",
          "type": "string"
        },
        "merchantId": {
          "format": "uint64",
          "description": "The ID of the managing account.",
          "type": "string"
        },
        "disbursementAmount": {
          "description": "The disbursement amount.",
          "$ref": "Price"
        },
        "disbursementDate": {
          "description": "The date the disbursement was initiated, in ISO 8601 format.",
          "type": "string"
        }
      }
    },
    "OrdersGetByMerchantOrderIdResponse": {
      "id": "OrdersGetByMerchantOrderIdResponse",
      "properties": {
        "order": {
          "$ref": "Order",
          "description": "The requested order."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersGetByMerchantOrderIdResponse\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LiasettingsGetAccessibleGmbAccountsResponse": {
      "type": "object",
      "id": "LiasettingsGetAccessibleGmbAccountsResponse",
      "properties": {
        "gmbAccounts": {
          "description": "A list of GMB accounts which are available to the merchant.",
          "type": "array",
          "items": {
            "$ref": "GmbAccountsGmbAccount"
          }
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#liasettingsGetAccessibleGmbAccountsResponse\"."
        },
        "accountId": {
          "format": "uint64",
          "type": "string",
          "description": "The ID of the Merchant Center account."
        }
      }
    },
    "OrderShipment": {
      "properties": {
        "carrier": {
          "description": "The carrier handling the shipment. For supported carriers, Google includes the carrier name and tracking URL in emails to customers. For select supported carriers, Google also automatically updates the shipment status based on the provided shipment ID. *Note:* You can also use unsupported carriers, but emails to customers will not include the carrier name or tracking URL, and there will be no automatic order status updates. Supported carriers for US are: - \"`ups`\" (United Parcel Service) *automatic status updates* - \"`usps`\" (United States Postal Service) *automatic status updates* - \"`fedex`\" (FedEx) *automatic status updates * - \"`dhl`\" (DHL eCommerce) *automatic status updates* (US only) - \"`ontrac`\" (OnTrac) *automatic status updates * - \"`dhl express`\" (DHL Express) - \"`deliv`\" (Deliv) - \"`dynamex`\" (TForce) - \"`lasership`\" (LaserShip) - \"`mpx`\" (Military Parcel Xpress) - \"`uds`\" (United Delivery Service) - \"`efw`\" (Estes Forwarding Worldwide) - \"`jd logistics`\" (JD Logistics) - \"`yunexpress`\" (YunExpress) - \"`china post`\" (China Post) - \"`china ems`\" (China Post Express Mail Service) - \"`singapore post`\" (Singapore Post) - \"`pos malaysia`\" (Pos Malaysia) - \"`postnl`\" (PostNL) - \"`ptt`\" (PTT Turkish Post) - \"`eub`\" (ePacket) - \"`chukou1`\" (Chukou1 Logistics) - \"`bestex`\" (Best Express) - \"`canada post`\" (Canada Post) - \"`purolator`\" (Purolator) - \"`canpar`\" (Canpar) - \"`india post`\" (India Post) - \"`blue dart`\" (Blue Dart) - \"`delhivery`\" (Delhivery) - \"`dtdc`\" (DTDC) - \"`tpc india`\" (TPC India) Supported carriers for FR are: - \"`la poste`\" (La Poste) *automatic status updates * - \"`colissimo`\" (Colissimo by La Poste) *automatic status updates* - \"`ups`\" (United Parcel Service) *automatic status updates * - \"`chronopost`\" (Chronopost by La Poste) - \"`gls`\" (General Logistics Systems France) - \"`dpd`\" (DPD Group by GeoPost) - \"`bpost`\" (Belgian Post Group) - \"`colis prive`\" (Colis Privé) - \"`boxtal`\" (Boxtal) - \"`geodis`\" (GEODIS) - \"`tnt`\" (TNT) - \"`db schenker`\" (DB Schenker) - \"`aramex`\" (Aramex) ",
          "type": "string"
        },
        "lineItems": {
          "description": "The line items that are shipped.",
          "items": {
            "$ref": "OrderShipmentLineItemShipment"
          },
          "type": "array"
        },
        "status": {
          "type": "string",
          "description": "The status of the shipment. Acceptable values are: - \"`delivered`\" - \"`readyForPickup`\" - \"`shipped`\" - \"`undeliverable`\" "
        },
        "scheduledDeliveryDetails": {
          "$ref": "OrderShipmentScheduledDeliveryDetails",
          "description": "Delivery details of the shipment if scheduling is needed."
        },
        "deliveryDate": {
          "description": "Date on which the shipment has been delivered, in ISO 8601 format. Present only if `status` is `delivered`",
          "type": "string"
        },
        "creationDate": {
          "description": "Date on which the shipment has been created, in ISO 8601 format.",
          "type": "string"
        },
        "trackingId": {
          "description": "The tracking ID for the shipment.",
          "type": "string"
        },
        "id": {
          "description": "The ID of the shipment.",
          "type": "string"
        }
      },
      "id": "OrderShipment",
      "type": "object"
    },
    "ShippingSettings": {
      "id": "ShippingSettings",
      "type": "object",
      "description": "The merchant account's shipping settings. All methods except getsupportedcarriers and getsupportedholidays require the admin role.",
      "properties": {
        "services": {
          "type": "array",
          "items": {
            "$ref": "Service"
          },
          "description": "The target account's list of services. Optional."
        },
        "postalCodeGroups": {
          "type": "array",
          "description": "A list of postal code groups that can be referred to in `services`. Optional.",
          "items": {
            "$ref": "PostalCodeGroup"
          }
        },
        "accountId": {
          "description": "The ID of the account to which these account shipping settings belong. Ignored upon update, always present in get request responses.",
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "LoyaltyPoints": {
      "id": "LoyaltyPoints",
      "type": "object",
      "properties": {
        "ratio": {
          "description": "The ratio of a point when converted to currency. Google assumes currency based on Merchant Center settings. If ratio is left out, it defaults to 1.0.",
          "type": "number",
          "format": "double"
        },
        "pointsValue": {
          "description": "The retailer's loyalty points in absolute value.",
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string",
          "description": "Name of loyalty points program. It is recommended to limit the name to 12 full-width characters or 24 Roman characters."
        }
      }
    },
    "LiasettingsListPosDataProvidersResponse": {
      "id": "LiasettingsListPosDataProvidersResponse",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#liasettingsListPosDataProvidersResponse\"."
        },
        "posDataProviders": {
          "items": {
            "$ref": "PosDataProviders"
          },
          "type": "array",
          "description": "The list of POS data providers for each eligible country"
        }
      },
      "type": "object"
    },
    "OrderLineItemReturnInfo": {
      "properties": {
        "isReturnable": {
          "type": "boolean",
          "description": "Required. Whether the item is returnable."
        },
        "policyUrl": {
          "description": "Required. URL of the item return policy.",
          "type": "string"
        },
        "daysToReturn": {
          "type": "integer",
          "description": "Required. How many days later the item can be returned.",
          "format": "int32"
        }
      },
      "type": "object",
      "id": "OrderLineItemReturnInfo"
    },
    "DatafeedstatusesCustomBatchRequest": {
      "type": "object",
      "properties": {
        "entries": {
          "items": {
            "$ref": "DatafeedstatusesCustomBatchRequestEntry"
          },
          "description": "The request entries to be processed in the batch.",
          "type": "array"
        }
      },
      "id": "DatafeedstatusesCustomBatchRequest"
    },
    "CarrierRate": {
      "id": "CarrierRate",
      "type": "object",
      "properties": {
        "carrierService": {
          "description": "Carrier service, such as `\"ground\"` or `\"2 days\"`. The list of supported services for a carrier can be retrieved via the `getSupportedCarriers` method. Required.",
          "type": "string"
        },
        "originPostalCode": {
          "type": "string",
          "description": "Shipping origin for this carrier rate. Required."
        },
        "name": {
          "type": "string",
          "description": "Name of the carrier rate. Must be unique per rate group. Required."
        },
        "flatAdjustment": {
          "$ref": "Price",
          "description": "Additive shipping rate modifier. Can be negative. For example `{ \"value\": \"1\", \"currency\" : \"USD\" }` adds $1 to the rate, `{ \"value\": \"-3\", \"currency\" : \"USD\" }` removes $3 from the rate. Optional."
        },
        "percentageAdjustment": {
          "description": "Multiplicative shipping rate modifier as a number in decimal notation. Can be negative. For example `\"5.4\"` increases the rate by 5.4%, `\"-3\"` decreases the rate by 3%. Optional.",
          "type": "string"
        },
        "carrierName": {
          "description": "Carrier service, such as `\"UPS\"` or `\"Fedex\"`. The list of supported carriers can be retrieved via the `getSupportedCarriers` method. Required.",
          "type": "string"
        }
      }
    },
    "OrdersCancelTestOrderByCustomerRequest": {
      "id": "OrdersCancelTestOrderByCustomerRequest",
      "type": "object",
      "properties": {
        "reason": {
          "type": "string",
          "description": "The reason for the cancellation. Acceptable values are: - \"`changedMind`\" - \"`orderedWrongItem`\" - \"`other`\" "
        }
      }
    },
    "OrderreportsListTransactionsResponse": {
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#orderreportsListTransactionsResponse\".",
          "type": "string"
        },
        "transactions": {
          "items": {
            "$ref": "OrderReportTransaction"
          },
          "type": "array",
          "description": "The list of transactions."
        },
        "nextPageToken": {
          "description": "The token for the retrieval of the next page of transactions.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "OrderreportsListTransactionsResponse"
    },
    "OrdersUpdateMerchantOrderIdResponse": {
      "id": "OrdersUpdateMerchantOrderIdResponse",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersUpdateMerchantOrderIdResponse\".",
          "type": "string"
        },
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        }
      },
      "type": "object"
    },
    "Price": {
      "properties": {
        "value": {
          "description": "The price represented as a number.",
          "type": "string"
        },
        "currency": {
          "description": "The currency of the price.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "Price"
    },
    "HolidaysHoliday": {
      "properties": {
        "countryCode": {
          "type": "string",
          "description": "The CLDR territory code of the country in which the holiday is available. E.g. \"US\", \"DE\", \"GB\". A holiday cutoff can only be configured in a shipping settings service with matching delivery country. Always present."
        },
        "deliveryGuaranteeHour": {
          "format": "uint64",
          "type": "string",
          "description": "Hour of the day in the delivery location's timezone on the guaranteed delivery date by which the order has to arrive at the customer's. Possible values are: 0 (midnight), 1, ..., 12 (noon), 13, ..., 23. Always present."
        },
        "type": {
          "description": "The holiday type. Always present. Acceptable values are: - \"`Christmas`\" - \"`Easter`\" - \"`Father's Day`\" - \"`Halloween`\" - \"`Independence Day (USA)`\" - \"`Mother's Day`\" - \"`Thanksgiving`\" - \"`Valentine's Day`\" ",
          "type": "string"
        },
        "id": {
          "description": "Unique identifier for the holiday to be used when configuring holiday cutoffs. Always present.",
          "type": "string"
        },
        "date": {
          "description": "Date of the holiday, in ISO 8601 format. E.g. \"2016-12-25\" for Christmas 2016. Always present.",
          "type": "string"
        },
        "deliveryGuaranteeDate": {
          "type": "string",
          "description": "Date on which the order has to arrive at the customer's, in ISO 8601 format. E.g. \"2016-12-24\" for 24th December 2016. Always present."
        }
      },
      "type": "object",
      "id": "HolidaysHoliday"
    },
    "InventoryCustomBatchRequestEntry": {
      "id": "InventoryCustomBatchRequestEntry",
      "type": "object",
      "description": "A batch entry encoding a single non-batch inventory request.",
      "properties": {
        "productId": {
          "type": "string",
          "description": "The ID of the product for which to update price and availability."
        },
        "inventory": {
          "description": "Price and availability of the product.",
          "$ref": "Inventory"
        },
        "batchId": {
          "description": "An entry ID, unique within the batch request.",
          "format": "uint32",
          "type": "integer"
        },
        "merchantId": {
          "description": "The ID of the managing account.",
          "format": "uint64",
          "type": "string"
        },
        "storeCode": {
          "description": "The code of the store for which to update price and availability. Use `online` to update price and availability of an online product.",
          "type": "string"
        }
      }
    },
    "CustomAttribute": {
      "properties": {
        "value": {
          "description": "The value of the attribute.",
          "type": "string"
        },
        "name": {
          "description": "The name of the attribute. Underscores will be replaced by spaces upon insertion.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "The type of the attribute. Acceptable values are: - \"`boolean`\" - \"`datetimerange`\" - \"`float`\" - \"`group`\" - \"`int`\" - \"`price`\" - \"`text`\" - \"`time`\" - \"`url`\" "
        },
        "unit": {
          "type": "string",
          "description": "Free-form unit of the attribute. Unit can only be used for values of type int, float, or price."
        }
      },
      "id": "CustomAttribute",
      "type": "object"
    },
    "OrdersSetLineItemMetadataRequest": {
      "properties": {
        "operationId": {
          "description": "The ID of the operation. Unique across all operations for a given order.",
          "type": "string"
        },
        "lineItemId": {
          "description": "The ID of the line item to set metadata. Either lineItemId or productId is required.",
          "type": "string"
        },
        "annotations": {
          "type": "array",
          "items": {
            "$ref": "OrderMerchantProvidedAnnotation"
          }
        },
        "productId": {
          "description": "The ID of the product to set metadata. This is the REST ID used in the products service. Either lineItemId or productId is required.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "OrdersSetLineItemMetadataRequest"
    },
    "TransitTableTransitTimeRow": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "TransitTableTransitTimeRowTransitTimeValue"
          }
        }
      },
      "id": "TransitTableTransitTimeRow"
    },
    "OrderShipmentLineItemShipment": {
      "id": "OrderShipmentLineItemShipment",
      "type": "object",
      "properties": {
        "productId": {
          "type": "string",
          "description": "The ID of the product to ship. This is the REST ID used in the products service. Either lineItemId or productId is required."
        },
        "quantity": {
          "type": "integer",
          "format": "uint32",
          "description": "The quantity that is shipped."
        },
        "lineItemId": {
          "type": "string",
          "description": "The ID of the line item that is shipped. This value is assigned by Google when an order is created. Either lineItemId or productId is required."
        }
      }
    },
    "OrdersCancelRequest": {
      "properties": {
        "operationId": {
          "description": "The ID of the operation. Unique across all operations for a given order.",
          "type": "string"
        },
        "reason": {
          "type": "string",
          "description": "The reason for the cancellation. Acceptable values are: - \"`customerInitiatedCancel`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`noInventory`\" - \"`other`\" - \"`priceError`\" - \"`shippingPriceError`\" - \"`taxError`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" "
        },
        "reasonText": {
          "description": "The explanation of the reason.",
          "type": "string"
        }
      },
      "id": "OrdersCancelRequest",
      "type": "object"
    },
    "OrderCustomer": {
      "id": "OrderCustomer",
      "type": "object",
      "properties": {
        "fullName": {
          "description": "Full name of the customer.",
          "type": "string"
        },
        "invoiceReceivingEmail": {
          "type": "string",
          "description": "Email address for the merchant to send value-added tax or invoice documentation of the order. Only the last document sent is made available to the customer. For more information, see About automated VAT invoicing for Shopping Actions."
        },
        "email": {
          "type": "string",
          "description": "Deprecated."
        },
        "marketingRightsInfo": {
          "description": "Customer's marketing preferences. Contains the marketing opt-in information that is current at the time that the merchant call. User preference selections can change from one order to the next so preferences must be checked with every order.",
          "$ref": "OrderCustomerMarketingRightsInfo"
        },
        "explicitMarketingPreference": {
          "type": "boolean",
          "description": "Deprecated. Please use marketingRightsInfo instead."
        }
      }
    },
    "LiaSettings": {
      "properties": {
        "accountId": {
          "type": "string",
          "format": "uint64",
          "description": "The ID of the account to which these LIA settings belong. Ignored upon update, always present in get request responses."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#liaSettings`\""
        },
        "countrySettings": {
          "description": "The LIA settings for each country.",
          "items": {
            "$ref": "LiaCountrySettings"
          },
          "type": "array"
        }
      },
      "id": "LiaSettings",
      "type": "object",
      "description": "Local Inventory ads (LIA) settings. All methods except listposdataproviders require the admin role."
    },
    "ProductstatusesCustomBatchResponseEntry": {
      "properties": {
        "errors": {
          "description": "A list of errors, if the request failed.",
          "$ref": "Errors"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#productstatusesCustomBatchResponseEntry`\""
        },
        "productStatus": {
          "description": "The requested product status. Only defined if the request was successful.",
          "$ref": "ProductStatus"
        },
        "batchId": {
          "format": "uint32",
          "description": "The ID of the request entry this entry responds to.",
          "type": "integer"
        }
      },
      "id": "ProductstatusesCustomBatchResponseEntry",
      "description": "A batch entry encoding a single non-batch productstatuses response.",
      "type": "object"
    },
    "CutoffTime": {
      "type": "object",
      "properties": {
        "timezone": {
          "type": "string",
          "description": "Timezone identifier for the cutoff time. A list of identifiers can be found in the AdWords API documentation. E.g. \"Europe/Zurich\". Required."
        },
        "hour": {
          "type": "integer",
          "format": "uint32",
          "description": "Hour of the cutoff time until which an order has to be placed to be processed in the same day. Required."
        },
        "minute": {
          "description": "Minute of the cutoff time until which an order has to be placed to be processed in the same day. Required.",
          "type": "integer",
          "format": "uint32"
        }
      },
      "id": "CutoffTime"
    },
    "OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails": {
      "properties": {
        "deliverByDate": {
          "type": "string",
          "description": "Updated delivery by date, in ISO 8601 format. If not specified only ship by date is updated. Provided date should be within 1 year timeframe and can not be a date in the past."
        },
        "shipByDate": {
          "description": "Updated ship by date, in ISO 8601 format. If not specified only deliver by date is updated. Provided date should be within 1 year timeframe and can not be a date in the past.",
          "type": "string"
        },
        "lineItemId": {
          "type": "string",
          "description": "The ID of the line item to set metadata. Either lineItemId or productId is required."
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product to set metadata. This is the REST ID used in the products service. Either lineItemId or productId is required."
        }
      },
      "type": "object",
      "id": "OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails"
    },
    "OrderPickupDetails": {
      "type": "object",
      "properties": {
        "address": {
          "description": "Address of the pickup location where the shipment should be sent. Note that `recipientName` in the address is the name of the business at the pickup location.",
          "$ref": "OrderAddress"
        },
        "locationId": {
          "description": "ID of the pickup location.",
          "type": "string"
        },
        "collectors": {
          "items": {
            "$ref": "OrderPickupDetailsCollector"
          },
          "description": "Collectors authorized to pick up shipment from the pickup location.",
          "type": "array"
        }
      },
      "id": "OrderPickupDetails"
    },
    "OrdersCancelLineItemResponse": {
      "id": "OrdersCancelLineItemResponse",
      "properties": {
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersCancelLineItemResponse\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProductStatusDestinationStatus": {
      "properties": {
        "intention": {
          "type": "string",
          "description": "Provided for backward compatibility only. Always set to \"required\". Acceptable values are: - \"`default`\" - \"`excluded`\" - \"`optional`\" - \"`required`\" "
        },
        "approvalPending": {
          "type": "boolean",
          "description": "Whether the approval status might change due to further processing."
        },
        "destination": {
          "description": "The name of the destination",
          "type": "string"
        },
        "approvalStatus": {
          "description": "The destination's approval status. Acceptable values are: - \"`approved`\" - \"`disapproved`\" ",
          "type": "string"
        }
      },
      "id": "ProductStatusDestinationStatus",
      "type": "object"
    },
    "AccountstatusesCustomBatchResponseEntry": {
      "id": "AccountstatusesCustomBatchResponseEntry",
      "description": "A batch entry encoding a single non-batch accountstatuses response.",
      "type": "object",
      "properties": {
        "errors": {
          "description": "A list of errors defined if and only if the request failed.",
          "$ref": "Errors"
        },
        "batchId": {
          "format": "uint32",
          "description": "The ID of the request entry this entry responds to.",
          "type": "integer"
        },
        "accountStatus": {
          "$ref": "AccountStatus",
          "description": "The requested account status. Defined if and only if the request was successful."
        }
      }
    },
    "LiaCountrySettings": {
      "properties": {
        "onDisplayToOrder": {
          "$ref": "LiaOnDisplayToOrderSettings",
          "description": "LIA \"On Display To Order\" settings."
        },
        "country": {
          "description": "Required. CLDR country code (e.g. \"US\").",
          "type": "string"
        },
        "posDataProvider": {
          "description": "The POS data provider linked with this country.",
          "$ref": "LiaPosDataProvider"
        },
        "hostedLocalStorefrontActive": {
          "type": "boolean",
          "description": "The status of the \"Merchant hosted local storefront\" feature."
        },
        "inventory": {
          "$ref": "LiaInventorySettings",
          "description": "LIA inventory verification settings."
        },
        "storePickupActive": {
          "type": "boolean",
          "description": "The status of the \"Store pickup\" feature."
        },
        "about": {
          "$ref": "LiaAboutPageSettings",
          "description": "The settings for the About page."
        }
      },
      "type": "object",
      "id": "LiaCountrySettings"
    },
    "OrdersCustomBatchRequestEntry": {
      "type": "object",
      "properties": {
        "inStoreRefundLineItem": {
          "description": "Required for `inStoreReturnLineItem` method.",
          "$ref": "OrdersCustomBatchRequestEntryInStoreRefundLineItem"
        },
        "orderId": {
          "description": "The ID of the order. Required for all methods beside `getByMerchantOrderId`.",
          "type": "string"
        },
        "updateLineItemShippingDetails": {
          "$ref": "OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails",
          "description": "Required for `updateLineItemShippingDate` method."
        },
        "cancel": {
          "description": "Required for `cancel` method.",
          "$ref": "OrdersCustomBatchRequestEntryCancel"
        },
        "merchantOrderId": {
          "description": "The merchant order ID. Required for `updateMerchantOrderId` and `getByMerchantOrderId` methods.",
          "type": "string"
        },
        "shipLineItems": {
          "description": "Required for `shipLineItems` method.",
          "$ref": "OrdersCustomBatchRequestEntryShipLineItems"
        },
        "batchId": {
          "format": "uint32",
          "type": "integer",
          "description": "An entry ID, unique within the batch request."
        },
        "method": {
          "type": "string",
          "description": "The method of the batch entry. Acceptable values are: - \"`acknowledge`\" - \"`cancel`\" - \"`cancelLineItem`\" - \"`get`\" - \"`getByMerchantOrderId`\" - \"`inStoreRefundLineItem`\" - \"`refund`\" - \"`rejectReturnLineItem`\" - \"`returnLineItem`\" - \"`returnRefundLineItem`\" - \"`setLineItemMetadata`\" - \"`shipLineItems`\" - \"`updateLineItemShippingDetails`\" - \"`updateMerchantOrderId`\" - \"`updateShipment`\" "
        },
        "setLineItemMetadata": {
          "$ref": "OrdersCustomBatchRequestEntrySetLineItemMetadata",
          "description": "Required for `setLineItemMetadata` method."
        },
        "rejectReturnLineItem": {
          "description": "Required for `rejectReturnLineItem` method.",
          "$ref": "OrdersCustomBatchRequestEntryRejectReturnLineItem"
        },
        "returnLineItem": {
          "$ref": "OrdersCustomBatchRequestEntryReturnLineItem",
          "description": "Required for `returnLineItem` method."
        },
        "updateShipment": {
          "description": "Required for `updateShipment` method.",
          "$ref": "OrdersCustomBatchRequestEntryUpdateShipment"
        },
        "cancelLineItem": {
          "$ref": "OrdersCustomBatchRequestEntryCancelLineItem",
          "description": "Required for `cancelLineItem` method."
        },
        "returnRefundLineItem": {
          "description": "Required for `returnRefundLineItem` method.",
          "$ref": "OrdersCustomBatchRequestEntryReturnRefundLineItem"
        },
        "merchantId": {
          "format": "uint64",
          "type": "string",
          "description": "The ID of the managing account."
        },
        "operationId": {
          "description": "The ID of the operation. Unique across all operations for a given order. Required for all methods beside `get` and `getByMerchantOrderId`.",
          "type": "string"
        },
        "refund": {
          "$ref": "OrdersCustomBatchRequestEntryRefund",
          "description": "Required for `refund` method."
        }
      },
      "id": "OrdersCustomBatchRequestEntry"
    },
    "InventorySetResponse": {
      "id": "InventorySetResponse",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#inventorySetResponse\".",
          "type": "string"
        }
      }
    },
    "LiaAboutPageSettings": {
      "properties": {
        "status": {
          "type": "string",
          "description": "The status of the verification process for the About page. Acceptable values are: - \"`active`\" - \"`inactive`\" - \"`pending`\" "
        },
        "url": {
          "description": "The URL for the About page.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "LiaAboutPageSettings"
    },
    "ShippingsettingsCustomBatchResponseEntry": {
      "properties": {
        "batchId": {
          "type": "integer",
          "format": "uint32",
          "description": "The ID of the request entry to which this entry responds."
        },
        "shippingSettings": {
          "description": "The retrieved or updated account shipping settings.",
          "$ref": "ShippingSettings"
        },
        "errors": {
          "description": "A list of errors defined if, and only if, the request failed.",
          "$ref": "Errors"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#shippingsettingsCustomBatchResponseEntry`\""
        }
      },
      "id": "ShippingsettingsCustomBatchResponseEntry",
      "description": "A batch entry encoding a single non-batch shipping settings response.",
      "type": "object"
    },
    "AccountTaxTaxRule": {
      "type": "object",
      "description": "Tax calculation rule to apply in a state or province (USA only).",
      "properties": {
        "locationId": {
          "format": "uint64",
          "description": "Required. State (or province) is which the tax is applicable, described by its location ID (also called criteria ID).",
          "type": "string"
        },
        "useGlobalRate": {
          "description": "Whether the tax rate is taken from a global tax table or specified explicitly.",
          "type": "boolean"
        },
        "shippingTaxed": {
          "type": "boolean",
          "description": "If true, shipping charges are also taxed."
        },
        "ratePercent": {
          "description": "Explicit tax rate in percent, represented as a floating point number without the percentage character. Must not be negative.",
          "type": "string"
        },
        "country": {
          "type": "string",
          "description": "Country code in which tax is applicable."
        }
      },
      "id": "AccountTaxTaxRule"
    },
    "MerchantOrderReturnItem": {
      "type": "object",
      "properties": {
        "product": {
          "description": "Product data from the time of the order placement.",
          "$ref": "OrderLineItemProduct"
        },
        "returnShipmentIds": {
          "description": "IDs of the return shipments that this return item belongs to.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "customerReturnReason": {
          "$ref": "CustomerReturnReason",
          "description": "The reason that the customer chooses to return an item."
        },
        "merchantReturnReason": {
          "$ref": "RefundReason",
          "description": "The reason that merchant chooses to accept a return item."
        },
        "state": {
          "type": "string",
          "description": "State of the item. Acceptable values are: - \"`canceled`\" - \"`new`\" - \"`received`\" - \"`refunded`\" - \"`rejected`\" "
        },
        "itemId": {
          "description": "Product level item ID. If the returned items are of the same product, they will have the same ID.",
          "type": "string"
        }
      },
      "id": "MerchantOrderReturnItem"
    },
    "ShippingsettingsGetSupportedCarriersResponse": {
      "id": "ShippingsettingsGetSupportedCarriersResponse",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#shippingsettingsGetSupportedCarriersResponse\".",
          "type": "string"
        },
        "carriers": {
          "items": {
            "$ref": "CarriersCarrier"
          },
          "description": "A list of supported carriers. May be empty.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "ProductsCustomBatchRequest": {
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "ProductsCustomBatchRequestEntry"
          },
          "description": "The request entries to be processed in the batch."
        }
      },
      "id": "ProductsCustomBatchRequest",
      "type": "object"
    },
    "OrdersCustomBatchRequestEntryInStoreRefundLineItem": {
      "type": "object",
      "id": "OrdersCustomBatchRequestEntryInStoreRefundLineItem",
      "properties": {
        "quantity": {
          "description": "The quantity to return and refund.",
          "type": "integer",
          "format": "uint32"
        },
        "reason": {
          "type": "string",
          "description": "The reason for the return. Acceptable values are: - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`other`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`qualityNotAsExpected`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" "
        },
        "lineItemId": {
          "description": "The ID of the line item to return. Either lineItemId or productId is required.",
          "type": "string"
        },
        "amountTax": {
          "$ref": "Price",
          "description": "Tax amount that correspond to refund amount in amountPretax. Required."
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required."
        },
        "amountPretax": {
          "$ref": "Price",
          "description": "The amount that is refunded. Required."
        },
        "reasonText": {
          "type": "string",
          "description": "The explanation of the reason."
        }
      }
    },
    "ProductAspect": {
      "properties": {
        "intention": {
          "type": "string",
          "description": "Deprecated."
        },
        "aspectName": {
          "description": "Deprecated.",
          "type": "string"
        },
        "destinationName": {
          "type": "string",
          "description": "Deprecated."
        }
      },
      "id": "ProductAspect",
      "type": "object"
    },
    "LiasettingsRequestGmbAccessResponse": {
      "id": "LiasettingsRequestGmbAccessResponse",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#liasettingsRequestGmbAccessResponse\".",
          "type": "string"
        }
      }
    },
    "DatafeedsCustomBatchResponseEntry": {
      "type": "object",
      "id": "DatafeedsCustomBatchResponseEntry",
      "description": "A batch entry encoding a single non-batch datafeeds response.",
      "properties": {
        "errors": {
          "description": "A list of errors defined if and only if the request failed.",
          "$ref": "Errors"
        },
        "datafeed": {
          "$ref": "Datafeed",
          "description": "The requested data feed. Defined if and only if the request was successful."
        },
        "batchId": {
          "format": "uint32",
          "type": "integer",
          "description": "The ID of the request entry this entry responds to."
        }
      }
    },
    "InventoryCustomBatchResponse": {
      "type": "object",
      "id": "InventoryCustomBatchResponse",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#inventoryCustomBatchResponse\".",
          "type": "string"
        },
        "entries": {
          "type": "array",
          "items": {
            "$ref": "InventoryCustomBatchResponseEntry"
          },
          "description": "The result of the execution of the batch requests."
        }
      }
    },
    "Weight": {
      "properties": {
        "unit": {
          "type": "string",
          "description": "Required. The weight unit. Acceptable values are: - \"`kg`\" - \"`lb`\" "
        },
        "value": {
          "type": "string",
          "description": "Required. The weight represented as a number."
        }
      },
      "type": "object",
      "id": "Weight"
    },
    "TestOrderCustomer": {
      "type": "object",
      "properties": {
        "fullName": {
          "description": "Full name of the customer.",
          "type": "string"
        },
        "explicitMarketingPreference": {
          "description": "Deprecated. Please use marketingRightsInfo instead.",
          "type": "boolean"
        },
        "marketingRightsInfo": {
          "description": "Customer's marketing preferences.",
          "$ref": "TestOrderCustomerMarketingRightsInfo"
        },
        "email": {
          "type": "string",
          "description": "Required. Email address of the customer. Acceptable values are: - \"`pog.dwight.schrute@gmail.com`\" - \"`pog.jim.halpert@gmail.com`\" - \"`penpog.pam.beesly@gmail.comding`\" "
        }
      },
      "id": "TestOrderCustomer"
    },
    "DatafeedStatusError": {
      "id": "DatafeedStatusError",
      "type": "object",
      "description": "An error occurring in the feed, like \"invalid price\".",
      "properties": {
        "count": {
          "description": "The number of occurrences of the error in the feed.",
          "format": "uint64",
          "type": "string"
        },
        "examples": {
          "type": "array",
          "description": "A list of example occurrences of the error, grouped by product.",
          "items": {
            "$ref": "DatafeedStatusExample"
          }
        },
        "code": {
          "type": "string",
          "description": "The code of the error, e.g., \"validation/invalid_value\"."
        },
        "message": {
          "description": "The error message, e.g., \"Invalid price\".",
          "type": "string"
        }
      }
    },
    "TestOrder": {
      "properties": {
        "notificationMode": {
          "type": "string",
          "description": "Restricted. Do not use."
        },
        "enableOrderinvoices": {
          "type": "boolean",
          "description": "Whether the orderinvoices service should support this order."
        },
        "promotions": {
          "items": {
            "$ref": "OrderLegacyPromotion"
          },
          "description": "Deprecated. Ignored if provided.",
          "type": "array"
        },
        "shippingOption": {
          "type": "string",
          "description": "Required. The requested shipping option. Acceptable values are: - \"`economy`\" - \"`expedited`\" - \"`oneDay`\" - \"`sameDay`\" - \"`standard`\" - \"`twoDay`\" "
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#testOrder`\""
        },
        "shippingCostTax": {
          "$ref": "Price",
          "description": "Deprecated. Ignored if provided."
        },
        "paymentMethod": {
          "$ref": "TestOrderPaymentMethod",
          "description": "The details of the payment method."
        },
        "lineItems": {
          "items": {
            "$ref": "TestOrderLineItem"
          },
          "type": "array",
          "description": "Required. Line items that are ordered. At least one line item must be provided."
        },
        "shippingCost": {
          "description": "Required. The price of shipping for all items. Shipping tax is automatically calculated for orders where marketplace facilitator tax laws are applicable. Otherwise, tax settings from Merchant Center are applied. Note that shipping is not taxed in certain states.",
          "$ref": "Price"
        },
        "customer": {
          "$ref": "TestOrderCustomer",
          "description": "Required. The details of the customer who placed the order."
        },
        "predefinedDeliveryAddress": {
          "description": "Required. Identifier of one of the predefined delivery addresses for the delivery. Acceptable values are: - \"`dwight`\" - \"`jim`\" - \"`pam`\" ",
          "type": "string"
        },
        "predefinedPickupDetails": {
          "description": "Identifier of one of the predefined pickup details. Required for orders containing line items with shipping type `pickup`. Acceptable values are: - \"`dwight`\" - \"`jim`\" - \"`pam`\" ",
          "type": "string"
        }
      },
      "id": "TestOrder",
      "type": "object"
    },
    "AccountsCustomBatchRequest": {
      "id": "AccountsCustomBatchRequest",
      "properties": {
        "entries": {
          "type": "array",
          "description": "The request entries to be processed in the batch.",
          "items": {
            "$ref": "AccountsCustomBatchRequestEntry"
          }
        }
      },
      "type": "object"
    },
    "DatafeedsCustomBatchRequestEntry": {
      "type": "object",
      "properties": {
        "method": {
          "description": "The method of the batch entry. Acceptable values are: - \"`delete`\" - \"`fetchNow`\" - \"`get`\" - \"`insert`\" - \"`update`\" ",
          "type": "string"
        },
        "merchantId": {
          "format": "uint64",
          "type": "string",
          "description": "The ID of the managing account."
        },
        "batchId": {
          "format": "uint32",
          "description": "An entry ID, unique within the batch request.",
          "type": "integer"
        },
        "datafeedId": {
          "description": "The ID of the data feed to get, delete or fetch.",
          "format": "uint64",
          "type": "string"
        },
        "datafeed": {
          "description": "The data feed to insert.",
          "$ref": "Datafeed"
        }
      },
      "description": "A batch entry encoding a single non-batch datafeeds request.",
      "id": "DatafeedsCustomBatchRequestEntry"
    },
    "OrderreportsListDisbursementsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The token for the retrieval of the next page of disbursements."
        },
        "disbursements": {
          "items": {
            "$ref": "OrderReportDisbursement"
          },
          "type": "array",
          "description": "The list of disbursements."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#orderreportsListDisbursementsResponse\".",
          "type": "string"
        }
      },
      "id": "OrderreportsListDisbursementsResponse"
    },
    "AccountstatusesCustomBatchRequest": {
      "type": "object",
      "id": "AccountstatusesCustomBatchRequest",
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "AccountstatusesCustomBatchRequestEntry"
          },
          "description": "The request entries to be processed in the batch."
        }
      }
    },
    "OrdersCustomBatchRequestEntryShipLineItems": {
      "properties": {
        "trackingId": {
          "description": "Deprecated. Please use shipmentInfo instead. The tracking ID for the shipment.",
          "type": "string"
        },
        "shipmentInfos": {
          "type": "array",
          "description": "Shipment information. This field is repeated because a single line item can be shipped in several packages (and have several tracking IDs).",
          "items": {
            "$ref": "OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo"
          }
        },
        "carrier": {
          "description": "Deprecated. Please use shipmentInfo instead. The carrier handling the shipment. See `shipments[].carrier` in the Orders resource representation for a list of acceptable values.",
          "type": "string"
        },
        "shipmentGroupId": {
          "type": "string",
          "description": "ID of the shipment group. Required for orders that use the orderinvoices service."
        },
        "lineItems": {
          "description": "Line items to ship.",
          "items": {
            "$ref": "OrderShipmentLineItemShipment"
          },
          "type": "array"
        },
        "shipmentId": {
          "type": "string",
          "description": "Deprecated. Please use shipmentInfo instead. The ID of the shipment."
        }
      },
      "type": "object",
      "id": "OrdersCustomBatchRequestEntryShipLineItems"
    },
    "OrderLineItemShippingDetails": {
      "properties": {
        "method": {
          "description": "Required. Details of the shipping method.",
          "$ref": "OrderLineItemShippingDetailsMethod"
        },
        "shipByDate": {
          "type": "string",
          "description": "Required. The ship by date, in ISO 8601 format."
        },
        "deliverByDate": {
          "description": "Required. The delivery by date, in ISO 8601 format.",
          "type": "string"
        },
        "type": {
          "description": "Type of shipment. Indicates whether `deliveryDetails` or `pickupDetails` is applicable for this shipment. Acceptable values are: - \"`delivery`\" - \"`pickup`\" ",
          "type": "string"
        }
      },
      "id": "OrderLineItemShippingDetails",
      "type": "object"
    },
    "OrdersCreateTestReturnResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersCreateTestReturnResponse\"."
        },
        "returnId": {
          "type": "string",
          "description": "The ID of the newly created test order return."
        }
      },
      "type": "object",
      "id": "OrdersCreateTestReturnResponse"
    },
    "AccounttaxCustomBatchRequest": {
      "type": "object",
      "id": "AccounttaxCustomBatchRequest",
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "AccounttaxCustomBatchRequestEntry"
          },
          "description": "The request entries to be processed in the batch."
        }
      }
    },
    "TestOrderLineItemProduct": {
      "type": "object",
      "id": "TestOrderLineItemProduct",
      "properties": {
        "channel": {
          "type": "string",
          "description": "Deprecated. Acceptable values are: - \"`online`\" "
        },
        "mpn": {
          "description": "Manufacturer Part Number (MPN) of the item. Optional.",
          "type": "string"
        },
        "contentLanguage": {
          "description": "Required. The two-letter ISO 639-1 language code for the item. Acceptable values are: - \"`en`\" - \"`fr`\" ",
          "type": "string"
        },
        "brand": {
          "type": "string",
          "description": "Required. Brand of the item."
        },
        "imageLink": {
          "description": "Required. URL of an image of the item.",
          "type": "string"
        },
        "variantAttributes": {
          "description": "Variant attributes for the item. Optional.",
          "type": "array",
          "items": {
            "$ref": "OrderLineItemProductVariantAttribute"
          }
        },
        "condition": {
          "description": "Required. Condition or state of the item. Acceptable values are: - \"`new`\" ",
          "type": "string"
        },
        "gtin": {
          "description": "Global Trade Item Number (GTIN) of the item. Optional.",
          "type": "string"
        },
        "fees": {
          "items": {
            "$ref": "OrderLineItemProductFee"
          },
          "description": "Fees for the item. Optional.",
          "type": "array"
        },
        "offerId": {
          "type": "string",
          "description": "Required. An identifier of the item."
        },
        "targetCountry": {
          "type": "string",
          "description": "Required. The CLDR territory // code of the target country of the product."
        },
        "itemGroupId": {
          "type": "string",
          "description": "Shared identifier for all variants of the same product. Optional."
        },
        "price": {
          "description": "Required. The price for the product. Tax is automatically calculated for orders where marketplace facilitator tax laws are applicable. Otherwise, tax settings from Merchant Center are applied.",
          "$ref": "Price"
        },
        "title": {
          "description": "Required. The title of the product.",
          "type": "string"
        }
      }
    },
    "ProductstatusesListResponse": {
      "properties": {
        "resources": {
          "items": {
            "$ref": "ProductStatus"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#productstatusesListResponse\"."
        },
        "nextPageToken": {
          "description": "The token for the retrieval of the next page of products statuses.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ProductstatusesListResponse"
    },
    "ProductsCustomBatchResponse": {
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#productsCustomBatchResponse\".",
          "type": "string"
        },
        "entries": {
          "type": "array",
          "items": {
            "$ref": "ProductsCustomBatchResponseEntry"
          },
          "description": "The result of the execution of the batch requests."
        }
      },
      "id": "ProductsCustomBatchResponse",
      "type": "object"
    },
    "InvoiceSummaryAdditionalChargeSummary": {
      "type": "object",
      "properties": {
        "totalAmount": {
          "$ref": "Amount",
          "description": "[required] Total additional charge for this type."
        },
        "type": {
          "description": "[required] Type of the additional charge. Acceptable values are: - \"`shipping`\" ",
          "type": "string"
        }
      },
      "id": "InvoiceSummaryAdditionalChargeSummary"
    },
    "RefundReason": {
      "id": "RefundReason",
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of the reason."
        },
        "reasonCode": {
          "type": "string",
          "description": "Code of the refund reason. Acceptable values are: - \"`adjustment`\" - \"`autoPostInternal`\" - \"`autoPostInvalidBillingAddress`\" - \"`autoPostNoInventory`\" - \"`autoPostPriceError`\" - \"`autoPostUndeliverableShippingAddress`\" - \"`couponAbuse`\" - \"`courtesyAdjustment`\" - \"`customerCanceled`\" - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`customerSupportRequested`\" - \"`deliveredLateByCarrier`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`failToPushOrderGoogleError`\" - \"`failToPushOrderMerchantError`\" - \"`failToPushOrderMerchantFulfillmentError`\" - \"`failToPushOrderToMerchant`\" - \"`failToPushOrderToMerchantOutOfStock`\" - \"`feeAdjustment`\" - \"`invalidCoupon`\" - \"`lateShipmentCredit`\" - \"`malformedShippingAddress`\" - \"`merchantDidNotShipOnTime`\" - \"`noInventory`\" - \"`orderTimeout`\" - \"`other`\" - \"`paymentAbuse`\" - \"`paymentDeclined`\" - \"`priceAdjustment`\" - \"`priceError`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`promoReallocation`\" - \"`qualityNotAsExpected`\" - \"`returnRefundAbuse`\" - \"`shippingCostAdjustment`\" - \"`shippingPriceError`\" - \"`taxAdjustment`\" - \"`taxError`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" "
        }
      }
    },
    "AccountAdwordsLink": {
      "properties": {
        "adwordsId": {
          "description": "Customer ID of the AdWords account.",
          "format": "uint64",
          "type": "string"
        },
        "status": {
          "description": "Status of the link between this Merchant Center account and the AdWords account. Upon retrieval, it represents the actual status of the link and can be either `active` if it was approved in Google AdWords or `pending` if it's pending approval. Upon insertion, it represents the *intended* status of the link. Re-uploading a link with status `active` when it's still pending or with status `pending` when it's already active will have no effect: the status will remain unchanged. Re-uploading a link with deprecated status `inactive` is equivalent to not submitting the link at all and will delete the link if it was active or cancel the link request if it was pending. Acceptable values are: - \"`active`\" - \"`pending`\" ",
          "type": "string"
        }
      },
      "id": "AccountAdwordsLink",
      "type": "object"
    },
    "TestOrderPaymentMethod": {
      "type": "object",
      "id": "TestOrderPaymentMethod",
      "properties": {
        "lastFourDigits": {
          "type": "string",
          "description": "The last four digits of the card number."
        },
        "type": {
          "type": "string",
          "description": "The type of instrument. Note that real orders might have different values than the four values accepted by `createTestOrder`. Acceptable values are: - \"`AMEX`\" - \"`DISCOVER`\" - \"`MASTERCARD`\" - \"`VISA`\" "
        },
        "expirationMonth": {
          "format": "int32",
          "description": "The card expiration month (January = 1, February = 2 etc.).",
          "type": "integer"
        },
        "predefinedBillingAddress": {
          "type": "string",
          "description": "The billing address. Acceptable values are: - \"`dwight`\" - \"`jim`\" - \"`pam`\" "
        },
        "expirationYear": {
          "description": "The card expiration year (4-digit, e.g. 2015).",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "LiasettingsCustomBatchResponseEntry": {
      "type": "object",
      "id": "LiasettingsCustomBatchResponseEntry",
      "properties": {
        "errors": {
          "description": "A list of errors defined if, and only if, the request failed.",
          "$ref": "Errors"
        },
        "liaSettings": {
          "$ref": "LiaSettings",
          "description": "The retrieved or updated Lia settings."
        },
        "posDataProviders": {
          "items": {
            "$ref": "PosDataProviders"
          },
          "description": "The list of POS data providers.",
          "type": "array"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#liasettingsCustomBatchResponseEntry`\"",
          "type": "string"
        },
        "gmbAccounts": {
          "description": "The the list of accessible GMB accounts.",
          "$ref": "GmbAccounts"
        },
        "batchId": {
          "format": "uint32",
          "description": "The ID of the request entry to which this entry responds.",
          "type": "integer"
        }
      }
    },
    "ProductShipping": {
      "id": "ProductShipping",
      "properties": {
        "country": {
          "type": "string",
          "description": "The CLDR territory code of the country to which an item will ship."
        },
        "locationGroupName": {
          "description": "The location where the shipping is applicable, represented by a location group name.",
          "type": "string"
        },
        "region": {
          "type": "string",
          "description": "The geographic region to which a shipping rate applies."
        },
        "price": {
          "description": "Fixed shipping price, represented as a number.",
          "$ref": "Price"
        },
        "postalCode": {
          "description": "The postal code range that the shipping rate applies to, represented by a postal code, a postal code prefix followed by a * wildcard, a range between two postal codes or two postal code prefixes of equal length.",
          "type": "string"
        },
        "locationId": {
          "type": "string",
          "format": "int64",
          "description": "The numeric ID of a location that the shipping rate applies to as defined in the AdWords API."
        },
        "service": {
          "type": "string",
          "description": "A free-form description of the service class or delivery speed."
        }
      },
      "type": "object"
    },
    "ProductsCustomBatchRequestEntry": {
      "properties": {
        "merchantId": {
          "format": "uint64",
          "description": "The ID of the managing account.",
          "type": "string"
        },
        "method": {
          "description": "The method of the batch entry. Acceptable values are: - \"`delete`\" - \"`get`\" - \"`insert`\" ",
          "type": "string"
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product to get or delete. Only defined if the method is `get` or `delete`."
        },
        "product": {
          "description": "The product to insert. Only required if the method is `insert`.",
          "$ref": "Product"
        },
        "batchId": {
          "format": "uint32",
          "description": "An entry ID, unique within the batch request.",
          "type": "integer"
        }
      },
      "description": "A batch entry encoding a single non-batch products request.",
      "id": "ProductsCustomBatchRequestEntry",
      "type": "object"
    },
    "AccountsListResponse": {
      "id": "AccountsListResponse",
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "$ref": "Account"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token for the retrieval of the next page of accounts."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#accountsListResponse\"."
        }
      },
      "type": "object"
    },
    "ProductstatusesCustomBatchRequestEntry": {
      "id": "ProductstatusesCustomBatchRequestEntry",
      "properties": {
        "batchId": {
          "type": "integer",
          "description": "An entry ID, unique within the batch request.",
          "format": "uint32"
        },
        "includeAttributes": {
          "type": "boolean"
        },
        "merchantId": {
          "type": "string",
          "description": "The ID of the managing account.",
          "format": "uint64"
        },
        "method": {
          "description": "The method of the batch entry. Acceptable values are: - \"`get`\" ",
          "type": "string"
        },
        "productId": {
          "description": "The ID of the product whose status to get.",
          "type": "string"
        },
        "destinations": {
          "items": {
            "type": "string"
          },
          "description": "If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.",
          "type": "array"
        }
      },
      "description": "A batch entry encoding a single non-batch productstatuses request.",
      "type": "object"
    },
    "OrdersCustomBatchRequestEntrySetLineItemMetadata": {
      "id": "OrdersCustomBatchRequestEntrySetLineItemMetadata",
      "type": "object",
      "properties": {
        "productId": {
          "description": "The ID of the product to set metadata. This is the REST ID used in the products service. Either lineItemId or productId is required.",
          "type": "string"
        },
        "annotations": {
          "type": "array",
          "items": {
            "$ref": "OrderMerchantProvidedAnnotation"
          }
        },
        "lineItemId": {
          "description": "The ID of the line item to set metadata. Either lineItemId or productId is required.",
          "type": "string"
        }
      }
    },
    "OrdersCustomBatchRequestEntryRefund": {
      "id": "OrdersCustomBatchRequestEntryRefund",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Deprecated. Please use amountPretax and amountTax instead.",
          "$ref": "Price"
        },
        "amountTax": {
          "description": "Tax amount that corresponds to refund amount in amountPretax. Optional, but if filled, amountPretax must be set. Calculated automatically if not provided.",
          "$ref": "Price"
        },
        "reason": {
          "type": "string",
          "description": "The reason for the refund. Acceptable values are: - \"`adjustment`\" - \"`courtesyAdjustment`\" - \"`customerCanceled`\" - \"`customerDiscretionaryReturn`\" - \"`deliveredLateByCarrier`\" - \"`feeAdjustment`\" - \"`lateShipmentCredit`\" - \"`noInventory`\" - \"`other`\" - \"`priceError`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`shippingCostAdjustment`\" - \"`taxAdjustment`\" - \"`undeliverableShippingAddress`\" - \"`wrongProductShipped`\" "
        },
        "reasonText": {
          "type": "string",
          "description": "The explanation of the reason."
        },
        "amountPretax": {
          "description": "The amount that is refunded. Either amount or amountPretax should be filled.",
          "$ref": "Price"
        }
      }
    },
    "Product": {
      "id": "Product",
      "description": " Required product attributes are primarily defined by the products data specification. See the Products Data Specification Help Center article for information. Some attributes are country-specific, so make sure you select the appropriate country in the drop-down selector at the top of the page. Product data. After inserting, updating, or deleting a product, it may take several minutes before changes take effect.",
      "type": "object",
      "properties": {
        "productType": {
          "description": "Your category of the item (formatted as in products data specification).",
          "type": "string"
        },
        "availabilityDate": {
          "type": "string",
          "description": "The day a pre-ordered product becomes available for delivery, in ISO 8601 format."
        },
        "availability": {
          "type": "string",
          "description": "Availability status of the item. Acceptable values are: - \"`in stock`\" - \"`out of stock`\" - \"`preorder`\" "
        },
        "material": {
          "description": "The material of which the item is made.",
          "type": "string"
        },
        "adwordsGrouping": {
          "type": "string",
          "description": "Used to group items in an arbitrary way. Only for CPA%, discouraged otherwise."
        },
        "minHandlingTime": {
          "format": "int64",
          "description": "Minimal product handling time (in business days).",
          "type": "string"
        },
        "sizes": {
          "description": "Size of the item. Only one value is allowed. For variants with different sizes, insert a separate product for each size with the same `itemGroupId` value (see size definition).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "googleProductCategory": {
          "description": "Google's category of the item (see Google product taxonomy).",
          "type": "string"
        },
        "adwordsLabels": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Similar to adwords_grouping, but only works on CPC."
        },
        "shippingHeight": {
          "description": "Height of the item for shipping.",
          "$ref": "ProductShippingDimension"
        },
        "pattern": {
          "type": "string",
          "description": "The item's pattern (e.g. polka dots)."
        },
        "onlineOnly": {
          "type": "boolean",
          "description": "Deprecated."
        },
        "unitPricingBaseMeasure": {
          "description": "The preference of the denominator of the unit price.",
          "$ref": "ProductUnitPricingBaseMeasure"
        },
        "sellOnGoogleQuantity": {
          "description": "The quantity of the product that is available for selling on Google. Supported only for online products.",
          "format": "int64",
          "type": "string"
        },
        "condition": {
          "type": "string",
          "description": "Condition or state of the item. Acceptable values are: - \"`local`\" - \"`online`\" "
        },
        "salePriceEffectiveDate": {
          "description": "Date range during which the item is on sale (see products data specification ).",
          "type": "string"
        },
        "identifierExists": {
          "type": "boolean",
          "description": "False when the item does not have unique product identifiers appropriate to its category, such as GTIN, MPN, and brand. Required according to the Unique Product Identifier Rules for all target countries except for Canada."
        },
        "brand": {
          "type": "string",
          "description": "Brand of the item."
        },
        "targetCountry": {
          "description": "Required. The CLDR territory code for the item.",
          "type": "string"
        },
        "title": {
          "type": "string",
          "description": "Title of the item."
        },
        "shippingWeight": {
          "$ref": "ProductShippingWeight",
          "description": "Weight of the item for shipping."
        },
        "isBundle": {
          "description": "Whether the item is a merchant-defined bundle. A bundle is a custom grouping of different products sold by a merchant for a single price.",
          "type": "boolean"
        },
        "installment": {
          "description": "Number and amount of installments to pay for an item.",
          "$ref": "Installment"
        },
        "customLabel0": {
          "type": "string",
          "description": "Custom label 0 for custom grouping of items in a Shopping campaign."
        },
        "shippingWidth": {
          "$ref": "ProductShippingDimension",
          "description": "Width of the item for shipping."
        },
        "contentLanguage": {
          "type": "string",
          "description": "Required. The two-letter ISO 639-1 language code for the item."
        },
        "mpn": {
          "description": "Manufacturer Part Number (MPN) of the item.",
          "type": "string"
        },
        "channel": {
          "type": "string",
          "description": "Required. The item's channel (online or local). Acceptable values are: - \"`local`\" - \"`online`\" "
        },
        "aspects": {
          "description": "Deprecated. Do not use.",
          "type": "array",
          "items": {
            "$ref": "ProductAspect"
          }
        },
        "offerId": {
          "description": "Required. A unique identifier for the item. Leading and trailing whitespaces are stripped and multiple whitespaces are replaced by a single whitespace upon submission. Only valid unicode characters are accepted. See the products feed specification for details. *Note:* Content API methods that operate on products take the REST ID of the product, *not* this identifier.",
          "type": "string"
        },
        "gtin": {
          "description": "Global Trade Item Number (GTIN) of the item.",
          "type": "string"
        },
        "costOfGoodsSold": {
          "description": "Cost of goods sold. Used for gross profit reporting.",
          "$ref": "Price"
        },
        "displayAdsTitle": {
          "description": "Title of an item for dynamic remarketing campaigns.",
          "type": "string"
        },
        "customGroups": {
          "type": "array",
          "items": {
            "$ref": "CustomGroup"
          },
          "description": "A list of custom (merchant-provided) custom attribute groups."
        },
        "displayAdsValue": {
          "type": "number",
          "description": "Offer margin for dynamic remarketing campaigns.",
          "format": "double"
        },
        "multipack": {
          "description": "The number of identical products in a merchant-defined multipack.",
          "format": "int64",
          "type": "string"
        },
        "additionalProductTypes": {
          "items": {
            "type": "string"
          },
          "description": "Additional categories of the item (formatted as in products data specification).",
          "type": "array"
        },
        "destinations": {
          "type": "array",
          "description": "Specifies the intended destinations for the product.",
          "items": {
            "$ref": "ProductDestination"
          }
        },
        "ageGroup": {
          "type": "string",
          "description": "Target age group of the item. Acceptable values are: - \"`adult`\" - \"`infant`\" - \"`kids`\" - \"`newborn`\" - \"`toddler`\" - \"`youngAdult`\" "
        },
        "canonicalLink": {
          "description": "URL for the canonical version of your item's landing page.",
          "type": "string"
        },
        "unitPricingMeasure": {
          "$ref": "ProductUnitPricingMeasure",
          "description": "The measure and dimension of an item."
        },
        "customAttributes": {
          "type": "array",
          "items": {
            "$ref": "CustomAttribute"
          },
          "description": "A list of custom (merchant-provided) attributes. It can also be used for submitting any attribute of the feed specification in its generic form (e.g., `{ \"name\": \"size type\", \"value\": \"regular\" }`). This is useful for submitting attributes not explicitly exposed by the API, such as additional attributes used for Shopping Actions."
        },
        "customLabel1": {
          "type": "string",
          "description": "Custom label 1 for custom grouping of items in a Shopping campaign."
        },
        "sizeSystem": {
          "description": "System in which the size is specified. Recommended for apparel items. Acceptable values are: - \"`AU`\" - \"`BR`\" - \"`CN`\" - \"`DE`\" - \"`EU`\" - \"`FR`\" - \"`IT`\" - \"`JP`\" - \"`MEX`\" - \"`UK`\" - \"`US`\" ",
          "type": "string"
        },
        "sizeType": {
          "description": "The cut of the item. Recommended for apparel items. Acceptable values are: - \"`big and tall`\" - \"`maternity`\" - \"`oversize`\" - \"`petite`\" - \"`plus`\" - \"`regular`\" ",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#product`\"",
          "type": "string"
        },
        "itemGroupId": {
          "type": "string",
          "description": "Shared identifier for all variants of the same product."
        },
        "color": {
          "type": "string",
          "description": "Color of the item."
        },
        "maxHandlingTime": {
          "format": "int64",
          "type": "string",
          "description": "Maximal product handling time (in business days)."
        },
        "customLabel2": {
          "description": "Custom label 2 for custom grouping of items in a Shopping campaign.",
          "type": "string"
        },
        "expirationDate": {
          "description": "Date on which the item should expire, as specified upon insertion, in ISO 8601 format. The actual expiration date in Google Shopping is exposed in `productstatuses` as `googleExpirationDate` and might be earlier if `expirationDate` is too far in the future.",
          "type": "string"
        },
        "promotionIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The unique ID of a promotion."
        },
        "source": {
          "description": "The source of the offer, i.e., how the offer was created. Acceptable values are: - \"`api`\" - \"`crawl`\" - \"`feed`\" ",
          "type": "string"
        },
        "customLabel3": {
          "description": "Custom label 3 for custom grouping of items in a Shopping campaign.",
          "type": "string"
        },
        "shipping": {
          "description": "Shipping rules.",
          "type": "array",
          "items": {
            "$ref": "ProductShipping"
          }
        },
        "adult": {
          "description": "Set to true if the item is targeted towards adults.",
          "type": "boolean"
        },
        "imageLink": {
          "type": "string",
          "description": "URL of an image of the item."
        },
        "description": {
          "description": "Description of the item.",
          "type": "string"
        },
        "displayAdsId": {
          "description": "An identifier for an item for dynamic remarketing campaigns.",
          "type": "string"
        },
        "minEnergyEfficiencyClass": {
          "description": "The energy efficiency class as defined in EU directive 2010/30/EU. Acceptable values are: - \"`A`\" - \"`A+`\" - \"`A++`\" - \"`A+++`\" - \"`B`\" - \"`C`\" - \"`D`\" - \"`E`\" - \"`F`\" - \"`G`\" ",
          "type": "string"
        },
        "customLabel4": {
          "type": "string",
          "description": "Custom label 4 for custom grouping of items in a Shopping campaign."
        },
        "taxes": {
          "type": "array",
          "description": "Tax information.",
          "items": {
            "$ref": "ProductTax"
          }
        },
        "link": {
          "type": "string",
          "description": "URL directly linking to your item's page on your website."
        },
        "mobileLink": {
          "description": "URL for the mobile-optimized version of your item's landing page.",
          "type": "string"
        },
        "gender": {
          "description": "Target gender of the item. Acceptable values are: - \"`female`\" - \"`male`\" - \"`unisex`\" ",
          "type": "string"
        },
        "shippingLabel": {
          "description": "The shipping label of the product, used to group product in account-level shipping rules.",
          "type": "string"
        },
        "adwordsRedirect": {
          "description": "Allows advertisers to override the item URL when the product is shown within the context of Product Ads.",
          "type": "string"
        },
        "additionalImageLinks": {
          "items": {
            "type": "string"
          },
          "description": "Additional URLs of images of the item.",
          "type": "array"
        },
        "energyEfficiencyClass": {
          "description": "The energy efficiency class as defined in EU directive 2010/30/EU. Acceptable values are: - \"`A`\" - \"`A+`\" - \"`A++`\" - \"`A+++`\" - \"`B`\" - \"`C`\" - \"`D`\" - \"`E`\" - \"`F`\" - \"`G`\" ",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "The REST ID of the product. Content API methods that operate on products take this as their `productId` parameter. The REST ID for a product is of the form channel:contentLanguage: targetCountry: offerId."
        },
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "Error"
          },
          "description": "Read-only warnings."
        },
        "maxEnergyEfficiencyClass": {
          "description": "The energy efficiency class as defined in EU directive 2010/30/EU. Acceptable values are: - \"`A`\" - \"`A+`\" - \"`A++`\" - \"`A+++`\" - \"`B`\" - \"`C`\" - \"`D`\" - \"`E`\" - \"`F`\" - \"`G`\" ",
          "type": "string"
        },
        "displayAdsSimilarIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Advertiser-specified recommendations."
        },
        "validatedDestinations": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Deprecated. The read-only list of intended destinations which passed validation."
        },
        "loyaltyPoints": {
          "description": "Loyalty points that users receive after purchasing the item. Japan only.",
          "$ref": "LoyaltyPoints"
        },
        "salePrice": {
          "$ref": "Price",
          "description": "Advertised sale price of the item."
        },
        "price": {
          "$ref": "Price",
          "description": "Price of the item."
        },
        "shippingLength": {
          "$ref": "ProductShippingDimension",
          "description": "Length of the item for shipping."
        },
        "displayAdsLink": {
          "type": "string",
          "description": "URL directly to your item's landing page for dynamic remarketing campaigns."
        }
      }
    },
    "UnitInvoiceTaxLine": {
      "properties": {
        "taxAmount": {
          "description": "[required] Tax amount for the tax type.",
          "$ref": "Price"
        },
        "taxType": {
          "description": "[required] Type of the tax. Acceptable values are: - \"`otherFee`\" - \"`otherFeeTax`\" - \"`sales`\" ",
          "type": "string"
        },
        "taxName": {
          "type": "string",
          "description": "Optional name of the tax type. This should only be provided if `taxType` is `otherFeeTax`."
        }
      },
      "type": "object",
      "id": "UnitInvoiceTaxLine"
    },
    "ReturnShipment": {
      "id": "ReturnShipment",
      "properties": {
        "shipmentTrackingInfos": {
          "items": {
            "$ref": "ShipmentTrackingInfo"
          },
          "type": "array",
          "description": "Tracking information of the shipment. One return shipment might be handled by several shipping carriers sequentially."
        },
        "shipmentId": {
          "description": "Shipment ID generated by Google.",
          "type": "string"
        },
        "returnMethodType": {
          "description": "Type of the return method. Acceptable values are: - \"`byMail`\" - \"`contactCustomerSupport`\" - \"`returnless`\" ",
          "type": "string"
        },
        "shippingDate": {
          "type": "string",
          "description": "The date of shipping of the shipment, in ISO 8601 format."
        },
        "deliveryDate": {
          "description": "The date of delivery of the shipment, in ISO 8601 format.",
          "type": "string"
        },
        "creationDate": {
          "description": "The date of creation of the shipment, in ISO 8601 format.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "description": "State of the shipment. Acceptable values are: - \"`completed`\" - \"`new`\" - \"`shipped`\" - \"`undeliverable`\" - \"`pending`\" "
        }
      },
      "type": "object"
    },
    "PosSaleResponse": {
      "id": "PosSaleResponse",
      "properties": {
        "contentLanguage": {
          "type": "string",
          "description": "Required. The two-letter ISO 639-1 language code for the item."
        },
        "storeCode": {
          "description": "Required. The identifier of the merchant's store. Either a `storeCode` inserted via the API or the code of the store in Google My Business.",
          "type": "string"
        },
        "price": {
          "$ref": "Price",
          "description": "Required. The price of the item."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#posSaleResponse\".",
          "type": "string"
        },
        "quantity": {
          "description": "Required. The relative change of the available quantity. Negative for items returned.",
          "type": "string",
          "format": "int64"
        },
        "timestamp": {
          "description": "Required. The inventory timestamp, in ISO 8601 format.",
          "type": "string"
        },
        "itemId": {
          "description": "Required. A unique identifier for the item.",
          "type": "string"
        },
        "targetCountry": {
          "description": "Required. The CLDR territory code for the item.",
          "type": "string"
        },
        "gtin": {
          "type": "string",
          "description": "Global Trade Item Number."
        },
        "saleId": {
          "description": "A unique ID to group items from the same sale event.",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/content": {
          "description": "Manage your product listings and accounts for Google Shopping"
        }
      }
    }
  },
  "discoveryVersion": "v1",
  "ownerName": "Google",
  "batchPath": "batch",
  "kind": "discovery#restDescription",
  "baseUrl": "https://shoppingcontent.googleapis.com/",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "rootUrl": "https://shoppingcontent.googleapis.com/",
  "protocol": "rest",
  "parameters": {
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "location": "query",
      "default": "true"
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "description": "V1 error format."
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "alt": {
      "default": "json",
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    }
  },
  "fullyEncodeReservedExpansion": true,
  "description": "Manage your product listings and accounts for Google Shopping",
  "title": "Content API for Shopping",
  "servicePath": "",
  "id": "content:v2",
  "documentationLink": "https://developers.google.com/shopping-content/v2/",
  "basePath": "",
  "revision": "20201028"
}
