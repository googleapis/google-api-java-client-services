/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.genomics.model;

/**
 * An event generated when a container starts.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Genomics API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ContainerStartedEvent extends com.google.api.client.json.GenericJson {

  /**
   * The numeric ID of the action that started this container.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer actionId;

  /**
   * The public IP address that can be used to connect to the container. This field is only
   * populated when at least one port mapping is present. If the instance was created with a private
   * address, this field will be empty even if port mappings exist.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String ipAddress;

  /**
   * The container-to-host port mappings installed for this container. This set will contain any
   * ports exposed using the `PUBLISH_EXPOSED_PORTS` flag as well as any specified in the `Action`
   * definition.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.Integer> portMappings;

  /**
   * The numeric ID of the action that started this container.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getActionId() {
    return actionId;
  }

  /**
   * The numeric ID of the action that started this container.
   * @param actionId actionId or {@code null} for none
   */
  public ContainerStartedEvent setActionId(java.lang.Integer actionId) {
    this.actionId = actionId;
    return this;
  }

  /**
   * The public IP address that can be used to connect to the container. This field is only
   * populated when at least one port mapping is present. If the instance was created with a private
   * address, this field will be empty even if port mappings exist.
   * @return value or {@code null} for none
   */
  public java.lang.String getIpAddress() {
    return ipAddress;
  }

  /**
   * The public IP address that can be used to connect to the container. This field is only
   * populated when at least one port mapping is present. If the instance was created with a private
   * address, this field will be empty even if port mappings exist.
   * @param ipAddress ipAddress or {@code null} for none
   */
  public ContainerStartedEvent setIpAddress(java.lang.String ipAddress) {
    this.ipAddress = ipAddress;
    return this;
  }

  /**
   * The container-to-host port mappings installed for this container. This set will contain any
   * ports exposed using the `PUBLISH_EXPOSED_PORTS` flag as well as any specified in the `Action`
   * definition.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.Integer> getPortMappings() {
    return portMappings;
  }

  /**
   * The container-to-host port mappings installed for this container. This set will contain any
   * ports exposed using the `PUBLISH_EXPOSED_PORTS` flag as well as any specified in the `Action`
   * definition.
   * @param portMappings portMappings or {@code null} for none
   */
  public ContainerStartedEvent setPortMappings(java.util.Map<String, java.lang.Integer> portMappings) {
    this.portMappings = portMappings;
    return this;
  }

  @Override
  public ContainerStartedEvent set(String fieldName, Object value) {
    return (ContainerStartedEvent) super.set(fieldName, value);
  }

  @Override
  public ContainerStartedEvent clone() {
    return (ContainerStartedEvent) super.clone();
  }

}
