/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Whether a HOLD decision is enforced based on the decision name and QPS requirement. For LiveChat,
 * there could be multiple Automod moderations generated at chat message creation time. Only HOLD
 * decisions are persisted. At most one HOLD decision can be enforced based on write QPS.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class YoutubeCommentsApiCommentModeratedRestrictionAutoModDecisionEnforcement extends com.google.api.client.json.GenericJson {

  /**
   * Whether or not the decision is enforced.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean enforced;

  /**
   * Current the enforcement rule depends on live chat write QPS at chat message creation time.
   * Enforce MEDIAN when QPS<=4. Enforce HIGH_RECALL when QPS>4 AND QPS<=10. Enforce
   * ULTRA_HIGH_RECALL when QPS>10.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Whether or not the decision is enforced.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getEnforced() {
    return enforced;
  }

  /**
   * Whether or not the decision is enforced.
   * @param enforced enforced or {@code null} for none
   */
  public YoutubeCommentsApiCommentModeratedRestrictionAutoModDecisionEnforcement setEnforced(java.lang.Boolean enforced) {
    this.enforced = enforced;
    return this;
  }

  /**
   * Current the enforcement rule depends on live chat write QPS at chat message creation time.
   * Enforce MEDIAN when QPS<=4. Enforce HIGH_RECALL when QPS>4 AND QPS<=10. Enforce
   * ULTRA_HIGH_RECALL when QPS>10.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Current the enforcement rule depends on live chat write QPS at chat message creation time.
   * Enforce MEDIAN when QPS<=4. Enforce HIGH_RECALL when QPS>4 AND QPS<=10. Enforce
   * ULTRA_HIGH_RECALL when QPS>10.
   * @param name name or {@code null} for none
   */
  public YoutubeCommentsApiCommentModeratedRestrictionAutoModDecisionEnforcement setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  @Override
  public YoutubeCommentsApiCommentModeratedRestrictionAutoModDecisionEnforcement set(String fieldName, Object value) {
    return (YoutubeCommentsApiCommentModeratedRestrictionAutoModDecisionEnforcement) super.set(fieldName, value);
  }

  @Override
  public YoutubeCommentsApiCommentModeratedRestrictionAutoModDecisionEnforcement clone() {
    return (YoutubeCommentsApiCommentModeratedRestrictionAutoModDecisionEnforcement) super.clone();
  }

}
