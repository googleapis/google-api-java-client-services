/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudasset.v1.model;

/**
 * BigQuery destination.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Asset API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination extends com.google.api.client.json.GenericJson {

  /**
   * Required. The BigQuery dataset where the query results will be saved. It has the format of
   * "projects/{projectId}/datasets/{datasetId}".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String dataset;

  /**
   * Required. The BigQuery table where the query results will be saved. If this table does not
   * exist, a new table with the given name will be created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String table;

  /**
   * Specifies the action that occurs if the destination table or partition already exists. The
   * following values are supported: * WRITE_TRUNCATE: If the table or partition already exists,
   * BigQuery overwrites the entire table or all the partitions data. * WRITE_APPEND: If the table
   * or partition already exists, BigQuery appends the data to the table or the latest partition. *
   * WRITE_EMPTY: If the table already exists and contains data, a 'duplicate' error is returned in
   * the job result. The default value is WRITE_EMPTY.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String writeDisposition;

  /**
   * Required. The BigQuery dataset where the query results will be saved. It has the format of
   * "projects/{projectId}/datasets/{datasetId}".
   * @return value or {@code null} for none
   */
  public java.lang.String getDataset() {
    return dataset;
  }

  /**
   * Required. The BigQuery dataset where the query results will be saved. It has the format of
   * "projects/{projectId}/datasets/{datasetId}".
   * @param dataset dataset or {@code null} for none
   */
  public GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination setDataset(java.lang.String dataset) {
    this.dataset = dataset;
    return this;
  }

  /**
   * Required. The BigQuery table where the query results will be saved. If this table does not
   * exist, a new table with the given name will be created.
   * @return value or {@code null} for none
   */
  public java.lang.String getTable() {
    return table;
  }

  /**
   * Required. The BigQuery table where the query results will be saved. If this table does not
   * exist, a new table with the given name will be created.
   * @param table table or {@code null} for none
   */
  public GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination setTable(java.lang.String table) {
    this.table = table;
    return this;
  }

  /**
   * Specifies the action that occurs if the destination table or partition already exists. The
   * following values are supported: * WRITE_TRUNCATE: If the table or partition already exists,
   * BigQuery overwrites the entire table or all the partitions data. * WRITE_APPEND: If the table
   * or partition already exists, BigQuery appends the data to the table or the latest partition. *
   * WRITE_EMPTY: If the table already exists and contains data, a 'duplicate' error is returned in
   * the job result. The default value is WRITE_EMPTY.
   * @return value or {@code null} for none
   */
  public java.lang.String getWriteDisposition() {
    return writeDisposition;
  }

  /**
   * Specifies the action that occurs if the destination table or partition already exists. The
   * following values are supported: * WRITE_TRUNCATE: If the table or partition already exists,
   * BigQuery overwrites the entire table or all the partitions data. * WRITE_APPEND: If the table
   * or partition already exists, BigQuery appends the data to the table or the latest partition. *
   * WRITE_EMPTY: If the table already exists and contains data, a 'duplicate' error is returned in
   * the job result. The default value is WRITE_EMPTY.
   * @param writeDisposition writeDisposition or {@code null} for none
   */
  public GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination setWriteDisposition(java.lang.String writeDisposition) {
    this.writeDisposition = writeDisposition;
    return this;
  }

  @Override
  public GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination set(String fieldName, Object value) {
    return (GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination clone() {
    return (GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination) super.clone();
  }

}
