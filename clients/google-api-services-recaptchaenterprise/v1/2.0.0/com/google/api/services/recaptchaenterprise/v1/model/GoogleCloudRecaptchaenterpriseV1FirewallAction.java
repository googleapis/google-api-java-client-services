/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.recaptchaenterprise.v1.model;

/**
 * An individual action. Each action represents what to do if a policy matches.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the reCAPTCHA Enterprise API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudRecaptchaenterpriseV1FirewallAction extends com.google.api.client.json.GenericJson {

  /**
   * The user request did not match any policy and should be allowed access to the requested
   * resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudRecaptchaenterpriseV1FirewallActionAllowAction allow;

  /**
   * This action denies access to a given page. The user gets an HTTP error code.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudRecaptchaenterpriseV1FirewallActionBlockAction block;

  /**
   * This action injects reCAPTCHA JavaScript code into the HTML page returned by the site backend.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudRecaptchaenterpriseV1FirewallActionIncludeRecaptchaScriptAction includeRecaptchaScript;

  /**
   * This action redirects the request to a reCAPTCHA interstitial to attach a token.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudRecaptchaenterpriseV1FirewallActionRedirectAction redirect;

  /**
   * This action sets a custom header but allow the request to continue to the customer backend.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudRecaptchaenterpriseV1FirewallActionSetHeaderAction setHeader;

  /**
   * This action transparently serves a different page to an offending user.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudRecaptchaenterpriseV1FirewallActionSubstituteAction substitute;

  /**
   * The user request did not match any policy and should be allowed access to the requested
   * resource.
   * @return value or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1FirewallActionAllowAction getAllow() {
    return allow;
  }

  /**
   * The user request did not match any policy and should be allowed access to the requested
   * resource.
   * @param allow allow or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1FirewallAction setAllow(GoogleCloudRecaptchaenterpriseV1FirewallActionAllowAction allow) {
    this.allow = allow;
    return this;
  }

  /**
   * This action denies access to a given page. The user gets an HTTP error code.
   * @return value or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1FirewallActionBlockAction getBlock() {
    return block;
  }

  /**
   * This action denies access to a given page. The user gets an HTTP error code.
   * @param block block or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1FirewallAction setBlock(GoogleCloudRecaptchaenterpriseV1FirewallActionBlockAction block) {
    this.block = block;
    return this;
  }

  /**
   * This action injects reCAPTCHA JavaScript code into the HTML page returned by the site backend.
   * @return value or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1FirewallActionIncludeRecaptchaScriptAction getIncludeRecaptchaScript() {
    return includeRecaptchaScript;
  }

  /**
   * This action injects reCAPTCHA JavaScript code into the HTML page returned by the site backend.
   * @param includeRecaptchaScript includeRecaptchaScript or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1FirewallAction setIncludeRecaptchaScript(GoogleCloudRecaptchaenterpriseV1FirewallActionIncludeRecaptchaScriptAction includeRecaptchaScript) {
    this.includeRecaptchaScript = includeRecaptchaScript;
    return this;
  }

  /**
   * This action redirects the request to a reCAPTCHA interstitial to attach a token.
   * @return value or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1FirewallActionRedirectAction getRedirect() {
    return redirect;
  }

  /**
   * This action redirects the request to a reCAPTCHA interstitial to attach a token.
   * @param redirect redirect or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1FirewallAction setRedirect(GoogleCloudRecaptchaenterpriseV1FirewallActionRedirectAction redirect) {
    this.redirect = redirect;
    return this;
  }

  /**
   * This action sets a custom header but allow the request to continue to the customer backend.
   * @return value or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1FirewallActionSetHeaderAction getSetHeader() {
    return setHeader;
  }

  /**
   * This action sets a custom header but allow the request to continue to the customer backend.
   * @param setHeader setHeader or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1FirewallAction setSetHeader(GoogleCloudRecaptchaenterpriseV1FirewallActionSetHeaderAction setHeader) {
    this.setHeader = setHeader;
    return this;
  }

  /**
   * This action transparently serves a different page to an offending user.
   * @return value or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1FirewallActionSubstituteAction getSubstitute() {
    return substitute;
  }

  /**
   * This action transparently serves a different page to an offending user.
   * @param substitute substitute or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1FirewallAction setSubstitute(GoogleCloudRecaptchaenterpriseV1FirewallActionSubstituteAction substitute) {
    this.substitute = substitute;
    return this;
  }

  @Override
  public GoogleCloudRecaptchaenterpriseV1FirewallAction set(String fieldName, Object value) {
    return (GoogleCloudRecaptchaenterpriseV1FirewallAction) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudRecaptchaenterpriseV1FirewallAction clone() {
    return (GoogleCloudRecaptchaenterpriseV1FirewallAction) super.clone();
  }

}
