/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.identitytoolkit.v2;

/**
 * Service definition for IdentityToolkit (v2).
 *
 * <p>
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/identity-platform" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link IdentityToolkitRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class IdentityToolkit extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        (com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1))) ||
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION >= 2,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "2.0.0 of the Identity Toolkit API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://identitytoolkit.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://identitytoolkit.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public IdentityToolkit(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  IdentityToolkit(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Accounts collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code IdentityToolkit identitytoolkit = new IdentityToolkit(...);}
   *   {@code IdentityToolkit.Accounts.List request = identitytoolkit.accounts().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Accounts accounts() {
    return new Accounts();
  }

  /**
   * The "accounts" collection of methods.
   */
  public class Accounts {

    /**
     * An accessor for creating requests from the MfaEnrollment collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code IdentityToolkit identitytoolkit = new IdentityToolkit(...);}
     *   {@code IdentityToolkit.MfaEnrollment.List request = identitytoolkit.mfaEnrollment().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public MfaEnrollment mfaEnrollment() {
      return new MfaEnrollment();
    }

    /**
     * The "mfaEnrollment" collection of methods.
     */
    public class MfaEnrollment {

      /**
       * Finishes enrolling a second factor for the user.
       *
       * Create a request for the method "mfaEnrollment.finalize".
       *
       * This request holds the parameters needed by the identitytoolkit server.  After setting any
       * optional parameters, call the {@link Finalize#execute()} method to invoke the remote operation.
       *
       * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest}
       * @return the request
       */
      public Finalize finalize(com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest content) throws java.io.IOException {
        Finalize result = new Finalize(content);
        initialize(result);
        return result;
      }

      public class Finalize extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentResponse> {

        private static final String REST_PATH = "v2/accounts/mfaEnrollment:finalize";

        /**
         * Finishes enrolling a second factor for the user.
         *
         * Create a request for the method "mfaEnrollment.finalize".
         *
         * This request holds the parameters needed by the the identitytoolkit server.  After setting any
         * optional parameters, call the {@link Finalize#execute()} method to invoke the remote operation.
         * <p> {@link
         * Finalize#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest}
         * @since 1.13
         */
        protected Finalize(com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest content) {
          super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentResponse.class);
        }

        @Override
        public Finalize set$Xgafv(java.lang.String $Xgafv) {
          return (Finalize) super.set$Xgafv($Xgafv);
        }

        @Override
        public Finalize setAccessToken(java.lang.String accessToken) {
          return (Finalize) super.setAccessToken(accessToken);
        }

        @Override
        public Finalize setAlt(java.lang.String alt) {
          return (Finalize) super.setAlt(alt);
        }

        @Override
        public Finalize setCallback(java.lang.String callback) {
          return (Finalize) super.setCallback(callback);
        }

        @Override
        public Finalize setFields(java.lang.String fields) {
          return (Finalize) super.setFields(fields);
        }

        @Override
        public Finalize setKey(java.lang.String key) {
          return (Finalize) super.setKey(key);
        }

        @Override
        public Finalize setOauthToken(java.lang.String oauthToken) {
          return (Finalize) super.setOauthToken(oauthToken);
        }

        @Override
        public Finalize setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Finalize) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Finalize setQuotaUser(java.lang.String quotaUser) {
          return (Finalize) super.setQuotaUser(quotaUser);
        }

        @Override
        public Finalize setUploadType(java.lang.String uploadType) {
          return (Finalize) super.setUploadType(uploadType);
        }

        @Override
        public Finalize setUploadProtocol(java.lang.String uploadProtocol) {
          return (Finalize) super.setUploadProtocol(uploadProtocol);
        }

        @Override
        public Finalize set(String parameterName, Object value) {
          return (Finalize) super.set(parameterName, value);
        }
      }
      /**
       * Step one of the MFA enrollment process. In SMS case, this sends an SMS verification code to the
       * user.
       *
       * Create a request for the method "mfaEnrollment.start".
       *
       * This request holds the parameters needed by the identitytoolkit server.  After setting any
       * optional parameters, call the {@link Start#execute()} method to invoke the remote operation.
       *
       * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitV2StartMfaEnrollmentRequest}
       * @return the request
       */
      public Start start(com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitV2StartMfaEnrollmentRequest content) throws java.io.IOException {
        Start result = new Start(content);
        initialize(result);
        return result;
      }

      public class Start extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse> {

        private static final String REST_PATH = "v2/accounts/mfaEnrollment:start";

        /**
         * Step one of the MFA enrollment process. In SMS case, this sends an SMS verification code to the
         * user.
         *
         * Create a request for the method "mfaEnrollment.start".
         *
         * This request holds the parameters needed by the the identitytoolkit server.  After setting any
         * optional parameters, call the {@link Start#execute()} method to invoke the remote operation.
         * <p> {@link
         * Start#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitV2StartMfaEnrollmentRequest}
         * @since 1.13
         */
        protected Start(com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitV2StartMfaEnrollmentRequest content) {
          super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse.class);
        }

        @Override
        public Start set$Xgafv(java.lang.String $Xgafv) {
          return (Start) super.set$Xgafv($Xgafv);
        }

        @Override
        public Start setAccessToken(java.lang.String accessToken) {
          return (Start) super.setAccessToken(accessToken);
        }

        @Override
        public Start setAlt(java.lang.String alt) {
          return (Start) super.setAlt(alt);
        }

        @Override
        public Start setCallback(java.lang.String callback) {
          return (Start) super.setCallback(callback);
        }

        @Override
        public Start setFields(java.lang.String fields) {
          return (Start) super.setFields(fields);
        }

        @Override
        public Start setKey(java.lang.String key) {
          return (Start) super.setKey(key);
        }

        @Override
        public Start setOauthToken(java.lang.String oauthToken) {
          return (Start) super.setOauthToken(oauthToken);
        }

        @Override
        public Start setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Start) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Start setQuotaUser(java.lang.String quotaUser) {
          return (Start) super.setQuotaUser(quotaUser);
        }

        @Override
        public Start setUploadType(java.lang.String uploadType) {
          return (Start) super.setUploadType(uploadType);
        }

        @Override
        public Start setUploadProtocol(java.lang.String uploadProtocol) {
          return (Start) super.setUploadProtocol(uploadProtocol);
        }

        @Override
        public Start set(String parameterName, Object value) {
          return (Start) super.set(parameterName, value);
        }
      }
      /**
       * Revokes one second factor from the enrolled second factors for an account.
       *
       * Create a request for the method "mfaEnrollment.withdraw".
       *
       * This request holds the parameters needed by the identitytoolkit server.  After setting any
       * optional parameters, call the {@link Withdraw#execute()} method to invoke the remote operation.
       *
       * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitV2WithdrawMfaRequest}
       * @return the request
       */
      public Withdraw withdraw(com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitV2WithdrawMfaRequest content) throws java.io.IOException {
        Withdraw result = new Withdraw(content);
        initialize(result);
        return result;
      }

      public class Withdraw extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitV2WithdrawMfaResponse> {

        private static final String REST_PATH = "v2/accounts/mfaEnrollment:withdraw";

        /**
         * Revokes one second factor from the enrolled second factors for an account.
         *
         * Create a request for the method "mfaEnrollment.withdraw".
         *
         * This request holds the parameters needed by the the identitytoolkit server.  After setting any
         * optional parameters, call the {@link Withdraw#execute()} method to invoke the remote operation.
         * <p> {@link
         * Withdraw#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitV2WithdrawMfaRequest}
         * @since 1.13
         */
        protected Withdraw(com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitV2WithdrawMfaRequest content) {
          super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitV2WithdrawMfaResponse.class);
        }

        @Override
        public Withdraw set$Xgafv(java.lang.String $Xgafv) {
          return (Withdraw) super.set$Xgafv($Xgafv);
        }

        @Override
        public Withdraw setAccessToken(java.lang.String accessToken) {
          return (Withdraw) super.setAccessToken(accessToken);
        }

        @Override
        public Withdraw setAlt(java.lang.String alt) {
          return (Withdraw) super.setAlt(alt);
        }

        @Override
        public Withdraw setCallback(java.lang.String callback) {
          return (Withdraw) super.setCallback(callback);
        }

        @Override
        public Withdraw setFields(java.lang.String fields) {
          return (Withdraw) super.setFields(fields);
        }

        @Override
        public Withdraw setKey(java.lang.String key) {
          return (Withdraw) super.setKey(key);
        }

        @Override
        public Withdraw setOauthToken(java.lang.String oauthToken) {
          return (Withdraw) super.setOauthToken(oauthToken);
        }

        @Override
        public Withdraw setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Withdraw) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Withdraw setQuotaUser(java.lang.String quotaUser) {
          return (Withdraw) super.setQuotaUser(quotaUser);
        }

        @Override
        public Withdraw setUploadType(java.lang.String uploadType) {
          return (Withdraw) super.setUploadType(uploadType);
        }

        @Override
        public Withdraw setUploadProtocol(java.lang.String uploadProtocol) {
          return (Withdraw) super.setUploadProtocol(uploadProtocol);
        }

        @Override
        public Withdraw set(String parameterName, Object value) {
          return (Withdraw) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the MfaSignIn collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code IdentityToolkit identitytoolkit = new IdentityToolkit(...);}
     *   {@code IdentityToolkit.MfaSignIn.List request = identitytoolkit.mfaSignIn().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public MfaSignIn mfaSignIn() {
      return new MfaSignIn();
    }

    /**
     * The "mfaSignIn" collection of methods.
     */
    public class MfaSignIn {

      /**
       * Verifies the MFA challenge and performs sign-in
       *
       * Create a request for the method "mfaSignIn.finalize".
       *
       * This request holds the parameters needed by the identitytoolkit server.  After setting any
       * optional parameters, call the {@link Finalize#execute()} method to invoke the remote operation.
       *
       * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitV2FinalizeMfaSignInRequest}
       * @return the request
       */
      public Finalize finalize(com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitV2FinalizeMfaSignInRequest content) throws java.io.IOException {
        Finalize result = new Finalize(content);
        initialize(result);
        return result;
      }

      public class Finalize extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitV2FinalizeMfaSignInResponse> {

        private static final String REST_PATH = "v2/accounts/mfaSignIn:finalize";

        /**
         * Verifies the MFA challenge and performs sign-in
         *
         * Create a request for the method "mfaSignIn.finalize".
         *
         * This request holds the parameters needed by the the identitytoolkit server.  After setting any
         * optional parameters, call the {@link Finalize#execute()} method to invoke the remote operation.
         * <p> {@link
         * Finalize#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitV2FinalizeMfaSignInRequest}
         * @since 1.13
         */
        protected Finalize(com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitV2FinalizeMfaSignInRequest content) {
          super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitV2FinalizeMfaSignInResponse.class);
        }

        @Override
        public Finalize set$Xgafv(java.lang.String $Xgafv) {
          return (Finalize) super.set$Xgafv($Xgafv);
        }

        @Override
        public Finalize setAccessToken(java.lang.String accessToken) {
          return (Finalize) super.setAccessToken(accessToken);
        }

        @Override
        public Finalize setAlt(java.lang.String alt) {
          return (Finalize) super.setAlt(alt);
        }

        @Override
        public Finalize setCallback(java.lang.String callback) {
          return (Finalize) super.setCallback(callback);
        }

        @Override
        public Finalize setFields(java.lang.String fields) {
          return (Finalize) super.setFields(fields);
        }

        @Override
        public Finalize setKey(java.lang.String key) {
          return (Finalize) super.setKey(key);
        }

        @Override
        public Finalize setOauthToken(java.lang.String oauthToken) {
          return (Finalize) super.setOauthToken(oauthToken);
        }

        @Override
        public Finalize setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Finalize) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Finalize setQuotaUser(java.lang.String quotaUser) {
          return (Finalize) super.setQuotaUser(quotaUser);
        }

        @Override
        public Finalize setUploadType(java.lang.String uploadType) {
          return (Finalize) super.setUploadType(uploadType);
        }

        @Override
        public Finalize setUploadProtocol(java.lang.String uploadProtocol) {
          return (Finalize) super.setUploadProtocol(uploadProtocol);
        }

        @Override
        public Finalize set(String parameterName, Object value) {
          return (Finalize) super.set(parameterName, value);
        }
      }
      /**
       * Sends the MFA challenge
       *
       * Create a request for the method "mfaSignIn.start".
       *
       * This request holds the parameters needed by the identitytoolkit server.  After setting any
       * optional parameters, call the {@link Start#execute()} method to invoke the remote operation.
       *
       * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitV2StartMfaSignInRequest}
       * @return the request
       */
      public Start start(com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitV2StartMfaSignInRequest content) throws java.io.IOException {
        Start result = new Start(content);
        initialize(result);
        return result;
      }

      public class Start extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitV2StartMfaSignInResponse> {

        private static final String REST_PATH = "v2/accounts/mfaSignIn:start";

        /**
         * Sends the MFA challenge
         *
         * Create a request for the method "mfaSignIn.start".
         *
         * This request holds the parameters needed by the the identitytoolkit server.  After setting any
         * optional parameters, call the {@link Start#execute()} method to invoke the remote operation.
         * <p> {@link
         * Start#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitV2StartMfaSignInRequest}
         * @since 1.13
         */
        protected Start(com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitV2StartMfaSignInRequest content) {
          super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitV2StartMfaSignInResponse.class);
        }

        @Override
        public Start set$Xgafv(java.lang.String $Xgafv) {
          return (Start) super.set$Xgafv($Xgafv);
        }

        @Override
        public Start setAccessToken(java.lang.String accessToken) {
          return (Start) super.setAccessToken(accessToken);
        }

        @Override
        public Start setAlt(java.lang.String alt) {
          return (Start) super.setAlt(alt);
        }

        @Override
        public Start setCallback(java.lang.String callback) {
          return (Start) super.setCallback(callback);
        }

        @Override
        public Start setFields(java.lang.String fields) {
          return (Start) super.setFields(fields);
        }

        @Override
        public Start setKey(java.lang.String key) {
          return (Start) super.setKey(key);
        }

        @Override
        public Start setOauthToken(java.lang.String oauthToken) {
          return (Start) super.setOauthToken(oauthToken);
        }

        @Override
        public Start setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Start) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Start setQuotaUser(java.lang.String quotaUser) {
          return (Start) super.setQuotaUser(quotaUser);
        }

        @Override
        public Start setUploadType(java.lang.String uploadType) {
          return (Start) super.setUploadType(uploadType);
        }

        @Override
        public Start setUploadProtocol(java.lang.String uploadProtocol) {
          return (Start) super.setUploadProtocol(uploadProtocol);
        }

        @Override
        public Start set(String parameterName, Object value) {
          return (Start) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * An accessor for creating requests from the DefaultSupportedIdps collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code IdentityToolkit identitytoolkit = new IdentityToolkit(...);}
   *   {@code IdentityToolkit.DefaultSupportedIdps.List request = identitytoolkit.defaultSupportedIdps().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public DefaultSupportedIdps defaultSupportedIdps() {
    return new DefaultSupportedIdps();
  }

  /**
   * The "defaultSupportedIdps" collection of methods.
   */
  public class DefaultSupportedIdps {

    /**
     * List all default supported Idps.
     *
     * Create a request for the method "defaultSupportedIdps.list".
     *
     * This request holds the parameters needed by the identitytoolkit server.  After setting any
     * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public List list() throws java.io.IOException {
      List result = new List();
      initialize(result);
      return result;
    }

    public class List extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpsResponse> {

      private static final String REST_PATH = "v2/defaultSupportedIdps";

      /**
       * List all default supported Idps.
       *
       * Create a request for the method "defaultSupportedIdps.list".
       *
       * This request holds the parameters needed by the the identitytoolkit server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
       * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected List() {
        super(IdentityToolkit.this, "GET", REST_PATH, null, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpsResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /** The maximum number of items to return. */
      @com.google.api.client.util.Key
      private java.lang.Integer pageSize;

      /** The maximum number of items to return.
       */
      public java.lang.Integer getPageSize() {
        return pageSize;
      }

      /** The maximum number of items to return. */
      public List setPageSize(java.lang.Integer pageSize) {
        this.pageSize = pageSize;
        return this;
      }

      /** The next_page_token value returned from a previous List request, if any. */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** The next_page_token value returned from a previous List request, if any.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /** The next_page_token value returned from a previous List request, if any. */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code IdentityToolkit identitytoolkit = new IdentityToolkit(...);}
   *   {@code IdentityToolkit.Projects.List request = identitytoolkit.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * Retrieve an Identity Toolkit project configuration.
     *
     * Create a request for the method "projects.getConfig".
     *
     * This request holds the parameters needed by the identitytoolkit server.  After setting any
     * optional parameters, call the {@link GetConfig#execute()} method to invoke the remote operation.
     *
     * @param name The resource name of the config, for example: "projects/my-awesome-project/config"
     * @return the request
     */
    public GetConfig getConfig(java.lang.String name) throws java.io.IOException {
      GetConfig result = new GetConfig(name);
      initialize(result);
      return result;
    }

    public class GetConfig extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2Config> {

      private static final String REST_PATH = "v2/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^projects/[^/]+/config$");

      /**
       * Retrieve an Identity Toolkit project configuration.
       *
       * Create a request for the method "projects.getConfig".
       *
       * This request holds the parameters needed by the the identitytoolkit server.  After setting any
       * optional parameters, call the {@link GetConfig#execute()} method to invoke the remote
       * operation. <p> {@link
       * GetConfig#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name The resource name of the config, for example: "projects/my-awesome-project/config"
       * @since 1.13
       */
      protected GetConfig(java.lang.String name) {
        super(IdentityToolkit.this, "GET", REST_PATH, null, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2Config.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^projects/[^/]+/config$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetConfig set$Xgafv(java.lang.String $Xgafv) {
        return (GetConfig) super.set$Xgafv($Xgafv);
      }

      @Override
      public GetConfig setAccessToken(java.lang.String accessToken) {
        return (GetConfig) super.setAccessToken(accessToken);
      }

      @Override
      public GetConfig setAlt(java.lang.String alt) {
        return (GetConfig) super.setAlt(alt);
      }

      @Override
      public GetConfig setCallback(java.lang.String callback) {
        return (GetConfig) super.setCallback(callback);
      }

      @Override
      public GetConfig setFields(java.lang.String fields) {
        return (GetConfig) super.setFields(fields);
      }

      @Override
      public GetConfig setKey(java.lang.String key) {
        return (GetConfig) super.setKey(key);
      }

      @Override
      public GetConfig setOauthToken(java.lang.String oauthToken) {
        return (GetConfig) super.setOauthToken(oauthToken);
      }

      @Override
      public GetConfig setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetConfig) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetConfig setQuotaUser(java.lang.String quotaUser) {
        return (GetConfig) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetConfig setUploadType(java.lang.String uploadType) {
        return (GetConfig) super.setUploadType(uploadType);
      }

      @Override
      public GetConfig setUploadProtocol(java.lang.String uploadProtocol) {
        return (GetConfig) super.setUploadProtocol(uploadProtocol);
      }

      /** The resource name of the config, for example: "projects/my-awesome-project/config" */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** The resource name of the config, for example: "projects/my-awesome-project/config"
       */
      public java.lang.String getName() {
        return name;
      }

      /** The resource name of the config, for example: "projects/my-awesome-project/config" */
      public GetConfig setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^projects/[^/]+/config$");
        }
        this.name = name;
        return this;
      }

      @Override
      public GetConfig set(String parameterName, Object value) {
        return (GetConfig) super.set(parameterName, value);
      }
    }
    /**
     * Update an Identity Toolkit project configuration.
     *
     * Create a request for the method "projects.updateConfig".
     *
     * This request holds the parameters needed by the identitytoolkit server.  After setting any
     * optional parameters, call the {@link UpdateConfig#execute()} method to invoke the remote
     * operation.
     *
     * @param name Output only. The name of the Config resource. Example: "projects/my-awesome-project/config"
     * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2Config}
     * @return the request
     */
    public UpdateConfig updateConfig(java.lang.String name, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2Config content) throws java.io.IOException {
      UpdateConfig result = new UpdateConfig(name, content);
      initialize(result);
      return result;
    }

    public class UpdateConfig extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2Config> {

      private static final String REST_PATH = "v2/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^projects/[^/]+/config$");

      /**
       * Update an Identity Toolkit project configuration.
       *
       * Create a request for the method "projects.updateConfig".
       *
       * This request holds the parameters needed by the the identitytoolkit server.  After setting any
       * optional parameters, call the {@link UpdateConfig#execute()} method to invoke the remote
       * operation. <p> {@link
       * UpdateConfig#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Output only. The name of the Config resource. Example: "projects/my-awesome-project/config"
       * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2Config}
       * @since 1.13
       */
      protected UpdateConfig(java.lang.String name, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2Config content) {
        super(IdentityToolkit.this, "PATCH", REST_PATH, content, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2Config.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^projects/[^/]+/config$");
        }
      }

      @Override
      public UpdateConfig set$Xgafv(java.lang.String $Xgafv) {
        return (UpdateConfig) super.set$Xgafv($Xgafv);
      }

      @Override
      public UpdateConfig setAccessToken(java.lang.String accessToken) {
        return (UpdateConfig) super.setAccessToken(accessToken);
      }

      @Override
      public UpdateConfig setAlt(java.lang.String alt) {
        return (UpdateConfig) super.setAlt(alt);
      }

      @Override
      public UpdateConfig setCallback(java.lang.String callback) {
        return (UpdateConfig) super.setCallback(callback);
      }

      @Override
      public UpdateConfig setFields(java.lang.String fields) {
        return (UpdateConfig) super.setFields(fields);
      }

      @Override
      public UpdateConfig setKey(java.lang.String key) {
        return (UpdateConfig) super.setKey(key);
      }

      @Override
      public UpdateConfig setOauthToken(java.lang.String oauthToken) {
        return (UpdateConfig) super.setOauthToken(oauthToken);
      }

      @Override
      public UpdateConfig setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (UpdateConfig) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public UpdateConfig setQuotaUser(java.lang.String quotaUser) {
        return (UpdateConfig) super.setQuotaUser(quotaUser);
      }

      @Override
      public UpdateConfig setUploadType(java.lang.String uploadType) {
        return (UpdateConfig) super.setUploadType(uploadType);
      }

      @Override
      public UpdateConfig setUploadProtocol(java.lang.String uploadProtocol) {
        return (UpdateConfig) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Output only. The name of the Config resource. Example: "projects/my-awesome-project/config"
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Output only. The name of the Config resource. Example: "projects/my-awesome-project/config"
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Output only. The name of the Config resource. Example: "projects/my-awesome-project/config"
       */
      public UpdateConfig setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^projects/[^/]+/config$");
        }
        this.name = name;
        return this;
      }

      /**
       * The update mask applies to the resource. Fields set in the config but not included in this
       * update mask will be ignored. For the `FieldMask` definition, see
       * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
       */
      @com.google.api.client.util.Key
      private String updateMask;

      /** The update mask applies to the resource. Fields set in the config but not included in this update
     mask will be ignored. For the `FieldMask` definition, see https://developers.google.com/protocol-
     buffers/docs/reference/google.protobuf#fieldmask
       */
      public String getUpdateMask() {
        return updateMask;
      }

      /**
       * The update mask applies to the resource. Fields set in the config but not included in this
       * update mask will be ignored. For the `FieldMask` definition, see
       * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
       */
      public UpdateConfig setUpdateMask(String updateMask) {
        this.updateMask = updateMask;
        return this;
      }

      @Override
      public UpdateConfig set(String parameterName, Object value) {
        return (UpdateConfig) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the DefaultSupportedIdpConfigs collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code IdentityToolkit identitytoolkit = new IdentityToolkit(...);}
     *   {@code IdentityToolkit.DefaultSupportedIdpConfigs.List request = identitytoolkit.defaultSupportedIdpConfigs().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public DefaultSupportedIdpConfigs defaultSupportedIdpConfigs() {
      return new DefaultSupportedIdpConfigs();
    }

    /**
     * The "defaultSupportedIdpConfigs" collection of methods.
     */
    public class DefaultSupportedIdpConfigs {

      /**
       * Create a default supported Idp configuration for an Identity Toolkit project.
       *
       * Create a request for the method "defaultSupportedIdpConfigs.create".
       *
       * This request holds the parameters needed by the identitytoolkit server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent The parent resource name where the config to be created, for example: "projects/my-awesome-project"
       * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig> {

        private static final String REST_PATH = "v2/{+parent}/defaultSupportedIdpConfigs";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Create a default supported Idp configuration for an Identity Toolkit project.
         *
         * Create a request for the method "defaultSupportedIdpConfigs.create".
         *
         * This request holds the parameters needed by the the identitytoolkit server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The parent resource name where the config to be created, for example: "projects/my-awesome-project"
         * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig content) {
          super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The parent resource name where the config to be created, for example: "projects/my-
         * awesome-project"
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The parent resource name where the config to be created, for example: "projects/my-awesome-project"
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * The parent resource name where the config to be created, for example: "projects/my-
         * awesome-project"
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * The id of the Idp to create a config for. Call ListDefaultSupportedIdps for list of all
         * default supported Idps.
         */
        @com.google.api.client.util.Key
        private java.lang.String idpId;

        /** The id of the Idp to create a config for. Call ListDefaultSupportedIdps for list of all default
       supported Idps.
         */
        public java.lang.String getIdpId() {
          return idpId;
        }

        /**
         * The id of the Idp to create a config for. Call ListDefaultSupportedIdps for list of all
         * default supported Idps.
         */
        public Create setIdpId(java.lang.String idpId) {
          this.idpId = idpId;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Delete a default supported Idp configuration for an Identity Toolkit project.
       *
       * Create a request for the method "defaultSupportedIdpConfigs.delete".
       *
       * This request holds the parameters needed by the identitytoolkit server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name The resource name of the config, for example: "projects/my-awesome-
       *        project/defaultSupportedIdpConfigs/google.com"
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/defaultSupportedIdpConfigs/[^/]+$");

        /**
         * Delete a default supported Idp configuration for an Identity Toolkit project.
         *
         * Create a request for the method "defaultSupportedIdpConfigs.delete".
         *
         * This request holds the parameters needed by the the identitytoolkit server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The resource name of the config, for example: "projects/my-awesome-
       *        project/defaultSupportedIdpConfigs/google.com"
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(IdentityToolkit.this, "DELETE", REST_PATH, null, com.google.api.services.identitytoolkit.v2.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/defaultSupportedIdpConfigs/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The resource name of the config, for example: "projects/my-awesome-
         * project/defaultSupportedIdpConfigs/google.com"
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The resource name of the config, for example: "projects/my-awesome-
       project/defaultSupportedIdpConfigs/google.com"
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * The resource name of the config, for example: "projects/my-awesome-
         * project/defaultSupportedIdpConfigs/google.com"
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/defaultSupportedIdpConfigs/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Retrieve a default supported Idp configuration for an Identity Toolkit project.
       *
       * Create a request for the method "defaultSupportedIdpConfigs.get".
       *
       * This request holds the parameters needed by the identitytoolkit server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name The resource name of the config, for example: "projects/my-awesome-
       *        project/defaultSupportedIdpConfigs/google.com"
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/defaultSupportedIdpConfigs/[^/]+$");

        /**
         * Retrieve a default supported Idp configuration for an Identity Toolkit project.
         *
         * Create a request for the method "defaultSupportedIdpConfigs.get".
         *
         * This request holds the parameters needed by the the identitytoolkit server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The resource name of the config, for example: "projects/my-awesome-
       *        project/defaultSupportedIdpConfigs/google.com"
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(IdentityToolkit.this, "GET", REST_PATH, null, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/defaultSupportedIdpConfigs/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The resource name of the config, for example: "projects/my-awesome-
         * project/defaultSupportedIdpConfigs/google.com"
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The resource name of the config, for example: "projects/my-awesome-
       project/defaultSupportedIdpConfigs/google.com"
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * The resource name of the config, for example: "projects/my-awesome-
         * project/defaultSupportedIdpConfigs/google.com"
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/defaultSupportedIdpConfigs/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * List all default supported Idp configurations for an Identity Toolkit project.
       *
       * Create a request for the method "defaultSupportedIdpConfigs.list".
       *
       * This request holds the parameters needed by the identitytoolkit server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent The parent resource name, for example, "projects/my-awesome-project".
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpConfigsResponse> {

        private static final String REST_PATH = "v2/{+parent}/defaultSupportedIdpConfigs";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * List all default supported Idp configurations for an Identity Toolkit project.
         *
         * Create a request for the method "defaultSupportedIdpConfigs.list".
         *
         * This request holds the parameters needed by the the identitytoolkit server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The parent resource name, for example, "projects/my-awesome-project".
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(IdentityToolkit.this, "GET", REST_PATH, null, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpConfigsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** The parent resource name, for example, "projects/my-awesome-project". */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The parent resource name, for example, "projects/my-awesome-project".
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** The parent resource name, for example, "projects/my-awesome-project". */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** The maximum number of items to return. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of items to return.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The maximum number of items to return. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** The next_page_token value returned from a previous List request, if any. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** The next_page_token value returned from a previous List request, if any.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** The next_page_token value returned from a previous List request, if any. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Update a default supported Idp configuration for an Identity Toolkit project.
       *
       * Create a request for the method "defaultSupportedIdpConfigs.patch".
       *
       * This request holds the parameters needed by the identitytoolkit server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name The name of the DefaultSupportedIdpConfig resource, for example: "projects/my-awesome-
       *        project/defaultSupportedIdpConfigs/google.com"
       * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/defaultSupportedIdpConfigs/[^/]+$");

        /**
         * Update a default supported Idp configuration for an Identity Toolkit project.
         *
         * Create a request for the method "defaultSupportedIdpConfigs.patch".
         *
         * This request holds the parameters needed by the the identitytoolkit server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the DefaultSupportedIdpConfig resource, for example: "projects/my-awesome-
       *        project/defaultSupportedIdpConfigs/google.com"
         * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig content) {
          super(IdentityToolkit.this, "PATCH", REST_PATH, content, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/defaultSupportedIdpConfigs/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The name of the DefaultSupportedIdpConfig resource, for example: "projects/my-awesome-
         * project/defaultSupportedIdpConfigs/google.com"
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the DefaultSupportedIdpConfig resource, for example: "projects/my-awesome-
       project/defaultSupportedIdpConfigs/google.com"
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * The name of the DefaultSupportedIdpConfig resource, for example: "projects/my-awesome-
         * project/defaultSupportedIdpConfigs/google.com"
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/defaultSupportedIdpConfigs/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * The update mask applies to the resource. For the `FieldMask` definition, see
         * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** The update mask applies to the resource. For the `FieldMask` definition, see
       https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * The update mask applies to the resource. For the `FieldMask` definition, see
         * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the IdentityPlatform collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code IdentityToolkit identitytoolkit = new IdentityToolkit(...);}
     *   {@code IdentityToolkit.IdentityPlatform.List request = identitytoolkit.identityPlatform().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public IdentityPlatform identityPlatform() {
      return new IdentityPlatform();
    }

    /**
     * The "identityPlatform" collection of methods.
     */
    public class IdentityPlatform {

      /**
       * Initialize Identity Platform for a Cloud project. Identity Platform is an end-to-end
       * authentication system for third-party users to access your apps and services. These could include
       * mobile/web apps, games, APIs and beyond. This is the publicly available variant of
       * EnableIdentityPlatform that is only available to billing-enabled projects.
       *
       * Create a request for the method "identityPlatform.initializeAuth".
       *
       * This request holds the parameters needed by the identitytoolkit server.  After setting any
       * optional parameters, call the {@link InitializeAuth#execute()} method to invoke the remote
       * operation.
       *
       * @param project The resource name of the target project the developer wants to enable Identity Platform for.
       * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2InitializeIdentityPlatformRequest}
       * @return the request
       */
      public InitializeAuth initializeAuth(java.lang.String project, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2InitializeIdentityPlatformRequest content) throws java.io.IOException {
        InitializeAuth result = new InitializeAuth(project, content);
        initialize(result);
        return result;
      }

      public class InitializeAuth extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2InitializeIdentityPlatformResponse> {

        private static final String REST_PATH = "v2/{+project}/identityPlatform:initializeAuth";

        private final java.util.regex.Pattern PROJECT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Initialize Identity Platform for a Cloud project. Identity Platform is an end-to-end
         * authentication system for third-party users to access your apps and services. These could
         * include mobile/web apps, games, APIs and beyond. This is the publicly available variant of
         * EnableIdentityPlatform that is only available to billing-enabled projects.
         *
         * Create a request for the method "identityPlatform.initializeAuth".
         *
         * This request holds the parameters needed by the the identitytoolkit server.  After setting any
         * optional parameters, call the {@link InitializeAuth#execute()} method to invoke the remote
         * operation. <p> {@link InitializeAuth#initialize(com.google.api.client.googleapis.services.Abstr
         * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
         * the constructor. </p>
         *
         * @param project The resource name of the target project the developer wants to enable Identity Platform for.
         * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2InitializeIdentityPlatformRequest}
         * @since 1.13
         */
        protected InitializeAuth(java.lang.String project, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2InitializeIdentityPlatformRequest content) {
          super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2InitializeIdentityPlatformResponse.class);
          this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
                "Parameter project must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public InitializeAuth set$Xgafv(java.lang.String $Xgafv) {
          return (InitializeAuth) super.set$Xgafv($Xgafv);
        }

        @Override
        public InitializeAuth setAccessToken(java.lang.String accessToken) {
          return (InitializeAuth) super.setAccessToken(accessToken);
        }

        @Override
        public InitializeAuth setAlt(java.lang.String alt) {
          return (InitializeAuth) super.setAlt(alt);
        }

        @Override
        public InitializeAuth setCallback(java.lang.String callback) {
          return (InitializeAuth) super.setCallback(callback);
        }

        @Override
        public InitializeAuth setFields(java.lang.String fields) {
          return (InitializeAuth) super.setFields(fields);
        }

        @Override
        public InitializeAuth setKey(java.lang.String key) {
          return (InitializeAuth) super.setKey(key);
        }

        @Override
        public InitializeAuth setOauthToken(java.lang.String oauthToken) {
          return (InitializeAuth) super.setOauthToken(oauthToken);
        }

        @Override
        public InitializeAuth setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (InitializeAuth) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public InitializeAuth setQuotaUser(java.lang.String quotaUser) {
          return (InitializeAuth) super.setQuotaUser(quotaUser);
        }

        @Override
        public InitializeAuth setUploadType(java.lang.String uploadType) {
          return (InitializeAuth) super.setUploadType(uploadType);
        }

        @Override
        public InitializeAuth setUploadProtocol(java.lang.String uploadProtocol) {
          return (InitializeAuth) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The resource name of the target project the developer wants to enable Identity Platform
         * for.
         */
        @com.google.api.client.util.Key
        private java.lang.String project;

        /** The resource name of the target project the developer wants to enable Identity Platform for.
         */
        public java.lang.String getProject() {
          return project;
        }

        /**
         * The resource name of the target project the developer wants to enable Identity Platform
         * for.
         */
        public InitializeAuth setProject(java.lang.String project) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
                "Parameter project must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.project = project;
          return this;
        }

        @Override
        public InitializeAuth set(String parameterName, Object value) {
          return (InitializeAuth) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the InboundSamlConfigs collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code IdentityToolkit identitytoolkit = new IdentityToolkit(...);}
     *   {@code IdentityToolkit.InboundSamlConfigs.List request = identitytoolkit.inboundSamlConfigs().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public InboundSamlConfigs inboundSamlConfigs() {
      return new InboundSamlConfigs();
    }

    /**
     * The "inboundSamlConfigs" collection of methods.
     */
    public class InboundSamlConfigs {

      /**
       * Create an inbound SAML configuration for an Identity Toolkit project.
       *
       * Create a request for the method "inboundSamlConfigs.create".
       *
       * This request holds the parameters needed by the identitytoolkit server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent The parent resource name where the config to be created, for example: "projects/my-awesome-project"
       * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig> {

        private static final String REST_PATH = "v2/{+parent}/inboundSamlConfigs";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Create an inbound SAML configuration for an Identity Toolkit project.
         *
         * Create a request for the method "inboundSamlConfigs.create".
         *
         * This request holds the parameters needed by the the identitytoolkit server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The parent resource name where the config to be created, for example: "projects/my-awesome-project"
         * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig content) {
          super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The parent resource name where the config to be created, for example: "projects/my-
         * awesome-project"
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The parent resource name where the config to be created, for example: "projects/my-awesome-project"
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * The parent resource name where the config to be created, for example: "projects/my-
         * awesome-project"
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** The id to use for this config. */
        @com.google.api.client.util.Key
        private java.lang.String inboundSamlConfigId;

        /** The id to use for this config.
         */
        public java.lang.String getInboundSamlConfigId() {
          return inboundSamlConfigId;
        }

        /** The id to use for this config. */
        public Create setInboundSamlConfigId(java.lang.String inboundSamlConfigId) {
          this.inboundSamlConfigId = inboundSamlConfigId;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Delete an inbound SAML configuration for an Identity Toolkit project.
       *
       * Create a request for the method "inboundSamlConfigs.delete".
       *
       * This request holds the parameters needed by the identitytoolkit server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name The resource name of the config to be deleted, for example: 'projects/my-awesome-
       *        project/inboundSamlConfigs/my-config-id'.
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/inboundSamlConfigs/[^/]+$");

        /**
         * Delete an inbound SAML configuration for an Identity Toolkit project.
         *
         * Create a request for the method "inboundSamlConfigs.delete".
         *
         * This request holds the parameters needed by the the identitytoolkit server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The resource name of the config to be deleted, for example: 'projects/my-awesome-
       *        project/inboundSamlConfigs/my-config-id'.
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(IdentityToolkit.this, "DELETE", REST_PATH, null, com.google.api.services.identitytoolkit.v2.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/inboundSamlConfigs/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The resource name of the config to be deleted, for example: 'projects/my-awesome-
         * project/inboundSamlConfigs/my-config-id'.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The resource name of the config to be deleted, for example: 'projects/my-awesome-
       project/inboundSamlConfigs/my-config-id'.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * The resource name of the config to be deleted, for example: 'projects/my-awesome-
         * project/inboundSamlConfigs/my-config-id'.
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/inboundSamlConfigs/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Retrieve an inbound SAML configuration for an Identity Toolkit project.
       *
       * Create a request for the method "inboundSamlConfigs.get".
       *
       * This request holds the parameters needed by the identitytoolkit server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name The resource name of the config, for example: 'projects/my-awesome-project/inboundSamlConfigs/my-
       *        config-id'.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/inboundSamlConfigs/[^/]+$");

        /**
         * Retrieve an inbound SAML configuration for an Identity Toolkit project.
         *
         * Create a request for the method "inboundSamlConfigs.get".
         *
         * This request holds the parameters needed by the the identitytoolkit server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The resource name of the config, for example: 'projects/my-awesome-project/inboundSamlConfigs/my-
       *        config-id'.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(IdentityToolkit.this, "GET", REST_PATH, null, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/inboundSamlConfigs/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The resource name of the config, for example: 'projects/my-awesome-
         * project/inboundSamlConfigs/my-config-id'.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The resource name of the config, for example: 'projects/my-awesome-project/inboundSamlConfigs/my-
       config-id'.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * The resource name of the config, for example: 'projects/my-awesome-
         * project/inboundSamlConfigs/my-config-id'.
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/inboundSamlConfigs/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * List all inbound SAML configurations for an Identity Toolkit project.
       *
       * Create a request for the method "inboundSamlConfigs.list".
       *
       * This request holds the parameters needed by the identitytoolkit server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent The parent resource name, for example, "projects/my-awesome-project".
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2ListInboundSamlConfigsResponse> {

        private static final String REST_PATH = "v2/{+parent}/inboundSamlConfigs";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * List all inbound SAML configurations for an Identity Toolkit project.
         *
         * Create a request for the method "inboundSamlConfigs.list".
         *
         * This request holds the parameters needed by the the identitytoolkit server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The parent resource name, for example, "projects/my-awesome-project".
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(IdentityToolkit.this, "GET", REST_PATH, null, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2ListInboundSamlConfigsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** The parent resource name, for example, "projects/my-awesome-project". */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The parent resource name, for example, "projects/my-awesome-project".
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** The parent resource name, for example, "projects/my-awesome-project". */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** The maximum number of items to return. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of items to return.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The maximum number of items to return. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** The next_page_token value returned from a previous List request, if any. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** The next_page_token value returned from a previous List request, if any.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** The next_page_token value returned from a previous List request, if any. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Update an inbound SAML configuration for an Identity Toolkit project.
       *
       * Create a request for the method "inboundSamlConfigs.patch".
       *
       * This request holds the parameters needed by the identitytoolkit server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name The name of the InboundSamlConfig resource, for example: 'projects/my-awesome-
       *        project/inboundSamlConfigs/my-config-id'. Ignored during create requests.
       * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/inboundSamlConfigs/[^/]+$");

        /**
         * Update an inbound SAML configuration for an Identity Toolkit project.
         *
         * Create a request for the method "inboundSamlConfigs.patch".
         *
         * This request holds the parameters needed by the the identitytoolkit server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the InboundSamlConfig resource, for example: 'projects/my-awesome-
       *        project/inboundSamlConfigs/my-config-id'. Ignored during create requests.
         * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig content) {
          super(IdentityToolkit.this, "PATCH", REST_PATH, content, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/inboundSamlConfigs/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The name of the InboundSamlConfig resource, for example: 'projects/my-awesome-
         * project/inboundSamlConfigs/my-config-id'. Ignored during create requests.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the InboundSamlConfig resource, for example: 'projects/my-awesome-
       project/inboundSamlConfigs/my-config-id'. Ignored during create requests.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * The name of the InboundSamlConfig resource, for example: 'projects/my-awesome-
         * project/inboundSamlConfigs/my-config-id'. Ignored during create requests.
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/inboundSamlConfigs/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * The update mask applies to the resource. Empty update mask will result in updating
         * nothing. For the `FieldMask` definition, see https://developers.google.com/protocol-
         * buffers/docs/reference/google.protobuf#fieldmask
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** The update mask applies to the resource. Empty update mask will result in updating nothing. For the
       `FieldMask` definition, see https://developers.google.com/protocol-
       buffers/docs/reference/google.protobuf#fieldmask
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * The update mask applies to the resource. Empty update mask will result in updating
         * nothing. For the `FieldMask` definition, see https://developers.google.com/protocol-
         * buffers/docs/reference/google.protobuf#fieldmask
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the OauthIdpConfigs collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code IdentityToolkit identitytoolkit = new IdentityToolkit(...);}
     *   {@code IdentityToolkit.OauthIdpConfigs.List request = identitytoolkit.oauthIdpConfigs().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public OauthIdpConfigs oauthIdpConfigs() {
      return new OauthIdpConfigs();
    }

    /**
     * The "oauthIdpConfigs" collection of methods.
     */
    public class OauthIdpConfigs {

      /**
       * Create an Oidc Idp configuration for an Identity Toolkit project.
       *
       * Create a request for the method "oauthIdpConfigs.create".
       *
       * This request holds the parameters needed by the identitytoolkit server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent The parent resource name where the config to be created, for example: "projects/my-awesome-project"
       * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig> {

        private static final String REST_PATH = "v2/{+parent}/oauthIdpConfigs";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Create an Oidc Idp configuration for an Identity Toolkit project.
         *
         * Create a request for the method "oauthIdpConfigs.create".
         *
         * This request holds the parameters needed by the the identitytoolkit server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The parent resource name where the config to be created, for example: "projects/my-awesome-project"
         * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig content) {
          super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The parent resource name where the config to be created, for example: "projects/my-
         * awesome-project"
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The parent resource name where the config to be created, for example: "projects/my-awesome-project"
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * The parent resource name where the config to be created, for example: "projects/my-
         * awesome-project"
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** The id to use for this config. */
        @com.google.api.client.util.Key
        private java.lang.String oauthIdpConfigId;

        /** The id to use for this config.
         */
        public java.lang.String getOauthIdpConfigId() {
          return oauthIdpConfigId;
        }

        /** The id to use for this config. */
        public Create setOauthIdpConfigId(java.lang.String oauthIdpConfigId) {
          this.oauthIdpConfigId = oauthIdpConfigId;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Delete an Oidc Idp configuration for an Identity Toolkit project.
       *
       * Create a request for the method "oauthIdpConfigs.delete".
       *
       * This request holds the parameters needed by the identitytoolkit server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name The resource name of the config to be deleted, for example: 'projects/my-awesome-
       *        project/oauthIdpConfigs/oauth-config-id'.
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/oauthIdpConfigs/[^/]+$");

        /**
         * Delete an Oidc Idp configuration for an Identity Toolkit project.
         *
         * Create a request for the method "oauthIdpConfigs.delete".
         *
         * This request holds the parameters needed by the the identitytoolkit server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The resource name of the config to be deleted, for example: 'projects/my-awesome-
       *        project/oauthIdpConfigs/oauth-config-id'.
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(IdentityToolkit.this, "DELETE", REST_PATH, null, com.google.api.services.identitytoolkit.v2.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/oauthIdpConfigs/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The resource name of the config to be deleted, for example: 'projects/my-awesome-
         * project/oauthIdpConfigs/oauth-config-id'.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The resource name of the config to be deleted, for example: 'projects/my-awesome-
       project/oauthIdpConfigs/oauth-config-id'.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * The resource name of the config to be deleted, for example: 'projects/my-awesome-
         * project/oauthIdpConfigs/oauth-config-id'.
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/oauthIdpConfigs/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Retrieve an Oidc Idp configuration for an Identity Toolkit project.
       *
       * Create a request for the method "oauthIdpConfigs.get".
       *
       * This request holds the parameters needed by the identitytoolkit server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name The resource name of the config, for example: 'projects/my-awesome-project/oauthIdpConfigs/oauth-
       *        config-id'.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/oauthIdpConfigs/[^/]+$");

        /**
         * Retrieve an Oidc Idp configuration for an Identity Toolkit project.
         *
         * Create a request for the method "oauthIdpConfigs.get".
         *
         * This request holds the parameters needed by the the identitytoolkit server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The resource name of the config, for example: 'projects/my-awesome-project/oauthIdpConfigs/oauth-
       *        config-id'.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(IdentityToolkit.this, "GET", REST_PATH, null, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/oauthIdpConfigs/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The resource name of the config, for example: 'projects/my-awesome-
         * project/oauthIdpConfigs/oauth-config-id'.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The resource name of the config, for example: 'projects/my-awesome-project/oauthIdpConfigs/oauth-
       config-id'.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * The resource name of the config, for example: 'projects/my-awesome-
         * project/oauthIdpConfigs/oauth-config-id'.
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/oauthIdpConfigs/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * List all Oidc Idp configurations for an Identity Toolkit project.
       *
       * Create a request for the method "oauthIdpConfigs.list".
       *
       * This request holds the parameters needed by the identitytoolkit server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent The parent resource name, for example, "projects/my-awesome-project".
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2ListOAuthIdpConfigsResponse> {

        private static final String REST_PATH = "v2/{+parent}/oauthIdpConfigs";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * List all Oidc Idp configurations for an Identity Toolkit project.
         *
         * Create a request for the method "oauthIdpConfigs.list".
         *
         * This request holds the parameters needed by the the identitytoolkit server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The parent resource name, for example, "projects/my-awesome-project".
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(IdentityToolkit.this, "GET", REST_PATH, null, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2ListOAuthIdpConfigsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** The parent resource name, for example, "projects/my-awesome-project". */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The parent resource name, for example, "projects/my-awesome-project".
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** The parent resource name, for example, "projects/my-awesome-project". */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** The maximum number of items to return. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of items to return.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The maximum number of items to return. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** The next_page_token value returned from a previous List request, if any. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** The next_page_token value returned from a previous List request, if any.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** The next_page_token value returned from a previous List request, if any. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Update an Oidc Idp configuration for an Identity Toolkit project.
       *
       * Create a request for the method "oauthIdpConfigs.patch".
       *
       * This request holds the parameters needed by the identitytoolkit server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name The name of the OAuthIdpConfig resource, for example: 'projects/my-awesome-project/oauthIdpConfigs
       *        /oauth-config-id'. Ignored during create requests.
       * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/oauthIdpConfigs/[^/]+$");

        /**
         * Update an Oidc Idp configuration for an Identity Toolkit project.
         *
         * Create a request for the method "oauthIdpConfigs.patch".
         *
         * This request holds the parameters needed by the the identitytoolkit server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the OAuthIdpConfig resource, for example: 'projects/my-awesome-project/oauthIdpConfigs
       *        /oauth-config-id'. Ignored during create requests.
         * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig content) {
          super(IdentityToolkit.this, "PATCH", REST_PATH, content, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/oauthIdpConfigs/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The name of the OAuthIdpConfig resource, for example: 'projects/my-awesome-
         * project/oauthIdpConfigs/oauth-config-id'. Ignored during create requests.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the OAuthIdpConfig resource, for example: 'projects/my-awesome-project/oauthIdpConfigs
       /oauth-config-id'. Ignored during create requests.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * The name of the OAuthIdpConfig resource, for example: 'projects/my-awesome-
         * project/oauthIdpConfigs/oauth-config-id'. Ignored during create requests.
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/oauthIdpConfigs/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * The update mask applies to the resource. Empty update mask will result in updating
         * nothing. For the `FieldMask` definition, see https://developers.google.com/protocol-
         * buffers/docs/reference/google.protobuf#fieldmask
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** The update mask applies to the resource. Empty update mask will result in updating nothing. For the
       `FieldMask` definition, see https://developers.google.com/protocol-
       buffers/docs/reference/google.protobuf#fieldmask
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * The update mask applies to the resource. Empty update mask will result in updating
         * nothing. For the `FieldMask` definition, see https://developers.google.com/protocol-
         * buffers/docs/reference/google.protobuf#fieldmask
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Tenants collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code IdentityToolkit identitytoolkit = new IdentityToolkit(...);}
     *   {@code IdentityToolkit.Tenants.List request = identitytoolkit.tenants().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Tenants tenants() {
      return new Tenants();
    }

    /**
     * The "tenants" collection of methods.
     */
    public class Tenants {

      /**
       * Create a tenant. Requires write permission on the Agent project.
       *
       * Create a request for the method "tenants.create".
       *
       * This request holds the parameters needed by the identitytoolkit server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent The parent resource name where the tenant will be created. For example, "projects/project1".
       * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2Tenant}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2Tenant content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2Tenant> {

        private static final String REST_PATH = "v2/{+parent}/tenants";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Create a tenant. Requires write permission on the Agent project.
         *
         * Create a request for the method "tenants.create".
         *
         * This request holds the parameters needed by the the identitytoolkit server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The parent resource name where the tenant will be created. For example, "projects/project1".
         * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2Tenant}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2Tenant content) {
          super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2Tenant.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The parent resource name where the tenant will be created. For example,
         * "projects/project1".
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The parent resource name where the tenant will be created. For example, "projects/project1".
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * The parent resource name where the tenant will be created. For example,
         * "projects/project1".
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Delete a tenant. Requires write permission on the Agent project.
       *
       * Create a request for the method "tenants.delete".
       *
       * This request holds the parameters needed by the identitytoolkit server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Resource name of the tenant to delete.
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/tenants/[^/]+$");

        /**
         * Delete a tenant. Requires write permission on the Agent project.
         *
         * Create a request for the method "tenants.delete".
         *
         * This request holds the parameters needed by the the identitytoolkit server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Resource name of the tenant to delete.
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(IdentityToolkit.this, "DELETE", REST_PATH, null, com.google.api.services.identitytoolkit.v2.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/tenants/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /** Resource name of the tenant to delete. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Resource name of the tenant to delete.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Resource name of the tenant to delete. */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/tenants/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Get a tenant. Requires read permission on the Tenant resource.
       *
       * Create a request for the method "tenants.get".
       *
       * This request holds the parameters needed by the identitytoolkit server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Resource name of the tenant to retrieve.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2Tenant> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/tenants/[^/]+$");

        /**
         * Get a tenant. Requires read permission on the Tenant resource.
         *
         * Create a request for the method "tenants.get".
         *
         * This request holds the parameters needed by the the identitytoolkit server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Resource name of the tenant to retrieve.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(IdentityToolkit.this, "GET", REST_PATH, null, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2Tenant.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/tenants/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Resource name of the tenant to retrieve. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Resource name of the tenant to retrieve.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Resource name of the tenant to retrieve. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/tenants/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Gets the access control policy for a resource. An error is returned if the resource does not
       * exist. An empty policy is returned if the resource exists but does not have a policy set on it.
       * Caller must have the right Google IAM permission on the resource.
       *
       * Create a request for the method "tenants.getIamPolicy".
       *
       * This request holds the parameters needed by the identitytoolkit server.  After setting any
       * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
       * operation.
       *
       * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
       *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
       *        this field.
       * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleIamV1GetIamPolicyRequest}
       * @return the request
       */
      public GetIamPolicy getIamPolicy(java.lang.String resource, com.google.api.services.identitytoolkit.v2.model.GoogleIamV1GetIamPolicyRequest content) throws java.io.IOException {
        GetIamPolicy result = new GetIamPolicy(resource, content);
        initialize(result);
        return result;
      }

      public class GetIamPolicy extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleIamV1Policy> {

        private static final String REST_PATH = "v2/{+resource}:getIamPolicy";

        private final java.util.regex.Pattern RESOURCE_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/tenants/[^/]+$");

        /**
         * Gets the access control policy for a resource. An error is returned if the resource does not
         * exist. An empty policy is returned if the resource exists but does not have a policy set on it.
         * Caller must have the right Google IAM permission on the resource.
         *
         * Create a request for the method "tenants.getIamPolicy".
         *
         * This request holds the parameters needed by the the identitytoolkit server.  After setting any
         * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
         * operation. <p> {@link
         * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
       *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
       *        this field.
         * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleIamV1GetIamPolicyRequest}
         * @since 1.13
         */
        protected GetIamPolicy(java.lang.String resource, com.google.api.services.identitytoolkit.v2.model.GoogleIamV1GetIamPolicyRequest content) {
          super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v2.model.GoogleIamV1Policy.class);
          this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^projects/[^/]+/tenants/[^/]+$");
          }
        }

        @Override
        public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
          return (GetIamPolicy) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetIamPolicy setAccessToken(java.lang.String accessToken) {
          return (GetIamPolicy) super.setAccessToken(accessToken);
        }

        @Override
        public GetIamPolicy setAlt(java.lang.String alt) {
          return (GetIamPolicy) super.setAlt(alt);
        }

        @Override
        public GetIamPolicy setCallback(java.lang.String callback) {
          return (GetIamPolicy) super.setCallback(callback);
        }

        @Override
        public GetIamPolicy setFields(java.lang.String fields) {
          return (GetIamPolicy) super.setFields(fields);
        }

        @Override
        public GetIamPolicy setKey(java.lang.String key) {
          return (GetIamPolicy) super.setKey(key);
        }

        @Override
        public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
          return (GetIamPolicy) super.setOauthToken(oauthToken);
        }

        @Override
        public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
          return (GetIamPolicy) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetIamPolicy setUploadType(java.lang.String uploadType) {
          return (GetIamPolicy) super.setUploadType(uploadType);
        }

        @Override
        public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * REQUIRED: The resource for which the policy is being requested. See [Resource
         * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         * this field.
         */
        @com.google.api.client.util.Key
        private java.lang.String resource;

        /** REQUIRED: The resource for which the policy is being requested. See [Resource
       names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
       field.
         */
        public java.lang.String getResource() {
          return resource;
        }

        /**
         * REQUIRED: The resource for which the policy is being requested. See [Resource
         * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         * this field.
         */
        public GetIamPolicy setResource(java.lang.String resource) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^projects/[^/]+/tenants/[^/]+$");
          }
          this.resource = resource;
          return this;
        }

        @Override
        public GetIamPolicy set(String parameterName, Object value) {
          return (GetIamPolicy) super.set(parameterName, value);
        }
      }
      /**
       * List tenants under the given agent project. Requires read permission on the Agent project.
       *
       * Create a request for the method "tenants.list".
       *
       * This request holds the parameters needed by the identitytoolkit server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The parent resource name to list tenants for.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2ListTenantsResponse> {

        private static final String REST_PATH = "v2/{+parent}/tenants";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * List tenants under the given agent project. Requires read permission on the Agent project.
         *
         * Create a request for the method "tenants.list".
         *
         * This request holds the parameters needed by the the identitytoolkit server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The parent resource name to list tenants for.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(IdentityToolkit.this, "GET", REST_PATH, null, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2ListTenantsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The parent resource name to list tenants for. */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The parent resource name to list tenants for.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. The parent resource name to list tenants for. */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * The maximum number of results to return, capped at 1000. If not specified, the default
         * value is 20.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of results to return, capped at 1000. If not specified, the default value is 20.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * The maximum number of results to return, capped at 1000. If not specified, the default
         * value is 20.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** The pagination token from the response of a previous request. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** The pagination token from the response of a previous request.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** The pagination token from the response of a previous request. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Update a tenant. Requires write permission on the Tenant resource.
       *
       * Create a request for the method "tenants.patch".
       *
       * This request holds the parameters needed by the identitytoolkit server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Output only. Resource name of a tenant. For example: "projects/{project-id}/tenants/{tenant-id}"
       * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2Tenant}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2Tenant content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2Tenant> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/tenants/[^/]+$");

        /**
         * Update a tenant. Requires write permission on the Tenant resource.
         *
         * Create a request for the method "tenants.patch".
         *
         * This request holds the parameters needed by the the identitytoolkit server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Output only. Resource name of a tenant. For example: "projects/{project-id}/tenants/{tenant-id}"
         * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2Tenant}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2Tenant content) {
          super(IdentityToolkit.this, "PATCH", REST_PATH, content, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2Tenant.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/tenants/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Output only. Resource name of a tenant. For example: "projects/{project-id}/tenants
         * /{tenant-id}"
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Output only. Resource name of a tenant. For example: "projects/{project-id}/tenants/{tenant-id}"
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Output only. Resource name of a tenant. For example: "projects/{project-id}/tenants
         * /{tenant-id}"
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/tenants/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * If provided, only update fields set in the update mask. Otherwise, all settable fields
         * will be updated. For the `FieldMask` definition, see https://developers.google.com
         * /protocol-buffers/docs/reference/google.protobuf#fieldmask
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** If provided, only update fields set in the update mask. Otherwise, all settable fields will be
       updated. For the `FieldMask` definition, see https://developers.google.com/protocol-
       buffers/docs/reference/google.protobuf#fieldmask
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * If provided, only update fields set in the update mask. Otherwise, all settable fields
         * will be updated. For the `FieldMask` definition, see https://developers.google.com
         * /protocol-buffers/docs/reference/google.protobuf#fieldmask
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }
      /**
       * Sets the access control policy for a resource. If the policy exists, it is replaced. Caller must
       * have the right Google IAM permission on the resource.
       *
       * Create a request for the method "tenants.setIamPolicy".
       *
       * This request holds the parameters needed by the identitytoolkit server.  After setting any
       * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
       * operation.
       *
       * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
       *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
       *        this field.
       * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleIamV1SetIamPolicyRequest}
       * @return the request
       */
      public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.identitytoolkit.v2.model.GoogleIamV1SetIamPolicyRequest content) throws java.io.IOException {
        SetIamPolicy result = new SetIamPolicy(resource, content);
        initialize(result);
        return result;
      }

      public class SetIamPolicy extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleIamV1Policy> {

        private static final String REST_PATH = "v2/{+resource}:setIamPolicy";

        private final java.util.regex.Pattern RESOURCE_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/tenants/[^/]+$");

        /**
         * Sets the access control policy for a resource. If the policy exists, it is replaced. Caller
         * must have the right Google IAM permission on the resource.
         *
         * Create a request for the method "tenants.setIamPolicy".
         *
         * This request holds the parameters needed by the the identitytoolkit server.  After setting any
         * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
         * operation. <p> {@link
         * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
       *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
       *        this field.
         * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleIamV1SetIamPolicyRequest}
         * @since 1.13
         */
        protected SetIamPolicy(java.lang.String resource, com.google.api.services.identitytoolkit.v2.model.GoogleIamV1SetIamPolicyRequest content) {
          super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v2.model.GoogleIamV1Policy.class);
          this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^projects/[^/]+/tenants/[^/]+$");
          }
        }

        @Override
        public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
          return (SetIamPolicy) super.set$Xgafv($Xgafv);
        }

        @Override
        public SetIamPolicy setAccessToken(java.lang.String accessToken) {
          return (SetIamPolicy) super.setAccessToken(accessToken);
        }

        @Override
        public SetIamPolicy setAlt(java.lang.String alt) {
          return (SetIamPolicy) super.setAlt(alt);
        }

        @Override
        public SetIamPolicy setCallback(java.lang.String callback) {
          return (SetIamPolicy) super.setCallback(callback);
        }

        @Override
        public SetIamPolicy setFields(java.lang.String fields) {
          return (SetIamPolicy) super.setFields(fields);
        }

        @Override
        public SetIamPolicy setKey(java.lang.String key) {
          return (SetIamPolicy) super.setKey(key);
        }

        @Override
        public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
          return (SetIamPolicy) super.setOauthToken(oauthToken);
        }

        @Override
        public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
          return (SetIamPolicy) super.setQuotaUser(quotaUser);
        }

        @Override
        public SetIamPolicy setUploadType(java.lang.String uploadType) {
          return (SetIamPolicy) super.setUploadType(uploadType);
        }

        @Override
        public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
          return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * REQUIRED: The resource for which the policy is being specified. See [Resource
         * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         * this field.
         */
        @com.google.api.client.util.Key
        private java.lang.String resource;

        /** REQUIRED: The resource for which the policy is being specified. See [Resource
       names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
       field.
         */
        public java.lang.String getResource() {
          return resource;
        }

        /**
         * REQUIRED: The resource for which the policy is being specified. See [Resource
         * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         * this field.
         */
        public SetIamPolicy setResource(java.lang.String resource) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^projects/[^/]+/tenants/[^/]+$");
          }
          this.resource = resource;
          return this;
        }

        @Override
        public SetIamPolicy set(String parameterName, Object value) {
          return (SetIamPolicy) super.set(parameterName, value);
        }
      }
      /**
       * Returns the caller's permissions on a resource. An error is returned if the resource does not
       * exist. A caller is not required to have Google IAM permission to make this request.
       *
       * Create a request for the method "tenants.testIamPermissions".
       *
       * This request holds the parameters needed by the identitytoolkit server.  After setting any
       * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
       * operation.
       *
       * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
       *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
       *        this field.
       * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleIamV1TestIamPermissionsRequest}
       * @return the request
       */
      public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.identitytoolkit.v2.model.GoogleIamV1TestIamPermissionsRequest content) throws java.io.IOException {
        TestIamPermissions result = new TestIamPermissions(resource, content);
        initialize(result);
        return result;
      }

      public class TestIamPermissions extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleIamV1TestIamPermissionsResponse> {

        private static final String REST_PATH = "v2/{+resource}:testIamPermissions";

        private final java.util.regex.Pattern RESOURCE_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/tenants/[^/]+$");

        /**
         * Returns the caller's permissions on a resource. An error is returned if the resource does not
         * exist. A caller is not required to have Google IAM permission to make this request.
         *
         * Create a request for the method "tenants.testIamPermissions".
         *
         * This request holds the parameters needed by the the identitytoolkit server.  After setting any
         * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
         * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
         * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
       *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
       *        this field.
         * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleIamV1TestIamPermissionsRequest}
         * @since 1.13
         */
        protected TestIamPermissions(java.lang.String resource, com.google.api.services.identitytoolkit.v2.model.GoogleIamV1TestIamPermissionsRequest content) {
          super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v2.model.GoogleIamV1TestIamPermissionsResponse.class);
          this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^projects/[^/]+/tenants/[^/]+$");
          }
        }

        @Override
        public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
          return (TestIamPermissions) super.set$Xgafv($Xgafv);
        }

        @Override
        public TestIamPermissions setAccessToken(java.lang.String accessToken) {
          return (TestIamPermissions) super.setAccessToken(accessToken);
        }

        @Override
        public TestIamPermissions setAlt(java.lang.String alt) {
          return (TestIamPermissions) super.setAlt(alt);
        }

        @Override
        public TestIamPermissions setCallback(java.lang.String callback) {
          return (TestIamPermissions) super.setCallback(callback);
        }

        @Override
        public TestIamPermissions setFields(java.lang.String fields) {
          return (TestIamPermissions) super.setFields(fields);
        }

        @Override
        public TestIamPermissions setKey(java.lang.String key) {
          return (TestIamPermissions) super.setKey(key);
        }

        @Override
        public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
          return (TestIamPermissions) super.setOauthToken(oauthToken);
        }

        @Override
        public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
          return (TestIamPermissions) super.setQuotaUser(quotaUser);
        }

        @Override
        public TestIamPermissions setUploadType(java.lang.String uploadType) {
          return (TestIamPermissions) super.setUploadType(uploadType);
        }

        @Override
        public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
          return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * REQUIRED: The resource for which the policy detail is being requested. See [Resource
         * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         * this field.
         */
        @com.google.api.client.util.Key
        private java.lang.String resource;

        /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
       names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
       field.
         */
        public java.lang.String getResource() {
          return resource;
        }

        /**
         * REQUIRED: The resource for which the policy detail is being requested. See [Resource
         * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         * this field.
         */
        public TestIamPermissions setResource(java.lang.String resource) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^projects/[^/]+/tenants/[^/]+$");
          }
          this.resource = resource;
          return this;
        }

        @Override
        public TestIamPermissions set(String parameterName, Object value) {
          return (TestIamPermissions) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the DefaultSupportedIdpConfigs collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code IdentityToolkit identitytoolkit = new IdentityToolkit(...);}
       *   {@code IdentityToolkit.DefaultSupportedIdpConfigs.List request = identitytoolkit.defaultSupportedIdpConfigs().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public DefaultSupportedIdpConfigs defaultSupportedIdpConfigs() {
        return new DefaultSupportedIdpConfigs();
      }

      /**
       * The "defaultSupportedIdpConfigs" collection of methods.
       */
      public class DefaultSupportedIdpConfigs {

        /**
         * Create a default supported Idp configuration for an Identity Toolkit project.
         *
         * Create a request for the method "defaultSupportedIdpConfigs.create".
         *
         * This request holds the parameters needed by the identitytoolkit server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent The parent resource name where the config to be created, for example: "projects/my-awesome-project"
         * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig> {

          private static final String REST_PATH = "v2/{+parent}/defaultSupportedIdpConfigs";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/tenants/[^/]+$");

          /**
           * Create a default supported Idp configuration for an Identity Toolkit project.
           *
           * Create a request for the method "defaultSupportedIdpConfigs.create".
           *
           * This request holds the parameters needed by the the identitytoolkit server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent The parent resource name where the config to be created, for example: "projects/my-awesome-project"
           * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig content) {
            super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/tenants/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The parent resource name where the config to be created, for example: "projects/my-
           * awesome-project"
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** The parent resource name where the config to be created, for example: "projects/my-awesome-project"
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * The parent resource name where the config to be created, for example: "projects/my-
           * awesome-project"
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/tenants/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * The id of the Idp to create a config for. Call ListDefaultSupportedIdps for list of all
           * default supported Idps.
           */
          @com.google.api.client.util.Key
          private java.lang.String idpId;

          /** The id of the Idp to create a config for. Call ListDefaultSupportedIdps for list of all default
         supported Idps.
           */
          public java.lang.String getIdpId() {
            return idpId;
          }

          /**
           * The id of the Idp to create a config for. Call ListDefaultSupportedIdps for list of all
           * default supported Idps.
           */
          public Create setIdpId(java.lang.String idpId) {
            this.idpId = idpId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Delete a default supported Idp configuration for an Identity Toolkit project.
         *
         * Create a request for the method "defaultSupportedIdpConfigs.delete".
         *
         * This request holds the parameters needed by the identitytoolkit server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name The resource name of the config, for example: "projects/my-awesome-
         *        project/defaultSupportedIdpConfigs/google.com"
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v2/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/tenants/[^/]+/defaultSupportedIdpConfigs/[^/]+$");

          /**
           * Delete a default supported Idp configuration for an Identity Toolkit project.
           *
           * Create a request for the method "defaultSupportedIdpConfigs.delete".
           *
           * This request holds the parameters needed by the the identitytoolkit server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The resource name of the config, for example: "projects/my-awesome-
         *        project/defaultSupportedIdpConfigs/google.com"
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(IdentityToolkit.this, "DELETE", REST_PATH, null, com.google.api.services.identitytoolkit.v2.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/tenants/[^/]+/defaultSupportedIdpConfigs/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The resource name of the config, for example: "projects/my-awesome-
           * project/defaultSupportedIdpConfigs/google.com"
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The resource name of the config, for example: "projects/my-awesome-
         project/defaultSupportedIdpConfigs/google.com"
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The resource name of the config, for example: "projects/my-awesome-
           * project/defaultSupportedIdpConfigs/google.com"
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/tenants/[^/]+/defaultSupportedIdpConfigs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Retrieve a default supported Idp configuration for an Identity Toolkit project.
         *
         * Create a request for the method "defaultSupportedIdpConfigs.get".
         *
         * This request holds the parameters needed by the identitytoolkit server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name The resource name of the config, for example: "projects/my-awesome-
         *        project/defaultSupportedIdpConfigs/google.com"
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig> {

          private static final String REST_PATH = "v2/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/tenants/[^/]+/defaultSupportedIdpConfigs/[^/]+$");

          /**
           * Retrieve a default supported Idp configuration for an Identity Toolkit project.
           *
           * Create a request for the method "defaultSupportedIdpConfigs.get".
           *
           * This request holds the parameters needed by the the identitytoolkit server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The resource name of the config, for example: "projects/my-awesome-
         *        project/defaultSupportedIdpConfigs/google.com"
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(IdentityToolkit.this, "GET", REST_PATH, null, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/tenants/[^/]+/defaultSupportedIdpConfigs/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The resource name of the config, for example: "projects/my-awesome-
           * project/defaultSupportedIdpConfigs/google.com"
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The resource name of the config, for example: "projects/my-awesome-
         project/defaultSupportedIdpConfigs/google.com"
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The resource name of the config, for example: "projects/my-awesome-
           * project/defaultSupportedIdpConfigs/google.com"
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/tenants/[^/]+/defaultSupportedIdpConfigs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * List all default supported Idp configurations for an Identity Toolkit project.
         *
         * Create a request for the method "defaultSupportedIdpConfigs.list".
         *
         * This request holds the parameters needed by the identitytoolkit server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent The parent resource name, for example, "projects/my-awesome-project".
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpConfigsResponse> {

          private static final String REST_PATH = "v2/{+parent}/defaultSupportedIdpConfigs";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/tenants/[^/]+$");

          /**
           * List all default supported Idp configurations for an Identity Toolkit project.
           *
           * Create a request for the method "defaultSupportedIdpConfigs.list".
           *
           * This request holds the parameters needed by the the identitytoolkit server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent The parent resource name, for example, "projects/my-awesome-project".
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(IdentityToolkit.this, "GET", REST_PATH, null, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpConfigsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/tenants/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** The parent resource name, for example, "projects/my-awesome-project". */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** The parent resource name, for example, "projects/my-awesome-project".
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** The parent resource name, for example, "projects/my-awesome-project". */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/tenants/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** The maximum number of items to return. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of items to return.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The maximum number of items to return. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The next_page_token value returned from a previous List request, if any. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The next_page_token value returned from a previous List request, if any.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The next_page_token value returned from a previous List request, if any. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Update a default supported Idp configuration for an Identity Toolkit project.
         *
         * Create a request for the method "defaultSupportedIdpConfigs.patch".
         *
         * This request holds the parameters needed by the identitytoolkit server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name The name of the DefaultSupportedIdpConfig resource, for example: "projects/my-awesome-
         *        project/defaultSupportedIdpConfigs/google.com"
         * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig> {

          private static final String REST_PATH = "v2/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/tenants/[^/]+/defaultSupportedIdpConfigs/[^/]+$");

          /**
           * Update a default supported Idp configuration for an Identity Toolkit project.
           *
           * Create a request for the method "defaultSupportedIdpConfigs.patch".
           *
           * This request holds the parameters needed by the the identitytoolkit server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the DefaultSupportedIdpConfig resource, for example: "projects/my-awesome-
         *        project/defaultSupportedIdpConfigs/google.com"
           * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig content) {
            super(IdentityToolkit.this, "PATCH", REST_PATH, content, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/tenants/[^/]+/defaultSupportedIdpConfigs/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The name of the DefaultSupportedIdpConfig resource, for example: "projects/my-awesome-
           * project/defaultSupportedIdpConfigs/google.com"
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the DefaultSupportedIdpConfig resource, for example: "projects/my-awesome-
         project/defaultSupportedIdpConfigs/google.com"
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The name of the DefaultSupportedIdpConfig resource, for example: "projects/my-awesome-
           * project/defaultSupportedIdpConfigs/google.com"
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/tenants/[^/]+/defaultSupportedIdpConfigs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * The update mask applies to the resource. For the `FieldMask` definition, see
           * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** The update mask applies to the resource. For the `FieldMask` definition, see
         https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * The update mask applies to the resource. For the `FieldMask` definition, see
           * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the InboundSamlConfigs collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code IdentityToolkit identitytoolkit = new IdentityToolkit(...);}
       *   {@code IdentityToolkit.InboundSamlConfigs.List request = identitytoolkit.inboundSamlConfigs().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public InboundSamlConfigs inboundSamlConfigs() {
        return new InboundSamlConfigs();
      }

      /**
       * The "inboundSamlConfigs" collection of methods.
       */
      public class InboundSamlConfigs {

        /**
         * Create an inbound SAML configuration for an Identity Toolkit project.
         *
         * Create a request for the method "inboundSamlConfigs.create".
         *
         * This request holds the parameters needed by the identitytoolkit server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent The parent resource name where the config to be created, for example: "projects/my-awesome-project"
         * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig> {

          private static final String REST_PATH = "v2/{+parent}/inboundSamlConfigs";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/tenants/[^/]+$");

          /**
           * Create an inbound SAML configuration for an Identity Toolkit project.
           *
           * Create a request for the method "inboundSamlConfigs.create".
           *
           * This request holds the parameters needed by the the identitytoolkit server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent The parent resource name where the config to be created, for example: "projects/my-awesome-project"
           * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig content) {
            super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/tenants/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The parent resource name where the config to be created, for example: "projects/my-
           * awesome-project"
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** The parent resource name where the config to be created, for example: "projects/my-awesome-project"
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * The parent resource name where the config to be created, for example: "projects/my-
           * awesome-project"
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/tenants/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** The id to use for this config. */
          @com.google.api.client.util.Key
          private java.lang.String inboundSamlConfigId;

          /** The id to use for this config.
           */
          public java.lang.String getInboundSamlConfigId() {
            return inboundSamlConfigId;
          }

          /** The id to use for this config. */
          public Create setInboundSamlConfigId(java.lang.String inboundSamlConfigId) {
            this.inboundSamlConfigId = inboundSamlConfigId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Delete an inbound SAML configuration for an Identity Toolkit project.
         *
         * Create a request for the method "inboundSamlConfigs.delete".
         *
         * This request holds the parameters needed by the identitytoolkit server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name The resource name of the config to be deleted, for example: 'projects/my-awesome-
         *        project/inboundSamlConfigs/my-config-id'.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v2/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/tenants/[^/]+/inboundSamlConfigs/[^/]+$");

          /**
           * Delete an inbound SAML configuration for an Identity Toolkit project.
           *
           * Create a request for the method "inboundSamlConfigs.delete".
           *
           * This request holds the parameters needed by the the identitytoolkit server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The resource name of the config to be deleted, for example: 'projects/my-awesome-
         *        project/inboundSamlConfigs/my-config-id'.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(IdentityToolkit.this, "DELETE", REST_PATH, null, com.google.api.services.identitytoolkit.v2.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/tenants/[^/]+/inboundSamlConfigs/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The resource name of the config to be deleted, for example: 'projects/my-awesome-
           * project/inboundSamlConfigs/my-config-id'.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The resource name of the config to be deleted, for example: 'projects/my-awesome-
         project/inboundSamlConfigs/my-config-id'.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The resource name of the config to be deleted, for example: 'projects/my-awesome-
           * project/inboundSamlConfigs/my-config-id'.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/tenants/[^/]+/inboundSamlConfigs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Retrieve an inbound SAML configuration for an Identity Toolkit project.
         *
         * Create a request for the method "inboundSamlConfigs.get".
         *
         * This request holds the parameters needed by the identitytoolkit server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name The resource name of the config, for example: 'projects/my-awesome-project/inboundSamlConfigs/my-
         *        config-id'.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig> {

          private static final String REST_PATH = "v2/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/tenants/[^/]+/inboundSamlConfigs/[^/]+$");

          /**
           * Retrieve an inbound SAML configuration for an Identity Toolkit project.
           *
           * Create a request for the method "inboundSamlConfigs.get".
           *
           * This request holds the parameters needed by the the identitytoolkit server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The resource name of the config, for example: 'projects/my-awesome-project/inboundSamlConfigs/my-
         *        config-id'.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(IdentityToolkit.this, "GET", REST_PATH, null, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/tenants/[^/]+/inboundSamlConfigs/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The resource name of the config, for example: 'projects/my-awesome-
           * project/inboundSamlConfigs/my-config-id'.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The resource name of the config, for example: 'projects/my-awesome-project/inboundSamlConfigs/my-
         config-id'.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The resource name of the config, for example: 'projects/my-awesome-
           * project/inboundSamlConfigs/my-config-id'.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/tenants/[^/]+/inboundSamlConfigs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * List all inbound SAML configurations for an Identity Toolkit project.
         *
         * Create a request for the method "inboundSamlConfigs.list".
         *
         * This request holds the parameters needed by the identitytoolkit server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent The parent resource name, for example, "projects/my-awesome-project".
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2ListInboundSamlConfigsResponse> {

          private static final String REST_PATH = "v2/{+parent}/inboundSamlConfigs";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/tenants/[^/]+$");

          /**
           * List all inbound SAML configurations for an Identity Toolkit project.
           *
           * Create a request for the method "inboundSamlConfigs.list".
           *
           * This request holds the parameters needed by the the identitytoolkit server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent The parent resource name, for example, "projects/my-awesome-project".
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(IdentityToolkit.this, "GET", REST_PATH, null, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2ListInboundSamlConfigsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/tenants/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** The parent resource name, for example, "projects/my-awesome-project". */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** The parent resource name, for example, "projects/my-awesome-project".
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** The parent resource name, for example, "projects/my-awesome-project". */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/tenants/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** The maximum number of items to return. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of items to return.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The maximum number of items to return. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The next_page_token value returned from a previous List request, if any. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The next_page_token value returned from a previous List request, if any.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The next_page_token value returned from a previous List request, if any. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Update an inbound SAML configuration for an Identity Toolkit project.
         *
         * Create a request for the method "inboundSamlConfigs.patch".
         *
         * This request holds the parameters needed by the identitytoolkit server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name The name of the InboundSamlConfig resource, for example: 'projects/my-awesome-
         *        project/inboundSamlConfigs/my-config-id'. Ignored during create requests.
         * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig> {

          private static final String REST_PATH = "v2/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/tenants/[^/]+/inboundSamlConfigs/[^/]+$");

          /**
           * Update an inbound SAML configuration for an Identity Toolkit project.
           *
           * Create a request for the method "inboundSamlConfigs.patch".
           *
           * This request holds the parameters needed by the the identitytoolkit server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the InboundSamlConfig resource, for example: 'projects/my-awesome-
         *        project/inboundSamlConfigs/my-config-id'. Ignored during create requests.
           * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig content) {
            super(IdentityToolkit.this, "PATCH", REST_PATH, content, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/tenants/[^/]+/inboundSamlConfigs/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The name of the InboundSamlConfig resource, for example: 'projects/my-awesome-
           * project/inboundSamlConfigs/my-config-id'. Ignored during create requests.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the InboundSamlConfig resource, for example: 'projects/my-awesome-
         project/inboundSamlConfigs/my-config-id'. Ignored during create requests.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The name of the InboundSamlConfig resource, for example: 'projects/my-awesome-
           * project/inboundSamlConfigs/my-config-id'. Ignored during create requests.
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/tenants/[^/]+/inboundSamlConfigs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * The update mask applies to the resource. Empty update mask will result in updating
           * nothing. For the `FieldMask` definition, see https://developers.google.com/protocol-
           * buffers/docs/reference/google.protobuf#fieldmask
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** The update mask applies to the resource. Empty update mask will result in updating nothing. For the
         `FieldMask` definition, see https://developers.google.com/protocol-
         buffers/docs/reference/google.protobuf#fieldmask
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * The update mask applies to the resource. Empty update mask will result in updating
           * nothing. For the `FieldMask` definition, see https://developers.google.com/protocol-
           * buffers/docs/reference/google.protobuf#fieldmask
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the OauthIdpConfigs collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code IdentityToolkit identitytoolkit = new IdentityToolkit(...);}
       *   {@code IdentityToolkit.OauthIdpConfigs.List request = identitytoolkit.oauthIdpConfigs().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public OauthIdpConfigs oauthIdpConfigs() {
        return new OauthIdpConfigs();
      }

      /**
       * The "oauthIdpConfigs" collection of methods.
       */
      public class OauthIdpConfigs {

        /**
         * Create an Oidc Idp configuration for an Identity Toolkit project.
         *
         * Create a request for the method "oauthIdpConfigs.create".
         *
         * This request holds the parameters needed by the identitytoolkit server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent The parent resource name where the config to be created, for example: "projects/my-awesome-project"
         * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig> {

          private static final String REST_PATH = "v2/{+parent}/oauthIdpConfigs";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/tenants/[^/]+$");

          /**
           * Create an Oidc Idp configuration for an Identity Toolkit project.
           *
           * Create a request for the method "oauthIdpConfigs.create".
           *
           * This request holds the parameters needed by the the identitytoolkit server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent The parent resource name where the config to be created, for example: "projects/my-awesome-project"
           * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig content) {
            super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/tenants/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The parent resource name where the config to be created, for example: "projects/my-
           * awesome-project"
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** The parent resource name where the config to be created, for example: "projects/my-awesome-project"
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * The parent resource name where the config to be created, for example: "projects/my-
           * awesome-project"
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/tenants/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** The id to use for this config. */
          @com.google.api.client.util.Key
          private java.lang.String oauthIdpConfigId;

          /** The id to use for this config.
           */
          public java.lang.String getOauthIdpConfigId() {
            return oauthIdpConfigId;
          }

          /** The id to use for this config. */
          public Create setOauthIdpConfigId(java.lang.String oauthIdpConfigId) {
            this.oauthIdpConfigId = oauthIdpConfigId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Delete an Oidc Idp configuration for an Identity Toolkit project.
         *
         * Create a request for the method "oauthIdpConfigs.delete".
         *
         * This request holds the parameters needed by the identitytoolkit server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name The resource name of the config to be deleted, for example: 'projects/my-awesome-
         *        project/oauthIdpConfigs/oauth-config-id'.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v2/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/tenants/[^/]+/oauthIdpConfigs/[^/]+$");

          /**
           * Delete an Oidc Idp configuration for an Identity Toolkit project.
           *
           * Create a request for the method "oauthIdpConfigs.delete".
           *
           * This request holds the parameters needed by the the identitytoolkit server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The resource name of the config to be deleted, for example: 'projects/my-awesome-
         *        project/oauthIdpConfigs/oauth-config-id'.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(IdentityToolkit.this, "DELETE", REST_PATH, null, com.google.api.services.identitytoolkit.v2.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/tenants/[^/]+/oauthIdpConfigs/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The resource name of the config to be deleted, for example: 'projects/my-awesome-
           * project/oauthIdpConfigs/oauth-config-id'.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The resource name of the config to be deleted, for example: 'projects/my-awesome-
         project/oauthIdpConfigs/oauth-config-id'.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The resource name of the config to be deleted, for example: 'projects/my-awesome-
           * project/oauthIdpConfigs/oauth-config-id'.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/tenants/[^/]+/oauthIdpConfigs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Retrieve an Oidc Idp configuration for an Identity Toolkit project.
         *
         * Create a request for the method "oauthIdpConfigs.get".
         *
         * This request holds the parameters needed by the identitytoolkit server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name The resource name of the config, for example: 'projects/my-awesome-project/oauthIdpConfigs/oauth-
         *        config-id'.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig> {

          private static final String REST_PATH = "v2/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/tenants/[^/]+/oauthIdpConfigs/[^/]+$");

          /**
           * Retrieve an Oidc Idp configuration for an Identity Toolkit project.
           *
           * Create a request for the method "oauthIdpConfigs.get".
           *
           * This request holds the parameters needed by the the identitytoolkit server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The resource name of the config, for example: 'projects/my-awesome-project/oauthIdpConfigs/oauth-
         *        config-id'.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(IdentityToolkit.this, "GET", REST_PATH, null, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/tenants/[^/]+/oauthIdpConfigs/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The resource name of the config, for example: 'projects/my-awesome-
           * project/oauthIdpConfigs/oauth-config-id'.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The resource name of the config, for example: 'projects/my-awesome-project/oauthIdpConfigs/oauth-
         config-id'.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The resource name of the config, for example: 'projects/my-awesome-
           * project/oauthIdpConfigs/oauth-config-id'.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/tenants/[^/]+/oauthIdpConfigs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * List all Oidc Idp configurations for an Identity Toolkit project.
         *
         * Create a request for the method "oauthIdpConfigs.list".
         *
         * This request holds the parameters needed by the identitytoolkit server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent The parent resource name, for example, "projects/my-awesome-project".
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2ListOAuthIdpConfigsResponse> {

          private static final String REST_PATH = "v2/{+parent}/oauthIdpConfigs";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/tenants/[^/]+$");

          /**
           * List all Oidc Idp configurations for an Identity Toolkit project.
           *
           * Create a request for the method "oauthIdpConfigs.list".
           *
           * This request holds the parameters needed by the the identitytoolkit server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent The parent resource name, for example, "projects/my-awesome-project".
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(IdentityToolkit.this, "GET", REST_PATH, null, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2ListOAuthIdpConfigsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/tenants/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** The parent resource name, for example, "projects/my-awesome-project". */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** The parent resource name, for example, "projects/my-awesome-project".
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** The parent resource name, for example, "projects/my-awesome-project". */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/tenants/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** The maximum number of items to return. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of items to return.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The maximum number of items to return. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The next_page_token value returned from a previous List request, if any. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The next_page_token value returned from a previous List request, if any.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The next_page_token value returned from a previous List request, if any. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Update an Oidc Idp configuration for an Identity Toolkit project.
         *
         * Create a request for the method "oauthIdpConfigs.patch".
         *
         * This request holds the parameters needed by the identitytoolkit server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name The name of the OAuthIdpConfig resource, for example: 'projects/my-awesome-project/oauthIdpConfigs
         *        /oauth-config-id'. Ignored during create requests.
         * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig> {

          private static final String REST_PATH = "v2/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/tenants/[^/]+/oauthIdpConfigs/[^/]+$");

          /**
           * Update an Oidc Idp configuration for an Identity Toolkit project.
           *
           * Create a request for the method "oauthIdpConfigs.patch".
           *
           * This request holds the parameters needed by the the identitytoolkit server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the OAuthIdpConfig resource, for example: 'projects/my-awesome-project/oauthIdpConfigs
         *        /oauth-config-id'. Ignored during create requests.
           * @param content the {@link com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig content) {
            super(IdentityToolkit.this, "PATCH", REST_PATH, content, com.google.api.services.identitytoolkit.v2.model.GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/tenants/[^/]+/oauthIdpConfigs/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The name of the OAuthIdpConfig resource, for example: 'projects/my-awesome-
           * project/oauthIdpConfigs/oauth-config-id'. Ignored during create requests.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the OAuthIdpConfig resource, for example: 'projects/my-awesome-project/oauthIdpConfigs
         /oauth-config-id'. Ignored during create requests.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The name of the OAuthIdpConfig resource, for example: 'projects/my-awesome-
           * project/oauthIdpConfigs/oauth-config-id'. Ignored during create requests.
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/tenants/[^/]+/oauthIdpConfigs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * The update mask applies to the resource. Empty update mask will result in updating
           * nothing. For the `FieldMask` definition, see https://developers.google.com/protocol-
           * buffers/docs/reference/google.protobuf#fieldmask
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** The update mask applies to the resource. Empty update mask will result in updating nothing. For the
         `FieldMask` definition, see https://developers.google.com/protocol-
         buffers/docs/reference/google.protobuf#fieldmask
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * The update mask applies to the resource. Empty update mask will result in updating
           * nothing. For the `FieldMask` definition, see https://developers.google.com/protocol-
           * buffers/docs/reference/google.protobuf#fieldmask
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

      }
    }
  }

  /**
   * Builder for {@link IdentityToolkit}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link IdentityToolkit}. */
    @Override
    public IdentityToolkit build() {
      return new IdentityToolkit(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link IdentityToolkitRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setIdentityToolkitRequestInitializer(
        IdentityToolkitRequestInitializer identitytoolkitRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(identitytoolkitRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
