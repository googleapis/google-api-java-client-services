/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.tagmanager.model;

/**
 * Represents a Google Tag Manager Container Version Header.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Tag Manager API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ContainerVersionHeader extends com.google.api.client.json.GenericJson {

  /**
   * GTM Account ID.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String accountId;

  /**
   * GTM Container ID.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String containerId;

  /**
   * The Container Version ID uniquely identifies the GTM Container Version.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String containerVersionId;

  /**
   * A value of true indicates this container version has been deleted.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean deleted;

  /**
   * Container version display name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Number of macros in the container version.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String numMacros;

  /**
   * Number of rules in the container version.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String numRules;

  /**
   * Number of tags in the container version.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String numTags;

  /**
   * Number of triggers in the container version.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String numTriggers;

  /**
   * Number of variables in the container version.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String numVariables;

  /**
   * GTM Account ID.
   * @return value or {@code null} for none
   */
  public java.lang.String getAccountId() {
    return accountId;
  }

  /**
   * GTM Account ID.
   * @param accountId accountId or {@code null} for none
   */
  public ContainerVersionHeader setAccountId(java.lang.String accountId) {
    this.accountId = accountId;
    return this;
  }

  /**
   * GTM Container ID.
   * @return value or {@code null} for none
   */
  public java.lang.String getContainerId() {
    return containerId;
  }

  /**
   * GTM Container ID.
   * @param containerId containerId or {@code null} for none
   */
  public ContainerVersionHeader setContainerId(java.lang.String containerId) {
    this.containerId = containerId;
    return this;
  }

  /**
   * The Container Version ID uniquely identifies the GTM Container Version.
   * @return value or {@code null} for none
   */
  public java.lang.String getContainerVersionId() {
    return containerVersionId;
  }

  /**
   * The Container Version ID uniquely identifies the GTM Container Version.
   * @param containerVersionId containerVersionId or {@code null} for none
   */
  public ContainerVersionHeader setContainerVersionId(java.lang.String containerVersionId) {
    this.containerVersionId = containerVersionId;
    return this;
  }

  /**
   * A value of true indicates this container version has been deleted.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getDeleted() {
    return deleted;
  }

  /**
   * A value of true indicates this container version has been deleted.
   * @param deleted deleted or {@code null} for none
   */
  public ContainerVersionHeader setDeleted(java.lang.Boolean deleted) {
    this.deleted = deleted;
    return this;
  }

  /**
   * Container version display name.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Container version display name.
   * @param name name or {@code null} for none
   */
  public ContainerVersionHeader setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Number of macros in the container version.
   * @return value or {@code null} for none
   */
  public java.lang.String getNumMacros() {
    return numMacros;
  }

  /**
   * Number of macros in the container version.
   * @param numMacros numMacros or {@code null} for none
   */
  public ContainerVersionHeader setNumMacros(java.lang.String numMacros) {
    this.numMacros = numMacros;
    return this;
  }

  /**
   * Number of rules in the container version.
   * @return value or {@code null} for none
   */
  public java.lang.String getNumRules() {
    return numRules;
  }

  /**
   * Number of rules in the container version.
   * @param numRules numRules or {@code null} for none
   */
  public ContainerVersionHeader setNumRules(java.lang.String numRules) {
    this.numRules = numRules;
    return this;
  }

  /**
   * Number of tags in the container version.
   * @return value or {@code null} for none
   */
  public java.lang.String getNumTags() {
    return numTags;
  }

  /**
   * Number of tags in the container version.
   * @param numTags numTags or {@code null} for none
   */
  public ContainerVersionHeader setNumTags(java.lang.String numTags) {
    this.numTags = numTags;
    return this;
  }

  /**
   * Number of triggers in the container version.
   * @return value or {@code null} for none
   */
  public java.lang.String getNumTriggers() {
    return numTriggers;
  }

  /**
   * Number of triggers in the container version.
   * @param numTriggers numTriggers or {@code null} for none
   */
  public ContainerVersionHeader setNumTriggers(java.lang.String numTriggers) {
    this.numTriggers = numTriggers;
    return this;
  }

  /**
   * Number of variables in the container version.
   * @return value or {@code null} for none
   */
  public java.lang.String getNumVariables() {
    return numVariables;
  }

  /**
   * Number of variables in the container version.
   * @param numVariables numVariables or {@code null} for none
   */
  public ContainerVersionHeader setNumVariables(java.lang.String numVariables) {
    this.numVariables = numVariables;
    return this;
  }

  @Override
  public ContainerVersionHeader set(String fieldName, Object value) {
    return (ContainerVersionHeader) super.set(fieldName, value);
  }

  @Override
  public ContainerVersionHeader clone() {
    return (ContainerVersionHeader) super.clone();
  }

}
