/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.recaptchaenterprise.v1.model;

/**
 * Risk analysis result for an event.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the reCAPTCHA Enterprise API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudRecaptchaenterpriseV1RiskAnalysis extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Challenge information for SCORE_AND_CHALLENGE and INVISIBLE keys
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String challenge;

  /**
   * Output only. Extended verdict reasons to be used for experimentation only. The set of possible
   * reasons is subject to change.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> extendedVerdictReasons;

  /**
   * Output only. Reasons contributing to the risk analysis verdict.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> reasons;

  /**
   * Output only. Legitimate event score from 0.0 to 1.0. (1.0 means very likely legitimate traffic
   * while 0.0 means very likely non-legitimate traffic).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float score;

  /**
   * Output only. Challenge information for SCORE_AND_CHALLENGE and INVISIBLE keys
   * @return value or {@code null} for none
   */
  public java.lang.String getChallenge() {
    return challenge;
  }

  /**
   * Output only. Challenge information for SCORE_AND_CHALLENGE and INVISIBLE keys
   * @param challenge challenge or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1RiskAnalysis setChallenge(java.lang.String challenge) {
    this.challenge = challenge;
    return this;
  }

  /**
   * Output only. Extended verdict reasons to be used for experimentation only. The set of possible
   * reasons is subject to change.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getExtendedVerdictReasons() {
    return extendedVerdictReasons;
  }

  /**
   * Output only. Extended verdict reasons to be used for experimentation only. The set of possible
   * reasons is subject to change.
   * @param extendedVerdictReasons extendedVerdictReasons or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1RiskAnalysis setExtendedVerdictReasons(java.util.List<java.lang.String> extendedVerdictReasons) {
    this.extendedVerdictReasons = extendedVerdictReasons;
    return this;
  }

  /**
   * Output only. Reasons contributing to the risk analysis verdict.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getReasons() {
    return reasons;
  }

  /**
   * Output only. Reasons contributing to the risk analysis verdict.
   * @param reasons reasons or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1RiskAnalysis setReasons(java.util.List<java.lang.String> reasons) {
    this.reasons = reasons;
    return this;
  }

  /**
   * Output only. Legitimate event score from 0.0 to 1.0. (1.0 means very likely legitimate traffic
   * while 0.0 means very likely non-legitimate traffic).
   * @return value or {@code null} for none
   */
  public java.lang.Float getScore() {
    return score;
  }

  /**
   * Output only. Legitimate event score from 0.0 to 1.0. (1.0 means very likely legitimate traffic
   * while 0.0 means very likely non-legitimate traffic).
   * @param score score or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1RiskAnalysis setScore(java.lang.Float score) {
    this.score = score;
    return this;
  }

  @Override
  public GoogleCloudRecaptchaenterpriseV1RiskAnalysis set(String fieldName, Object value) {
    return (GoogleCloudRecaptchaenterpriseV1RiskAnalysis) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudRecaptchaenterpriseV1RiskAnalysis clone() {
    return (GoogleCloudRecaptchaenterpriseV1RiskAnalysis) super.clone();
  }

}
