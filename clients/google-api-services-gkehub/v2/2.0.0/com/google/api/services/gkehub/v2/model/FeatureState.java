/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.gkehub.v2.model;

/**
 * FeatureState contains high-level state information and per-feature state information for this
 * MembershipFeature.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the GKE Hub API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class FeatureState extends com.google.api.client.json.GenericJson {

  /**
   * Appdevexperience specific state.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AppDevExperienceState appdevexperience;

  /**
   * Cluster upgrade state.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ClusterUpgradeState clusterupgrade;

  /**
   * Config Management state
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ConfigManagementState configmanagement;

  /**
   * Identity service state
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private IdentityServiceState identityservice;

  /**
   * Metering state
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private MeteringState metering;

  /**
   * Policy Controller state
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private PolicyControllerState policycontroller;

  /**
   * RBAC Role Binding Actuation state
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private RBACRoleBindingActuationState rbacrolebindingactuation;

  /**
   * Service mesh state
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ServiceMeshState servicemesh;

  /**
   * The high-level state of this MembershipFeature.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private State state;

  /**
   * Appdevexperience specific state.
   * @return value or {@code null} for none
   */
  public AppDevExperienceState getAppdevexperience() {
    return appdevexperience;
  }

  /**
   * Appdevexperience specific state.
   * @param appdevexperience appdevexperience or {@code null} for none
   */
  public FeatureState setAppdevexperience(AppDevExperienceState appdevexperience) {
    this.appdevexperience = appdevexperience;
    return this;
  }

  /**
   * Cluster upgrade state.
   * @return value or {@code null} for none
   */
  public ClusterUpgradeState getClusterupgrade() {
    return clusterupgrade;
  }

  /**
   * Cluster upgrade state.
   * @param clusterupgrade clusterupgrade or {@code null} for none
   */
  public FeatureState setClusterupgrade(ClusterUpgradeState clusterupgrade) {
    this.clusterupgrade = clusterupgrade;
    return this;
  }

  /**
   * Config Management state
   * @return value or {@code null} for none
   */
  public ConfigManagementState getConfigmanagement() {
    return configmanagement;
  }

  /**
   * Config Management state
   * @param configmanagement configmanagement or {@code null} for none
   */
  public FeatureState setConfigmanagement(ConfigManagementState configmanagement) {
    this.configmanagement = configmanagement;
    return this;
  }

  /**
   * Identity service state
   * @return value or {@code null} for none
   */
  public IdentityServiceState getIdentityservice() {
    return identityservice;
  }

  /**
   * Identity service state
   * @param identityservice identityservice or {@code null} for none
   */
  public FeatureState setIdentityservice(IdentityServiceState identityservice) {
    this.identityservice = identityservice;
    return this;
  }

  /**
   * Metering state
   * @return value or {@code null} for none
   */
  public MeteringState getMetering() {
    return metering;
  }

  /**
   * Metering state
   * @param metering metering or {@code null} for none
   */
  public FeatureState setMetering(MeteringState metering) {
    this.metering = metering;
    return this;
  }

  /**
   * Policy Controller state
   * @return value or {@code null} for none
   */
  public PolicyControllerState getPolicycontroller() {
    return policycontroller;
  }

  /**
   * Policy Controller state
   * @param policycontroller policycontroller or {@code null} for none
   */
  public FeatureState setPolicycontroller(PolicyControllerState policycontroller) {
    this.policycontroller = policycontroller;
    return this;
  }

  /**
   * RBAC Role Binding Actuation state
   * @return value or {@code null} for none
   */
  public RBACRoleBindingActuationState getRbacrolebindingactuation() {
    return rbacrolebindingactuation;
  }

  /**
   * RBAC Role Binding Actuation state
   * @param rbacrolebindingactuation rbacrolebindingactuation or {@code null} for none
   */
  public FeatureState setRbacrolebindingactuation(RBACRoleBindingActuationState rbacrolebindingactuation) {
    this.rbacrolebindingactuation = rbacrolebindingactuation;
    return this;
  }

  /**
   * Service mesh state
   * @return value or {@code null} for none
   */
  public ServiceMeshState getServicemesh() {
    return servicemesh;
  }

  /**
   * Service mesh state
   * @param servicemesh servicemesh or {@code null} for none
   */
  public FeatureState setServicemesh(ServiceMeshState servicemesh) {
    this.servicemesh = servicemesh;
    return this;
  }

  /**
   * The high-level state of this MembershipFeature.
   * @return value or {@code null} for none
   */
  public State getState() {
    return state;
  }

  /**
   * The high-level state of this MembershipFeature.
   * @param state state or {@code null} for none
   */
  public FeatureState setState(State state) {
    this.state = state;
    return this;
  }

  @Override
  public FeatureState set(String fieldName, Object value) {
    return (FeatureState) super.set(fieldName, value);
  }

  @Override
  public FeatureState clone() {
    return (FeatureState) super.clone();
  }

}
