/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudsearch.v1.model;

/**
 * The markup for developers to specify the contents of a contextual AddOn. A contextual AddOn is
 * triggered in context of an email. For that email, there can be N items that are associated with
 * the email (e.g. contacts, sales lead, meeting information). Each item is represented as a "card".
 * A card has two views, collapsed and detailed. If there are more than 1 card, the cards are show
 * as a list of collapsed views. The end user can expand into the detailed view for each of those
 * cards. In the detailed view, developers have the freedom to use a variety of "widgets" to
 * construct it. The model here is to restrict (make consistent for end users) the navigation of the
 * N cards but providing developers the freedom to build the detailed view that can best represent
 * their use case/content. Go http://go/aoig-widgets1 to see the mocks. Post v1, we plan to support
 * new AddOn use cases that will require different and separate 'templates'. For example, a compose
 * triggered AddOn which will support a new set of use cases with different user interaction
 * patterns. As a result, we will likely need a very different template than this one.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Search API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ContextualAddOnMarkup extends com.google.api.client.json.GenericJson {

  /**
   * A card must contain a header and at least 1 section.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Card> cards;

  static {
    // hack to force ProGuard to consider Card used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(Card.class);
  }

  /**
   * Deprecated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Toolbar toolbar;

  /**
   * A card must contain a header and at least 1 section.
   * @return value or {@code null} for none
   */
  public java.util.List<Card> getCards() {
    return cards;
  }

  /**
   * A card must contain a header and at least 1 section.
   * @param cards cards or {@code null} for none
   */
  public ContextualAddOnMarkup setCards(java.util.List<Card> cards) {
    this.cards = cards;
    return this;
  }

  /**
   * Deprecated.
   * @return value or {@code null} for none
   */
  public Toolbar getToolbar() {
    return toolbar;
  }

  /**
   * Deprecated.
   * @param toolbar toolbar or {@code null} for none
   */
  public ContextualAddOnMarkup setToolbar(Toolbar toolbar) {
    this.toolbar = toolbar;
    return this;
  }

  @Override
  public ContextualAddOnMarkup set(String fieldName, Object value) {
    return (ContextualAddOnMarkup) super.set(fieldName, value);
  }

  @Override
  public ContextualAddOnMarkup clone() {
    return (ContextualAddOnMarkup) super.clone();
  }

}
