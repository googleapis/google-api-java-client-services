/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.directory.model;

/**
 * The type of API resource. For Schema resources, this is always `admin#directory#schema`.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Admin SDK API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Schema extends com.google.api.client.json.GenericJson {

  /**
   * Display name for the schema.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * The ETag of the resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String etag;

  /**
   * A list of fields in the schema.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<SchemaFieldSpec> fields;

  /**
   * Kind of resource this is.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String kind;

  /**
   * The unique identifier of the schema (Read-only)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String schemaId;

  /**
   * The schema's name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String schemaName;

  /**
   * Display name for the schema.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Display name for the schema.
   * @param displayName displayName or {@code null} for none
   */
  public Schema setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * The ETag of the resource.
   * @return value or {@code null} for none
   */
  public java.lang.String getEtag() {
    return etag;
  }

  /**
   * The ETag of the resource.
   * @param etag etag or {@code null} for none
   */
  public Schema setEtag(java.lang.String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * A list of fields in the schema.
   * @return value or {@code null} for none
   */
  public java.util.List<SchemaFieldSpec> getFields() {
    return fields;
  }

  /**
   * A list of fields in the schema.
   * @param fields fields or {@code null} for none
   */
  public Schema setFields(java.util.List<SchemaFieldSpec> fields) {
    this.fields = fields;
    return this;
  }

  /**
   * Kind of resource this is.
   * @return value or {@code null} for none
   */
  public java.lang.String getKind() {
    return kind;
  }

  /**
   * Kind of resource this is.
   * @param kind kind or {@code null} for none
   */
  public Schema setKind(java.lang.String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * The unique identifier of the schema (Read-only)
   * @return value or {@code null} for none
   */
  public java.lang.String getSchemaId() {
    return schemaId;
  }

  /**
   * The unique identifier of the schema (Read-only)
   * @param schemaId schemaId or {@code null} for none
   */
  public Schema setSchemaId(java.lang.String schemaId) {
    this.schemaId = schemaId;
    return this;
  }

  /**
   * The schema's name.
   * @return value or {@code null} for none
   */
  public java.lang.String getSchemaName() {
    return schemaName;
  }

  /**
   * The schema's name.
   * @param schemaName schemaName or {@code null} for none
   */
  public Schema setSchemaName(java.lang.String schemaName) {
    this.schemaName = schemaName;
    return this;
  }

  @Override
  public Schema set(String fieldName, Object value) {
    return (Schema) super.set(fieldName, value);
  }

  @Override
  public Schema clone() {
    return (Schema) super.clone();
  }

}
