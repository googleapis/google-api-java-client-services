{
  "version": "v1",
  "batchPath": "batch",
  "kind": "discovery#restDescription",
  "servicePath": "",
  "revision": "20200821",
  "baseUrl": "https://ml.googleapis.com/",
  "documentationLink": "https://cloud.google.com/ml/",
  "version_module": true,
  "description": "An API to enable creating and using machine learning models.",
  "rootUrl": "https://ml.googleapis.com/",
  "discoveryVersion": "v1",
  "parameters": {
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true"
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "description": "V1 error format."
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query",
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    }
  },
  "name": "ml",
  "mtlsRootUrl": "https://ml.mtls.googleapis.com/",
  "ownerDomain": "google.com",
  "canonicalName": "Cloud Machine Learning Engine",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "id": "ml:v1",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        },
        "https://www.googleapis.com/auth/cloud-platform.read-only": {
          "description": "View your data across Google Cloud Platform services"
        }
      }
    }
  },
  "basePath": "",
  "resources": {
    "projects": {
      "resources": {
        "models": {
          "resources": {
            "versions": {
              "methods": {
                "patch": {
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "request": {
                    "$ref": "GoogleCloudMlV1__Version"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. The name of the model.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/models/[^/]+/versions/[^/]+$",
                      "type": "string"
                    },
                    "updateMask": {
                      "type": "string",
                      "format": "google-fieldmask",
                      "description": "Required. Specifies the path, relative to `Version`, of the field to update. Must be present and non-empty. For example, to change the description of a version to \"foo\", the `update_mask` parameter would be specified as `description`, and the `PATCH` request body would specify the new value, as follows: ``` { \"description\": \"foo\" } ``` Currently the only supported update mask fields are `description`, `requestLoggingConfig`, `autoScaling.minNodes`, and `manualScaling.nodes`. However, you can only update `manualScaling.nodes` if the version uses a [Compute Engine (N1) machine type](/ml-engine/docs/machine-types-online-prediction).",
                      "location": "query"
                    }
                  },
                  "id": "ml.projects.models.versions.patch",
                  "flatPath": "v1/projects/{projectsId}/models/{modelsId}/versions/{versionsId}",
                  "description": "Updates the specified Version resource. Currently the only update-able fields are `description`, `requestLoggingConfig`, `autoScaling.minNodes`, and `manualScaling.nodes`.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunning__Operation"
                  }
                },
                "create": {
                  "path": "v1/{+parent}/versions",
                  "response": {
                    "$ref": "GoogleLongrunning__Operation"
                  },
                  "description": "Creates a new version of a model from a trained TensorFlow model. If the version created in the cloud by this call is the first deployed version of the specified model, it will be made the default version of the model. When you add a version to a model that already has one or more versions, the default version does not automatically change. If you want a new version to be the default, you must call projects.models.versions.setDefault.",
                  "id": "ml.projects.models.versions.create",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleCloudMlV1__Version"
                  },
                  "flatPath": "v1/projects/{projectsId}/models/{modelsId}/versions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/models/[^/]+$",
                      "type": "string",
                      "description": "Required. The name of the model."
                    }
                  }
                },
                "get": {
                  "description": "Gets information about a model version. Models can have multiple versions. You can call projects.models.versions.list to get the same information that this method returns for all of the versions of a model.",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/models/{modelsId}/versions/{versionsId}",
                  "id": "ml.projects.models.versions.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "description": "Required. The name of the version.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/models/[^/]+/versions/[^/]+$"
                    }
                  },
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleCloudMlV1__Version"
                  }
                },
                "list": {
                  "parameters": {
                    "pageSize": {
                      "description": "Optional. The number of versions to retrieve per \"page\" of results. If there are more remaining results than this number, the response message will contain a valid value in the `next_page_token` field. The default value is 20, and the maximum page size is 100.",
                      "location": "query",
                      "format": "int32",
                      "type": "integer"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. Specifies the subset of versions to retrieve."
                    },
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. The name of the model for which to list the version.",
                      "required": true,
                      "pattern": "^projects/[^/]+/models/[^/]+$"
                    },
                    "pageToken": {
                      "description": "Optional. A page token to request the next page of results. You get the token from the `next_page_token` field of the response from the previous call.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/models/{modelsId}/versions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "path": "v1/{+parent}/versions",
                  "httpMethod": "GET",
                  "id": "ml.projects.models.versions.list",
                  "response": {
                    "$ref": "GoogleCloudMlV1__ListVersionsResponse"
                  },
                  "description": "Gets basic information about all the versions of a model. If you expect that a model has many versions, or if you need to handle only a limited number of results at a time, you can request that the list be retrieved in batches (called pages). If there are no versions that match the request parameters, the list request returns an empty response body: {}."
                },
                "delete": {
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunning__Operation"
                  },
                  "id": "ml.projects.models.versions.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Deletes a model version. Each model can have multiple versions deployed and in use at any given time. Use this method to remove a single version. Note: You cannot delete the version that is set as the default version of the model unless it is the only remaining version.",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the version. You can get the names of all the versions of a model by calling projects.models.versions.list.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/models/[^/]+/versions/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/models/{modelsId}/versions/{versionsId}"
                },
                "setDefault": {
                  "response": {
                    "$ref": "GoogleCloudMlV1__Version"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/models/[^/]+/versions/[^/]+$",
                      "type": "string",
                      "description": "Required. The name of the version to make the default for the model. You can get the names of all the versions of a model by calling projects.models.versions.list.",
                      "required": true
                    }
                  },
                  "description": "Designates a version to be the default for the model. The default version is used for prediction requests made against the model that don't specify a version. The first version to be created for a model is automatically set as the default. You must make any subsequent changes to the default version setting manually using this method.",
                  "path": "v1/{+name}:setDefault",
                  "flatPath": "v1/projects/{projectsId}/models/{modelsId}/versions/{versionsId}:setDefault",
                  "request": {
                    "$ref": "GoogleCloudMlV1__SetDefaultVersionRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "id": "ml.projects.models.versions.setDefault",
                  "parameterOrder": [
                    "name"
                  ]
                }
              }
            }
          },
          "methods": {
            "create": {
              "description": "Creates a model which will later contain one or more versions. You must add at least one version before you can request predictions from the model. Add versions by calling projects.models.versions.create.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "POST",
              "id": "ml.projects.models.create",
              "path": "v1/{+parent}/models",
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1/projects/{projectsId}/models",
              "request": {
                "$ref": "GoogleCloudMlV1__Model"
              },
              "parameters": {
                "parent": {
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "description": "Required. The project name."
                }
              },
              "response": {
                "$ref": "GoogleCloudMlV1__Model"
              }
            },
            "setIamPolicy": {
              "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
              "parameterOrder": [
                "resource"
              ],
              "response": {
                "$ref": "GoogleIamV1__Policy"
              },
              "httpMethod": "POST",
              "id": "ml.projects.models.setIamPolicy",
              "flatPath": "v1/projects/{projectsId}/models/{modelsId}:setIamPolicy",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+resource}:setIamPolicy",
              "parameters": {
                "resource": {
                  "required": true,
                  "type": "string",
                  "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                  "pattern": "^projects/[^/]+/models/[^/]+$",
                  "location": "path"
                }
              },
              "request": {
                "$ref": "GoogleIamV1__SetIamPolicyRequest"
              }
            },
            "patch": {
              "request": {
                "$ref": "GoogleCloudMlV1__Model"
              },
              "parameterOrder": [
                "name"
              ],
              "id": "ml.projects.models.patch",
              "flatPath": "v1/projects/{projectsId}/models/{modelsId}",
              "description": "Updates a specific model resource. Currently the only supported fields to update are `description` and `default_version.name`.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+name}",
              "response": {
                "$ref": "GoogleLongrunning__Operation"
              },
              "parameters": {
                "name": {
                  "description": "Required. The project name.",
                  "pattern": "^projects/[^/]+/models/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "updateMask": {
                  "type": "string",
                  "location": "query",
                  "description": "Required. Specifies the path, relative to `Model`, of the field to update. For example, to change the description of a model to \"foo\" and set its default version to \"version_1\", the `update_mask` parameter would be specified as `description`, `default_version.name`, and the `PATCH` request body would specify the new value, as follows: { \"description\": \"foo\", \"defaultVersion\": { \"name\":\"version_1\" } } Currently the supported update masks are `description` and `default_version.name`.",
                  "format": "google-fieldmask"
                }
              },
              "httpMethod": "PATCH"
            },
            "get": {
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/models/[^/]+$",
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Required. The name of the model."
                }
              },
              "description": "Gets information about a model, including its name, the description (if set), and the default version (if at least one version of the model has been deployed).",
              "response": {
                "$ref": "GoogleCloudMlV1__Model"
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "path": "v1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "id": "ml.projects.models.get",
              "flatPath": "v1/projects/{projectsId}/models/{modelsId}"
            },
            "list": {
              "response": {
                "$ref": "GoogleCloudMlV1__ListModelsResponse"
              },
              "flatPath": "v1/projects/{projectsId}/models",
              "id": "ml.projects.models.list",
              "description": "Lists the models in a project. Each project can contain multiple models, and each model can have multiple versions. If there are no models that match the request parameters, the list request returns an empty response body: {}.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "path": "v1/{+parent}/models",
              "parameters": {
                "parent": {
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "type": "string",
                  "required": true,
                  "description": "Required. The name of the project whose models are to be listed."
                },
                "filter": {
                  "description": "Optional. Specifies the subset of models to retrieve.",
                  "type": "string",
                  "location": "query"
                },
                "pageToken": {
                  "description": "Optional. A page token to request the next page of results. You get the token from the `next_page_token` field of the response from the previous call.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "description": "Optional. The number of models to retrieve per \"page\" of results. If there are more remaining results than this number, the response message will contain a valid value in the `next_page_token` field. The default value is 20, and the maximum page size is 100.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET"
            },
            "delete": {
              "response": {
                "$ref": "GoogleLongrunning__Operation"
              },
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/projects/{projectsId}/models/{modelsId}",
              "id": "ml.projects.models.delete",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/models/[^/]+$",
                  "type": "string",
                  "required": true,
                  "description": "Required. The name of the model.",
                  "location": "path"
                }
              },
              "description": "Deletes a model. You can only delete a model if there are no versions in it. You can delete versions by calling projects.models.versions.delete.",
              "httpMethod": "DELETE",
              "path": "v1/{+name}"
            },
            "getIamPolicy": {
              "flatPath": "v1/projects/{projectsId}/models/{modelsId}:getIamPolicy",
              "httpMethod": "GET",
              "id": "ml.projects.models.getIamPolicy",
              "parameterOrder": [
                "resource"
              ],
              "parameters": {
                "resource": {
                  "pattern": "^projects/[^/]+/models/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field."
                },
                "options.requestedPolicyVersion": {
                  "description": "Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                }
              },
              "path": "v1/{+resource}:getIamPolicy",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
              "response": {
                "$ref": "GoogleIamV1__Policy"
              }
            },
            "testIamPermissions": {
              "httpMethod": "POST",
              "id": "ml.projects.models.testIamPermissions",
              "path": "v1/{+resource}:testIamPermissions",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "request": {
                "$ref": "GoogleIamV1__TestIamPermissionsRequest"
              },
              "response": {
                "$ref": "GoogleIamV1__TestIamPermissionsResponse"
              },
              "parameterOrder": [
                "resource"
              ],
              "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
              "parameters": {
                "resource": {
                  "type": "string",
                  "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                  "pattern": "^projects/[^/]+/models/[^/]+$",
                  "location": "path",
                  "required": true
                }
              },
              "flatPath": "v1/projects/{projectsId}/models/{modelsId}:testIamPermissions"
            }
          }
        },
        "operations": {
          "methods": {
            "cancel": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/operations/{operationsId}:cancel",
              "path": "v1/{+name}:cancel",
              "parameters": {
                "name": {
                  "required": true,
                  "description": "The name of the operation resource to be cancelled.",
                  "pattern": "^projects/[^/]+/operations/[^/]+$",
                  "type": "string",
                  "location": "path"
                }
              },
              "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
              "id": "ml.projects.operations.cancel",
              "response": {
                "$ref": "GoogleProtobuf__Empty"
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "name"
              ]
            },
            "list": {
              "response": {
                "$ref": "GoogleLongrunning__ListOperationsResponse"
              },
              "path": "v1/{+name}/operations",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "description": "The name of the operation's parent resource.",
                  "required": true
                },
                "pageSize": {
                  "type": "integer",
                  "description": "The standard list page size.",
                  "format": "int32",
                  "location": "query"
                },
                "filter": {
                  "location": "query",
                  "description": "The standard list filter.",
                  "type": "string"
                },
                "pageToken": {
                  "description": "The standard list page token.",
                  "type": "string",
                  "location": "query"
                }
              },
              "id": "ml.projects.operations.list",
              "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/projects/{projectsId}/operations"
            },
            "get": {
              "path": "v1/{+name}",
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "The name of the operation resource.",
                  "required": true,
                  "pattern": "^projects/[^/]+/operations/[^/]+$",
                  "type": "string"
                }
              },
              "httpMethod": "GET",
              "flatPath": "v1/projects/{projectsId}/operations/{operationsId}",
              "response": {
                "$ref": "GoogleLongrunning__Operation"
              },
              "id": "ml.projects.operations.get",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
              "parameterOrder": [
                "name"
              ]
            }
          }
        },
        "jobs": {
          "methods": {
            "testIamPermissions": {
              "httpMethod": "POST",
              "parameterOrder": [
                "resource"
              ],
              "id": "ml.projects.jobs.testIamPermissions",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
              "flatPath": "v1/projects/{projectsId}/jobs/{jobsId}:testIamPermissions",
              "parameters": {
                "resource": {
                  "location": "path",
                  "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                  "pattern": "^projects/[^/]+/jobs/[^/]+$",
                  "type": "string",
                  "required": true
                }
              },
              "response": {
                "$ref": "GoogleIamV1__TestIamPermissionsResponse"
              },
              "path": "v1/{+resource}:testIamPermissions",
              "request": {
                "$ref": "GoogleIamV1__TestIamPermissionsRequest"
              }
            },
            "create": {
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "GoogleCloudMlV1__Job"
              },
              "httpMethod": "POST",
              "description": "Creates a training or a batch prediction job.",
              "flatPath": "v1/projects/{projectsId}/jobs",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "ml.projects.jobs.create",
              "request": {
                "$ref": "GoogleCloudMlV1__Job"
              },
              "parameters": {
                "parent": {
                  "description": "Required. The project name.",
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "type": "string"
                }
              },
              "path": "v1/{+parent}/jobs"
            },
            "list": {
              "id": "ml.projects.jobs.list",
              "parameterOrder": [
                "parent"
              ],
              "path": "v1/{+parent}/jobs",
              "description": "Lists the jobs in the project. If there are no jobs that match the request parameters, the list request returns an empty response body: {}.",
              "httpMethod": "GET",
              "response": {
                "$ref": "GoogleCloudMlV1__ListJobsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "flatPath": "v1/projects/{projectsId}/jobs",
              "parameters": {
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "Optional. Specifies the subset of jobs to retrieve. You can filter on the value of one or more attributes of the job object. For example, retrieve jobs with a job identifier that starts with 'census': gcloud ai-platform jobs list --filter='jobId:census*' List all failed jobs with names that start with 'rnn': gcloud ai-platform jobs list --filter='jobId:rnn* AND state:FAILED' For more examples, see the guide to monitoring jobs."
                },
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Required. The name of the project for which to list jobs."
                },
                "pageToken": {
                  "location": "query",
                  "description": "Optional. A page token to request the next page of results. You get the token from the `next_page_token` field of the response from the previous call.",
                  "type": "string"
                },
                "pageSize": {
                  "description": "Optional. The number of jobs to retrieve per \"page\" of results. If there are more remaining results than this number, the response message will contain a valid value in the `next_page_token` field. The default value is 20, and the maximum page size is 100.",
                  "type": "integer",
                  "format": "int32",
                  "location": "query"
                }
              }
            },
            "get": {
              "response": {
                "$ref": "GoogleCloudMlV1__Job"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "parameterOrder": [
                "name"
              ],
              "path": "v1/{+name}",
              "flatPath": "v1/projects/{projectsId}/jobs/{jobsId}",
              "id": "ml.projects.jobs.get",
              "parameters": {
                "name": {
                  "description": "Required. The name of the job to get the description of.",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "pattern": "^projects/[^/]+/jobs/[^/]+$"
                }
              },
              "description": "Describes a job.",
              "httpMethod": "GET"
            },
            "getIamPolicy": {
              "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
              "flatPath": "v1/projects/{projectsId}/jobs/{jobsId}:getIamPolicy",
              "id": "ml.projects.jobs.getIamPolicy",
              "response": {
                "$ref": "GoogleIamV1__Policy"
              },
              "parameters": {
                "resource": {
                  "required": true,
                  "pattern": "^projects/[^/]+/jobs/[^/]+$",
                  "type": "string",
                  "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                  "location": "path"
                },
                "options.requestedPolicyVersion": {
                  "description": "Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                  "format": "int32",
                  "location": "query",
                  "type": "integer"
                }
              },
              "httpMethod": "GET",
              "path": "v1/{+resource}:getIamPolicy",
              "parameterOrder": [
                "resource"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "setIamPolicy": {
              "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
              "request": {
                "$ref": "GoogleIamV1__SetIamPolicyRequest"
              },
              "parameters": {
                "resource": {
                  "location": "path",
                  "required": true,
                  "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                  "type": "string",
                  "pattern": "^projects/[^/]+/jobs/[^/]+$"
                }
              },
              "flatPath": "v1/projects/{projectsId}/jobs/{jobsId}:setIamPolicy",
              "path": "v1/{+resource}:setIamPolicy",
              "parameterOrder": [
                "resource"
              ],
              "httpMethod": "POST",
              "response": {
                "$ref": "GoogleIamV1__Policy"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "ml.projects.jobs.setIamPolicy"
            },
            "patch": {
              "httpMethod": "PATCH",
              "parameters": {
                "updateMask": {
                  "description": "Required. Specifies the path, relative to `Job`, of the field to update. To adopt etag mechanism, include `etag` field in the mask, and include the `etag` value in your job resource. For example, to change the labels of a job, the `update_mask` parameter would be specified as `labels`, `etag`, and the `PATCH` request body would specify the new value, as follows: { \"labels\": { \"owner\": \"Google\", \"color\": \"Blue\" } \"etag\": \"33a64df551425fcc55e4d42a148795d9f25f89d4\" } If `etag` matches the one on the server, the labels of the job will be replaced with the given ones, and the server end `etag` will be recalculated. Currently the only supported update masks are `labels` and `etag`.",
                  "location": "query",
                  "type": "string",
                  "format": "google-fieldmask"
                },
                "name": {
                  "description": "Required. The job name.",
                  "location": "path",
                  "pattern": "^projects/[^/]+/jobs/[^/]+$",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "request": {
                "$ref": "GoogleCloudMlV1__Job"
              },
              "path": "v1/{+name}",
              "flatPath": "v1/projects/{projectsId}/jobs/{jobsId}",
              "id": "ml.projects.jobs.patch",
              "response": {
                "$ref": "GoogleCloudMlV1__Job"
              },
              "description": "Updates a specific job resource. Currently the only supported fields to update are `labels`."
            },
            "cancel": {
              "description": "Cancels a running job.",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/jobs/[^/]+$",
                  "type": "string",
                  "description": "Required. The name of the job to cancel.",
                  "required": true,
                  "location": "path"
                }
              },
              "response": {
                "$ref": "GoogleProtobuf__Empty"
              },
              "httpMethod": "POST",
              "id": "ml.projects.jobs.cancel",
              "request": {
                "$ref": "GoogleCloudMlV1__CancelJobRequest"
              },
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+name}:cancel",
              "flatPath": "v1/projects/{projectsId}/jobs/{jobsId}:cancel"
            }
          }
        },
        "locations": {
          "methods": {
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "description": "List all locations that provides at least one type of CMLE capability.",
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1/projects/{projectsId}/locations",
              "id": "ml.projects.locations.list",
              "response": {
                "$ref": "GoogleCloudMlV1__ListLocationsResponse"
              },
              "path": "v1/{+parent}/locations",
              "parameters": {
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "description": "Optional. The number of locations to retrieve per \"page\" of results. If there are more remaining results than this number, the response message will contain a valid value in the `next_page_token` field. The default value is 20, and the maximum page size is 100.",
                  "format": "int32"
                },
                "parent": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Required. The name of the project for which available locations are to be listed (since some locations might be whitelisted for specific projects).",
                  "pattern": "^projects/[^/]+$"
                },
                "pageToken": {
                  "description": "Optional. A page token to request the next page of results. You get the token from the `next_page_token` field of the response from the previous call.",
                  "location": "query",
                  "type": "string"
                }
              },
              "httpMethod": "GET"
            },
            "get": {
              "id": "ml.projects.locations.get",
              "description": "Get the complete list of CMLE capabilities in a location, along with their location-specific properties.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "path": "v1/{+name}",
              "httpMethod": "GET",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "response": {
                "$ref": "GoogleCloudMlV1__Location"
              },
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "description": "Required. The name of the location.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "type": "string"
                }
              }
            }
          },
          "resources": {
            "studies": {
              "methods": {
                "list": {
                  "id": "ml.projects.locations.studies.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/studies",
                  "description": "Lists all the studies in a region for an associated project.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/studies",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleCloudMlV1__ListStudiesResponse"
                  },
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. The project and location that the study belongs to. Format: projects/{project}/locations/{location}",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets a study.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}",
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleCloudMlV1__Study"
                  },
                  "parameters": {
                    "name": {
                      "description": "Required. The study name.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/studies/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "id": "ml.projects.locations.studies.get",
                  "httpMethod": "GET"
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "GoogleProtobuf__Empty"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. The study name.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/studies/[^/]+$"
                    }
                  },
                  "id": "ml.projects.locations.studies.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a study.",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "create": {
                  "request": {
                    "$ref": "GoogleCloudMlV1__Study"
                  },
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. The project and location that the study belongs to. Format: projects/{project}/locations/{location}"
                    },
                    "studyId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. The ID to use for the study, which will become the final component of the study's resource name."
                    }
                  },
                  "id": "ml.projects.locations.studies.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a study.",
                  "httpMethod": "POST",
                  "path": "v1/{+parent}/studies",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/studies",
                  "response": {
                    "$ref": "GoogleCloudMlV1__Study"
                  }
                }
              },
              "resources": {
                "trials": {
                  "methods": {
                    "create": {
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/studies/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "Required. The name of the study that the trial belongs to."
                        }
                      },
                      "path": "v1/{+parent}/trials",
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "POST",
                      "description": "Adds a user provided trial to a study.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}/trials",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleCloudMlV1__Trial"
                      },
                      "request": {
                        "$ref": "GoogleCloudMlV1__Trial"
                      },
                      "id": "ml.projects.locations.studies.trials.create"
                    },
                    "delete": {
                      "response": {
                        "$ref": "GoogleProtobuf__Empty"
                      },
                      "path": "v1/{+name}",
                      "description": "Deletes a trial.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}/trials/{trialsId}",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+$",
                          "type": "string",
                          "required": true,
                          "description": "Required. The trial name.",
                          "location": "path"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "DELETE",
                      "id": "ml.projects.locations.studies.trials.delete",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "stop": {
                      "path": "v1/{+name}:stop",
                      "request": {
                        "$ref": "GoogleCloudMlV1__StopTrialRequest"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Stops a trial.",
                      "response": {
                        "$ref": "GoogleCloudMlV1__Trial"
                      },
                      "httpMethod": "POST",
                      "parameters": {
                        "name": {
                          "description": "Required. The trial name.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}/trials/{trialsId}:stop",
                      "id": "ml.projects.locations.studies.trials.stop",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "get": {
                      "parameters": {
                        "name": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+$",
                          "location": "path",
                          "required": true,
                          "description": "Required. The trial name."
                        }
                      },
                      "id": "ml.projects.locations.studies.trials.get",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}/trials/{trialsId}",
                      "response": {
                        "$ref": "GoogleCloudMlV1__Trial"
                      },
                      "description": "Gets a trial.",
                      "path": "v1/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "complete": {
                      "request": {
                        "$ref": "GoogleCloudMlV1__CompleteTrialRequest"
                      },
                      "response": {
                        "$ref": "GoogleCloudMlV1__Trial"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1/{+name}:complete",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}/trials/{trialsId}:complete",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+$",
                          "description": "Required. The trial name.metat"
                        }
                      },
                      "id": "ml.projects.locations.studies.trials.complete",
                      "description": "Marks a trial as complete."
                    },
                    "suggest": {
                      "id": "ml.projects.locations.studies.trials.suggest",
                      "response": {
                        "$ref": "GoogleLongrunning__Operation"
                      },
                      "httpMethod": "POST",
                      "path": "v1/{+parent}/trials:suggest",
                      "request": {
                        "$ref": "GoogleCloudMlV1__SuggestTrialsRequest"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/studies/[^/]+$",
                          "description": "Required. The name of the study that the trial belongs to."
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}/trials:suggest",
                      "description": "Adds one or more trials to a study, with parameter values suggested by AI Platform Optimizer. Returns a long-running operation associated with the generation of trial suggestions. When this long-running operation succeeds, it will contain a SuggestTrialsResponse."
                    },
                    "list": {
                      "parameters": {
                        "parent": {
                          "required": true,
                          "description": "Required. The name of the study that the trial belongs to.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/studies/[^/]+$",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "ml.projects.locations.studies.trials.list",
                      "response": {
                        "$ref": "GoogleCloudMlV1__ListTrialsResponse"
                      },
                      "description": "Lists the trials associated with a study.",
                      "path": "v1/{+parent}/trials",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}/trials"
                    },
                    "addMeasurement": {
                      "request": {
                        "$ref": "GoogleCloudMlV1__AddTrialMeasurementRequest"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}/trials/{trialsId}:addMeasurement",
                      "description": "Adds a measurement of the objective metrics to a trial. This measurement is assumed to have been taken before the trial is complete.",
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "GoogleCloudMlV1__Trial"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "ml.projects.locations.studies.trials.addMeasurement",
                      "path": "v1/{+name}:addMeasurement",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+$",
                          "description": "Required. The trial name.",
                          "type": "string",
                          "required": true
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "checkEarlyStoppingState": {
                      "response": {
                        "$ref": "GoogleLongrunning__Operation"
                      },
                      "path": "v1/{+name}:checkEarlyStoppingState",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}/trials/{trialsId}:checkEarlyStoppingState",
                      "id": "ml.projects.locations.studies.trials.checkEarlyStoppingState",
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Checks whether a trial should stop or not. Returns a long-running operation. When the operation is successful, it will contain a CheckTrialEarlyStoppingStateResponse.",
                      "parameters": {
                        "name": {
                          "required": true,
                          "description": "Required. The trial name.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+$",
                          "location": "path"
                        }
                      },
                      "request": {
                        "$ref": "GoogleCloudMlV1__CheckTrialEarlyStoppingStateRequest"
                      }
                    }
                  }
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "The name of the operation resource."
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "response": {
                    "$ref": "GoogleLongrunning__Operation"
                  },
                  "httpMethod": "GET",
                  "id": "ml.projects.locations.operations.get"
                },
                "cancel": {
                  "response": {
                    "$ref": "GoogleProtobuf__Empty"
                  },
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "path": "v1/{+name}:cancel",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource to be cancelled."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "id": "ml.projects.locations.operations.cancel"
                }
              }
            }
          }
        }
      },
      "methods": {
        "getConfig": {
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "GoogleCloudMlV1__GetConfigResponse"
          },
          "httpMethod": "GET",
          "parameters": {
            "name": {
              "description": "Required. The project name.",
              "pattern": "^projects/[^/]+$",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "flatPath": "v1/projects/{projectsId}:getConfig",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "path": "v1/{+name}:getConfig",
          "description": "Get the service account information associated with your project. You need this information in order to grant the service account permissions for the Google Cloud Storage location where you put your model training code for training the model with Google Cloud Machine Learning.",
          "id": "ml.projects.getConfig"
        },
        "explain": {
          "description": "Performs explanation on the data in the request. {% dynamic include \"/ai-platform/includes/___explain-request\" %} ",
          "id": "ml.projects.explain",
          "flatPath": "v1/projects/{projectsId}:explain",
          "parameters": {
            "name": {
              "description": "Required. The resource name of a model or a version. Authorization: requires the `predict` permission on the specified resource.",
              "pattern": "^projects/.*$",
              "location": "path",
              "type": "string",
              "required": true
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "POST",
          "path": "v1/{+name}:explain",
          "response": {
            "$ref": "GoogleApi__HttpBody"
          },
          "request": {
            "$ref": "GoogleCloudMlV1__ExplainRequest"
          }
        },
        "predict": {
          "response": {
            "$ref": "GoogleApi__HttpBody"
          },
          "flatPath": "v1/projects/{projectsId}:predict",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "name": {
              "pattern": "^projects/.*$",
              "type": "string",
              "description": "Required. The resource name of a model or a version. Authorization: requires the `predict` permission on the specified resource.",
              "location": "path",
              "required": true
            }
          },
          "parameterOrder": [
            "name"
          ],
          "id": "ml.projects.predict",
          "httpMethod": "POST",
          "request": {
            "$ref": "GoogleCloudMlV1__PredictRequest"
          },
          "path": "v1/{+name}:predict",
          "description": "Performs online prediction on the data in the request. {% dynamic include \"/ai-platform/includes/___predict-request\" %} "
        }
      }
    }
  },
  "protocol": "rest",
  "fullyEncodeReservedExpansion": true,
  "ownerName": "Google",
  "title": "AI Platform Training & Prediction API",
  "schemas": {
    "GoogleCloudMlV1__AutoScaling": {
      "type": "object",
      "id": "GoogleCloudMlV1__AutoScaling",
      "properties": {
        "minNodes": {
          "description": "Optional. The minimum number of nodes to allocate for this model. These nodes are always up, starting from the time the model is deployed. Therefore, the cost of operating this model will be at least `rate` * `min_nodes` * number of hours since last billing cycle, where `rate` is the cost per node-hour as documented in the [pricing guide](/ml-engine/docs/pricing), even if no predictions are performed. There is additional cost for each prediction performed. Unlike manual scaling, if the load gets too heavy for the nodes that are up, the service will automatically add nodes to handle the increased load as well as scale back as traffic drops, always maintaining at least `min_nodes`. You will be charged for the time in which additional nodes are used. If `min_nodes` is not specified and AutoScaling is used with a [legacy (MLS1) machine type](/ml-engine/docs/machine-types-online-prediction), `min_nodes` defaults to 0, in which case, when traffic to a model stops (and after a cool-down period), nodes will be shut down and no charges will be incurred until traffic to the model resumes. If `min_nodes` is not specified and AutoScaling is used with a [Compute Engine (N1) machine type](/ml-engine/docs/machine-types-online-prediction), `min_nodes` defaults to 1. `min_nodes` must be at least 1 for use with a Compute Engine machine type. Note that you cannot use AutoScaling if your version uses [GPUs](#Version.FIELDS.accelerator_config). Instead, you must use ManualScaling. You can set `min_nodes` when creating the model version, and you can also update `min_nodes` for an existing version: update_body.json: { 'autoScaling': { 'minNodes': 5 } } HTTP request: PATCH https://ml.googleapis.com/v1/{name=projects/*/models/*/versions/*}?update_mask=autoScaling.minNodes -d @./update_body.json ",
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "Options for automatically scaling a model."
    },
    "GoogleCloudMlV1__ListModelsResponse": {
      "description": "Response message for the ListModels method.",
      "id": "GoogleCloudMlV1__ListModelsResponse",
      "properties": {
        "nextPageToken": {
          "description": "Optional. Pass this token as the `page_token` field of the request for a subsequent call.",
          "type": "string"
        },
        "models": {
          "type": "array",
          "description": "The list of models.",
          "items": {
            "$ref": "GoogleCloudMlV1__Model"
          }
        }
      },
      "type": "object"
    },
    "GoogleCloudMlV1__EncryptionConfig": {
      "id": "GoogleCloudMlV1__EncryptionConfig",
      "description": "Represents a custom encryption key configuration that can be applied to a resource.",
      "type": "object",
      "properties": {
        "kmsKeyName": {
          "type": "string",
          "description": "The Cloud KMS resource identifier of the customer-managed encryption key used to protect a resource, such as a training job. It has the following format: `projects/{PROJECT_ID}/locations/{REGION}/keyRings/{KEY_RING_NAME}/cryptoKeys/{KEY_NAME}`"
        }
      }
    },
    "GoogleCloudMlV1__Config": {
      "id": "GoogleCloudMlV1__Config",
      "type": "object",
      "properties": {
        "tpuServiceAccount": {
          "description": "The service account Cloud ML uses to run on TPU node.",
          "type": "string"
        }
      }
    },
    "GoogleIamV1__Policy": {
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "id": "GoogleIamV1__Policy",
      "type": "object",
      "properties": {
        "bindings": {
          "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member.",
          "items": {
            "$ref": "GoogleIamV1__Binding"
          },
          "type": "array"
        },
        "etag": {
          "type": "string",
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "format": "byte"
        },
        "auditConfigs": {
          "type": "array",
          "description": "Specifies cloud audit logging configuration for this policy.",
          "items": {
            "$ref": "GoogleIamV1__AuditConfig"
          }
        },
        "version": {
          "format": "int32",
          "type": "integer",
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        }
      }
    },
    "GoogleCloudMlV1__RouteMap": {
      "type": "object",
      "description": "RouteMap is used to override HTTP paths sent to a Custom Container. If specified, the HTTP server implemented in the ContainerSpec must support the route. If unspecified, standard HTTP paths will be used.",
      "id": "GoogleCloudMlV1__RouteMap",
      "properties": {
        "predict": {
          "type": "string",
          "description": "HTTP path to send prediction requests."
        },
        "health": {
          "description": "HTTP path to send health check requests.",
          "type": "string"
        }
      }
    },
    "GoogleCloudMlV1__SuggestTrialsMetadata": {
      "type": "object",
      "description": "Metadata field of a google.longrunning.Operation associated with a SuggestTrialsRequest.",
      "id": "GoogleCloudMlV1__SuggestTrialsMetadata",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time operation was submitted."
        },
        "study": {
          "type": "string",
          "description": "The name of the study that the trial belongs to."
        },
        "suggestionCount": {
          "description": "The number of suggestions requested.",
          "format": "int32",
          "type": "integer"
        },
        "clientId": {
          "type": "string",
          "description": "The identifier of the client that is requesting the suggestion."
        }
      }
    },
    "GoogleCloudMlV1__Model": {
      "type": "object",
      "description": "Represents a machine learning solution. A model can have multiple versions, each of which is a deployed, trained model ready to receive prediction requests. The model itself is just a container.",
      "id": "GoogleCloudMlV1__Model",
      "properties": {
        "labels": {
          "description": "Optional. One or more labels that you can add, to organize your models. Each label is a key-value pair, where both the key and the value are arbitrary strings that you supply. For more information, see the documentation on using labels.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "defaultVersion": {
          "$ref": "GoogleCloudMlV1__Version",
          "description": "Output only. The default version of the model. This version will be used to handle prediction requests that do not specify a version. You can change the default version by calling projects.models.versions.setDefault."
        },
        "regions": {
          "description": "Optional. The list of regions where the model is going to be deployed. Only one region per model is supported. Defaults to 'us-central1' if nothing is set. See the available regions for AI Platform services. Note: * No matter where a model is deployed, it can always be accessed by users from anywhere, both for online and batch prediction. * The region for a batch prediction job is set by the region field when submitting the batch prediction job and does not take its value from this field.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "onlinePredictionLogging": {
          "type": "boolean",
          "description": "Optional. If true, online prediction access logs are sent to StackDriver Logging. These logs are like standard server access logs, containing information like timestamp and latency for each request. Note that [Stackdriver logs may incur a cost](/stackdriver/pricing), especially if your project receives prediction requests at a high queries per second rate (QPS). Estimate your costs before enabling this option. Default is false."
        },
        "onlinePredictionConsoleLogging": {
          "type": "boolean",
          "description": "Optional. If true, online prediction nodes send `stderr` and `stdout` streams to Stackdriver Logging. These can be more verbose than the standard access logs (see `onlinePredictionLogging`) and can incur higher cost. However, they are helpful for debugging. Note that [Stackdriver logs may incur a cost](/stackdriver/pricing), especially if your project receives prediction requests at a high QPS. Estimate your costs before enabling this option. Default is false."
        },
        "name": {
          "description": "Required. The name specified for the model when it was created. The model name must be unique within the project it is created in.",
          "type": "string"
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a model from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform model updates in order to avoid race conditions: An `etag` is returned in the response to `GetModel`, and systems are expected to put that etag in the request to `UpdateModel` to ensure that their change will be applied to the model as intended.",
          "format": "byte",
          "type": "string"
        },
        "description": {
          "description": "Optional. The description specified for the model when it was created.",
          "type": "string"
        }
      }
    },
    "GoogleIamV1__AuditConfig": {
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.",
      "type": "object",
      "properties": {
        "service": {
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.",
          "type": "string"
        },
        "auditLogConfigs": {
          "type": "array",
          "description": "The configuration for logging of each type of permission.",
          "items": {
            "$ref": "GoogleIamV1__AuditLogConfig"
          }
        }
      },
      "id": "GoogleIamV1__AuditConfig"
    },
    "GoogleCloudMlV1__ExplainRequest": {
      "properties": {
        "httpBody": {
          "description": "Required. The explanation request body.",
          "$ref": "GoogleApi__HttpBody"
        }
      },
      "id": "GoogleCloudMlV1__ExplainRequest",
      "type": "object",
      "description": "Request for explanations to be issued against a trained model."
    },
    "GoogleCloudMlV1__ManualScaling": {
      "description": "Options for manually scaling a model.",
      "id": "GoogleCloudMlV1__ManualScaling",
      "type": "object",
      "properties": {
        "nodes": {
          "description": "The number of nodes to allocate for this model. These nodes are always up, starting from the time the model is deployed, so the cost of operating this model will be proportional to `nodes` * number of hours since last billing cycle plus the cost for each prediction performed.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GoogleRpc__Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "GoogleRpc__Status",
      "type": "object",
      "properties": {
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        },
        "details": {
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          },
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        }
      }
    },
    "GoogleCloudMlV1__AddTrialMeasurementRequest": {
      "description": "The request message for the AddTrialMeasurement service method.",
      "id": "GoogleCloudMlV1__AddTrialMeasurementRequest",
      "properties": {
        "measurement": {
          "description": "Required. The measurement to be added to a trial.",
          "$ref": "GoogleCloudMlV1__Measurement"
        }
      },
      "type": "object"
    },
    "GoogleCloudMlV1__Trial": {
      "description": "A message representing a trial.",
      "properties": {
        "clientId": {
          "description": "Output only. The identifier of the client that originally requested this trial.",
          "type": "string",
          "readOnly": true
        },
        "infeasibleReason": {
          "description": "Output only. A human readable string describing why the trial is infeasible. This should only be set if trial_infeasible is true.",
          "type": "string",
          "readOnly": true
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "REQUESTED",
            "ACTIVE",
            "COMPLETED",
            "STOPPING"
          ],
          "type": "string",
          "enumDescriptions": [
            "The trial state is unspecified.",
            "Indicates that a specific trial has been requested, but it has not yet been suggested by the service.",
            "Indicates that the trial has been suggested.",
            "Indicates that the trial is done, and either has a final_measurement set, or is marked as trial_infeasible.",
            "Indicates that the trial should stop according to the service."
          ],
          "description": "The detailed state of a trial."
        },
        "measurements": {
          "type": "array",
          "description": "A list of measurements that are strictly lexicographically ordered by their induced tuples (steps, elapsed_time). These are used for early stopping computations.",
          "items": {
            "$ref": "GoogleCloudMlV1__Measurement"
          }
        },
        "startTime": {
          "type": "string",
          "description": "Output only. Time at which the trial was started.",
          "format": "google-datetime",
          "readOnly": true
        },
        "parameters": {
          "description": "The parameters of the trial.",
          "items": {
            "$ref": "GoogleCloudMlV1_Trial_Parameter"
          },
          "type": "array"
        },
        "trialInfeasible": {
          "readOnly": true,
          "description": "Output only. If true, the parameters in this trial are not attempted again.",
          "type": "boolean"
        },
        "endTime": {
          "readOnly": true,
          "description": "Output only. Time at which the trial's status changed to COMPLETED.",
          "type": "string",
          "format": "google-datetime"
        },
        "finalMeasurement": {
          "description": "The final measurement containing the objective value.",
          "$ref": "GoogleCloudMlV1__Measurement"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. Name of the trial assigned by the service.",
          "type": "string"
        }
      },
      "id": "GoogleCloudMlV1__Trial",
      "type": "object"
    },
    "GoogleCloudMlV1__Study": {
      "description": "A message representing a Study.",
      "properties": {
        "name": {
          "description": "Output only. The name of a study.",
          "readOnly": true,
          "type": "string"
        },
        "studyConfig": {
          "$ref": "GoogleCloudMlV1__StudyConfig",
          "description": "Required. Configuration of the study."
        },
        "inactiveReason": {
          "description": "Output only. A human readable reason why the Study is inactive. This should be empty if a study is ACTIVE or COMPLETED.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Time at which the study was created.",
          "format": "google-datetime"
        },
        "state": {
          "type": "string",
          "description": "Output only. The detailed state of a study.",
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "INACTIVE",
            "COMPLETED"
          ],
          "enumDescriptions": [
            "The study state is unspecified.",
            "The study is active.",
            "The study is stopped due to an internal error.",
            "The study is done when the service exhausts the parameter search space or max_trial_count is reached."
          ]
        }
      },
      "type": "object",
      "id": "GoogleCloudMlV1__Study"
    },
    "GoogleCloudMlV1_StudyConfigParameterSpec_DiscreteValueSpec": {
      "id": "GoogleCloudMlV1_StudyConfigParameterSpec_DiscreteValueSpec",
      "type": "object",
      "properties": {
        "values": {
          "description": "Must be specified if type is `DISCRETE`. A list of feasible points. The list should be in strictly increasing order. For instance, this parameter might have possible settings of 1.5, 2.5, and 4.0. This list should not contain more than 1,000 values.",
          "items": {
            "format": "double",
            "type": "number"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudMlV1__ReplicaConfig": {
      "properties": {
        "imageUri": {
          "description": "The Docker image to run on the replica. This image must be in Container Registry. Learn more about [configuring custom containers](/ai-platform/training/docs/distributed-training-containers).",
          "type": "string"
        },
        "containerCommand": {
          "description": "The command with which the replica's custom container is run. If provided, it will override default ENTRYPOINT of the docker image. If not provided, the docker image's ENTRYPOINT is used. It cannot be set if custom container image is not provided. Note that this field and [TrainingInput.args] are mutually exclusive, i.e., both cannot be set at the same time.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "acceleratorConfig": {
          "description": "Represents the type and number of accelerators used by the replica. [Learn about restrictions on accelerator configurations for training.](/ai-platform/training/docs/using-gpus#compute-engine-machine-types-with-gpu)",
          "$ref": "GoogleCloudMlV1__AcceleratorConfig"
        },
        "containerArgs": {
          "description": "Arguments to the entrypoint command. The following rules apply for container_command and container_args: - If you do not supply command or args: The defaults defined in the Docker image are used. - If you supply a command but no args: The default EntryPoint and the default Cmd defined in the Docker image are ignored. Your command is run without any arguments. - If you supply only args: The default Entrypoint defined in the Docker image is run with the args that you supplied. - If you supply a command and args: The default Entrypoint and the default Cmd defined in the Docker image are ignored. Your command is run with your args. It cannot be set if custom container image is not provided. Note that this field and [TrainingInput.args] are mutually exclusive, i.e., both cannot be set at the same time.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "tpuTfVersion": {
          "type": "string",
          "description": "The AI Platform runtime version that includes a TensorFlow version matching the one used in the custom container. This field is required if the replica is a TPU worker that uses a custom container. Otherwise, do not specify this field. This must be a [runtime version that currently supports training with TPUs](/ml-engine/docs/tensorflow/runtime-version-list#tpu-support). Note that the version of TensorFlow included in a runtime version may differ from the numbering of the runtime version itself, because it may have a different [patch version](https://www.tensorflow.org/guide/version_compat#semantic_versioning_20). In this field, you must specify the runtime version (TensorFlow minor version). For example, if your custom container runs TensorFlow `1.x.y`, specify `1.x`."
        }
      },
      "id": "GoogleCloudMlV1__ReplicaConfig",
      "description": "Represents the configuration for a replica in a cluster.",
      "type": "object"
    },
    "GoogleCloudMlV1__ContainerPort": {
      "type": "object",
      "description": "ContainerPort represents a network port in a single container.",
      "id": "GoogleCloudMlV1__ContainerPort",
      "properties": {
        "containerPort": {
          "type": "integer",
          "format": "int32",
          "description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 \u003c x \u003c 65536."
        }
      }
    },
    "GoogleCloudMlV1__Scheduling": {
      "type": "object",
      "description": "All parameters related to scheduling of training jobs.",
      "properties": {
        "maxWaitTime": {
          "description": "Optional. The maximum job wait time, expressed in seconds. The field can contain up to nine fractional digits, terminated by `s`. If not specified, there is no limit to the wait time. The minimum for this field is `1800s` (30 minutes). If the training job has not entered the `RUNNING` state after this duration, AI Platform Training cancels it. After the job begins running, it can no longer be cancelled due to the maximum wait time. Therefore the duration limited by this field does not overlap with the duration limited by Scheduling.max_running_time. For example, if the job temporarily stops running and retries due to a [VM restart](/ai-platform/training/docs/overview#restarts), this cannot lead to a maximum wait time cancellation. However, independently of this constraint, AI Platform Training might stop a job if there are too many retries due to exhausted resources in a region. The following example describes how you might use this field: To cancel your job if it doesn't start running within 1 hour, set this field to `3600s` (1 hour * 60 minutes / hour * 60 seconds / minute). If the job is still in the `QUEUED` or `PREPARING` state after an hour of waiting, AI Platform Training cancels the job. If you submit your training job using the `gcloud` tool, you can [specify this field in a `config.yaml` file](/ai-platform/training/docs/training-jobs#formatting_your_configuration_parameters). For example: ```yaml trainingInput: scheduling: maxWaitTime: 3600s ```",
          "format": "google-duration",
          "type": "string"
        },
        "maxRunningTime": {
          "description": "Optional. The maximum job running time, expressed in seconds. The field can contain up to nine fractional digits, terminated by `s`. If not specified, this field defaults to `604800s` (seven days). If the training job is still running after this duration, AI Platform Training cancels it. The duration is measured from when the job enters the `RUNNING` state; therefore it does not overlap with the duration limited by Scheduling.max_wait_time. For example, if you want to ensure your job runs for no more than 2 hours, set this field to `7200s` (2 hours * 60 minutes / hour * 60 seconds / minute). If you submit your training job using the `gcloud` tool, you can [specify this field in a `config.yaml` file](/ai-platform/training/docs/training-jobs#formatting_your_configuration_parameters). For example: ```yaml trainingInput: scheduling: maxRunningTime: 7200s ```",
          "type": "string",
          "format": "google-duration"
        }
      },
      "id": "GoogleCloudMlV1__Scheduling"
    },
    "GoogleCloudMlV1_AutomatedStoppingConfig_DecayCurveAutomatedStoppingConfig": {
      "id": "GoogleCloudMlV1_AutomatedStoppingConfig_DecayCurveAutomatedStoppingConfig",
      "properties": {
        "useElapsedTime": {
          "description": "If true, measurement.elapsed_time is used as the x-axis of each Trials Decay Curve. Otherwise, Measurement.steps will be used as the x-axis.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "GoogleCloudMlV1__StopTrialRequest": {
      "properties": {},
      "id": "GoogleCloudMlV1__StopTrialRequest",
      "type": "object"
    },
    "GoogleIamV1__TestIamPermissionsResponse": {
      "description": "Response message for `TestIamPermissions` method.",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "id": "GoogleIamV1__TestIamPermissionsResponse",
      "type": "object"
    },
    "GoogleCloudMlV1__PredictionOutput": {
      "properties": {
        "nodeHours": {
          "format": "double",
          "description": "Node hours used by the batch prediction job.",
          "type": "number"
        },
        "errorCount": {
          "description": "The number of data instances which resulted in errors.",
          "type": "string",
          "format": "int64"
        },
        "predictionCount": {
          "format": "int64",
          "type": "string",
          "description": "The number of generated predictions."
        },
        "outputPath": {
          "description": "The output Google Cloud Storage location provided at the job creation time.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudMlV1__PredictionOutput",
      "description": "Represents results of a prediction job."
    },
    "GoogleCloudMlV1__Job": {
      "description": "Represents a training or prediction job.",
      "properties": {
        "trainingOutput": {
          "description": "The current training job result.",
          "$ref": "GoogleCloudMlV1__TrainingOutput"
        },
        "state": {
          "type": "string",
          "description": "Output only. The detailed state of a job.",
          "enumDescriptions": [
            "The job state is unspecified.",
            "The job has been just created and processing has not yet begun.",
            "The service is preparing to run the job.",
            "The job is in progress.",
            "The job completed successfully.",
            "The job failed. `error_message` should contain the details of the failure.",
            "The job is being cancelled. `error_message` should describe the reason for the cancellation.",
            "The job has been cancelled. `error_message` should describe the reason for the cancellation."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "QUEUED",
            "PREPARING",
            "RUNNING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLING",
            "CANCELLED"
          ]
        },
        "createTime": {
          "description": "Output only. When the job was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. When the job processing was completed."
        },
        "trainingInput": {
          "description": "Input parameters to create a training job.",
          "$ref": "GoogleCloudMlV1__TrainingInput"
        },
        "predictionOutput": {
          "description": "The current prediction job result.",
          "$ref": "GoogleCloudMlV1__PredictionOutput"
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a job from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform job updates in order to avoid race conditions: An `etag` is returned in the response to `GetJob`, and systems are expected to put that etag in the request to `UpdateJob` to ensure that their change will be applied to the same version of the job.",
          "format": "byte",
          "type": "string"
        },
        "errorMessage": {
          "description": "Output only. The details of a failure or a cancellation.",
          "type": "string"
        },
        "predictionInput": {
          "description": "Input parameters to create a prediction job.",
          "$ref": "GoogleCloudMlV1__PredictionInput"
        },
        "startTime": {
          "type": "string",
          "description": "Output only. When the job processing was started.",
          "format": "google-datetime"
        },
        "jobId": {
          "description": "Required. The user-specified id of the job.",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. One or more labels that you can add, to organize your jobs. Each label is a key-value pair, where both the key and the value are arbitrary strings that you supply. For more information, see the documentation on using labels."
        }
      },
      "type": "object",
      "id": "GoogleCloudMlV1__Job"
    },
    "GoogleCloudMlV1_StudyConfigParameterSpec_IntegerValueSpec": {
      "properties": {
        "maxValue": {
          "type": "string",
          "format": "int64",
          "description": "Must be specified if type is `INTEGER`. Maximum value of the parameter."
        },
        "minValue": {
          "format": "int64",
          "type": "string",
          "description": "Must be specified if type is `INTEGER`. Minimum value of the parameter."
        }
      },
      "id": "GoogleCloudMlV1_StudyConfigParameterSpec_IntegerValueSpec",
      "type": "object"
    },
    "GoogleCloudMlV1__Measurement": {
      "type": "object",
      "id": "GoogleCloudMlV1__Measurement",
      "properties": {
        "metrics": {
          "description": "Provides a list of metrics that act as inputs into the objective function.",
          "items": {
            "$ref": "GoogleCloudMlV1_Measurement_Metric"
          },
          "type": "array"
        },
        "elapsedTime": {
          "format": "google-duration",
          "description": "Output only. Time that the trial has been running at the point of this measurement.",
          "type": "string"
        },
        "stepCount": {
          "description": "The number of steps a machine learning model has been trained for. Must be non-negative.",
          "format": "int64",
          "type": "string"
        }
      },
      "description": "A message representing a measurement."
    },
    "GoogleCloudMlV1__SuggestTrialsRequest": {
      "type": "object",
      "description": "The request message for the SuggestTrial service method.",
      "properties": {
        "suggestionCount": {
          "description": "Required. The number of suggestions requested.",
          "type": "integer",
          "format": "int32"
        },
        "clientId": {
          "type": "string",
          "description": "Required. The identifier of the client that is requesting the suggestion. If multiple SuggestTrialsRequests have the same `client_id`, the service will return the identical suggested trial if the trial is pending, and provide a new trial if the last suggested trial was completed."
        }
      },
      "id": "GoogleCloudMlV1__SuggestTrialsRequest"
    },
    "GoogleProtobuf__Empty": {
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "id": "GoogleProtobuf__Empty"
    },
    "GoogleCloudMlV1_StudyConfigParameterSpec_DoubleValueSpec": {
      "id": "GoogleCloudMlV1_StudyConfigParameterSpec_DoubleValueSpec",
      "properties": {
        "maxValue": {
          "format": "double",
          "type": "number",
          "description": "Must be specified if type is `DOUBLE`. Maximum value of the parameter."
        },
        "minValue": {
          "description": "Must be specified if type is `DOUBLE`. Minimum value of the parameter.",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "GoogleCloudMlV1__ListTrialsResponse": {
      "type": "object",
      "id": "GoogleCloudMlV1__ListTrialsResponse",
      "description": "The response message for the ListTrials method.",
      "properties": {
        "trials": {
          "items": {
            "$ref": "GoogleCloudMlV1__Trial"
          },
          "description": "The trials associated with the study.",
          "type": "array"
        }
      }
    },
    "GoogleLongrunning__ListOperationsResponse": {
      "id": "GoogleLongrunning__ListOperationsResponse",
      "type": "object",
      "description": "The response message for Operations.ListOperations.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "items": {
            "$ref": "GoogleLongrunning__Operation"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudMlV1__EnvVar": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the environment variable. Must be a C_IDENTIFIER."
        },
        "value": {
          "description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
          "type": "string"
        }
      },
      "id": "GoogleCloudMlV1__EnvVar",
      "description": "EnvVar represents an environment variable present in a Container.",
      "type": "object"
    },
    "GoogleCloudMlV1__PredictionInput": {
      "description": "Represents input parameters for a prediction job.",
      "id": "GoogleCloudMlV1__PredictionInput",
      "type": "object",
      "properties": {
        "region": {
          "type": "string",
          "description": "Required. The Google Compute Engine region to run the prediction job in. See the available regions for AI Platform services."
        },
        "modelName": {
          "type": "string",
          "description": "Use this field if you want to use the default version for the specified model. The string must use the following format: `\"projects/YOUR_PROJECT/models/YOUR_MODEL\"`"
        },
        "signatureName": {
          "type": "string",
          "description": "Optional. The name of the signature defined in the SavedModel to use for this job. Please refer to [SavedModel](https://tensorflow.github.io/serving/serving_basic.html) for information about how to use signatures. Defaults to [DEFAULT_SERVING_SIGNATURE_DEF_KEY](https://www.tensorflow.org/api_docs/python/tf/saved_model/signature_constants) , which is \"serving_default\"."
        },
        "outputDataFormat": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified format.",
            "Each line of the file is a JSON dictionary representing one record.",
            "Deprecated. Use JSON instead.",
            "The source file is a TFRecord file. Currently available only for input data.",
            "The source file is a GZIP-compressed TFRecord file. Currently available only for input data.",
            "Values are comma-separated rows, with keys in a separate file. Currently available only for output data."
          ],
          "description": "Optional. Format of the output data files, defaults to JSON.",
          "enum": [
            "DATA_FORMAT_UNSPECIFIED",
            "JSON",
            "TEXT",
            "TF_RECORD",
            "TF_RECORD_GZIP",
            "CSV"
          ]
        },
        "maxWorkerCount": {
          "type": "string",
          "description": "Optional. The maximum number of workers to be used for parallel processing. Defaults to 10 if not specified.",
          "format": "int64"
        },
        "batchSize": {
          "format": "int64",
          "type": "string",
          "description": "Optional. Number of records per batch, defaults to 64. The service will buffer batch_size number of records in memory before invoking one Tensorflow prediction call internally. So take the record size and memory available into consideration when setting this parameter."
        },
        "uri": {
          "description": "Use this field if you want to specify a Google Cloud Storage path for the model to use.",
          "type": "string"
        },
        "outputPath": {
          "description": "Required. The output Google Cloud Storage location.",
          "type": "string"
        },
        "inputPaths": {
          "description": "Required. The Cloud Storage location of the input data files. May contain wildcards.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "runtimeVersion": {
          "description": "Optional. The AI Platform runtime version to use for this batch prediction. If not set, AI Platform will pick the runtime version used during the CreateVersion request for this model version, or choose the latest stable version when model version information is not available such as when the model is specified by uri.",
          "type": "string"
        },
        "versionName": {
          "type": "string",
          "description": "Use this field if you want to specify a version of the model to use. The string is formatted the same way as `model_version`, with the addition of the version information: `\"projects/YOUR_PROJECT/models/YOUR_MODEL/versions/YOUR_VERSION\"`"
        },
        "dataFormat": {
          "type": "string",
          "enum": [
            "DATA_FORMAT_UNSPECIFIED",
            "JSON",
            "TEXT",
            "TF_RECORD",
            "TF_RECORD_GZIP",
            "CSV"
          ],
          "description": "Required. The format of the input data files.",
          "enumDescriptions": [
            "Unspecified format.",
            "Each line of the file is a JSON dictionary representing one record.",
            "Deprecated. Use JSON instead.",
            "The source file is a TFRecord file. Currently available only for input data.",
            "The source file is a GZIP-compressed TFRecord file. Currently available only for input data.",
            "Values are comma-separated rows, with keys in a separate file. Currently available only for output data."
          ]
        }
      }
    },
    "GoogleCloudMlV1_AutomatedStoppingConfig_MedianAutomatedStoppingConfig": {
      "type": "object",
      "properties": {
        "useElapsedTime": {
          "type": "boolean",
          "description": "If true, the median automated stopping rule applies to measurement.use_elapsed_time, which means the elapsed_time field of the current trial's latest measurement is used to compute the median objective value for each completed trial."
        }
      },
      "id": "GoogleCloudMlV1_AutomatedStoppingConfig_MedianAutomatedStoppingConfig",
      "description": "The median automated stopping rule stops a pending trial if the trial's best objective_value is strictly below the median 'performance' of all completed trials reported up to the trial's last measurement. Currently, 'performance' refers to the running average of the objective values reported by the trial in each measurement."
    },
    "GoogleLongrunning__Operation": {
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "GoogleLongrunning__Operation",
      "properties": {
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "response": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        },
        "error": {
          "$ref": "GoogleRpc__Status",
          "description": "The error result of the operation in case of failure or cancellation."
        }
      },
      "type": "object"
    },
    "GoogleCloudMlV1__BuiltInAlgorithmOutput": {
      "properties": {
        "framework": {
          "description": "Framework on which the built-in algorithm was trained.",
          "type": "string"
        },
        "modelPath": {
          "type": "string",
          "description": "The Cloud Storage path to the `model/` directory where the training job saves the trained model. Only set for successful jobs that don't use hyperparameter tuning."
        },
        "pythonVersion": {
          "description": "Python version on which the built-in algorithm was trained.",
          "type": "string"
        },
        "runtimeVersion": {
          "description": "AI Platform runtime version on which the built-in algorithm was trained.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudMlV1__BuiltInAlgorithmOutput",
      "description": "Represents output related to a built-in algorithm Job."
    },
    "GoogleCloudMlV1__HyperparameterSpec": {
      "id": "GoogleCloudMlV1__HyperparameterSpec",
      "type": "object",
      "description": "Represents a set of hyperparameters to optimize.",
      "properties": {
        "goal": {
          "description": "Required. The type of goal to use for tuning. Available types are `MAXIMIZE` and `MINIMIZE`. Defaults to `MAXIMIZE`.",
          "type": "string",
          "enum": [
            "GOAL_TYPE_UNSPECIFIED",
            "MAXIMIZE",
            "MINIMIZE"
          ],
          "enumDescriptions": [
            "Goal Type will default to maximize.",
            "Maximize the goal metric.",
            "Minimize the goal metric."
          ]
        },
        "maxParallelTrials": {
          "description": "Optional. The number of training trials to run concurrently. You can reduce the time it takes to perform hyperparameter tuning by adding trials in parallel. However, each trail only benefits from the information gained in completed trials. That means that a trial does not get access to the results of trials running at the same time, which could reduce the quality of the overall optimization. Each trial will use the same scale tier and machine types. Defaults to one.",
          "format": "int32",
          "type": "integer"
        },
        "params": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudMlV1__ParameterSpec"
          },
          "description": "Required. The set of parameters to tune."
        },
        "resumePreviousJobId": {
          "type": "string",
          "description": "Optional. The prior hyperparameter tuning job id that users hope to continue with. The job id will be used to find the corresponding vizier study guid and resume the study."
        },
        "maxFailedTrials": {
          "type": "integer",
          "description": "Optional. The number of failed trials that need to be seen before failing the hyperparameter tuning job. You can specify this field to override the default failing criteria for AI Platform hyperparameter tuning jobs. Defaults to zero, which means the service decides when a hyperparameter job should fail.",
          "format": "int32"
        },
        "hyperparameterMetricTag": {
          "type": "string",
          "description": "Optional. The TensorFlow summary tag name to use for optimizing trials. For current versions of TensorFlow, this tag name should exactly match what is shown in TensorBoard, including all scopes. For versions of TensorFlow prior to 0.12, this should be only the tag passed to tf.Summary. By default, \"training/hptuning/metric\" will be used."
        },
        "algorithm": {
          "type": "string",
          "description": "Optional. The search algorithm specified for the hyperparameter tuning job. Uses the default AI Platform hyperparameter tuning algorithm if unspecified.",
          "enum": [
            "ALGORITHM_UNSPECIFIED",
            "GRID_SEARCH",
            "RANDOM_SEARCH"
          ],
          "enumDescriptions": [
            "The default algorithm used by the hyperparameter tuning service. This is a Bayesian optimization algorithm.",
            "Simple grid search within the feasible space. To use grid search, all parameters must be `INTEGER`, `CATEGORICAL`, or `DISCRETE`.",
            "Simple random search within the feasible space."
          ]
        },
        "maxTrials": {
          "description": "Optional. How many training trials should be attempted to optimize the specified hyperparameters. Defaults to one.",
          "format": "int32",
          "type": "integer"
        },
        "enableTrialEarlyStopping": {
          "description": "Optional. Indicates if the hyperparameter tuning job enables auto trial early stopping.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudMlV1__RequestLoggingConfig": {
      "description": "Configuration for logging request-response pairs to a BigQuery table. Online prediction requests to a model version and the responses to these requests are converted to raw strings and saved to the specified BigQuery table. Logging is constrained by [BigQuery quotas and limits](/bigquery/quotas). If your project exceeds BigQuery quotas or limits, AI Platform Prediction does not log request-response pairs, but it continues to serve predictions. If you are using [continuous evaluation](/ml-engine/docs/continuous-evaluation/), you do not need to specify this configuration manually. Setting up continuous evaluation automatically enables logging of request-response pairs.",
      "properties": {
        "samplingPercentage": {
          "format": "double",
          "type": "number",
          "description": "Percentage of requests to be logged, expressed as a fraction from 0 to 1. For example, if you want to log 10% of requests, enter `0.1`. The sampling window is the lifetime of the model version. Defaults to 0."
        },
        "bigqueryTableName": {
          "type": "string",
          "description": "Required. Fully qualified BigQuery table name in the following format: \" project_id.dataset_name.table_name\" The specified table must already exist, and the \"Cloud ML Service Agent\" for your project must have permission to write to it. The table must have the following [schema](/bigquery/docs/schemas): Field nameType Mode model STRING REQUIRED model_version STRING REQUIRED time TIMESTAMP REQUIRED raw_data STRING REQUIRED raw_prediction STRING NULLABLE groundtruth STRING NULLABLE "
        }
      },
      "id": "GoogleCloudMlV1__RequestLoggingConfig",
      "type": "object"
    },
    "GoogleCloudMlV1_HyperparameterOutput_HyperparameterMetric": {
      "properties": {
        "objectiveValue": {
          "type": "number",
          "description": "The objective value at this training step.",
          "format": "double"
        },
        "trainingStep": {
          "description": "The global training step for this metric.",
          "type": "string",
          "format": "int64"
        }
      },
      "id": "GoogleCloudMlV1_HyperparameterOutput_HyperparameterMetric",
      "type": "object",
      "description": "An observed value of a metric."
    },
    "GoogleCloudMlV1__CancelJobRequest": {
      "properties": {},
      "description": "Request message for the CancelJob method.",
      "type": "object",
      "id": "GoogleCloudMlV1__CancelJobRequest"
    },
    "GoogleCloudMlV1__OperationMetadata": {
      "type": "object",
      "description": "Represents the metadata of the long-running operation.",
      "properties": {
        "endTime": {
          "description": "The time operation processing completed.",
          "type": "string",
          "format": "google-datetime"
        },
        "isCancellationRequested": {
          "type": "boolean",
          "description": "Indicates whether a request to cancel this operation has been made."
        },
        "operationType": {
          "enum": [
            "OPERATION_TYPE_UNSPECIFIED",
            "CREATE_VERSION",
            "DELETE_VERSION",
            "DELETE_MODEL",
            "UPDATE_MODEL",
            "UPDATE_VERSION",
            "UPDATE_CONFIG"
          ],
          "type": "string",
          "description": "The operation type.",
          "enumDescriptions": [
            "Unspecified operation type.",
            "An operation to create a new version.",
            "An operation to delete an existing version.",
            "An operation to delete an existing model.",
            "An operation to update an existing model.",
            "An operation to update an existing version.",
            "An operation to update project configuration."
          ]
        },
        "labels": {
          "type": "object",
          "description": "The user labels, inherited from the model or the model version being operated on.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "startTime": {
          "description": "The time operation processing started.",
          "type": "string",
          "format": "google-datetime"
        },
        "projectNumber": {
          "format": "int64",
          "description": "Contains the project number associated with the operation.",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "The time the operation was submitted.",
          "type": "string"
        },
        "modelName": {
          "type": "string",
          "description": "Contains the name of the model associated with the operation."
        },
        "version": {
          "$ref": "GoogleCloudMlV1__Version",
          "description": "Contains the version associated with the operation."
        }
      },
      "id": "GoogleCloudMlV1__OperationMetadata"
    },
    "GoogleCloudMlV1__ListStudiesResponse": {
      "properties": {
        "studies": {
          "type": "array",
          "description": "The studies associated with the project.",
          "items": {
            "$ref": "GoogleCloudMlV1__Study"
          }
        }
      },
      "id": "GoogleCloudMlV1__ListStudiesResponse",
      "type": "object"
    },
    "GoogleCloudMlV1__ParameterSpec": {
      "id": "GoogleCloudMlV1__ParameterSpec",
      "properties": {
        "categoricalValues": {
          "description": "Required if type is `CATEGORICAL`. The list of possible categories.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "discreteValues": {
          "description": "Required if type is `DISCRETE`. A list of feasible points. The list should be in strictly increasing order. For instance, this parameter might have possible settings of 1.5, 2.5, and 4.0. This list should not contain more than 1,000 values.",
          "items": {
            "type": "number",
            "format": "double"
          },
          "type": "array"
        },
        "scaleType": {
          "type": "string",
          "description": "Optional. How the parameter should be scaled to the hypercube. Leave unset for categorical parameters. Some kind of scaling is strongly recommended for real or integral parameters (e.g., `UNIT_LINEAR_SCALE`).",
          "enum": [
            "NONE",
            "UNIT_LINEAR_SCALE",
            "UNIT_LOG_SCALE",
            "UNIT_REVERSE_LOG_SCALE"
          ],
          "enumDescriptions": [
            "By default, no scaling is applied.",
            "Scales the feasible space to (0, 1) linearly.",
            "Scales the feasible space logarithmically to (0, 1). The entire feasible space must be strictly positive.",
            "Scales the feasible space \"reverse\" logarithmically to (0, 1). The result is that values close to the top of the feasible space are spread out more than points near the bottom. The entire feasible space must be strictly positive."
          ]
        },
        "maxValue": {
          "description": "Required if type is `DOUBLE` or `INTEGER`. This field should be unset if type is `CATEGORICAL`. This value should be integers if type is `INTEGER`.",
          "format": "double",
          "type": "number"
        },
        "type": {
          "description": "Required. The type of the parameter.",
          "enumDescriptions": [
            "You must specify a valid type. Using this unspecified type will result in an error.",
            "Type for real-valued parameters.",
            "Type for integral parameters.",
            "The parameter is categorical, with a value chosen from the categories field.",
            "The parameter is real valued, with a fixed set of feasible points. If `type==DISCRETE`, feasible_points must be provided, and {`min_value`, `max_value`} will be ignored."
          ],
          "enum": [
            "PARAMETER_TYPE_UNSPECIFIED",
            "DOUBLE",
            "INTEGER",
            "CATEGORICAL",
            "DISCRETE"
          ],
          "type": "string"
        },
        "parameterName": {
          "type": "string",
          "description": "Required. The parameter name must be unique amongst all ParameterConfigs in a HyperparameterSpec message. E.g., \"learning_rate\"."
        },
        "minValue": {
          "format": "double",
          "type": "number",
          "description": "Required if type is `DOUBLE` or `INTEGER`. This field should be unset if type is `CATEGORICAL`. This value should be integers if type is INTEGER."
        }
      },
      "type": "object",
      "description": "Represents a single hyperparameter to optimize."
    },
    "GoogleCloudMlV1__CompleteTrialRequest": {
      "description": "The request message for the CompleteTrial service method.",
      "properties": {
        "trialInfeasible": {
          "type": "boolean",
          "description": "Optional. True if the trial cannot be run with the given Parameter, and final_measurement will be ignored."
        },
        "finalMeasurement": {
          "description": "Optional. If provided, it will be used as the completed trial's final_measurement; Otherwise, the service will auto-select a previously reported measurement as the final-measurement",
          "$ref": "GoogleCloudMlV1__Measurement"
        },
        "infeasibleReason": {
          "description": "Optional. A human readable reason why the trial was infeasible. This should only be provided if `trial_infeasible` is true.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudMlV1__CompleteTrialRequest"
    },
    "GoogleIamV1__Binding": {
      "description": "Associates `members` with a `role`.",
      "type": "object",
      "id": "GoogleIamV1__Binding",
      "properties": {
        "condition": {
          "$ref": "GoogleType__Expr",
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        },
        "members": {
          "items": {
            "type": "string"
          },
          "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. ",
          "type": "array"
        },
        "role": {
          "type": "string",
          "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
        }
      }
    },
    "GoogleType__Expr": {
      "properties": {
        "description": {
          "type": "string",
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        },
        "expression": {
          "type": "string",
          "description": "Textual representation of an expression in Common Expression Language syntax."
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "id": "GoogleType__Expr"
    },
    "GoogleIamV1__SetIamPolicyRequest": {
      "id": "GoogleIamV1__SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "properties": {
        "updateMask": {
          "format": "google-fieldmask",
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
          "type": "string"
        },
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.",
          "$ref": "GoogleIamV1__Policy"
        }
      },
      "type": "object"
    },
    "GoogleCloudMlV1__ListLocationsResponse": {
      "type": "object",
      "id": "GoogleCloudMlV1__ListLocationsResponse",
      "properties": {
        "locations": {
          "type": "array",
          "description": "Locations where at least one type of CMLE capability is available.",
          "items": {
            "$ref": "GoogleCloudMlV1__Location"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Optional. Pass this token as the `page_token` field of the request for a subsequent call."
        }
      }
    },
    "GoogleCloudMlV1_StudyConfigParameterSpec_MatchingParentCategoricalValueSpec": {
      "id": "GoogleCloudMlV1_StudyConfigParameterSpec_MatchingParentCategoricalValueSpec",
      "description": "Represents the spec to match categorical values from parent parameter.",
      "properties": {
        "values": {
          "description": "Matches values of the parent parameter with type 'CATEGORICAL'. All values must exist in `categorical_value_spec` of parent parameter.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "GoogleCloudMlV1__AutomatedStoppingConfig": {
      "properties": {
        "medianAutomatedStoppingConfig": {
          "$ref": "GoogleCloudMlV1_AutomatedStoppingConfig_MedianAutomatedStoppingConfig"
        },
        "decayCurveStoppingConfig": {
          "$ref": "GoogleCloudMlV1_AutomatedStoppingConfig_DecayCurveAutomatedStoppingConfig"
        }
      },
      "description": "Configuration for Automated Early Stopping of Trials. If no implementation_config is set, automated early stopping will not be run.",
      "id": "GoogleCloudMlV1__AutomatedStoppingConfig",
      "type": "object"
    },
    "GoogleCloudMlV1__Location": {
      "properties": {
        "name": {
          "type": "string"
        },
        "capabilities": {
          "type": "array",
          "description": "Capabilities available in the location.",
          "items": {
            "$ref": "GoogleCloudMlV1__Capability"
          }
        }
      },
      "type": "object",
      "id": "GoogleCloudMlV1__Location"
    },
    "GoogleCloudMlV1__Version": {
      "description": "Represents a version of the model. Each version is a trained model deployed in the cloud, ready to handle prediction requests. A model can have multiple versions. You can get information about all of the versions of a given model by calling projects.models.versions.list.",
      "properties": {
        "acceleratorConfig": {
          "$ref": "GoogleCloudMlV1__AcceleratorConfig",
          "description": "Optional. Accelerator config for using GPUs for online prediction (beta). Only specify this field if you have specified a Compute Engine (N1) machine type in the `machineType` field. Learn more about [using GPUs for online prediction](/ml-engine/docs/machine-types-online-prediction#gpus)."
        },
        "state": {
          "enum": [
            "UNKNOWN",
            "READY",
            "CREATING",
            "FAILED",
            "DELETING",
            "UPDATING"
          ],
          "type": "string",
          "description": "Output only. The state of a version.",
          "enumDescriptions": [
            "The version state is unspecified.",
            "The version is ready for prediction.",
            "The version is being created. New UpdateVersion and DeleteVersion requests will fail if a version is in the CREATING state.",
            "The version failed to be created, possibly cancelled. `error_message` should contain the details of the failure.",
            "The version is being deleted. New UpdateVersion and DeleteVersion requests will fail if a version is in the DELETING state.",
            "The version is being updated. New UpdateVersion and DeleteVersion requests will fail if a version is in the UPDATING state."
          ]
        },
        "predictionClass": {
          "description": "Optional. The fully qualified name (module_name.class_name) of a class that implements the Predictor interface described in this reference field. The module containing this class should be included in a package provided to the [`packageUris` field](#Version.FIELDS.package_uris). Specify this field if and only if you are deploying a [custom prediction routine (beta)](/ml-engine/docs/tensorflow/custom-prediction-routines). If you specify this field, you must set [`runtimeVersion`](#Version.FIELDS.runtime_version) to 1.4 or greater and you must set `machineType` to a [legacy (MLS1) machine type](/ml-engine/docs/machine-types-online-prediction). The following code sample provides the Predictor interface: class Predictor(object): \"\"\"Interface for constructing custom predictors.\"\"\" def predict(self, instances, **kwargs): \"\"\"Performs custom prediction. Instances are the decoded values from the request. They have already been deserialized from JSON. Args: instances: A list of prediction input instances. **kwargs: A dictionary of keyword args provided as additional fields on the predict request body. Returns: A list of outputs containing the prediction results. This list must be JSON serializable. \"\"\" raise NotImplementedError() @classmethod def from_path(cls, model_dir): \"\"\"Creates an instance of Predictor using the given path. Loading of the predictor should be done in this method. Args: model_dir: The local directory that contains the exported model file along with any additional files uploaded when creating the version resource. Returns: An instance implementing this Predictor class. \"\"\" raise NotImplementedError() Learn more about [the Predictor interface and custom prediction routines](/ml-engine/docs/tensorflow/custom-prediction-routines).",
          "type": "string"
        },
        "machineType": {
          "type": "string",
          "description": "Optional. The type of machine on which to serve the model. Currently only applies to online prediction service. If this field is not specified, it defaults to `mls1-c1-m2`. Online prediction supports the following machine types: * `mls1-c1-m2` * `mls1-c4-m2` * `n1-standard-2` * `n1-standard-4` * `n1-standard-8` * `n1-standard-16` * `n1-standard-32` * `n1-highmem-2` * `n1-highmem-4` * `n1-highmem-8` * `n1-highmem-16` * `n1-highmem-32` * `n1-highcpu-2` * `n1-highcpu-4` * `n1-highcpu-8` * `n1-highcpu-16` * `n1-highcpu-32` `mls1-c1-m2` is generally available. All other machine types are available in beta. Learn more about the [differences between machine types](/ml-engine/docs/machine-types-online-prediction)."
        },
        "runtimeVersion": {
          "description": "Required. The AI Platform runtime version to use for this deployment. For more information, see the [runtime version list](/ml-engine/docs/runtime-version-list) and [how to manage runtime versions](/ml-engine/docs/versioning).",
          "type": "string"
        },
        "explanationConfig": {
          "$ref": "GoogleCloudMlV1__ExplanationConfig",
          "description": "Optional. Configures explainability features on the model's version. Some explanation features require additional metadata to be loaded as part of the model payload."
        },
        "manualScaling": {
          "description": "Manually select the number of nodes to use for serving the model. You should generally use `auto_scaling` with an appropriate `min_nodes` instead, but this option is available if you want more predictable billing. Beware that latency and error rates will increase if the traffic exceeds that capability of the system to serve it based on the selected number of nodes.",
          "$ref": "GoogleCloudMlV1__ManualScaling"
        },
        "errorMessage": {
          "type": "string",
          "description": "Output only. The details of a failure or a cancellation."
        },
        "framework": {
          "enum": [
            "FRAMEWORK_UNSPECIFIED",
            "TENSORFLOW",
            "SCIKIT_LEARN",
            "XGBOOST"
          ],
          "type": "string",
          "description": "Optional. The machine learning framework AI Platform uses to train this version of the model. Valid values are `TENSORFLOW`, `SCIKIT_LEARN`, `XGBOOST`. If you do not specify a framework, AI Platform will analyze files in the deployment_uri to determine a framework. If you choose `SCIKIT_LEARN` or `XGBOOST`, you must also set the runtime version of the model to 1.4 or greater. Do **not** specify a framework if you're deploying a [custom prediction routine](/ml-engine/docs/tensorflow/custom-prediction-routines). If you specify a [Compute Engine (N1) machine type](/ml-engine/docs/machine-types-online-prediction) in the `machineType` field, you must specify `TENSORFLOW` for the framework.",
          "enumDescriptions": [
            "Unspecified framework. Assigns a value based on the file suffix.",
            "Tensorflow framework.",
            "Scikit-learn framework.",
            "XGBoost framework."
          ]
        },
        "pythonVersion": {
          "description": "Required. The version of Python used in prediction. The following Python versions are available: * Python '3.7' is available when `runtime_version` is set to '1.15' or later. * Python '3.5' is available when `runtime_version` is set to a version from '1.4' to '1.14'. * Python '2.7' is available when `runtime_version` is set to '1.15' or earlier. Read more about the Python versions available for [each runtime version](/ml-engine/docs/runtime-version-list).",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the version was created."
        },
        "serviceAccount": {
          "type": "string",
          "description": "Optional. Specifies the service account for resource access control."
        },
        "etag": {
          "format": "byte",
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a model from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform model updates in order to avoid race conditions: An `etag` is returned in the response to `GetVersion`, and systems are expected to put that etag in the request to `UpdateVersion` to ensure that their change will be applied to the model as intended.",
          "type": "string"
        },
        "description": {
          "description": "Optional. The description specified for the version when it was created.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Required. The name specified for the version when it was created. The version name must be unique within the model it is created in."
        },
        "routes": {
          "$ref": "GoogleCloudMlV1__RouteMap"
        },
        "autoScaling": {
          "description": "Automatically scale the number of nodes used to serve the model in response to increases and decreases in traffic. Care should be taken to ramp up traffic according to the model's ability to scale or you will start seeing increases in latency and 429 response codes. Note that you cannot use AutoScaling if your version uses [GPUs](#Version.FIELDS.accelerator_config). Instead, you must use specify `manual_scaling`.",
          "$ref": "GoogleCloudMlV1__AutoScaling"
        },
        "isDefault": {
          "description": "Output only. If true, this version will be used to handle prediction requests that do not specify a version. You can change the default version by calling projects.methods.versions.setDefault.",
          "type": "boolean"
        },
        "packageUris": {
          "items": {
            "type": "string"
          },
          "description": "Optional. Cloud Storage paths (`gs://…`) of packages for [custom prediction routines](/ml-engine/docs/tensorflow/custom-prediction-routines) or [scikit-learn pipelines with custom code](/ml-engine/docs/scikit/exporting-for-prediction#custom-pipeline-code). For a custom prediction routine, one of these packages must contain your Predictor class (see [`predictionClass`](#Version.FIELDS.prediction_class)). Additionally, include any dependencies used by your Predictor or scikit-learn pipeline uses that are not already included in your selected [runtime version](/ml-engine/docs/tensorflow/runtime-version-list). If you specify this field, you must also set [`runtimeVersion`](#Version.FIELDS.runtime_version) to 1.4 or greater.",
          "type": "array"
        },
        "container": {
          "$ref": "GoogleCloudMlV1__ContainerSpec"
        },
        "labels": {
          "type": "object",
          "description": "Optional. One or more labels that you can add, to organize your model versions. Each label is a key-value pair, where both the key and the value are arbitrary strings that you supply. For more information, see the documentation on using labels.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "deploymentUri": {
          "description": "Required. The Cloud Storage location of the trained model used to create the version. See the [guide to model deployment](/ml-engine/docs/tensorflow/deploying-models) for more information. When passing Version to projects.models.versions.create the model service uses the specified location as the source of the model. Once deployed, the model version is hosted by the prediction service, so this location is useful only as a historical record. The total number of model files can't exceed 1000.",
          "type": "string"
        },
        "lastUseTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time the version was last used for prediction."
        },
        "requestLoggingConfig": {
          "$ref": "GoogleCloudMlV1__RequestLoggingConfig",
          "description": "Optional. *Only* specify this field in a projects.models.versions.patch request. Specifying it in a projects.models.versions.create request has no effect. Configures the request-response pair logging on predictions from this Version."
        }
      },
      "id": "GoogleCloudMlV1__Version",
      "type": "object"
    },
    "GoogleCloudMlV1__IntegratedGradientsAttribution": {
      "id": "GoogleCloudMlV1__IntegratedGradientsAttribution",
      "type": "object",
      "properties": {
        "numIntegralSteps": {
          "type": "integer",
          "description": "Number of steps for approximating the path integral. A good value to start is 50 and gradually increase until the sum to diff property is met within the desired error range.",
          "format": "int32"
        }
      },
      "description": "Attributes credit by computing the Aumann-Shapley value taking advantage of the model's fully differentiable structure. Refer to this paper for more details: https://arxiv.org/abs/1703.01365"
    },
    "GoogleCloudMlV1_Trial_Parameter": {
      "properties": {
        "intValue": {
          "format": "int64",
          "type": "string",
          "description": "Must be set if ParameterType is INTEGER"
        },
        "floatValue": {
          "description": "Must be set if ParameterType is DOUBLE or DISCRETE.",
          "type": "number",
          "format": "double"
        },
        "parameter": {
          "description": "The name of the parameter.",
          "type": "string"
        },
        "stringValue": {
          "type": "string",
          "description": "Must be set if ParameterTypeis CATEGORICAL"
        }
      },
      "type": "object",
      "id": "GoogleCloudMlV1_Trial_Parameter",
      "description": "A message representing a parameter to be tuned. Contains the name of the parameter and the suggested value to use for this trial."
    },
    "GoogleCloudMlV1__GetConfigResponse": {
      "type": "object",
      "id": "GoogleCloudMlV1__GetConfigResponse",
      "properties": {
        "serviceAccountProject": {
          "type": "string",
          "description": "The project number for `service_account`.",
          "format": "int64"
        },
        "serviceAccount": {
          "description": "The service account Cloud ML uses to access resources in the project.",
          "type": "string"
        },
        "config": {
          "$ref": "GoogleCloudMlV1__Config"
        }
      },
      "description": "Returns service account information associated with a project."
    },
    "GoogleCloudMlV1_StudyConfigParameterSpec_CategoricalValueSpec": {
      "id": "GoogleCloudMlV1_StudyConfigParameterSpec_CategoricalValueSpec",
      "properties": {
        "values": {
          "description": "Must be specified if type is `CATEGORICAL`. The list of possible categories.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "GoogleCloudMlV1__Capability": {
      "id": "GoogleCloudMlV1__Capability",
      "properties": {
        "availableAccelerators": {
          "enumDescriptions": [
            "Unspecified accelerator type. Default to no GPU.",
            "Nvidia Tesla K80 GPU.",
            "Nvidia Tesla P100 GPU.",
            "Nvidia Tesla V100 GPU.",
            "Nvidia Tesla P4 GPU.",
            "Nvidia Tesla T4 GPU.",
            "TPU v2.",
            "TPU v3."
          ],
          "description": "Available accelerators for the capability.",
          "items": {
            "enumDescriptions": [
              "Unspecified accelerator type. Default to no GPU.",
              "Nvidia Tesla K80 GPU.",
              "Nvidia Tesla P100 GPU.",
              "Nvidia Tesla V100 GPU.",
              "Nvidia Tesla P4 GPU.",
              "Nvidia Tesla T4 GPU.",
              "TPU v2.",
              "TPU v3."
            ],
            "type": "string",
            "enum": [
              "ACCELERATOR_TYPE_UNSPECIFIED",
              "NVIDIA_TESLA_K80",
              "NVIDIA_TESLA_P100",
              "NVIDIA_TESLA_V100",
              "NVIDIA_TESLA_P4",
              "NVIDIA_TESLA_T4",
              "TPU_V2",
              "TPU_V3"
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "TRAINING",
            "BATCH_PREDICTION",
            "ONLINE_PREDICTION"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ]
        }
      },
      "type": "object"
    },
    "GoogleCloudMlV1__XraiAttribution": {
      "description": "Attributes credit by computing the XRAI taking advantage of the model's fully differentiable structure. Refer to this paper for more details: https://arxiv.org/abs/1906.02825 Currently only implemented for models with natural image inputs.",
      "type": "object",
      "properties": {
        "numIntegralSteps": {
          "format": "int32",
          "description": "Number of steps for approximating the path integral. A good value to start is 50 and gradually increase until the sum to diff property is met within the desired error range.",
          "type": "integer"
        }
      },
      "id": "GoogleCloudMlV1__XraiAttribution"
    },
    "GoogleCloudMlV1__CheckTrialEarlyStoppingStateRequest": {
      "description": "The request message for the CheckTrialEarlyStoppingState service method.",
      "id": "GoogleCloudMlV1__CheckTrialEarlyStoppingStateRequest",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudMlV1__StudyConfig": {
      "properties": {
        "metrics": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudMlV1_StudyConfig_MetricSpec"
          },
          "description": "Metric specs for the study."
        },
        "automatedStoppingConfig": {
          "description": "Configuration for automated stopping of unpromising Trials.",
          "$ref": "GoogleCloudMlV1__AutomatedStoppingConfig"
        },
        "algorithm": {
          "description": "The search algorithm specified for the study.",
          "type": "string",
          "enum": [
            "ALGORITHM_UNSPECIFIED",
            "GAUSSIAN_PROCESS_BANDIT",
            "GRID_SEARCH",
            "RANDOM_SEARCH"
          ],
          "enumDescriptions": [
            "The default algorithm used by the Cloud AI Platform Optimization service.",
            "Gaussian Process Bandit.",
            "Simple grid search within the feasible space. To use grid search, all parameters must be `INTEGER`, `CATEGORICAL`, or `DISCRETE`.",
            "Simple random search within the feasible space."
          ]
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudMlV1_StudyConfig_ParameterSpec"
          },
          "description": "Required. The set of parameters to tune."
        }
      },
      "description": "Represents configuration of a study.",
      "id": "GoogleCloudMlV1__StudyConfig",
      "type": "object"
    },
    "GoogleCloudMlV1__TrainingInput": {
      "description": "Represents input parameters for a training job. When using the gcloud command to submit your training job, you can specify the input parameters as command-line arguments and/or in a YAML configuration file referenced from the --config command-line argument. For details, see the guide to [submitting a training job](/ai-platform/training/docs/training-jobs).",
      "properties": {
        "hyperparameters": {
          "description": "Optional. The set of Hyperparameters to tune.",
          "$ref": "GoogleCloudMlV1__HyperparameterSpec"
        },
        "jobDir": {
          "description": "Optional. A Google Cloud Storage path in which to store training outputs and other data needed for training. This path is passed to your TensorFlow program as the '--job-dir' command-line argument. The benefit of specifying this field is that Cloud ML validates the path for use in training.",
          "type": "string"
        },
        "workerType": {
          "type": "string",
          "description": "Optional. Specifies the type of virtual machine to use for your training job's worker nodes. The supported values are the same as those described in the entry for `masterType`. This value must be consistent with the category of machine type that `masterType` uses. In other words, both must be Compute Engine machine types or both must be legacy machine types. If you use `cloud_tpu` for this value, see special instructions for [configuring a custom TPU machine](/ml-engine/docs/tensorflow/using-tpus#configuring_a_custom_tpu_machine). This value must be present when `scaleTier` is set to `CUSTOM` and `workerCount` is greater than zero."
        },
        "evaluatorCount": {
          "type": "string",
          "format": "int64",
          "description": "Optional. The number of evaluator replicas to use for the training job. Each replica in the cluster will be of the type specified in `evaluator_type`. This value can only be used when `scale_tier` is set to `CUSTOM`. If you set this value, you must also set `evaluator_type`. The default value is zero."
        },
        "encryptionConfig": {
          "$ref": "GoogleCloudMlV1__EncryptionConfig",
          "description": "Optional. Options for using customer-managed encryption keys (CMEK) to protect resources created by a training job, instead of using Google's default encryption. If this is set, then all resources created by the training job will be encrypted with the customer-managed encryption key that you specify. [Learn how and when to use CMEK with AI Platform Training](/ai-platform/training/docs/cmek)."
        },
        "serviceAccount": {
          "type": "string",
          "description": "Optional. The email address of a service account to use when running the training appplication. You must have the `iam.serviceAccounts.actAs` permission for the specified service account. In addition, the AI Platform Training Google-managed service account must have the `roles/iam.serviceAccountAdmin` role for the specified service account. [Learn more about configuring a service account.](/ai-platform/training/docs/custom-service-account) If not specified, the AI Platform Training Google-managed service account is used by default."
        },
        "masterConfig": {
          "$ref": "GoogleCloudMlV1__ReplicaConfig",
          "description": "Optional. The configuration for your master worker. You should only set `masterConfig.acceleratorConfig` if `masterType` is set to a Compute Engine machine type. Learn about [restrictions on accelerator configurations for training.](/ai-platform/training/docs/using-gpus#compute-engine-machine-types-with-gpu) Set `masterConfig.imageUri` only if you build a custom image. Only one of `masterConfig.imageUri` and `runtimeVersion` should be set. Learn more about [configuring custom containers](/ai-platform/training/docs/distributed-training-containers)."
        },
        "evaluatorType": {
          "type": "string",
          "description": "Optional. Specifies the type of virtual machine to use for your training job's evaluator nodes. The supported values are the same as those described in the entry for `masterType`. This value must be consistent with the category of machine type that `masterType` uses. In other words, both must be Compute Engine machine types or both must be legacy machine types. This value must be present when `scaleTier` is set to `CUSTOM` and `evaluatorCount` is greater than zero."
        },
        "useChiefInTfConfig": {
          "type": "boolean",
          "description": "Optional. Use `chief` instead of `master` in the `TF_CONFIG` environment variable when training with a custom container. Defaults to `false`. [Learn more about this field.](/ai-platform/training/docs/distributed-training-details#chief-versus-master) This field has no effect for training jobs that don't use a custom container."
        },
        "parameterServerCount": {
          "type": "string",
          "format": "int64",
          "description": "Optional. The number of parameter server replicas to use for the training job. Each replica in the cluster will be of the type specified in `parameter_server_type`. This value can only be used when `scale_tier` is set to `CUSTOM`. If you set this value, you must also set `parameter_server_type`. The default value is zero."
        },
        "packageUris": {
          "items": {
            "type": "string"
          },
          "description": "Required. The Google Cloud Storage location of the packages with the training program and any additional dependencies. The maximum number of package URIs is 100.",
          "type": "array"
        },
        "masterType": {
          "description": "Optional. Specifies the type of virtual machine to use for your training job's master worker. You must specify this field when `scaleTier` is set to `CUSTOM`. You can use certain Compute Engine machine types directly in this field. The following types are supported: - `n1-standard-4` - `n1-standard-8` - `n1-standard-16` - `n1-standard-32` - `n1-standard-64` - `n1-standard-96` - `n1-highmem-2` - `n1-highmem-4` - `n1-highmem-8` - `n1-highmem-16` - `n1-highmem-32` - `n1-highmem-64` - `n1-highmem-96` - `n1-highcpu-16` - `n1-highcpu-32` - `n1-highcpu-64` - `n1-highcpu-96` Learn more about [using Compute Engine machine types](/ml-engine/docs/machine-types#compute-engine-machine-types). Alternatively, you can use the following legacy machine types: - `standard` - `large_model` - `complex_model_s` - `complex_model_m` - `complex_model_l` - `standard_gpu` - `complex_model_m_gpu` - `complex_model_l_gpu` - `standard_p100` - `complex_model_m_p100` - `standard_v100` - `large_model_v100` - `complex_model_m_v100` - `complex_model_l_v100` Learn more about [using legacy machine types](/ml-engine/docs/machine-types#legacy-machine-types). Finally, if you want to use a TPU for training, specify `cloud_tpu` in this field. Learn more about the [special configuration options for training with TPUs](/ml-engine/docs/tensorflow/using-tpus#configuring_a_custom_tpu_machine).",
          "type": "string"
        },
        "workerCount": {
          "format": "int64",
          "type": "string",
          "description": "Optional. The number of worker replicas to use for the training job. Each replica in the cluster will be of the type specified in `worker_type`. This value can only be used when `scale_tier` is set to `CUSTOM`. If you set this value, you must also set `worker_type`. The default value is zero."
        },
        "evaluatorConfig": {
          "description": "Optional. The configuration for evaluators. You should only set `evaluatorConfig.acceleratorConfig` if `evaluatorType` is set to a Compute Engine machine type. [Learn about restrictions on accelerator configurations for training.](/ai-platform/training/docs/using-gpus#compute-engine-machine-types-with-gpu) Set `evaluatorConfig.imageUri` only if you build a custom image for your evaluator. If `evaluatorConfig.imageUri` has not been set, AI Platform uses the value of `masterConfig.imageUri`. Learn more about [configuring custom containers](/ai-platform/training/docs/distributed-training-containers).",
          "$ref": "GoogleCloudMlV1__ReplicaConfig"
        },
        "scheduling": {
          "$ref": "GoogleCloudMlV1__Scheduling",
          "description": "Optional. Scheduling options for a training job."
        },
        "args": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. Command-line arguments passed to the training application when it starts. If your job uses a custom container, then the arguments are passed to the container's `ENTRYPOINT` command."
        },
        "parameterServerType": {
          "description": "Optional. Specifies the type of virtual machine to use for your training job's parameter server. The supported values are the same as those described in the entry for `master_type`. This value must be consistent with the category of machine type that `masterType` uses. In other words, both must be Compute Engine machine types or both must be legacy machine types. This value must be present when `scaleTier` is set to `CUSTOM` and `parameter_server_count` is greater than zero.",
          "type": "string"
        },
        "runtimeVersion": {
          "description": "Optional. The AI Platform runtime version to use for training. You must either specify this field or specify `masterConfig.imageUri`. For more information, see the [runtime version list](/ai-platform/training/docs/runtime-version-list) and learn [how to manage runtime versions](/ai-platform/training/docs/versioning).",
          "type": "string"
        },
        "network": {
          "description": "Optional. The full name of the [Compute Engine network](/vpc/docs/vpc) to which the Job is peered. For example, `projects/12345/global/networks/myVPC`. The format of this field is `projects/{project}/global/networks/{network}`, where {project} is a project number (like `12345`) and {network} is network name. Private services access must already be configured for the network. If left unspecified, the Job is not peered with any network. [Learn about using VPC Network Peering.](/ai-platform/training/docs/vpc-peering).",
          "type": "string"
        },
        "pythonModule": {
          "description": "Required. The Python module name to run after installing the packages.",
          "type": "string"
        },
        "scaleTier": {
          "enum": [
            "BASIC",
            "STANDARD_1",
            "PREMIUM_1",
            "BASIC_GPU",
            "BASIC_TPU",
            "CUSTOM"
          ],
          "enumDescriptions": [
            "A single worker instance. This tier is suitable for learning how to use Cloud ML, and for experimenting with new models using small datasets.",
            "Many workers and a few parameter servers.",
            "A large number of workers with many parameter servers.",
            "A single worker instance [with a GPU](/ai-platform/training/docs/using-gpus).",
            "A single worker instance with a [Cloud TPU](/ml-engine/docs/tensorflow/using-tpus).",
            "The CUSTOM tier is not a set tier, but rather enables you to use your own cluster specification. When you use this tier, set values to configure your processing cluster according to these guidelines: * You _must_ set `TrainingInput.masterType` to specify the type of machine to use for your master node. This is the only required setting. * You _may_ set `TrainingInput.workerCount` to specify the number of workers to use. If you specify one or more workers, you _must_ also set `TrainingInput.workerType` to specify the type of machine to use for your worker nodes. * You _may_ set `TrainingInput.parameterServerCount` to specify the number of parameter servers to use. If you specify one or more parameter servers, you _must_ also set `TrainingInput.parameterServerType` to specify the type of machine to use for your parameter servers. Note that all of your workers must use the same machine type, which can be different from your parameter server type and master type. Your parameter servers must likewise use the same machine type, which can be different from your worker type and master type."
          ],
          "type": "string",
          "description": "Required. Specifies the machine types, the number of replicas for workers and parameter servers."
        },
        "region": {
          "description": "Required. The region to run the training job in. See the [available regions](/ai-platform/training/docs/regions) for AI Platform Training.",
          "type": "string"
        },
        "workerConfig": {
          "$ref": "GoogleCloudMlV1__ReplicaConfig",
          "description": "Optional. The configuration for workers. You should only set `workerConfig.acceleratorConfig` if `workerType` is set to a Compute Engine machine type. [Learn about restrictions on accelerator configurations for training.](/ai-platform/training/docs/using-gpus#compute-engine-machine-types-with-gpu) Set `workerConfig.imageUri` only if you build a custom image for your worker. If `workerConfig.imageUri` has not been set, AI Platform uses the value of `masterConfig.imageUri`. Learn more about [configuring custom containers](/ai-platform/training/docs/distributed-training-containers)."
        },
        "pythonVersion": {
          "type": "string",
          "description": "Optional. The version of Python used in training. You must either specify this field or specify `masterConfig.imageUri`. The following Python versions are available: * Python '3.7' is available when `runtime_version` is set to '1.15' or later. * Python '3.5' is available when `runtime_version` is set to a version from '1.4' to '1.14'. * Python '2.7' is available when `runtime_version` is set to '1.15' or earlier. Read more about the Python versions available for [each runtime version](/ml-engine/docs/runtime-version-list)."
        },
        "parameterServerConfig": {
          "description": "Optional. The configuration for parameter servers. You should only set `parameterServerConfig.acceleratorConfig` if `parameterServerType` is set to a Compute Engine machine type. [Learn about restrictions on accelerator configurations for training.](/ai-platform/training/docs/using-gpus#compute-engine-machine-types-with-gpu) Set `parameterServerConfig.imageUri` only if you build a custom image for your parameter server. If `parameterServerConfig.imageUri` has not been set, AI Platform uses the value of `masterConfig.imageUri`. Learn more about [configuring custom containers](/ai-platform/training/docs/distributed-training-containers).",
          "$ref": "GoogleCloudMlV1__ReplicaConfig"
        }
      },
      "id": "GoogleCloudMlV1__TrainingInput",
      "type": "object"
    },
    "GoogleCloudMlV1_StudyConfigParameterSpec_MatchingParentIntValueSpec": {
      "id": "GoogleCloudMlV1_StudyConfigParameterSpec_MatchingParentIntValueSpec",
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "description": "Matches values of the parent parameter with type 'INTEGER'. All values must lie in `integer_value_spec` of parent parameter."
        }
      },
      "description": "Represents the spec to match integer values from parent parameter."
    },
    "GoogleCloudMlV1__HyperparameterOutput": {
      "id": "GoogleCloudMlV1__HyperparameterOutput",
      "description": "Represents the result of a single hyperparameter tuning trial from a training job. The TrainingOutput object that is returned on successful completion of a training job with hyperparameter tuning includes a list of HyperparameterOutput objects, one for each successful trial.",
      "type": "object",
      "properties": {
        "state": {
          "enumDescriptions": [
            "The job state is unspecified.",
            "The job has been just created and processing has not yet begun.",
            "The service is preparing to run the job.",
            "The job is in progress.",
            "The job completed successfully.",
            "The job failed. `error_message` should contain the details of the failure.",
            "The job is being cancelled. `error_message` should describe the reason for the cancellation.",
            "The job has been cancelled. `error_message` should describe the reason for the cancellation."
          ],
          "type": "string",
          "description": "Output only. The detailed state of the trial.",
          "enum": [
            "STATE_UNSPECIFIED",
            "QUEUED",
            "PREPARING",
            "RUNNING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLING",
            "CANCELLED"
          ]
        },
        "allMetrics": {
          "items": {
            "$ref": "GoogleCloudMlV1_HyperparameterOutput_HyperparameterMetric"
          },
          "description": "All recorded object metrics for this trial. This field is not currently populated.",
          "type": "array"
        },
        "isTrialStoppedEarly": {
          "description": "True if the trial is stopped early.",
          "type": "boolean"
        },
        "trialId": {
          "description": "The trial id for these results.",
          "type": "string"
        },
        "finalMetric": {
          "$ref": "GoogleCloudMlV1_HyperparameterOutput_HyperparameterMetric",
          "description": "The final objective metric seen for this trial."
        },
        "hyperparameters": {
          "type": "object",
          "description": "The hyperparameters given to this trial.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "builtInAlgorithmOutput": {
          "$ref": "GoogleCloudMlV1__BuiltInAlgorithmOutput",
          "description": "Details related to built-in algorithms jobs. Only set for trials of built-in algorithms jobs that have succeeded."
        },
        "startTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Start time for the trial."
        },
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. End time for the trial."
        }
      }
    },
    "GoogleCloudMlV1__ListVersionsResponse": {
      "properties": {
        "versions": {
          "description": "The list of versions.",
          "items": {
            "$ref": "GoogleCloudMlV1__Version"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "Optional. Pass this token as the `page_token` field of the request for a subsequent call.",
          "type": "string"
        }
      },
      "description": "Response message for the ListVersions method.",
      "id": "GoogleCloudMlV1__ListVersionsResponse",
      "type": "object"
    },
    "GoogleCloudMlV1__SuggestTrialsResponse": {
      "id": "GoogleCloudMlV1__SuggestTrialsResponse",
      "type": "object",
      "properties": {
        "trials": {
          "items": {
            "$ref": "GoogleCloudMlV1__Trial"
          },
          "description": "A list of trials.",
          "type": "array"
        },
        "startTime": {
          "type": "string",
          "description": "The time at which the operation was started.",
          "format": "google-datetime"
        },
        "studyState": {
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "INACTIVE",
            "COMPLETED"
          ],
          "description": "The state of the study.",
          "enumDescriptions": [
            "The study state is unspecified.",
            "The study is active.",
            "The study is stopped due to an internal error.",
            "The study is done when the service exhausts the parameter search space or max_trial_count is reached."
          ],
          "type": "string"
        },
        "endTime": {
          "description": "The time at which operation processing completed.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "description": "This message will be placed in the response field of a completed google.longrunning.Operation associated with a SuggestTrials request."
    },
    "GoogleCloudMlV1__SampledShapleyAttribution": {
      "properties": {
        "numPaths": {
          "format": "int32",
          "description": "The number of feature permutations to consider when approximating the Shapley values.",
          "type": "integer"
        }
      },
      "id": "GoogleCloudMlV1__SampledShapleyAttribution",
      "description": "An attribution method that approximates Shapley values for features that contribute to the label being predicted. A sampling strategy is used to approximate the value rather than considering all subsets of features.",
      "type": "object"
    },
    "GoogleCloudMlV1_Measurement_Metric": {
      "description": "A message representing a metric in the measurement.",
      "id": "GoogleCloudMlV1_Measurement_Metric",
      "properties": {
        "value": {
          "type": "number",
          "description": "Required. The value for this metric.",
          "format": "double"
        },
        "metric": {
          "type": "string",
          "description": "Required. Metric name."
        }
      },
      "type": "object"
    },
    "GoogleCloudMlV1__ListJobsResponse": {
      "id": "GoogleCloudMlV1__ListJobsResponse",
      "properties": {
        "jobs": {
          "items": {
            "$ref": "GoogleCloudMlV1__Job"
          },
          "description": "The list of jobs.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "Optional. Pass this token as the `page_token` field of the request for a subsequent call.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Response message for the ListJobs method."
    },
    "GoogleCloudMlV1__SetDefaultVersionRequest": {
      "properties": {},
      "id": "GoogleCloudMlV1__SetDefaultVersionRequest",
      "description": "Request message for the SetDefaultVersion request.",
      "type": "object"
    },
    "GoogleApi__HttpBody": {
      "id": "GoogleApi__HttpBody",
      "description": "Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged.",
      "type": "object",
      "properties": {
        "contentType": {
          "type": "string",
          "description": "The HTTP Content-Type header value specifying the content type of the body."
        },
        "extensions": {
          "type": "array",
          "description": "Application specific response metadata. Must be set in the first response for streaming APIs.",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          }
        },
        "data": {
          "description": "The HTTP request/response body as raw binary.",
          "format": "byte",
          "type": "string"
        }
      }
    },
    "GoogleCloudMlV1_StudyConfig_ParameterSpec": {
      "type": "object",
      "id": "GoogleCloudMlV1_StudyConfig_ParameterSpec",
      "properties": {
        "parentIntValues": {
          "$ref": "GoogleCloudMlV1_StudyConfigParameterSpec_MatchingParentIntValueSpec"
        },
        "doubleValueSpec": {
          "description": "The value spec for a 'DOUBLE' parameter.",
          "$ref": "GoogleCloudMlV1_StudyConfigParameterSpec_DoubleValueSpec"
        },
        "categoricalValueSpec": {
          "description": "The value spec for a 'CATEGORICAL' parameter.",
          "$ref": "GoogleCloudMlV1_StudyConfigParameterSpec_CategoricalValueSpec"
        },
        "parentDiscreteValues": {
          "$ref": "GoogleCloudMlV1_StudyConfigParameterSpec_MatchingParentDiscreteValueSpec"
        },
        "childParameterSpecs": {
          "items": {
            "$ref": "GoogleCloudMlV1_StudyConfig_ParameterSpec"
          },
          "type": "array",
          "description": "A child node is active if the parameter's value matches the child node's matching_parent_values. If two items in child_parameter_specs have the same name, they must have disjoint matching_parent_values."
        },
        "parameter": {
          "description": "Required. The parameter name must be unique amongst all ParameterSpecs.",
          "type": "string"
        },
        "scaleType": {
          "enumDescriptions": [
            "By default, no scaling is applied.",
            "Scales the feasible space to (0, 1) linearly.",
            "Scales the feasible space logarithmically to (0, 1). The entire feasible space must be strictly positive.",
            "Scales the feasible space \"reverse\" logarithmically to (0, 1). The result is that values close to the top of the feasible space are spread out more than points near the bottom. The entire feasible space must be strictly positive."
          ],
          "type": "string",
          "description": "How the parameter should be scaled. Leave unset for categorical parameters.",
          "enum": [
            "SCALE_TYPE_UNSPECIFIED",
            "UNIT_LINEAR_SCALE",
            "UNIT_LOG_SCALE",
            "UNIT_REVERSE_LOG_SCALE"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "PARAMETER_TYPE_UNSPECIFIED",
            "DOUBLE",
            "INTEGER",
            "CATEGORICAL",
            "DISCRETE"
          ],
          "enumDescriptions": [
            "You must specify a valid type. Using this unspecified type will result in an error.",
            "Type for real-valued parameters.",
            "Type for integral parameters.",
            "The parameter is categorical, with a value chosen from the categories field.",
            "The parameter is real valued, with a fixed set of feasible points. If `type==DISCRETE`, feasible_points must be provided, and {`min_value`, `max_value`} will be ignored."
          ],
          "description": "Required. The type of the parameter."
        },
        "discreteValueSpec": {
          "description": "The value spec for a 'DISCRETE' parameter.",
          "$ref": "GoogleCloudMlV1_StudyConfigParameterSpec_DiscreteValueSpec"
        },
        "parentCategoricalValues": {
          "$ref": "GoogleCloudMlV1_StudyConfigParameterSpec_MatchingParentCategoricalValueSpec"
        },
        "integerValueSpec": {
          "$ref": "GoogleCloudMlV1_StudyConfigParameterSpec_IntegerValueSpec",
          "description": "The value spec for an 'INTEGER' parameter."
        }
      },
      "description": "Represents a single parameter to optimize."
    },
    "GoogleIamV1__AuditLogConfig": {
      "properties": {
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "logType": {
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ],
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "type": "string",
          "description": "The log type that this config enables."
        }
      },
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "type": "object",
      "id": "GoogleIamV1__AuditLogConfig"
    },
    "GoogleCloudMlV1_StudyConfigParameterSpec_MatchingParentDiscreteValueSpec": {
      "properties": {
        "values": {
          "description": "Matches values of the parent parameter with type 'DISCRETE'. All values must exist in `discrete_value_spec` of parent parameter.",
          "items": {
            "format": "double",
            "type": "number"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudMlV1_StudyConfigParameterSpec_MatchingParentDiscreteValueSpec",
      "description": "Represents the spec to match discrete values from parent parameter.",
      "type": "object"
    },
    "GoogleCloudMlV1__CheckTrialEarlyStoppingStateMetatdata": {
      "type": "object",
      "id": "GoogleCloudMlV1__CheckTrialEarlyStoppingStateMetatdata",
      "properties": {
        "study": {
          "type": "string",
          "description": "The name of the study that the trial belongs to."
        },
        "createTime": {
          "format": "google-datetime",
          "description": "The time at which the operation was submitted.",
          "type": "string"
        },
        "trial": {
          "description": "The trial name.",
          "type": "string"
        }
      },
      "description": "This message will be placed in the metadata field of a google.longrunning.Operation associated with a CheckTrialEarlyStoppingState request."
    },
    "GoogleCloudMlV1__CheckTrialEarlyStoppingStateResponse": {
      "description": "The message will be placed in the response field of a completed google.longrunning.Operation associated with a CheckTrialEarlyStoppingState request.",
      "properties": {
        "startTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time at which the operation was started."
        },
        "shouldStop": {
          "description": "True if the Trial should stop.",
          "type": "boolean"
        },
        "endTime": {
          "description": "The time at which operation processing completed.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "id": "GoogleCloudMlV1__CheckTrialEarlyStoppingStateResponse",
      "type": "object"
    },
    "GoogleCloudMlV1_StudyConfig_MetricSpec": {
      "id": "GoogleCloudMlV1_StudyConfig_MetricSpec",
      "description": "Represents a metric to optimize.",
      "type": "object",
      "properties": {
        "metric": {
          "type": "string",
          "description": "Required. The name of the metric."
        },
        "goal": {
          "type": "string",
          "description": "Required. The optimization goal of the metric.",
          "enumDescriptions": [
            "Goal Type will default to maximize.",
            "Maximize the goal metric.",
            "Minimize the goal metric."
          ],
          "enum": [
            "GOAL_TYPE_UNSPECIFIED",
            "MAXIMIZE",
            "MINIMIZE"
          ]
        }
      }
    },
    "GoogleIamV1__TestIamPermissionsRequest": {
      "id": "GoogleIamV1__TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "items": {
            "type": "string"
          },
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "type": "array"
        }
      }
    },
    "GoogleCloudMlV1__ExplanationConfig": {
      "id": "GoogleCloudMlV1__ExplanationConfig",
      "properties": {
        "xraiAttribution": {
          "$ref": "GoogleCloudMlV1__XraiAttribution",
          "description": "Attributes credit by computing the XRAI taking advantage of the model's fully differentiable structure. Refer to this paper for more details: https://arxiv.org/abs/1906.02825 Currently only implemented for models with natural image inputs."
        },
        "sampledShapleyAttribution": {
          "$ref": "GoogleCloudMlV1__SampledShapleyAttribution",
          "description": "An attribution method that approximates Shapley values for features that contribute to the label being predicted. A sampling strategy is used to approximate the value rather than considering all subsets of features."
        },
        "integratedGradientsAttribution": {
          "description": "Attributes credit by computing the Aumann-Shapley value taking advantage of the model's fully differentiable structure. Refer to this paper for more details: https://arxiv.org/abs/1703.01365",
          "$ref": "GoogleCloudMlV1__IntegratedGradientsAttribution"
        }
      },
      "description": "Message holding configuration options for explaining model predictions. There are three feature attribution methods supported for TensorFlow models: integrated gradients, sampled Shapley, and XRAI. [Learn more about feature attributions.](/ai-platform/prediction/docs/ai-explanations/overview)",
      "type": "object"
    },
    "GoogleCloudMlV1__ContainerSpec": {
      "id": "GoogleCloudMlV1__ContainerSpec",
      "type": "object",
      "properties": {
        "ports": {
          "description": "Immutable. List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network.",
          "items": {
            "$ref": "GoogleCloudMlV1__ContainerPort"
          },
          "type": "array"
        },
        "args": {
          "items": {
            "type": "string"
          },
          "description": "Immutable. Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
          "type": "array"
        },
        "command": {
          "description": "Immutable. Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "image": {
          "type": "string",
          "description": "Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images"
        },
        "env": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudMlV1__EnvVar"
          },
          "description": "Immutable. List of environment variables to set in the container."
        }
      },
      "description": "Specify a custom container to deploy. Our ContainerSpec is a subset of the Kubernetes Container specification. https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.10/#container-v1-core"
    },
    "GoogleCloudMlV1__PredictRequest": {
      "type": "object",
      "description": "Request for predictions to be issued against a trained model.",
      "properties": {
        "httpBody": {
          "$ref": "GoogleApi__HttpBody",
          "description": " Required. The prediction request body. Refer to the [request body details section](#request-body-details) for more information on how to structure your request."
        }
      },
      "id": "GoogleCloudMlV1__PredictRequest"
    },
    "GoogleCloudMlV1__AcceleratorConfig": {
      "properties": {
        "count": {
          "type": "string",
          "description": "The number of accelerators to attach to each machine running the job.",
          "format": "int64"
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified accelerator type. Default to no GPU.",
            "Nvidia Tesla K80 GPU.",
            "Nvidia Tesla P100 GPU.",
            "Nvidia Tesla V100 GPU.",
            "Nvidia Tesla P4 GPU.",
            "Nvidia Tesla T4 GPU.",
            "TPU v2.",
            "TPU v3."
          ],
          "enum": [
            "ACCELERATOR_TYPE_UNSPECIFIED",
            "NVIDIA_TESLA_K80",
            "NVIDIA_TESLA_P100",
            "NVIDIA_TESLA_V100",
            "NVIDIA_TESLA_P4",
            "NVIDIA_TESLA_T4",
            "TPU_V2",
            "TPU_V3"
          ],
          "description": "The type of accelerator to use."
        }
      },
      "id": "GoogleCloudMlV1__AcceleratorConfig",
      "type": "object",
      "description": "Represents a hardware accelerator request config. Note that the AcceleratorConfig can be used in both Jobs and Versions. Learn more about [accelerators for training](/ml-engine/docs/using-gpus) and [accelerators for online prediction](/ml-engine/docs/machine-types-online-prediction#gpus)."
    },
    "GoogleCloudMlV1__TrainingOutput": {
      "description": "Represents results of a training job. Output only.",
      "properties": {
        "isHyperparameterTuningJob": {
          "description": "Whether this job is a hyperparameter tuning job.",
          "type": "boolean"
        },
        "trials": {
          "type": "array",
          "description": "Results for individual Hyperparameter trials. Only set for hyperparameter tuning jobs.",
          "items": {
            "$ref": "GoogleCloudMlV1__HyperparameterOutput"
          }
        },
        "hyperparameterMetricTag": {
          "description": "The TensorFlow summary tag name used for optimizing hyperparameter tuning trials. See [`HyperparameterSpec.hyperparameterMetricTag`](#HyperparameterSpec.FIELDS.hyperparameter_metric_tag) for more information. Only set for hyperparameter tuning jobs.",
          "type": "string"
        },
        "consumedMLUnits": {
          "description": "The amount of ML units consumed by the job.",
          "type": "number",
          "format": "double"
        },
        "completedTrialCount": {
          "type": "string",
          "format": "int64",
          "description": "The number of hyperparameter tuning trials that completed successfully. Only set for hyperparameter tuning jobs."
        },
        "builtInAlgorithmOutput": {
          "description": "Details related to built-in algorithms jobs. Only set for built-in algorithms jobs.",
          "$ref": "GoogleCloudMlV1__BuiltInAlgorithmOutput"
        },
        "isBuiltInAlgorithmJob": {
          "type": "boolean",
          "description": "Whether this job is a built-in Algorithm job."
        }
      },
      "id": "GoogleCloudMlV1__TrainingOutput",
      "type": "object"
    }
  }
}
