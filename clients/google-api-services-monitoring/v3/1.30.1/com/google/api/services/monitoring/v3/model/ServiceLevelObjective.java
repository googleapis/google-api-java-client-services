/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.monitoring.v3.model;

/**
 * A Service-Level Objective (SLO) describes a level of desired good service. It consists of a
 * service-level indicator (SLI), a performance goal, and a period over which the objective is to be
 * evaluated against that goal. The SLO can use SLIs defined in a number of different manners.
 * Typical SLOs might include "99% of requests in each rolling week have latency below 200
 * milliseconds" or "99.5% of requests in each calendar month return successfully."
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Monitoring API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ServiceLevelObjective extends com.google.api.client.json.GenericJson {

  /**
   * A calendar period, semantically "since the start of the current ". At this time, only DAY,
   * WEEK, FORTNIGHT, and MONTH are supported.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String calendarPeriod;

  /**
   * Name used for UI elements listing this SLO.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * The fraction of service that must be good in order for this objective to be met. 0 < goal <=
   * 0.999.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double goal;

  /**
   * Resource name for this ServiceLevelObjective. The format is:
   * projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID]/serviceLevelObjectives/[SLO_NAME]
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * A rolling time period, semantically "in the past ". Must be an integer multiple of 1 day no
   * larger than 30 days.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String rollingPeriod;

  /**
   * The definition of good service, used to measure and calculate the quality of the Service's
   * performance with respect to a single aspect of service quality.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ServiceLevelIndicator serviceLevelIndicator;

  /**
   * A calendar period, semantically "since the start of the current ". At this time, only DAY,
   * WEEK, FORTNIGHT, and MONTH are supported.
   * @return value or {@code null} for none
   */
  public java.lang.String getCalendarPeriod() {
    return calendarPeriod;
  }

  /**
   * A calendar period, semantically "since the start of the current ". At this time, only DAY,
   * WEEK, FORTNIGHT, and MONTH are supported.
   * @param calendarPeriod calendarPeriod or {@code null} for none
   */
  public ServiceLevelObjective setCalendarPeriod(java.lang.String calendarPeriod) {
    this.calendarPeriod = calendarPeriod;
    return this;
  }

  /**
   * Name used for UI elements listing this SLO.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Name used for UI elements listing this SLO.
   * @param displayName displayName or {@code null} for none
   */
  public ServiceLevelObjective setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * The fraction of service that must be good in order for this objective to be met. 0 < goal <=
   * 0.999.
   * @return value or {@code null} for none
   */
  public java.lang.Double getGoal() {
    return goal;
  }

  /**
   * The fraction of service that must be good in order for this objective to be met. 0 < goal <=
   * 0.999.
   * @param goal goal or {@code null} for none
   */
  public ServiceLevelObjective setGoal(java.lang.Double goal) {
    this.goal = goal;
    return this;
  }

  /**
   * Resource name for this ServiceLevelObjective. The format is:
   * projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID]/serviceLevelObjectives/[SLO_NAME]
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Resource name for this ServiceLevelObjective. The format is:
   * projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID]/serviceLevelObjectives/[SLO_NAME]
   * @param name name or {@code null} for none
   */
  public ServiceLevelObjective setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * A rolling time period, semantically "in the past ". Must be an integer multiple of 1 day no
   * larger than 30 days.
   * @return value or {@code null} for none
   */
  public String getRollingPeriod() {
    return rollingPeriod;
  }

  /**
   * A rolling time period, semantically "in the past ". Must be an integer multiple of 1 day no
   * larger than 30 days.
   * @param rollingPeriod rollingPeriod or {@code null} for none
   */
  public ServiceLevelObjective setRollingPeriod(String rollingPeriod) {
    this.rollingPeriod = rollingPeriod;
    return this;
  }

  /**
   * The definition of good service, used to measure and calculate the quality of the Service's
   * performance with respect to a single aspect of service quality.
   * @return value or {@code null} for none
   */
  public ServiceLevelIndicator getServiceLevelIndicator() {
    return serviceLevelIndicator;
  }

  /**
   * The definition of good service, used to measure and calculate the quality of the Service's
   * performance with respect to a single aspect of service quality.
   * @param serviceLevelIndicator serviceLevelIndicator or {@code null} for none
   */
  public ServiceLevelObjective setServiceLevelIndicator(ServiceLevelIndicator serviceLevelIndicator) {
    this.serviceLevelIndicator = serviceLevelIndicator;
    return this;
  }

  @Override
  public ServiceLevelObjective set(String fieldName, Object value) {
    return (ServiceLevelObjective) super.set(fieldName, value);
  }

  @Override
  public ServiceLevelObjective clone() {
    return (ServiceLevelObjective) super.clone();
  }

}
