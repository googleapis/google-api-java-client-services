/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.chromemanagement.v1.model;

/**
 * Information of a display device.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Chrome Management API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleChromeManagementV1DisplayDevice extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Display height in millimeters.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer displayHeightMm;

  /**
   * Output only. Display device name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Output only. Display width in millimeters.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer displayWidthMm;

  /**
   * Output only. Is display internal or not.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean internal;

  /**
   * Output only. Year of manufacture.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer manufactureYear;

  /**
   * Output only. Three letter manufacturer ID.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String manufacturerId;

  /**
   * Output only. Manufacturer product code.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer modelId;

  /**
   * Output only. Display height in millimeters.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getDisplayHeightMm() {
    return displayHeightMm;
  }

  /**
   * Output only. Display height in millimeters.
   * @param displayHeightMm displayHeightMm or {@code null} for none
   */
  public GoogleChromeManagementV1DisplayDevice setDisplayHeightMm(java.lang.Integer displayHeightMm) {
    this.displayHeightMm = displayHeightMm;
    return this;
  }

  /**
   * Output only. Display device name.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Output only. Display device name.
   * @param displayName displayName or {@code null} for none
   */
  public GoogleChromeManagementV1DisplayDevice setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Output only. Display width in millimeters.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getDisplayWidthMm() {
    return displayWidthMm;
  }

  /**
   * Output only. Display width in millimeters.
   * @param displayWidthMm displayWidthMm or {@code null} for none
   */
  public GoogleChromeManagementV1DisplayDevice setDisplayWidthMm(java.lang.Integer displayWidthMm) {
    this.displayWidthMm = displayWidthMm;
    return this;
  }

  /**
   * Output only. Is display internal or not.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getInternal() {
    return internal;
  }

  /**
   * Output only. Is display internal or not.
   * @param internal internal or {@code null} for none
   */
  public GoogleChromeManagementV1DisplayDevice setInternal(java.lang.Boolean internal) {
    this.internal = internal;
    return this;
  }

  /**
   * Output only. Year of manufacture.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getManufactureYear() {
    return manufactureYear;
  }

  /**
   * Output only. Year of manufacture.
   * @param manufactureYear manufactureYear or {@code null} for none
   */
  public GoogleChromeManagementV1DisplayDevice setManufactureYear(java.lang.Integer manufactureYear) {
    this.manufactureYear = manufactureYear;
    return this;
  }

  /**
   * Output only. Three letter manufacturer ID.
   * @return value or {@code null} for none
   */
  public java.lang.String getManufacturerId() {
    return manufacturerId;
  }

  /**
   * Output only. Three letter manufacturer ID.
   * @param manufacturerId manufacturerId or {@code null} for none
   */
  public GoogleChromeManagementV1DisplayDevice setManufacturerId(java.lang.String manufacturerId) {
    this.manufacturerId = manufacturerId;
    return this;
  }

  /**
   * Output only. Manufacturer product code.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getModelId() {
    return modelId;
  }

  /**
   * Output only. Manufacturer product code.
   * @param modelId modelId or {@code null} for none
   */
  public GoogleChromeManagementV1DisplayDevice setModelId(java.lang.Integer modelId) {
    this.modelId = modelId;
    return this;
  }

  @Override
  public GoogleChromeManagementV1DisplayDevice set(String fieldName, Object value) {
    return (GoogleChromeManagementV1DisplayDevice) super.set(fieldName, value);
  }

  @Override
  public GoogleChromeManagementV1DisplayDevice clone() {
    return (GoogleChromeManagementV1DisplayDevice) super.clone();
  }

}
