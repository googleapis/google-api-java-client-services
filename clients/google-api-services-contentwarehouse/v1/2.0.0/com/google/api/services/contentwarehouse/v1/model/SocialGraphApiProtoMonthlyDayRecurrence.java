/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Pattern for a MONTHLY recurrence. This Monthly reccurence supports: 1. Absolute days of the month
 * (i.e. the 1st and 15th) 2. Relative day from the end of the month (i.e. -1 for last day, -2 for
 * second-to-last day). Used in PeopleAPI layers + FBS/ContactsService (not in ProfileService)
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class SocialGraphApiProtoMonthlyDayRecurrence extends com.google.api.client.json.GenericJson {

  /**
   * Absolute day of the month (if positive) or relative day from the end of the month (if
   * negative). Example: 2nd and 20th of the month [2, 20]. Example: Last day of the month [-1].
   * Positive values should correspond to actual calendar day number (indexing starts at 1).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.Integer> monthDay;

  /**
   * If true, month_day beyond the end of month (i.e. month_day=31 in February) will default to the
   * last day of the month.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean useLastDayIfMonthDayPastEnd;

  /**
   * Absolute day of the month (if positive) or relative day from the end of the month (if
   * negative). Example: 2nd and 20th of the month [2, 20]. Example: Last day of the month [-1].
   * Positive values should correspond to actual calendar day number (indexing starts at 1).
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Integer> getMonthDay() {
    return monthDay;
  }

  /**
   * Absolute day of the month (if positive) or relative day from the end of the month (if
   * negative). Example: 2nd and 20th of the month [2, 20]. Example: Last day of the month [-1].
   * Positive values should correspond to actual calendar day number (indexing starts at 1).
   * @param monthDay monthDay or {@code null} for none
   */
  public SocialGraphApiProtoMonthlyDayRecurrence setMonthDay(java.util.List<java.lang.Integer> monthDay) {
    this.monthDay = monthDay;
    return this;
  }

  /**
   * If true, month_day beyond the end of month (i.e. month_day=31 in February) will default to the
   * last day of the month.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getUseLastDayIfMonthDayPastEnd() {
    return useLastDayIfMonthDayPastEnd;
  }

  /**
   * If true, month_day beyond the end of month (i.e. month_day=31 in February) will default to the
   * last day of the month.
   * @param useLastDayIfMonthDayPastEnd useLastDayIfMonthDayPastEnd or {@code null} for none
   */
  public SocialGraphApiProtoMonthlyDayRecurrence setUseLastDayIfMonthDayPastEnd(java.lang.Boolean useLastDayIfMonthDayPastEnd) {
    this.useLastDayIfMonthDayPastEnd = useLastDayIfMonthDayPastEnd;
    return this;
  }

  @Override
  public SocialGraphApiProtoMonthlyDayRecurrence set(String fieldName, Object value) {
    return (SocialGraphApiProtoMonthlyDayRecurrence) super.set(fieldName, value);
  }

  @Override
  public SocialGraphApiProtoMonthlyDayRecurrence clone() {
    return (SocialGraphApiProtoMonthlyDayRecurrence) super.clone();
  }

}
