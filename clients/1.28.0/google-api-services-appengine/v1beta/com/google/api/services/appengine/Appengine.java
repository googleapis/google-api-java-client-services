/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.appengine;

/**
 * Service definition for Appengine (v1beta).
 *
 * <p>
 * Provisions and manages developers' App Engine applications.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/appengine/docs/admin-api/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link AppengineRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Appengine extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.28.0 of the App Engine Admin API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://appengine.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Appengine(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Appengine(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Apps collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Appengine appengine = new Appengine(...);}
   *   {@code Appengine.Apps.List request = appengine.apps().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Apps apps() {
    return new Apps();
  }

  /**
   * The "apps" collection of methods.
   */
  public class Apps {

    /**
     * Creates an App Engine application for a Google Cloud Platform project. Required fields: id - The
     * ID of the target Cloud Platform project. location - The region
     * (https://cloud.google.com/appengine/docs/locations) where you want the App Engine application
     * located.For more information about App Engine applications, see Managing Projects, Applications,
     * and Billing (https://cloud.google.com/appengine/docs/standard/python/console/).
     *
     * Create a request for the method "apps.create".
     *
     * This request holds the parameters needed by the appengine server.  After setting any optional
     * parameters, call the {@link Create#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.appengine.model.Application}
     * @return the request
     */
    public Create create(com.google.api.services.appengine.model.Application content) throws java.io.IOException {
      Create result = new Create(content);
      initialize(result);
      return result;
    }

    public class Create extends AppengineRequest<com.google.api.services.appengine.model.Operation> {

      private static final String REST_PATH = "v1beta/apps";

      /**
       * Creates an App Engine application for a Google Cloud Platform project. Required fields: id -
       * The ID of the target Cloud Platform project. location - The region
       * (https://cloud.google.com/appengine/docs/locations) where you want the App Engine application
       * located.For more information about App Engine applications, see Managing Projects,
       * Applications, and Billing (https://cloud.google.com/appengine/docs/standard/python/console/).
       *
       * Create a request for the method "apps.create".
       *
       * This request holds the parameters needed by the the appengine server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       * <p> {@link
       * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.appengine.model.Application}
       * @since 1.13
       */
      protected Create(com.google.api.services.appengine.model.Application content) {
        super(Appengine.this, "POST", REST_PATH, content, com.google.api.services.appengine.model.Operation.class);
      }

      @Override
      public Create set$Xgafv(java.lang.String $Xgafv) {
        return (Create) super.set$Xgafv($Xgafv);
      }

      @Override
      public Create setAccessToken(java.lang.String accessToken) {
        return (Create) super.setAccessToken(accessToken);
      }

      @Override
      public Create setAlt(java.lang.String alt) {
        return (Create) super.setAlt(alt);
      }

      @Override
      public Create setCallback(java.lang.String callback) {
        return (Create) super.setCallback(callback);
      }

      @Override
      public Create setFields(java.lang.String fields) {
        return (Create) super.setFields(fields);
      }

      @Override
      public Create setKey(java.lang.String key) {
        return (Create) super.setKey(key);
      }

      @Override
      public Create setOauthToken(java.lang.String oauthToken) {
        return (Create) super.setOauthToken(oauthToken);
      }

      @Override
      public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Create) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Create setQuotaUser(java.lang.String quotaUser) {
        return (Create) super.setQuotaUser(quotaUser);
      }

      @Override
      public Create setUploadType(java.lang.String uploadType) {
        return (Create) super.setUploadType(uploadType);
      }

      @Override
      public Create setUploadProtocol(java.lang.String uploadProtocol) {
        return (Create) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public Create set(String parameterName, Object value) {
        return (Create) super.set(parameterName, value);
      }
    }
    /**
     * Gets information about an application.
     *
     * Create a request for the method "apps.get".
     *
     * This request holds the parameters needed by the appengine server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param appsId Part of `name`. Name of the Application resource to get. Example: apps/myapp.
     * @return the request
     */
    public Get get(java.lang.String appsId) throws java.io.IOException {
      Get result = new Get(appsId);
      initialize(result);
      return result;
    }

    public class Get extends AppengineRequest<com.google.api.services.appengine.model.Application> {

      private static final String REST_PATH = "v1beta/apps/{appsId}";

      /**
       * Gets information about an application.
       *
       * Create a request for the method "apps.get".
       *
       * This request holds the parameters needed by the the appengine server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
       * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param appsId Part of `name`. Name of the Application resource to get. Example: apps/myapp.
       * @since 1.13
       */
      protected Get(java.lang.String appsId) {
        super(Appengine.this, "GET", REST_PATH, null, com.google.api.services.appengine.model.Application.class);
        this.appsId = com.google.api.client.util.Preconditions.checkNotNull(appsId, "Required parameter appsId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /** Part of `name`. Name of the Application resource to get. Example: apps/myapp. */
      @com.google.api.client.util.Key
      private java.lang.String appsId;

      /** Part of `name`. Name of the Application resource to get. Example: apps/myapp.
       */
      public java.lang.String getAppsId() {
        return appsId;
      }

      /** Part of `name`. Name of the Application resource to get. Example: apps/myapp. */
      public Get setAppsId(java.lang.String appsId) {
        this.appsId = appsId;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Updates the specified Application resource. You can update the following fields: auth_domain -
     * Google authentication domain for controlling user access to the application.
     * default_cookie_expiration - Cookie expiration policy for the application.
     *
     * Create a request for the method "apps.patch".
     *
     * This request holds the parameters needed by the appengine server.  After setting any optional
     * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param appsId Part of `name`. Name of the Application resource to update. Example: apps/myapp.
     * @param content the {@link com.google.api.services.appengine.model.Application}
     * @return the request
     */
    public Patch patch(java.lang.String appsId, com.google.api.services.appengine.model.Application content) throws java.io.IOException {
      Patch result = new Patch(appsId, content);
      initialize(result);
      return result;
    }

    public class Patch extends AppengineRequest<com.google.api.services.appengine.model.Operation> {

      private static final String REST_PATH = "v1beta/apps/{appsId}";

      /**
       * Updates the specified Application resource. You can update the following fields: auth_domain -
       * Google authentication domain for controlling user access to the application.
       * default_cookie_expiration - Cookie expiration policy for the application.
       *
       * Create a request for the method "apps.patch".
       *
       * This request holds the parameters needed by the the appengine server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       * <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param appsId Part of `name`. Name of the Application resource to update. Example: apps/myapp.
       * @param content the {@link com.google.api.services.appengine.model.Application}
       * @since 1.13
       */
      protected Patch(java.lang.String appsId, com.google.api.services.appengine.model.Application content) {
        super(Appengine.this, "PATCH", REST_PATH, content, com.google.api.services.appengine.model.Operation.class);
        this.appsId = com.google.api.client.util.Preconditions.checkNotNull(appsId, "Required parameter appsId must be specified.");
      }

      @Override
      public Patch set$Xgafv(java.lang.String $Xgafv) {
        return (Patch) super.set$Xgafv($Xgafv);
      }

      @Override
      public Patch setAccessToken(java.lang.String accessToken) {
        return (Patch) super.setAccessToken(accessToken);
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setCallback(java.lang.String callback) {
        return (Patch) super.setCallback(callback);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUploadType(java.lang.String uploadType) {
        return (Patch) super.setUploadType(uploadType);
      }

      @Override
      public Patch setUploadProtocol(java.lang.String uploadProtocol) {
        return (Patch) super.setUploadProtocol(uploadProtocol);
      }

      /** Part of `name`. Name of the Application resource to update. Example: apps/myapp. */
      @com.google.api.client.util.Key
      private java.lang.String appsId;

      /** Part of `name`. Name of the Application resource to update. Example: apps/myapp.
       */
      public java.lang.String getAppsId() {
        return appsId;
      }

      /** Part of `name`. Name of the Application resource to update. Example: apps/myapp. */
      public Patch setAppsId(java.lang.String appsId) {
        this.appsId = appsId;
        return this;
      }

      /** Standard field mask for the set of fields to be updated. */
      @com.google.api.client.util.Key
      private String updateMask;

      /** Standard field mask for the set of fields to be updated.
       */
      public String getUpdateMask() {
        return updateMask;
      }

      /** Standard field mask for the set of fields to be updated. */
      public Patch setUpdateMask(String updateMask) {
        this.updateMask = updateMask;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }
    /**
     * Recreates the required App Engine features for the specified App Engine application, for example
     * a Cloud Storage bucket or App Engine service account. Use this method if you receive an error
     * message about a missing feature, for example, Error retrieving the App Engine service account.
     *
     * Create a request for the method "apps.repair".
     *
     * This request holds the parameters needed by the appengine server.  After setting any optional
     * parameters, call the {@link Repair#execute()} method to invoke the remote operation.
     *
     * @param appsId Part of `name`. Name of the application to repair. Example: apps/myapp
     * @param content the {@link com.google.api.services.appengine.model.RepairApplicationRequest}
     * @return the request
     */
    public Repair repair(java.lang.String appsId, com.google.api.services.appengine.model.RepairApplicationRequest content) throws java.io.IOException {
      Repair result = new Repair(appsId, content);
      initialize(result);
      return result;
    }

    public class Repair extends AppengineRequest<com.google.api.services.appengine.model.Operation> {

      private static final String REST_PATH = "v1beta/apps/{appsId}:repair";

      /**
       * Recreates the required App Engine features for the specified App Engine application, for
       * example a Cloud Storage bucket or App Engine service account. Use this method if you receive an
       * error message about a missing feature, for example, Error retrieving the App Engine service
       * account.
       *
       * Create a request for the method "apps.repair".
       *
       * This request holds the parameters needed by the the appengine server.  After setting any
       * optional parameters, call the {@link Repair#execute()} method to invoke the remote operation.
       * <p> {@link
       * Repair#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param appsId Part of `name`. Name of the application to repair. Example: apps/myapp
       * @param content the {@link com.google.api.services.appengine.model.RepairApplicationRequest}
       * @since 1.13
       */
      protected Repair(java.lang.String appsId, com.google.api.services.appengine.model.RepairApplicationRequest content) {
        super(Appengine.this, "POST", REST_PATH, content, com.google.api.services.appengine.model.Operation.class);
        this.appsId = com.google.api.client.util.Preconditions.checkNotNull(appsId, "Required parameter appsId must be specified.");
      }

      @Override
      public Repair set$Xgafv(java.lang.String $Xgafv) {
        return (Repair) super.set$Xgafv($Xgafv);
      }

      @Override
      public Repair setAccessToken(java.lang.String accessToken) {
        return (Repair) super.setAccessToken(accessToken);
      }

      @Override
      public Repair setAlt(java.lang.String alt) {
        return (Repair) super.setAlt(alt);
      }

      @Override
      public Repair setCallback(java.lang.String callback) {
        return (Repair) super.setCallback(callback);
      }

      @Override
      public Repair setFields(java.lang.String fields) {
        return (Repair) super.setFields(fields);
      }

      @Override
      public Repair setKey(java.lang.String key) {
        return (Repair) super.setKey(key);
      }

      @Override
      public Repair setOauthToken(java.lang.String oauthToken) {
        return (Repair) super.setOauthToken(oauthToken);
      }

      @Override
      public Repair setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Repair) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Repair setQuotaUser(java.lang.String quotaUser) {
        return (Repair) super.setQuotaUser(quotaUser);
      }

      @Override
      public Repair setUploadType(java.lang.String uploadType) {
        return (Repair) super.setUploadType(uploadType);
      }

      @Override
      public Repair setUploadProtocol(java.lang.String uploadProtocol) {
        return (Repair) super.setUploadProtocol(uploadProtocol);
      }

      /** Part of `name`. Name of the application to repair. Example: apps/myapp */
      @com.google.api.client.util.Key
      private java.lang.String appsId;

      /** Part of `name`. Name of the application to repair. Example: apps/myapp
       */
      public java.lang.String getAppsId() {
        return appsId;
      }

      /** Part of `name`. Name of the application to repair. Example: apps/myapp */
      public Repair setAppsId(java.lang.String appsId) {
        this.appsId = appsId;
        return this;
      }

      @Override
      public Repair set(String parameterName, Object value) {
        return (Repair) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the AuthorizedCertificates collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Appengine appengine = new Appengine(...);}
     *   {@code Appengine.AuthorizedCertificates.List request = appengine.authorizedCertificates().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public AuthorizedCertificates authorizedCertificates() {
      return new AuthorizedCertificates();
    }

    /**
     * The "authorizedCertificates" collection of methods.
     */
    public class AuthorizedCertificates {

      /**
       * Uploads the specified SSL certificate.
       *
       * Create a request for the method "authorizedCertificates.create".
       *
       * This request holds the parameters needed by the appengine server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param appsId Part of `parent`. Name of the parent Application resource. Example: apps/myapp.
       * @param content the {@link com.google.api.services.appengine.model.AuthorizedCertificate}
       * @return the request
       */
      public Create create(java.lang.String appsId, com.google.api.services.appengine.model.AuthorizedCertificate content) throws java.io.IOException {
        Create result = new Create(appsId, content);
        initialize(result);
        return result;
      }

      public class Create extends AppengineRequest<com.google.api.services.appengine.model.AuthorizedCertificate> {

        private static final String REST_PATH = "v1beta/apps/{appsId}/authorizedCertificates";

        /**
         * Uploads the specified SSL certificate.
         *
         * Create a request for the method "authorizedCertificates.create".
         *
         * This request holds the parameters needed by the the appengine server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param appsId Part of `parent`. Name of the parent Application resource. Example: apps/myapp.
         * @param content the {@link com.google.api.services.appengine.model.AuthorizedCertificate}
         * @since 1.13
         */
        protected Create(java.lang.String appsId, com.google.api.services.appengine.model.AuthorizedCertificate content) {
          super(Appengine.this, "POST", REST_PATH, content, com.google.api.services.appengine.model.AuthorizedCertificate.class);
          this.appsId = com.google.api.client.util.Preconditions.checkNotNull(appsId, "Required parameter appsId must be specified.");
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** Part of `parent`. Name of the parent Application resource. Example: apps/myapp. */
        @com.google.api.client.util.Key
        private java.lang.String appsId;

        /** Part of `parent`. Name of the parent Application resource. Example: apps/myapp.
         */
        public java.lang.String getAppsId() {
          return appsId;
        }

        /** Part of `parent`. Name of the parent Application resource. Example: apps/myapp. */
        public Create setAppsId(java.lang.String appsId) {
          this.appsId = appsId;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes the specified SSL certificate.
       *
       * Create a request for the method "authorizedCertificates.delete".
       *
       * This request holds the parameters needed by the appengine server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param appsId Part of `name`. Name of the resource to delete. Example: apps/myapp/authorizedCertificates/12345.
       * @param authorizedCertificatesId Part of `name`. See documentation of `appsId`.
       * @return the request
       */
      public Delete delete(java.lang.String appsId, java.lang.String authorizedCertificatesId) throws java.io.IOException {
        Delete result = new Delete(appsId, authorizedCertificatesId);
        initialize(result);
        return result;
      }

      public class Delete extends AppengineRequest<com.google.api.services.appengine.model.Empty> {

        private static final String REST_PATH = "v1beta/apps/{appsId}/authorizedCertificates/{authorizedCertificatesId}";

        /**
         * Deletes the specified SSL certificate.
         *
         * Create a request for the method "authorizedCertificates.delete".
         *
         * This request holds the parameters needed by the the appengine server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param appsId Part of `name`. Name of the resource to delete. Example: apps/myapp/authorizedCertificates/12345.
         * @param authorizedCertificatesId Part of `name`. See documentation of `appsId`.
         * @since 1.13
         */
        protected Delete(java.lang.String appsId, java.lang.String authorizedCertificatesId) {
          super(Appengine.this, "DELETE", REST_PATH, null, com.google.api.services.appengine.model.Empty.class);
          this.appsId = com.google.api.client.util.Preconditions.checkNotNull(appsId, "Required parameter appsId must be specified.");
          this.authorizedCertificatesId = com.google.api.client.util.Preconditions.checkNotNull(authorizedCertificatesId, "Required parameter authorizedCertificatesId must be specified.");
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Part of `name`. Name of the resource to delete. Example:
         * apps/myapp/authorizedCertificates/12345.
         */
        @com.google.api.client.util.Key
        private java.lang.String appsId;

        /** Part of `name`. Name of the resource to delete. Example: apps/myapp/authorizedCertificates/12345.
         */
        public java.lang.String getAppsId() {
          return appsId;
        }

        /**
         * Part of `name`. Name of the resource to delete. Example:
         * apps/myapp/authorizedCertificates/12345.
         */
        public Delete setAppsId(java.lang.String appsId) {
          this.appsId = appsId;
          return this;
        }

        /** Part of `name`. See documentation of `appsId`. */
        @com.google.api.client.util.Key
        private java.lang.String authorizedCertificatesId;

        /** Part of `name`. See documentation of `appsId`.
         */
        public java.lang.String getAuthorizedCertificatesId() {
          return authorizedCertificatesId;
        }

        /** Part of `name`. See documentation of `appsId`. */
        public Delete setAuthorizedCertificatesId(java.lang.String authorizedCertificatesId) {
          this.authorizedCertificatesId = authorizedCertificatesId;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets the specified SSL certificate.
       *
       * Create a request for the method "authorizedCertificates.get".
       *
       * This request holds the parameters needed by the appengine server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param appsId Part of `name`. Name of the resource requested. Example: apps/myapp/authorizedCertificates/12345.
       * @param authorizedCertificatesId Part of `name`. See documentation of `appsId`.
       * @return the request
       */
      public Get get(java.lang.String appsId, java.lang.String authorizedCertificatesId) throws java.io.IOException {
        Get result = new Get(appsId, authorizedCertificatesId);
        initialize(result);
        return result;
      }

      public class Get extends AppengineRequest<com.google.api.services.appengine.model.AuthorizedCertificate> {

        private static final String REST_PATH = "v1beta/apps/{appsId}/authorizedCertificates/{authorizedCertificatesId}";

        /**
         * Gets the specified SSL certificate.
         *
         * Create a request for the method "authorizedCertificates.get".
         *
         * This request holds the parameters needed by the the appengine server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param appsId Part of `name`. Name of the resource requested. Example: apps/myapp/authorizedCertificates/12345.
         * @param authorizedCertificatesId Part of `name`. See documentation of `appsId`.
         * @since 1.13
         */
        protected Get(java.lang.String appsId, java.lang.String authorizedCertificatesId) {
          super(Appengine.this, "GET", REST_PATH, null, com.google.api.services.appengine.model.AuthorizedCertificate.class);
          this.appsId = com.google.api.client.util.Preconditions.checkNotNull(appsId, "Required parameter appsId must be specified.");
          this.authorizedCertificatesId = com.google.api.client.util.Preconditions.checkNotNull(authorizedCertificatesId, "Required parameter authorizedCertificatesId must be specified.");
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Part of `name`. Name of the resource requested. Example:
         * apps/myapp/authorizedCertificates/12345.
         */
        @com.google.api.client.util.Key
        private java.lang.String appsId;

        /** Part of `name`. Name of the resource requested. Example: apps/myapp/authorizedCertificates/12345.
         */
        public java.lang.String getAppsId() {
          return appsId;
        }

        /**
         * Part of `name`. Name of the resource requested. Example:
         * apps/myapp/authorizedCertificates/12345.
         */
        public Get setAppsId(java.lang.String appsId) {
          this.appsId = appsId;
          return this;
        }

        /** Part of `name`. See documentation of `appsId`. */
        @com.google.api.client.util.Key
        private java.lang.String authorizedCertificatesId;

        /** Part of `name`. See documentation of `appsId`.
         */
        public java.lang.String getAuthorizedCertificatesId() {
          return authorizedCertificatesId;
        }

        /** Part of `name`. See documentation of `appsId`. */
        public Get setAuthorizedCertificatesId(java.lang.String authorizedCertificatesId) {
          this.authorizedCertificatesId = authorizedCertificatesId;
          return this;
        }

        /** Controls the set of fields returned in the GET response. */
        @com.google.api.client.util.Key
        private java.lang.String view;

        /** Controls the set of fields returned in the GET response.
         */
        public java.lang.String getView() {
          return view;
        }

        /** Controls the set of fields returned in the GET response. */
        public Get setView(java.lang.String view) {
          this.view = view;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists all SSL certificates the user is authorized to administer.
       *
       * Create a request for the method "authorizedCertificates.list".
       *
       * This request holds the parameters needed by the appengine server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param appsId Part of `parent`. Name of the parent Application resource. Example: apps/myapp.
       * @return the request
       */
      public List list(java.lang.String appsId) throws java.io.IOException {
        List result = new List(appsId);
        initialize(result);
        return result;
      }

      public class List extends AppengineRequest<com.google.api.services.appengine.model.ListAuthorizedCertificatesResponse> {

        private static final String REST_PATH = "v1beta/apps/{appsId}/authorizedCertificates";

        /**
         * Lists all SSL certificates the user is authorized to administer.
         *
         * Create a request for the method "authorizedCertificates.list".
         *
         * This request holds the parameters needed by the the appengine server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param appsId Part of `parent`. Name of the parent Application resource. Example: apps/myapp.
         * @since 1.13
         */
        protected List(java.lang.String appsId) {
          super(Appengine.this, "GET", REST_PATH, null, com.google.api.services.appengine.model.ListAuthorizedCertificatesResponse.class);
          this.appsId = com.google.api.client.util.Preconditions.checkNotNull(appsId, "Required parameter appsId must be specified.");
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Part of `parent`. Name of the parent Application resource. Example: apps/myapp. */
        @com.google.api.client.util.Key
        private java.lang.String appsId;

        /** Part of `parent`. Name of the parent Application resource. Example: apps/myapp.
         */
        public java.lang.String getAppsId() {
          return appsId;
        }

        /** Part of `parent`. Name of the parent Application resource. Example: apps/myapp. */
        public List setAppsId(java.lang.String appsId) {
          this.appsId = appsId;
          return this;
        }

        /** Maximum results to return per page. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Maximum results to return per page.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** Maximum results to return per page. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** Continuation token for fetching the next page of results. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Continuation token for fetching the next page of results.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** Continuation token for fetching the next page of results. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        /** Controls the set of fields returned in the LIST response. */
        @com.google.api.client.util.Key
        private java.lang.String view;

        /** Controls the set of fields returned in the LIST response.
         */
        public java.lang.String getView() {
          return view;
        }

        /** Controls the set of fields returned in the LIST response. */
        public List setView(java.lang.String view) {
          this.view = view;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates the specified SSL certificate. To renew a certificate and maintain its existing domain
       * mappings, update certificate_data with a new certificate. The new certificate must be applicable
       * to the same domains as the original certificate. The certificate display_name may also be
       * updated.
       *
       * Create a request for the method "authorizedCertificates.patch".
       *
       * This request holds the parameters needed by the appengine server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param appsId Part of `name`. Name of the resource to update. Example: apps/myapp/authorizedCertificates/12345.
       * @param authorizedCertificatesId Part of `name`. See documentation of `appsId`.
       * @param content the {@link com.google.api.services.appengine.model.AuthorizedCertificate}
       * @return the request
       */
      public Patch patch(java.lang.String appsId, java.lang.String authorizedCertificatesId, com.google.api.services.appengine.model.AuthorizedCertificate content) throws java.io.IOException {
        Patch result = new Patch(appsId, authorizedCertificatesId, content);
        initialize(result);
        return result;
      }

      public class Patch extends AppengineRequest<com.google.api.services.appengine.model.AuthorizedCertificate> {

        private static final String REST_PATH = "v1beta/apps/{appsId}/authorizedCertificates/{authorizedCertificatesId}";

        /**
         * Updates the specified SSL certificate. To renew a certificate and maintain its existing domain
         * mappings, update certificate_data with a new certificate. The new certificate must be
         * applicable to the same domains as the original certificate. The certificate display_name may
         * also be updated.
         *
         * Create a request for the method "authorizedCertificates.patch".
         *
         * This request holds the parameters needed by the the appengine server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param appsId Part of `name`. Name of the resource to update. Example: apps/myapp/authorizedCertificates/12345.
         * @param authorizedCertificatesId Part of `name`. See documentation of `appsId`.
         * @param content the {@link com.google.api.services.appengine.model.AuthorizedCertificate}
         * @since 1.13
         */
        protected Patch(java.lang.String appsId, java.lang.String authorizedCertificatesId, com.google.api.services.appengine.model.AuthorizedCertificate content) {
          super(Appengine.this, "PATCH", REST_PATH, content, com.google.api.services.appengine.model.AuthorizedCertificate.class);
          this.appsId = com.google.api.client.util.Preconditions.checkNotNull(appsId, "Required parameter appsId must be specified.");
          this.authorizedCertificatesId = com.google.api.client.util.Preconditions.checkNotNull(authorizedCertificatesId, "Required parameter authorizedCertificatesId must be specified.");
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Part of `name`. Name of the resource to update. Example:
         * apps/myapp/authorizedCertificates/12345.
         */
        @com.google.api.client.util.Key
        private java.lang.String appsId;

        /** Part of `name`. Name of the resource to update. Example: apps/myapp/authorizedCertificates/12345.
         */
        public java.lang.String getAppsId() {
          return appsId;
        }

        /**
         * Part of `name`. Name of the resource to update. Example:
         * apps/myapp/authorizedCertificates/12345.
         */
        public Patch setAppsId(java.lang.String appsId) {
          this.appsId = appsId;
          return this;
        }

        /** Part of `name`. See documentation of `appsId`. */
        @com.google.api.client.util.Key
        private java.lang.String authorizedCertificatesId;

        /** Part of `name`. See documentation of `appsId`.
         */
        public java.lang.String getAuthorizedCertificatesId() {
          return authorizedCertificatesId;
        }

        /** Part of `name`. See documentation of `appsId`. */
        public Patch setAuthorizedCertificatesId(java.lang.String authorizedCertificatesId) {
          this.authorizedCertificatesId = authorizedCertificatesId;
          return this;
        }

        /**
         * Standard field mask for the set of fields to be updated. Updates are only supported on
         * the certificate_raw_data and display_name fields.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Standard field mask for the set of fields to be updated. Updates are only supported on the
       certificate_raw_data and display_name fields.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * Standard field mask for the set of fields to be updated. Updates are only supported on
         * the certificate_raw_data and display_name fields.
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the AuthorizedDomains collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Appengine appengine = new Appengine(...);}
     *   {@code Appengine.AuthorizedDomains.List request = appengine.authorizedDomains().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public AuthorizedDomains authorizedDomains() {
      return new AuthorizedDomains();
    }

    /**
     * The "authorizedDomains" collection of methods.
     */
    public class AuthorizedDomains {

      /**
       * Lists all domains the user is authorized to administer.
       *
       * Create a request for the method "authorizedDomains.list".
       *
       * This request holds the parameters needed by the appengine server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param appsId Part of `parent`. Name of the parent Application resource. Example: apps/myapp.
       * @return the request
       */
      public List list(java.lang.String appsId) throws java.io.IOException {
        List result = new List(appsId);
        initialize(result);
        return result;
      }

      public class List extends AppengineRequest<com.google.api.services.appengine.model.ListAuthorizedDomainsResponse> {

        private static final String REST_PATH = "v1beta/apps/{appsId}/authorizedDomains";

        /**
         * Lists all domains the user is authorized to administer.
         *
         * Create a request for the method "authorizedDomains.list".
         *
         * This request holds the parameters needed by the the appengine server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param appsId Part of `parent`. Name of the parent Application resource. Example: apps/myapp.
         * @since 1.13
         */
        protected List(java.lang.String appsId) {
          super(Appengine.this, "GET", REST_PATH, null, com.google.api.services.appengine.model.ListAuthorizedDomainsResponse.class);
          this.appsId = com.google.api.client.util.Preconditions.checkNotNull(appsId, "Required parameter appsId must be specified.");
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Part of `parent`. Name of the parent Application resource. Example: apps/myapp. */
        @com.google.api.client.util.Key
        private java.lang.String appsId;

        /** Part of `parent`. Name of the parent Application resource. Example: apps/myapp.
         */
        public java.lang.String getAppsId() {
          return appsId;
        }

        /** Part of `parent`. Name of the parent Application resource. Example: apps/myapp. */
        public List setAppsId(java.lang.String appsId) {
          this.appsId = appsId;
          return this;
        }

        /** Maximum results to return per page. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Maximum results to return per page.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** Maximum results to return per page. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** Continuation token for fetching the next page of results. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Continuation token for fetching the next page of results.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** Continuation token for fetching the next page of results. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the DomainMappings collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Appengine appengine = new Appengine(...);}
     *   {@code Appengine.DomainMappings.List request = appengine.domainMappings().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public DomainMappings domainMappings() {
      return new DomainMappings();
    }

    /**
     * The "domainMappings" collection of methods.
     */
    public class DomainMappings {

      /**
       * Maps a domain to an application. A user must be authorized to administer a domain in order to map
       * it to an application. For a list of available authorized domains, see
       * AuthorizedDomains.ListAuthorizedDomains.
       *
       * Create a request for the method "domainMappings.create".
       *
       * This request holds the parameters needed by the appengine server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param appsId Part of `parent`. Name of the parent Application resource. Example: apps/myapp.
       * @param content the {@link com.google.api.services.appengine.model.DomainMapping}
       * @return the request
       */
      public Create create(java.lang.String appsId, com.google.api.services.appengine.model.DomainMapping content) throws java.io.IOException {
        Create result = new Create(appsId, content);
        initialize(result);
        return result;
      }

      public class Create extends AppengineRequest<com.google.api.services.appengine.model.Operation> {

        private static final String REST_PATH = "v1beta/apps/{appsId}/domainMappings";

        /**
         * Maps a domain to an application. A user must be authorized to administer a domain in order to
         * map it to an application. For a list of available authorized domains, see
         * AuthorizedDomains.ListAuthorizedDomains.
         *
         * Create a request for the method "domainMappings.create".
         *
         * This request holds the parameters needed by the the appengine server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param appsId Part of `parent`. Name of the parent Application resource. Example: apps/myapp.
         * @param content the {@link com.google.api.services.appengine.model.DomainMapping}
         * @since 1.13
         */
        protected Create(java.lang.String appsId, com.google.api.services.appengine.model.DomainMapping content) {
          super(Appengine.this, "POST", REST_PATH, content, com.google.api.services.appengine.model.Operation.class);
          this.appsId = com.google.api.client.util.Preconditions.checkNotNull(appsId, "Required parameter appsId must be specified.");
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** Part of `parent`. Name of the parent Application resource. Example: apps/myapp. */
        @com.google.api.client.util.Key
        private java.lang.String appsId;

        /** Part of `parent`. Name of the parent Application resource. Example: apps/myapp.
         */
        public java.lang.String getAppsId() {
          return appsId;
        }

        /** Part of `parent`. Name of the parent Application resource. Example: apps/myapp. */
        public Create setAppsId(java.lang.String appsId) {
          this.appsId = appsId;
          return this;
        }

        /**
         * Whether the domain creation should override any existing mappings for this domain. By
         * default, overrides are rejected.
         */
        @com.google.api.client.util.Key
        private java.lang.String overrideStrategy;

        /** Whether the domain creation should override any existing mappings for this domain. By default,
       overrides are rejected.
         */
        public java.lang.String getOverrideStrategy() {
          return overrideStrategy;
        }

        /**
         * Whether the domain creation should override any existing mappings for this domain. By
         * default, overrides are rejected.
         */
        public Create setOverrideStrategy(java.lang.String overrideStrategy) {
          this.overrideStrategy = overrideStrategy;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes the specified domain mapping. A user must be authorized to administer the associated
       * domain in order to delete a DomainMapping resource.
       *
       * Create a request for the method "domainMappings.delete".
       *
       * This request holds the parameters needed by the appengine server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param appsId Part of `name`. Name of the resource to delete. Example: apps/myapp/domainMappings/example.com.
       * @param domainMappingsId Part of `name`. See documentation of `appsId`.
       * @return the request
       */
      public Delete delete(java.lang.String appsId, java.lang.String domainMappingsId) throws java.io.IOException {
        Delete result = new Delete(appsId, domainMappingsId);
        initialize(result);
        return result;
      }

      public class Delete extends AppengineRequest<com.google.api.services.appengine.model.Operation> {

        private static final String REST_PATH = "v1beta/apps/{appsId}/domainMappings/{domainMappingsId}";

        /**
         * Deletes the specified domain mapping. A user must be authorized to administer the associated
         * domain in order to delete a DomainMapping resource.
         *
         * Create a request for the method "domainMappings.delete".
         *
         * This request holds the parameters needed by the the appengine server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param appsId Part of `name`. Name of the resource to delete. Example: apps/myapp/domainMappings/example.com.
         * @param domainMappingsId Part of `name`. See documentation of `appsId`.
         * @since 1.13
         */
        protected Delete(java.lang.String appsId, java.lang.String domainMappingsId) {
          super(Appengine.this, "DELETE", REST_PATH, null, com.google.api.services.appengine.model.Operation.class);
          this.appsId = com.google.api.client.util.Preconditions.checkNotNull(appsId, "Required parameter appsId must be specified.");
          this.domainMappingsId = com.google.api.client.util.Preconditions.checkNotNull(domainMappingsId, "Required parameter domainMappingsId must be specified.");
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Part of `name`. Name of the resource to delete. Example:
         * apps/myapp/domainMappings/example.com.
         */
        @com.google.api.client.util.Key
        private java.lang.String appsId;

        /** Part of `name`. Name of the resource to delete. Example: apps/myapp/domainMappings/example.com.
         */
        public java.lang.String getAppsId() {
          return appsId;
        }

        /**
         * Part of `name`. Name of the resource to delete. Example:
         * apps/myapp/domainMappings/example.com.
         */
        public Delete setAppsId(java.lang.String appsId) {
          this.appsId = appsId;
          return this;
        }

        /** Part of `name`. See documentation of `appsId`. */
        @com.google.api.client.util.Key
        private java.lang.String domainMappingsId;

        /** Part of `name`. See documentation of `appsId`.
         */
        public java.lang.String getDomainMappingsId() {
          return domainMappingsId;
        }

        /** Part of `name`. See documentation of `appsId`. */
        public Delete setDomainMappingsId(java.lang.String domainMappingsId) {
          this.domainMappingsId = domainMappingsId;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets the specified domain mapping.
       *
       * Create a request for the method "domainMappings.get".
       *
       * This request holds the parameters needed by the appengine server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param appsId Part of `name`. Name of the resource requested. Example: apps/myapp/domainMappings/example.com.
       * @param domainMappingsId Part of `name`. See documentation of `appsId`.
       * @return the request
       */
      public Get get(java.lang.String appsId, java.lang.String domainMappingsId) throws java.io.IOException {
        Get result = new Get(appsId, domainMappingsId);
        initialize(result);
        return result;
      }

      public class Get extends AppengineRequest<com.google.api.services.appengine.model.DomainMapping> {

        private static final String REST_PATH = "v1beta/apps/{appsId}/domainMappings/{domainMappingsId}";

        /**
         * Gets the specified domain mapping.
         *
         * Create a request for the method "domainMappings.get".
         *
         * This request holds the parameters needed by the the appengine server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param appsId Part of `name`. Name of the resource requested. Example: apps/myapp/domainMappings/example.com.
         * @param domainMappingsId Part of `name`. See documentation of `appsId`.
         * @since 1.13
         */
        protected Get(java.lang.String appsId, java.lang.String domainMappingsId) {
          super(Appengine.this, "GET", REST_PATH, null, com.google.api.services.appengine.model.DomainMapping.class);
          this.appsId = com.google.api.client.util.Preconditions.checkNotNull(appsId, "Required parameter appsId must be specified.");
          this.domainMappingsId = com.google.api.client.util.Preconditions.checkNotNull(domainMappingsId, "Required parameter domainMappingsId must be specified.");
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Part of `name`. Name of the resource requested. Example:
         * apps/myapp/domainMappings/example.com.
         */
        @com.google.api.client.util.Key
        private java.lang.String appsId;

        /** Part of `name`. Name of the resource requested. Example: apps/myapp/domainMappings/example.com.
         */
        public java.lang.String getAppsId() {
          return appsId;
        }

        /**
         * Part of `name`. Name of the resource requested. Example:
         * apps/myapp/domainMappings/example.com.
         */
        public Get setAppsId(java.lang.String appsId) {
          this.appsId = appsId;
          return this;
        }

        /** Part of `name`. See documentation of `appsId`. */
        @com.google.api.client.util.Key
        private java.lang.String domainMappingsId;

        /** Part of `name`. See documentation of `appsId`.
         */
        public java.lang.String getDomainMappingsId() {
          return domainMappingsId;
        }

        /** Part of `name`. See documentation of `appsId`. */
        public Get setDomainMappingsId(java.lang.String domainMappingsId) {
          this.domainMappingsId = domainMappingsId;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists the domain mappings on an application.
       *
       * Create a request for the method "domainMappings.list".
       *
       * This request holds the parameters needed by the appengine server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param appsId Part of `parent`. Name of the parent Application resource. Example: apps/myapp.
       * @return the request
       */
      public List list(java.lang.String appsId) throws java.io.IOException {
        List result = new List(appsId);
        initialize(result);
        return result;
      }

      public class List extends AppengineRequest<com.google.api.services.appengine.model.ListDomainMappingsResponse> {

        private static final String REST_PATH = "v1beta/apps/{appsId}/domainMappings";

        /**
         * Lists the domain mappings on an application.
         *
         * Create a request for the method "domainMappings.list".
         *
         * This request holds the parameters needed by the the appengine server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param appsId Part of `parent`. Name of the parent Application resource. Example: apps/myapp.
         * @since 1.13
         */
        protected List(java.lang.String appsId) {
          super(Appengine.this, "GET", REST_PATH, null, com.google.api.services.appengine.model.ListDomainMappingsResponse.class);
          this.appsId = com.google.api.client.util.Preconditions.checkNotNull(appsId, "Required parameter appsId must be specified.");
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Part of `parent`. Name of the parent Application resource. Example: apps/myapp. */
        @com.google.api.client.util.Key
        private java.lang.String appsId;

        /** Part of `parent`. Name of the parent Application resource. Example: apps/myapp.
         */
        public java.lang.String getAppsId() {
          return appsId;
        }

        /** Part of `parent`. Name of the parent Application resource. Example: apps/myapp. */
        public List setAppsId(java.lang.String appsId) {
          this.appsId = appsId;
          return this;
        }

        /** Maximum results to return per page. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Maximum results to return per page.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** Maximum results to return per page. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** Continuation token for fetching the next page of results. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Continuation token for fetching the next page of results.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** Continuation token for fetching the next page of results. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates the specified domain mapping. To map an SSL certificate to a domain mapping, update
       * certificate_id to point to an AuthorizedCertificate resource. A user must be authorized to
       * administer the associated domain in order to update a DomainMapping resource.
       *
       * Create a request for the method "domainMappings.patch".
       *
       * This request holds the parameters needed by the appengine server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param appsId Part of `name`. Name of the resource to update. Example: apps/myapp/domainMappings/example.com.
       * @param domainMappingsId Part of `name`. See documentation of `appsId`.
       * @param content the {@link com.google.api.services.appengine.model.DomainMapping}
       * @return the request
       */
      public Patch patch(java.lang.String appsId, java.lang.String domainMappingsId, com.google.api.services.appengine.model.DomainMapping content) throws java.io.IOException {
        Patch result = new Patch(appsId, domainMappingsId, content);
        initialize(result);
        return result;
      }

      public class Patch extends AppengineRequest<com.google.api.services.appengine.model.Operation> {

        private static final String REST_PATH = "v1beta/apps/{appsId}/domainMappings/{domainMappingsId}";

        /**
         * Updates the specified domain mapping. To map an SSL certificate to a domain mapping, update
         * certificate_id to point to an AuthorizedCertificate resource. A user must be authorized to
         * administer the associated domain in order to update a DomainMapping resource.
         *
         * Create a request for the method "domainMappings.patch".
         *
         * This request holds the parameters needed by the the appengine server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param appsId Part of `name`. Name of the resource to update. Example: apps/myapp/domainMappings/example.com.
         * @param domainMappingsId Part of `name`. See documentation of `appsId`.
         * @param content the {@link com.google.api.services.appengine.model.DomainMapping}
         * @since 1.13
         */
        protected Patch(java.lang.String appsId, java.lang.String domainMappingsId, com.google.api.services.appengine.model.DomainMapping content) {
          super(Appengine.this, "PATCH", REST_PATH, content, com.google.api.services.appengine.model.Operation.class);
          this.appsId = com.google.api.client.util.Preconditions.checkNotNull(appsId, "Required parameter appsId must be specified.");
          this.domainMappingsId = com.google.api.client.util.Preconditions.checkNotNull(domainMappingsId, "Required parameter domainMappingsId must be specified.");
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Part of `name`. Name of the resource to update. Example:
         * apps/myapp/domainMappings/example.com.
         */
        @com.google.api.client.util.Key
        private java.lang.String appsId;

        /** Part of `name`. Name of the resource to update. Example: apps/myapp/domainMappings/example.com.
         */
        public java.lang.String getAppsId() {
          return appsId;
        }

        /**
         * Part of `name`. Name of the resource to update. Example:
         * apps/myapp/domainMappings/example.com.
         */
        public Patch setAppsId(java.lang.String appsId) {
          this.appsId = appsId;
          return this;
        }

        /** Part of `name`. See documentation of `appsId`. */
        @com.google.api.client.util.Key
        private java.lang.String domainMappingsId;

        /** Part of `name`. See documentation of `appsId`.
         */
        public java.lang.String getDomainMappingsId() {
          return domainMappingsId;
        }

        /** Part of `name`. See documentation of `appsId`. */
        public Patch setDomainMappingsId(java.lang.String domainMappingsId) {
          this.domainMappingsId = domainMappingsId;
          return this;
        }

        /** Standard field mask for the set of fields to be updated. */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Standard field mask for the set of fields to be updated.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /** Standard field mask for the set of fields to be updated. */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Firewall collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Appengine appengine = new Appengine(...);}
     *   {@code Appengine.Firewall.List request = appengine.firewall().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Firewall firewall() {
      return new Firewall();
    }

    /**
     * The "firewall" collection of methods.
     */
    public class Firewall {

      /**
       * An accessor for creating requests from the IngressRules collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Appengine appengine = new Appengine(...);}
       *   {@code Appengine.IngressRules.List request = appengine.ingressRules().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public IngressRules ingressRules() {
        return new IngressRules();
      }

      /**
       * The "ingressRules" collection of methods.
       */
      public class IngressRules {

        /**
         * Replaces the entire firewall ruleset in one bulk operation. This overrides and replaces the rules
         * of an existing firewall with the new rules.If the final rule does not match traffic with the '*'
         * wildcard IP range, then an "allow all" rule is explicitly added to the end of the list.
         *
         * Create a request for the method "ingressRules.batchUpdate".
         *
         * This request holds the parameters needed by the appengine server.  After setting any optional
         * parameters, call the {@link BatchUpdate#execute()} method to invoke the remote operation.
         *
         * @param appsId Part of `name`. Name of the Firewall collection to set. Example: apps/myapp/firewall/ingressRules.
         * @param content the {@link com.google.api.services.appengine.model.BatchUpdateIngressRulesRequest}
         * @return the request
         */
        public BatchUpdate batchUpdate(java.lang.String appsId, com.google.api.services.appengine.model.BatchUpdateIngressRulesRequest content) throws java.io.IOException {
          BatchUpdate result = new BatchUpdate(appsId, content);
          initialize(result);
          return result;
        }

        public class BatchUpdate extends AppengineRequest<com.google.api.services.appengine.model.BatchUpdateIngressRulesResponse> {

          private static final String REST_PATH = "v1beta/apps/{appsId}/firewall/ingressRules:batchUpdate";

          /**
           * Replaces the entire firewall ruleset in one bulk operation. This overrides and replaces the
           * rules of an existing firewall with the new rules.If the final rule does not match traffic with
           * the '*' wildcard IP range, then an "allow all" rule is explicitly added to the end of the list.
           *
           * Create a request for the method "ingressRules.batchUpdate".
           *
           * This request holds the parameters needed by the the appengine server.  After setting any
           * optional parameters, call the {@link BatchUpdate#execute()} method to invoke the remote
           * operation. <p> {@link
           * BatchUpdate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param appsId Part of `name`. Name of the Firewall collection to set. Example: apps/myapp/firewall/ingressRules.
           * @param content the {@link com.google.api.services.appengine.model.BatchUpdateIngressRulesRequest}
           * @since 1.13
           */
          protected BatchUpdate(java.lang.String appsId, com.google.api.services.appengine.model.BatchUpdateIngressRulesRequest content) {
            super(Appengine.this, "POST", REST_PATH, content, com.google.api.services.appengine.model.BatchUpdateIngressRulesResponse.class);
            this.appsId = com.google.api.client.util.Preconditions.checkNotNull(appsId, "Required parameter appsId must be specified.");
          }

          @Override
          public BatchUpdate set$Xgafv(java.lang.String $Xgafv) {
            return (BatchUpdate) super.set$Xgafv($Xgafv);
          }

          @Override
          public BatchUpdate setAccessToken(java.lang.String accessToken) {
            return (BatchUpdate) super.setAccessToken(accessToken);
          }

          @Override
          public BatchUpdate setAlt(java.lang.String alt) {
            return (BatchUpdate) super.setAlt(alt);
          }

          @Override
          public BatchUpdate setCallback(java.lang.String callback) {
            return (BatchUpdate) super.setCallback(callback);
          }

          @Override
          public BatchUpdate setFields(java.lang.String fields) {
            return (BatchUpdate) super.setFields(fields);
          }

          @Override
          public BatchUpdate setKey(java.lang.String key) {
            return (BatchUpdate) super.setKey(key);
          }

          @Override
          public BatchUpdate setOauthToken(java.lang.String oauthToken) {
            return (BatchUpdate) super.setOauthToken(oauthToken);
          }

          @Override
          public BatchUpdate setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (BatchUpdate) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public BatchUpdate setQuotaUser(java.lang.String quotaUser) {
            return (BatchUpdate) super.setQuotaUser(quotaUser);
          }

          @Override
          public BatchUpdate setUploadType(java.lang.String uploadType) {
            return (BatchUpdate) super.setUploadType(uploadType);
          }

          @Override
          public BatchUpdate setUploadProtocol(java.lang.String uploadProtocol) {
            return (BatchUpdate) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Part of `name`. Name of the Firewall collection to set. Example:
           * apps/myapp/firewall/ingressRules.
           */
          @com.google.api.client.util.Key
          private java.lang.String appsId;

          /** Part of `name`. Name of the Firewall collection to set. Example: apps/myapp/firewall/ingressRules.
           */
          public java.lang.String getAppsId() {
            return appsId;
          }

          /**
           * Part of `name`. Name of the Firewall collection to set. Example:
           * apps/myapp/firewall/ingressRules.
           */
          public BatchUpdate setAppsId(java.lang.String appsId) {
            this.appsId = appsId;
            return this;
          }

          @Override
          public BatchUpdate set(String parameterName, Object value) {
            return (BatchUpdate) super.set(parameterName, value);
          }
        }
        /**
         * Creates a firewall rule for the application.
         *
         * Create a request for the method "ingressRules.create".
         *
         * This request holds the parameters needed by the appengine server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param appsId Part of `parent`. Name of the parent Firewall collection in which to create a new rule. Example:
         *        apps/myapp/firewall/ingressRules.
         * @param content the {@link com.google.api.services.appengine.model.FirewallRule}
         * @return the request
         */
        public Create create(java.lang.String appsId, com.google.api.services.appengine.model.FirewallRule content) throws java.io.IOException {
          Create result = new Create(appsId, content);
          initialize(result);
          return result;
        }

        public class Create extends AppengineRequest<com.google.api.services.appengine.model.FirewallRule> {

          private static final String REST_PATH = "v1beta/apps/{appsId}/firewall/ingressRules";

          /**
           * Creates a firewall rule for the application.
           *
           * Create a request for the method "ingressRules.create".
           *
           * This request holds the parameters needed by the the appengine server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param appsId Part of `parent`. Name of the parent Firewall collection in which to create a new rule. Example:
         *        apps/myapp/firewall/ingressRules.
           * @param content the {@link com.google.api.services.appengine.model.FirewallRule}
           * @since 1.13
           */
          protected Create(java.lang.String appsId, com.google.api.services.appengine.model.FirewallRule content) {
            super(Appengine.this, "POST", REST_PATH, content, com.google.api.services.appengine.model.FirewallRule.class);
            this.appsId = com.google.api.client.util.Preconditions.checkNotNull(appsId, "Required parameter appsId must be specified.");
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Part of `parent`. Name of the parent Firewall collection in which to create a new rule.
           * Example: apps/myapp/firewall/ingressRules.
           */
          @com.google.api.client.util.Key
          private java.lang.String appsId;

          /** Part of `parent`. Name of the parent Firewall collection in which to create a new rule. Example:
         apps/myapp/firewall/ingressRules.
           */
          public java.lang.String getAppsId() {
            return appsId;
          }

          /**
           * Part of `parent`. Name of the parent Firewall collection in which to create a new rule.
           * Example: apps/myapp/firewall/ingressRules.
           */
          public Create setAppsId(java.lang.String appsId) {
            this.appsId = appsId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes the specified firewall rule.
         *
         * Create a request for the method "ingressRules.delete".
         *
         * This request holds the parameters needed by the appengine server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param appsId Part of `name`. Name of the Firewall resource to delete. Example:
         *        apps/myapp/firewall/ingressRules/100.
         * @param ingressRulesId Part of `name`. See documentation of `appsId`.
         * @return the request
         */
        public Delete delete(java.lang.String appsId, java.lang.String ingressRulesId) throws java.io.IOException {
          Delete result = new Delete(appsId, ingressRulesId);
          initialize(result);
          return result;
        }

        public class Delete extends AppengineRequest<com.google.api.services.appengine.model.Empty> {

          private static final String REST_PATH = "v1beta/apps/{appsId}/firewall/ingressRules/{ingressRulesId}";

          /**
           * Deletes the specified firewall rule.
           *
           * Create a request for the method "ingressRules.delete".
           *
           * This request holds the parameters needed by the the appengine server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param appsId Part of `name`. Name of the Firewall resource to delete. Example:
         *        apps/myapp/firewall/ingressRules/100.
           * @param ingressRulesId Part of `name`. See documentation of `appsId`.
           * @since 1.13
           */
          protected Delete(java.lang.String appsId, java.lang.String ingressRulesId) {
            super(Appengine.this, "DELETE", REST_PATH, null, com.google.api.services.appengine.model.Empty.class);
            this.appsId = com.google.api.client.util.Preconditions.checkNotNull(appsId, "Required parameter appsId must be specified.");
            this.ingressRulesId = com.google.api.client.util.Preconditions.checkNotNull(ingressRulesId, "Required parameter ingressRulesId must be specified.");
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Part of `name`. Name of the Firewall resource to delete. Example:
           * apps/myapp/firewall/ingressRules/100.
           */
          @com.google.api.client.util.Key
          private java.lang.String appsId;

          /** Part of `name`. Name of the Firewall resource to delete. Example:
         apps/myapp/firewall/ingressRules/100.
           */
          public java.lang.String getAppsId() {
            return appsId;
          }

          /**
           * Part of `name`. Name of the Firewall resource to delete. Example:
           * apps/myapp/firewall/ingressRules/100.
           */
          public Delete setAppsId(java.lang.String appsId) {
            this.appsId = appsId;
            return this;
          }

          /** Part of `name`. See documentation of `appsId`. */
          @com.google.api.client.util.Key
          private java.lang.String ingressRulesId;

          /** Part of `name`. See documentation of `appsId`.
           */
          public java.lang.String getIngressRulesId() {
            return ingressRulesId;
          }

          /** Part of `name`. See documentation of `appsId`. */
          public Delete setIngressRulesId(java.lang.String ingressRulesId) {
            this.ingressRulesId = ingressRulesId;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets the specified firewall rule.
         *
         * Create a request for the method "ingressRules.get".
         *
         * This request holds the parameters needed by the appengine server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param appsId Part of `name`. Name of the Firewall resource to retrieve. Example:
         *        apps/myapp/firewall/ingressRules/100.
         * @param ingressRulesId Part of `name`. See documentation of `appsId`.
         * @return the request
         */
        public Get get(java.lang.String appsId, java.lang.String ingressRulesId) throws java.io.IOException {
          Get result = new Get(appsId, ingressRulesId);
          initialize(result);
          return result;
        }

        public class Get extends AppengineRequest<com.google.api.services.appengine.model.FirewallRule> {

          private static final String REST_PATH = "v1beta/apps/{appsId}/firewall/ingressRules/{ingressRulesId}";

          /**
           * Gets the specified firewall rule.
           *
           * Create a request for the method "ingressRules.get".
           *
           * This request holds the parameters needed by the the appengine server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param appsId Part of `name`. Name of the Firewall resource to retrieve. Example:
         *        apps/myapp/firewall/ingressRules/100.
           * @param ingressRulesId Part of `name`. See documentation of `appsId`.
           * @since 1.13
           */
          protected Get(java.lang.String appsId, java.lang.String ingressRulesId) {
            super(Appengine.this, "GET", REST_PATH, null, com.google.api.services.appengine.model.FirewallRule.class);
            this.appsId = com.google.api.client.util.Preconditions.checkNotNull(appsId, "Required parameter appsId must be specified.");
            this.ingressRulesId = com.google.api.client.util.Preconditions.checkNotNull(ingressRulesId, "Required parameter ingressRulesId must be specified.");
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Part of `name`. Name of the Firewall resource to retrieve. Example:
           * apps/myapp/firewall/ingressRules/100.
           */
          @com.google.api.client.util.Key
          private java.lang.String appsId;

          /** Part of `name`. Name of the Firewall resource to retrieve. Example:
         apps/myapp/firewall/ingressRules/100.
           */
          public java.lang.String getAppsId() {
            return appsId;
          }

          /**
           * Part of `name`. Name of the Firewall resource to retrieve. Example:
           * apps/myapp/firewall/ingressRules/100.
           */
          public Get setAppsId(java.lang.String appsId) {
            this.appsId = appsId;
            return this;
          }

          /** Part of `name`. See documentation of `appsId`. */
          @com.google.api.client.util.Key
          private java.lang.String ingressRulesId;

          /** Part of `name`. See documentation of `appsId`.
           */
          public java.lang.String getIngressRulesId() {
            return ingressRulesId;
          }

          /** Part of `name`. See documentation of `appsId`. */
          public Get setIngressRulesId(java.lang.String ingressRulesId) {
            this.ingressRulesId = ingressRulesId;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists the firewall rules of an application.
         *
         * Create a request for the method "ingressRules.list".
         *
         * This request holds the parameters needed by the appengine server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param appsId Part of `parent`. Name of the Firewall collection to retrieve. Example:
         *        apps/myapp/firewall/ingressRules.
         * @return the request
         */
        public List list(java.lang.String appsId) throws java.io.IOException {
          List result = new List(appsId);
          initialize(result);
          return result;
        }

        public class List extends AppengineRequest<com.google.api.services.appengine.model.ListIngressRulesResponse> {

          private static final String REST_PATH = "v1beta/apps/{appsId}/firewall/ingressRules";

          /**
           * Lists the firewall rules of an application.
           *
           * Create a request for the method "ingressRules.list".
           *
           * This request holds the parameters needed by the the appengine server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param appsId Part of `parent`. Name of the Firewall collection to retrieve. Example:
         *        apps/myapp/firewall/ingressRules.
           * @since 1.13
           */
          protected List(java.lang.String appsId) {
            super(Appengine.this, "GET", REST_PATH, null, com.google.api.services.appengine.model.ListIngressRulesResponse.class);
            this.appsId = com.google.api.client.util.Preconditions.checkNotNull(appsId, "Required parameter appsId must be specified.");
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Part of `parent`. Name of the Firewall collection to retrieve. Example:
           * apps/myapp/firewall/ingressRules.
           */
          @com.google.api.client.util.Key
          private java.lang.String appsId;

          /** Part of `parent`. Name of the Firewall collection to retrieve. Example:
         apps/myapp/firewall/ingressRules.
           */
          public java.lang.String getAppsId() {
            return appsId;
          }

          /**
           * Part of `parent`. Name of the Firewall collection to retrieve. Example:
           * apps/myapp/firewall/ingressRules.
           */
          public List setAppsId(java.lang.String appsId) {
            this.appsId = appsId;
            return this;
          }

          /**
           * A valid IP Address. If set, only rules matching this address will be returned. The
           * first returned rule will be the rule that fires on requests from this IP.
           */
          @com.google.api.client.util.Key
          private java.lang.String matchingAddress;

          /** A valid IP Address. If set, only rules matching this address will be returned. The first returned
         rule will be the rule that fires on requests from this IP.
           */
          public java.lang.String getMatchingAddress() {
            return matchingAddress;
          }

          /**
           * A valid IP Address. If set, only rules matching this address will be returned. The
           * first returned rule will be the rule that fires on requests from this IP.
           */
          public List setMatchingAddress(java.lang.String matchingAddress) {
            this.matchingAddress = matchingAddress;
            return this;
          }

          /** Maximum results to return per page. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Maximum results to return per page.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** Maximum results to return per page. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** Continuation token for fetching the next page of results. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Continuation token for fetching the next page of results.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** Continuation token for fetching the next page of results. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates the specified firewall rule.
         *
         * Create a request for the method "ingressRules.patch".
         *
         * This request holds the parameters needed by the appengine server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param appsId Part of `name`. Name of the Firewall resource to update. Example:
         *        apps/myapp/firewall/ingressRules/100.
         * @param ingressRulesId Part of `name`. See documentation of `appsId`.
         * @param content the {@link com.google.api.services.appengine.model.FirewallRule}
         * @return the request
         */
        public Patch patch(java.lang.String appsId, java.lang.String ingressRulesId, com.google.api.services.appengine.model.FirewallRule content) throws java.io.IOException {
          Patch result = new Patch(appsId, ingressRulesId, content);
          initialize(result);
          return result;
        }

        public class Patch extends AppengineRequest<com.google.api.services.appengine.model.FirewallRule> {

          private static final String REST_PATH = "v1beta/apps/{appsId}/firewall/ingressRules/{ingressRulesId}";

          /**
           * Updates the specified firewall rule.
           *
           * Create a request for the method "ingressRules.patch".
           *
           * This request holds the parameters needed by the the appengine server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param appsId Part of `name`. Name of the Firewall resource to update. Example:
         *        apps/myapp/firewall/ingressRules/100.
           * @param ingressRulesId Part of `name`. See documentation of `appsId`.
           * @param content the {@link com.google.api.services.appengine.model.FirewallRule}
           * @since 1.13
           */
          protected Patch(java.lang.String appsId, java.lang.String ingressRulesId, com.google.api.services.appengine.model.FirewallRule content) {
            super(Appengine.this, "PATCH", REST_PATH, content, com.google.api.services.appengine.model.FirewallRule.class);
            this.appsId = com.google.api.client.util.Preconditions.checkNotNull(appsId, "Required parameter appsId must be specified.");
            this.ingressRulesId = com.google.api.client.util.Preconditions.checkNotNull(ingressRulesId, "Required parameter ingressRulesId must be specified.");
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Part of `name`. Name of the Firewall resource to update. Example:
           * apps/myapp/firewall/ingressRules/100.
           */
          @com.google.api.client.util.Key
          private java.lang.String appsId;

          /** Part of `name`. Name of the Firewall resource to update. Example:
         apps/myapp/firewall/ingressRules/100.
           */
          public java.lang.String getAppsId() {
            return appsId;
          }

          /**
           * Part of `name`. Name of the Firewall resource to update. Example:
           * apps/myapp/firewall/ingressRules/100.
           */
          public Patch setAppsId(java.lang.String appsId) {
            this.appsId = appsId;
            return this;
          }

          /** Part of `name`. See documentation of `appsId`. */
          @com.google.api.client.util.Key
          private java.lang.String ingressRulesId;

          /** Part of `name`. See documentation of `appsId`.
           */
          public java.lang.String getIngressRulesId() {
            return ingressRulesId;
          }

          /** Part of `name`. See documentation of `appsId`. */
          public Patch setIngressRulesId(java.lang.String ingressRulesId) {
            this.ingressRulesId = ingressRulesId;
            return this;
          }

          /** Standard field mask for the set of fields to be updated. */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Standard field mask for the set of fields to be updated.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /** Standard field mask for the set of fields to be updated. */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

      }
    }
    /**
     * An accessor for creating requests from the Locations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Appengine appengine = new Appengine(...);}
     *   {@code Appengine.Locations.List request = appengine.locations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Locations locations() {
      return new Locations();
    }

    /**
     * The "locations" collection of methods.
     */
    public class Locations {

      /**
       * Gets information about a location.
       *
       * Create a request for the method "locations.get".
       *
       * This request holds the parameters needed by the appengine server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param appsId Part of `name`. Resource name for the location.
       * @param locationsId Part of `name`. See documentation of `appsId`.
       * @return the request
       */
      public Get get(java.lang.String appsId, java.lang.String locationsId) throws java.io.IOException {
        Get result = new Get(appsId, locationsId);
        initialize(result);
        return result;
      }

      public class Get extends AppengineRequest<com.google.api.services.appengine.model.Location> {

        private static final String REST_PATH = "v1beta/apps/{appsId}/locations/{locationsId}";

        /**
         * Gets information about a location.
         *
         * Create a request for the method "locations.get".
         *
         * This request holds the parameters needed by the the appengine server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param appsId Part of `name`. Resource name for the location.
         * @param locationsId Part of `name`. See documentation of `appsId`.
         * @since 1.13
         */
        protected Get(java.lang.String appsId, java.lang.String locationsId) {
          super(Appengine.this, "GET", REST_PATH, null, com.google.api.services.appengine.model.Location.class);
          this.appsId = com.google.api.client.util.Preconditions.checkNotNull(appsId, "Required parameter appsId must be specified.");
          this.locationsId = com.google.api.client.util.Preconditions.checkNotNull(locationsId, "Required parameter locationsId must be specified.");
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Part of `name`. Resource name for the location. */
        @com.google.api.client.util.Key
        private java.lang.String appsId;

        /** Part of `name`. Resource name for the location.
         */
        public java.lang.String getAppsId() {
          return appsId;
        }

        /** Part of `name`. Resource name for the location. */
        public Get setAppsId(java.lang.String appsId) {
          this.appsId = appsId;
          return this;
        }

        /** Part of `name`. See documentation of `appsId`. */
        @com.google.api.client.util.Key
        private java.lang.String locationsId;

        /** Part of `name`. See documentation of `appsId`.
         */
        public java.lang.String getLocationsId() {
          return locationsId;
        }

        /** Part of `name`. See documentation of `appsId`. */
        public Get setLocationsId(java.lang.String locationsId) {
          this.locationsId = locationsId;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists information about the supported locations for this service.
       *
       * Create a request for the method "locations.list".
       *
       * This request holds the parameters needed by the appengine server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param appsId Part of `name`. The resource that owns the locations collection, if applicable.
       * @return the request
       */
      public List list(java.lang.String appsId) throws java.io.IOException {
        List result = new List(appsId);
        initialize(result);
        return result;
      }

      public class List extends AppengineRequest<com.google.api.services.appengine.model.ListLocationsResponse> {

        private static final String REST_PATH = "v1beta/apps/{appsId}/locations";

        /**
         * Lists information about the supported locations for this service.
         *
         * Create a request for the method "locations.list".
         *
         * This request holds the parameters needed by the the appengine server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param appsId Part of `name`. The resource that owns the locations collection, if applicable.
         * @since 1.13
         */
        protected List(java.lang.String appsId) {
          super(Appengine.this, "GET", REST_PATH, null, com.google.api.services.appengine.model.ListLocationsResponse.class);
          this.appsId = com.google.api.client.util.Preconditions.checkNotNull(appsId, "Required parameter appsId must be specified.");
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Part of `name`. The resource that owns the locations collection, if applicable. */
        @com.google.api.client.util.Key
        private java.lang.String appsId;

        /** Part of `name`. The resource that owns the locations collection, if applicable.
         */
        public java.lang.String getAppsId() {
          return appsId;
        }

        /** Part of `name`. The resource that owns the locations collection, if applicable. */
        public List setAppsId(java.lang.String appsId) {
          this.appsId = appsId;
          return this;
        }

        /** The standard list filter. */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** The standard list filter.
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /** The standard list filter. */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /** The standard list page size. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The standard list page size.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The standard list page size. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** The standard list page token. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** The standard list page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** The standard list page token. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Operations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Appengine appengine = new Appengine(...);}
     *   {@code Appengine.Operations.List request = appengine.operations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Operations operations() {
      return new Operations();
    }

    /**
     * The "operations" collection of methods.
     */
    public class Operations {

      /**
       * Gets the latest state of a long-running operation. Clients can use this method to poll the
       * operation result at intervals as recommended by the API service.
       *
       * Create a request for the method "operations.get".
       *
       * This request holds the parameters needed by the appengine server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param appsId Part of `name`. The name of the operation resource.
       * @param operationsId Part of `name`. See documentation of `appsId`.
       * @return the request
       */
      public Get get(java.lang.String appsId, java.lang.String operationsId) throws java.io.IOException {
        Get result = new Get(appsId, operationsId);
        initialize(result);
        return result;
      }

      public class Get extends AppengineRequest<com.google.api.services.appengine.model.Operation> {

        private static final String REST_PATH = "v1beta/apps/{appsId}/operations/{operationsId}";

        /**
         * Gets the latest state of a long-running operation. Clients can use this method to poll the
         * operation result at intervals as recommended by the API service.
         *
         * Create a request for the method "operations.get".
         *
         * This request holds the parameters needed by the the appengine server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param appsId Part of `name`. The name of the operation resource.
         * @param operationsId Part of `name`. See documentation of `appsId`.
         * @since 1.13
         */
        protected Get(java.lang.String appsId, java.lang.String operationsId) {
          super(Appengine.this, "GET", REST_PATH, null, com.google.api.services.appengine.model.Operation.class);
          this.appsId = com.google.api.client.util.Preconditions.checkNotNull(appsId, "Required parameter appsId must be specified.");
          this.operationsId = com.google.api.client.util.Preconditions.checkNotNull(operationsId, "Required parameter operationsId must be specified.");
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Part of `name`. The name of the operation resource. */
        @com.google.api.client.util.Key
        private java.lang.String appsId;

        /** Part of `name`. The name of the operation resource.
         */
        public java.lang.String getAppsId() {
          return appsId;
        }

        /** Part of `name`. The name of the operation resource. */
        public Get setAppsId(java.lang.String appsId) {
          this.appsId = appsId;
          return this;
        }

        /** Part of `name`. See documentation of `appsId`. */
        @com.google.api.client.util.Key
        private java.lang.String operationsId;

        /** Part of `name`. See documentation of `appsId`.
         */
        public java.lang.String getOperationsId() {
          return operationsId;
        }

        /** Part of `name`. See documentation of `appsId`. */
        public Get setOperationsId(java.lang.String operationsId) {
          this.operationsId = operationsId;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists operations that match the specified filter in the request. If the server doesn't support
       * this method, it returns UNIMPLEMENTED.NOTE: the name binding allows API services to override the
       * binding to use different resource name schemes, such as users/operations. To override the
       * binding, API services can add a binding such as "/v1/{name=users}/operations" to their service
       * configuration. For backwards compatibility, the default name includes the operations collection
       * id, however overriding users must ensure the name binding is the parent resource, without the
       * operations collection id.
       *
       * Create a request for the method "operations.list".
       *
       * This request holds the parameters needed by the appengine server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param appsId Part of `name`. The name of the operation's parent resource.
       * @return the request
       */
      public List list(java.lang.String appsId) throws java.io.IOException {
        List result = new List(appsId);
        initialize(result);
        return result;
      }

      public class List extends AppengineRequest<com.google.api.services.appengine.model.ListOperationsResponse> {

        private static final String REST_PATH = "v1beta/apps/{appsId}/operations";

        /**
         * Lists operations that match the specified filter in the request. If the server doesn't support
         * this method, it returns UNIMPLEMENTED.NOTE: the name binding allows API services to override
         * the binding to use different resource name schemes, such as users/operations. To override the
         * binding, API services can add a binding such as "/v1/{name=users}/operations" to their service
         * configuration. For backwards compatibility, the default name includes the operations collection
         * id, however overriding users must ensure the name binding is the parent resource, without the
         * operations collection id.
         *
         * Create a request for the method "operations.list".
         *
         * This request holds the parameters needed by the the appengine server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param appsId Part of `name`. The name of the operation's parent resource.
         * @since 1.13
         */
        protected List(java.lang.String appsId) {
          super(Appengine.this, "GET", REST_PATH, null, com.google.api.services.appengine.model.ListOperationsResponse.class);
          this.appsId = com.google.api.client.util.Preconditions.checkNotNull(appsId, "Required parameter appsId must be specified.");
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Part of `name`. The name of the operation's parent resource. */
        @com.google.api.client.util.Key
        private java.lang.String appsId;

        /** Part of `name`. The name of the operation's parent resource.
         */
        public java.lang.String getAppsId() {
          return appsId;
        }

        /** Part of `name`. The name of the operation's parent resource. */
        public List setAppsId(java.lang.String appsId) {
          this.appsId = appsId;
          return this;
        }

        /** The standard list filter. */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** The standard list filter.
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /** The standard list filter. */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /** The standard list page size. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The standard list page size.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The standard list page size. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** The standard list page token. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** The standard list page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** The standard list page token. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Services collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Appengine appengine = new Appengine(...);}
     *   {@code Appengine.Services.List request = appengine.services().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Services services() {
      return new Services();
    }

    /**
     * The "services" collection of methods.
     */
    public class Services {

      /**
       * Deletes the specified service and all enclosed versions.
       *
       * Create a request for the method "services.delete".
       *
       * This request holds the parameters needed by the appengine server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param appsId Part of `name`. Name of the resource requested. Example: apps/myapp/services/default.
       * @param servicesId Part of `name`. See documentation of `appsId`.
       * @return the request
       */
      public Delete delete(java.lang.String appsId, java.lang.String servicesId) throws java.io.IOException {
        Delete result = new Delete(appsId, servicesId);
        initialize(result);
        return result;
      }

      public class Delete extends AppengineRequest<com.google.api.services.appengine.model.Operation> {

        private static final String REST_PATH = "v1beta/apps/{appsId}/services/{servicesId}";

        /**
         * Deletes the specified service and all enclosed versions.
         *
         * Create a request for the method "services.delete".
         *
         * This request holds the parameters needed by the the appengine server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param appsId Part of `name`. Name of the resource requested. Example: apps/myapp/services/default.
         * @param servicesId Part of `name`. See documentation of `appsId`.
         * @since 1.13
         */
        protected Delete(java.lang.String appsId, java.lang.String servicesId) {
          super(Appengine.this, "DELETE", REST_PATH, null, com.google.api.services.appengine.model.Operation.class);
          this.appsId = com.google.api.client.util.Preconditions.checkNotNull(appsId, "Required parameter appsId must be specified.");
          this.servicesId = com.google.api.client.util.Preconditions.checkNotNull(servicesId, "Required parameter servicesId must be specified.");
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Part of `name`. Name of the resource requested. Example: apps/myapp/services/default.
         */
        @com.google.api.client.util.Key
        private java.lang.String appsId;

        /** Part of `name`. Name of the resource requested. Example: apps/myapp/services/default.
         */
        public java.lang.String getAppsId() {
          return appsId;
        }

        /**
         * Part of `name`. Name of the resource requested. Example: apps/myapp/services/default.
         */
        public Delete setAppsId(java.lang.String appsId) {
          this.appsId = appsId;
          return this;
        }

        /** Part of `name`. See documentation of `appsId`. */
        @com.google.api.client.util.Key
        private java.lang.String servicesId;

        /** Part of `name`. See documentation of `appsId`.
         */
        public java.lang.String getServicesId() {
          return servicesId;
        }

        /** Part of `name`. See documentation of `appsId`. */
        public Delete setServicesId(java.lang.String servicesId) {
          this.servicesId = servicesId;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets the current configuration of the specified service.
       *
       * Create a request for the method "services.get".
       *
       * This request holds the parameters needed by the appengine server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param appsId Part of `name`. Name of the resource requested. Example: apps/myapp/services/default.
       * @param servicesId Part of `name`. See documentation of `appsId`.
       * @return the request
       */
      public Get get(java.lang.String appsId, java.lang.String servicesId) throws java.io.IOException {
        Get result = new Get(appsId, servicesId);
        initialize(result);
        return result;
      }

      public class Get extends AppengineRequest<com.google.api.services.appengine.model.Service> {

        private static final String REST_PATH = "v1beta/apps/{appsId}/services/{servicesId}";

        /**
         * Gets the current configuration of the specified service.
         *
         * Create a request for the method "services.get".
         *
         * This request holds the parameters needed by the the appengine server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param appsId Part of `name`. Name of the resource requested. Example: apps/myapp/services/default.
         * @param servicesId Part of `name`. See documentation of `appsId`.
         * @since 1.13
         */
        protected Get(java.lang.String appsId, java.lang.String servicesId) {
          super(Appengine.this, "GET", REST_PATH, null, com.google.api.services.appengine.model.Service.class);
          this.appsId = com.google.api.client.util.Preconditions.checkNotNull(appsId, "Required parameter appsId must be specified.");
          this.servicesId = com.google.api.client.util.Preconditions.checkNotNull(servicesId, "Required parameter servicesId must be specified.");
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Part of `name`. Name of the resource requested. Example: apps/myapp/services/default.
         */
        @com.google.api.client.util.Key
        private java.lang.String appsId;

        /** Part of `name`. Name of the resource requested. Example: apps/myapp/services/default.
         */
        public java.lang.String getAppsId() {
          return appsId;
        }

        /**
         * Part of `name`. Name of the resource requested. Example: apps/myapp/services/default.
         */
        public Get setAppsId(java.lang.String appsId) {
          this.appsId = appsId;
          return this;
        }

        /** Part of `name`. See documentation of `appsId`. */
        @com.google.api.client.util.Key
        private java.lang.String servicesId;

        /** Part of `name`. See documentation of `appsId`.
         */
        public java.lang.String getServicesId() {
          return servicesId;
        }

        /** Part of `name`. See documentation of `appsId`. */
        public Get setServicesId(java.lang.String servicesId) {
          this.servicesId = servicesId;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists all the services in the application.
       *
       * Create a request for the method "services.list".
       *
       * This request holds the parameters needed by the appengine server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param appsId Part of `parent`. Name of the parent Application resource. Example: apps/myapp.
       * @return the request
       */
      public List list(java.lang.String appsId) throws java.io.IOException {
        List result = new List(appsId);
        initialize(result);
        return result;
      }

      public class List extends AppengineRequest<com.google.api.services.appengine.model.ListServicesResponse> {

        private static final String REST_PATH = "v1beta/apps/{appsId}/services";

        /**
         * Lists all the services in the application.
         *
         * Create a request for the method "services.list".
         *
         * This request holds the parameters needed by the the appengine server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param appsId Part of `parent`. Name of the parent Application resource. Example: apps/myapp.
         * @since 1.13
         */
        protected List(java.lang.String appsId) {
          super(Appengine.this, "GET", REST_PATH, null, com.google.api.services.appengine.model.ListServicesResponse.class);
          this.appsId = com.google.api.client.util.Preconditions.checkNotNull(appsId, "Required parameter appsId must be specified.");
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Part of `parent`. Name of the parent Application resource. Example: apps/myapp. */
        @com.google.api.client.util.Key
        private java.lang.String appsId;

        /** Part of `parent`. Name of the parent Application resource. Example: apps/myapp.
         */
        public java.lang.String getAppsId() {
          return appsId;
        }

        /** Part of `parent`. Name of the parent Application resource. Example: apps/myapp. */
        public List setAppsId(java.lang.String appsId) {
          this.appsId = appsId;
          return this;
        }

        /** Maximum results to return per page. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Maximum results to return per page.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** Maximum results to return per page. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** Continuation token for fetching the next page of results. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Continuation token for fetching the next page of results.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** Continuation token for fetching the next page of results. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates the configuration of the specified service.
       *
       * Create a request for the method "services.patch".
       *
       * This request holds the parameters needed by the appengine server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param appsId Part of `name`. Name of the resource to update. Example: apps/myapp/services/default.
       * @param servicesId Part of `name`. See documentation of `appsId`.
       * @param content the {@link com.google.api.services.appengine.model.Service}
       * @return the request
       */
      public Patch patch(java.lang.String appsId, java.lang.String servicesId, com.google.api.services.appengine.model.Service content) throws java.io.IOException {
        Patch result = new Patch(appsId, servicesId, content);
        initialize(result);
        return result;
      }

      public class Patch extends AppengineRequest<com.google.api.services.appengine.model.Operation> {

        private static final String REST_PATH = "v1beta/apps/{appsId}/services/{servicesId}";

        /**
         * Updates the configuration of the specified service.
         *
         * Create a request for the method "services.patch".
         *
         * This request holds the parameters needed by the the appengine server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param appsId Part of `name`. Name of the resource to update. Example: apps/myapp/services/default.
         * @param servicesId Part of `name`. See documentation of `appsId`.
         * @param content the {@link com.google.api.services.appengine.model.Service}
         * @since 1.13
         */
        protected Patch(java.lang.String appsId, java.lang.String servicesId, com.google.api.services.appengine.model.Service content) {
          super(Appengine.this, "PATCH", REST_PATH, content, com.google.api.services.appengine.model.Operation.class);
          this.appsId = com.google.api.client.util.Preconditions.checkNotNull(appsId, "Required parameter appsId must be specified.");
          this.servicesId = com.google.api.client.util.Preconditions.checkNotNull(servicesId, "Required parameter servicesId must be specified.");
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Part of `name`. Name of the resource to update. Example: apps/myapp/services/default.
         */
        @com.google.api.client.util.Key
        private java.lang.String appsId;

        /** Part of `name`. Name of the resource to update. Example: apps/myapp/services/default.
         */
        public java.lang.String getAppsId() {
          return appsId;
        }

        /**
         * Part of `name`. Name of the resource to update. Example: apps/myapp/services/default.
         */
        public Patch setAppsId(java.lang.String appsId) {
          this.appsId = appsId;
          return this;
        }

        /** Part of `name`. See documentation of `appsId`. */
        @com.google.api.client.util.Key
        private java.lang.String servicesId;

        /** Part of `name`. See documentation of `appsId`.
         */
        public java.lang.String getServicesId() {
          return servicesId;
        }

        /** Part of `name`. See documentation of `appsId`. */
        public Patch setServicesId(java.lang.String servicesId) {
          this.servicesId = servicesId;
          return this;
        }

        /**
         * Set to true to gradually shift traffic to one or more versions that you specify. By
         * default, traffic is shifted immediately. For gradual traffic migration, the target
         * versions must be located within instances that are configured for both warmup requests
         * (https://cloud.google.com/appengine/docs/admin-
         * api/reference/rest/v1beta/apps.services.versions#InboundServiceType) and automatic
         * scaling (https://cloud.google.com/appengine/docs/admin-
         * api/reference/rest/v1beta/apps.services.versions#AutomaticScaling). You must specify the
         * shardBy (https://cloud.google.com/appengine/docs/admin-
         * api/reference/rest/v1beta/apps.services#ShardBy) field in the Service resource. Gradual
         * traffic migration is not supported in the App Engine flexible environment. For examples,
         * see Migrating and Splitting Traffic (https://cloud.google.com/appengine/docs/admin-api
         * /migrating-splitting-traffic).
         */
        @com.google.api.client.util.Key
        private java.lang.Boolean migrateTraffic;

        /** Set to true to gradually shift traffic to one or more versions that you specify. By default,
       traffic is shifted immediately. For gradual traffic migration, the target versions must be located
       within instances that are configured for both warmup requests
       (https://cloud.google.com/appengine/docs/admin-
       api/reference/rest/v1beta/apps.services.versions#InboundServiceType) and automatic scaling
       (https://cloud.google.com/appengine/docs/admin-
       api/reference/rest/v1beta/apps.services.versions#AutomaticScaling). You must specify the shardBy
       (https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1beta/apps.services#ShardBy)
       field in the Service resource. Gradual traffic migration is not supported in the App Engine
       flexible environment. For examples, see Migrating and Splitting Traffic
       (https://cloud.google.com/appengine/docs/admin-api/migrating-splitting-traffic).
         */
        public java.lang.Boolean getMigrateTraffic() {
          return migrateTraffic;
        }

        /**
         * Set to true to gradually shift traffic to one or more versions that you specify. By
         * default, traffic is shifted immediately. For gradual traffic migration, the target
         * versions must be located within instances that are configured for both warmup requests
         * (https://cloud.google.com/appengine/docs/admin-
         * api/reference/rest/v1beta/apps.services.versions#InboundServiceType) and automatic
         * scaling (https://cloud.google.com/appengine/docs/admin-
         * api/reference/rest/v1beta/apps.services.versions#AutomaticScaling). You must specify the
         * shardBy (https://cloud.google.com/appengine/docs/admin-
         * api/reference/rest/v1beta/apps.services#ShardBy) field in the Service resource. Gradual
         * traffic migration is not supported in the App Engine flexible environment. For examples,
         * see Migrating and Splitting Traffic (https://cloud.google.com/appengine/docs/admin-api
         * /migrating-splitting-traffic).
         */
        public Patch setMigrateTraffic(java.lang.Boolean migrateTraffic) {
          this.migrateTraffic = migrateTraffic;
          return this;
        }

        /** Standard field mask for the set of fields to be updated. */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Standard field mask for the set of fields to be updated.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /** Standard field mask for the set of fields to be updated. */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Versions collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Appengine appengine = new Appengine(...);}
       *   {@code Appengine.Versions.List request = appengine.versions().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Versions versions() {
        return new Versions();
      }

      /**
       * The "versions" collection of methods.
       */
      public class Versions {

        /**
         * Deploys code and resource files to a new version.
         *
         * Create a request for the method "versions.create".
         *
         * This request holds the parameters needed by the appengine server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param appsId Part of `parent`. Name of the parent resource to create this version under. Example:
         *        apps/myapp/services/default.
         * @param servicesId Part of `parent`. See documentation of `appsId`.
         * @param content the {@link com.google.api.services.appengine.model.Version}
         * @return the request
         */
        public Create create(java.lang.String appsId, java.lang.String servicesId, com.google.api.services.appengine.model.Version content) throws java.io.IOException {
          Create result = new Create(appsId, servicesId, content);
          initialize(result);
          return result;
        }

        public class Create extends AppengineRequest<com.google.api.services.appengine.model.Operation> {

          private static final String REST_PATH = "v1beta/apps/{appsId}/services/{servicesId}/versions";

          /**
           * Deploys code and resource files to a new version.
           *
           * Create a request for the method "versions.create".
           *
           * This request holds the parameters needed by the the appengine server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param appsId Part of `parent`. Name of the parent resource to create this version under. Example:
         *        apps/myapp/services/default.
           * @param servicesId Part of `parent`. See documentation of `appsId`.
           * @param content the {@link com.google.api.services.appengine.model.Version}
           * @since 1.13
           */
          protected Create(java.lang.String appsId, java.lang.String servicesId, com.google.api.services.appengine.model.Version content) {
            super(Appengine.this, "POST", REST_PATH, content, com.google.api.services.appengine.model.Operation.class);
            this.appsId = com.google.api.client.util.Preconditions.checkNotNull(appsId, "Required parameter appsId must be specified.");
            this.servicesId = com.google.api.client.util.Preconditions.checkNotNull(servicesId, "Required parameter servicesId must be specified.");
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Part of `parent`. Name of the parent resource to create this version under. Example:
           * apps/myapp/services/default.
           */
          @com.google.api.client.util.Key
          private java.lang.String appsId;

          /** Part of `parent`. Name of the parent resource to create this version under. Example:
         apps/myapp/services/default.
           */
          public java.lang.String getAppsId() {
            return appsId;
          }

          /**
           * Part of `parent`. Name of the parent resource to create this version under. Example:
           * apps/myapp/services/default.
           */
          public Create setAppsId(java.lang.String appsId) {
            this.appsId = appsId;
            return this;
          }

          /** Part of `parent`. See documentation of `appsId`. */
          @com.google.api.client.util.Key
          private java.lang.String servicesId;

          /** Part of `parent`. See documentation of `appsId`.
           */
          public java.lang.String getServicesId() {
            return servicesId;
          }

          /** Part of `parent`. See documentation of `appsId`. */
          public Create setServicesId(java.lang.String servicesId) {
            this.servicesId = servicesId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes an existing Version resource.
         *
         * Create a request for the method "versions.delete".
         *
         * This request holds the parameters needed by the appengine server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param appsId Part of `name`. Name of the resource requested. Example: apps/myapp/services/default/versions/v1.
         * @param servicesId Part of `name`. See documentation of `appsId`.
         * @param versionsId Part of `name`. See documentation of `appsId`.
         * @return the request
         */
        public Delete delete(java.lang.String appsId, java.lang.String servicesId, java.lang.String versionsId) throws java.io.IOException {
          Delete result = new Delete(appsId, servicesId, versionsId);
          initialize(result);
          return result;
        }

        public class Delete extends AppengineRequest<com.google.api.services.appengine.model.Operation> {

          private static final String REST_PATH = "v1beta/apps/{appsId}/services/{servicesId}/versions/{versionsId}";

          /**
           * Deletes an existing Version resource.
           *
           * Create a request for the method "versions.delete".
           *
           * This request holds the parameters needed by the the appengine server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param appsId Part of `name`. Name of the resource requested. Example: apps/myapp/services/default/versions/v1.
           * @param servicesId Part of `name`. See documentation of `appsId`.
           * @param versionsId Part of `name`. See documentation of `appsId`.
           * @since 1.13
           */
          protected Delete(java.lang.String appsId, java.lang.String servicesId, java.lang.String versionsId) {
            super(Appengine.this, "DELETE", REST_PATH, null, com.google.api.services.appengine.model.Operation.class);
            this.appsId = com.google.api.client.util.Preconditions.checkNotNull(appsId, "Required parameter appsId must be specified.");
            this.servicesId = com.google.api.client.util.Preconditions.checkNotNull(servicesId, "Required parameter servicesId must be specified.");
            this.versionsId = com.google.api.client.util.Preconditions.checkNotNull(versionsId, "Required parameter versionsId must be specified.");
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Part of `name`. Name of the resource requested. Example:
           * apps/myapp/services/default/versions/v1.
           */
          @com.google.api.client.util.Key
          private java.lang.String appsId;

          /** Part of `name`. Name of the resource requested. Example: apps/myapp/services/default/versions/v1.
           */
          public java.lang.String getAppsId() {
            return appsId;
          }

          /**
           * Part of `name`. Name of the resource requested. Example:
           * apps/myapp/services/default/versions/v1.
           */
          public Delete setAppsId(java.lang.String appsId) {
            this.appsId = appsId;
            return this;
          }

          /** Part of `name`. See documentation of `appsId`. */
          @com.google.api.client.util.Key
          private java.lang.String servicesId;

          /** Part of `name`. See documentation of `appsId`.
           */
          public java.lang.String getServicesId() {
            return servicesId;
          }

          /** Part of `name`. See documentation of `appsId`. */
          public Delete setServicesId(java.lang.String servicesId) {
            this.servicesId = servicesId;
            return this;
          }

          /** Part of `name`. See documentation of `appsId`. */
          @com.google.api.client.util.Key
          private java.lang.String versionsId;

          /** Part of `name`. See documentation of `appsId`.
           */
          public java.lang.String getVersionsId() {
            return versionsId;
          }

          /** Part of `name`. See documentation of `appsId`. */
          public Delete setVersionsId(java.lang.String versionsId) {
            this.versionsId = versionsId;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets the specified Version resource. By default, only a BASIC_VIEW will be returned. Specify the
         * FULL_VIEW parameter to get the full resource.
         *
         * Create a request for the method "versions.get".
         *
         * This request holds the parameters needed by the appengine server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param appsId Part of `name`. Name of the resource requested. Example: apps/myapp/services/default/versions/v1.
         * @param servicesId Part of `name`. See documentation of `appsId`.
         * @param versionsId Part of `name`. See documentation of `appsId`.
         * @return the request
         */
        public Get get(java.lang.String appsId, java.lang.String servicesId, java.lang.String versionsId) throws java.io.IOException {
          Get result = new Get(appsId, servicesId, versionsId);
          initialize(result);
          return result;
        }

        public class Get extends AppengineRequest<com.google.api.services.appengine.model.Version> {

          private static final String REST_PATH = "v1beta/apps/{appsId}/services/{servicesId}/versions/{versionsId}";

          /**
           * Gets the specified Version resource. By default, only a BASIC_VIEW will be returned. Specify
           * the FULL_VIEW parameter to get the full resource.
           *
           * Create a request for the method "versions.get".
           *
           * This request holds the parameters needed by the the appengine server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param appsId Part of `name`. Name of the resource requested. Example: apps/myapp/services/default/versions/v1.
           * @param servicesId Part of `name`. See documentation of `appsId`.
           * @param versionsId Part of `name`. See documentation of `appsId`.
           * @since 1.13
           */
          protected Get(java.lang.String appsId, java.lang.String servicesId, java.lang.String versionsId) {
            super(Appengine.this, "GET", REST_PATH, null, com.google.api.services.appengine.model.Version.class);
            this.appsId = com.google.api.client.util.Preconditions.checkNotNull(appsId, "Required parameter appsId must be specified.");
            this.servicesId = com.google.api.client.util.Preconditions.checkNotNull(servicesId, "Required parameter servicesId must be specified.");
            this.versionsId = com.google.api.client.util.Preconditions.checkNotNull(versionsId, "Required parameter versionsId must be specified.");
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Part of `name`. Name of the resource requested. Example:
           * apps/myapp/services/default/versions/v1.
           */
          @com.google.api.client.util.Key
          private java.lang.String appsId;

          /** Part of `name`. Name of the resource requested. Example: apps/myapp/services/default/versions/v1.
           */
          public java.lang.String getAppsId() {
            return appsId;
          }

          /**
           * Part of `name`. Name of the resource requested. Example:
           * apps/myapp/services/default/versions/v1.
           */
          public Get setAppsId(java.lang.String appsId) {
            this.appsId = appsId;
            return this;
          }

          /** Part of `name`. See documentation of `appsId`. */
          @com.google.api.client.util.Key
          private java.lang.String servicesId;

          /** Part of `name`. See documentation of `appsId`.
           */
          public java.lang.String getServicesId() {
            return servicesId;
          }

          /** Part of `name`. See documentation of `appsId`. */
          public Get setServicesId(java.lang.String servicesId) {
            this.servicesId = servicesId;
            return this;
          }

          /** Part of `name`. See documentation of `appsId`. */
          @com.google.api.client.util.Key
          private java.lang.String versionsId;

          /** Part of `name`. See documentation of `appsId`.
           */
          public java.lang.String getVersionsId() {
            return versionsId;
          }

          /** Part of `name`. See documentation of `appsId`. */
          public Get setVersionsId(java.lang.String versionsId) {
            this.versionsId = versionsId;
            return this;
          }

          /** Controls the set of fields returned in the Get response. */
          @com.google.api.client.util.Key
          private java.lang.String view;

          /** Controls the set of fields returned in the Get response.
           */
          public java.lang.String getView() {
            return view;
          }

          /** Controls the set of fields returned in the Get response. */
          public Get setView(java.lang.String view) {
            this.view = view;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists the versions of a service.
         *
         * Create a request for the method "versions.list".
         *
         * This request holds the parameters needed by the appengine server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param appsId Part of `parent`. Name of the parent Service resource. Example: apps/myapp/services/default.
         * @param servicesId Part of `parent`. See documentation of `appsId`.
         * @return the request
         */
        public List list(java.lang.String appsId, java.lang.String servicesId) throws java.io.IOException {
          List result = new List(appsId, servicesId);
          initialize(result);
          return result;
        }

        public class List extends AppengineRequest<com.google.api.services.appengine.model.ListVersionsResponse> {

          private static final String REST_PATH = "v1beta/apps/{appsId}/services/{servicesId}/versions";

          /**
           * Lists the versions of a service.
           *
           * Create a request for the method "versions.list".
           *
           * This request holds the parameters needed by the the appengine server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param appsId Part of `parent`. Name of the parent Service resource. Example: apps/myapp/services/default.
           * @param servicesId Part of `parent`. See documentation of `appsId`.
           * @since 1.13
           */
          protected List(java.lang.String appsId, java.lang.String servicesId) {
            super(Appengine.this, "GET", REST_PATH, null, com.google.api.services.appengine.model.ListVersionsResponse.class);
            this.appsId = com.google.api.client.util.Preconditions.checkNotNull(appsId, "Required parameter appsId must be specified.");
            this.servicesId = com.google.api.client.util.Preconditions.checkNotNull(servicesId, "Required parameter servicesId must be specified.");
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Part of `parent`. Name of the parent Service resource. Example:
           * apps/myapp/services/default.
           */
          @com.google.api.client.util.Key
          private java.lang.String appsId;

          /** Part of `parent`. Name of the parent Service resource. Example: apps/myapp/services/default.
           */
          public java.lang.String getAppsId() {
            return appsId;
          }

          /**
           * Part of `parent`. Name of the parent Service resource. Example:
           * apps/myapp/services/default.
           */
          public List setAppsId(java.lang.String appsId) {
            this.appsId = appsId;
            return this;
          }

          /** Part of `parent`. See documentation of `appsId`. */
          @com.google.api.client.util.Key
          private java.lang.String servicesId;

          /** Part of `parent`. See documentation of `appsId`.
           */
          public java.lang.String getServicesId() {
            return servicesId;
          }

          /** Part of `parent`. See documentation of `appsId`. */
          public List setServicesId(java.lang.String servicesId) {
            this.servicesId = servicesId;
            return this;
          }

          /** Maximum results to return per page. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Maximum results to return per page.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** Maximum results to return per page. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** Continuation token for fetching the next page of results. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Continuation token for fetching the next page of results.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** Continuation token for fetching the next page of results. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          /** Controls the set of fields returned in the List response. */
          @com.google.api.client.util.Key
          private java.lang.String view;

          /** Controls the set of fields returned in the List response.
           */
          public java.lang.String getView() {
            return view;
          }

          /** Controls the set of fields returned in the List response. */
          public List setView(java.lang.String view) {
            this.view = view;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates the specified Version resource. You can specify the following fields depending on the App
         * Engine environment and type of scaling that the version resource uses:Standard environment
         * instance_class (https://cloud.google.com/appengine/docs/admin-
         * api/reference/rest/v1beta/apps.services.versions#Version.FIELDS.instance_class)automatic scaling
         * in the standard environment: automatic_scaling.min_idle_instances
         * (https://cloud.google.com/appengine/docs/admin-
         * api/reference/rest/v1beta/apps.services.versions#Version.FIELDS.automatic_scaling)
         * automatic_scaling.max_idle_instances (https://cloud.google.com/appengine/docs/admin-
         * api/reference/rest/v1beta/apps.services.versions#Version.FIELDS.automatic_scaling)
         * automaticScaling.standard_scheduler_settings.max_instances
         * (https://cloud.google.com/appengine/docs/admin-
         * api/reference/rest/v1beta/apps.services.versions#StandardSchedulerSettings)
         * automaticScaling.standard_scheduler_settings.min_instances
         * (https://cloud.google.com/appengine/docs/admin-
         * api/reference/rest/v1beta/apps.services.versions#StandardSchedulerSettings)
         * automaticScaling.standard_scheduler_settings.target_cpu_utilization
         * (https://cloud.google.com/appengine/docs/admin-
         * api/reference/rest/v1beta/apps.services.versions#StandardSchedulerSettings)
         * automaticScaling.standard_scheduler_settings.target_throughput_utilization
         * (https://cloud.google.com/appengine/docs/admin-
         * api/reference/rest/v1beta/apps.services.versions#StandardSchedulerSettings)basic scaling or
         * manual scaling in the standard environment: serving_status
         * (https://cloud.google.com/appengine/docs/admin-
         * api/reference/rest/v1beta/apps.services.versions#Version.FIELDS.serving_status)Flexible
         * environment serving_status (https://cloud.google.com/appengine/docs/admin-
         * api/reference/rest/v1beta/apps.services.versions#Version.FIELDS.serving_status)automatic scaling
         * in the flexible environment: automatic_scaling.min_total_instances
         * (https://cloud.google.com/appengine/docs/admin-
         * api/reference/rest/v1beta/apps.services.versions#Version.FIELDS.automatic_scaling)
         * automatic_scaling.max_total_instances (https://cloud.google.com/appengine/docs/admin-
         * api/reference/rest/v1beta/apps.services.versions#Version.FIELDS.automatic_scaling)
         * automatic_scaling.cool_down_period_sec (https://cloud.google.com/appengine/docs/admin-
         * api/reference/rest/v1beta/apps.services.versions#Version.FIELDS.automatic_scaling)
         * automatic_scaling.cpu_utilization.target_utilization (https://cloud.google.com/appengine/docs
         * /admin-api/reference/rest/v1beta/apps.services.versions#Version.FIELDS.automatic_scaling)
         *
         * Create a request for the method "versions.patch".
         *
         * This request holds the parameters needed by the appengine server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param appsId Part of `name`. Name of the resource to update. Example: apps/myapp/services/default/versions/1.
         * @param servicesId Part of `name`. See documentation of `appsId`.
         * @param versionsId Part of `name`. See documentation of `appsId`.
         * @param content the {@link com.google.api.services.appengine.model.Version}
         * @return the request
         */
        public Patch patch(java.lang.String appsId, java.lang.String servicesId, java.lang.String versionsId, com.google.api.services.appengine.model.Version content) throws java.io.IOException {
          Patch result = new Patch(appsId, servicesId, versionsId, content);
          initialize(result);
          return result;
        }

        public class Patch extends AppengineRequest<com.google.api.services.appengine.model.Operation> {

          private static final String REST_PATH = "v1beta/apps/{appsId}/services/{servicesId}/versions/{versionsId}";

          /**
           * Updates the specified Version resource. You can specify the following fields depending on the
           * App Engine environment and type of scaling that the version resource uses:Standard environment
           * instance_class (https://cloud.google.com/appengine/docs/admin-
           * api/reference/rest/v1beta/apps.services.versions#Version.FIELDS.instance_class)automatic
           * scaling in the standard environment: automatic_scaling.min_idle_instances
           * (https://cloud.google.com/appengine/docs/admin-
           * api/reference/rest/v1beta/apps.services.versions#Version.FIELDS.automatic_scaling)
           * automatic_scaling.max_idle_instances (https://cloud.google.com/appengine/docs/admin-
           * api/reference/rest/v1beta/apps.services.versions#Version.FIELDS.automatic_scaling)
           * automaticScaling.standard_scheduler_settings.max_instances
           * (https://cloud.google.com/appengine/docs/admin-
           * api/reference/rest/v1beta/apps.services.versions#StandardSchedulerSettings)
           * automaticScaling.standard_scheduler_settings.min_instances
           * (https://cloud.google.com/appengine/docs/admin-
           * api/reference/rest/v1beta/apps.services.versions#StandardSchedulerSettings)
           * automaticScaling.standard_scheduler_settings.target_cpu_utilization
           * (https://cloud.google.com/appengine/docs/admin-
           * api/reference/rest/v1beta/apps.services.versions#StandardSchedulerSettings)
           * automaticScaling.standard_scheduler_settings.target_throughput_utilization
           * (https://cloud.google.com/appengine/docs/admin-
           * api/reference/rest/v1beta/apps.services.versions#StandardSchedulerSettings)basic scaling or
           * manual scaling in the standard environment: serving_status
           * (https://cloud.google.com/appengine/docs/admin-
           * api/reference/rest/v1beta/apps.services.versions#Version.FIELDS.serving_status)Flexible
           * environment serving_status (https://cloud.google.com/appengine/docs/admin-
           * api/reference/rest/v1beta/apps.services.versions#Version.FIELDS.serving_status)automatic
           * scaling in the flexible environment: automatic_scaling.min_total_instances
           * (https://cloud.google.com/appengine/docs/admin-
           * api/reference/rest/v1beta/apps.services.versions#Version.FIELDS.automatic_scaling)
           * automatic_scaling.max_total_instances (https://cloud.google.com/appengine/docs/admin-
           * api/reference/rest/v1beta/apps.services.versions#Version.FIELDS.automatic_scaling)
           * automatic_scaling.cool_down_period_sec (https://cloud.google.com/appengine/docs/admin-
           * api/reference/rest/v1beta/apps.services.versions#Version.FIELDS.automatic_scaling)
           * automatic_scaling.cpu_utilization.target_utilization (https://cloud.google.com/appengine/docs
           * /admin-api/reference/rest/v1beta/apps.services.versions#Version.FIELDS.automatic_scaling)
           *
           * Create a request for the method "versions.patch".
           *
           * This request holds the parameters needed by the the appengine server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param appsId Part of `name`. Name of the resource to update. Example: apps/myapp/services/default/versions/1.
           * @param servicesId Part of `name`. See documentation of `appsId`.
           * @param versionsId Part of `name`. See documentation of `appsId`.
           * @param content the {@link com.google.api.services.appengine.model.Version}
           * @since 1.13
           */
          protected Patch(java.lang.String appsId, java.lang.String servicesId, java.lang.String versionsId, com.google.api.services.appengine.model.Version content) {
            super(Appengine.this, "PATCH", REST_PATH, content, com.google.api.services.appengine.model.Operation.class);
            this.appsId = com.google.api.client.util.Preconditions.checkNotNull(appsId, "Required parameter appsId must be specified.");
            this.servicesId = com.google.api.client.util.Preconditions.checkNotNull(servicesId, "Required parameter servicesId must be specified.");
            this.versionsId = com.google.api.client.util.Preconditions.checkNotNull(versionsId, "Required parameter versionsId must be specified.");
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Part of `name`. Name of the resource to update. Example:
           * apps/myapp/services/default/versions/1.
           */
          @com.google.api.client.util.Key
          private java.lang.String appsId;

          /** Part of `name`. Name of the resource to update. Example: apps/myapp/services/default/versions/1.
           */
          public java.lang.String getAppsId() {
            return appsId;
          }

          /**
           * Part of `name`. Name of the resource to update. Example:
           * apps/myapp/services/default/versions/1.
           */
          public Patch setAppsId(java.lang.String appsId) {
            this.appsId = appsId;
            return this;
          }

          /** Part of `name`. See documentation of `appsId`. */
          @com.google.api.client.util.Key
          private java.lang.String servicesId;

          /** Part of `name`. See documentation of `appsId`.
           */
          public java.lang.String getServicesId() {
            return servicesId;
          }

          /** Part of `name`. See documentation of `appsId`. */
          public Patch setServicesId(java.lang.String servicesId) {
            this.servicesId = servicesId;
            return this;
          }

          /** Part of `name`. See documentation of `appsId`. */
          @com.google.api.client.util.Key
          private java.lang.String versionsId;

          /** Part of `name`. See documentation of `appsId`.
           */
          public java.lang.String getVersionsId() {
            return versionsId;
          }

          /** Part of `name`. See documentation of `appsId`. */
          public Patch setVersionsId(java.lang.String versionsId) {
            this.versionsId = versionsId;
            return this;
          }

          /** Standard field mask for the set of fields to be updated. */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Standard field mask for the set of fields to be updated.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /** Standard field mask for the set of fields to be updated. */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Instances collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Appengine appengine = new Appengine(...);}
         *   {@code Appengine.Instances.List request = appengine.instances().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Instances instances() {
          return new Instances();
        }

        /**
         * The "instances" collection of methods.
         */
        public class Instances {

          /**
           * Enables debugging on a VM instance. This allows you to use the SSH command to connect to the
           * virtual machine where the instance lives. While in "debug mode", the instance continues to serve
           * live traffic. You should delete the instance when you are done debugging and then allow the
           * system to take over and determine if another instance should be started.Only applicable for
           * instances in App Engine flexible environment.
           *
           * Create a request for the method "instances.debug".
           *
           * This request holds the parameters needed by the appengine server.  After setting any optional
           * parameters, call the {@link Debug#execute()} method to invoke the remote operation.
           *
           * @param appsId Part of `name`. Name of the resource requested. Example:
           *        apps/myapp/services/default/versions/v1/instances/instance-1.
           * @param servicesId Part of `name`. See documentation of `appsId`.
           * @param versionsId Part of `name`. See documentation of `appsId`.
           * @param instancesId Part of `name`. See documentation of `appsId`.
           * @param content the {@link com.google.api.services.appengine.model.DebugInstanceRequest}
           * @return the request
           */
          public Debug debug(java.lang.String appsId, java.lang.String servicesId, java.lang.String versionsId, java.lang.String instancesId, com.google.api.services.appengine.model.DebugInstanceRequest content) throws java.io.IOException {
            Debug result = new Debug(appsId, servicesId, versionsId, instancesId, content);
            initialize(result);
            return result;
          }

          public class Debug extends AppengineRequest<com.google.api.services.appengine.model.Operation> {

            private static final String REST_PATH = "v1beta/apps/{appsId}/services/{servicesId}/versions/{versionsId}/instances/{instancesId}:debug";

            /**
             * Enables debugging on a VM instance. This allows you to use the SSH command to connect to the
             * virtual machine where the instance lives. While in "debug mode", the instance continues to
             * serve live traffic. You should delete the instance when you are done debugging and then allow
             * the system to take over and determine if another instance should be started.Only applicable for
             * instances in App Engine flexible environment.
             *
             * Create a request for the method "instances.debug".
             *
             * This request holds the parameters needed by the the appengine server.  After setting any
             * optional parameters, call the {@link Debug#execute()} method to invoke the remote operation.
             * <p> {@link
             * Debug#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param appsId Part of `name`. Name of the resource requested. Example:
           *        apps/myapp/services/default/versions/v1/instances/instance-1.
             * @param servicesId Part of `name`. See documentation of `appsId`.
             * @param versionsId Part of `name`. See documentation of `appsId`.
             * @param instancesId Part of `name`. See documentation of `appsId`.
             * @param content the {@link com.google.api.services.appengine.model.DebugInstanceRequest}
             * @since 1.13
             */
            protected Debug(java.lang.String appsId, java.lang.String servicesId, java.lang.String versionsId, java.lang.String instancesId, com.google.api.services.appengine.model.DebugInstanceRequest content) {
              super(Appengine.this, "POST", REST_PATH, content, com.google.api.services.appengine.model.Operation.class);
              this.appsId = com.google.api.client.util.Preconditions.checkNotNull(appsId, "Required parameter appsId must be specified.");
              this.servicesId = com.google.api.client.util.Preconditions.checkNotNull(servicesId, "Required parameter servicesId must be specified.");
              this.versionsId = com.google.api.client.util.Preconditions.checkNotNull(versionsId, "Required parameter versionsId must be specified.");
              this.instancesId = com.google.api.client.util.Preconditions.checkNotNull(instancesId, "Required parameter instancesId must be specified.");
            }

            @Override
            public Debug set$Xgafv(java.lang.String $Xgafv) {
              return (Debug) super.set$Xgafv($Xgafv);
            }

            @Override
            public Debug setAccessToken(java.lang.String accessToken) {
              return (Debug) super.setAccessToken(accessToken);
            }

            @Override
            public Debug setAlt(java.lang.String alt) {
              return (Debug) super.setAlt(alt);
            }

            @Override
            public Debug setCallback(java.lang.String callback) {
              return (Debug) super.setCallback(callback);
            }

            @Override
            public Debug setFields(java.lang.String fields) {
              return (Debug) super.setFields(fields);
            }

            @Override
            public Debug setKey(java.lang.String key) {
              return (Debug) super.setKey(key);
            }

            @Override
            public Debug setOauthToken(java.lang.String oauthToken) {
              return (Debug) super.setOauthToken(oauthToken);
            }

            @Override
            public Debug setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Debug) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Debug setQuotaUser(java.lang.String quotaUser) {
              return (Debug) super.setQuotaUser(quotaUser);
            }

            @Override
            public Debug setUploadType(java.lang.String uploadType) {
              return (Debug) super.setUploadType(uploadType);
            }

            @Override
            public Debug setUploadProtocol(java.lang.String uploadProtocol) {
              return (Debug) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Part of `name`. Name of the resource requested. Example:
             * apps/myapp/services/default/versions/v1/instances/instance-1.
             */
            @com.google.api.client.util.Key
            private java.lang.String appsId;

            /** Part of `name`. Name of the resource requested. Example:
           apps/myapp/services/default/versions/v1/instances/instance-1.
             */
            public java.lang.String getAppsId() {
              return appsId;
            }

            /**
             * Part of `name`. Name of the resource requested. Example:
             * apps/myapp/services/default/versions/v1/instances/instance-1.
             */
            public Debug setAppsId(java.lang.String appsId) {
              this.appsId = appsId;
              return this;
            }

            /** Part of `name`. See documentation of `appsId`. */
            @com.google.api.client.util.Key
            private java.lang.String servicesId;

            /** Part of `name`. See documentation of `appsId`.
             */
            public java.lang.String getServicesId() {
              return servicesId;
            }

            /** Part of `name`. See documentation of `appsId`. */
            public Debug setServicesId(java.lang.String servicesId) {
              this.servicesId = servicesId;
              return this;
            }

            /** Part of `name`. See documentation of `appsId`. */
            @com.google.api.client.util.Key
            private java.lang.String versionsId;

            /** Part of `name`. See documentation of `appsId`.
             */
            public java.lang.String getVersionsId() {
              return versionsId;
            }

            /** Part of `name`. See documentation of `appsId`. */
            public Debug setVersionsId(java.lang.String versionsId) {
              this.versionsId = versionsId;
              return this;
            }

            /** Part of `name`. See documentation of `appsId`. */
            @com.google.api.client.util.Key
            private java.lang.String instancesId;

            /** Part of `name`. See documentation of `appsId`.
             */
            public java.lang.String getInstancesId() {
              return instancesId;
            }

            /** Part of `name`. See documentation of `appsId`. */
            public Debug setInstancesId(java.lang.String instancesId) {
              this.instancesId = instancesId;
              return this;
            }

            @Override
            public Debug set(String parameterName, Object value) {
              return (Debug) super.set(parameterName, value);
            }
          }
          /**
           * Stops a running instance.
           *
           * Create a request for the method "instances.delete".
           *
           * This request holds the parameters needed by the appengine server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param appsId Part of `name`. Name of the resource requested. Example:
           *        apps/myapp/services/default/versions/v1/instances/instance-1.
           * @param servicesId Part of `name`. See documentation of `appsId`.
           * @param versionsId Part of `name`. See documentation of `appsId`.
           * @param instancesId Part of `name`. See documentation of `appsId`.
           * @return the request
           */
          public Delete delete(java.lang.String appsId, java.lang.String servicesId, java.lang.String versionsId, java.lang.String instancesId) throws java.io.IOException {
            Delete result = new Delete(appsId, servicesId, versionsId, instancesId);
            initialize(result);
            return result;
          }

          public class Delete extends AppengineRequest<com.google.api.services.appengine.model.Operation> {

            private static final String REST_PATH = "v1beta/apps/{appsId}/services/{servicesId}/versions/{versionsId}/instances/{instancesId}";

            /**
             * Stops a running instance.
             *
             * Create a request for the method "instances.delete".
             *
             * This request holds the parameters needed by the the appengine server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param appsId Part of `name`. Name of the resource requested. Example:
           *        apps/myapp/services/default/versions/v1/instances/instance-1.
             * @param servicesId Part of `name`. See documentation of `appsId`.
             * @param versionsId Part of `name`. See documentation of `appsId`.
             * @param instancesId Part of `name`. See documentation of `appsId`.
             * @since 1.13
             */
            protected Delete(java.lang.String appsId, java.lang.String servicesId, java.lang.String versionsId, java.lang.String instancesId) {
              super(Appengine.this, "DELETE", REST_PATH, null, com.google.api.services.appengine.model.Operation.class);
              this.appsId = com.google.api.client.util.Preconditions.checkNotNull(appsId, "Required parameter appsId must be specified.");
              this.servicesId = com.google.api.client.util.Preconditions.checkNotNull(servicesId, "Required parameter servicesId must be specified.");
              this.versionsId = com.google.api.client.util.Preconditions.checkNotNull(versionsId, "Required parameter versionsId must be specified.");
              this.instancesId = com.google.api.client.util.Preconditions.checkNotNull(instancesId, "Required parameter instancesId must be specified.");
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Part of `name`. Name of the resource requested. Example:
             * apps/myapp/services/default/versions/v1/instances/instance-1.
             */
            @com.google.api.client.util.Key
            private java.lang.String appsId;

            /** Part of `name`. Name of the resource requested. Example:
           apps/myapp/services/default/versions/v1/instances/instance-1.
             */
            public java.lang.String getAppsId() {
              return appsId;
            }

            /**
             * Part of `name`. Name of the resource requested. Example:
             * apps/myapp/services/default/versions/v1/instances/instance-1.
             */
            public Delete setAppsId(java.lang.String appsId) {
              this.appsId = appsId;
              return this;
            }

            /** Part of `name`. See documentation of `appsId`. */
            @com.google.api.client.util.Key
            private java.lang.String servicesId;

            /** Part of `name`. See documentation of `appsId`.
             */
            public java.lang.String getServicesId() {
              return servicesId;
            }

            /** Part of `name`. See documentation of `appsId`. */
            public Delete setServicesId(java.lang.String servicesId) {
              this.servicesId = servicesId;
              return this;
            }

            /** Part of `name`. See documentation of `appsId`. */
            @com.google.api.client.util.Key
            private java.lang.String versionsId;

            /** Part of `name`. See documentation of `appsId`.
             */
            public java.lang.String getVersionsId() {
              return versionsId;
            }

            /** Part of `name`. See documentation of `appsId`. */
            public Delete setVersionsId(java.lang.String versionsId) {
              this.versionsId = versionsId;
              return this;
            }

            /** Part of `name`. See documentation of `appsId`. */
            @com.google.api.client.util.Key
            private java.lang.String instancesId;

            /** Part of `name`. See documentation of `appsId`.
             */
            public java.lang.String getInstancesId() {
              return instancesId;
            }

            /** Part of `name`. See documentation of `appsId`. */
            public Delete setInstancesId(java.lang.String instancesId) {
              this.instancesId = instancesId;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets instance information.
           *
           * Create a request for the method "instances.get".
           *
           * This request holds the parameters needed by the appengine server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param appsId Part of `name`. Name of the resource requested. Example:
           *        apps/myapp/services/default/versions/v1/instances/instance-1.
           * @param servicesId Part of `name`. See documentation of `appsId`.
           * @param versionsId Part of `name`. See documentation of `appsId`.
           * @param instancesId Part of `name`. See documentation of `appsId`.
           * @return the request
           */
          public Get get(java.lang.String appsId, java.lang.String servicesId, java.lang.String versionsId, java.lang.String instancesId) throws java.io.IOException {
            Get result = new Get(appsId, servicesId, versionsId, instancesId);
            initialize(result);
            return result;
          }

          public class Get extends AppengineRequest<com.google.api.services.appengine.model.Instance> {

            private static final String REST_PATH = "v1beta/apps/{appsId}/services/{servicesId}/versions/{versionsId}/instances/{instancesId}";

            /**
             * Gets instance information.
             *
             * Create a request for the method "instances.get".
             *
             * This request holds the parameters needed by the the appengine server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param appsId Part of `name`. Name of the resource requested. Example:
           *        apps/myapp/services/default/versions/v1/instances/instance-1.
             * @param servicesId Part of `name`. See documentation of `appsId`.
             * @param versionsId Part of `name`. See documentation of `appsId`.
             * @param instancesId Part of `name`. See documentation of `appsId`.
             * @since 1.13
             */
            protected Get(java.lang.String appsId, java.lang.String servicesId, java.lang.String versionsId, java.lang.String instancesId) {
              super(Appengine.this, "GET", REST_PATH, null, com.google.api.services.appengine.model.Instance.class);
              this.appsId = com.google.api.client.util.Preconditions.checkNotNull(appsId, "Required parameter appsId must be specified.");
              this.servicesId = com.google.api.client.util.Preconditions.checkNotNull(servicesId, "Required parameter servicesId must be specified.");
              this.versionsId = com.google.api.client.util.Preconditions.checkNotNull(versionsId, "Required parameter versionsId must be specified.");
              this.instancesId = com.google.api.client.util.Preconditions.checkNotNull(instancesId, "Required parameter instancesId must be specified.");
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Part of `name`. Name of the resource requested. Example:
             * apps/myapp/services/default/versions/v1/instances/instance-1.
             */
            @com.google.api.client.util.Key
            private java.lang.String appsId;

            /** Part of `name`. Name of the resource requested. Example:
           apps/myapp/services/default/versions/v1/instances/instance-1.
             */
            public java.lang.String getAppsId() {
              return appsId;
            }

            /**
             * Part of `name`. Name of the resource requested. Example:
             * apps/myapp/services/default/versions/v1/instances/instance-1.
             */
            public Get setAppsId(java.lang.String appsId) {
              this.appsId = appsId;
              return this;
            }

            /** Part of `name`. See documentation of `appsId`. */
            @com.google.api.client.util.Key
            private java.lang.String servicesId;

            /** Part of `name`. See documentation of `appsId`.
             */
            public java.lang.String getServicesId() {
              return servicesId;
            }

            /** Part of `name`. See documentation of `appsId`. */
            public Get setServicesId(java.lang.String servicesId) {
              this.servicesId = servicesId;
              return this;
            }

            /** Part of `name`. See documentation of `appsId`. */
            @com.google.api.client.util.Key
            private java.lang.String versionsId;

            /** Part of `name`. See documentation of `appsId`.
             */
            public java.lang.String getVersionsId() {
              return versionsId;
            }

            /** Part of `name`. See documentation of `appsId`. */
            public Get setVersionsId(java.lang.String versionsId) {
              this.versionsId = versionsId;
              return this;
            }

            /** Part of `name`. See documentation of `appsId`. */
            @com.google.api.client.util.Key
            private java.lang.String instancesId;

            /** Part of `name`. See documentation of `appsId`.
             */
            public java.lang.String getInstancesId() {
              return instancesId;
            }

            /** Part of `name`. See documentation of `appsId`. */
            public Get setInstancesId(java.lang.String instancesId) {
              this.instancesId = instancesId;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists the instances of a version.Tip: To aggregate details about instances over time, see the
           * Stackdriver Monitoring API
           * (https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.timeSeries/list).
           *
           * Create a request for the method "instances.list".
           *
           * This request holds the parameters needed by the appengine server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param appsId Part of `parent`. Name of the parent Version resource. Example:
           *        apps/myapp/services/default/versions/v1.
           * @param servicesId Part of `parent`. See documentation of `appsId`.
           * @param versionsId Part of `parent`. See documentation of `appsId`.
           * @return the request
           */
          public List list(java.lang.String appsId, java.lang.String servicesId, java.lang.String versionsId) throws java.io.IOException {
            List result = new List(appsId, servicesId, versionsId);
            initialize(result);
            return result;
          }

          public class List extends AppengineRequest<com.google.api.services.appengine.model.ListInstancesResponse> {

            private static final String REST_PATH = "v1beta/apps/{appsId}/services/{servicesId}/versions/{versionsId}/instances";

            /**
             * Lists the instances of a version.Tip: To aggregate details about instances over time, see the
             * Stackdriver Monitoring API
             * (https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.timeSeries/list).
             *
             * Create a request for the method "instances.list".
             *
             * This request holds the parameters needed by the the appengine server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param appsId Part of `parent`. Name of the parent Version resource. Example:
           *        apps/myapp/services/default/versions/v1.
             * @param servicesId Part of `parent`. See documentation of `appsId`.
             * @param versionsId Part of `parent`. See documentation of `appsId`.
             * @since 1.13
             */
            protected List(java.lang.String appsId, java.lang.String servicesId, java.lang.String versionsId) {
              super(Appengine.this, "GET", REST_PATH, null, com.google.api.services.appengine.model.ListInstancesResponse.class);
              this.appsId = com.google.api.client.util.Preconditions.checkNotNull(appsId, "Required parameter appsId must be specified.");
              this.servicesId = com.google.api.client.util.Preconditions.checkNotNull(servicesId, "Required parameter servicesId must be specified.");
              this.versionsId = com.google.api.client.util.Preconditions.checkNotNull(versionsId, "Required parameter versionsId must be specified.");
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Part of `parent`. Name of the parent Version resource. Example:
             * apps/myapp/services/default/versions/v1.
             */
            @com.google.api.client.util.Key
            private java.lang.String appsId;

            /** Part of `parent`. Name of the parent Version resource. Example:
           apps/myapp/services/default/versions/v1.
             */
            public java.lang.String getAppsId() {
              return appsId;
            }

            /**
             * Part of `parent`. Name of the parent Version resource. Example:
             * apps/myapp/services/default/versions/v1.
             */
            public List setAppsId(java.lang.String appsId) {
              this.appsId = appsId;
              return this;
            }

            /** Part of `parent`. See documentation of `appsId`. */
            @com.google.api.client.util.Key
            private java.lang.String servicesId;

            /** Part of `parent`. See documentation of `appsId`.
             */
            public java.lang.String getServicesId() {
              return servicesId;
            }

            /** Part of `parent`. See documentation of `appsId`. */
            public List setServicesId(java.lang.String servicesId) {
              this.servicesId = servicesId;
              return this;
            }

            /** Part of `parent`. See documentation of `appsId`. */
            @com.google.api.client.util.Key
            private java.lang.String versionsId;

            /** Part of `parent`. See documentation of `appsId`.
             */
            public java.lang.String getVersionsId() {
              return versionsId;
            }

            /** Part of `parent`. See documentation of `appsId`. */
            public List setVersionsId(java.lang.String versionsId) {
              this.versionsId = versionsId;
              return this;
            }

            /** Maximum results to return per page. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Maximum results to return per page.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** Maximum results to return per page. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** Continuation token for fetching the next page of results. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Continuation token for fetching the next page of results.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** Continuation token for fetching the next page of results. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

        }
      }
    }
  }

  /**
   * Builder for {@link Appengine}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link Appengine}. */
    @Override
    public Appengine build() {
      return new Appengine(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link AppengineRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setAppengineRequestInitializer(
        AppengineRequestInitializer appengineRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(appengineRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
