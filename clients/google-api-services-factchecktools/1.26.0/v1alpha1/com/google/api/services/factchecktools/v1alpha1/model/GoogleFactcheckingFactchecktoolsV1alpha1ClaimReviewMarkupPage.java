/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.factchecktools.v1alpha1.model;

/**
 * Holds one or more instances of `ClaimReview` markup for a webpage.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Fact Check Tools API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage extends com.google.api.client.json.GenericJson {

  /**
   * Info about the author of this claim review. Similar to the above, semantically these are page-
   * level fields, and each `ClaimReview` on this page will contain the same values.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewAuthor claimReviewAuthor;

  /**
   * A list of individual claim reviews for this page. Each item in the list corresponds to one
   * `ClaimReview` element.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkup> claimReviewMarkups;

  static {
    // hack to force ProGuard to consider GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkup used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkup.class);
  }

  /**
   * The name of this `ClaimReview` markup page resource, in the form of `pages/{page_id}`. Except
   * for update requests, this field is output-only and should not be set by the user.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * The URL of the page associated with this `ClaimReview` markup. While every individual
   * `ClaimReview` has its own URL field, semantically this is a page-level field, and each
   * `ClaimReview` on this page will use this value unless individually overridden. Corresponds to
   * `ClaimReview.url`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String pageUrl;

  /**
   * The date when the fact check was published. Similar to the URL, semantically this is a page-
   * level field, and each `ClaimReview` on this page will contain the same value. Corresponds to
   * `ClaimReview.datePublished`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String publishDate;

  /**
   * The version ID for this markup. Except for update requests, this field is output-only and
   * should not be set by the user.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String versionId;

  /**
   * Info about the author of this claim review. Similar to the above, semantically these are page-
   * level fields, and each `ClaimReview` on this page will contain the same values.
   * @return value or {@code null} for none
   */
  public GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewAuthor getClaimReviewAuthor() {
    return claimReviewAuthor;
  }

  /**
   * Info about the author of this claim review. Similar to the above, semantically these are page-
   * level fields, and each `ClaimReview` on this page will contain the same values.
   * @param claimReviewAuthor claimReviewAuthor or {@code null} for none
   */
  public GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage setClaimReviewAuthor(GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewAuthor claimReviewAuthor) {
    this.claimReviewAuthor = claimReviewAuthor;
    return this;
  }

  /**
   * A list of individual claim reviews for this page. Each item in the list corresponds to one
   * `ClaimReview` element.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkup> getClaimReviewMarkups() {
    return claimReviewMarkups;
  }

  /**
   * A list of individual claim reviews for this page. Each item in the list corresponds to one
   * `ClaimReview` element.
   * @param claimReviewMarkups claimReviewMarkups or {@code null} for none
   */
  public GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage setClaimReviewMarkups(java.util.List<GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkup> claimReviewMarkups) {
    this.claimReviewMarkups = claimReviewMarkups;
    return this;
  }

  /**
   * The name of this `ClaimReview` markup page resource, in the form of `pages/{page_id}`. Except
   * for update requests, this field is output-only and should not be set by the user.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * The name of this `ClaimReview` markup page resource, in the form of `pages/{page_id}`. Except
   * for update requests, this field is output-only and should not be set by the user.
   * @param name name or {@code null} for none
   */
  public GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * The URL of the page associated with this `ClaimReview` markup. While every individual
   * `ClaimReview` has its own URL field, semantically this is a page-level field, and each
   * `ClaimReview` on this page will use this value unless individually overridden. Corresponds to
   * `ClaimReview.url`
   * @return value or {@code null} for none
   */
  public java.lang.String getPageUrl() {
    return pageUrl;
  }

  /**
   * The URL of the page associated with this `ClaimReview` markup. While every individual
   * `ClaimReview` has its own URL field, semantically this is a page-level field, and each
   * `ClaimReview` on this page will use this value unless individually overridden. Corresponds to
   * `ClaimReview.url`
   * @param pageUrl pageUrl or {@code null} for none
   */
  public GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage setPageUrl(java.lang.String pageUrl) {
    this.pageUrl = pageUrl;
    return this;
  }

  /**
   * The date when the fact check was published. Similar to the URL, semantically this is a page-
   * level field, and each `ClaimReview` on this page will contain the same value. Corresponds to
   * `ClaimReview.datePublished`
   * @return value or {@code null} for none
   */
  public java.lang.String getPublishDate() {
    return publishDate;
  }

  /**
   * The date when the fact check was published. Similar to the URL, semantically this is a page-
   * level field, and each `ClaimReview` on this page will contain the same value. Corresponds to
   * `ClaimReview.datePublished`
   * @param publishDate publishDate or {@code null} for none
   */
  public GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage setPublishDate(java.lang.String publishDate) {
    this.publishDate = publishDate;
    return this;
  }

  /**
   * The version ID for this markup. Except for update requests, this field is output-only and
   * should not be set by the user.
   * @return value or {@code null} for none
   */
  public java.lang.String getVersionId() {
    return versionId;
  }

  /**
   * The version ID for this markup. Except for update requests, this field is output-only and
   * should not be set by the user.
   * @param versionId versionId or {@code null} for none
   */
  public GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage setVersionId(java.lang.String versionId) {
    this.versionId = versionId;
    return this;
  }

  @Override
  public GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage set(String fieldName, Object value) {
    return (GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage) super.set(fieldName, value);
  }

  @Override
  public GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage clone() {
    return (GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage) super.clone();
  }

}
