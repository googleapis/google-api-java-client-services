/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Model definition for ExtraSnippetInfoResponseTidbit.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ExtraSnippetInfoResponseTidbit extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ExtraSnippetInfoResponseTidbitAnchorInfo anchorinfo;

  /**
   * For tidbits only: position of tidbit in the document. More specifically, tidbit is found at
   * [begin, end) in the document's tokens.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer begin;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer end;

  /**
   * a bitvector of each query term within this tidbit
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.math.BigInteger items;

  /**
   * the score for this tidbit if there was one this is returned for Snippets and Tidbits and is
   * only meaningful for comparing between objects of the same type (snippet to snippet, tidbit to
   * tidbit)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float score;

  /**
   * the tidbit text, with search terms already highlighted
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String text;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * @return value or {@code null} for none
   */
  public ExtraSnippetInfoResponseTidbitAnchorInfo getAnchorinfo() {
    return anchorinfo;
  }

  /**
   * @param anchorinfo anchorinfo or {@code null} for none
   */
  public ExtraSnippetInfoResponseTidbit setAnchorinfo(ExtraSnippetInfoResponseTidbitAnchorInfo anchorinfo) {
    this.anchorinfo = anchorinfo;
    return this;
  }

  /**
   * For tidbits only: position of tidbit in the document. More specifically, tidbit is found at
   * [begin, end) in the document's tokens.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getBegin() {
    return begin;
  }

  /**
   * For tidbits only: position of tidbit in the document. More specifically, tidbit is found at
   * [begin, end) in the document's tokens.
   * @param begin begin or {@code null} for none
   */
  public ExtraSnippetInfoResponseTidbit setBegin(java.lang.Integer begin) {
    this.begin = begin;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getEnd() {
    return end;
  }

  /**
   * @param end end or {@code null} for none
   */
  public ExtraSnippetInfoResponseTidbit setEnd(java.lang.Integer end) {
    this.end = end;
    return this;
  }

  /**
   * a bitvector of each query term within this tidbit
   * @return value or {@code null} for none
   */
  public java.math.BigInteger getItems() {
    return items;
  }

  /**
   * a bitvector of each query term within this tidbit
   * @param items items or {@code null} for none
   */
  public ExtraSnippetInfoResponseTidbit setItems(java.math.BigInteger items) {
    this.items = items;
    return this;
  }

  /**
   * the score for this tidbit if there was one this is returned for Snippets and Tidbits and is
   * only meaningful for comparing between objects of the same type (snippet to snippet, tidbit to
   * tidbit)
   * @return value or {@code null} for none
   */
  public java.lang.Float getScore() {
    return score;
  }

  /**
   * the score for this tidbit if there was one this is returned for Snippets and Tidbits and is
   * only meaningful for comparing between objects of the same type (snippet to snippet, tidbit to
   * tidbit)
   * @param score score or {@code null} for none
   */
  public ExtraSnippetInfoResponseTidbit setScore(java.lang.Float score) {
    this.score = score;
    return this;
  }

  /**
   * the tidbit text, with search terms already highlighted
   * @return value or {@code null} for none
   */
  public java.lang.String getText() {
    return text;
  }

  /**
   * the tidbit text, with search terms already highlighted
   * @param text text or {@code null} for none
   */
  public ExtraSnippetInfoResponseTidbit setText(java.lang.String text) {
    this.text = text;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * @param type type or {@code null} for none
   */
  public ExtraSnippetInfoResponseTidbit setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  @Override
  public ExtraSnippetInfoResponseTidbit set(String fieldName, Object value) {
    return (ExtraSnippetInfoResponseTidbit) super.set(fieldName, value);
  }

  @Override
  public ExtraSnippetInfoResponseTidbit clone() {
    return (ExtraSnippetInfoResponseTidbit) super.clone();
  }

}
