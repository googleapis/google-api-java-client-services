/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.merchantapi.datasources_v1beta.model;

/**
 * Data source reference can be used to manage related data sources within the data source service.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Merchant API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class DataSourceReference extends com.google.api.client.json.GenericJson {

  /**
   * Optional. The name of the primary data source. Format:
   * `accounts/{account}/dataSources/{datasource}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String primaryDataSourceName;

  /**
   * Self should be used to reference the primary data source itself.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean self;

  /**
   * Optional. The name of the supplemental data source. Format:
   * `accounts/{account}/dataSources/{datasource}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String supplementalDataSourceName;

  /**
   * Optional. The name of the primary data source. Format:
   * `accounts/{account}/dataSources/{datasource}`
   * @return value or {@code null} for none
   */
  public java.lang.String getPrimaryDataSourceName() {
    return primaryDataSourceName;
  }

  /**
   * Optional. The name of the primary data source. Format:
   * `accounts/{account}/dataSources/{datasource}`
   * @param primaryDataSourceName primaryDataSourceName or {@code null} for none
   */
  public DataSourceReference setPrimaryDataSourceName(java.lang.String primaryDataSourceName) {
    this.primaryDataSourceName = primaryDataSourceName;
    return this;
  }

  /**
   * Self should be used to reference the primary data source itself.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSelf() {
    return self;
  }

  /**
   * Self should be used to reference the primary data source itself.
   * @param self self or {@code null} for none
   */
  public DataSourceReference setSelf(java.lang.Boolean self) {
    this.self = self;
    return this;
  }

  /**
   * Optional. The name of the supplemental data source. Format:
   * `accounts/{account}/dataSources/{datasource}`
   * @return value or {@code null} for none
   */
  public java.lang.String getSupplementalDataSourceName() {
    return supplementalDataSourceName;
  }

  /**
   * Optional. The name of the supplemental data source. Format:
   * `accounts/{account}/dataSources/{datasource}`
   * @param supplementalDataSourceName supplementalDataSourceName or {@code null} for none
   */
  public DataSourceReference setSupplementalDataSourceName(java.lang.String supplementalDataSourceName) {
    this.supplementalDataSourceName = supplementalDataSourceName;
    return this;
  }

  @Override
  public DataSourceReference set(String fieldName, Object value) {
    return (DataSourceReference) super.set(fieldName, value);
  }

  @Override
  public DataSourceReference clone() {
    return (DataSourceReference) super.clone();
  }

}
