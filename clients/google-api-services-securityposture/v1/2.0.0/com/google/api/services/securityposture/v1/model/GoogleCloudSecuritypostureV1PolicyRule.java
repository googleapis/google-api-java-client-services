/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.securityposture.v1.model;

/**
 * A rule that defines the allowed and denied values for an organization policy constraint.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Security Posture API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudSecuritypostureV1PolicyRule extends com.google.api.client.json.GenericJson {

  /**
   * Whether to allow any value for a list constraint. Valid only for list constraints.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean allowAll;

  /**
   * A condition that determines whether this rule is used to evaluate the policy. When set, the
   * google.type.Expr.expression field must contain 1 to 10 subexpressions, joined by the `||` or
   * `&&` operators. Each subexpression must use the `resource.matchTag()` or
   * `resource.matchTagId()` Common Expression Language (CEL) function. The `resource.matchTag()`
   * function takes the following arguments: * `key_name`: the namespaced name of the tag key, with
   * the organization ID and a slash (`/`) as a prefix; for example, `123456789012/environment` *
   * `value_name`: the short name of the tag value For example:
   * `resource.matchTag('123456789012/environment, 'prod')` The `resource.matchTagId()` function
   * takes the following arguments: * `key_id`: the permanent ID of the tag key; for example,
   * `tagKeys/123456789012` * `value_id`: the permanent ID of the tag value; for example,
   * `tagValues/567890123456` For example: `resource.matchTagId('tagKeys/123456789012',
   * 'tagValues/567890123456')`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Expr condition;

  /**
   * Whether to deny all values for a list constraint. Valid only for list constraints.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean denyAll;

  /**
   * Whether to enforce the constraint. Valid only for boolean constraints.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean enforce;

  /**
   * Optional. Required for GMCs if parameters defined in constraints. Pass parameter values when
   * policy enforcement is enabled. Ensure that parameter value types match those defined in the
   * constraint definition. For example: { "allowedLocations" : ["us-east1", "us-west1"], "allowAll"
   * : true }
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.Object> parameters;

  /**
   * Optional. The resource types policy can support, only used for Google managed constraint and
   * method type is GOVERN_TAGS.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ResourceTypes resourceTypes;

  /**
   * The allowed and denied values for a list constraint. Valid only for list constraints.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudSecuritypostureV1PolicyRuleStringValues values;

  /**
   * Whether to allow any value for a list constraint. Valid only for list constraints.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getAllowAll() {
    return allowAll;
  }

  /**
   * Whether to allow any value for a list constraint. Valid only for list constraints.
   * @param allowAll allowAll or {@code null} for none
   */
  public GoogleCloudSecuritypostureV1PolicyRule setAllowAll(java.lang.Boolean allowAll) {
    this.allowAll = allowAll;
    return this;
  }

  /**
   * A condition that determines whether this rule is used to evaluate the policy. When set, the
   * google.type.Expr.expression field must contain 1 to 10 subexpressions, joined by the `||` or
   * `&&` operators. Each subexpression must use the `resource.matchTag()` or
   * `resource.matchTagId()` Common Expression Language (CEL) function. The `resource.matchTag()`
   * function takes the following arguments: * `key_name`: the namespaced name of the tag key, with
   * the organization ID and a slash (`/`) as a prefix; for example, `123456789012/environment` *
   * `value_name`: the short name of the tag value For example:
   * `resource.matchTag('123456789012/environment, 'prod')` The `resource.matchTagId()` function
   * takes the following arguments: * `key_id`: the permanent ID of the tag key; for example,
   * `tagKeys/123456789012` * `value_id`: the permanent ID of the tag value; for example,
   * `tagValues/567890123456` For example: `resource.matchTagId('tagKeys/123456789012',
   * 'tagValues/567890123456')`
   * @return value or {@code null} for none
   */
  public Expr getCondition() {
    return condition;
  }

  /**
   * A condition that determines whether this rule is used to evaluate the policy. When set, the
   * google.type.Expr.expression field must contain 1 to 10 subexpressions, joined by the `||` or
   * `&&` operators. Each subexpression must use the `resource.matchTag()` or
   * `resource.matchTagId()` Common Expression Language (CEL) function. The `resource.matchTag()`
   * function takes the following arguments: * `key_name`: the namespaced name of the tag key, with
   * the organization ID and a slash (`/`) as a prefix; for example, `123456789012/environment` *
   * `value_name`: the short name of the tag value For example:
   * `resource.matchTag('123456789012/environment, 'prod')` The `resource.matchTagId()` function
   * takes the following arguments: * `key_id`: the permanent ID of the tag key; for example,
   * `tagKeys/123456789012` * `value_id`: the permanent ID of the tag value; for example,
   * `tagValues/567890123456` For example: `resource.matchTagId('tagKeys/123456789012',
   * 'tagValues/567890123456')`
   * @param condition condition or {@code null} for none
   */
  public GoogleCloudSecuritypostureV1PolicyRule setCondition(Expr condition) {
    this.condition = condition;
    return this;
  }

  /**
   * Whether to deny all values for a list constraint. Valid only for list constraints.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getDenyAll() {
    return denyAll;
  }

  /**
   * Whether to deny all values for a list constraint. Valid only for list constraints.
   * @param denyAll denyAll or {@code null} for none
   */
  public GoogleCloudSecuritypostureV1PolicyRule setDenyAll(java.lang.Boolean denyAll) {
    this.denyAll = denyAll;
    return this;
  }

  /**
   * Whether to enforce the constraint. Valid only for boolean constraints.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getEnforce() {
    return enforce;
  }

  /**
   * Whether to enforce the constraint. Valid only for boolean constraints.
   * @param enforce enforce or {@code null} for none
   */
  public GoogleCloudSecuritypostureV1PolicyRule setEnforce(java.lang.Boolean enforce) {
    this.enforce = enforce;
    return this;
  }

  /**
   * Optional. Required for GMCs if parameters defined in constraints. Pass parameter values when
   * policy enforcement is enabled. Ensure that parameter value types match those defined in the
   * constraint definition. For example: { "allowedLocations" : ["us-east1", "us-west1"], "allowAll"
   * : true }
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.Object> getParameters() {
    return parameters;
  }

  /**
   * Optional. Required for GMCs if parameters defined in constraints. Pass parameter values when
   * policy enforcement is enabled. Ensure that parameter value types match those defined in the
   * constraint definition. For example: { "allowedLocations" : ["us-east1", "us-west1"], "allowAll"
   * : true }
   * @param parameters parameters or {@code null} for none
   */
  public GoogleCloudSecuritypostureV1PolicyRule setParameters(java.util.Map<String, java.lang.Object> parameters) {
    this.parameters = parameters;
    return this;
  }

  /**
   * Optional. The resource types policy can support, only used for Google managed constraint and
   * method type is GOVERN_TAGS.
   * @return value or {@code null} for none
   */
  public ResourceTypes getResourceTypes() {
    return resourceTypes;
  }

  /**
   * Optional. The resource types policy can support, only used for Google managed constraint and
   * method type is GOVERN_TAGS.
   * @param resourceTypes resourceTypes or {@code null} for none
   */
  public GoogleCloudSecuritypostureV1PolicyRule setResourceTypes(ResourceTypes resourceTypes) {
    this.resourceTypes = resourceTypes;
    return this;
  }

  /**
   * The allowed and denied values for a list constraint. Valid only for list constraints.
   * @return value or {@code null} for none
   */
  public GoogleCloudSecuritypostureV1PolicyRuleStringValues getValues() {
    return values;
  }

  /**
   * The allowed and denied values for a list constraint. Valid only for list constraints.
   * @param values values or {@code null} for none
   */
  public GoogleCloudSecuritypostureV1PolicyRule setValues(GoogleCloudSecuritypostureV1PolicyRuleStringValues values) {
    this.values = values;
    return this;
  }

  @Override
  public GoogleCloudSecuritypostureV1PolicyRule set(String fieldName, Object value) {
    return (GoogleCloudSecuritypostureV1PolicyRule) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudSecuritypostureV1PolicyRule clone() {
    return (GoogleCloudSecuritypostureV1PolicyRule) super.clone();
  }

}
