/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.smartdevicemanagement.v1;

/**
 * Service definition for SmartDeviceManagement (v1).
 *
 * <p>
 * Allow select enterprise partners to access, control, and manage Google and Nest devices programmatically.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://developers.google.com/nest/device-access" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link SmartDeviceManagementRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class SmartDeviceManagement extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1)),
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "1.31.0 of the Smart Device Management API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://smartdevicemanagement.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://smartdevicemanagement.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public SmartDeviceManagement(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  SmartDeviceManagement(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Enterprises collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code SmartDeviceManagement smartdevicemanagement = new SmartDeviceManagement(...);}
   *   {@code SmartDeviceManagement.Enterprises.List request = smartdevicemanagement.enterprises().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Enterprises enterprises() {
    return new Enterprises();
  }

  /**
   * The "enterprises" collection of methods.
   */
  public class Enterprises {

    /**
     * An accessor for creating requests from the Devices collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code SmartDeviceManagement smartdevicemanagement = new SmartDeviceManagement(...);}
     *   {@code SmartDeviceManagement.Devices.List request = smartdevicemanagement.devices().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Devices devices() {
      return new Devices();
    }

    /**
     * The "devices" collection of methods.
     */
    public class Devices {

      /**
       * Executes a command to device managed by the enterprise.
       *
       * Create a request for the method "devices.executeCommand".
       *
       * This request holds the parameters needed by the smartdevicemanagement server.  After setting any
       * optional parameters, call the {@link ExecuteCommand#execute()} method to invoke the remote
       * operation.
       *
       * @param name The name of the device requested. For example: "enterprises/XYZ/devices/123"
       * @param content the {@link com.google.api.services.smartdevicemanagement.v1.model.GoogleHomeEnterpriseSdmV1ExecuteDeviceCommandRequest}
       * @return the request
       */
      public ExecuteCommand executeCommand(java.lang.String name, com.google.api.services.smartdevicemanagement.v1.model.GoogleHomeEnterpriseSdmV1ExecuteDeviceCommandRequest content) throws java.io.IOException {
        ExecuteCommand result = new ExecuteCommand(name, content);
        initialize(result);
        return result;
      }

      public class ExecuteCommand extends SmartDeviceManagementRequest<com.google.api.services.smartdevicemanagement.v1.model.GoogleHomeEnterpriseSdmV1ExecuteDeviceCommandResponse> {

        private static final String REST_PATH = "v1/{+name}:executeCommand";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^enterprises/[^/]+/devices/[^/]+$");

        /**
         * Executes a command to device managed by the enterprise.
         *
         * Create a request for the method "devices.executeCommand".
         *
         * This request holds the parameters needed by the the smartdevicemanagement server.  After
         * setting any optional parameters, call the {@link ExecuteCommand#execute()} method to invoke the
         * remote operation. <p> {@link ExecuteCommand#initialize(com.google.api.client.googleapis.service
         * s.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param name The name of the device requested. For example: "enterprises/XYZ/devices/123"
         * @param content the {@link com.google.api.services.smartdevicemanagement.v1.model.GoogleHomeEnterpriseSdmV1ExecuteDeviceCommandRequest}
         * @since 1.13
         */
        protected ExecuteCommand(java.lang.String name, com.google.api.services.smartdevicemanagement.v1.model.GoogleHomeEnterpriseSdmV1ExecuteDeviceCommandRequest content) {
          super(SmartDeviceManagement.this, "POST", REST_PATH, content, com.google.api.services.smartdevicemanagement.v1.model.GoogleHomeEnterpriseSdmV1ExecuteDeviceCommandResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^enterprises/[^/]+/devices/[^/]+$");
          }
        }

        @Override
        public ExecuteCommand set$Xgafv(java.lang.String $Xgafv) {
          return (ExecuteCommand) super.set$Xgafv($Xgafv);
        }

        @Override
        public ExecuteCommand setAccessToken(java.lang.String accessToken) {
          return (ExecuteCommand) super.setAccessToken(accessToken);
        }

        @Override
        public ExecuteCommand setAlt(java.lang.String alt) {
          return (ExecuteCommand) super.setAlt(alt);
        }

        @Override
        public ExecuteCommand setCallback(java.lang.String callback) {
          return (ExecuteCommand) super.setCallback(callback);
        }

        @Override
        public ExecuteCommand setFields(java.lang.String fields) {
          return (ExecuteCommand) super.setFields(fields);
        }

        @Override
        public ExecuteCommand setKey(java.lang.String key) {
          return (ExecuteCommand) super.setKey(key);
        }

        @Override
        public ExecuteCommand setOauthToken(java.lang.String oauthToken) {
          return (ExecuteCommand) super.setOauthToken(oauthToken);
        }

        @Override
        public ExecuteCommand setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (ExecuteCommand) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public ExecuteCommand setQuotaUser(java.lang.String quotaUser) {
          return (ExecuteCommand) super.setQuotaUser(quotaUser);
        }

        @Override
        public ExecuteCommand setUploadType(java.lang.String uploadType) {
          return (ExecuteCommand) super.setUploadType(uploadType);
        }

        @Override
        public ExecuteCommand setUploadProtocol(java.lang.String uploadProtocol) {
          return (ExecuteCommand) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the device requested. For example: "enterprises/XYZ/devices/123" */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the device requested. For example: "enterprises/XYZ/devices/123"
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the device requested. For example: "enterprises/XYZ/devices/123" */
        public ExecuteCommand setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^enterprises/[^/]+/devices/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public ExecuteCommand set(String parameterName, Object value) {
          return (ExecuteCommand) super.set(parameterName, value);
        }
      }
      /**
       * Gets a device managed by the enterprise.
       *
       * Create a request for the method "devices.get".
       *
       * This request holds the parameters needed by the smartdevicemanagement server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name The name of the device requested. For example: "enterprises/XYZ/devices/123"
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends SmartDeviceManagementRequest<com.google.api.services.smartdevicemanagement.v1.model.GoogleHomeEnterpriseSdmV1Device> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^enterprises/[^/]+/devices/[^/]+$");

        /**
         * Gets a device managed by the enterprise.
         *
         * Create a request for the method "devices.get".
         *
         * This request holds the parameters needed by the the smartdevicemanagement server.  After
         * setting any optional parameters, call the {@link Get#execute()} method to invoke the remote
         * operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the device requested. For example: "enterprises/XYZ/devices/123"
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(SmartDeviceManagement.this, "GET", REST_PATH, null, com.google.api.services.smartdevicemanagement.v1.model.GoogleHomeEnterpriseSdmV1Device.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^enterprises/[^/]+/devices/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the device requested. For example: "enterprises/XYZ/devices/123" */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the device requested. For example: "enterprises/XYZ/devices/123"
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the device requested. For example: "enterprises/XYZ/devices/123" */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^enterprises/[^/]+/devices/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists devices managed by the enterprise.
       *
       * Create a request for the method "devices.list".
       *
       * This request holds the parameters needed by the smartdevicemanagement server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent The parent enterprise to list devices under. E.g. "enterprises/XYZ".
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends SmartDeviceManagementRequest<com.google.api.services.smartdevicemanagement.v1.model.GoogleHomeEnterpriseSdmV1ListDevicesResponse> {

        private static final String REST_PATH = "v1/{+parent}/devices";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^enterprises/[^/]+$");

        /**
         * Lists devices managed by the enterprise.
         *
         * Create a request for the method "devices.list".
         *
         * This request holds the parameters needed by the the smartdevicemanagement server.  After
         * setting any optional parameters, call the {@link List#execute()} method to invoke the remote
         * operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The parent enterprise to list devices under. E.g. "enterprises/XYZ".
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(SmartDeviceManagement.this, "GET", REST_PATH, null, com.google.api.services.smartdevicemanagement.v1.model.GoogleHomeEnterpriseSdmV1ListDevicesResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^enterprises/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** The parent enterprise to list devices under. E.g. "enterprises/XYZ". */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The parent enterprise to list devices under. E.g. "enterprises/XYZ".
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** The parent enterprise to list devices under. E.g. "enterprises/XYZ". */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^enterprises/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional filter to list devices. Filters can be done on: Device custom name (substring
         * match): 'customName=wing'
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** Optional filter to list devices. Filters can be done on: Device custom name (substring match):
       'customName=wing'
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * Optional filter to list devices. Filters can be done on: Device custom name (substring
         * match): 'customName=wing'
         */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /**
         * Optional requested page size. Server may return fewer devices than requested. If
         * unspecified, server will pick an appropriate default.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional requested page size. Server may return fewer devices than requested. If unspecified,
       server will pick an appropriate default.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Optional requested page size. Server may return fewer devices than requested. If
         * unspecified, server will pick an appropriate default.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** Optional token of the page to retrieve. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional token of the page to retrieve.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** Optional token of the page to retrieve. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Structures collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code SmartDeviceManagement smartdevicemanagement = new SmartDeviceManagement(...);}
     *   {@code SmartDeviceManagement.Structures.List request = smartdevicemanagement.structures().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Structures structures() {
      return new Structures();
    }

    /**
     * The "structures" collection of methods.
     */
    public class Structures {

      /**
       * Gets a structure managed by the enterprise.
       *
       * Create a request for the method "structures.get".
       *
       * This request holds the parameters needed by the smartdevicemanagement server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name The name of the structure requested. For example: "enterprises/XYZ/structures/ABC".
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends SmartDeviceManagementRequest<com.google.api.services.smartdevicemanagement.v1.model.GoogleHomeEnterpriseSdmV1Structure> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^enterprises/[^/]+/structures/[^/]+$");

        /**
         * Gets a structure managed by the enterprise.
         *
         * Create a request for the method "structures.get".
         *
         * This request holds the parameters needed by the the smartdevicemanagement server.  After
         * setting any optional parameters, call the {@link Get#execute()} method to invoke the remote
         * operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the structure requested. For example: "enterprises/XYZ/structures/ABC".
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(SmartDeviceManagement.this, "GET", REST_PATH, null, com.google.api.services.smartdevicemanagement.v1.model.GoogleHomeEnterpriseSdmV1Structure.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^enterprises/[^/]+/structures/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the structure requested. For example: "enterprises/XYZ/structures/ABC". */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the structure requested. For example: "enterprises/XYZ/structures/ABC".
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the structure requested. For example: "enterprises/XYZ/structures/ABC". */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^enterprises/[^/]+/structures/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists structures managed by the enterprise.
       *
       * Create a request for the method "structures.list".
       *
       * This request holds the parameters needed by the smartdevicemanagement server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent The parent enterprise to list structures under. E.g. "enterprises/XYZ".
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends SmartDeviceManagementRequest<com.google.api.services.smartdevicemanagement.v1.model.GoogleHomeEnterpriseSdmV1ListStructuresResponse> {

        private static final String REST_PATH = "v1/{+parent}/structures";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^enterprises/[^/]+$");

        /**
         * Lists structures managed by the enterprise.
         *
         * Create a request for the method "structures.list".
         *
         * This request holds the parameters needed by the the smartdevicemanagement server.  After
         * setting any optional parameters, call the {@link List#execute()} method to invoke the remote
         * operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The parent enterprise to list structures under. E.g. "enterprises/XYZ".
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(SmartDeviceManagement.this, "GET", REST_PATH, null, com.google.api.services.smartdevicemanagement.v1.model.GoogleHomeEnterpriseSdmV1ListStructuresResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^enterprises/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** The parent enterprise to list structures under. E.g. "enterprises/XYZ". */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The parent enterprise to list structures under. E.g. "enterprises/XYZ".
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** The parent enterprise to list structures under. E.g. "enterprises/XYZ". */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^enterprises/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** Optional filter to list structures. */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** Optional filter to list structures.
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /** Optional filter to list structures. */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /**
         * Requested page size. Server may return fewer structures than requested. If unspecified,
         * server will pick an appropriate default.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Requested page size. Server may return fewer structures than requested. If unspecified, server will
       pick an appropriate default.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Requested page size. Server may return fewer structures than requested. If unspecified,
         * server will pick an appropriate default.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** The token of the page to retrieve. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** The token of the page to retrieve.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** The token of the page to retrieve. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Rooms collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code SmartDeviceManagement smartdevicemanagement = new SmartDeviceManagement(...);}
       *   {@code SmartDeviceManagement.Rooms.List request = smartdevicemanagement.rooms().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Rooms rooms() {
        return new Rooms();
      }

      /**
       * The "rooms" collection of methods.
       */
      public class Rooms {

        /**
         * Gets a room managed by the enterprise.
         *
         * Create a request for the method "rooms.get".
         *
         * This request holds the parameters needed by the smartdevicemanagement server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name The name of the room requested. For example: "enterprises/XYZ/structures/ABC/rooms/123".
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends SmartDeviceManagementRequest<com.google.api.services.smartdevicemanagement.v1.model.GoogleHomeEnterpriseSdmV1Room> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^enterprises/[^/]+/structures/[^/]+/rooms/[^/]+$");

          /**
           * Gets a room managed by the enterprise.
           *
           * Create a request for the method "rooms.get".
           *
           * This request holds the parameters needed by the the smartdevicemanagement server.  After
           * setting any optional parameters, call the {@link Get#execute()} method to invoke the remote
           * operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the room requested. For example: "enterprises/XYZ/structures/ABC/rooms/123".
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(SmartDeviceManagement.this, "GET", REST_PATH, null, com.google.api.services.smartdevicemanagement.v1.model.GoogleHomeEnterpriseSdmV1Room.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^enterprises/[^/]+/structures/[^/]+/rooms/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The name of the room requested. For example:
           * "enterprises/XYZ/structures/ABC/rooms/123".
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the room requested. For example: "enterprises/XYZ/structures/ABC/rooms/123".
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The name of the room requested. For example:
           * "enterprises/XYZ/structures/ABC/rooms/123".
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^enterprises/[^/]+/structures/[^/]+/rooms/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists rooms managed by the enterprise.
         *
         * Create a request for the method "rooms.list".
         *
         * This request holds the parameters needed by the smartdevicemanagement server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent The parent resource name of the rooms requested. For example: "enterprises/XYZ/structures/ABC".
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends SmartDeviceManagementRequest<com.google.api.services.smartdevicemanagement.v1.model.GoogleHomeEnterpriseSdmV1ListRoomsResponse> {

          private static final String REST_PATH = "v1/{+parent}/rooms";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^enterprises/[^/]+/structures/[^/]+$");

          /**
           * Lists rooms managed by the enterprise.
           *
           * Create a request for the method "rooms.list".
           *
           * This request holds the parameters needed by the the smartdevicemanagement server.  After
           * setting any optional parameters, call the {@link List#execute()} method to invoke the remote
           * operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent The parent resource name of the rooms requested. For example: "enterprises/XYZ/structures/ABC".
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(SmartDeviceManagement.this, "GET", REST_PATH, null, com.google.api.services.smartdevicemanagement.v1.model.GoogleHomeEnterpriseSdmV1ListRoomsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^enterprises/[^/]+/structures/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The parent resource name of the rooms requested. For example:
           * "enterprises/XYZ/structures/ABC".
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** The parent resource name of the rooms requested. For example: "enterprises/XYZ/structures/ABC".
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * The parent resource name of the rooms requested. For example:
           * "enterprises/XYZ/structures/ABC".
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^enterprises/[^/]+/structures/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Requested page size. Server may return fewer rooms than requested. If unspecified,
           * server will pick an appropriate default.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Requested page size. Server may return fewer rooms than requested. If unspecified, server will pick
         an appropriate default.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Requested page size. Server may return fewer rooms than requested. If unspecified,
           * server will pick an appropriate default.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The token of the page to retrieve. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The token of the page to retrieve.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The token of the page to retrieve. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
    }
  }

  /**
   * Builder for {@link SmartDeviceManagement}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link SmartDeviceManagement}. */
    @Override
    public SmartDeviceManagement build() {
      return new SmartDeviceManagement(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link SmartDeviceManagementRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setSmartDeviceManagementRequestInitializer(
        SmartDeviceManagementRequestInitializer smartdevicemanagementRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(smartdevicemanagementRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
