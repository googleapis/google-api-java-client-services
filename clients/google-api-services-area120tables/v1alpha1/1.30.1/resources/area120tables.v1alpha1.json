{
  "discoveryVersion": "v1",
  "revision": "20201104",
  "canonicalName": "Area120 Tables",
  "version_module": true,
  "parameters": {
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "default": "json",
      "description": "Data format for response.",
      "location": "query",
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "prettyPrint": {
      "default": "true",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "location": "query"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "description": "V1 error format."
    }
  },
  "title": "Area120 Tables API",
  "protocol": "rest",
  "batchPath": "batch",
  "version": "v1alpha1",
  "ownerName": "Google",
  "kind": "discovery#restDescription",
  "documentationLink": "https://tables.area120.google.com",
  "servicePath": "",
  "schemas": {
    "ColumnDescription": {
      "properties": {
        "name": {
          "description": "column name",
          "type": "string"
        },
        "relationshipDetails": {
          "description": "Optional. Additional details about a relationship column. Specified when data_type is relationship.",
          "$ref": "RelationshipDetails"
        },
        "labels": {
          "description": "Optional. Range of labeled values for the column. Some columns like tags and drop-downs limit the values to a set of possible values. We return the range of values in such cases to help clients implement better user data validation.",
          "type": "array",
          "items": {
            "$ref": "LabeledItem"
          }
        },
        "dataType": {
          "type": "string",
          "description": "Data type of the column Supported types are auto_id, boolean, boolean_list, creator, create_timestamp, date, dropdown, location, integer, integer_list, number, number_list, person, person_list, tags, check_list, text, text_list, update_timestamp, updater, relationship, file_attachment_list. These types directly map to the column types supported on Tables website."
        },
        "id": {
          "description": "Internal id for a column.",
          "type": "string"
        },
        "lookupDetails": {
          "$ref": "LookupDetails",
          "description": "Optional. Indicates that this is a lookup column whose value is derived from the relationship column specified in the details. Lookup columns can not be updated directly. To change the value you must update the associated relationship column."
        }
      },
      "id": "ColumnDescription",
      "description": "Details on a column in the table.",
      "type": "object"
    },
    "BatchUpdateRowsResponse": {
      "type": "object",
      "description": "Response message for TablesService.BatchUpdateRows.",
      "id": "BatchUpdateRowsResponse",
      "properties": {
        "rows": {
          "description": "The updated rows.",
          "items": {
            "$ref": "Row"
          },
          "type": "array"
        }
      }
    },
    "LabeledItem": {
      "type": "object",
      "id": "LabeledItem",
      "properties": {
        "name": {
          "type": "string",
          "description": "Display string as entered by user."
        },
        "id": {
          "description": "Internal id associated with the item.",
          "type": "string"
        }
      },
      "description": "A single item in a labeled column."
    },
    "BatchCreateRowsResponse": {
      "id": "BatchCreateRowsResponse",
      "properties": {
        "rows": {
          "type": "array",
          "items": {
            "$ref": "Row"
          },
          "description": "The created rows."
        }
      },
      "description": "Response message for TablesService.BatchCreateRows.",
      "type": "object"
    },
    "ListTablesResponse": {
      "id": "ListTablesResponse",
      "description": "Response message for TablesService.ListTables.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is empty, there are no subsequent pages."
        },
        "tables": {
          "items": {
            "$ref": "Table"
          },
          "type": "array",
          "description": "The list of tables."
        }
      },
      "type": "object"
    },
    "Empty": {
      "properties": {},
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "id": "Empty"
    },
    "Table": {
      "id": "Table",
      "description": "A single table.",
      "type": "object",
      "properties": {
        "columns": {
          "description": "List of columns in this table. Order of columns matches the display order.",
          "type": "array",
          "items": {
            "$ref": "ColumnDescription"
          }
        },
        "displayName": {
          "type": "string",
          "description": "The human readable title of the table."
        },
        "name": {
          "type": "string",
          "description": "The resource name of the table. Table names have the form `tables/{table}`."
        }
      }
    },
    "ListRowsResponse": {
      "properties": {
        "rows": {
          "description": "The rows from the specified table.",
          "items": {
            "$ref": "Row"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is empty, there are no subsequent pages."
        }
      },
      "description": "Response message for TablesService.ListRows.",
      "type": "object",
      "id": "ListRowsResponse"
    },
    "BatchCreateRowsRequest": {
      "type": "object",
      "description": "Request message for TablesService.BatchCreateRows.",
      "properties": {
        "requests": {
          "description": "Required. The request message specifying the rows to create. A maximum of 500 rows can be created in a single batch.",
          "type": "array",
          "items": {
            "$ref": "CreateRowRequest"
          }
        }
      },
      "id": "BatchCreateRowsRequest"
    },
    "LookupDetails": {
      "id": "LookupDetails",
      "properties": {
        "relationshipColumnId": {
          "type": "string",
          "description": "The id of the relationship column."
        },
        "relationshipColumn": {
          "type": "string",
          "description": "The name of the relationship column associated with the lookup."
        }
      },
      "type": "object",
      "description": "Details about a lookup column whose value comes from the associated relationship."
    },
    "BatchUpdateRowsRequest": {
      "id": "BatchUpdateRowsRequest",
      "type": "object",
      "properties": {
        "requests": {
          "items": {
            "$ref": "UpdateRowRequest"
          },
          "type": "array",
          "description": "Required. The request messages specifying the rows to update. A maximum of 500 rows can be modified in a single batch."
        }
      },
      "description": "Request message for TablesService.BatchUpdateRows."
    },
    "RelationshipDetails": {
      "id": "RelationshipDetails",
      "properties": {
        "linkedTable": {
          "type": "string",
          "description": "The name of the table this relationship is linked to."
        }
      },
      "description": "Details about a relationship column.",
      "type": "object"
    },
    "UpdateRowRequest": {
      "type": "object",
      "id": "UpdateRowRequest",
      "description": "Request message for TablesService.UpdateRow.",
      "properties": {
        "updateMask": {
          "description": "The list of fields to update.",
          "format": "google-fieldmask",
          "type": "string"
        },
        "row": {
          "description": "Required. The row to update.",
          "$ref": "Row"
        },
        "view": {
          "enumDescriptions": [
            "Defaults to user entered text.",
            "Uses internally generated column id to identify values."
          ],
          "enum": [
            "VIEW_UNSPECIFIED",
            "COLUMN_ID_VIEW"
          ],
          "type": "string",
          "description": "Optional. Column key to use for values in the row. Defaults to user entered name."
        }
      }
    },
    "Workspace": {
      "type": "object",
      "id": "Workspace",
      "properties": {
        "name": {
          "description": "The resource name of the workspace. Workspace names have the form `workspaces/{workspace}`.",
          "type": "string"
        },
        "displayName": {
          "description": "The human readable title of the workspace.",
          "type": "string"
        },
        "tables": {
          "items": {
            "$ref": "Table"
          },
          "description": "The list of tables in the workspace.",
          "type": "array"
        }
      },
      "description": "A single workspace."
    },
    "Row": {
      "description": "A single row in a table.",
      "id": "Row",
      "properties": {
        "values": {
          "description": "The values of the row. This is a map of column key to value. Key is user entered name(default) or the internal column id based on the view in the request.",
          "additionalProperties": {
            "type": "any"
          },
          "type": "object"
        },
        "name": {
          "type": "string",
          "description": "The resource name of the row. Row names have the form `tables/{table}/rows/{row}`. The name is ignored when creating a row."
        }
      },
      "type": "object"
    },
    "ListWorkspacesResponse": {
      "description": "Response message for TablesService.ListWorkspaces.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is empty, there are no subsequent pages."
        },
        "workspaces": {
          "description": "The list of workspaces.",
          "type": "array",
          "items": {
            "$ref": "Workspace"
          }
        }
      },
      "id": "ListWorkspacesResponse"
    },
    "CreateRowRequest": {
      "description": "Request message for TablesService.CreateRow.",
      "type": "object",
      "id": "CreateRowRequest",
      "properties": {
        "row": {
          "description": "Required. The row to create.",
          "$ref": "Row"
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent table where this row will be created. Format: tables/{table}"
        },
        "view": {
          "description": "Optional. Column key to use for values in the row. Defaults to user entered name.",
          "enumDescriptions": [
            "Defaults to user entered text.",
            "Uses internally generated column id to identify values."
          ],
          "enum": [
            "VIEW_UNSPECIFIED",
            "COLUMN_ID_VIEW"
          ],
          "type": "string"
        }
      }
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/drive": {
          "description": "See, edit, create, and delete all of your Google Drive files"
        },
        "https://www.googleapis.com/auth/drive.readonly": {
          "description": "See and download all your Google Drive files"
        },
        "https://www.googleapis.com/auth/drive.file": {
          "description": "View and manage Google Drive files and folders that you have opened or created with this app"
        },
        "https://www.googleapis.com/auth/spreadsheets": {
          "description": "See, edit, create, and delete your spreadsheets in Google Drive"
        },
        "https://www.googleapis.com/auth/spreadsheets.readonly": {
          "description": "View your Google Spreadsheets"
        }
      }
    }
  },
  "name": "area120tables",
  "description": "",
  "ownerDomain": "google.com",
  "rootUrl": "https://area120tables.googleapis.com/",
  "baseUrl": "https://area120tables.googleapis.com/",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "fullyEncodeReservedExpansion": true,
  "basePath": "",
  "id": "area120tables:v1alpha1",
  "mtlsRootUrl": "https://area120tables.mtls.googleapis.com/",
  "resources": {
    "workspaces": {
      "methods": {
        "get": {
          "parameters": {
            "name": {
              "description": "Required. The name of the workspace to retrieve. Format: workspaces/{workspace}",
              "pattern": "^workspaces/[^/]+$",
              "required": true,
              "location": "path",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/spreadsheets"
          ],
          "flatPath": "v1alpha1/workspaces/{workspacesId}",
          "description": "Gets a workspace. Returns NOT_FOUND if the workspace does not exist.",
          "response": {
            "$ref": "Workspace"
          },
          "parameterOrder": [
            "name"
          ],
          "id": "area120tables.workspaces.get",
          "httpMethod": "GET",
          "path": "v1alpha1/{+name}"
        },
        "list": {
          "parameters": {
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "A page token, received from a previous `ListWorkspaces` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListWorkspaces` must match the call that provided the page token."
            },
            "pageSize": {
              "format": "int32",
              "type": "integer",
              "description": "The maximum number of workspaces to return. The service may return fewer than this value. If unspecified, at most 10 workspaces are returned. The maximum value is 25; values above 25 are coerced to 25.",
              "location": "query"
            }
          },
          "httpMethod": "GET",
          "parameterOrder": [],
          "path": "v1alpha1/workspaces",
          "description": "Lists workspaces for the user.",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/spreadsheets"
          ],
          "flatPath": "v1alpha1/workspaces",
          "id": "area120tables.workspaces.list",
          "response": {
            "$ref": "ListWorkspacesResponse"
          }
        }
      }
    },
    "tables": {
      "methods": {
        "get": {
          "flatPath": "v1alpha1/tables/{tablesId}",
          "response": {
            "$ref": "Table"
          },
          "path": "v1alpha1/{+name}",
          "parameters": {
            "name": {
              "pattern": "^tables/[^/]+$",
              "type": "string",
              "location": "path",
              "description": "Required. The name of the table to retrieve. Format: tables/{table}",
              "required": true
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.readonly",
            "https://www.googleapis.com/auth/spreadsheets",
            "https://www.googleapis.com/auth/spreadsheets.readonly"
          ],
          "httpMethod": "GET",
          "parameterOrder": [
            "name"
          ],
          "description": "Gets a table. Returns NOT_FOUND if the table does not exist.",
          "id": "area120tables.tables.get"
        },
        "list": {
          "id": "area120tables.tables.list",
          "response": {
            "$ref": "ListTablesResponse"
          },
          "path": "v1alpha1/tables",
          "flatPath": "v1alpha1/tables",
          "description": "Lists tables for the user.",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/spreadsheets"
          ],
          "parameterOrder": [],
          "parameters": {
            "pageSize": {
              "description": "The maximum number of tables to return. The service may return fewer than this value. If unspecified, at most 20 tables are returned. The maximum value is 100; values above 100 are coerced to 100.",
              "location": "query",
              "type": "integer",
              "format": "int32"
            },
            "pageToken": {
              "description": "A page token, received from a previous `ListTables` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListTables` must match the call that provided the page token.",
              "type": "string",
              "location": "query"
            }
          },
          "httpMethod": "GET"
        }
      },
      "resources": {
        "rows": {
          "methods": {
            "delete": {
              "parameters": {
                "name": {
                  "description": "Required. The name of the row to delete. Format: tables/{table}/rows/{row}",
                  "location": "path",
                  "required": true,
                  "pattern": "^tables/[^/]+/rows/[^/]+$",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/drive",
                "https://www.googleapis.com/auth/drive.file",
                "https://www.googleapis.com/auth/spreadsheets"
              ],
              "parameterOrder": [
                "name"
              ],
              "path": "v1alpha1/{+name}",
              "description": "Deletes a row.",
              "flatPath": "v1alpha1/tables/{tablesId}/rows/{rowsId}",
              "id": "area120tables.tables.rows.delete",
              "httpMethod": "DELETE",
              "response": {
                "$ref": "Empty"
              }
            },
            "batchUpdate": {
              "id": "area120tables.tables.rows.batchUpdate",
              "path": "v1alpha1/{+parent}/rows:batchUpdate",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "BatchUpdateRowsResponse"
              },
              "description": "Updates multiple rows.",
              "flatPath": "v1alpha1/tables/{tablesId}/rows:batchUpdate",
              "scopes": [
                "https://www.googleapis.com/auth/drive",
                "https://www.googleapis.com/auth/drive.file",
                "https://www.googleapis.com/auth/spreadsheets"
              ],
              "parameters": {
                "parent": {
                  "description": "Required. The parent table shared by all rows being updated. Format: tables/{table}",
                  "type": "string",
                  "pattern": "^tables/[^/]+$",
                  "location": "path",
                  "required": true
                }
              },
              "request": {
                "$ref": "BatchUpdateRowsRequest"
              },
              "httpMethod": "POST"
            },
            "create": {
              "description": "Creates a row.",
              "flatPath": "v1alpha1/tables/{tablesId}/rows",
              "response": {
                "$ref": "Row"
              },
              "id": "area120tables.tables.rows.create",
              "parameters": {
                "parent": {
                  "description": "Required. The parent table where this row will be created. Format: tables/{table}",
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "pattern": "^tables/[^/]+$"
                },
                "view": {
                  "enumDescriptions": [
                    "Defaults to user entered text.",
                    "Uses internally generated column id to identify values."
                  ],
                  "description": "Optional. Column key to use for values in the row. Defaults to user entered name.",
                  "type": "string",
                  "location": "query",
                  "enum": [
                    "VIEW_UNSPECIFIED",
                    "COLUMN_ID_VIEW"
                  ]
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/drive",
                "https://www.googleapis.com/auth/drive.file",
                "https://www.googleapis.com/auth/spreadsheets"
              ],
              "httpMethod": "POST",
              "request": {
                "$ref": "Row"
              },
              "parameterOrder": [
                "parent"
              ],
              "path": "v1alpha1/{+parent}/rows"
            },
            "get": {
              "id": "area120tables.tables.rows.get",
              "response": {
                "$ref": "Row"
              },
              "parameters": {
                "name": {
                  "type": "string",
                  "description": "Required. The name of the row to retrieve. Format: tables/{table}/rows/{row}",
                  "location": "path",
                  "required": true,
                  "pattern": "^tables/[^/]+/rows/[^/]+$"
                },
                "view": {
                  "enum": [
                    "VIEW_UNSPECIFIED",
                    "COLUMN_ID_VIEW"
                  ],
                  "type": "string",
                  "description": "Optional. Column key to use for values in the row. Defaults to user entered name.",
                  "location": "query",
                  "enumDescriptions": [
                    "Defaults to user entered text.",
                    "Uses internally generated column id to identify values."
                  ]
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/drive",
                "https://www.googleapis.com/auth/drive.file",
                "https://www.googleapis.com/auth/drive.readonly",
                "https://www.googleapis.com/auth/spreadsheets",
                "https://www.googleapis.com/auth/spreadsheets.readonly"
              ],
              "description": "Gets a row. Returns NOT_FOUND if the row does not exist in the table.",
              "flatPath": "v1alpha1/tables/{tablesId}/rows/{rowsId}",
              "path": "v1alpha1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET"
            },
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/drive",
                "https://www.googleapis.com/auth/drive.file",
                "https://www.googleapis.com/auth/drive.readonly",
                "https://www.googleapis.com/auth/spreadsheets",
                "https://www.googleapis.com/auth/spreadsheets.readonly"
              ],
              "description": "Lists rows in a table. Returns NOT_FOUND if the table does not exist.",
              "id": "area120tables.tables.rows.list",
              "parameters": {
                "parent": {
                  "description": "Required. The parent table. Format: tables/{table}",
                  "location": "path",
                  "pattern": "^tables/[^/]+$",
                  "type": "string",
                  "required": true
                },
                "pageSize": {
                  "format": "int32",
                  "location": "query",
                  "type": "integer",
                  "description": "The maximum number of rows to return. The service may return fewer than this value. If unspecified, at most 50 rows are returned. The maximum value is 1,000; values above 1,000 are coerced to 1,000."
                },
                "view": {
                  "type": "string",
                  "enumDescriptions": [
                    "Defaults to user entered text.",
                    "Uses internally generated column id to identify values."
                  ],
                  "location": "query",
                  "description": "Optional. Column key to use for values in the row. Defaults to user entered name.",
                  "enum": [
                    "VIEW_UNSPECIFIED",
                    "COLUMN_ID_VIEW"
                  ]
                },
                "pageToken": {
                  "type": "string",
                  "description": "A page token, received from a previous `ListRows` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListRows` must match the call that provided the page token.",
                  "location": "query"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "path": "v1alpha1/{+parent}/rows",
              "response": {
                "$ref": "ListRowsResponse"
              },
              "httpMethod": "GET",
              "flatPath": "v1alpha1/tables/{tablesId}/rows"
            },
            "patch": {
              "parameterOrder": [
                "name"
              ],
              "description": "Updates a row.",
              "flatPath": "v1alpha1/tables/{tablesId}/rows/{rowsId}",
              "id": "area120tables.tables.rows.patch",
              "parameters": {
                "updateMask": {
                  "location": "query",
                  "format": "google-fieldmask",
                  "description": "The list of fields to update.",
                  "type": "string"
                },
                "name": {
                  "location": "path",
                  "description": "The resource name of the row. Row names have the form `tables/{table}/rows/{row}`. The name is ignored when creating a row.",
                  "type": "string",
                  "pattern": "^tables/[^/]+/rows/[^/]+$",
                  "required": true
                },
                "view": {
                  "enumDescriptions": [
                    "Defaults to user entered text.",
                    "Uses internally generated column id to identify values."
                  ],
                  "location": "query",
                  "enum": [
                    "VIEW_UNSPECIFIED",
                    "COLUMN_ID_VIEW"
                  ],
                  "description": "Optional. Column key to use for values in the row. Defaults to user entered name.",
                  "type": "string"
                }
              },
              "request": {
                "$ref": "Row"
              },
              "scopes": [
                "https://www.googleapis.com/auth/drive",
                "https://www.googleapis.com/auth/drive.file",
                "https://www.googleapis.com/auth/spreadsheets"
              ],
              "path": "v1alpha1/{+name}",
              "response": {
                "$ref": "Row"
              },
              "httpMethod": "PATCH"
            },
            "batchCreate": {
              "response": {
                "$ref": "BatchCreateRowsResponse"
              },
              "flatPath": "v1alpha1/tables/{tablesId}/rows:batchCreate",
              "description": "Creates multiple rows.",
              "httpMethod": "POST",
              "request": {
                "$ref": "BatchCreateRowsRequest"
              },
              "id": "area120tables.tables.rows.batchCreate",
              "parameters": {
                "parent": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "pattern": "^tables/[^/]+$",
                  "description": "Required. The parent table where the rows will be created. Format: tables/{table}"
                }
              },
              "path": "v1alpha1/{+parent}/rows:batchCreate",
              "scopes": [
                "https://www.googleapis.com/auth/drive",
                "https://www.googleapis.com/auth/drive.file",
                "https://www.googleapis.com/auth/spreadsheets"
              ],
              "parameterOrder": [
                "parent"
              ]
            }
          }
        }
      }
    }
  }
}
