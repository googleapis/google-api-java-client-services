/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * When we apply a rule to define a particular cluster, we have a RuleInstance. Some kinds of rules
 * for clusters define more than one cluster. In those rules we say things like "for each entity X
 * with this property, we create a cluster where..."; each particular cluster that we create is the
 * result of an *instance* of that rule, where the argument X has been bound to a particular entity
 * (note that this also applies to rules that define only one cluster; in that case, there are no
 * arguments). An entity that is part of a cluster plays a "role" in such a cluster. This message
 * describes such an instantiation of a rule with a role and with concrete values for the arguments.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class RepositoryWebrefClusterProtoRuleInstance extends com.google.api.client.json.GenericJson {

  /**
   * Exactly one of these *RuleInstance fields needs to be present for clusters which have not been
   * merged; it selects the specific kind of rule instance. For merged clusters both fields may be
   * present.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private RepositoryWebrefClusterProtoMidListRuleInstance midList;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<RepositoryWebrefClusterProtoRelationRuleInstance> relation;

  static {
    // hack to force ProGuard to consider RepositoryWebrefClusterProtoRelationRuleInstance used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(RepositoryWebrefClusterProtoRelationRuleInstance.class);
  }

  /**
   * Exactly one of these *RuleInstance fields needs to be present for clusters which have not been
   * merged; it selects the specific kind of rule instance. For merged clusters both fields may be
   * present.
   * @return value or {@code null} for none
   */
  public RepositoryWebrefClusterProtoMidListRuleInstance getMidList() {
    return midList;
  }

  /**
   * Exactly one of these *RuleInstance fields needs to be present for clusters which have not been
   * merged; it selects the specific kind of rule instance. For merged clusters both fields may be
   * present.
   * @param midList midList or {@code null} for none
   */
  public RepositoryWebrefClusterProtoRuleInstance setMidList(RepositoryWebrefClusterProtoMidListRuleInstance midList) {
    this.midList = midList;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<RepositoryWebrefClusterProtoRelationRuleInstance> getRelation() {
    return relation;
  }

  /**
   * @param relation relation or {@code null} for none
   */
  public RepositoryWebrefClusterProtoRuleInstance setRelation(java.util.List<RepositoryWebrefClusterProtoRelationRuleInstance> relation) {
    this.relation = relation;
    return this;
  }

  @Override
  public RepositoryWebrefClusterProtoRuleInstance set(String fieldName, Object value) {
    return (RepositoryWebrefClusterProtoRuleInstance) super.set(fieldName, value);
  }

  @Override
  public RepositoryWebrefClusterProtoRuleInstance clone() {
    return (RepositoryWebrefClusterProtoRuleInstance) super.clone();
  }

}
