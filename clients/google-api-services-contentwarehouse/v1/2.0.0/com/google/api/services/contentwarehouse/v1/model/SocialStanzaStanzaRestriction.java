/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Contains various restriction information about a stanza, derived from properties of the stanza,
 * the viewer and the creator. Restrictions stored in this message are not related to
 * direct/indirect relationship between the viewer and the creator of stanza. Some examples are: -
 * Abusive - Legal - Racy - Content not suitable for age - Porn - Blocked by country/geo of viewer.
 * - Restricted by stanza creator (not the user specific block). - etc... Please see go/stanza-
 * abuse-flow for more details.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class SocialStanzaStanzaRestriction extends com.google.api.client.json.GenericJson {

  /**
   * The abuses.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AbuseiamAbuseType> abuseTypes;

  static {
    // hack to force ProGuard to consider AbuseiamAbuseType used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(AbuseiamAbuseType.class);
  }

  /**
   * The appeal state.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String appealState;

  /**
   * Field to explain various restrictions of the Stanza. Some examples of restrictions are: - Not
   * permitted because of legal restrictions of geography/country of viewer or creator. - Content
   * not suitable for current viewer i.e. porn, abusive, racy. - Creator restricted the content to
   * an age group. - etc...
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AbuseiamContentRestriction contentRestriction;

  /**
   * Delete reasons. This is a repeated field because an stanza can be deleted multiple times due to
   * different reasons such as user_delete, admin_delete.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> deleteReason;

  /**
   * Delivery restrictions, if present.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SocialStanzaDeliveryRestriction deliveryRestriction;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AppsPeopleActivityBackendDestinationStream destinationStream;

  /**
   * The moderation info. At write time, this field is only allowed to be set when moderator_type is
   * AUTO_MODERATOR. For other moderator types, moderation_reason is the only field that can be set
   * by clients.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SocialStanzaModerationInfo moderationInfo;

  /**
   * The moderation state.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String moderationState;

  /**
   * The abuses.
   * @return value or {@code null} for none
   */
  public java.util.List<AbuseiamAbuseType> getAbuseTypes() {
    return abuseTypes;
  }

  /**
   * The abuses.
   * @param abuseTypes abuseTypes or {@code null} for none
   */
  public SocialStanzaStanzaRestriction setAbuseTypes(java.util.List<AbuseiamAbuseType> abuseTypes) {
    this.abuseTypes = abuseTypes;
    return this;
  }

  /**
   * The appeal state.
   * @return value or {@code null} for none
   */
  public java.lang.String getAppealState() {
    return appealState;
  }

  /**
   * The appeal state.
   * @param appealState appealState or {@code null} for none
   */
  public SocialStanzaStanzaRestriction setAppealState(java.lang.String appealState) {
    this.appealState = appealState;
    return this;
  }

  /**
   * Field to explain various restrictions of the Stanza. Some examples of restrictions are: - Not
   * permitted because of legal restrictions of geography/country of viewer or creator. - Content
   * not suitable for current viewer i.e. porn, abusive, racy. - Creator restricted the content to
   * an age group. - etc...
   * @return value or {@code null} for none
   */
  public AbuseiamContentRestriction getContentRestriction() {
    return contentRestriction;
  }

  /**
   * Field to explain various restrictions of the Stanza. Some examples of restrictions are: - Not
   * permitted because of legal restrictions of geography/country of viewer or creator. - Content
   * not suitable for current viewer i.e. porn, abusive, racy. - Creator restricted the content to
   * an age group. - etc...
   * @param contentRestriction contentRestriction or {@code null} for none
   */
  public SocialStanzaStanzaRestriction setContentRestriction(AbuseiamContentRestriction contentRestriction) {
    this.contentRestriction = contentRestriction;
    return this;
  }

  /**
   * Delete reasons. This is a repeated field because an stanza can be deleted multiple times due to
   * different reasons such as user_delete, admin_delete.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getDeleteReason() {
    return deleteReason;
  }

  /**
   * Delete reasons. This is a repeated field because an stanza can be deleted multiple times due to
   * different reasons such as user_delete, admin_delete.
   * @param deleteReason deleteReason or {@code null} for none
   */
  public SocialStanzaStanzaRestriction setDeleteReason(java.util.List<java.lang.String> deleteReason) {
    this.deleteReason = deleteReason;
    return this;
  }

  /**
   * Delivery restrictions, if present.
   * @return value or {@code null} for none
   */
  public SocialStanzaDeliveryRestriction getDeliveryRestriction() {
    return deliveryRestriction;
  }

  /**
   * Delivery restrictions, if present.
   * @param deliveryRestriction deliveryRestriction or {@code null} for none
   */
  public SocialStanzaStanzaRestriction setDeliveryRestriction(SocialStanzaDeliveryRestriction deliveryRestriction) {
    this.deliveryRestriction = deliveryRestriction;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public AppsPeopleActivityBackendDestinationStream getDestinationStream() {
    return destinationStream;
  }

  /**
   * @param destinationStream destinationStream or {@code null} for none
   */
  public SocialStanzaStanzaRestriction setDestinationStream(AppsPeopleActivityBackendDestinationStream destinationStream) {
    this.destinationStream = destinationStream;
    return this;
  }

  /**
   * The moderation info. At write time, this field is only allowed to be set when moderator_type is
   * AUTO_MODERATOR. For other moderator types, moderation_reason is the only field that can be set
   * by clients.
   * @return value or {@code null} for none
   */
  public SocialStanzaModerationInfo getModerationInfo() {
    return moderationInfo;
  }

  /**
   * The moderation info. At write time, this field is only allowed to be set when moderator_type is
   * AUTO_MODERATOR. For other moderator types, moderation_reason is the only field that can be set
   * by clients.
   * @param moderationInfo moderationInfo or {@code null} for none
   */
  public SocialStanzaStanzaRestriction setModerationInfo(SocialStanzaModerationInfo moderationInfo) {
    this.moderationInfo = moderationInfo;
    return this;
  }

  /**
   * The moderation state.
   * @return value or {@code null} for none
   */
  public java.lang.String getModerationState() {
    return moderationState;
  }

  /**
   * The moderation state.
   * @param moderationState moderationState or {@code null} for none
   */
  public SocialStanzaStanzaRestriction setModerationState(java.lang.String moderationState) {
    this.moderationState = moderationState;
    return this;
  }

  @Override
  public SocialStanzaStanzaRestriction set(String fieldName, Object value) {
    return (SocialStanzaStanzaRestriction) super.set(fieldName, value);
  }

  @Override
  public SocialStanzaStanzaRestriction clone() {
    return (SocialStanzaStanzaRestriction) super.clone();
  }

}
