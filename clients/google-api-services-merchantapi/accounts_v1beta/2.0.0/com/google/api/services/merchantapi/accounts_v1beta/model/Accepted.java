/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.merchantapi.accounts_v1beta.model;

/**
 * Describes the accepted terms of service.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Merchant API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Accepted extends com.google.api.client.json.GenericJson {

  /**
   * The account where the acceptance was recorded. This can be the account itself or, in the case
   * of subaccounts, the MCA account.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String acceptedBy;

  /**
   * The accepted [termsOfService](google.shopping.merchant.accounts.v1main.TermsOfService).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String termsOfService;

  /**
   * When set, it states that the accepted
   * [TermsOfService](google.shopping.merchant.accounts.v1main.TermsOfService) is only valid until
   * the end of this date (in UTC). A new one must be accepted before then. The information of the
   * required [TermsOfService](google.shopping.merchant.accounts.v1main.TermsOfService) is found in
   * the [Required](Required) message.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Date validUntil;

  /**
   * The account where the acceptance was recorded. This can be the account itself or, in the case
   * of subaccounts, the MCA account.
   * @return value or {@code null} for none
   */
  public java.lang.String getAcceptedBy() {
    return acceptedBy;
  }

  /**
   * The account where the acceptance was recorded. This can be the account itself or, in the case
   * of subaccounts, the MCA account.
   * @param acceptedBy acceptedBy or {@code null} for none
   */
  public Accepted setAcceptedBy(java.lang.String acceptedBy) {
    this.acceptedBy = acceptedBy;
    return this;
  }

  /**
   * The accepted [termsOfService](google.shopping.merchant.accounts.v1main.TermsOfService).
   * @return value or {@code null} for none
   */
  public java.lang.String getTermsOfService() {
    return termsOfService;
  }

  /**
   * The accepted [termsOfService](google.shopping.merchant.accounts.v1main.TermsOfService).
   * @param termsOfService termsOfService or {@code null} for none
   */
  public Accepted setTermsOfService(java.lang.String termsOfService) {
    this.termsOfService = termsOfService;
    return this;
  }

  /**
   * When set, it states that the accepted
   * [TermsOfService](google.shopping.merchant.accounts.v1main.TermsOfService) is only valid until
   * the end of this date (in UTC). A new one must be accepted before then. The information of the
   * required [TermsOfService](google.shopping.merchant.accounts.v1main.TermsOfService) is found in
   * the [Required](Required) message.
   * @return value or {@code null} for none
   */
  public Date getValidUntil() {
    return validUntil;
  }

  /**
   * When set, it states that the accepted
   * [TermsOfService](google.shopping.merchant.accounts.v1main.TermsOfService) is only valid until
   * the end of this date (in UTC). A new one must be accepted before then. The information of the
   * required [TermsOfService](google.shopping.merchant.accounts.v1main.TermsOfService) is found in
   * the [Required](Required) message.
   * @param validUntil validUntil or {@code null} for none
   */
  public Accepted setValidUntil(Date validUntil) {
    this.validUntil = validUntil;
    return this;
  }

  @Override
  public Accepted set(String fieldName, Object value) {
    return (Accepted) super.set(fieldName, value);
  }

  @Override
  public Accepted clone() {
    return (Accepted) super.clone();
  }

}
