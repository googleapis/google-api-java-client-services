/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.civicinfo.model;

/**
 * A simple representation of an address.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Civic Information API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class SimpleAddressType extends com.google.api.client.json.GenericJson {

  /**
   * The city or town for the address.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String city;

  /**
   * The street name and number of this address.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String line1;

  /**
   * The second line the address, if needed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String line2;

  /**
   * The third line of the address, if needed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String line3;

  /**
   * The name of the location.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String locationName;

  /**
   * The US two letter state abbreviation of the address.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * The US Postal Zip Code of the address.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String zip;

  /**
   * The city or town for the address.
   * @return value or {@code null} for none
   */
  public java.lang.String getCity() {
    return city;
  }

  /**
   * The city or town for the address.
   * @param city city or {@code null} for none
   */
  public SimpleAddressType setCity(java.lang.String city) {
    this.city = city;
    return this;
  }

  /**
   * The street name and number of this address.
   * @return value or {@code null} for none
   */
  public java.lang.String getLine1() {
    return line1;
  }

  /**
   * The street name and number of this address.
   * @param line1 line1 or {@code null} for none
   */
  public SimpleAddressType setLine1(java.lang.String line1) {
    this.line1 = line1;
    return this;
  }

  /**
   * The second line the address, if needed.
   * @return value or {@code null} for none
   */
  public java.lang.String getLine2() {
    return line2;
  }

  /**
   * The second line the address, if needed.
   * @param line2 line2 or {@code null} for none
   */
  public SimpleAddressType setLine2(java.lang.String line2) {
    this.line2 = line2;
    return this;
  }

  /**
   * The third line of the address, if needed.
   * @return value or {@code null} for none
   */
  public java.lang.String getLine3() {
    return line3;
  }

  /**
   * The third line of the address, if needed.
   * @param line3 line3 or {@code null} for none
   */
  public SimpleAddressType setLine3(java.lang.String line3) {
    this.line3 = line3;
    return this;
  }

  /**
   * The name of the location.
   * @return value or {@code null} for none
   */
  public java.lang.String getLocationName() {
    return locationName;
  }

  /**
   * The name of the location.
   * @param locationName locationName or {@code null} for none
   */
  public SimpleAddressType setLocationName(java.lang.String locationName) {
    this.locationName = locationName;
    return this;
  }

  /**
   * The US two letter state abbreviation of the address.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * The US two letter state abbreviation of the address.
   * @param state state or {@code null} for none
   */
  public SimpleAddressType setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * The US Postal Zip Code of the address.
   * @return value or {@code null} for none
   */
  public java.lang.String getZip() {
    return zip;
  }

  /**
   * The US Postal Zip Code of the address.
   * @param zip zip or {@code null} for none
   */
  public SimpleAddressType setZip(java.lang.String zip) {
    this.zip = zip;
    return this;
  }

  @Override
  public SimpleAddressType set(String fieldName, Object value) {
    return (SimpleAddressType) super.set(fieldName, value);
  }

  @Override
  public SimpleAddressType clone() {
    return (SimpleAddressType) super.clone();
  }

}
