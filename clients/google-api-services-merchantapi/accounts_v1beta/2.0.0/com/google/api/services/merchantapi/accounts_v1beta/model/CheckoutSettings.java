/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.merchantapi.accounts_v1beta.model;

/**
 * [CheckoutSettings](https://support.google.com/merchants/answer/13945960) for a specific merchant.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Merchant API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class CheckoutSettings extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The effective value of enrollment_state for a given merchant ID. If account level
   * settings are present then this value will be a copy of the account level settings. Otherwise,
   * it will have the value of the parent account (for only marketplace sellers).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String effectiveEnrollmentState;

  /**
   * Output only. The effective value of `review_state` for a given merchant ID. If account level
   * settings are present then this value will be a copy of the account level settings. Otherwise,
   * it will have the value of the parent account (for only marketplace sellers).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String effectiveReviewState;

  /**
   * Output only. The effective value of `uri_settings` for a given merchant. If account level
   * settings are present then this value will be a copy of url settings. Otherwise, it will have
   * the value of the parent account (for only marketplace sellers).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private UriSettings effectiveUriSettings;

  /**
   * Optional. The destinations (also known as [Marketing
   * methods](https://support.google.com/merchants/answer/15130232)) to which the checkout program
   * applies, valid destination values are `SHOPPING_ADS`, `FREE_LISTINGS`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> eligibleDestinations;

  /**
   * Output only. Reflects the merchant enrollment state in `Checkout` program.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String enrollmentState;

  /**
   * Identifier. The resource name of the program configuration settings. Format:
   * `accounts/{account}/programs/{program}/checkoutSettings`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. Reflects the merchant review state in `Checkout` program. This is set based on the
   * data quality reviews of the URL provided by the merchant. A merchant with enrollment state as
   * `ENROLLED` can be in the following review states: `IN_REVIEW`, `APPROVED` or `DISAPPROVED`. A
   * merchant must be in an `enrollment_state` of `ENROLLED` before a review can begin for the
   * merchant.For more details, check the help center doc.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String reviewState;

  /**
   * URI settings for cart or checkout URL.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private UriSettings uriSettings;

  /**
   * Output only. The effective value of enrollment_state for a given merchant ID. If account level
   * settings are present then this value will be a copy of the account level settings. Otherwise,
   * it will have the value of the parent account (for only marketplace sellers).
   * @return value or {@code null} for none
   */
  public java.lang.String getEffectiveEnrollmentState() {
    return effectiveEnrollmentState;
  }

  /**
   * Output only. The effective value of enrollment_state for a given merchant ID. If account level
   * settings are present then this value will be a copy of the account level settings. Otherwise,
   * it will have the value of the parent account (for only marketplace sellers).
   * @param effectiveEnrollmentState effectiveEnrollmentState or {@code null} for none
   */
  public CheckoutSettings setEffectiveEnrollmentState(java.lang.String effectiveEnrollmentState) {
    this.effectiveEnrollmentState = effectiveEnrollmentState;
    return this;
  }

  /**
   * Output only. The effective value of `review_state` for a given merchant ID. If account level
   * settings are present then this value will be a copy of the account level settings. Otherwise,
   * it will have the value of the parent account (for only marketplace sellers).
   * @return value or {@code null} for none
   */
  public java.lang.String getEffectiveReviewState() {
    return effectiveReviewState;
  }

  /**
   * Output only. The effective value of `review_state` for a given merchant ID. If account level
   * settings are present then this value will be a copy of the account level settings. Otherwise,
   * it will have the value of the parent account (for only marketplace sellers).
   * @param effectiveReviewState effectiveReviewState or {@code null} for none
   */
  public CheckoutSettings setEffectiveReviewState(java.lang.String effectiveReviewState) {
    this.effectiveReviewState = effectiveReviewState;
    return this;
  }

  /**
   * Output only. The effective value of `uri_settings` for a given merchant. If account level
   * settings are present then this value will be a copy of url settings. Otherwise, it will have
   * the value of the parent account (for only marketplace sellers).
   * @return value or {@code null} for none
   */
  public UriSettings getEffectiveUriSettings() {
    return effectiveUriSettings;
  }

  /**
   * Output only. The effective value of `uri_settings` for a given merchant. If account level
   * settings are present then this value will be a copy of url settings. Otherwise, it will have
   * the value of the parent account (for only marketplace sellers).
   * @param effectiveUriSettings effectiveUriSettings or {@code null} for none
   */
  public CheckoutSettings setEffectiveUriSettings(UriSettings effectiveUriSettings) {
    this.effectiveUriSettings = effectiveUriSettings;
    return this;
  }

  /**
   * Optional. The destinations (also known as [Marketing
   * methods](https://support.google.com/merchants/answer/15130232)) to which the checkout program
   * applies, valid destination values are `SHOPPING_ADS`, `FREE_LISTINGS`
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getEligibleDestinations() {
    return eligibleDestinations;
  }

  /**
   * Optional. The destinations (also known as [Marketing
   * methods](https://support.google.com/merchants/answer/15130232)) to which the checkout program
   * applies, valid destination values are `SHOPPING_ADS`, `FREE_LISTINGS`
   * @param eligibleDestinations eligibleDestinations or {@code null} for none
   */
  public CheckoutSettings setEligibleDestinations(java.util.List<java.lang.String> eligibleDestinations) {
    this.eligibleDestinations = eligibleDestinations;
    return this;
  }

  /**
   * Output only. Reflects the merchant enrollment state in `Checkout` program.
   * @return value or {@code null} for none
   */
  public java.lang.String getEnrollmentState() {
    return enrollmentState;
  }

  /**
   * Output only. Reflects the merchant enrollment state in `Checkout` program.
   * @param enrollmentState enrollmentState or {@code null} for none
   */
  public CheckoutSettings setEnrollmentState(java.lang.String enrollmentState) {
    this.enrollmentState = enrollmentState;
    return this;
  }

  /**
   * Identifier. The resource name of the program configuration settings. Format:
   * `accounts/{account}/programs/{program}/checkoutSettings`
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Identifier. The resource name of the program configuration settings. Format:
   * `accounts/{account}/programs/{program}/checkoutSettings`
   * @param name name or {@code null} for none
   */
  public CheckoutSettings setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. Reflects the merchant review state in `Checkout` program. This is set based on the
   * data quality reviews of the URL provided by the merchant. A merchant with enrollment state as
   * `ENROLLED` can be in the following review states: `IN_REVIEW`, `APPROVED` or `DISAPPROVED`. A
   * merchant must be in an `enrollment_state` of `ENROLLED` before a review can begin for the
   * merchant.For more details, check the help center doc.
   * @return value or {@code null} for none
   */
  public java.lang.String getReviewState() {
    return reviewState;
  }

  /**
   * Output only. Reflects the merchant review state in `Checkout` program. This is set based on the
   * data quality reviews of the URL provided by the merchant. A merchant with enrollment state as
   * `ENROLLED` can be in the following review states: `IN_REVIEW`, `APPROVED` or `DISAPPROVED`. A
   * merchant must be in an `enrollment_state` of `ENROLLED` before a review can begin for the
   * merchant.For more details, check the help center doc.
   * @param reviewState reviewState or {@code null} for none
   */
  public CheckoutSettings setReviewState(java.lang.String reviewState) {
    this.reviewState = reviewState;
    return this;
  }

  /**
   * URI settings for cart or checkout URL.
   * @return value or {@code null} for none
   */
  public UriSettings getUriSettings() {
    return uriSettings;
  }

  /**
   * URI settings for cart or checkout URL.
   * @param uriSettings uriSettings or {@code null} for none
   */
  public CheckoutSettings setUriSettings(UriSettings uriSettings) {
    this.uriSettings = uriSettings;
    return this;
  }

  @Override
  public CheckoutSettings set(String fieldName, Object value) {
    return (CheckoutSettings) super.set(fieldName, value);
  }

  @Override
  public CheckoutSettings clone() {
    return (CheckoutSettings) super.clone();
  }

}
