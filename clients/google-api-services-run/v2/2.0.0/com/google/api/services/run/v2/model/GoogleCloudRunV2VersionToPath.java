/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.run.v2.model;

/**
 * VersionToPath maps a specific version of a secret to a relative file to mount to, relative to
 * VolumeMount's mount_path.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Run Admin API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudRunV2VersionToPath extends com.google.api.client.json.GenericJson {

  /**
   * Integer octal mode bits to use on this file, must be a value between 01 and 0777 (octal). If 0
   * or not set, the Volume's default mode will be used. Notes * Internally, a umask of 0222 will be
   * applied to any non-zero value. * This is an integer representation of the mode bits. So, the
   * octal integer value should look exactly as the chmod numeric notation with a leading zero. Some
   * examples: for chmod 640 (u=rw,g=r), set to 0640 (octal) or 416 (base-10). For chmod 755
   * (u=rwx,g=rx,o=rx), set to 0755 (octal) or 493 (base-10). * This might be in conflict with other
   * options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer mode;

  /**
   * Required. The relative path of the secret in the container.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String path;

  /**
   * The Cloud Secret Manager secret version. Can be 'latest' for the latest value, or an integer or
   * a secret alias for a specific version.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String version;

  /**
   * Integer octal mode bits to use on this file, must be a value between 01 and 0777 (octal). If 0
   * or not set, the Volume's default mode will be used. Notes * Internally, a umask of 0222 will be
   * applied to any non-zero value. * This is an integer representation of the mode bits. So, the
   * octal integer value should look exactly as the chmod numeric notation with a leading zero. Some
   * examples: for chmod 640 (u=rw,g=r), set to 0640 (octal) or 416 (base-10). For chmod 755
   * (u=rwx,g=rx,o=rx), set to 0755 (octal) or 493 (base-10). * This might be in conflict with other
   * options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMode() {
    return mode;
  }

  /**
   * Integer octal mode bits to use on this file, must be a value between 01 and 0777 (octal). If 0
   * or not set, the Volume's default mode will be used. Notes * Internally, a umask of 0222 will be
   * applied to any non-zero value. * This is an integer representation of the mode bits. So, the
   * octal integer value should look exactly as the chmod numeric notation with a leading zero. Some
   * examples: for chmod 640 (u=rw,g=r), set to 0640 (octal) or 416 (base-10). For chmod 755
   * (u=rwx,g=rx,o=rx), set to 0755 (octal) or 493 (base-10). * This might be in conflict with other
   * options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   * @param mode mode or {@code null} for none
   */
  public GoogleCloudRunV2VersionToPath setMode(java.lang.Integer mode) {
    this.mode = mode;
    return this;
  }

  /**
   * Required. The relative path of the secret in the container.
   * @return value or {@code null} for none
   */
  public java.lang.String getPath() {
    return path;
  }

  /**
   * Required. The relative path of the secret in the container.
   * @param path path or {@code null} for none
   */
  public GoogleCloudRunV2VersionToPath setPath(java.lang.String path) {
    this.path = path;
    return this;
  }

  /**
   * The Cloud Secret Manager secret version. Can be 'latest' for the latest value, or an integer or
   * a secret alias for a specific version.
   * @return value or {@code null} for none
   */
  public java.lang.String getVersion() {
    return version;
  }

  /**
   * The Cloud Secret Manager secret version. Can be 'latest' for the latest value, or an integer or
   * a secret alias for a specific version.
   * @param version version or {@code null} for none
   */
  public GoogleCloudRunV2VersionToPath setVersion(java.lang.String version) {
    this.version = version;
    return this;
  }

  @Override
  public GoogleCloudRunV2VersionToPath set(String fieldName, Object value) {
    return (GoogleCloudRunV2VersionToPath) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudRunV2VersionToPath clone() {
    return (GoogleCloudRunV2VersionToPath) super.clone();
  }

}
