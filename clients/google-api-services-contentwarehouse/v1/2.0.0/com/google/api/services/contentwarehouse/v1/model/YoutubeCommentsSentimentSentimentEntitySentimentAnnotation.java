/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * An entity level sentiment annotation containing the sentiment values aggregated over all mentions
 * of an entity. Next tag: 7.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class YoutubeCommentsSentimentSentimentEntitySentimentAnnotation extends com.google.api.client.json.GenericJson {

  /**
   * The representative entity name. This can be blank for cases when there is no explicit name like
   * "I" or "it". The mentions' tokens can be used to get more details about each entity.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String entityName;

  /**
   * Total magnitude of the sentiment.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float magnitude;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<YoutubeCommentsSentimentSentimentEntitySentimentAnnotationMentionSentimentAnnotation> mentionSentiment;

  /**
   * MID for this entity, if available.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String mid;

  /**
   * Polarity of the sentiment. See above for detail.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float polarity;

  /**
   * The per entity score between -1.0 and 1.0. Combines the signal from polarity and magnitude
   * values.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float score;

  /**
   * The representative entity name. This can be blank for cases when there is no explicit name like
   * "I" or "it". The mentions' tokens can be used to get more details about each entity.
   * @return value or {@code null} for none
   */
  public java.lang.String getEntityName() {
    return entityName;
  }

  /**
   * The representative entity name. This can be blank for cases when there is no explicit name like
   * "I" or "it". The mentions' tokens can be used to get more details about each entity.
   * @param entityName entityName or {@code null} for none
   */
  public YoutubeCommentsSentimentSentimentEntitySentimentAnnotation setEntityName(java.lang.String entityName) {
    this.entityName = entityName;
    return this;
  }

  /**
   * Total magnitude of the sentiment.
   * @return value or {@code null} for none
   */
  public java.lang.Float getMagnitude() {
    return magnitude;
  }

  /**
   * Total magnitude of the sentiment.
   * @param magnitude magnitude or {@code null} for none
   */
  public YoutubeCommentsSentimentSentimentEntitySentimentAnnotation setMagnitude(java.lang.Float magnitude) {
    this.magnitude = magnitude;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<YoutubeCommentsSentimentSentimentEntitySentimentAnnotationMentionSentimentAnnotation> getMentionSentiment() {
    return mentionSentiment;
  }

  /**
   * @param mentionSentiment mentionSentiment or {@code null} for none
   */
  public YoutubeCommentsSentimentSentimentEntitySentimentAnnotation setMentionSentiment(java.util.List<YoutubeCommentsSentimentSentimentEntitySentimentAnnotationMentionSentimentAnnotation> mentionSentiment) {
    this.mentionSentiment = mentionSentiment;
    return this;
  }

  /**
   * MID for this entity, if available.
   * @return value or {@code null} for none
   */
  public java.lang.String getMid() {
    return mid;
  }

  /**
   * MID for this entity, if available.
   * @param mid mid or {@code null} for none
   */
  public YoutubeCommentsSentimentSentimentEntitySentimentAnnotation setMid(java.lang.String mid) {
    this.mid = mid;
    return this;
  }

  /**
   * Polarity of the sentiment. See above for detail.
   * @return value or {@code null} for none
   */
  public java.lang.Float getPolarity() {
    return polarity;
  }

  /**
   * Polarity of the sentiment. See above for detail.
   * @param polarity polarity or {@code null} for none
   */
  public YoutubeCommentsSentimentSentimentEntitySentimentAnnotation setPolarity(java.lang.Float polarity) {
    this.polarity = polarity;
    return this;
  }

  /**
   * The per entity score between -1.0 and 1.0. Combines the signal from polarity and magnitude
   * values.
   * @return value or {@code null} for none
   */
  public java.lang.Float getScore() {
    return score;
  }

  /**
   * The per entity score between -1.0 and 1.0. Combines the signal from polarity and magnitude
   * values.
   * @param score score or {@code null} for none
   */
  public YoutubeCommentsSentimentSentimentEntitySentimentAnnotation setScore(java.lang.Float score) {
    this.score = score;
    return this;
  }

  @Override
  public YoutubeCommentsSentimentSentimentEntitySentimentAnnotation set(String fieldName, Object value) {
    return (YoutubeCommentsSentimentSentimentEntitySentimentAnnotation) super.set(fieldName, value);
  }

  @Override
  public YoutubeCommentsSentimentSentimentEntitySentimentAnnotation clone() {
    return (YoutubeCommentsSentimentSentimentEntitySentimentAnnotation) super.clone();
  }

}
