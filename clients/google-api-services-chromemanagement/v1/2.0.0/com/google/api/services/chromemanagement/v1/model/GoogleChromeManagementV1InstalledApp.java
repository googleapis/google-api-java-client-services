/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.chromemanagement.v1.model;

/**
 * Describes an installed app.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Chrome Management API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleChromeManagementV1InstalledApp extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Unique identifier of the app. For Chrome apps and extensions, the 32-character id
   * (e.g. ehoadneljpdggcbbknedodolkkjodefl). For Android apps, the package name (e.g.
   * com.evernote).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String appId;

  /**
   * Output only. How the app was installed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String appInstallType;

  /**
   * Output only. Source of the installed app.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String appSource;

  /**
   * Output only. Type of the app.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String appType;

  /**
   * Output only. Count of browser devices with this app installed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long browserDeviceCount;

  /**
   * Output only. Description of the installed app.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Output only. Whether the app is disabled.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean disabled;

  /**
   * Output only. Name of the installed app.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Output only. Homepage uri of the installed app.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String homepageUri;

  /**
   * Output only. Count of ChromeOS users with this app installed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long osUserCount;

  /**
   * Output only. Permissions of the installed app.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> permissions;

  /**
   * Output only. If available, the risk assessment data about this extension.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleChromeManagementV1RiskAssessmentData riskAssessment;

  /**
   * Output only. Unique identifier of the app. For Chrome apps and extensions, the 32-character id
   * (e.g. ehoadneljpdggcbbknedodolkkjodefl). For Android apps, the package name (e.g.
   * com.evernote).
   * @return value or {@code null} for none
   */
  public java.lang.String getAppId() {
    return appId;
  }

  /**
   * Output only. Unique identifier of the app. For Chrome apps and extensions, the 32-character id
   * (e.g. ehoadneljpdggcbbknedodolkkjodefl). For Android apps, the package name (e.g.
   * com.evernote).
   * @param appId appId or {@code null} for none
   */
  public GoogleChromeManagementV1InstalledApp setAppId(java.lang.String appId) {
    this.appId = appId;
    return this;
  }

  /**
   * Output only. How the app was installed.
   * @return value or {@code null} for none
   */
  public java.lang.String getAppInstallType() {
    return appInstallType;
  }

  /**
   * Output only. How the app was installed.
   * @param appInstallType appInstallType or {@code null} for none
   */
  public GoogleChromeManagementV1InstalledApp setAppInstallType(java.lang.String appInstallType) {
    this.appInstallType = appInstallType;
    return this;
  }

  /**
   * Output only. Source of the installed app.
   * @return value or {@code null} for none
   */
  public java.lang.String getAppSource() {
    return appSource;
  }

  /**
   * Output only. Source of the installed app.
   * @param appSource appSource or {@code null} for none
   */
  public GoogleChromeManagementV1InstalledApp setAppSource(java.lang.String appSource) {
    this.appSource = appSource;
    return this;
  }

  /**
   * Output only. Type of the app.
   * @return value or {@code null} for none
   */
  public java.lang.String getAppType() {
    return appType;
  }

  /**
   * Output only. Type of the app.
   * @param appType appType or {@code null} for none
   */
  public GoogleChromeManagementV1InstalledApp setAppType(java.lang.String appType) {
    this.appType = appType;
    return this;
  }

  /**
   * Output only. Count of browser devices with this app installed.
   * @return value or {@code null} for none
   */
  public java.lang.Long getBrowserDeviceCount() {
    return browserDeviceCount;
  }

  /**
   * Output only. Count of browser devices with this app installed.
   * @param browserDeviceCount browserDeviceCount or {@code null} for none
   */
  public GoogleChromeManagementV1InstalledApp setBrowserDeviceCount(java.lang.Long browserDeviceCount) {
    this.browserDeviceCount = browserDeviceCount;
    return this;
  }

  /**
   * Output only. Description of the installed app.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Output only. Description of the installed app.
   * @param description description or {@code null} for none
   */
  public GoogleChromeManagementV1InstalledApp setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Output only. Whether the app is disabled.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getDisabled() {
    return disabled;
  }

  /**
   * Output only. Whether the app is disabled.
   * @param disabled disabled or {@code null} for none
   */
  public GoogleChromeManagementV1InstalledApp setDisabled(java.lang.Boolean disabled) {
    this.disabled = disabled;
    return this;
  }

  /**
   * Output only. Name of the installed app.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Output only. Name of the installed app.
   * @param displayName displayName or {@code null} for none
   */
  public GoogleChromeManagementV1InstalledApp setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Output only. Homepage uri of the installed app.
   * @return value or {@code null} for none
   */
  public java.lang.String getHomepageUri() {
    return homepageUri;
  }

  /**
   * Output only. Homepage uri of the installed app.
   * @param homepageUri homepageUri or {@code null} for none
   */
  public GoogleChromeManagementV1InstalledApp setHomepageUri(java.lang.String homepageUri) {
    this.homepageUri = homepageUri;
    return this;
  }

  /**
   * Output only. Count of ChromeOS users with this app installed.
   * @return value or {@code null} for none
   */
  public java.lang.Long getOsUserCount() {
    return osUserCount;
  }

  /**
   * Output only. Count of ChromeOS users with this app installed.
   * @param osUserCount osUserCount or {@code null} for none
   */
  public GoogleChromeManagementV1InstalledApp setOsUserCount(java.lang.Long osUserCount) {
    this.osUserCount = osUserCount;
    return this;
  }

  /**
   * Output only. Permissions of the installed app.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getPermissions() {
    return permissions;
  }

  /**
   * Output only. Permissions of the installed app.
   * @param permissions permissions or {@code null} for none
   */
  public GoogleChromeManagementV1InstalledApp setPermissions(java.util.List<java.lang.String> permissions) {
    this.permissions = permissions;
    return this;
  }

  /**
   * Output only. If available, the risk assessment data about this extension.
   * @return value or {@code null} for none
   */
  public GoogleChromeManagementV1RiskAssessmentData getRiskAssessment() {
    return riskAssessment;
  }

  /**
   * Output only. If available, the risk assessment data about this extension.
   * @param riskAssessment riskAssessment or {@code null} for none
   */
  public GoogleChromeManagementV1InstalledApp setRiskAssessment(GoogleChromeManagementV1RiskAssessmentData riskAssessment) {
    this.riskAssessment = riskAssessment;
    return this;
  }

  @Override
  public GoogleChromeManagementV1InstalledApp set(String fieldName, Object value) {
    return (GoogleChromeManagementV1InstalledApp) super.set(fieldName, value);
  }

  @Override
  public GoogleChromeManagementV1InstalledApp clone() {
    return (GoogleChromeManagementV1InstalledApp) super.clone();
  }

}
