/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * A rule that defines a Cluster based on a relation. Given a relation (a link type) R, then: For
 * each entity B that has incoming links of type R This defines an instance of this rule, with
 * argument=B We create a Set S We make B a child of S For each entity A that has a link R to B, we
 * make A a child of S
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class RepositoryWebrefClusterProtoRelationRule extends com.google.api.client.json.GenericJson {

  /**
   * If true, cluster global names and links will be extracted from the target of the property. If
   * false, all members of the cluster will be considered sources.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isCollapsible;

  /**
   * Whether the target of the relation is an intermediate (CVT) node in KG: - if it is not:
   * generate external_id for the cluster - if it is: - CVT should not be /common/topic otherwise
   * rule will not be created - cluster will reuse CVT mid as its own
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isCvtRule;

  /**
   * The topic_property_name for the link that defines the relation, e.g.
   * "/tv/tv_series_episode/series". Can start with a "!" to indicate that this link is reversed
   * during extraction and we want the reversed case. Required.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String relation;

  /**
   * No longer set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer sequenceId;

  /**
   * If true, cluster global names and links will be extracted from the target of the property. If
   * false, all members of the cluster will be considered sources.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsCollapsible() {
    return isCollapsible;
  }

  /**
   * If true, cluster global names and links will be extracted from the target of the property. If
   * false, all members of the cluster will be considered sources.
   * @param isCollapsible isCollapsible or {@code null} for none
   */
  public RepositoryWebrefClusterProtoRelationRule setIsCollapsible(java.lang.Boolean isCollapsible) {
    this.isCollapsible = isCollapsible;
    return this;
  }

  /**
   * Whether the target of the relation is an intermediate (CVT) node in KG: - if it is not:
   * generate external_id for the cluster - if it is: - CVT should not be /common/topic otherwise
   * rule will not be created - cluster will reuse CVT mid as its own
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsCvtRule() {
    return isCvtRule;
  }

  /**
   * Whether the target of the relation is an intermediate (CVT) node in KG: - if it is not:
   * generate external_id for the cluster - if it is: - CVT should not be /common/topic otherwise
   * rule will not be created - cluster will reuse CVT mid as its own
   * @param isCvtRule isCvtRule or {@code null} for none
   */
  public RepositoryWebrefClusterProtoRelationRule setIsCvtRule(java.lang.Boolean isCvtRule) {
    this.isCvtRule = isCvtRule;
    return this;
  }

  /**
   * The topic_property_name for the link that defines the relation, e.g.
   * "/tv/tv_series_episode/series". Can start with a "!" to indicate that this link is reversed
   * during extraction and we want the reversed case. Required.
   * @return value or {@code null} for none
   */
  public java.lang.String getRelation() {
    return relation;
  }

  /**
   * The topic_property_name for the link that defines the relation, e.g.
   * "/tv/tv_series_episode/series". Can start with a "!" to indicate that this link is reversed
   * during extraction and we want the reversed case. Required.
   * @param relation relation or {@code null} for none
   */
  public RepositoryWebrefClusterProtoRelationRule setRelation(java.lang.String relation) {
    this.relation = relation;
    return this;
  }

  /**
   * No longer set.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getSequenceId() {
    return sequenceId;
  }

  /**
   * No longer set.
   * @param sequenceId sequenceId or {@code null} for none
   */
  public RepositoryWebrefClusterProtoRelationRule setSequenceId(java.lang.Integer sequenceId) {
    this.sequenceId = sequenceId;
    return this;
  }

  @Override
  public RepositoryWebrefClusterProtoRelationRule set(String fieldName, Object value) {
    return (RepositoryWebrefClusterProtoRelationRule) super.set(fieldName, value);
  }

  @Override
  public RepositoryWebrefClusterProtoRelationRule clone() {
    return (RepositoryWebrefClusterProtoRelationRule) super.clone();
  }

}
