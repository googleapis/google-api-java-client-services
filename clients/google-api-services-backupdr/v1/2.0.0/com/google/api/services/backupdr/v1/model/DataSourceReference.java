/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.backupdr.v1.model;

/**
 * DataSourceReference is a reference to a DataSource resource.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Backup and DR Service API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class DataSourceReference extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The time when the DataSourceReference was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Output only. The resource name of the DataSource. Format:
   * projects/{project}/locations/{location}/backupVaults/{backupVault}/dataSources/{dataSource}
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String dataSource;

  /**
   * Output only. Information of backup configuration on the DataSource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DataSourceBackupConfigInfo dataSourceBackupConfigInfo;

  /**
   * Output only. The backup configuration state of the DataSource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String dataSourceBackupConfigState;

  /**
   * Output only. Number of backups in the DataSource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long dataSourceBackupCount;

  /**
   * Output only. The GCP resource that the DataSource is associated with.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DataSourceGcpResourceInfo dataSourceGcpResourceInfo;

  /**
   * Identifier. The resource name of the DataSourceReference. Format:
   * projects/{project}/locations/{location}/dataSourceReferences/{data_source_reference}
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. The time when the DataSourceReference was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The time when the DataSourceReference was created.
   * @param createTime createTime or {@code null} for none
   */
  public DataSourceReference setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Output only. The resource name of the DataSource. Format:
   * projects/{project}/locations/{location}/backupVaults/{backupVault}/dataSources/{dataSource}
   * @return value or {@code null} for none
   */
  public java.lang.String getDataSource() {
    return dataSource;
  }

  /**
   * Output only. The resource name of the DataSource. Format:
   * projects/{project}/locations/{location}/backupVaults/{backupVault}/dataSources/{dataSource}
   * @param dataSource dataSource or {@code null} for none
   */
  public DataSourceReference setDataSource(java.lang.String dataSource) {
    this.dataSource = dataSource;
    return this;
  }

  /**
   * Output only. Information of backup configuration on the DataSource.
   * @return value or {@code null} for none
   */
  public DataSourceBackupConfigInfo getDataSourceBackupConfigInfo() {
    return dataSourceBackupConfigInfo;
  }

  /**
   * Output only. Information of backup configuration on the DataSource.
   * @param dataSourceBackupConfigInfo dataSourceBackupConfigInfo or {@code null} for none
   */
  public DataSourceReference setDataSourceBackupConfigInfo(DataSourceBackupConfigInfo dataSourceBackupConfigInfo) {
    this.dataSourceBackupConfigInfo = dataSourceBackupConfigInfo;
    return this;
  }

  /**
   * Output only. The backup configuration state of the DataSource.
   * @return value or {@code null} for none
   */
  public java.lang.String getDataSourceBackupConfigState() {
    return dataSourceBackupConfigState;
  }

  /**
   * Output only. The backup configuration state of the DataSource.
   * @param dataSourceBackupConfigState dataSourceBackupConfigState or {@code null} for none
   */
  public DataSourceReference setDataSourceBackupConfigState(java.lang.String dataSourceBackupConfigState) {
    this.dataSourceBackupConfigState = dataSourceBackupConfigState;
    return this;
  }

  /**
   * Output only. Number of backups in the DataSource.
   * @return value or {@code null} for none
   */
  public java.lang.Long getDataSourceBackupCount() {
    return dataSourceBackupCount;
  }

  /**
   * Output only. Number of backups in the DataSource.
   * @param dataSourceBackupCount dataSourceBackupCount or {@code null} for none
   */
  public DataSourceReference setDataSourceBackupCount(java.lang.Long dataSourceBackupCount) {
    this.dataSourceBackupCount = dataSourceBackupCount;
    return this;
  }

  /**
   * Output only. The GCP resource that the DataSource is associated with.
   * @return value or {@code null} for none
   */
  public DataSourceGcpResourceInfo getDataSourceGcpResourceInfo() {
    return dataSourceGcpResourceInfo;
  }

  /**
   * Output only. The GCP resource that the DataSource is associated with.
   * @param dataSourceGcpResourceInfo dataSourceGcpResourceInfo or {@code null} for none
   */
  public DataSourceReference setDataSourceGcpResourceInfo(DataSourceGcpResourceInfo dataSourceGcpResourceInfo) {
    this.dataSourceGcpResourceInfo = dataSourceGcpResourceInfo;
    return this;
  }

  /**
   * Identifier. The resource name of the DataSourceReference. Format:
   * projects/{project}/locations/{location}/dataSourceReferences/{data_source_reference}
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Identifier. The resource name of the DataSourceReference. Format:
   * projects/{project}/locations/{location}/dataSourceReferences/{data_source_reference}
   * @param name name or {@code null} for none
   */
  public DataSourceReference setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  @Override
  public DataSourceReference set(String fieldName, Object value) {
    return (DataSourceReference) super.set(fieldName, value);
  }

  @Override
  public DataSourceReference clone() {
    return (DataSourceReference) super.clone();
  }

}
