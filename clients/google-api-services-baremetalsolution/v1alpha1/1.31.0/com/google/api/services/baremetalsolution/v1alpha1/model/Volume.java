/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.baremetalsolution.v1alpha1.model;

/**
 * Volume registered in the project.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Bare Metal Solution API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Volume extends com.google.api.client.json.GenericJson {

  /**
   * The size, in GB, that this Volume has expanded as a result of an auto grow policy.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long autoGrownSizeGb;

  /**
   * The current size of this Volume, in GB, including space reserved for snapshots. This size may
   * be different than the requested size if the Volume has been configured with auto grow or auto
   * shrink.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long currentSizeGb;

  /**
   * Output only. The name of this Volume.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * The space remaining in the Volume for new LUNs, in GB, excluding space reserved for snapshots.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long remainingSpaceGb;

  /**
   * The requested size of this Volume, in GB.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long requestedSizeGb;

  /**
   * The percent of space on this Volume reserved for snapshots.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer snapshotReservedSpacePercent;

  /**
   * The amount, in GB, of space available in this Volume's reserved snapshot space.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long snapshotReservedSpaceRemainingGb;

  /**
   * The percent of reserved snapshot space on this Volume that is actually used by snapshot copies.
   * This may be higher than 100% if snapshot copies are occupying more space than has been reserved
   * on the Volume.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer snapshotReservedSpaceUsedPercent;

  /**
   * The state of this Volume.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * The type of this Volume.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * The size, in GB, that this Volume has expanded as a result of an auto grow policy.
   * @return value or {@code null} for none
   */
  public java.lang.Long getAutoGrownSizeGb() {
    return autoGrownSizeGb;
  }

  /**
   * The size, in GB, that this Volume has expanded as a result of an auto grow policy.
   * @param autoGrownSizeGb autoGrownSizeGb or {@code null} for none
   */
  public Volume setAutoGrownSizeGb(java.lang.Long autoGrownSizeGb) {
    this.autoGrownSizeGb = autoGrownSizeGb;
    return this;
  }

  /**
   * The current size of this Volume, in GB, including space reserved for snapshots. This size may
   * be different than the requested size if the Volume has been configured with auto grow or auto
   * shrink.
   * @return value or {@code null} for none
   */
  public java.lang.Long getCurrentSizeGb() {
    return currentSizeGb;
  }

  /**
   * The current size of this Volume, in GB, including space reserved for snapshots. This size may
   * be different than the requested size if the Volume has been configured with auto grow or auto
   * shrink.
   * @param currentSizeGb currentSizeGb or {@code null} for none
   */
  public Volume setCurrentSizeGb(java.lang.Long currentSizeGb) {
    this.currentSizeGb = currentSizeGb;
    return this;
  }

  /**
   * Output only. The name of this Volume.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. The name of this Volume.
   * @param name name or {@code null} for none
   */
  public Volume setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * The space remaining in the Volume for new LUNs, in GB, excluding space reserved for snapshots.
   * @return value or {@code null} for none
   */
  public java.lang.Long getRemainingSpaceGb() {
    return remainingSpaceGb;
  }

  /**
   * The space remaining in the Volume for new LUNs, in GB, excluding space reserved for snapshots.
   * @param remainingSpaceGb remainingSpaceGb or {@code null} for none
   */
  public Volume setRemainingSpaceGb(java.lang.Long remainingSpaceGb) {
    this.remainingSpaceGb = remainingSpaceGb;
    return this;
  }

  /**
   * The requested size of this Volume, in GB.
   * @return value or {@code null} for none
   */
  public java.lang.Long getRequestedSizeGb() {
    return requestedSizeGb;
  }

  /**
   * The requested size of this Volume, in GB.
   * @param requestedSizeGb requestedSizeGb or {@code null} for none
   */
  public Volume setRequestedSizeGb(java.lang.Long requestedSizeGb) {
    this.requestedSizeGb = requestedSizeGb;
    return this;
  }

  /**
   * The percent of space on this Volume reserved for snapshots.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getSnapshotReservedSpacePercent() {
    return snapshotReservedSpacePercent;
  }

  /**
   * The percent of space on this Volume reserved for snapshots.
   * @param snapshotReservedSpacePercent snapshotReservedSpacePercent or {@code null} for none
   */
  public Volume setSnapshotReservedSpacePercent(java.lang.Integer snapshotReservedSpacePercent) {
    this.snapshotReservedSpacePercent = snapshotReservedSpacePercent;
    return this;
  }

  /**
   * The amount, in GB, of space available in this Volume's reserved snapshot space.
   * @return value or {@code null} for none
   */
  public java.lang.Long getSnapshotReservedSpaceRemainingGb() {
    return snapshotReservedSpaceRemainingGb;
  }

  /**
   * The amount, in GB, of space available in this Volume's reserved snapshot space.
   * @param snapshotReservedSpaceRemainingGb snapshotReservedSpaceRemainingGb or {@code null} for none
   */
  public Volume setSnapshotReservedSpaceRemainingGb(java.lang.Long snapshotReservedSpaceRemainingGb) {
    this.snapshotReservedSpaceRemainingGb = snapshotReservedSpaceRemainingGb;
    return this;
  }

  /**
   * The percent of reserved snapshot space on this Volume that is actually used by snapshot copies.
   * This may be higher than 100% if snapshot copies are occupying more space than has been reserved
   * on the Volume.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getSnapshotReservedSpaceUsedPercent() {
    return snapshotReservedSpaceUsedPercent;
  }

  /**
   * The percent of reserved snapshot space on this Volume that is actually used by snapshot copies.
   * This may be higher than 100% if snapshot copies are occupying more space than has been reserved
   * on the Volume.
   * @param snapshotReservedSpaceUsedPercent snapshotReservedSpaceUsedPercent or {@code null} for none
   */
  public Volume setSnapshotReservedSpaceUsedPercent(java.lang.Integer snapshotReservedSpaceUsedPercent) {
    this.snapshotReservedSpaceUsedPercent = snapshotReservedSpaceUsedPercent;
    return this;
  }

  /**
   * The state of this Volume.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * The state of this Volume.
   * @param state state or {@code null} for none
   */
  public Volume setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * The type of this Volume.
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * The type of this Volume.
   * @param type type or {@code null} for none
   */
  public Volume setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  @Override
  public Volume set(String fieldName, Object value) {
    return (Volume) super.set(fieldName, value);
  }

  @Override
  public Volume clone() {
    return (Volume) super.clone();
  }

}
