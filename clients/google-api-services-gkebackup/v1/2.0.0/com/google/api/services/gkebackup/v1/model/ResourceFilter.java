/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.gkebackup.v1.model;

/**
 * ResourceFilter specifies matching criteria to limit the scope of a change to a specific set of
 * kubernetes resources that are selected for restoration from a backup.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Backup for GKE API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ResourceFilter extends com.google.api.client.json.GenericJson {

  /**
   * (Filtering parameter) Any resource subject to transformation must belong to one of the listed
   * "types". If this field is not provided, no type filtering will be performed (all resources of
   * all types matching previous filtering parameters will be candidates for transformation).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GroupKind> groupKinds;

  static {
    // hack to force ProGuard to consider GroupKind used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(GroupKind.class);
  }

  /**
   * This is a [JSONPath] (https://github.com/json-path/JsonPath/blob/master/README.md) expression
   * that matches specific fields of candidate resources and it operates as a filtering parameter
   * (resources that are not matched with this expression will not be candidates for
   * transformation).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String jsonPath;

  /**
   * (Filtering parameter) Any resource subject to transformation must be contained within one of
   * the listed Kubernetes Namespace in the Backup. If this field is not provided, no namespace
   * filtering will be performed (all resources in all Namespaces, including all cluster-scoped
   * resources, will be candidates for transformation). To mix cluster-scoped and namespaced
   * resources in the same rule, use an empty string ("") as one of the target namespaces.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> namespaces;

  /**
   * (Filtering parameter) Any resource subject to transformation must belong to one of the listed
   * "types". If this field is not provided, no type filtering will be performed (all resources of
   * all types matching previous filtering parameters will be candidates for transformation).
   * @return value or {@code null} for none
   */
  public java.util.List<GroupKind> getGroupKinds() {
    return groupKinds;
  }

  /**
   * (Filtering parameter) Any resource subject to transformation must belong to one of the listed
   * "types". If this field is not provided, no type filtering will be performed (all resources of
   * all types matching previous filtering parameters will be candidates for transformation).
   * @param groupKinds groupKinds or {@code null} for none
   */
  public ResourceFilter setGroupKinds(java.util.List<GroupKind> groupKinds) {
    this.groupKinds = groupKinds;
    return this;
  }

  /**
   * This is a [JSONPath] (https://github.com/json-path/JsonPath/blob/master/README.md) expression
   * that matches specific fields of candidate resources and it operates as a filtering parameter
   * (resources that are not matched with this expression will not be candidates for
   * transformation).
   * @return value or {@code null} for none
   */
  public java.lang.String getJsonPath() {
    return jsonPath;
  }

  /**
   * This is a [JSONPath] (https://github.com/json-path/JsonPath/blob/master/README.md) expression
   * that matches specific fields of candidate resources and it operates as a filtering parameter
   * (resources that are not matched with this expression will not be candidates for
   * transformation).
   * @param jsonPath jsonPath or {@code null} for none
   */
  public ResourceFilter setJsonPath(java.lang.String jsonPath) {
    this.jsonPath = jsonPath;
    return this;
  }

  /**
   * (Filtering parameter) Any resource subject to transformation must be contained within one of
   * the listed Kubernetes Namespace in the Backup. If this field is not provided, no namespace
   * filtering will be performed (all resources in all Namespaces, including all cluster-scoped
   * resources, will be candidates for transformation). To mix cluster-scoped and namespaced
   * resources in the same rule, use an empty string ("") as one of the target namespaces.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getNamespaces() {
    return namespaces;
  }

  /**
   * (Filtering parameter) Any resource subject to transformation must be contained within one of
   * the listed Kubernetes Namespace in the Backup. If this field is not provided, no namespace
   * filtering will be performed (all resources in all Namespaces, including all cluster-scoped
   * resources, will be candidates for transformation). To mix cluster-scoped and namespaced
   * resources in the same rule, use an empty string ("") as one of the target namespaces.
   * @param namespaces namespaces or {@code null} for none
   */
  public ResourceFilter setNamespaces(java.util.List<java.lang.String> namespaces) {
    this.namespaces = namespaces;
    return this;
  }

  @Override
  public ResourceFilter set(String fieldName, Object value) {
    return (ResourceFilter) super.set(fieldName, value);
  }

  @Override
  public ResourceFilter clone() {
    return (ResourceFilter) super.clone();
  }

}
