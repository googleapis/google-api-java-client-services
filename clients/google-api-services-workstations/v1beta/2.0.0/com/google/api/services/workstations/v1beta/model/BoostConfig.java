/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.workstations.v1beta.model;

/**
 * A boost configuration is a set of resources that a workstation can use to increase its
 * performance. If you specify a boost configuration, upon startup, workstation users can choose to
 * use a VM provisioned under the boost config by passing the boost config ID in the start request.
 * If the workstation user does not provide a boost config ID in the start request, the system will
 * choose a VM from the pool provisioned under the default config.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Workstations API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class BoostConfig extends com.google.api.client.json.GenericJson {

  /**
   * Optional. A list of the type and count of accelerator cards attached to the boost instance.
   * Defaults to `none`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Accelerator> accelerators;

  static {
    // hack to force ProGuard to consider Accelerator used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(Accelerator.class);
  }

  /**
   * Optional. The size of the boot disk for the VM in gigabytes (GB). The minimum boot disk size is
   * `30` GB. Defaults to `50` GB.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer bootDiskSizeGb;

  /**
   * Optional. Whether to enable nested virtualization on boosted Cloud Workstations VMs running
   * using this boost configuration. Defaults to false. Nested virtualization lets you run virtual
   * machine (VM) instances inside your workstation. Before enabling nested virtualization, consider
   * the following important considerations. Cloud Workstations instances are subject to the [same
   * restrictions as Compute Engine
   * instances](https://cloud.google.com/compute/docs/instances/nested-
   * virtualization/overview#restrictions): * **Organization policy**: projects, folders, or
   * organizations may be restricted from creating nested VMs if the **Disable VM nested
   * virtualization** constraint is enforced in the organization policy. For more information, see
   * the Compute Engine section, [Checking whether nested virtualization is
   * allowed](https://cloud.google.com/compute/docs/instances/nested-virtualization/managing-
   * constraint#checking_whether_nested_virtualization_is_allowed). * **Performance**: nested VMs
   * might experience a 10% or greater decrease in performance for workloads that are CPU-bound and
   * possibly greater than a 10% decrease for workloads that are input/output bound. * **Machine
   * Type**: nested virtualization can only be enabled on boost configurations that specify a
   * machine_type in the N1 or N2 machine series.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean enableNestedVirtualization;

  /**
   * Required. The ID to be used for the boost configuration.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String id;

  /**
   * Optional. The type of machine that boosted VM instances will use—for example, `e2-standard-4`.
   * For more information about machine types that Cloud Workstations supports, see the list of
   * [available machine types](https://cloud.google.com/workstations/docs/available-machine-types).
   * Defaults to `e2-standard-4`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String machineType;

  /**
   * Optional. The number of boost VMs that the system should keep idle so that workstations can be
   * boosted quickly. Defaults to `0`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer poolSize;

  /**
   * Optional. A list of the type and count of accelerator cards attached to the boost instance.
   * Defaults to `none`.
   * @return value or {@code null} for none
   */
  public java.util.List<Accelerator> getAccelerators() {
    return accelerators;
  }

  /**
   * Optional. A list of the type and count of accelerator cards attached to the boost instance.
   * Defaults to `none`.
   * @param accelerators accelerators or {@code null} for none
   */
  public BoostConfig setAccelerators(java.util.List<Accelerator> accelerators) {
    this.accelerators = accelerators;
    return this;
  }

  /**
   * Optional. The size of the boot disk for the VM in gigabytes (GB). The minimum boot disk size is
   * `30` GB. Defaults to `50` GB.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getBootDiskSizeGb() {
    return bootDiskSizeGb;
  }

  /**
   * Optional. The size of the boot disk for the VM in gigabytes (GB). The minimum boot disk size is
   * `30` GB. Defaults to `50` GB.
   * @param bootDiskSizeGb bootDiskSizeGb or {@code null} for none
   */
  public BoostConfig setBootDiskSizeGb(java.lang.Integer bootDiskSizeGb) {
    this.bootDiskSizeGb = bootDiskSizeGb;
    return this;
  }

  /**
   * Optional. Whether to enable nested virtualization on boosted Cloud Workstations VMs running
   * using this boost configuration. Defaults to false. Nested virtualization lets you run virtual
   * machine (VM) instances inside your workstation. Before enabling nested virtualization, consider
   * the following important considerations. Cloud Workstations instances are subject to the [same
   * restrictions as Compute Engine
   * instances](https://cloud.google.com/compute/docs/instances/nested-
   * virtualization/overview#restrictions): * **Organization policy**: projects, folders, or
   * organizations may be restricted from creating nested VMs if the **Disable VM nested
   * virtualization** constraint is enforced in the organization policy. For more information, see
   * the Compute Engine section, [Checking whether nested virtualization is
   * allowed](https://cloud.google.com/compute/docs/instances/nested-virtualization/managing-
   * constraint#checking_whether_nested_virtualization_is_allowed). * **Performance**: nested VMs
   * might experience a 10% or greater decrease in performance for workloads that are CPU-bound and
   * possibly greater than a 10% decrease for workloads that are input/output bound. * **Machine
   * Type**: nested virtualization can only be enabled on boost configurations that specify a
   * machine_type in the N1 or N2 machine series.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getEnableNestedVirtualization() {
    return enableNestedVirtualization;
  }

  /**
   * Optional. Whether to enable nested virtualization on boosted Cloud Workstations VMs running
   * using this boost configuration. Defaults to false. Nested virtualization lets you run virtual
   * machine (VM) instances inside your workstation. Before enabling nested virtualization, consider
   * the following important considerations. Cloud Workstations instances are subject to the [same
   * restrictions as Compute Engine
   * instances](https://cloud.google.com/compute/docs/instances/nested-
   * virtualization/overview#restrictions): * **Organization policy**: projects, folders, or
   * organizations may be restricted from creating nested VMs if the **Disable VM nested
   * virtualization** constraint is enforced in the organization policy. For more information, see
   * the Compute Engine section, [Checking whether nested virtualization is
   * allowed](https://cloud.google.com/compute/docs/instances/nested-virtualization/managing-
   * constraint#checking_whether_nested_virtualization_is_allowed). * **Performance**: nested VMs
   * might experience a 10% or greater decrease in performance for workloads that are CPU-bound and
   * possibly greater than a 10% decrease for workloads that are input/output bound. * **Machine
   * Type**: nested virtualization can only be enabled on boost configurations that specify a
   * machine_type in the N1 or N2 machine series.
   * @param enableNestedVirtualization enableNestedVirtualization or {@code null} for none
   */
  public BoostConfig setEnableNestedVirtualization(java.lang.Boolean enableNestedVirtualization) {
    this.enableNestedVirtualization = enableNestedVirtualization;
    return this;
  }

  /**
   * Required. The ID to be used for the boost configuration.
   * @return value or {@code null} for none
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * Required. The ID to be used for the boost configuration.
   * @param id id or {@code null} for none
   */
  public BoostConfig setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  /**
   * Optional. The type of machine that boosted VM instances will use—for example, `e2-standard-4`.
   * For more information about machine types that Cloud Workstations supports, see the list of
   * [available machine types](https://cloud.google.com/workstations/docs/available-machine-types).
   * Defaults to `e2-standard-4`.
   * @return value or {@code null} for none
   */
  public java.lang.String getMachineType() {
    return machineType;
  }

  /**
   * Optional. The type of machine that boosted VM instances will use—for example, `e2-standard-4`.
   * For more information about machine types that Cloud Workstations supports, see the list of
   * [available machine types](https://cloud.google.com/workstations/docs/available-machine-types).
   * Defaults to `e2-standard-4`.
   * @param machineType machineType or {@code null} for none
   */
  public BoostConfig setMachineType(java.lang.String machineType) {
    this.machineType = machineType;
    return this;
  }

  /**
   * Optional. The number of boost VMs that the system should keep idle so that workstations can be
   * boosted quickly. Defaults to `0`.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getPoolSize() {
    return poolSize;
  }

  /**
   * Optional. The number of boost VMs that the system should keep idle so that workstations can be
   * boosted quickly. Defaults to `0`.
   * @param poolSize poolSize or {@code null} for none
   */
  public BoostConfig setPoolSize(java.lang.Integer poolSize) {
    this.poolSize = poolSize;
    return this;
  }

  @Override
  public BoostConfig set(String fieldName, Object value) {
    return (BoostConfig) super.set(fieldName, value);
  }

  @Override
  public BoostConfig clone() {
    return (BoostConfig) super.clone();
  }

}
