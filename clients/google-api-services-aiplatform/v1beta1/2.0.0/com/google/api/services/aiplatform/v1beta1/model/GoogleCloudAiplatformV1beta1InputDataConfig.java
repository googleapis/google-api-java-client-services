/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.aiplatform.v1beta1.model;

/**
 * Specifies Vertex AI owned input data to be used for training, and possibly evaluating, the Model.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Vertex AI API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudAiplatformV1beta1InputDataConfig extends com.google.api.client.json.GenericJson {

  /**
   * Applicable only to custom training with Datasets that have DataItems and Annotations. Cloud
   * Storage URI that points to a YAML file describing the annotation schema. The schema is defined
   * as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-
   * Specification/blob/main/versions/3.0.2.md#schemaObject). The schema files that can be used here
   * are found in gs://google-cloud-aiplatform/schema/dataset/annotation/ , note that the chosen
   * schema must be consistent with metadata of the Dataset specified by dataset_id. Only
   * Annotations that both match this schema and belong to DataItems not ignored by the split method
   * are used in respectively training, validation or test role, depending on the role of the
   * DataItem they are on. When used in conjunction with annotations_filter, the Annotations used
   * for training are filtered by both annotations_filter and annotation_schema_uri.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String annotationSchemaUri;

  /**
   * Applicable only to Datasets that have DataItems and Annotations. A filter on Annotations of the
   * Dataset. Only Annotations that both match this filter and belong to DataItems not ignored by
   * the split method are used in respectively training, validation or test role, depending on the
   * role of the DataItem they are on (for the auto-assigned that role is decided by Vertex AI). A
   * filter with same syntax as the one used in ListAnnotations may be used, but note here it
   * filters across all Annotations of the Dataset, and not just within a single DataItem.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String annotationsFilter;

  /**
   * Only applicable to custom training with tabular Dataset with BigQuery source. The BigQuery
   * project location where the training data is to be written to. In the given project a new
   * dataset is created with name `dataset___` where timestamp is in YYYY_MM_DDThh_mm_ss_sssZ
   * format. All training input data is written into that dataset. In the dataset three tables are
   * created, `training`, `validation` and `test`. * AIP_DATA_FORMAT = "bigquery". *
   * AIP_TRAINING_DATA_URI = "bigquery_destination.dataset___.training" * AIP_VALIDATION_DATA_URI =
   * "bigquery_destination.dataset___.validation" * AIP_TEST_DATA_URI =
   * "bigquery_destination.dataset___.test"
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1beta1BigQueryDestination bigqueryDestination;

  /**
   * Required. The ID of the Dataset in the same Project and Location which data will be used to
   * train the Model. The Dataset must use schema compatible with Model being trained, and what is
   * compatible should be described in the used TrainingPipeline's training_task_definition. For
   * tabular Datasets, all their data is exported to training, to pick and choose from.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String datasetId;

  /**
   * Split based on the provided filters for each set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1beta1FilterSplit filterSplit;

  /**
   * Split based on fractions defining the size of each set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1beta1FractionSplit fractionSplit;

  /**
   * The Cloud Storage location where the training data is to be written to. In the given directory
   * a new directory is created with name: `dataset---` where timestamp is in YYYY-MM-
   * DDThh:mm:ss.sssZ ISO-8601 format. All training input data is written into that directory. The
   * Vertex AI environment variables representing Cloud Storage data URIs are represented in the
   * Cloud Storage wildcard format to support sharded data. e.g.: "gs://.../training-*.jsonl" *
   * AIP_DATA_FORMAT = "jsonl" for non-tabular data, "csv" for tabular data * AIP_TRAINING_DATA_URI
   * = "gcs_destination/dataset---/training-*.${AIP_DATA_FORMAT}" * AIP_VALIDATION_DATA_URI =
   * "gcs_destination/dataset---/validation-*.${AIP_DATA_FORMAT}" * AIP_TEST_DATA_URI =
   * "gcs_destination/dataset---/test-*.${AIP_DATA_FORMAT}"
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1beta1GcsDestination gcsDestination;

  /**
   * Whether to persist the ML use assignment to data item system labels.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean persistMlUseAssignment;

  /**
   * Supported only for tabular Datasets. Split based on a predefined key.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1beta1PredefinedSplit predefinedSplit;

  /**
   * Only applicable to Datasets that have SavedQueries. The ID of a SavedQuery (annotation set)
   * under the Dataset specified by dataset_id used for filtering Annotations for training. Only
   * Annotations that are associated with this SavedQuery are used in respectively training. When
   * used in conjunction with annotations_filter, the Annotations used for training are filtered by
   * both saved_query_id and annotations_filter. Only one of saved_query_id and
   * annotation_schema_uri should be specified as both of them represent the same thing: problem
   * type.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String savedQueryId;

  /**
   * Supported only for tabular Datasets. Split based on the distribution of the specified column.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1beta1StratifiedSplit stratifiedSplit;

  /**
   * Supported only for tabular Datasets. Split based on the timestamp of the input data pieces.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1beta1TimestampSplit timestampSplit;

  /**
   * Applicable only to custom training with Datasets that have DataItems and Annotations. Cloud
   * Storage URI that points to a YAML file describing the annotation schema. The schema is defined
   * as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-
   * Specification/blob/main/versions/3.0.2.md#schemaObject). The schema files that can be used here
   * are found in gs://google-cloud-aiplatform/schema/dataset/annotation/ , note that the chosen
   * schema must be consistent with metadata of the Dataset specified by dataset_id. Only
   * Annotations that both match this schema and belong to DataItems not ignored by the split method
   * are used in respectively training, validation or test role, depending on the role of the
   * DataItem they are on. When used in conjunction with annotations_filter, the Annotations used
   * for training are filtered by both annotations_filter and annotation_schema_uri.
   * @return value or {@code null} for none
   */
  public java.lang.String getAnnotationSchemaUri() {
    return annotationSchemaUri;
  }

  /**
   * Applicable only to custom training with Datasets that have DataItems and Annotations. Cloud
   * Storage URI that points to a YAML file describing the annotation schema. The schema is defined
   * as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-
   * Specification/blob/main/versions/3.0.2.md#schemaObject). The schema files that can be used here
   * are found in gs://google-cloud-aiplatform/schema/dataset/annotation/ , note that the chosen
   * schema must be consistent with metadata of the Dataset specified by dataset_id. Only
   * Annotations that both match this schema and belong to DataItems not ignored by the split method
   * are used in respectively training, validation or test role, depending on the role of the
   * DataItem they are on. When used in conjunction with annotations_filter, the Annotations used
   * for training are filtered by both annotations_filter and annotation_schema_uri.
   * @param annotationSchemaUri annotationSchemaUri or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1InputDataConfig setAnnotationSchemaUri(java.lang.String annotationSchemaUri) {
    this.annotationSchemaUri = annotationSchemaUri;
    return this;
  }

  /**
   * Applicable only to Datasets that have DataItems and Annotations. A filter on Annotations of the
   * Dataset. Only Annotations that both match this filter and belong to DataItems not ignored by
   * the split method are used in respectively training, validation or test role, depending on the
   * role of the DataItem they are on (for the auto-assigned that role is decided by Vertex AI). A
   * filter with same syntax as the one used in ListAnnotations may be used, but note here it
   * filters across all Annotations of the Dataset, and not just within a single DataItem.
   * @return value or {@code null} for none
   */
  public java.lang.String getAnnotationsFilter() {
    return annotationsFilter;
  }

  /**
   * Applicable only to Datasets that have DataItems and Annotations. A filter on Annotations of the
   * Dataset. Only Annotations that both match this filter and belong to DataItems not ignored by
   * the split method are used in respectively training, validation or test role, depending on the
   * role of the DataItem they are on (for the auto-assigned that role is decided by Vertex AI). A
   * filter with same syntax as the one used in ListAnnotations may be used, but note here it
   * filters across all Annotations of the Dataset, and not just within a single DataItem.
   * @param annotationsFilter annotationsFilter or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1InputDataConfig setAnnotationsFilter(java.lang.String annotationsFilter) {
    this.annotationsFilter = annotationsFilter;
    return this;
  }

  /**
   * Only applicable to custom training with tabular Dataset with BigQuery source. The BigQuery
   * project location where the training data is to be written to. In the given project a new
   * dataset is created with name `dataset___` where timestamp is in YYYY_MM_DDThh_mm_ss_sssZ
   * format. All training input data is written into that dataset. In the dataset three tables are
   * created, `training`, `validation` and `test`. * AIP_DATA_FORMAT = "bigquery". *
   * AIP_TRAINING_DATA_URI = "bigquery_destination.dataset___.training" * AIP_VALIDATION_DATA_URI =
   * "bigquery_destination.dataset___.validation" * AIP_TEST_DATA_URI =
   * "bigquery_destination.dataset___.test"
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1BigQueryDestination getBigqueryDestination() {
    return bigqueryDestination;
  }

  /**
   * Only applicable to custom training with tabular Dataset with BigQuery source. The BigQuery
   * project location where the training data is to be written to. In the given project a new
   * dataset is created with name `dataset___` where timestamp is in YYYY_MM_DDThh_mm_ss_sssZ
   * format. All training input data is written into that dataset. In the dataset three tables are
   * created, `training`, `validation` and `test`. * AIP_DATA_FORMAT = "bigquery". *
   * AIP_TRAINING_DATA_URI = "bigquery_destination.dataset___.training" * AIP_VALIDATION_DATA_URI =
   * "bigquery_destination.dataset___.validation" * AIP_TEST_DATA_URI =
   * "bigquery_destination.dataset___.test"
   * @param bigqueryDestination bigqueryDestination or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1InputDataConfig setBigqueryDestination(GoogleCloudAiplatformV1beta1BigQueryDestination bigqueryDestination) {
    this.bigqueryDestination = bigqueryDestination;
    return this;
  }

  /**
   * Required. The ID of the Dataset in the same Project and Location which data will be used to
   * train the Model. The Dataset must use schema compatible with Model being trained, and what is
   * compatible should be described in the used TrainingPipeline's training_task_definition. For
   * tabular Datasets, all their data is exported to training, to pick and choose from.
   * @return value or {@code null} for none
   */
  public java.lang.String getDatasetId() {
    return datasetId;
  }

  /**
   * Required. The ID of the Dataset in the same Project and Location which data will be used to
   * train the Model. The Dataset must use schema compatible with Model being trained, and what is
   * compatible should be described in the used TrainingPipeline's training_task_definition. For
   * tabular Datasets, all their data is exported to training, to pick and choose from.
   * @param datasetId datasetId or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1InputDataConfig setDatasetId(java.lang.String datasetId) {
    this.datasetId = datasetId;
    return this;
  }

  /**
   * Split based on the provided filters for each set.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1FilterSplit getFilterSplit() {
    return filterSplit;
  }

  /**
   * Split based on the provided filters for each set.
   * @param filterSplit filterSplit or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1InputDataConfig setFilterSplit(GoogleCloudAiplatformV1beta1FilterSplit filterSplit) {
    this.filterSplit = filterSplit;
    return this;
  }

  /**
   * Split based on fractions defining the size of each set.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1FractionSplit getFractionSplit() {
    return fractionSplit;
  }

  /**
   * Split based on fractions defining the size of each set.
   * @param fractionSplit fractionSplit or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1InputDataConfig setFractionSplit(GoogleCloudAiplatformV1beta1FractionSplit fractionSplit) {
    this.fractionSplit = fractionSplit;
    return this;
  }

  /**
   * The Cloud Storage location where the training data is to be written to. In the given directory
   * a new directory is created with name: `dataset---` where timestamp is in YYYY-MM-
   * DDThh:mm:ss.sssZ ISO-8601 format. All training input data is written into that directory. The
   * Vertex AI environment variables representing Cloud Storage data URIs are represented in the
   * Cloud Storage wildcard format to support sharded data. e.g.: "gs://.../training-*.jsonl" *
   * AIP_DATA_FORMAT = "jsonl" for non-tabular data, "csv" for tabular data * AIP_TRAINING_DATA_URI
   * = "gcs_destination/dataset---/training-*.${AIP_DATA_FORMAT}" * AIP_VALIDATION_DATA_URI =
   * "gcs_destination/dataset---/validation-*.${AIP_DATA_FORMAT}" * AIP_TEST_DATA_URI =
   * "gcs_destination/dataset---/test-*.${AIP_DATA_FORMAT}"
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1GcsDestination getGcsDestination() {
    return gcsDestination;
  }

  /**
   * The Cloud Storage location where the training data is to be written to. In the given directory
   * a new directory is created with name: `dataset---` where timestamp is in YYYY-MM-
   * DDThh:mm:ss.sssZ ISO-8601 format. All training input data is written into that directory. The
   * Vertex AI environment variables representing Cloud Storage data URIs are represented in the
   * Cloud Storage wildcard format to support sharded data. e.g.: "gs://.../training-*.jsonl" *
   * AIP_DATA_FORMAT = "jsonl" for non-tabular data, "csv" for tabular data * AIP_TRAINING_DATA_URI
   * = "gcs_destination/dataset---/training-*.${AIP_DATA_FORMAT}" * AIP_VALIDATION_DATA_URI =
   * "gcs_destination/dataset---/validation-*.${AIP_DATA_FORMAT}" * AIP_TEST_DATA_URI =
   * "gcs_destination/dataset---/test-*.${AIP_DATA_FORMAT}"
   * @param gcsDestination gcsDestination or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1InputDataConfig setGcsDestination(GoogleCloudAiplatformV1beta1GcsDestination gcsDestination) {
    this.gcsDestination = gcsDestination;
    return this;
  }

  /**
   * Whether to persist the ML use assignment to data item system labels.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getPersistMlUseAssignment() {
    return persistMlUseAssignment;
  }

  /**
   * Whether to persist the ML use assignment to data item system labels.
   * @param persistMlUseAssignment persistMlUseAssignment or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1InputDataConfig setPersistMlUseAssignment(java.lang.Boolean persistMlUseAssignment) {
    this.persistMlUseAssignment = persistMlUseAssignment;
    return this;
  }

  /**
   * Supported only for tabular Datasets. Split based on a predefined key.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1PredefinedSplit getPredefinedSplit() {
    return predefinedSplit;
  }

  /**
   * Supported only for tabular Datasets. Split based on a predefined key.
   * @param predefinedSplit predefinedSplit or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1InputDataConfig setPredefinedSplit(GoogleCloudAiplatformV1beta1PredefinedSplit predefinedSplit) {
    this.predefinedSplit = predefinedSplit;
    return this;
  }

  /**
   * Only applicable to Datasets that have SavedQueries. The ID of a SavedQuery (annotation set)
   * under the Dataset specified by dataset_id used for filtering Annotations for training. Only
   * Annotations that are associated with this SavedQuery are used in respectively training. When
   * used in conjunction with annotations_filter, the Annotations used for training are filtered by
   * both saved_query_id and annotations_filter. Only one of saved_query_id and
   * annotation_schema_uri should be specified as both of them represent the same thing: problem
   * type.
   * @return value or {@code null} for none
   */
  public java.lang.String getSavedQueryId() {
    return savedQueryId;
  }

  /**
   * Only applicable to Datasets that have SavedQueries. The ID of a SavedQuery (annotation set)
   * under the Dataset specified by dataset_id used for filtering Annotations for training. Only
   * Annotations that are associated with this SavedQuery are used in respectively training. When
   * used in conjunction with annotations_filter, the Annotations used for training are filtered by
   * both saved_query_id and annotations_filter. Only one of saved_query_id and
   * annotation_schema_uri should be specified as both of them represent the same thing: problem
   * type.
   * @param savedQueryId savedQueryId or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1InputDataConfig setSavedQueryId(java.lang.String savedQueryId) {
    this.savedQueryId = savedQueryId;
    return this;
  }

  /**
   * Supported only for tabular Datasets. Split based on the distribution of the specified column.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1StratifiedSplit getStratifiedSplit() {
    return stratifiedSplit;
  }

  /**
   * Supported only for tabular Datasets. Split based on the distribution of the specified column.
   * @param stratifiedSplit stratifiedSplit or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1InputDataConfig setStratifiedSplit(GoogleCloudAiplatformV1beta1StratifiedSplit stratifiedSplit) {
    this.stratifiedSplit = stratifiedSplit;
    return this;
  }

  /**
   * Supported only for tabular Datasets. Split based on the timestamp of the input data pieces.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1TimestampSplit getTimestampSplit() {
    return timestampSplit;
  }

  /**
   * Supported only for tabular Datasets. Split based on the timestamp of the input data pieces.
   * @param timestampSplit timestampSplit or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1InputDataConfig setTimestampSplit(GoogleCloudAiplatformV1beta1TimestampSplit timestampSplit) {
    this.timestampSplit = timestampSplit;
    return this;
  }

  @Override
  public GoogleCloudAiplatformV1beta1InputDataConfig set(String fieldName, Object value) {
    return (GoogleCloudAiplatformV1beta1InputDataConfig) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudAiplatformV1beta1InputDataConfig clone() {
    return (GoogleCloudAiplatformV1beta1InputDataConfig) super.clone();
  }

}
