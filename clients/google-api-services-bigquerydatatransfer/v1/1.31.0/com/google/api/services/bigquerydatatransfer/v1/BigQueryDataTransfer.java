/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.bigquerydatatransfer.v1;

/**
 * Service definition for BigQueryDataTransfer (v1).
 *
 * <p>
 * Schedule queries or transfer external data from SaaS applications to Google BigQuery on a regular basis.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/bigquery/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link BigQueryDataTransferRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class BigQueryDataTransfer extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1)),
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "1.31.0 of the BigQuery Data Transfer API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://bigquerydatatransfer.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://bigquerydatatransfer.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public BigQueryDataTransfer(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  BigQueryDataTransfer(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code BigQueryDataTransfer bigquerydatatransfer = new BigQueryDataTransfer(...);}
   *   {@code BigQueryDataTransfer.Projects.List request = bigquerydatatransfer.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the DataSources collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code BigQueryDataTransfer bigquerydatatransfer = new BigQueryDataTransfer(...);}
     *   {@code BigQueryDataTransfer.DataSources.List request = bigquerydatatransfer.dataSources().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public DataSources dataSources() {
      return new DataSources();
    }

    /**
     * The "dataSources" collection of methods.
     */
    public class DataSources {

      /**
       * Returns true if valid credentials exist for the given data source and requesting user. Some data
       * sources doesn't support service account, so we need to talk to them on behalf of the end user.
       * This API just checks whether we have OAuth token for the particular user, which is a pre-
       * requisite before user can create a transfer config.
       *
       * Create a request for the method "dataSources.checkValidCreds".
       *
       * This request holds the parameters needed by the bigquerydatatransfer server.  After setting any
       * optional parameters, call the {@link CheckValidCreds#execute()} method to invoke the remote
       * operation.
       *
       * @param name Required. The data source in the form: `projects/{project_id}/dataSources/{data_source_id}` or
       *        `projects/{project_id}/locations/{location_id}/dataSources/{data_source_id}`.
       * @param content the {@link com.google.api.services.bigquerydatatransfer.v1.model.CheckValidCredsRequest}
       * @return the request
       */
      public CheckValidCreds checkValidCreds(java.lang.String name, com.google.api.services.bigquerydatatransfer.v1.model.CheckValidCredsRequest content) throws java.io.IOException {
        CheckValidCreds result = new CheckValidCreds(name, content);
        initialize(result);
        return result;
      }

      public class CheckValidCreds extends BigQueryDataTransferRequest<com.google.api.services.bigquerydatatransfer.v1.model.CheckValidCredsResponse> {

        private static final String REST_PATH = "v1/{+name}:checkValidCreds";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/dataSources/[^/]+$");

        /**
         * Returns true if valid credentials exist for the given data source and requesting user. Some
         * data sources doesn't support service account, so we need to talk to them on behalf of the end
         * user. This API just checks whether we have OAuth token for the particular user, which is a pre-
         * requisite before user can create a transfer config.
         *
         * Create a request for the method "dataSources.checkValidCreds".
         *
         * This request holds the parameters needed by the the bigquerydatatransfer server.  After setting
         * any optional parameters, call the {@link CheckValidCreds#execute()} method to invoke the remote
         * operation. <p> {@link CheckValidCreds#initialize(com.google.api.client.googleapis.services.Abst
         * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
         * the constructor. </p>
         *
         * @param name Required. The data source in the form: `projects/{project_id}/dataSources/{data_source_id}` or
       *        `projects/{project_id}/locations/{location_id}/dataSources/{data_source_id}`.
         * @param content the {@link com.google.api.services.bigquerydatatransfer.v1.model.CheckValidCredsRequest}
         * @since 1.13
         */
        protected CheckValidCreds(java.lang.String name, com.google.api.services.bigquerydatatransfer.v1.model.CheckValidCredsRequest content) {
          super(BigQueryDataTransfer.this, "POST", REST_PATH, content, com.google.api.services.bigquerydatatransfer.v1.model.CheckValidCredsResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/dataSources/[^/]+$");
          }
        }

        @Override
        public CheckValidCreds set$Xgafv(java.lang.String $Xgafv) {
          return (CheckValidCreds) super.set$Xgafv($Xgafv);
        }

        @Override
        public CheckValidCreds setAccessToken(java.lang.String accessToken) {
          return (CheckValidCreds) super.setAccessToken(accessToken);
        }

        @Override
        public CheckValidCreds setAlt(java.lang.String alt) {
          return (CheckValidCreds) super.setAlt(alt);
        }

        @Override
        public CheckValidCreds setCallback(java.lang.String callback) {
          return (CheckValidCreds) super.setCallback(callback);
        }

        @Override
        public CheckValidCreds setFields(java.lang.String fields) {
          return (CheckValidCreds) super.setFields(fields);
        }

        @Override
        public CheckValidCreds setKey(java.lang.String key) {
          return (CheckValidCreds) super.setKey(key);
        }

        @Override
        public CheckValidCreds setOauthToken(java.lang.String oauthToken) {
          return (CheckValidCreds) super.setOauthToken(oauthToken);
        }

        @Override
        public CheckValidCreds setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (CheckValidCreds) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public CheckValidCreds setQuotaUser(java.lang.String quotaUser) {
          return (CheckValidCreds) super.setQuotaUser(quotaUser);
        }

        @Override
        public CheckValidCreds setUploadType(java.lang.String uploadType) {
          return (CheckValidCreds) super.setUploadType(uploadType);
        }

        @Override
        public CheckValidCreds setUploadProtocol(java.lang.String uploadProtocol) {
          return (CheckValidCreds) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The data source in the form:
         * `projects/{project_id}/dataSources/{data_source_id}` or
         * `projects/{project_id}/locations/{location_id}/dataSources/{data_source_id}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The data source in the form: `projects/{project_id}/dataSources/{data_source_id}` or
       `projects/{project_id}/locations/{location_id}/dataSources/{data_source_id}`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The data source in the form:
         * `projects/{project_id}/dataSources/{data_source_id}` or
         * `projects/{project_id}/locations/{location_id}/dataSources/{data_source_id}`.
         */
        public CheckValidCreds setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/dataSources/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public CheckValidCreds set(String parameterName, Object value) {
          return (CheckValidCreds) super.set(parameterName, value);
        }
      }
      /**
       * Retrieves a supported data source and returns its settings, which can be used for UI rendering.
       *
       * Create a request for the method "dataSources.get".
       *
       * This request holds the parameters needed by the bigquerydatatransfer server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The field will contain name of the resource requested, for example:
       *        `projects/{project_id}/dataSources/{data_source_id}` or
       *        `projects/{project_id}/locations/{location_id}/dataSources/{data_source_id}`
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends BigQueryDataTransferRequest<com.google.api.services.bigquerydatatransfer.v1.model.DataSource> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/dataSources/[^/]+$");

        /**
         * Retrieves a supported data source and returns its settings, which can be used for UI rendering.
         *
         * Create a request for the method "dataSources.get".
         *
         * This request holds the parameters needed by the the bigquerydatatransfer server.  After setting
         * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         * <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The field will contain name of the resource requested, for example:
       *        `projects/{project_id}/dataSources/{data_source_id}` or
       *        `projects/{project_id}/locations/{location_id}/dataSources/{data_source_id}`
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(BigQueryDataTransfer.this, "GET", REST_PATH, null, com.google.api.services.bigquerydatatransfer.v1.model.DataSource.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/dataSources/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The field will contain name of the resource requested, for example:
         * `projects/{project_id}/dataSources/{data_source_id}` or
         * `projects/{project_id}/locations/{location_id}/dataSources/{data_source_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The field will contain name of the resource requested, for example:
       `projects/{project_id}/dataSources/{data_source_id}` or
       `projects/{project_id}/locations/{location_id}/dataSources/{data_source_id}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The field will contain name of the resource requested, for example:
         * `projects/{project_id}/dataSources/{data_source_id}` or
         * `projects/{project_id}/locations/{location_id}/dataSources/{data_source_id}`
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/dataSources/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists supported data sources and returns their settings, which can be used for UI rendering.
       *
       * Create a request for the method "dataSources.list".
       *
       * This request holds the parameters needed by the bigquerydatatransfer server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The BigQuery project id for which data sources should be returned. Must be in the form:
       *        `projects/{project_id}` or `projects/{project_id}/locations/{location_id}
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends BigQueryDataTransferRequest<com.google.api.services.bigquerydatatransfer.v1.model.ListDataSourcesResponse> {

        private static final String REST_PATH = "v1/{+parent}/dataSources";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Lists supported data sources and returns their settings, which can be used for UI rendering.
         *
         * Create a request for the method "dataSources.list".
         *
         * This request holds the parameters needed by the the bigquerydatatransfer server.  After setting
         * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         * <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The BigQuery project id for which data sources should be returned. Must be in the form:
       *        `projects/{project_id}` or `projects/{project_id}/locations/{location_id}
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(BigQueryDataTransfer.this, "GET", REST_PATH, null, com.google.api.services.bigquerydatatransfer.v1.model.ListDataSourcesResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The BigQuery project id for which data sources should be returned. Must be in
         * the form: `projects/{project_id}` or `projects/{project_id}/locations/{location_id}
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The BigQuery project id for which data sources should be returned. Must be in the form:
       `projects/{project_id}` or `projects/{project_id}/locations/{location_id}
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The BigQuery project id for which data sources should be returned. Must be in
         * the form: `projects/{project_id}` or `projects/{project_id}/locations/{location_id}
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** Page size. The default page size is the maximum value of 1000 results. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Page size. The default page size is the maximum value of 1000 results.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** Page size. The default page size is the maximum value of 1000 results. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Pagination token, which can be used to request a specific page of
         * `ListDataSourcesRequest` list results. For multiple-page results,
         * `ListDataSourcesResponse` outputs a `next_page` token, which can be used as the
         * `page_token` value to request the next page of list results.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Pagination token, which can be used to request a specific page of `ListDataSourcesRequest` list
       results. For multiple-page results, `ListDataSourcesResponse` outputs a `next_page` token, which
       can be used as the `page_token` value to request the next page of list results.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Pagination token, which can be used to request a specific page of
         * `ListDataSourcesRequest` list results. For multiple-page results,
         * `ListDataSourcesResponse` outputs a `next_page` token, which can be used as the
         * `page_token` value to request the next page of list results.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Locations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code BigQueryDataTransfer bigquerydatatransfer = new BigQueryDataTransfer(...);}
     *   {@code BigQueryDataTransfer.Locations.List request = bigquerydatatransfer.locations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Locations locations() {
      return new Locations();
    }

    /**
     * The "locations" collection of methods.
     */
    public class Locations {

      /**
       * Gets information about a location.
       *
       * Create a request for the method "locations.get".
       *
       * This request holds the parameters needed by the bigquerydatatransfer server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Resource name for the location.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends BigQueryDataTransferRequest<com.google.api.services.bigquerydatatransfer.v1.model.Location> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

        /**
         * Gets information about a location.
         *
         * Create a request for the method "locations.get".
         *
         * This request holds the parameters needed by the the bigquerydatatransfer server.  After setting
         * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         * <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Resource name for the location.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(BigQueryDataTransfer.this, "GET", REST_PATH, null, com.google.api.services.bigquerydatatransfer.v1.model.Location.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Resource name for the location. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Resource name for the location.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Resource name for the location. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists information about the supported locations for this service.
       *
       * Create a request for the method "locations.list".
       *
       * This request holds the parameters needed by the bigquerydatatransfer server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param name The resource that owns the locations collection, if applicable.
       * @return the request
       */
      public List list(java.lang.String name) throws java.io.IOException {
        List result = new List(name);
        initialize(result);
        return result;
      }

      public class List extends BigQueryDataTransferRequest<com.google.api.services.bigquerydatatransfer.v1.model.ListLocationsResponse> {

        private static final String REST_PATH = "v1/{+name}/locations";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Lists information about the supported locations for this service.
         *
         * Create a request for the method "locations.list".
         *
         * This request holds the parameters needed by the the bigquerydatatransfer server.  After setting
         * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         * <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The resource that owns the locations collection, if applicable.
         * @since 1.13
         */
        protected List(java.lang.String name) {
          super(BigQueryDataTransfer.this, "GET", REST_PATH, null, com.google.api.services.bigquerydatatransfer.v1.model.ListLocationsResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** The resource that owns the locations collection, if applicable. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The resource that owns the locations collection, if applicable.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The resource that owns the locations collection, if applicable. */
        public List setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /** The standard list filter. */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** The standard list filter.
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /** The standard list filter. */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /** The standard list page size. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The standard list page size.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The standard list page size. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** The standard list page token. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** The standard list page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** The standard list page token. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the DataSources collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code BigQueryDataTransfer bigquerydatatransfer = new BigQueryDataTransfer(...);}
       *   {@code BigQueryDataTransfer.DataSources.List request = bigquerydatatransfer.dataSources().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public DataSources dataSources() {
        return new DataSources();
      }

      /**
       * The "dataSources" collection of methods.
       */
      public class DataSources {

        /**
         * Returns true if valid credentials exist for the given data source and requesting user. Some data
         * sources doesn't support service account, so we need to talk to them on behalf of the end user.
         * This API just checks whether we have OAuth token for the particular user, which is a pre-
         * requisite before user can create a transfer config.
         *
         * Create a request for the method "dataSources.checkValidCreds".
         *
         * This request holds the parameters needed by the bigquerydatatransfer server.  After setting any
         * optional parameters, call the {@link CheckValidCreds#execute()} method to invoke the remote
         * operation.
         *
         * @param name Required. The data source in the form: `projects/{project_id}/dataSources/{data_source_id}` or
         *        `projects/{project_id}/locations/{location_id}/dataSources/{data_source_id}`.
         * @param content the {@link com.google.api.services.bigquerydatatransfer.v1.model.CheckValidCredsRequest}
         * @return the request
         */
        public CheckValidCreds checkValidCreds(java.lang.String name, com.google.api.services.bigquerydatatransfer.v1.model.CheckValidCredsRequest content) throws java.io.IOException {
          CheckValidCreds result = new CheckValidCreds(name, content);
          initialize(result);
          return result;
        }

        public class CheckValidCreds extends BigQueryDataTransferRequest<com.google.api.services.bigquerydatatransfer.v1.model.CheckValidCredsResponse> {

          private static final String REST_PATH = "v1/{+name}:checkValidCreds";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataSources/[^/]+$");

          /**
           * Returns true if valid credentials exist for the given data source and requesting user. Some
           * data sources doesn't support service account, so we need to talk to them on behalf of the end
           * user. This API just checks whether we have OAuth token for the particular user, which is a pre-
           * requisite before user can create a transfer config.
           *
           * Create a request for the method "dataSources.checkValidCreds".
           *
           * This request holds the parameters needed by the the bigquerydatatransfer server.  After setting
           * any optional parameters, call the {@link CheckValidCreds#execute()} method to invoke the remote
           * operation. <p> {@link CheckValidCreds#initialize(com.google.api.client.googleapis.services.Abst
           * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
           * the constructor. </p>
           *
           * @param name Required. The data source in the form: `projects/{project_id}/dataSources/{data_source_id}` or
         *        `projects/{project_id}/locations/{location_id}/dataSources/{data_source_id}`.
           * @param content the {@link com.google.api.services.bigquerydatatransfer.v1.model.CheckValidCredsRequest}
           * @since 1.13
           */
          protected CheckValidCreds(java.lang.String name, com.google.api.services.bigquerydatatransfer.v1.model.CheckValidCredsRequest content) {
            super(BigQueryDataTransfer.this, "POST", REST_PATH, content, com.google.api.services.bigquerydatatransfer.v1.model.CheckValidCredsResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/dataSources/[^/]+$");
            }
          }

          @Override
          public CheckValidCreds set$Xgafv(java.lang.String $Xgafv) {
            return (CheckValidCreds) super.set$Xgafv($Xgafv);
          }

          @Override
          public CheckValidCreds setAccessToken(java.lang.String accessToken) {
            return (CheckValidCreds) super.setAccessToken(accessToken);
          }

          @Override
          public CheckValidCreds setAlt(java.lang.String alt) {
            return (CheckValidCreds) super.setAlt(alt);
          }

          @Override
          public CheckValidCreds setCallback(java.lang.String callback) {
            return (CheckValidCreds) super.setCallback(callback);
          }

          @Override
          public CheckValidCreds setFields(java.lang.String fields) {
            return (CheckValidCreds) super.setFields(fields);
          }

          @Override
          public CheckValidCreds setKey(java.lang.String key) {
            return (CheckValidCreds) super.setKey(key);
          }

          @Override
          public CheckValidCreds setOauthToken(java.lang.String oauthToken) {
            return (CheckValidCreds) super.setOauthToken(oauthToken);
          }

          @Override
          public CheckValidCreds setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (CheckValidCreds) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public CheckValidCreds setQuotaUser(java.lang.String quotaUser) {
            return (CheckValidCreds) super.setQuotaUser(quotaUser);
          }

          @Override
          public CheckValidCreds setUploadType(java.lang.String uploadType) {
            return (CheckValidCreds) super.setUploadType(uploadType);
          }

          @Override
          public CheckValidCreds setUploadProtocol(java.lang.String uploadProtocol) {
            return (CheckValidCreds) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The data source in the form:
           * `projects/{project_id}/dataSources/{data_source_id}` or
           * `projects/{project_id}/locations/{location_id}/dataSources/{data_source_id}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The data source in the form: `projects/{project_id}/dataSources/{data_source_id}` or
         `projects/{project_id}/locations/{location_id}/dataSources/{data_source_id}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The data source in the form:
           * `projects/{project_id}/dataSources/{data_source_id}` or
           * `projects/{project_id}/locations/{location_id}/dataSources/{data_source_id}`.
           */
          public CheckValidCreds setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/dataSources/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public CheckValidCreds set(String parameterName, Object value) {
            return (CheckValidCreds) super.set(parameterName, value);
          }
        }
        /**
         * Retrieves a supported data source and returns its settings, which can be used for UI rendering.
         *
         * Create a request for the method "dataSources.get".
         *
         * This request holds the parameters needed by the bigquerydatatransfer server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The field will contain name of the resource requested, for example:
         *        `projects/{project_id}/dataSources/{data_source_id}` or
         *        `projects/{project_id}/locations/{location_id}/dataSources/{data_source_id}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends BigQueryDataTransferRequest<com.google.api.services.bigquerydatatransfer.v1.model.DataSource> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataSources/[^/]+$");

          /**
           * Retrieves a supported data source and returns its settings, which can be used for UI rendering.
           *
           * Create a request for the method "dataSources.get".
           *
           * This request holds the parameters needed by the the bigquerydatatransfer server.  After setting
           * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           * <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The field will contain name of the resource requested, for example:
         *        `projects/{project_id}/dataSources/{data_source_id}` or
         *        `projects/{project_id}/locations/{location_id}/dataSources/{data_source_id}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(BigQueryDataTransfer.this, "GET", REST_PATH, null, com.google.api.services.bigquerydatatransfer.v1.model.DataSource.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/dataSources/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The field will contain name of the resource requested, for example:
           * `projects/{project_id}/dataSources/{data_source_id}` or
           * `projects/{project_id}/locations/{location_id}/dataSources/{data_source_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The field will contain name of the resource requested, for example:
         `projects/{project_id}/dataSources/{data_source_id}` or
         `projects/{project_id}/locations/{location_id}/dataSources/{data_source_id}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The field will contain name of the resource requested, for example:
           * `projects/{project_id}/dataSources/{data_source_id}` or
           * `projects/{project_id}/locations/{location_id}/dataSources/{data_source_id}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/dataSources/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists supported data sources and returns their settings, which can be used for UI rendering.
         *
         * Create a request for the method "dataSources.list".
         *
         * This request holds the parameters needed by the bigquerydatatransfer server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The BigQuery project id for which data sources should be returned. Must be in the form:
         *        `projects/{project_id}` or `projects/{project_id}/locations/{location_id}
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends BigQueryDataTransferRequest<com.google.api.services.bigquerydatatransfer.v1.model.ListDataSourcesResponse> {

          private static final String REST_PATH = "v1/{+parent}/dataSources";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists supported data sources and returns their settings, which can be used for UI rendering.
           *
           * Create a request for the method "dataSources.list".
           *
           * This request holds the parameters needed by the the bigquerydatatransfer server.  After setting
           * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           * <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The BigQuery project id for which data sources should be returned. Must be in the form:
         *        `projects/{project_id}` or `projects/{project_id}/locations/{location_id}
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(BigQueryDataTransfer.this, "GET", REST_PATH, null, com.google.api.services.bigquerydatatransfer.v1.model.ListDataSourcesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The BigQuery project id for which data sources should be returned. Must be in
           * the form: `projects/{project_id}` or `projects/{project_id}/locations/{location_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The BigQuery project id for which data sources should be returned. Must be in the form:
         `projects/{project_id}` or `projects/{project_id}/locations/{location_id}
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The BigQuery project id for which data sources should be returned. Must be in
           * the form: `projects/{project_id}` or `projects/{project_id}/locations/{location_id}
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Page size. The default page size is the maximum value of 1000 results. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Page size. The default page size is the maximum value of 1000 results.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** Page size. The default page size is the maximum value of 1000 results. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Pagination token, which can be used to request a specific page of
           * `ListDataSourcesRequest` list results. For multiple-page results,
           * `ListDataSourcesResponse` outputs a `next_page` token, which can be used as the
           * `page_token` value to request the next page of list results.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Pagination token, which can be used to request a specific page of `ListDataSourcesRequest` list
         results. For multiple-page results, `ListDataSourcesResponse` outputs a `next_page` token, which
         can be used as the `page_token` value to request the next page of list results.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Pagination token, which can be used to request a specific page of
           * `ListDataSourcesRequest` list results. For multiple-page results,
           * `ListDataSourcesResponse` outputs a `next_page` token, which can be used as the
           * `page_token` value to request the next page of list results.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the TransferConfigs collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code BigQueryDataTransfer bigquerydatatransfer = new BigQueryDataTransfer(...);}
       *   {@code BigQueryDataTransfer.TransferConfigs.List request = bigquerydatatransfer.transferConfigs().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public TransferConfigs transferConfigs() {
        return new TransferConfigs();
      }

      /**
       * The "transferConfigs" collection of methods.
       */
      public class TransferConfigs {

        /**
         * Creates a new data transfer configuration.
         *
         * Create a request for the method "transferConfigs.create".
         *
         * This request holds the parameters needed by the bigquerydatatransfer server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The BigQuery project id where the transfer configuration should be created. Must be in the
         *        format projects/{project_id}/locations/{location_id} or projects/{project_id}. If
         *        specified location and location of the destination bigquery dataset do not match - the
         *        request will fail.
         * @param content the {@link com.google.api.services.bigquerydatatransfer.v1.model.TransferConfig}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.bigquerydatatransfer.v1.model.TransferConfig content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends BigQueryDataTransferRequest<com.google.api.services.bigquerydatatransfer.v1.model.TransferConfig> {

          private static final String REST_PATH = "v1/{+parent}/transferConfigs";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a new data transfer configuration.
           *
           * Create a request for the method "transferConfigs.create".
           *
           * This request holds the parameters needed by the the bigquerydatatransfer server.  After setting
           * any optional parameters, call the {@link Create#execute()} method to invoke the remote
           * operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The BigQuery project id where the transfer configuration should be created. Must be in the
         *        format projects/{project_id}/locations/{location_id} or projects/{project_id}. If
         *        specified location and location of the destination bigquery dataset do not match - the
         *        request will fail.
           * @param content the {@link com.google.api.services.bigquerydatatransfer.v1.model.TransferConfig}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.bigquerydatatransfer.v1.model.TransferConfig content) {
            super(BigQueryDataTransfer.this, "POST", REST_PATH, content, com.google.api.services.bigquerydatatransfer.v1.model.TransferConfig.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The BigQuery project id where the transfer configuration should be created.
           * Must be in the format projects/{project_id}/locations/{location_id} or
           * projects/{project_id}. If specified location and location of the destination bigquery
           * dataset do not match - the request will fail.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The BigQuery project id where the transfer configuration should be created. Must be in
         the format projects/{project_id}/locations/{location_id} or projects/{project_id}. If specified
         location and location of the destination bigquery dataset do not match - the request will fail.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The BigQuery project id where the transfer configuration should be created.
           * Must be in the format projects/{project_id}/locations/{location_id} or
           * projects/{project_id}. If specified location and location of the destination bigquery
           * dataset do not match - the request will fail.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional OAuth2 authorization code to use with this transfer configuration. This is
           * required if new credentials are needed, as indicated by `CheckValidCreds`. In order to
           * obtain authorization_code, please make a request to
           * https://www.gstatic.com/bigquerydatatransfer/oauthz/auth?client_id==_uri= * client_id
           * should be OAuth client_id of BigQuery DTS API for the given data source returned by
           * ListDataSources method. * data_source_scopes are the scopes returned by ListDataSources
           * method. * redirect_uri is an optional parameter. If not specified, then authorization
           * code is posted to the opener of authorization flow window. Otherwise it will be sent to
           * the redirect uri. A special value of urn:ietf:wg:oauth:2.0:oob means that authorization
           * code should be returned in the title bar of the browser, with the page text prompting
           * the user to copy the code and paste it in the application.
           */
          @com.google.api.client.util.Key
          private java.lang.String authorizationCode;

          /** Optional OAuth2 authorization code to use with this transfer configuration. This is required if new
         credentials are needed, as indicated by `CheckValidCreds`. In order to obtain authorization_code,
         please make a request to https://www.gstatic.com/bigquerydatatransfer/oauthz/auth?client_id==_uri=
         * client_id should be OAuth client_id of BigQuery DTS API for the given data source returned by
         ListDataSources method. * data_source_scopes are the scopes returned by ListDataSources method. *
         redirect_uri is an optional parameter. If not specified, then authorization code is posted to the
         opener of authorization flow window. Otherwise it will be sent to the redirect uri. A special value
         of urn:ietf:wg:oauth:2.0:oob means that authorization code should be returned in the title bar of
         the browser, with the page text prompting the user to copy the code and paste it in the
         application.
           */
          public java.lang.String getAuthorizationCode() {
            return authorizationCode;
          }

          /**
           * Optional OAuth2 authorization code to use with this transfer configuration. This is
           * required if new credentials are needed, as indicated by `CheckValidCreds`. In order to
           * obtain authorization_code, please make a request to
           * https://www.gstatic.com/bigquerydatatransfer/oauthz/auth?client_id==_uri= * client_id
           * should be OAuth client_id of BigQuery DTS API for the given data source returned by
           * ListDataSources method. * data_source_scopes are the scopes returned by ListDataSources
           * method. * redirect_uri is an optional parameter. If not specified, then authorization
           * code is posted to the opener of authorization flow window. Otherwise it will be sent to
           * the redirect uri. A special value of urn:ietf:wg:oauth:2.0:oob means that authorization
           * code should be returned in the title bar of the browser, with the page text prompting
           * the user to copy the code and paste it in the application.
           */
          public Create setAuthorizationCode(java.lang.String authorizationCode) {
            this.authorizationCode = authorizationCode;
            return this;
          }

          /**
           * Optional service account name. If this field is set, transfer config will be created
           * with this service account credentials. It requires that requesting user calling this
           * API has permissions to act as this service account.
           */
          @com.google.api.client.util.Key
          private java.lang.String serviceAccountName;

          /** Optional service account name. If this field is set, transfer config will be created with this
         service account credentials. It requires that requesting user calling this API has permissions to
         act as this service account.
           */
          public java.lang.String getServiceAccountName() {
            return serviceAccountName;
          }

          /**
           * Optional service account name. If this field is set, transfer config will be created
           * with this service account credentials. It requires that requesting user calling this
           * API has permissions to act as this service account.
           */
          public Create setServiceAccountName(java.lang.String serviceAccountName) {
            this.serviceAccountName = serviceAccountName;
            return this;
          }

          /**
           * Optional version info. If users want to find a very recent access token, that is,
           * immediately after approving access, users have to set the version_info claim in the
           * token request. To obtain the version_info, users must use the "none+gsession" response
           * type. which be return a version_info back in the authorization response which be be put
           * in a JWT claim in the token request.
           */
          @com.google.api.client.util.Key
          private java.lang.String versionInfo;

          /** Optional version info. If users want to find a very recent access token, that is, immediately after
         approving access, users have to set the version_info claim in the token request. To obtain the
         version_info, users must use the "none+gsession" response type. which be return a version_info back
         in the authorization response which be be put in a JWT claim in the token request.
           */
          public java.lang.String getVersionInfo() {
            return versionInfo;
          }

          /**
           * Optional version info. If users want to find a very recent access token, that is,
           * immediately after approving access, users have to set the version_info claim in the
           * token request. To obtain the version_info, users must use the "none+gsession" response
           * type. which be return a version_info back in the authorization response which be be put
           * in a JWT claim in the token request.
           */
          public Create setVersionInfo(java.lang.String versionInfo) {
            this.versionInfo = versionInfo;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a data transfer configuration, including any associated transfer runs and logs.
         *
         * Create a request for the method "transferConfigs.delete".
         *
         * This request holds the parameters needed by the bigquerydatatransfer server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The field will contain name of the resource requested, for example:
         *        `projects/{project_id}/transferConfigs/{config_id}` or
         *        `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends BigQueryDataTransferRequest<com.google.api.services.bigquerydatatransfer.v1.model.Empty> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$");

          /**
           * Deletes a data transfer configuration, including any associated transfer runs and logs.
           *
           * Create a request for the method "transferConfigs.delete".
           *
           * This request holds the parameters needed by the the bigquerydatatransfer server.  After setting
           * any optional parameters, call the {@link Delete#execute()} method to invoke the remote
           * operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The field will contain name of the resource requested, for example:
         *        `projects/{project_id}/transferConfigs/{config_id}` or
         *        `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(BigQueryDataTransfer.this, "DELETE", REST_PATH, null, com.google.api.services.bigquerydatatransfer.v1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The field will contain name of the resource requested, for example:
           * `projects/{project_id}/transferConfigs/{config_id}` or
           * `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The field will contain name of the resource requested, for example:
         `projects/{project_id}/transferConfigs/{config_id}` or
         `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The field will contain name of the resource requested, for example:
           * `projects/{project_id}/transferConfigs/{config_id}` or
           * `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Returns information about a data transfer config.
         *
         * Create a request for the method "transferConfigs.get".
         *
         * This request holds the parameters needed by the bigquerydatatransfer server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The field will contain name of the resource requested, for example:
         *        `projects/{project_id}/transferConfigs/{config_id}` or
         *        `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends BigQueryDataTransferRequest<com.google.api.services.bigquerydatatransfer.v1.model.TransferConfig> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$");

          /**
           * Returns information about a data transfer config.
           *
           * Create a request for the method "transferConfigs.get".
           *
           * This request holds the parameters needed by the the bigquerydatatransfer server.  After setting
           * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           * <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The field will contain name of the resource requested, for example:
         *        `projects/{project_id}/transferConfigs/{config_id}` or
         *        `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(BigQueryDataTransfer.this, "GET", REST_PATH, null, com.google.api.services.bigquerydatatransfer.v1.model.TransferConfig.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The field will contain name of the resource requested, for example:
           * `projects/{project_id}/transferConfigs/{config_id}` or
           * `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The field will contain name of the resource requested, for example:
         `projects/{project_id}/transferConfigs/{config_id}` or
         `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The field will contain name of the resource requested, for example:
           * `projects/{project_id}/transferConfigs/{config_id}` or
           * `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Returns information about all data transfers in the project.
         *
         * Create a request for the method "transferConfigs.list".
         *
         * This request holds the parameters needed by the bigquerydatatransfer server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The BigQuery project id for which data sources should be returned: `projects/{project_id}`
         *        or `projects/{project_id}/locations/{location_id}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends BigQueryDataTransferRequest<com.google.api.services.bigquerydatatransfer.v1.model.ListTransferConfigsResponse> {

          private static final String REST_PATH = "v1/{+parent}/transferConfigs";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Returns information about all data transfers in the project.
           *
           * Create a request for the method "transferConfigs.list".
           *
           * This request holds the parameters needed by the the bigquerydatatransfer server.  After setting
           * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           * <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The BigQuery project id for which data sources should be returned: `projects/{project_id}`
         *        or `projects/{project_id}/locations/{location_id}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(BigQueryDataTransfer.this, "GET", REST_PATH, null, com.google.api.services.bigquerydatatransfer.v1.model.ListTransferConfigsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The BigQuery project id for which data sources should be returned:
           * `projects/{project_id}` or `projects/{project_id}/locations/{location_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The BigQuery project id for which data sources should be returned:
         `projects/{project_id}` or `projects/{project_id}/locations/{location_id}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The BigQuery project id for which data sources should be returned:
           * `projects/{project_id}` or `projects/{project_id}/locations/{location_id}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** When specified, only configurations of requested data sources are returned. */
          @com.google.api.client.util.Key
          private java.util.List<java.lang.String> dataSourceIds;

          /** When specified, only configurations of requested data sources are returned.
           */
          public java.util.List<java.lang.String> getDataSourceIds() {
            return dataSourceIds;
          }

          /** When specified, only configurations of requested data sources are returned. */
          public List setDataSourceIds(java.util.List<java.lang.String> dataSourceIds) {
            this.dataSourceIds = dataSourceIds;
            return this;
          }

          /** Page size. The default page size is the maximum value of 1000 results. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Page size. The default page size is the maximum value of 1000 results.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** Page size. The default page size is the maximum value of 1000 results. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Pagination token, which can be used to request a specific page of
           * `ListTransfersRequest` list results. For multiple-page results, `ListTransfersResponse`
           * outputs a `next_page` token, which can be used as the `page_token` value to request the
           * next page of list results.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Pagination token, which can be used to request a specific page of `ListTransfersRequest` list
         results. For multiple-page results, `ListTransfersResponse` outputs a `next_page` token, which can
         be used as the `page_token` value to request the next page of list results.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Pagination token, which can be used to request a specific page of
           * `ListTransfersRequest` list results. For multiple-page results, `ListTransfersResponse`
           * outputs a `next_page` token, which can be used as the `page_token` value to request the
           * next page of list results.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates a data transfer configuration. All fields must be set, even if they are not updated.
         *
         * Create a request for the method "transferConfigs.patch".
         *
         * This request holds the parameters needed by the bigquerydatatransfer server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name The resource name of the transfer config. Transfer config names have the form of
         *        `projects/{project_id}/locations/{region}/transferConfigs/{config_id}`. The name is
         *        automatically generated based on the config_id specified in CreateTransferConfigRequest
         *        along with project_id and region. If config_id is not provided, usually a uuid, even
         *        though it is not guaranteed or required, will be generated for config_id.
         * @param content the {@link com.google.api.services.bigquerydatatransfer.v1.model.TransferConfig}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.bigquerydatatransfer.v1.model.TransferConfig content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends BigQueryDataTransferRequest<com.google.api.services.bigquerydatatransfer.v1.model.TransferConfig> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$");

          /**
           * Updates a data transfer configuration. All fields must be set, even if they are not updated.
           *
           * Create a request for the method "transferConfigs.patch".
           *
           * This request holds the parameters needed by the the bigquerydatatransfer server.  After setting
           * any optional parameters, call the {@link Patch#execute()} method to invoke the remote
           * operation. <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The resource name of the transfer config. Transfer config names have the form of
         *        `projects/{project_id}/locations/{region}/transferConfigs/{config_id}`. The name is
         *        automatically generated based on the config_id specified in CreateTransferConfigRequest
         *        along with project_id and region. If config_id is not provided, usually a uuid, even
         *        though it is not guaranteed or required, will be generated for config_id.
           * @param content the {@link com.google.api.services.bigquerydatatransfer.v1.model.TransferConfig}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.bigquerydatatransfer.v1.model.TransferConfig content) {
            super(BigQueryDataTransfer.this, "PATCH", REST_PATH, content, com.google.api.services.bigquerydatatransfer.v1.model.TransferConfig.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The resource name of the transfer config. Transfer config names have the form of
           * `projects/{project_id}/locations/{region}/transferConfigs/{config_id}`. The name is
           * automatically generated based on the config_id specified in CreateTransferConfigRequest
           * along with project_id and region. If config_id is not provided, usually a uuid, even
           * though it is not guaranteed or required, will be generated for config_id.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The resource name of the transfer config. Transfer config names have the form of
         `projects/{project_id}/locations/{region}/transferConfigs/{config_id}`. The name is automatically
         generated based on the config_id specified in CreateTransferConfigRequest along with project_id and
         region. If config_id is not provided, usually a uuid, even though it is not guaranteed or required,
         will be generated for config_id.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The resource name of the transfer config. Transfer config names have the form of
           * `projects/{project_id}/locations/{region}/transferConfigs/{config_id}`. The name is
           * automatically generated based on the config_id specified in CreateTransferConfigRequest
           * along with project_id and region. If config_id is not provided, usually a uuid, even
           * though it is not guaranteed or required, will be generated for config_id.
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional OAuth2 authorization code to use with this transfer configuration. If it is
           * provided, the transfer configuration will be associated with the authorizing user. In
           * order to obtain authorization_code, please make a request to
           * https://www.gstatic.com/bigquerydatatransfer/oauthz/auth?client_id==_uri= * client_id
           * should be OAuth client_id of BigQuery DTS API for the given data source returned by
           * ListDataSources method. * data_source_scopes are the scopes returned by ListDataSources
           * method. * redirect_uri is an optional parameter. If not specified, then authorization
           * code is posted to the opener of authorization flow window. Otherwise it will be sent to
           * the redirect uri. A special value of urn:ietf:wg:oauth:2.0:oob means that authorization
           * code should be returned in the title bar of the browser, with the page text prompting
           * the user to copy the code and paste it in the application.
           */
          @com.google.api.client.util.Key
          private java.lang.String authorizationCode;

          /** Optional OAuth2 authorization code to use with this transfer configuration. If it is provided, the
         transfer configuration will be associated with the authorizing user. In order to obtain
         authorization_code, please make a request to
         https://www.gstatic.com/bigquerydatatransfer/oauthz/auth?client_id==_uri= * client_id should be
         OAuth client_id of BigQuery DTS API for the given data source returned by ListDataSources method. *
         data_source_scopes are the scopes returned by ListDataSources method. * redirect_uri is an optional
         parameter. If not specified, then authorization code is posted to the opener of authorization flow
         window. Otherwise it will be sent to the redirect uri. A special value of urn:ietf:wg:oauth:2.0:oob
         means that authorization code should be returned in the title bar of the browser, with the page
         text prompting the user to copy the code and paste it in the application.
           */
          public java.lang.String getAuthorizationCode() {
            return authorizationCode;
          }

          /**
           * Optional OAuth2 authorization code to use with this transfer configuration. If it is
           * provided, the transfer configuration will be associated with the authorizing user. In
           * order to obtain authorization_code, please make a request to
           * https://www.gstatic.com/bigquerydatatransfer/oauthz/auth?client_id==_uri= * client_id
           * should be OAuth client_id of BigQuery DTS API for the given data source returned by
           * ListDataSources method. * data_source_scopes are the scopes returned by ListDataSources
           * method. * redirect_uri is an optional parameter. If not specified, then authorization
           * code is posted to the opener of authorization flow window. Otherwise it will be sent to
           * the redirect uri. A special value of urn:ietf:wg:oauth:2.0:oob means that authorization
           * code should be returned in the title bar of the browser, with the page text prompting
           * the user to copy the code and paste it in the application.
           */
          public Patch setAuthorizationCode(java.lang.String authorizationCode) {
            this.authorizationCode = authorizationCode;
            return this;
          }

          /**
           * Optional service account name. If this field is set and "service_account_name" is set
           * in update_mask, transfer config will be updated to use this service account
           * credentials. It requires that requesting user calling this API has permissions to act
           * as this service account.
           */
          @com.google.api.client.util.Key
          private java.lang.String serviceAccountName;

          /** Optional service account name. If this field is set and "service_account_name" is set in
         update_mask, transfer config will be updated to use this service account credentials. It requires
         that requesting user calling this API has permissions to act as this service account.
           */
          public java.lang.String getServiceAccountName() {
            return serviceAccountName;
          }

          /**
           * Optional service account name. If this field is set and "service_account_name" is set
           * in update_mask, transfer config will be updated to use this service account
           * credentials. It requires that requesting user calling this API has permissions to act
           * as this service account.
           */
          public Patch setServiceAccountName(java.lang.String serviceAccountName) {
            this.serviceAccountName = serviceAccountName;
            return this;
          }

          /** Required. Required list of fields to be updated in this request. */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. Required list of fields to be updated in this request.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /** Required. Required list of fields to be updated in this request. */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          /**
           * Optional version info. If users want to find a very recent access token, that is,
           * immediately after approving access, users have to set the version_info claim in the
           * token request. To obtain the version_info, users must use the "none+gsession" response
           * type. which be return a version_info back in the authorization response which be be put
           * in a JWT claim in the token request.
           */
          @com.google.api.client.util.Key
          private java.lang.String versionInfo;

          /** Optional version info. If users want to find a very recent access token, that is, immediately after
         approving access, users have to set the version_info claim in the token request. To obtain the
         version_info, users must use the "none+gsession" response type. which be return a version_info back
         in the authorization response which be be put in a JWT claim in the token request.
           */
          public java.lang.String getVersionInfo() {
            return versionInfo;
          }

          /**
           * Optional version info. If users want to find a very recent access token, that is,
           * immediately after approving access, users have to set the version_info claim in the
           * token request. To obtain the version_info, users must use the "none+gsession" response
           * type. which be return a version_info back in the authorization response which be be put
           * in a JWT claim in the token request.
           */
          public Patch setVersionInfo(java.lang.String versionInfo) {
            this.versionInfo = versionInfo;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Creates transfer runs for a time range [start_time, end_time]. For each date - or whatever
         * granularity the data source supports - in the range, one transfer run is created. Note that runs
         * are created per UTC time in the time range. DEPRECATED: use StartManualTransferRuns instead.
         *
         * Create a request for the method "transferConfigs.scheduleRuns".
         *
         * This request holds the parameters needed by the bigquerydatatransfer server.  After setting any
         * optional parameters, call the {@link ScheduleRuns#execute()} method to invoke the remote
         * operation.
         *
         * @param parent Required. Transfer configuration name in the form:
         *        `projects/{project_id}/transferConfigs/{config_id}` or
         *        `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.
         * @param content the {@link com.google.api.services.bigquerydatatransfer.v1.model.ScheduleTransferRunsRequest}
         * @return the request
         */
        public ScheduleRuns scheduleRuns(java.lang.String parent, com.google.api.services.bigquerydatatransfer.v1.model.ScheduleTransferRunsRequest content) throws java.io.IOException {
          ScheduleRuns result = new ScheduleRuns(parent, content);
          initialize(result);
          return result;
        }

        public class ScheduleRuns extends BigQueryDataTransferRequest<com.google.api.services.bigquerydatatransfer.v1.model.ScheduleTransferRunsResponse> {

          private static final String REST_PATH = "v1/{+parent}:scheduleRuns";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$");

          /**
           * Creates transfer runs for a time range [start_time, end_time]. For each date - or whatever
           * granularity the data source supports - in the range, one transfer run is created. Note that
           * runs are created per UTC time in the time range. DEPRECATED: use StartManualTransferRuns
           * instead.
           *
           * Create a request for the method "transferConfigs.scheduleRuns".
           *
           * This request holds the parameters needed by the the bigquerydatatransfer server.  After setting
           * any optional parameters, call the {@link ScheduleRuns#execute()} method to invoke the remote
           * operation. <p> {@link
           * ScheduleRuns#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Transfer configuration name in the form:
         *        `projects/{project_id}/transferConfigs/{config_id}` or
         *        `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.
           * @param content the {@link com.google.api.services.bigquerydatatransfer.v1.model.ScheduleTransferRunsRequest}
           * @since 1.13
           */
          protected ScheduleRuns(java.lang.String parent, com.google.api.services.bigquerydatatransfer.v1.model.ScheduleTransferRunsRequest content) {
            super(BigQueryDataTransfer.this, "POST", REST_PATH, content, com.google.api.services.bigquerydatatransfer.v1.model.ScheduleTransferRunsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$");
            }
          }

          @Override
          public ScheduleRuns set$Xgafv(java.lang.String $Xgafv) {
            return (ScheduleRuns) super.set$Xgafv($Xgafv);
          }

          @Override
          public ScheduleRuns setAccessToken(java.lang.String accessToken) {
            return (ScheduleRuns) super.setAccessToken(accessToken);
          }

          @Override
          public ScheduleRuns setAlt(java.lang.String alt) {
            return (ScheduleRuns) super.setAlt(alt);
          }

          @Override
          public ScheduleRuns setCallback(java.lang.String callback) {
            return (ScheduleRuns) super.setCallback(callback);
          }

          @Override
          public ScheduleRuns setFields(java.lang.String fields) {
            return (ScheduleRuns) super.setFields(fields);
          }

          @Override
          public ScheduleRuns setKey(java.lang.String key) {
            return (ScheduleRuns) super.setKey(key);
          }

          @Override
          public ScheduleRuns setOauthToken(java.lang.String oauthToken) {
            return (ScheduleRuns) super.setOauthToken(oauthToken);
          }

          @Override
          public ScheduleRuns setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (ScheduleRuns) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public ScheduleRuns setQuotaUser(java.lang.String quotaUser) {
            return (ScheduleRuns) super.setQuotaUser(quotaUser);
          }

          @Override
          public ScheduleRuns setUploadType(java.lang.String uploadType) {
            return (ScheduleRuns) super.setUploadType(uploadType);
          }

          @Override
          public ScheduleRuns setUploadProtocol(java.lang.String uploadProtocol) {
            return (ScheduleRuns) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Transfer configuration name in the form:
           * `projects/{project_id}/transferConfigs/{config_id}` or
           * `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Transfer configuration name in the form:
         `projects/{project_id}/transferConfigs/{config_id}` or
         `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Transfer configuration name in the form:
           * `projects/{project_id}/transferConfigs/{config_id}` or
           * `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.
           */
          public ScheduleRuns setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public ScheduleRuns set(String parameterName, Object value) {
            return (ScheduleRuns) super.set(parameterName, value);
          }
        }
        /**
         * Start manual transfer runs to be executed now with schedule_time equal to current time. The
         * transfer runs can be created for a time range where the run_time is between start_time
         * (inclusive) and end_time (exclusive), or for a specific run_time.
         *
         * Create a request for the method "transferConfigs.startManualRuns".
         *
         * This request holds the parameters needed by the bigquerydatatransfer server.  After setting any
         * optional parameters, call the {@link StartManualRuns#execute()} method to invoke the remote
         * operation.
         *
         * @param parent Transfer configuration name in the form: `projects/{project_id}/transferConfigs/{config_id}` or
         *        `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.
         * @param content the {@link com.google.api.services.bigquerydatatransfer.v1.model.StartManualTransferRunsRequest}
         * @return the request
         */
        public StartManualRuns startManualRuns(java.lang.String parent, com.google.api.services.bigquerydatatransfer.v1.model.StartManualTransferRunsRequest content) throws java.io.IOException {
          StartManualRuns result = new StartManualRuns(parent, content);
          initialize(result);
          return result;
        }

        public class StartManualRuns extends BigQueryDataTransferRequest<com.google.api.services.bigquerydatatransfer.v1.model.StartManualTransferRunsResponse> {

          private static final String REST_PATH = "v1/{+parent}:startManualRuns";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$");

          /**
           * Start manual transfer runs to be executed now with schedule_time equal to current time. The
           * transfer runs can be created for a time range where the run_time is between start_time
           * (inclusive) and end_time (exclusive), or for a specific run_time.
           *
           * Create a request for the method "transferConfigs.startManualRuns".
           *
           * This request holds the parameters needed by the the bigquerydatatransfer server.  After setting
           * any optional parameters, call the {@link StartManualRuns#execute()} method to invoke the remote
           * operation. <p> {@link StartManualRuns#initialize(com.google.api.client.googleapis.services.Abst
           * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
           * the constructor. </p>
           *
           * @param parent Transfer configuration name in the form: `projects/{project_id}/transferConfigs/{config_id}` or
         *        `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.
           * @param content the {@link com.google.api.services.bigquerydatatransfer.v1.model.StartManualTransferRunsRequest}
           * @since 1.13
           */
          protected StartManualRuns(java.lang.String parent, com.google.api.services.bigquerydatatransfer.v1.model.StartManualTransferRunsRequest content) {
            super(BigQueryDataTransfer.this, "POST", REST_PATH, content, com.google.api.services.bigquerydatatransfer.v1.model.StartManualTransferRunsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$");
            }
          }

          @Override
          public StartManualRuns set$Xgafv(java.lang.String $Xgafv) {
            return (StartManualRuns) super.set$Xgafv($Xgafv);
          }

          @Override
          public StartManualRuns setAccessToken(java.lang.String accessToken) {
            return (StartManualRuns) super.setAccessToken(accessToken);
          }

          @Override
          public StartManualRuns setAlt(java.lang.String alt) {
            return (StartManualRuns) super.setAlt(alt);
          }

          @Override
          public StartManualRuns setCallback(java.lang.String callback) {
            return (StartManualRuns) super.setCallback(callback);
          }

          @Override
          public StartManualRuns setFields(java.lang.String fields) {
            return (StartManualRuns) super.setFields(fields);
          }

          @Override
          public StartManualRuns setKey(java.lang.String key) {
            return (StartManualRuns) super.setKey(key);
          }

          @Override
          public StartManualRuns setOauthToken(java.lang.String oauthToken) {
            return (StartManualRuns) super.setOauthToken(oauthToken);
          }

          @Override
          public StartManualRuns setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (StartManualRuns) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public StartManualRuns setQuotaUser(java.lang.String quotaUser) {
            return (StartManualRuns) super.setQuotaUser(quotaUser);
          }

          @Override
          public StartManualRuns setUploadType(java.lang.String uploadType) {
            return (StartManualRuns) super.setUploadType(uploadType);
          }

          @Override
          public StartManualRuns setUploadProtocol(java.lang.String uploadProtocol) {
            return (StartManualRuns) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Transfer configuration name in the form:
           * `projects/{project_id}/transferConfigs/{config_id}` or
           * `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Transfer configuration name in the form: `projects/{project_id}/transferConfigs/{config_id}` or
         `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Transfer configuration name in the form:
           * `projects/{project_id}/transferConfigs/{config_id}` or
           * `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.
           */
          public StartManualRuns setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public StartManualRuns set(String parameterName, Object value) {
            return (StartManualRuns) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Runs collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code BigQueryDataTransfer bigquerydatatransfer = new BigQueryDataTransfer(...);}
         *   {@code BigQueryDataTransfer.Runs.List request = bigquerydatatransfer.runs().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Runs runs() {
          return new Runs();
        }

        /**
         * The "runs" collection of methods.
         */
        public class Runs {

          /**
           * Deletes the specified transfer run.
           *
           * Create a request for the method "runs.delete".
           *
           * This request holds the parameters needed by the bigquerydatatransfer server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The field will contain name of the resource requested, for example:
           *        `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or
           *        `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends BigQueryDataTransferRequest<com.google.api.services.bigquerydatatransfer.v1.model.Empty> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+/runs/[^/]+$");

            /**
             * Deletes the specified transfer run.
             *
             * Create a request for the method "runs.delete".
             *
             * This request holds the parameters needed by the the bigquerydatatransfer server.  After setting
             * any optional parameters, call the {@link Delete#execute()} method to invoke the remote
             * operation. <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The field will contain name of the resource requested, for example:
           *        `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or
           *        `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(BigQueryDataTransfer.this, "DELETE", REST_PATH, null, com.google.api.services.bigquerydatatransfer.v1.model.Empty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+/runs/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The field will contain name of the resource requested, for example:
             * `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or `projects/{proje
             * ct_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The field will contain name of the resource requested, for example:
           `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or
           `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The field will contain name of the resource requested, for example:
             * `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or `projects/{proje
             * ct_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+/runs/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Returns information about the particular transfer run.
           *
           * Create a request for the method "runs.get".
           *
           * This request holds the parameters needed by the bigquerydatatransfer server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The field will contain name of the resource requested, for example:
           *        `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or
           *        `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends BigQueryDataTransferRequest<com.google.api.services.bigquerydatatransfer.v1.model.TransferRun> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+/runs/[^/]+$");

            /**
             * Returns information about the particular transfer run.
             *
             * Create a request for the method "runs.get".
             *
             * This request holds the parameters needed by the the bigquerydatatransfer server.  After setting
             * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
             * <p> {@link
             * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The field will contain name of the resource requested, for example:
           *        `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or
           *        `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(BigQueryDataTransfer.this, "GET", REST_PATH, null, com.google.api.services.bigquerydatatransfer.v1.model.TransferRun.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+/runs/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The field will contain name of the resource requested, for example:
             * `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or `projects/{proje
             * ct_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The field will contain name of the resource requested, for example:
           `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or
           `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The field will contain name of the resource requested, for example:
             * `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or `projects/{proje
             * ct_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+/runs/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Returns information about running and completed jobs.
           *
           * Create a request for the method "runs.list".
           *
           * This request holds the parameters needed by the bigquerydatatransfer server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Name of transfer configuration for which transfer runs should be retrieved. Format of
           *        transfer configuration resource name is:
           *        `projects/{project_id}/transferConfigs/{config_id}` or
           *        `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends BigQueryDataTransferRequest<com.google.api.services.bigquerydatatransfer.v1.model.ListTransferRunsResponse> {

            private static final String REST_PATH = "v1/{+parent}/runs";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$");

            /**
             * Returns information about running and completed jobs.
             *
             * Create a request for the method "runs.list".
             *
             * This request holds the parameters needed by the the bigquerydatatransfer server.  After setting
             * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
             * <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Name of transfer configuration for which transfer runs should be retrieved. Format of
           *        transfer configuration resource name is:
           *        `projects/{project_id}/transferConfigs/{config_id}` or
           *        `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(BigQueryDataTransfer.this, "GET", REST_PATH, null, com.google.api.services.bigquerydatatransfer.v1.model.ListTransferRunsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of transfer configuration for which transfer runs should be retrieved.
             * Format of transfer configuration resource name is:
             * `projects/{project_id}/transferConfigs/{config_id}` or
             * `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Name of transfer configuration for which transfer runs should be retrieved. Format of
           transfer configuration resource name is: `projects/{project_id}/transferConfigs/{config_id}` or
           `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Name of transfer configuration for which transfer runs should be retrieved.
             * Format of transfer configuration resource name is:
             * `projects/{project_id}/transferConfigs/{config_id}` or
             * `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /** Page size. The default page size is the maximum value of 1000 results. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Page size. The default page size is the maximum value of 1000 results.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** Page size. The default page size is the maximum value of 1000 results. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * Pagination token, which can be used to request a specific page of
             * `ListTransferRunsRequest` list results. For multiple-page results,
             * `ListTransferRunsResponse` outputs a `next_page` token, which can be used as the
             * `page_token` value to request the next page of list results.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Pagination token, which can be used to request a specific page of `ListTransferRunsRequest` list
           results. For multiple-page results, `ListTransferRunsResponse` outputs a `next_page` token, which
           can be used as the `page_token` value to request the next page of list results.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * Pagination token, which can be used to request a specific page of
             * `ListTransferRunsRequest` list results. For multiple-page results,
             * `ListTransferRunsResponse` outputs a `next_page` token, which can be used as the
             * `page_token` value to request the next page of list results.
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            /** Indicates how run attempts are to be pulled. */
            @com.google.api.client.util.Key
            private java.lang.String runAttempt;

            /** Indicates how run attempts are to be pulled.
             */
            public java.lang.String getRunAttempt() {
              return runAttempt;
            }

            /** Indicates how run attempts are to be pulled. */
            public List setRunAttempt(java.lang.String runAttempt) {
              this.runAttempt = runAttempt;
              return this;
            }

            /** When specified, only transfer runs with requested states are returned. */
            @com.google.api.client.util.Key
            private java.util.List<java.lang.String> states;

            /** When specified, only transfer runs with requested states are returned.
             */
            public java.util.List<java.lang.String> getStates() {
              return states;
            }

            /** When specified, only transfer runs with requested states are returned. */
            public List setStates(java.util.List<java.lang.String> states) {
              this.states = states;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the TransferLogs collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code BigQueryDataTransfer bigquerydatatransfer = new BigQueryDataTransfer(...);}
           *   {@code BigQueryDataTransfer.TransferLogs.List request = bigquerydatatransfer.transferLogs().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public TransferLogs transferLogs() {
            return new TransferLogs();
          }

          /**
           * The "transferLogs" collection of methods.
           */
          public class TransferLogs {

            /**
             * Returns user facing log messages for the data transfer run.
             *
             * Create a request for the method "transferLogs.list".
             *
             * This request holds the parameters needed by the bigquerydatatransfer server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. Transfer run name in the form:
             *        `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or
             *        `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends BigQueryDataTransferRequest<com.google.api.services.bigquerydatatransfer.v1.model.ListTransferLogsResponse> {

              private static final String REST_PATH = "v1/{+parent}/transferLogs";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+/runs/[^/]+$");

              /**
               * Returns user facing log messages for the data transfer run.
               *
               * Create a request for the method "transferLogs.list".
               *
               * This request holds the parameters needed by the the bigquerydatatransfer server.  After setting
               * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
               * <p> {@link
               * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
               * called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. Transfer run name in the form:
             *        `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or
             *        `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(BigQueryDataTransfer.this, "GET", REST_PATH, null, com.google.api.services.bigquerydatatransfer.v1.model.ListTransferLogsResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+/runs/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. Transfer run name in the form:
               * `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or `projects/{pro
               * ject_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. Transfer run name in the form:
             `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or
             `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. Transfer run name in the form:
               * `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or `projects/{pro
               * ject_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`
               */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+/runs/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Message types to return. If not populated - INFO, WARNING and ERROR messages are
               * returned.
               */
              @com.google.api.client.util.Key
              private java.util.List<java.lang.String> messageTypes;

              /** Message types to return. If not populated - INFO, WARNING and ERROR messages are returned.
               */
              public java.util.List<java.lang.String> getMessageTypes() {
                return messageTypes;
              }

              /**
               * Message types to return. If not populated - INFO, WARNING and ERROR messages are
               * returned.
               */
              public List setMessageTypes(java.util.List<java.lang.String> messageTypes) {
                this.messageTypes = messageTypes;
                return this;
              }

              /** Page size. The default page size is the maximum value of 1000 results. */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** Page size. The default page size is the maximum value of 1000 results.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /** Page size. The default page size is the maximum value of 1000 results. */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /**
               * Pagination token, which can be used to request a specific page of
               * `ListTransferLogsRequest` list results. For multiple-page results,
               * `ListTransferLogsResponse` outputs a `next_page` token, which can be used as the
               * `page_token` value to request the next page of list results.
               */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** Pagination token, which can be used to request a specific page of `ListTransferLogsRequest` list
             results. For multiple-page results, `ListTransferLogsResponse` outputs a `next_page` token, which
             can be used as the `page_token` value to request the next page of list results.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /**
               * Pagination token, which can be used to request a specific page of
               * `ListTransferLogsRequest` list results. For multiple-page results,
               * `ListTransferLogsResponse` outputs a `next_page` token, which can be used as the
               * `page_token` value to request the next page of list results.
               */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }

          }
        }
      }
    }
    /**
     * An accessor for creating requests from the TransferConfigs collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code BigQueryDataTransfer bigquerydatatransfer = new BigQueryDataTransfer(...);}
     *   {@code BigQueryDataTransfer.TransferConfigs.List request = bigquerydatatransfer.transferConfigs().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public TransferConfigs transferConfigs() {
      return new TransferConfigs();
    }

    /**
     * The "transferConfigs" collection of methods.
     */
    public class TransferConfigs {

      /**
       * Creates a new data transfer configuration.
       *
       * Create a request for the method "transferConfigs.create".
       *
       * This request holds the parameters needed by the bigquerydatatransfer server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The BigQuery project id where the transfer configuration should be created. Must be in the
       *        format projects/{project_id}/locations/{location_id} or projects/{project_id}. If
       *        specified location and location of the destination bigquery dataset do not match - the
       *        request will fail.
       * @param content the {@link com.google.api.services.bigquerydatatransfer.v1.model.TransferConfig}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.bigquerydatatransfer.v1.model.TransferConfig content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends BigQueryDataTransferRequest<com.google.api.services.bigquerydatatransfer.v1.model.TransferConfig> {

        private static final String REST_PATH = "v1/{+parent}/transferConfigs";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Creates a new data transfer configuration.
         *
         * Create a request for the method "transferConfigs.create".
         *
         * This request holds the parameters needed by the the bigquerydatatransfer server.  After setting
         * any optional parameters, call the {@link Create#execute()} method to invoke the remote
         * operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The BigQuery project id where the transfer configuration should be created. Must be in the
       *        format projects/{project_id}/locations/{location_id} or projects/{project_id}. If
       *        specified location and location of the destination bigquery dataset do not match - the
       *        request will fail.
         * @param content the {@link com.google.api.services.bigquerydatatransfer.v1.model.TransferConfig}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.bigquerydatatransfer.v1.model.TransferConfig content) {
          super(BigQueryDataTransfer.this, "POST", REST_PATH, content, com.google.api.services.bigquerydatatransfer.v1.model.TransferConfig.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The BigQuery project id where the transfer configuration should be created.
         * Must be in the format projects/{project_id}/locations/{location_id} or
         * projects/{project_id}. If specified location and location of the destination bigquery
         * dataset do not match - the request will fail.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The BigQuery project id where the transfer configuration should be created. Must be in
       the format projects/{project_id}/locations/{location_id} or projects/{project_id}. If specified
       location and location of the destination bigquery dataset do not match - the request will fail.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The BigQuery project id where the transfer configuration should be created.
         * Must be in the format projects/{project_id}/locations/{location_id} or
         * projects/{project_id}. If specified location and location of the destination bigquery
         * dataset do not match - the request will fail.
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional OAuth2 authorization code to use with this transfer configuration. This is
         * required if new credentials are needed, as indicated by `CheckValidCreds`. In order to
         * obtain authorization_code, please make a request to
         * https://www.gstatic.com/bigquerydatatransfer/oauthz/auth?client_id==_uri= * client_id
         * should be OAuth client_id of BigQuery DTS API for the given data source returned by
         * ListDataSources method. * data_source_scopes are the scopes returned by ListDataSources
         * method. * redirect_uri is an optional parameter. If not specified, then authorization
         * code is posted to the opener of authorization flow window. Otherwise it will be sent to
         * the redirect uri. A special value of urn:ietf:wg:oauth:2.0:oob means that authorization
         * code should be returned in the title bar of the browser, with the page text prompting the
         * user to copy the code and paste it in the application.
         */
        @com.google.api.client.util.Key
        private java.lang.String authorizationCode;

        /** Optional OAuth2 authorization code to use with this transfer configuration. This is required if new
       credentials are needed, as indicated by `CheckValidCreds`. In order to obtain authorization_code,
       please make a request to https://www.gstatic.com/bigquerydatatransfer/oauthz/auth?client_id==_uri=
       * client_id should be OAuth client_id of BigQuery DTS API for the given data source returned by
       ListDataSources method. * data_source_scopes are the scopes returned by ListDataSources method. *
       redirect_uri is an optional parameter. If not specified, then authorization code is posted to the
       opener of authorization flow window. Otherwise it will be sent to the redirect uri. A special value
       of urn:ietf:wg:oauth:2.0:oob means that authorization code should be returned in the title bar of
       the browser, with the page text prompting the user to copy the code and paste it in the
       application.
         */
        public java.lang.String getAuthorizationCode() {
          return authorizationCode;
        }

        /**
         * Optional OAuth2 authorization code to use with this transfer configuration. This is
         * required if new credentials are needed, as indicated by `CheckValidCreds`. In order to
         * obtain authorization_code, please make a request to
         * https://www.gstatic.com/bigquerydatatransfer/oauthz/auth?client_id==_uri= * client_id
         * should be OAuth client_id of BigQuery DTS API for the given data source returned by
         * ListDataSources method. * data_source_scopes are the scopes returned by ListDataSources
         * method. * redirect_uri is an optional parameter. If not specified, then authorization
         * code is posted to the opener of authorization flow window. Otherwise it will be sent to
         * the redirect uri. A special value of urn:ietf:wg:oauth:2.0:oob means that authorization
         * code should be returned in the title bar of the browser, with the page text prompting the
         * user to copy the code and paste it in the application.
         */
        public Create setAuthorizationCode(java.lang.String authorizationCode) {
          this.authorizationCode = authorizationCode;
          return this;
        }

        /**
         * Optional service account name. If this field is set, transfer config will be created with
         * this service account credentials. It requires that requesting user calling this API has
         * permissions to act as this service account.
         */
        @com.google.api.client.util.Key
        private java.lang.String serviceAccountName;

        /** Optional service account name. If this field is set, transfer config will be created with this
       service account credentials. It requires that requesting user calling this API has permissions to
       act as this service account.
         */
        public java.lang.String getServiceAccountName() {
          return serviceAccountName;
        }

        /**
         * Optional service account name. If this field is set, transfer config will be created with
         * this service account credentials. It requires that requesting user calling this API has
         * permissions to act as this service account.
         */
        public Create setServiceAccountName(java.lang.String serviceAccountName) {
          this.serviceAccountName = serviceAccountName;
          return this;
        }

        /**
         * Optional version info. If users want to find a very recent access token, that is,
         * immediately after approving access, users have to set the version_info claim in the token
         * request. To obtain the version_info, users must use the "none+gsession" response type.
         * which be return a version_info back in the authorization response which be be put in a
         * JWT claim in the token request.
         */
        @com.google.api.client.util.Key
        private java.lang.String versionInfo;

        /** Optional version info. If users want to find a very recent access token, that is, immediately after
       approving access, users have to set the version_info claim in the token request. To obtain the
       version_info, users must use the "none+gsession" response type. which be return a version_info back
       in the authorization response which be be put in a JWT claim in the token request.
         */
        public java.lang.String getVersionInfo() {
          return versionInfo;
        }

        /**
         * Optional version info. If users want to find a very recent access token, that is,
         * immediately after approving access, users have to set the version_info claim in the token
         * request. To obtain the version_info, users must use the "none+gsession" response type.
         * which be return a version_info back in the authorization response which be be put in a
         * JWT claim in the token request.
         */
        public Create setVersionInfo(java.lang.String versionInfo) {
          this.versionInfo = versionInfo;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a data transfer configuration, including any associated transfer runs and logs.
       *
       * Create a request for the method "transferConfigs.delete".
       *
       * This request holds the parameters needed by the bigquerydatatransfer server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. The field will contain name of the resource requested, for example:
       *        `projects/{project_id}/transferConfigs/{config_id}` or
       *        `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends BigQueryDataTransferRequest<com.google.api.services.bigquerydatatransfer.v1.model.Empty> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/transferConfigs/[^/]+$");

        /**
         * Deletes a data transfer configuration, including any associated transfer runs and logs.
         *
         * Create a request for the method "transferConfigs.delete".
         *
         * This request holds the parameters needed by the the bigquerydatatransfer server.  After setting
         * any optional parameters, call the {@link Delete#execute()} method to invoke the remote
         * operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The field will contain name of the resource requested, for example:
       *        `projects/{project_id}/transferConfigs/{config_id}` or
       *        `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(BigQueryDataTransfer.this, "DELETE", REST_PATH, null, com.google.api.services.bigquerydatatransfer.v1.model.Empty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/transferConfigs/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The field will contain name of the resource requested, for example:
         * `projects/{project_id}/transferConfigs/{config_id}` or
         * `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The field will contain name of the resource requested, for example:
       `projects/{project_id}/transferConfigs/{config_id}` or
       `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The field will contain name of the resource requested, for example:
         * `projects/{project_id}/transferConfigs/{config_id}` or
         * `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/transferConfigs/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Returns information about a data transfer config.
       *
       * Create a request for the method "transferConfigs.get".
       *
       * This request holds the parameters needed by the bigquerydatatransfer server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The field will contain name of the resource requested, for example:
       *        `projects/{project_id}/transferConfigs/{config_id}` or
       *        `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends BigQueryDataTransferRequest<com.google.api.services.bigquerydatatransfer.v1.model.TransferConfig> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/transferConfigs/[^/]+$");

        /**
         * Returns information about a data transfer config.
         *
         * Create a request for the method "transferConfigs.get".
         *
         * This request holds the parameters needed by the the bigquerydatatransfer server.  After setting
         * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         * <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The field will contain name of the resource requested, for example:
       *        `projects/{project_id}/transferConfigs/{config_id}` or
       *        `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(BigQueryDataTransfer.this, "GET", REST_PATH, null, com.google.api.services.bigquerydatatransfer.v1.model.TransferConfig.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/transferConfigs/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The field will contain name of the resource requested, for example:
         * `projects/{project_id}/transferConfigs/{config_id}` or
         * `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The field will contain name of the resource requested, for example:
       `projects/{project_id}/transferConfigs/{config_id}` or
       `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The field will contain name of the resource requested, for example:
         * `projects/{project_id}/transferConfigs/{config_id}` or
         * `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/transferConfigs/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Returns information about all data transfers in the project.
       *
       * Create a request for the method "transferConfigs.list".
       *
       * This request holds the parameters needed by the bigquerydatatransfer server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The BigQuery project id for which data sources should be returned: `projects/{project_id}`
       *        or `projects/{project_id}/locations/{location_id}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends BigQueryDataTransferRequest<com.google.api.services.bigquerydatatransfer.v1.model.ListTransferConfigsResponse> {

        private static final String REST_PATH = "v1/{+parent}/transferConfigs";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Returns information about all data transfers in the project.
         *
         * Create a request for the method "transferConfigs.list".
         *
         * This request holds the parameters needed by the the bigquerydatatransfer server.  After setting
         * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         * <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The BigQuery project id for which data sources should be returned: `projects/{project_id}`
       *        or `projects/{project_id}/locations/{location_id}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(BigQueryDataTransfer.this, "GET", REST_PATH, null, com.google.api.services.bigquerydatatransfer.v1.model.ListTransferConfigsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The BigQuery project id for which data sources should be returned:
         * `projects/{project_id}` or `projects/{project_id}/locations/{location_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The BigQuery project id for which data sources should be returned:
       `projects/{project_id}` or `projects/{project_id}/locations/{location_id}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The BigQuery project id for which data sources should be returned:
         * `projects/{project_id}` or `projects/{project_id}/locations/{location_id}`
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** When specified, only configurations of requested data sources are returned. */
        @com.google.api.client.util.Key
        private java.util.List<java.lang.String> dataSourceIds;

        /** When specified, only configurations of requested data sources are returned.
         */
        public java.util.List<java.lang.String> getDataSourceIds() {
          return dataSourceIds;
        }

        /** When specified, only configurations of requested data sources are returned. */
        public List setDataSourceIds(java.util.List<java.lang.String> dataSourceIds) {
          this.dataSourceIds = dataSourceIds;
          return this;
        }

        /** Page size. The default page size is the maximum value of 1000 results. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Page size. The default page size is the maximum value of 1000 results.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** Page size. The default page size is the maximum value of 1000 results. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Pagination token, which can be used to request a specific page of `ListTransfersRequest`
         * list results. For multiple-page results, `ListTransfersResponse` outputs a `next_page`
         * token, which can be used as the `page_token` value to request the next page of list
         * results.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Pagination token, which can be used to request a specific page of `ListTransfersRequest` list
       results. For multiple-page results, `ListTransfersResponse` outputs a `next_page` token, which can
       be used as the `page_token` value to request the next page of list results.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Pagination token, which can be used to request a specific page of `ListTransfersRequest`
         * list results. For multiple-page results, `ListTransfersResponse` outputs a `next_page`
         * token, which can be used as the `page_token` value to request the next page of list
         * results.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a data transfer configuration. All fields must be set, even if they are not updated.
       *
       * Create a request for the method "transferConfigs.patch".
       *
       * This request holds the parameters needed by the bigquerydatatransfer server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name The resource name of the transfer config. Transfer config names have the form of
       *        `projects/{project_id}/locations/{region}/transferConfigs/{config_id}`. The name is
       *        automatically generated based on the config_id specified in CreateTransferConfigRequest
       *        along with project_id and region. If config_id is not provided, usually a uuid, even
       *        though it is not guaranteed or required, will be generated for config_id.
       * @param content the {@link com.google.api.services.bigquerydatatransfer.v1.model.TransferConfig}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.bigquerydatatransfer.v1.model.TransferConfig content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends BigQueryDataTransferRequest<com.google.api.services.bigquerydatatransfer.v1.model.TransferConfig> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/transferConfigs/[^/]+$");

        /**
         * Updates a data transfer configuration. All fields must be set, even if they are not updated.
         *
         * Create a request for the method "transferConfigs.patch".
         *
         * This request holds the parameters needed by the the bigquerydatatransfer server.  After setting
         * any optional parameters, call the {@link Patch#execute()} method to invoke the remote
         * operation. <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The resource name of the transfer config. Transfer config names have the form of
       *        `projects/{project_id}/locations/{region}/transferConfigs/{config_id}`. The name is
       *        automatically generated based on the config_id specified in CreateTransferConfigRequest
       *        along with project_id and region. If config_id is not provided, usually a uuid, even
       *        though it is not guaranteed or required, will be generated for config_id.
         * @param content the {@link com.google.api.services.bigquerydatatransfer.v1.model.TransferConfig}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.bigquerydatatransfer.v1.model.TransferConfig content) {
          super(BigQueryDataTransfer.this, "PATCH", REST_PATH, content, com.google.api.services.bigquerydatatransfer.v1.model.TransferConfig.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/transferConfigs/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The resource name of the transfer config. Transfer config names have the form of
         * `projects/{project_id}/locations/{region}/transferConfigs/{config_id}`. The name is
         * automatically generated based on the config_id specified in CreateTransferConfigRequest
         * along with project_id and region. If config_id is not provided, usually a uuid, even
         * though it is not guaranteed or required, will be generated for config_id.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The resource name of the transfer config. Transfer config names have the form of
       `projects/{project_id}/locations/{region}/transferConfigs/{config_id}`. The name is automatically
       generated based on the config_id specified in CreateTransferConfigRequest along with project_id and
       region. If config_id is not provided, usually a uuid, even though it is not guaranteed or required,
       will be generated for config_id.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * The resource name of the transfer config. Transfer config names have the form of
         * `projects/{project_id}/locations/{region}/transferConfigs/{config_id}`. The name is
         * automatically generated based on the config_id specified in CreateTransferConfigRequest
         * along with project_id and region. If config_id is not provided, usually a uuid, even
         * though it is not guaranteed or required, will be generated for config_id.
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/transferConfigs/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * Optional OAuth2 authorization code to use with this transfer configuration. If it is
         * provided, the transfer configuration will be associated with the authorizing user. In
         * order to obtain authorization_code, please make a request to
         * https://www.gstatic.com/bigquerydatatransfer/oauthz/auth?client_id==_uri= * client_id
         * should be OAuth client_id of BigQuery DTS API for the given data source returned by
         * ListDataSources method. * data_source_scopes are the scopes returned by ListDataSources
         * method. * redirect_uri is an optional parameter. If not specified, then authorization
         * code is posted to the opener of authorization flow window. Otherwise it will be sent to
         * the redirect uri. A special value of urn:ietf:wg:oauth:2.0:oob means that authorization
         * code should be returned in the title bar of the browser, with the page text prompting the
         * user to copy the code and paste it in the application.
         */
        @com.google.api.client.util.Key
        private java.lang.String authorizationCode;

        /** Optional OAuth2 authorization code to use with this transfer configuration. If it is provided, the
       transfer configuration will be associated with the authorizing user. In order to obtain
       authorization_code, please make a request to
       https://www.gstatic.com/bigquerydatatransfer/oauthz/auth?client_id==_uri= * client_id should be
       OAuth client_id of BigQuery DTS API for the given data source returned by ListDataSources method. *
       data_source_scopes are the scopes returned by ListDataSources method. * redirect_uri is an optional
       parameter. If not specified, then authorization code is posted to the opener of authorization flow
       window. Otherwise it will be sent to the redirect uri. A special value of urn:ietf:wg:oauth:2.0:oob
       means that authorization code should be returned in the title bar of the browser, with the page
       text prompting the user to copy the code and paste it in the application.
         */
        public java.lang.String getAuthorizationCode() {
          return authorizationCode;
        }

        /**
         * Optional OAuth2 authorization code to use with this transfer configuration. If it is
         * provided, the transfer configuration will be associated with the authorizing user. In
         * order to obtain authorization_code, please make a request to
         * https://www.gstatic.com/bigquerydatatransfer/oauthz/auth?client_id==_uri= * client_id
         * should be OAuth client_id of BigQuery DTS API for the given data source returned by
         * ListDataSources method. * data_source_scopes are the scopes returned by ListDataSources
         * method. * redirect_uri is an optional parameter. If not specified, then authorization
         * code is posted to the opener of authorization flow window. Otherwise it will be sent to
         * the redirect uri. A special value of urn:ietf:wg:oauth:2.0:oob means that authorization
         * code should be returned in the title bar of the browser, with the page text prompting the
         * user to copy the code and paste it in the application.
         */
        public Patch setAuthorizationCode(java.lang.String authorizationCode) {
          this.authorizationCode = authorizationCode;
          return this;
        }

        /**
         * Optional service account name. If this field is set and "service_account_name" is set in
         * update_mask, transfer config will be updated to use this service account credentials. It
         * requires that requesting user calling this API has permissions to act as this service
         * account.
         */
        @com.google.api.client.util.Key
        private java.lang.String serviceAccountName;

        /** Optional service account name. If this field is set and "service_account_name" is set in
       update_mask, transfer config will be updated to use this service account credentials. It requires
       that requesting user calling this API has permissions to act as this service account.
         */
        public java.lang.String getServiceAccountName() {
          return serviceAccountName;
        }

        /**
         * Optional service account name. If this field is set and "service_account_name" is set in
         * update_mask, transfer config will be updated to use this service account credentials. It
         * requires that requesting user calling this API has permissions to act as this service
         * account.
         */
        public Patch setServiceAccountName(java.lang.String serviceAccountName) {
          this.serviceAccountName = serviceAccountName;
          return this;
        }

        /** Required. Required list of fields to be updated in this request. */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Required. Required list of fields to be updated in this request.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /** Required. Required list of fields to be updated in this request. */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        /**
         * Optional version info. If users want to find a very recent access token, that is,
         * immediately after approving access, users have to set the version_info claim in the token
         * request. To obtain the version_info, users must use the "none+gsession" response type.
         * which be return a version_info back in the authorization response which be be put in a
         * JWT claim in the token request.
         */
        @com.google.api.client.util.Key
        private java.lang.String versionInfo;

        /** Optional version info. If users want to find a very recent access token, that is, immediately after
       approving access, users have to set the version_info claim in the token request. To obtain the
       version_info, users must use the "none+gsession" response type. which be return a version_info back
       in the authorization response which be be put in a JWT claim in the token request.
         */
        public java.lang.String getVersionInfo() {
          return versionInfo;
        }

        /**
         * Optional version info. If users want to find a very recent access token, that is,
         * immediately after approving access, users have to set the version_info claim in the token
         * request. To obtain the version_info, users must use the "none+gsession" response type.
         * which be return a version_info back in the authorization response which be be put in a
         * JWT claim in the token request.
         */
        public Patch setVersionInfo(java.lang.String versionInfo) {
          this.versionInfo = versionInfo;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }
      /**
       * Creates transfer runs for a time range [start_time, end_time]. For each date - or whatever
       * granularity the data source supports - in the range, one transfer run is created. Note that runs
       * are created per UTC time in the time range. DEPRECATED: use StartManualTransferRuns instead.
       *
       * Create a request for the method "transferConfigs.scheduleRuns".
       *
       * This request holds the parameters needed by the bigquerydatatransfer server.  After setting any
       * optional parameters, call the {@link ScheduleRuns#execute()} method to invoke the remote
       * operation.
       *
       * @param parent Required. Transfer configuration name in the form:
       *        `projects/{project_id}/transferConfigs/{config_id}` or
       *        `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.
       * @param content the {@link com.google.api.services.bigquerydatatransfer.v1.model.ScheduleTransferRunsRequest}
       * @return the request
       */
      public ScheduleRuns scheduleRuns(java.lang.String parent, com.google.api.services.bigquerydatatransfer.v1.model.ScheduleTransferRunsRequest content) throws java.io.IOException {
        ScheduleRuns result = new ScheduleRuns(parent, content);
        initialize(result);
        return result;
      }

      public class ScheduleRuns extends BigQueryDataTransferRequest<com.google.api.services.bigquerydatatransfer.v1.model.ScheduleTransferRunsResponse> {

        private static final String REST_PATH = "v1/{+parent}:scheduleRuns";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/transferConfigs/[^/]+$");

        /**
         * Creates transfer runs for a time range [start_time, end_time]. For each date - or whatever
         * granularity the data source supports - in the range, one transfer run is created. Note that
         * runs are created per UTC time in the time range. DEPRECATED: use StartManualTransferRuns
         * instead.
         *
         * Create a request for the method "transferConfigs.scheduleRuns".
         *
         * This request holds the parameters needed by the the bigquerydatatransfer server.  After setting
         * any optional parameters, call the {@link ScheduleRuns#execute()} method to invoke the remote
         * operation. <p> {@link
         * ScheduleRuns#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Transfer configuration name in the form:
       *        `projects/{project_id}/transferConfigs/{config_id}` or
       *        `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.
         * @param content the {@link com.google.api.services.bigquerydatatransfer.v1.model.ScheduleTransferRunsRequest}
         * @since 1.13
         */
        protected ScheduleRuns(java.lang.String parent, com.google.api.services.bigquerydatatransfer.v1.model.ScheduleTransferRunsRequest content) {
          super(BigQueryDataTransfer.this, "POST", REST_PATH, content, com.google.api.services.bigquerydatatransfer.v1.model.ScheduleTransferRunsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+/transferConfigs/[^/]+$");
          }
        }

        @Override
        public ScheduleRuns set$Xgafv(java.lang.String $Xgafv) {
          return (ScheduleRuns) super.set$Xgafv($Xgafv);
        }

        @Override
        public ScheduleRuns setAccessToken(java.lang.String accessToken) {
          return (ScheduleRuns) super.setAccessToken(accessToken);
        }

        @Override
        public ScheduleRuns setAlt(java.lang.String alt) {
          return (ScheduleRuns) super.setAlt(alt);
        }

        @Override
        public ScheduleRuns setCallback(java.lang.String callback) {
          return (ScheduleRuns) super.setCallback(callback);
        }

        @Override
        public ScheduleRuns setFields(java.lang.String fields) {
          return (ScheduleRuns) super.setFields(fields);
        }

        @Override
        public ScheduleRuns setKey(java.lang.String key) {
          return (ScheduleRuns) super.setKey(key);
        }

        @Override
        public ScheduleRuns setOauthToken(java.lang.String oauthToken) {
          return (ScheduleRuns) super.setOauthToken(oauthToken);
        }

        @Override
        public ScheduleRuns setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (ScheduleRuns) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public ScheduleRuns setQuotaUser(java.lang.String quotaUser) {
          return (ScheduleRuns) super.setQuotaUser(quotaUser);
        }

        @Override
        public ScheduleRuns setUploadType(java.lang.String uploadType) {
          return (ScheduleRuns) super.setUploadType(uploadType);
        }

        @Override
        public ScheduleRuns setUploadProtocol(java.lang.String uploadProtocol) {
          return (ScheduleRuns) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Transfer configuration name in the form:
         * `projects/{project_id}/transferConfigs/{config_id}` or
         * `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Transfer configuration name in the form:
       `projects/{project_id}/transferConfigs/{config_id}` or
       `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Transfer configuration name in the form:
         * `projects/{project_id}/transferConfigs/{config_id}` or
         * `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.
         */
        public ScheduleRuns setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+/transferConfigs/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public ScheduleRuns set(String parameterName, Object value) {
          return (ScheduleRuns) super.set(parameterName, value);
        }
      }
      /**
       * Start manual transfer runs to be executed now with schedule_time equal to current time. The
       * transfer runs can be created for a time range where the run_time is between start_time
       * (inclusive) and end_time (exclusive), or for a specific run_time.
       *
       * Create a request for the method "transferConfigs.startManualRuns".
       *
       * This request holds the parameters needed by the bigquerydatatransfer server.  After setting any
       * optional parameters, call the {@link StartManualRuns#execute()} method to invoke the remote
       * operation.
       *
       * @param parent Transfer configuration name in the form: `projects/{project_id}/transferConfigs/{config_id}` or
       *        `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.
       * @param content the {@link com.google.api.services.bigquerydatatransfer.v1.model.StartManualTransferRunsRequest}
       * @return the request
       */
      public StartManualRuns startManualRuns(java.lang.String parent, com.google.api.services.bigquerydatatransfer.v1.model.StartManualTransferRunsRequest content) throws java.io.IOException {
        StartManualRuns result = new StartManualRuns(parent, content);
        initialize(result);
        return result;
      }

      public class StartManualRuns extends BigQueryDataTransferRequest<com.google.api.services.bigquerydatatransfer.v1.model.StartManualTransferRunsResponse> {

        private static final String REST_PATH = "v1/{+parent}:startManualRuns";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/transferConfigs/[^/]+$");

        /**
         * Start manual transfer runs to be executed now with schedule_time equal to current time. The
         * transfer runs can be created for a time range where the run_time is between start_time
         * (inclusive) and end_time (exclusive), or for a specific run_time.
         *
         * Create a request for the method "transferConfigs.startManualRuns".
         *
         * This request holds the parameters needed by the the bigquerydatatransfer server.  After setting
         * any optional parameters, call the {@link StartManualRuns#execute()} method to invoke the remote
         * operation. <p> {@link StartManualRuns#initialize(com.google.api.client.googleapis.services.Abst
         * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
         * the constructor. </p>
         *
         * @param parent Transfer configuration name in the form: `projects/{project_id}/transferConfigs/{config_id}` or
       *        `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.
         * @param content the {@link com.google.api.services.bigquerydatatransfer.v1.model.StartManualTransferRunsRequest}
         * @since 1.13
         */
        protected StartManualRuns(java.lang.String parent, com.google.api.services.bigquerydatatransfer.v1.model.StartManualTransferRunsRequest content) {
          super(BigQueryDataTransfer.this, "POST", REST_PATH, content, com.google.api.services.bigquerydatatransfer.v1.model.StartManualTransferRunsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+/transferConfigs/[^/]+$");
          }
        }

        @Override
        public StartManualRuns set$Xgafv(java.lang.String $Xgafv) {
          return (StartManualRuns) super.set$Xgafv($Xgafv);
        }

        @Override
        public StartManualRuns setAccessToken(java.lang.String accessToken) {
          return (StartManualRuns) super.setAccessToken(accessToken);
        }

        @Override
        public StartManualRuns setAlt(java.lang.String alt) {
          return (StartManualRuns) super.setAlt(alt);
        }

        @Override
        public StartManualRuns setCallback(java.lang.String callback) {
          return (StartManualRuns) super.setCallback(callback);
        }

        @Override
        public StartManualRuns setFields(java.lang.String fields) {
          return (StartManualRuns) super.setFields(fields);
        }

        @Override
        public StartManualRuns setKey(java.lang.String key) {
          return (StartManualRuns) super.setKey(key);
        }

        @Override
        public StartManualRuns setOauthToken(java.lang.String oauthToken) {
          return (StartManualRuns) super.setOauthToken(oauthToken);
        }

        @Override
        public StartManualRuns setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (StartManualRuns) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public StartManualRuns setQuotaUser(java.lang.String quotaUser) {
          return (StartManualRuns) super.setQuotaUser(quotaUser);
        }

        @Override
        public StartManualRuns setUploadType(java.lang.String uploadType) {
          return (StartManualRuns) super.setUploadType(uploadType);
        }

        @Override
        public StartManualRuns setUploadProtocol(java.lang.String uploadProtocol) {
          return (StartManualRuns) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Transfer configuration name in the form:
         * `projects/{project_id}/transferConfigs/{config_id}` or
         * `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Transfer configuration name in the form: `projects/{project_id}/transferConfigs/{config_id}` or
       `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Transfer configuration name in the form:
         * `projects/{project_id}/transferConfigs/{config_id}` or
         * `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.
         */
        public StartManualRuns setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+/transferConfigs/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public StartManualRuns set(String parameterName, Object value) {
          return (StartManualRuns) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Runs collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code BigQueryDataTransfer bigquerydatatransfer = new BigQueryDataTransfer(...);}
       *   {@code BigQueryDataTransfer.Runs.List request = bigquerydatatransfer.runs().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Runs runs() {
        return new Runs();
      }

      /**
       * The "runs" collection of methods.
       */
      public class Runs {

        /**
         * Deletes the specified transfer run.
         *
         * Create a request for the method "runs.delete".
         *
         * This request holds the parameters needed by the bigquerydatatransfer server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The field will contain name of the resource requested, for example:
         *        `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or
         *        `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends BigQueryDataTransferRequest<com.google.api.services.bigquerydatatransfer.v1.model.Empty> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/transferConfigs/[^/]+/runs/[^/]+$");

          /**
           * Deletes the specified transfer run.
           *
           * Create a request for the method "runs.delete".
           *
           * This request holds the parameters needed by the the bigquerydatatransfer server.  After setting
           * any optional parameters, call the {@link Delete#execute()} method to invoke the remote
           * operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The field will contain name of the resource requested, for example:
         *        `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or
         *        `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(BigQueryDataTransfer.this, "DELETE", REST_PATH, null, com.google.api.services.bigquerydatatransfer.v1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/transferConfigs/[^/]+/runs/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The field will contain name of the resource requested, for example:
           * `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or `projects/{project
           * _id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The field will contain name of the resource requested, for example:
         `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or
         `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The field will contain name of the resource requested, for example:
           * `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or `projects/{project
           * _id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/transferConfigs/[^/]+/runs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Returns information about the particular transfer run.
         *
         * Create a request for the method "runs.get".
         *
         * This request holds the parameters needed by the bigquerydatatransfer server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The field will contain name of the resource requested, for example:
         *        `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or
         *        `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends BigQueryDataTransferRequest<com.google.api.services.bigquerydatatransfer.v1.model.TransferRun> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/transferConfigs/[^/]+/runs/[^/]+$");

          /**
           * Returns information about the particular transfer run.
           *
           * Create a request for the method "runs.get".
           *
           * This request holds the parameters needed by the the bigquerydatatransfer server.  After setting
           * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           * <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The field will contain name of the resource requested, for example:
         *        `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or
         *        `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(BigQueryDataTransfer.this, "GET", REST_PATH, null, com.google.api.services.bigquerydatatransfer.v1.model.TransferRun.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/transferConfigs/[^/]+/runs/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The field will contain name of the resource requested, for example:
           * `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or `projects/{project
           * _id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The field will contain name of the resource requested, for example:
         `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or
         `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The field will contain name of the resource requested, for example:
           * `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or `projects/{project
           * _id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/transferConfigs/[^/]+/runs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Returns information about running and completed jobs.
         *
         * Create a request for the method "runs.list".
         *
         * This request holds the parameters needed by the bigquerydatatransfer server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of transfer configuration for which transfer runs should be retrieved. Format of
         *        transfer configuration resource name is:
         *        `projects/{project_id}/transferConfigs/{config_id}` or
         *        `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends BigQueryDataTransferRequest<com.google.api.services.bigquerydatatransfer.v1.model.ListTransferRunsResponse> {

          private static final String REST_PATH = "v1/{+parent}/runs";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/transferConfigs/[^/]+$");

          /**
           * Returns information about running and completed jobs.
           *
           * Create a request for the method "runs.list".
           *
           * This request holds the parameters needed by the the bigquerydatatransfer server.  After setting
           * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           * <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of transfer configuration for which transfer runs should be retrieved. Format of
         *        transfer configuration resource name is:
         *        `projects/{project_id}/transferConfigs/{config_id}` or
         *        `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(BigQueryDataTransfer.this, "GET", REST_PATH, null, com.google.api.services.bigquerydatatransfer.v1.model.ListTransferRunsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/transferConfigs/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of transfer configuration for which transfer runs should be retrieved.
           * Format of transfer configuration resource name is:
           * `projects/{project_id}/transferConfigs/{config_id}` or
           * `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of transfer configuration for which transfer runs should be retrieved. Format of
         transfer configuration resource name is: `projects/{project_id}/transferConfigs/{config_id}` or
         `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of transfer configuration for which transfer runs should be retrieved.
           * Format of transfer configuration resource name is:
           * `projects/{project_id}/transferConfigs/{config_id}` or
           * `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/transferConfigs/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Page size. The default page size is the maximum value of 1000 results. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Page size. The default page size is the maximum value of 1000 results.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** Page size. The default page size is the maximum value of 1000 results. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Pagination token, which can be used to request a specific page of
           * `ListTransferRunsRequest` list results. For multiple-page results,
           * `ListTransferRunsResponse` outputs a `next_page` token, which can be used as the
           * `page_token` value to request the next page of list results.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Pagination token, which can be used to request a specific page of `ListTransferRunsRequest` list
         results. For multiple-page results, `ListTransferRunsResponse` outputs a `next_page` token, which
         can be used as the `page_token` value to request the next page of list results.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Pagination token, which can be used to request a specific page of
           * `ListTransferRunsRequest` list results. For multiple-page results,
           * `ListTransferRunsResponse` outputs a `next_page` token, which can be used as the
           * `page_token` value to request the next page of list results.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          /** Indicates how run attempts are to be pulled. */
          @com.google.api.client.util.Key
          private java.lang.String runAttempt;

          /** Indicates how run attempts are to be pulled.
           */
          public java.lang.String getRunAttempt() {
            return runAttempt;
          }

          /** Indicates how run attempts are to be pulled. */
          public List setRunAttempt(java.lang.String runAttempt) {
            this.runAttempt = runAttempt;
            return this;
          }

          /** When specified, only transfer runs with requested states are returned. */
          @com.google.api.client.util.Key
          private java.util.List<java.lang.String> states;

          /** When specified, only transfer runs with requested states are returned.
           */
          public java.util.List<java.lang.String> getStates() {
            return states;
          }

          /** When specified, only transfer runs with requested states are returned. */
          public List setStates(java.util.List<java.lang.String> states) {
            this.states = states;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the TransferLogs collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code BigQueryDataTransfer bigquerydatatransfer = new BigQueryDataTransfer(...);}
         *   {@code BigQueryDataTransfer.TransferLogs.List request = bigquerydatatransfer.transferLogs().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public TransferLogs transferLogs() {
          return new TransferLogs();
        }

        /**
         * The "transferLogs" collection of methods.
         */
        public class TransferLogs {

          /**
           * Returns user facing log messages for the data transfer run.
           *
           * Create a request for the method "transferLogs.list".
           *
           * This request holds the parameters needed by the bigquerydatatransfer server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Transfer run name in the form:
           *        `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or
           *        `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends BigQueryDataTransferRequest<com.google.api.services.bigquerydatatransfer.v1.model.ListTransferLogsResponse> {

            private static final String REST_PATH = "v1/{+parent}/transferLogs";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/transferConfigs/[^/]+/runs/[^/]+$");

            /**
             * Returns user facing log messages for the data transfer run.
             *
             * Create a request for the method "transferLogs.list".
             *
             * This request holds the parameters needed by the the bigquerydatatransfer server.  After setting
             * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
             * <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Transfer run name in the form:
           *        `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or
           *        `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(BigQueryDataTransfer.this, "GET", REST_PATH, null, com.google.api.services.bigquerydatatransfer.v1.model.ListTransferLogsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/transferConfigs/[^/]+/runs/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Transfer run name in the form:
             * `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or `projects/{proje
             * ct_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Transfer run name in the form:
           `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or
           `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Transfer run name in the form:
             * `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or `projects/{proje
             * ct_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/transferConfigs/[^/]+/runs/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Message types to return. If not populated - INFO, WARNING and ERROR messages are
             * returned.
             */
            @com.google.api.client.util.Key
            private java.util.List<java.lang.String> messageTypes;

            /** Message types to return. If not populated - INFO, WARNING and ERROR messages are returned.
             */
            public java.util.List<java.lang.String> getMessageTypes() {
              return messageTypes;
            }

            /**
             * Message types to return. If not populated - INFO, WARNING and ERROR messages are
             * returned.
             */
            public List setMessageTypes(java.util.List<java.lang.String> messageTypes) {
              this.messageTypes = messageTypes;
              return this;
            }

            /** Page size. The default page size is the maximum value of 1000 results. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Page size. The default page size is the maximum value of 1000 results.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** Page size. The default page size is the maximum value of 1000 results. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * Pagination token, which can be used to request a specific page of
             * `ListTransferLogsRequest` list results. For multiple-page results,
             * `ListTransferLogsResponse` outputs a `next_page` token, which can be used as the
             * `page_token` value to request the next page of list results.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Pagination token, which can be used to request a specific page of `ListTransferLogsRequest` list
           results. For multiple-page results, `ListTransferLogsResponse` outputs a `next_page` token, which
           can be used as the `page_token` value to request the next page of list results.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * Pagination token, which can be used to request a specific page of
             * `ListTransferLogsRequest` list results. For multiple-page results,
             * `ListTransferLogsResponse` outputs a `next_page` token, which can be used as the
             * `page_token` value to request the next page of list results.
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

        }
      }
    }
  }

  /**
   * Builder for {@link BigQueryDataTransfer}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link BigQueryDataTransfer}. */
    @Override
    public BigQueryDataTransfer build() {
      return new BigQueryDataTransfer(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link BigQueryDataTransferRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setBigQueryDataTransferRequestInitializer(
        BigQueryDataTransferRequestInitializer bigquerydatatransferRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(bigquerydatatransferRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
