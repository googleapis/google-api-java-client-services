/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.analyticsdata.v1beta.model;

/**
 * If this report results is [sampled](https://support.google.com/analytics/answer/13331292), this
 * describes the percentage of events used in this report. Sampling is the practice of analyzing a
 * subset of all data in order to uncover the meaningful information in the larger data set.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Analytics Data API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class SamplingMetadata extends com.google.api.client.json.GenericJson {

  /**
   * The total number of events read in this sampled report for a date range. This is the size of
   * the subset this property's data that was analyzed in this report.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long samplesReadCount;

  /**
   * The total number of events present in this property's data that could have been analyzed in
   * this report for a date range. Sampling uncovers the meaningful information about the larger
   * data set, and this is the size of the larger data set. To calculate the percentage of available
   * data that was used in this report, compute `samplesReadCount/samplingSpaceSize`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long samplingSpaceSize;

  /**
   * The total number of events read in this sampled report for a date range. This is the size of
   * the subset this property's data that was analyzed in this report.
   * @return value or {@code null} for none
   */
  public java.lang.Long getSamplesReadCount() {
    return samplesReadCount;
  }

  /**
   * The total number of events read in this sampled report for a date range. This is the size of
   * the subset this property's data that was analyzed in this report.
   * @param samplesReadCount samplesReadCount or {@code null} for none
   */
  public SamplingMetadata setSamplesReadCount(java.lang.Long samplesReadCount) {
    this.samplesReadCount = samplesReadCount;
    return this;
  }

  /**
   * The total number of events present in this property's data that could have been analyzed in
   * this report for a date range. Sampling uncovers the meaningful information about the larger
   * data set, and this is the size of the larger data set. To calculate the percentage of available
   * data that was used in this report, compute `samplesReadCount/samplingSpaceSize`.
   * @return value or {@code null} for none
   */
  public java.lang.Long getSamplingSpaceSize() {
    return samplingSpaceSize;
  }

  /**
   * The total number of events present in this property's data that could have been analyzed in
   * this report for a date range. Sampling uncovers the meaningful information about the larger
   * data set, and this is the size of the larger data set. To calculate the percentage of available
   * data that was used in this report, compute `samplesReadCount/samplingSpaceSize`.
   * @param samplingSpaceSize samplingSpaceSize or {@code null} for none
   */
  public SamplingMetadata setSamplingSpaceSize(java.lang.Long samplingSpaceSize) {
    this.samplingSpaceSize = samplingSpaceSize;
    return this;
  }

  @Override
  public SamplingMetadata set(String fieldName, Object value) {
    return (SamplingMetadata) super.set(fieldName, value);
  }

  @Override
  public SamplingMetadata clone() {
    return (SamplingMetadata) super.clone();
  }

}
