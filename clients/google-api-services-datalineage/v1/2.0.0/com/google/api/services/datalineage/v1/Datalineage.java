/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.datalineage.v1;

/**
 * Service definition for Datalineage (v1).
 *
 * <p>
 * 
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/data-catalog" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link DatalineageRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Datalineage extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        (com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1))) ||
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION >= 2,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "2.0.0 of the Data Lineage API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://datalineage.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://datalineage.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Datalineage(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Datalineage(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Datalineage datalineage = new Datalineage(...);}
   *   {@code Datalineage.Projects.List request = datalineage.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the Locations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Datalineage datalineage = new Datalineage(...);}
     *   {@code Datalineage.Locations.List request = datalineage.locations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Locations locations() {
      return new Locations();
    }

    /**
     * The "locations" collection of methods.
     */
    public class Locations {

      /**
       * Retrieve information about LineageProcesses associated with specific links. LineageProcesses are
       * transformation pipelines that result in data flowing from **source** to **target** assets. Links
       * between assets represent this operation. If you have specific link names, you can use this method
       * to verify which LineageProcesses contribute to creating those links. See the SearchLinks method
       * for more information on how to retrieve link name. You can retrieve the LineageProcess
       * information in every project where you have the `datalineage.events.get` permission. The project
       * provided in the URL is used for Billing and Quota.
       *
       * Create a request for the method "locations.batchSearchLinkProcesses".
       *
       * This request holds the parameters needed by the datalineage server.  After setting any optional
       * parameters, call the {@link BatchSearchLinkProcesses#execute()} method to invoke the remote
       * operation.
       *
       * @param parent Required. The project and location where you want to search.
       * @param content the {@link com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1BatchSearchLinkProcessesRequest}
       * @return the request
       */
      public BatchSearchLinkProcesses batchSearchLinkProcesses(java.lang.String parent, com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1BatchSearchLinkProcessesRequest content) throws java.io.IOException {
        BatchSearchLinkProcesses result = new BatchSearchLinkProcesses(parent, content);
        initialize(result);
        return result;
      }

      public class BatchSearchLinkProcesses extends DatalineageRequest<com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1BatchSearchLinkProcessesResponse> {

        private static final String REST_PATH = "v1/{+parent}:batchSearchLinkProcesses";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

        /**
         * Retrieve information about LineageProcesses associated with specific links. LineageProcesses
         * are transformation pipelines that result in data flowing from **source** to **target** assets.
         * Links between assets represent this operation. If you have specific link names, you can use
         * this method to verify which LineageProcesses contribute to creating those links. See the
         * SearchLinks method for more information on how to retrieve link name. You can retrieve the
         * LineageProcess information in every project where you have the `datalineage.events.get`
         * permission. The project provided in the URL is used for Billing and Quota.
         *
         * Create a request for the method "locations.batchSearchLinkProcesses".
         *
         * This request holds the parameters needed by the the datalineage server.  After setting any
         * optional parameters, call the {@link BatchSearchLinkProcesses#execute()} method to invoke the
         * remote operation. <p> {@link BatchSearchLinkProcesses#initialize(com.google.api.client.googleap
         * is.services.AbstractGoogleClientRequest)} must be called to initialize this instance
         * immediately after invoking the constructor. </p>
         *
         * @param parent Required. The project and location where you want to search.
         * @param content the {@link com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1BatchSearchLinkProcessesRequest}
         * @since 1.13
         */
        protected BatchSearchLinkProcesses(java.lang.String parent, com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1BatchSearchLinkProcessesRequest content) {
          super(Datalineage.this, "POST", REST_PATH, content, com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1BatchSearchLinkProcessesResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
        }

        @Override
        public BatchSearchLinkProcesses set$Xgafv(java.lang.String $Xgafv) {
          return (BatchSearchLinkProcesses) super.set$Xgafv($Xgafv);
        }

        @Override
        public BatchSearchLinkProcesses setAccessToken(java.lang.String accessToken) {
          return (BatchSearchLinkProcesses) super.setAccessToken(accessToken);
        }

        @Override
        public BatchSearchLinkProcesses setAlt(java.lang.String alt) {
          return (BatchSearchLinkProcesses) super.setAlt(alt);
        }

        @Override
        public BatchSearchLinkProcesses setCallback(java.lang.String callback) {
          return (BatchSearchLinkProcesses) super.setCallback(callback);
        }

        @Override
        public BatchSearchLinkProcesses setFields(java.lang.String fields) {
          return (BatchSearchLinkProcesses) super.setFields(fields);
        }

        @Override
        public BatchSearchLinkProcesses setKey(java.lang.String key) {
          return (BatchSearchLinkProcesses) super.setKey(key);
        }

        @Override
        public BatchSearchLinkProcesses setOauthToken(java.lang.String oauthToken) {
          return (BatchSearchLinkProcesses) super.setOauthToken(oauthToken);
        }

        @Override
        public BatchSearchLinkProcesses setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (BatchSearchLinkProcesses) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public BatchSearchLinkProcesses setQuotaUser(java.lang.String quotaUser) {
          return (BatchSearchLinkProcesses) super.setQuotaUser(quotaUser);
        }

        @Override
        public BatchSearchLinkProcesses setUploadType(java.lang.String uploadType) {
          return (BatchSearchLinkProcesses) super.setUploadType(uploadType);
        }

        @Override
        public BatchSearchLinkProcesses setUploadProtocol(java.lang.String uploadProtocol) {
          return (BatchSearchLinkProcesses) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The project and location where you want to search. */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The project and location where you want to search.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. The project and location where you want to search. */
        public BatchSearchLinkProcesses setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public BatchSearchLinkProcesses set(String parameterName, Object value) {
          return (BatchSearchLinkProcesses) super.set(parameterName, value);
        }
      }
      /**
       * Retrieve a list of links connected to a specific asset. Links represent the data flow between
       * **source** (upstream) and **target** (downstream) assets in transformation pipelines. Links are
       * stored in the same project as the Lineage Events that create them. You can retrieve links in
       * every project where you have the `datalineage.events.get` permission. The project provided in the
       * URL is used for Billing and Quota.
       *
       * Create a request for the method "locations.searchLinks".
       *
       * This request holds the parameters needed by the datalineage server.  After setting any optional
       * parameters, call the {@link SearchLinks#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The project and location you want search in.
       * @param content the {@link com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1SearchLinksRequest}
       * @return the request
       */
      public SearchLinks searchLinks(java.lang.String parent, com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1SearchLinksRequest content) throws java.io.IOException {
        SearchLinks result = new SearchLinks(parent, content);
        initialize(result);
        return result;
      }

      public class SearchLinks extends DatalineageRequest<com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1SearchLinksResponse> {

        private static final String REST_PATH = "v1/{+parent}:searchLinks";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

        /**
         * Retrieve a list of links connected to a specific asset. Links represent the data flow between
         * **source** (upstream) and **target** (downstream) assets in transformation pipelines. Links are
         * stored in the same project as the Lineage Events that create them. You can retrieve links in
         * every project where you have the `datalineage.events.get` permission. The project provided in
         * the URL is used for Billing and Quota.
         *
         * Create a request for the method "locations.searchLinks".
         *
         * This request holds the parameters needed by the the datalineage server.  After setting any
         * optional parameters, call the {@link SearchLinks#execute()} method to invoke the remote
         * operation. <p> {@link
         * SearchLinks#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The project and location you want search in.
         * @param content the {@link com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1SearchLinksRequest}
         * @since 1.13
         */
        protected SearchLinks(java.lang.String parent, com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1SearchLinksRequest content) {
          super(Datalineage.this, "POST", REST_PATH, content, com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1SearchLinksResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
        }

        @Override
        public SearchLinks set$Xgafv(java.lang.String $Xgafv) {
          return (SearchLinks) super.set$Xgafv($Xgafv);
        }

        @Override
        public SearchLinks setAccessToken(java.lang.String accessToken) {
          return (SearchLinks) super.setAccessToken(accessToken);
        }

        @Override
        public SearchLinks setAlt(java.lang.String alt) {
          return (SearchLinks) super.setAlt(alt);
        }

        @Override
        public SearchLinks setCallback(java.lang.String callback) {
          return (SearchLinks) super.setCallback(callback);
        }

        @Override
        public SearchLinks setFields(java.lang.String fields) {
          return (SearchLinks) super.setFields(fields);
        }

        @Override
        public SearchLinks setKey(java.lang.String key) {
          return (SearchLinks) super.setKey(key);
        }

        @Override
        public SearchLinks setOauthToken(java.lang.String oauthToken) {
          return (SearchLinks) super.setOauthToken(oauthToken);
        }

        @Override
        public SearchLinks setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (SearchLinks) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public SearchLinks setQuotaUser(java.lang.String quotaUser) {
          return (SearchLinks) super.setQuotaUser(quotaUser);
        }

        @Override
        public SearchLinks setUploadType(java.lang.String uploadType) {
          return (SearchLinks) super.setUploadType(uploadType);
        }

        @Override
        public SearchLinks setUploadProtocol(java.lang.String uploadProtocol) {
          return (SearchLinks) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The project and location you want search in. */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The project and location you want search in.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. The project and location you want search in. */
        public SearchLinks setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public SearchLinks set(String parameterName, Object value) {
          return (SearchLinks) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Operations collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Datalineage datalineage = new Datalineage(...);}
       *   {@code Datalineage.Operations.List request = datalineage.operations().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Operations operations() {
        return new Operations();
      }

      /**
       * The "operations" collection of methods.
       */
      public class Operations {

        /**
         * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
         * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
         * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
         * methods to check whether the cancellation succeeded or whether the operation completed despite
         * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
         * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
         * `Code.CANCELLED`.
         *
         * Create a request for the method "operations.cancel".
         *
         * This request holds the parameters needed by the datalineage server.  After setting any optional
         * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource to be cancelled.
         * @param content the {@link com.google.api.services.datalineage.v1.model.GoogleLongrunningCancelOperationRequest}
         * @return the request
         */
        public Cancel cancel(java.lang.String name, com.google.api.services.datalineage.v1.model.GoogleLongrunningCancelOperationRequest content) throws java.io.IOException {
          Cancel result = new Cancel(name, content);
          initialize(result);
          return result;
        }

        public class Cancel extends DatalineageRequest<com.google.api.services.datalineage.v1.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v1/{+name}:cancel";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
           * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
           * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
           * methods to check whether the cancellation succeeded or whether the operation completed despite
           * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
           * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
           * `Code.CANCELLED`.
           *
           * Create a request for the method "operations.cancel".
           *
           * This request holds the parameters needed by the the datalineage server.  After setting any
           * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           * <p> {@link
           * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource to be cancelled.
           * @param content the {@link com.google.api.services.datalineage.v1.model.GoogleLongrunningCancelOperationRequest}
           * @since 1.13
           */
          protected Cancel(java.lang.String name, com.google.api.services.datalineage.v1.model.GoogleLongrunningCancelOperationRequest content) {
            super(Datalineage.this, "POST", REST_PATH, content, com.google.api.services.datalineage.v1.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public Cancel set$Xgafv(java.lang.String $Xgafv) {
            return (Cancel) super.set$Xgafv($Xgafv);
          }

          @Override
          public Cancel setAccessToken(java.lang.String accessToken) {
            return (Cancel) super.setAccessToken(accessToken);
          }

          @Override
          public Cancel setAlt(java.lang.String alt) {
            return (Cancel) super.setAlt(alt);
          }

          @Override
          public Cancel setCallback(java.lang.String callback) {
            return (Cancel) super.setCallback(callback);
          }

          @Override
          public Cancel setFields(java.lang.String fields) {
            return (Cancel) super.setFields(fields);
          }

          @Override
          public Cancel setKey(java.lang.String key) {
            return (Cancel) super.setKey(key);
          }

          @Override
          public Cancel setOauthToken(java.lang.String oauthToken) {
            return (Cancel) super.setOauthToken(oauthToken);
          }

          @Override
          public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Cancel) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Cancel setQuotaUser(java.lang.String quotaUser) {
            return (Cancel) super.setQuotaUser(quotaUser);
          }

          @Override
          public Cancel setUploadType(java.lang.String uploadType) {
            return (Cancel) super.setUploadType(uploadType);
          }

          @Override
          public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
            return (Cancel) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource to be cancelled. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource to be cancelled.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource to be cancelled. */
          public Cancel setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Cancel set(String parameterName, Object value) {
            return (Cancel) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a long-running operation. This method indicates that the client is no longer interested
         * in the operation result. It does not cancel the operation. If the server doesn't support this
         * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
         *
         * Create a request for the method "operations.delete".
         *
         * This request holds the parameters needed by the datalineage server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource to be deleted.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends DatalineageRequest<com.google.api.services.datalineage.v1.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Deletes a long-running operation. This method indicates that the client is no longer interested
           * in the operation result. It does not cancel the operation. If the server doesn't support this
           * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.delete".
           *
           * This request holds the parameters needed by the the datalineage server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource to be deleted.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Datalineage.this, "DELETE", REST_PATH, null, com.google.api.services.datalineage.v1.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource to be deleted. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource to be deleted.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource to be deleted. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets the latest state of a long-running operation. Clients can use this method to poll the
         * operation result at intervals as recommended by the API service.
         *
         * Create a request for the method "operations.get".
         *
         * This request holds the parameters needed by the datalineage server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends DatalineageRequest<com.google.api.services.datalineage.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the the datalineage server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Datalineage.this, "GET", REST_PATH, null, com.google.api.services.datalineage.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists operations that match the specified filter in the request. If the server doesn't support
         * this method, it returns `UNIMPLEMENTED`.
         *
         * Create a request for the method "operations.list".
         *
         * This request holds the parameters needed by the datalineage server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation's parent resource.
         * @return the request
         */
        public List list(java.lang.String name) throws java.io.IOException {
          List result = new List(name);
          initialize(result);
          return result;
        }

        public class List extends DatalineageRequest<com.google.api.services.datalineage.v1.model.GoogleLongrunningListOperationsResponse> {

          private static final String REST_PATH = "v1/{+name}/operations";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the the datalineage server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation's parent resource.
           * @since 1.13
           */
          protected List(java.lang.String name) {
            super(Datalineage.this, "GET", REST_PATH, null, com.google.api.services.datalineage.v1.model.GoogleLongrunningListOperationsResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation's parent resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation's parent resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation's parent resource. */
          public List setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** The standard list filter. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** The standard list filter.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** The standard list filter. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** The standard list page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The standard list page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The standard list page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The standard list page token. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The standard list page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The standard list page token. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Processes collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Datalineage datalineage = new Datalineage(...);}
       *   {@code Datalineage.Processes.List request = datalineage.processes().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Processes processes() {
        return new Processes();
      }

      /**
       * The "processes" collection of methods.
       */
      public class Processes {

        /**
         * Creates a new process.
         *
         * Create a request for the method "processes.create".
         *
         * This request holds the parameters needed by the datalineage server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the project and its location that should own the process.
         * @param content the {@link com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1Process}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1Process content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends DatalineageRequest<com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1Process> {

          private static final String REST_PATH = "v1/{+parent}/processes";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a new process.
           *
           * Create a request for the method "processes.create".
           *
           * This request holds the parameters needed by the the datalineage server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the project and its location that should own the process.
           * @param content the {@link com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1Process}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1Process content) {
            super(Datalineage.this, "POST", REST_PATH, content, com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1Process.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The name of the project and its location that should own the process. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the project and its location that should own the process.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The name of the project and its location that should own the process. */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * A unique identifier for this request. Restricted to 36 ASCII characters. A random UUID
           * is recommended. This request is idempotent only if a `request_id` is provided.
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** A unique identifier for this request. Restricted to 36 ASCII characters. A random UUID is
         recommended. This request is idempotent only if a `request_id` is provided.
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * A unique identifier for this request. Restricted to 36 ASCII characters. A random UUID
           * is recommended. This request is idempotent only if a `request_id` is provided.
           */
          public Create setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes the process with the specified name.
         *
         * Create a request for the method "processes.delete".
         *
         * This request holds the parameters needed by the datalineage server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the process to delete.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends DatalineageRequest<com.google.api.services.datalineage.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/processes/[^/]+$");

          /**
           * Deletes the process with the specified name.
           *
           * Create a request for the method "processes.delete".
           *
           * This request holds the parameters needed by the the datalineage server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the process to delete.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Datalineage.this, "DELETE", REST_PATH, null, com.google.api.services.datalineage.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/processes/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The name of the process to delete. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the process to delete.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The name of the process to delete. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/processes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * If set to true and the process is not found, the request succeeds but the server
           * doesn't perform any actions.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean allowMissing;

          /** If set to true and the process is not found, the request succeeds but the server doesn't perform
         any actions.
           */
          public java.lang.Boolean getAllowMissing() {
            return allowMissing;
          }

          /**
           * If set to true and the process is not found, the request succeeds but the server
           * doesn't perform any actions.
           */
          public Delete setAllowMissing(java.lang.Boolean allowMissing) {
            this.allowMissing = allowMissing;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets the details of the specified process.
         *
         * Create a request for the method "processes.get".
         *
         * This request holds the parameters needed by the datalineage server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the process to get.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends DatalineageRequest<com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1Process> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/processes/[^/]+$");

          /**
           * Gets the details of the specified process.
           *
           * Create a request for the method "processes.get".
           *
           * This request holds the parameters needed by the the datalineage server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the process to get.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Datalineage.this, "GET", REST_PATH, null, com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1Process.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/processes/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The name of the process to get. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the process to get.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The name of the process to get. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/processes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * List processes in the given project and location. List order is descending by insertion time.
         *
         * Create a request for the method "processes.list".
         *
         * This request holds the parameters needed by the datalineage server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the project and its location that owns this collection of processes.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends DatalineageRequest<com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1ListProcessesResponse> {

          private static final String REST_PATH = "v1/{+parent}/processes";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * List processes in the given project and location. List order is descending by insertion time.
           *
           * Create a request for the method "processes.list".
           *
           * This request holds the parameters needed by the the datalineage server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the project and its location that owns this collection of processes.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Datalineage.this, "GET", REST_PATH, null, com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1ListProcessesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the project and its location that owns this collection of
           * processes.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the project and its location that owns this collection of processes.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the project and its location that owns this collection of
           * processes.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * The maximum number of processes to return. The service may return fewer than this
           * value. If unspecified, at most 50 processes are returned. The maximum value is 100;
           * values greater than 100 are cut to 100.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of processes to return. The service may return fewer than this value. If
         unspecified, at most 50 processes are returned. The maximum value is 100; values greater than 100
         are cut to 100.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * The maximum number of processes to return. The service may return fewer than this
           * value. If unspecified, at most 50 processes are returned. The maximum value is 100;
           * values greater than 100 are cut to 100.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * The page token received from a previous `ListProcesses` call. Specify it to get the
           * next page. When paginating, all other parameters specified in this call must match the
           * parameters of the call that provided the page token.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The page token received from a previous `ListProcesses` call. Specify it to get the next page. When
         paginating, all other parameters specified in this call must match the parameters of the call that
         provided the page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * The page token received from a previous `ListProcesses` call. Specify it to get the
           * next page. When paginating, all other parameters specified in this call must match the
           * parameters of the call that provided the page token.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates a process.
         *
         * Create a request for the method "processes.patch".
         *
         * This request holds the parameters needed by the datalineage server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Immutable. The resource name of the lineage process. Format:
         *        `projects/{project}/locations/{location}/processes/{process}`. Can be specified or auto-
         *        assigned. {process} must be not longer than 200 characters and only contain characters in
         *        a set: `a-zA-Z0-9_-:.`
         * @param content the {@link com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1Process}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1Process content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends DatalineageRequest<com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1Process> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/processes/[^/]+$");

          /**
           * Updates a process.
           *
           * Create a request for the method "processes.patch".
           *
           * This request holds the parameters needed by the the datalineage server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Immutable. The resource name of the lineage process. Format:
         *        `projects/{project}/locations/{location}/processes/{process}`. Can be specified or auto-
         *        assigned. {process} must be not longer than 200 characters and only contain characters in
         *        a set: `a-zA-Z0-9_-:.`
           * @param content the {@link com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1Process}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1Process content) {
            super(Datalineage.this, "PATCH", REST_PATH, content, com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1Process.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/processes/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Immutable. The resource name of the lineage process. Format:
           * `projects/{project}/locations/{location}/processes/{process}`. Can be specified or
           * auto-assigned. {process} must be not longer than 200 characters and only contain
           * characters in a set: `a-zA-Z0-9_-:.`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Immutable. The resource name of the lineage process. Format:
         `projects/{project}/locations/{location}/processes/{process}`. Can be specified or auto-assigned.
         {process} must be not longer than 200 characters and only contain characters in a set:
         `a-zA-Z0-9_-:.`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Immutable. The resource name of the lineage process. Format:
           * `projects/{project}/locations/{location}/processes/{process}`. Can be specified or
           * auto-assigned. {process} must be not longer than 200 characters and only contain
           * characters in a set: `a-zA-Z0-9_-:.`
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/processes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** If set to true and the process is not found, the request inserts it. */
          @com.google.api.client.util.Key
          private java.lang.Boolean allowMissing;

          /** If set to true and the process is not found, the request inserts it.
           */
          public java.lang.Boolean getAllowMissing() {
            return allowMissing;
          }

          /** If set to true and the process is not found, the request inserts it. */
          public Patch setAllowMissing(java.lang.Boolean allowMissing) {
            this.allowMissing = allowMissing;
            return this;
          }

          /** The list of fields to update. Currently not used. The whole message is updated. */
          @com.google.api.client.util.Key
          private String updateMask;

          /** The list of fields to update. Currently not used. The whole message is updated.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /** The list of fields to update. Currently not used. The whole message is updated. */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Runs collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Datalineage datalineage = new Datalineage(...);}
         *   {@code Datalineage.Runs.List request = datalineage.runs().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Runs runs() {
          return new Runs();
        }

        /**
         * The "runs" collection of methods.
         */
        public class Runs {

          /**
           * Creates a new run.
           *
           * Create a request for the method "runs.create".
           *
           * This request holds the parameters needed by the datalineage server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The name of the process that should own the run.
           * @param content the {@link com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1Run}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1Run content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends DatalineageRequest<com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1Run> {

            private static final String REST_PATH = "v1/{+parent}/runs";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/processes/[^/]+$");

            /**
             * Creates a new run.
             *
             * Create a request for the method "runs.create".
             *
             * This request holds the parameters needed by the the datalineage server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The name of the process that should own the run.
             * @param content the {@link com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1Run}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1Run content) {
              super(Datalineage.this, "POST", REST_PATH, content, com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1Run.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/processes/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The name of the process that should own the run. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The name of the process that should own the run.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. The name of the process that should own the run. */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/processes/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * A unique identifier for this request. Restricted to 36 ASCII characters. A random
             * UUID is recommended. This request is idempotent only if a `request_id` is provided.
             */
            @com.google.api.client.util.Key
            private java.lang.String requestId;

            /** A unique identifier for this request. Restricted to 36 ASCII characters. A random UUID is
           recommended. This request is idempotent only if a `request_id` is provided.
             */
            public java.lang.String getRequestId() {
              return requestId;
            }

            /**
             * A unique identifier for this request. Restricted to 36 ASCII characters. A random
             * UUID is recommended. This request is idempotent only if a `request_id` is provided.
             */
            public Create setRequestId(java.lang.String requestId) {
              this.requestId = requestId;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes the run with the specified name.
           *
           * Create a request for the method "runs.delete".
           *
           * This request holds the parameters needed by the datalineage server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the run to delete.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends DatalineageRequest<com.google.api.services.datalineage.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/processes/[^/]+/runs/[^/]+$");

            /**
             * Deletes the run with the specified name.
             *
             * Create a request for the method "runs.delete".
             *
             * This request holds the parameters needed by the the datalineage server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the run to delete.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Datalineage.this, "DELETE", REST_PATH, null, com.google.api.services.datalineage.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/processes/[^/]+/runs/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The name of the run to delete. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the run to delete.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. The name of the run to delete. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/processes/[^/]+/runs/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * If set to true and the run is not found, the request succeeds but the server doesn't
             * perform any actions.
             */
            @com.google.api.client.util.Key
            private java.lang.Boolean allowMissing;

            /** If set to true and the run is not found, the request succeeds but the server doesn't perform any
           actions.
             */
            public java.lang.Boolean getAllowMissing() {
              return allowMissing;
            }

            /**
             * If set to true and the run is not found, the request succeeds but the server doesn't
             * perform any actions.
             */
            public Delete setAllowMissing(java.lang.Boolean allowMissing) {
              this.allowMissing = allowMissing;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets the details of the specified run.
           *
           * Create a request for the method "runs.get".
           *
           * This request holds the parameters needed by the datalineage server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the run to get.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends DatalineageRequest<com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1Run> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/processes/[^/]+/runs/[^/]+$");

            /**
             * Gets the details of the specified run.
             *
             * Create a request for the method "runs.get".
             *
             * This request holds the parameters needed by the the datalineage server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the run to get.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Datalineage.this, "GET", REST_PATH, null, com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1Run.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/processes/[^/]+/runs/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The name of the run to get. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the run to get.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. The name of the run to get. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/processes/[^/]+/runs/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists runs in the given project and location. List order is descending by `start_time`.
           *
           * Create a request for the method "runs.list".
           *
           * This request holds the parameters needed by the datalineage server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The name of process that owns this collection of runs.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends DatalineageRequest<com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1ListRunsResponse> {

            private static final String REST_PATH = "v1/{+parent}/runs";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/processes/[^/]+$");

            /**
             * Lists runs in the given project and location. List order is descending by `start_time`.
             *
             * Create a request for the method "runs.list".
             *
             * This request holds the parameters needed by the the datalineage server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The name of process that owns this collection of runs.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Datalineage.this, "GET", REST_PATH, null, com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1ListRunsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/processes/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The name of process that owns this collection of runs. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The name of process that owns this collection of runs.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. The name of process that owns this collection of runs. */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/processes/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * The maximum number of runs to return. The service may return fewer than this value.
             * If unspecified, at most 50 runs are returned. The maximum value is 100; values
             * greater than 100 are cut to 100.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The maximum number of runs to return. The service may return fewer than this value. If unspecified,
           at most 50 runs are returned. The maximum value is 100; values greater than 100 are cut to 100.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * The maximum number of runs to return. The service may return fewer than this value.
             * If unspecified, at most 50 runs are returned. The maximum value is 100; values
             * greater than 100 are cut to 100.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * The page token received from a previous `ListRuns` call. Specify it to get the next
             * page. When paginating, all other parameters specified in this call must match the
             * parameters of the call that provided the page token.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The page token received from a previous `ListRuns` call. Specify it to get the next page. When
           paginating, all other parameters specified in this call must match the parameters of the call that
           provided the page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * The page token received from a previous `ListRuns` call. Specify it to get the next
             * page. When paginating, all other parameters specified in this call must match the
             * parameters of the call that provided the page token.
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates a run.
           *
           * Create a request for the method "runs.patch".
           *
           * This request holds the parameters needed by the datalineage server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Immutable. The resource name of the run. Format:
           *        `projects/{project}/locations/{location}/processes/{process}/runs/{run}`. Can be specified
           *        or auto-assigned. {run} must be not longer than 200 characters and only contain characters
           *        in a set: `a-zA-Z0-9_-:.`
           * @param content the {@link com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1Run}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1Run content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends DatalineageRequest<com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1Run> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/processes/[^/]+/runs/[^/]+$");

            /**
             * Updates a run.
             *
             * Create a request for the method "runs.patch".
             *
             * This request holds the parameters needed by the the datalineage server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Immutable. The resource name of the run. Format:
           *        `projects/{project}/locations/{location}/processes/{process}/runs/{run}`. Can be specified
           *        or auto-assigned. {run} must be not longer than 200 characters and only contain characters
           *        in a set: `a-zA-Z0-9_-:.`
             * @param content the {@link com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1Run}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1Run content) {
              super(Datalineage.this, "PATCH", REST_PATH, content, com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1Run.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/processes/[^/]+/runs/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Immutable. The resource name of the run. Format:
             * `projects/{project}/locations/{location}/processes/{process}/runs/{run}`. Can be
             * specified or auto-assigned. {run} must be not longer than 200 characters and only
             * contain characters in a set: `a-zA-Z0-9_-:.`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Immutable. The resource name of the run. Format:
           `projects/{project}/locations/{location}/processes/{process}/runs/{run}`. Can be specified or auto-
           assigned. {run} must be not longer than 200 characters and only contain characters in a set:
           `a-zA-Z0-9_-:.`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Immutable. The resource name of the run. Format:
             * `projects/{project}/locations/{location}/processes/{process}/runs/{run}`. Can be
             * specified or auto-assigned. {run} must be not longer than 200 characters and only
             * contain characters in a set: `a-zA-Z0-9_-:.`
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/processes/[^/]+/runs/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** If set to true and the run is not found, the request creates it. */
            @com.google.api.client.util.Key
            private java.lang.Boolean allowMissing;

            /** If set to true and the run is not found, the request creates it.
             */
            public java.lang.Boolean getAllowMissing() {
              return allowMissing;
            }

            /** If set to true and the run is not found, the request creates it. */
            public Patch setAllowMissing(java.lang.Boolean allowMissing) {
              this.allowMissing = allowMissing;
              return this;
            }

            /** The list of fields to update. Currently not used. The whole message is updated. */
            @com.google.api.client.util.Key
            private String updateMask;

            /** The list of fields to update. Currently not used. The whole message is updated.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /** The list of fields to update. Currently not used. The whole message is updated. */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the LineageEvents collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Datalineage datalineage = new Datalineage(...);}
           *   {@code Datalineage.LineageEvents.List request = datalineage.lineageEvents().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public LineageEvents lineageEvents() {
            return new LineageEvents();
          }

          /**
           * The "lineageEvents" collection of methods.
           */
          public class LineageEvents {

            /**
             * Creates a new lineage event.
             *
             * Create a request for the method "lineageEvents.create".
             *
             * This request holds the parameters needed by the datalineage server.  After setting any optional
             * parameters, call the {@link Create#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The name of the run that should own the lineage event.
             * @param content the {@link com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1LineageEvent}
             * @return the request
             */
            public Create create(java.lang.String parent, com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1LineageEvent content) throws java.io.IOException {
              Create result = new Create(parent, content);
              initialize(result);
              return result;
            }

            public class Create extends DatalineageRequest<com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1LineageEvent> {

              private static final String REST_PATH = "v1/{+parent}/lineageEvents";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/processes/[^/]+/runs/[^/]+$");

              /**
               * Creates a new lineage event.
               *
               * Create a request for the method "lineageEvents.create".
               *
               * This request holds the parameters needed by the the datalineage server.  After setting any
               * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
               * <p> {@link
               * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The name of the run that should own the lineage event.
               * @param content the {@link com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1LineageEvent}
               * @since 1.13
               */
              protected Create(java.lang.String parent, com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1LineageEvent content) {
                super(Datalineage.this, "POST", REST_PATH, content, com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1LineageEvent.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/processes/[^/]+/runs/[^/]+$");
                }
              }

              @Override
              public Create set$Xgafv(java.lang.String $Xgafv) {
                return (Create) super.set$Xgafv($Xgafv);
              }

              @Override
              public Create setAccessToken(java.lang.String accessToken) {
                return (Create) super.setAccessToken(accessToken);
              }

              @Override
              public Create setAlt(java.lang.String alt) {
                return (Create) super.setAlt(alt);
              }

              @Override
              public Create setCallback(java.lang.String callback) {
                return (Create) super.setCallback(callback);
              }

              @Override
              public Create setFields(java.lang.String fields) {
                return (Create) super.setFields(fields);
              }

              @Override
              public Create setKey(java.lang.String key) {
                return (Create) super.setKey(key);
              }

              @Override
              public Create setOauthToken(java.lang.String oauthToken) {
                return (Create) super.setOauthToken(oauthToken);
              }

              @Override
              public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Create) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Create setQuotaUser(java.lang.String quotaUser) {
                return (Create) super.setQuotaUser(quotaUser);
              }

              @Override
              public Create setUploadType(java.lang.String uploadType) {
                return (Create) super.setUploadType(uploadType);
              }

              @Override
              public Create setUploadProtocol(java.lang.String uploadProtocol) {
                return (Create) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The name of the run that should own the lineage event. */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The name of the run that should own the lineage event.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /** Required. The name of the run that should own the lineage event. */
              public Create setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/processes/[^/]+/runs/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * A unique identifier for this request. Restricted to 36 ASCII characters. A random
               * UUID is recommended. This request is idempotent only if a `request_id` is provided.
               */
              @com.google.api.client.util.Key
              private java.lang.String requestId;

              /** A unique identifier for this request. Restricted to 36 ASCII characters. A random UUID is
             recommended. This request is idempotent only if a `request_id` is provided.
               */
              public java.lang.String getRequestId() {
                return requestId;
              }

              /**
               * A unique identifier for this request. Restricted to 36 ASCII characters. A random
               * UUID is recommended. This request is idempotent only if a `request_id` is provided.
               */
              public Create setRequestId(java.lang.String requestId) {
                this.requestId = requestId;
                return this;
              }

              @Override
              public Create set(String parameterName, Object value) {
                return (Create) super.set(parameterName, value);
              }
            }
            /**
             * Deletes the lineage event with the specified name.
             *
             * Create a request for the method "lineageEvents.delete".
             *
             * This request holds the parameters needed by the datalineage server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param name Required. The name of the lineage event to delete.
             * @return the request
             */
            public Delete delete(java.lang.String name) throws java.io.IOException {
              Delete result = new Delete(name);
              initialize(result);
              return result;
            }

            public class Delete extends DatalineageRequest<com.google.api.services.datalineage.v1.model.GoogleProtobufEmpty> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/processes/[^/]+/runs/[^/]+/lineageEvents/[^/]+$");

              /**
               * Deletes the lineage event with the specified name.
               *
               * Create a request for the method "lineageEvents.delete".
               *
               * This request holds the parameters needed by the the datalineage server.  After setting any
               * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               * <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the lineage event to delete.
               * @since 1.13
               */
              protected Delete(java.lang.String name) {
                super(Datalineage.this, "DELETE", REST_PATH, null, com.google.api.services.datalineage.v1.model.GoogleProtobufEmpty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/processes/[^/]+/runs/[^/]+/lineageEvents/[^/]+$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The name of the lineage event to delete. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the lineage event to delete.
               */
              public java.lang.String getName() {
                return name;
              }

              /** Required. The name of the lineage event to delete. */
              public Delete setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/processes/[^/]+/runs/[^/]+/lineageEvents/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * If set to true and the lineage event is not found, the request succeeds but the
               * server doesn't perform any actions.
               */
              @com.google.api.client.util.Key
              private java.lang.Boolean allowMissing;

              /** If set to true and the lineage event is not found, the request succeeds but the server doesn't
             perform any actions.
               */
              public java.lang.Boolean getAllowMissing() {
                return allowMissing;
              }

              /**
               * If set to true and the lineage event is not found, the request succeeds but the
               * server doesn't perform any actions.
               */
              public Delete setAllowMissing(java.lang.Boolean allowMissing) {
                this.allowMissing = allowMissing;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * Gets details of a specified lineage event.
             *
             * Create a request for the method "lineageEvents.get".
             *
             * This request holds the parameters needed by the datalineage server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name Required. The name of the lineage event to get.
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends DatalineageRequest<com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1LineageEvent> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/processes/[^/]+/runs/[^/]+/lineageEvents/[^/]+$");

              /**
               * Gets details of a specified lineage event.
               *
               * Create a request for the method "lineageEvents.get".
               *
               * This request holds the parameters needed by the the datalineage server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the lineage event to get.
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(Datalineage.this, "GET", REST_PATH, null, com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1LineageEvent.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/processes/[^/]+/runs/[^/]+/lineageEvents/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The name of the lineage event to get. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the lineage event to get.
               */
              public java.lang.String getName() {
                return name;
              }

              /** Required. The name of the lineage event to get. */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/processes/[^/]+/runs/[^/]+/lineageEvents/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Lists lineage events in the given project and location. The list order is not defined.
             *
             * Create a request for the method "lineageEvents.list".
             *
             * This request holds the parameters needed by the datalineage server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The name of the run that owns the collection of lineage events to get.
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends DatalineageRequest<com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1ListLineageEventsResponse> {

              private static final String REST_PATH = "v1/{+parent}/lineageEvents";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/processes/[^/]+/runs/[^/]+$");

              /**
               * Lists lineage events in the given project and location. The list order is not defined.
               *
               * Create a request for the method "lineageEvents.list".
               *
               * This request holds the parameters needed by the the datalineage server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The name of the run that owns the collection of lineage events to get.
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(Datalineage.this, "GET", REST_PATH, null, com.google.api.services.datalineage.v1.model.GoogleCloudDatacatalogLineageV1ListLineageEventsResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/processes/[^/]+/runs/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the run that owns the collection of lineage events to get.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The name of the run that owns the collection of lineage events to get.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The name of the run that owns the collection of lineage events to get.
               */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/processes/[^/]+/runs/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * The maximum number of lineage events to return. The service may return fewer events
               * than this value. If unspecified, at most 50 events are returned. The maximum value
               * is 100; values greater than 100 are cut to 100.
               */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** The maximum number of lineage events to return. The service may return fewer events than this
             value. If unspecified, at most 50 events are returned. The maximum value is 100; values greater
             than 100 are cut to 100.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /**
               * The maximum number of lineage events to return. The service may return fewer events
               * than this value. If unspecified, at most 50 events are returned. The maximum value
               * is 100; values greater than 100 are cut to 100.
               */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /**
               * The page token received from a previous `ListLineageEvents` call. Specify it to get
               * the next page. When paginating, all other parameters specified in this call must
               * match the parameters of the call that provided the page token.
               */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** The page token received from a previous `ListLineageEvents` call. Specify it to get the next page.
             When paginating, all other parameters specified in this call must match the parameters of the call
             that provided the page token.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /**
               * The page token received from a previous `ListLineageEvents` call. Specify it to get
               * the next page. When paginating, all other parameters specified in this call must
               * match the parameters of the call that provided the page token.
               */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }

          }
        }
      }
    }
  }

  /**
   * Builder for {@link Datalineage}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link Datalineage}. */
    @Override
    public Datalineage build() {
      return new Datalineage(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link DatalineageRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setDatalineageRequestInitializer(
        DatalineageRequestInitializer datalineageRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(datalineageRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
