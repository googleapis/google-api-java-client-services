/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudsearch.v1.model;

/**
 * Quote metadata: go/message-quoting-be-dd-v2. This proto is only used on the read path. For the
 * request proto, refer to `QuotedMessagePayload`. Fields are either derived from storage directly
 * from the Item this metadata belongs to, or is hydrated at read time from another Item read. Note:
 * QuotedMessageMetadata proto is similar to Message proto with less field. Reasons to differtiate
 * QuotedMessageMetadata from Message are: 1. Not all fields for original message is applicable for
 * quoted message. (E.g. reactions, is_inline_reply, etc.), thus separting out for confusion. 2. We
 * don't support nested message quoting. For more detailed discussion, please see
 * http://shortn/_VsSXQb2C7P. For future reference: if your new feature/field will be supported in
 * message quoting feature (go/chat-quoting-prd), you will need to add that field within
 * QuotedMessageMetadata
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Search API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class QuotedMessageMetadata extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Snapshot of the annotations of the quoted message.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Annotation> annotations;

  static {
    // hack to force ProGuard to consider Annotation used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(Annotation.class);
  }

  /**
   * Output only. Custom display profile info for apps. Will be empty for real users.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AppsDynamiteSharedAppProfile appProfile;

  /**
   * Output only. The bot attachment state of the quoted message. Used by clients to display a bot
   * attachment indicator in the UI.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String botAttachmentState;

  /**
   * Output only. Time when the quoted message was posted in microseconds.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long createTimeMicros;

  /**
   * Output only. ID of the User who posted the quoted message. This includes information to
   * identify if the quoted message was posted by an App on behalf of a user.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private UserId creatorId;

  /**
   * Output only. Time when the quoted message was last edited by a user at the time when quoting
   * action happens. Time is in microseconds.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long lastEditTimeMicros;

  /**
   * The `last_update_time` of the original message when the client initiated the quote creation.
   * This is derived from the request payload passed from clients. Used to fetch the quoted message
   * contents at a specific time on the read path. This field is populated from storage directly.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long lastUpdateTimeWhenQuotedMicros;

  /**
   * MessageId of the original message that is being quoted. This is derived from the request
   * payload passed from clients. This field is populated from storage directly.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private MessageId messageId;

  /**
   * Output only. The state of the quoted message. Used by clients to display tombstones for quotes
   * that reference a deleted message.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String messageState;

  /**
   * Output only. The retention (OTR) settings of the quoted message.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AppsDynamiteSharedRetentionSettings retentionSettings;

  /**
   * Output only. Snapshot of the text body of the quoted message.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String textBody;

  /**
   * Output only. ID of the User who last updated (created/edited/deleted) the quoted message at the
   * time when quoting action happens. This includes information to identify if the quoted message
   * was posted by an App on behalf of a user.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private UserId updaterId;

  /**
   * Output only. Upload metadata of the quoted message.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<UploadMetadata> uploadMetadata;

  /**
   * Output only. Snapshot of the annotations of the quoted message.
   * @return value or {@code null} for none
   */
  public java.util.List<Annotation> getAnnotations() {
    return annotations;
  }

  /**
   * Output only. Snapshot of the annotations of the quoted message.
   * @param annotations annotations or {@code null} for none
   */
  public QuotedMessageMetadata setAnnotations(java.util.List<Annotation> annotations) {
    this.annotations = annotations;
    return this;
  }

  /**
   * Output only. Custom display profile info for apps. Will be empty for real users.
   * @return value or {@code null} for none
   */
  public AppsDynamiteSharedAppProfile getAppProfile() {
    return appProfile;
  }

  /**
   * Output only. Custom display profile info for apps. Will be empty for real users.
   * @param appProfile appProfile or {@code null} for none
   */
  public QuotedMessageMetadata setAppProfile(AppsDynamiteSharedAppProfile appProfile) {
    this.appProfile = appProfile;
    return this;
  }

  /**
   * Output only. The bot attachment state of the quoted message. Used by clients to display a bot
   * attachment indicator in the UI.
   * @return value or {@code null} for none
   */
  public java.lang.String getBotAttachmentState() {
    return botAttachmentState;
  }

  /**
   * Output only. The bot attachment state of the quoted message. Used by clients to display a bot
   * attachment indicator in the UI.
   * @param botAttachmentState botAttachmentState or {@code null} for none
   */
  public QuotedMessageMetadata setBotAttachmentState(java.lang.String botAttachmentState) {
    this.botAttachmentState = botAttachmentState;
    return this;
  }

  /**
   * Output only. Time when the quoted message was posted in microseconds.
   * @return value or {@code null} for none
   */
  public java.lang.Long getCreateTimeMicros() {
    return createTimeMicros;
  }

  /**
   * Output only. Time when the quoted message was posted in microseconds.
   * @param createTimeMicros createTimeMicros or {@code null} for none
   */
  public QuotedMessageMetadata setCreateTimeMicros(java.lang.Long createTimeMicros) {
    this.createTimeMicros = createTimeMicros;
    return this;
  }

  /**
   * Output only. ID of the User who posted the quoted message. This includes information to
   * identify if the quoted message was posted by an App on behalf of a user.
   * @return value or {@code null} for none
   */
  public UserId getCreatorId() {
    return creatorId;
  }

  /**
   * Output only. ID of the User who posted the quoted message. This includes information to
   * identify if the quoted message was posted by an App on behalf of a user.
   * @param creatorId creatorId or {@code null} for none
   */
  public QuotedMessageMetadata setCreatorId(UserId creatorId) {
    this.creatorId = creatorId;
    return this;
  }

  /**
   * Output only. Time when the quoted message was last edited by a user at the time when quoting
   * action happens. Time is in microseconds.
   * @return value or {@code null} for none
   */
  public java.lang.Long getLastEditTimeMicros() {
    return lastEditTimeMicros;
  }

  /**
   * Output only. Time when the quoted message was last edited by a user at the time when quoting
   * action happens. Time is in microseconds.
   * @param lastEditTimeMicros lastEditTimeMicros or {@code null} for none
   */
  public QuotedMessageMetadata setLastEditTimeMicros(java.lang.Long lastEditTimeMicros) {
    this.lastEditTimeMicros = lastEditTimeMicros;
    return this;
  }

  /**
   * The `last_update_time` of the original message when the client initiated the quote creation.
   * This is derived from the request payload passed from clients. Used to fetch the quoted message
   * contents at a specific time on the read path. This field is populated from storage directly.
   * @return value or {@code null} for none
   */
  public java.lang.Long getLastUpdateTimeWhenQuotedMicros() {
    return lastUpdateTimeWhenQuotedMicros;
  }

  /**
   * The `last_update_time` of the original message when the client initiated the quote creation.
   * This is derived from the request payload passed from clients. Used to fetch the quoted message
   * contents at a specific time on the read path. This field is populated from storage directly.
   * @param lastUpdateTimeWhenQuotedMicros lastUpdateTimeWhenQuotedMicros or {@code null} for none
   */
  public QuotedMessageMetadata setLastUpdateTimeWhenQuotedMicros(java.lang.Long lastUpdateTimeWhenQuotedMicros) {
    this.lastUpdateTimeWhenQuotedMicros = lastUpdateTimeWhenQuotedMicros;
    return this;
  }

  /**
   * MessageId of the original message that is being quoted. This is derived from the request
   * payload passed from clients. This field is populated from storage directly.
   * @return value or {@code null} for none
   */
  public MessageId getMessageId() {
    return messageId;
  }

  /**
   * MessageId of the original message that is being quoted. This is derived from the request
   * payload passed from clients. This field is populated from storage directly.
   * @param messageId messageId or {@code null} for none
   */
  public QuotedMessageMetadata setMessageId(MessageId messageId) {
    this.messageId = messageId;
    return this;
  }

  /**
   * Output only. The state of the quoted message. Used by clients to display tombstones for quotes
   * that reference a deleted message.
   * @return value or {@code null} for none
   */
  public java.lang.String getMessageState() {
    return messageState;
  }

  /**
   * Output only. The state of the quoted message. Used by clients to display tombstones for quotes
   * that reference a deleted message.
   * @param messageState messageState or {@code null} for none
   */
  public QuotedMessageMetadata setMessageState(java.lang.String messageState) {
    this.messageState = messageState;
    return this;
  }

  /**
   * Output only. The retention (OTR) settings of the quoted message.
   * @return value or {@code null} for none
   */
  public AppsDynamiteSharedRetentionSettings getRetentionSettings() {
    return retentionSettings;
  }

  /**
   * Output only. The retention (OTR) settings of the quoted message.
   * @param retentionSettings retentionSettings or {@code null} for none
   */
  public QuotedMessageMetadata setRetentionSettings(AppsDynamiteSharedRetentionSettings retentionSettings) {
    this.retentionSettings = retentionSettings;
    return this;
  }

  /**
   * Output only. Snapshot of the text body of the quoted message.
   * @return value or {@code null} for none
   */
  public java.lang.String getTextBody() {
    return textBody;
  }

  /**
   * Output only. Snapshot of the text body of the quoted message.
   * @param textBody textBody or {@code null} for none
   */
  public QuotedMessageMetadata setTextBody(java.lang.String textBody) {
    this.textBody = textBody;
    return this;
  }

  /**
   * Output only. ID of the User who last updated (created/edited/deleted) the quoted message at the
   * time when quoting action happens. This includes information to identify if the quoted message
   * was posted by an App on behalf of a user.
   * @return value or {@code null} for none
   */
  public UserId getUpdaterId() {
    return updaterId;
  }

  /**
   * Output only. ID of the User who last updated (created/edited/deleted) the quoted message at the
   * time when quoting action happens. This includes information to identify if the quoted message
   * was posted by an App on behalf of a user.
   * @param updaterId updaterId or {@code null} for none
   */
  public QuotedMessageMetadata setUpdaterId(UserId updaterId) {
    this.updaterId = updaterId;
    return this;
  }

  /**
   * Output only. Upload metadata of the quoted message.
   * @return value or {@code null} for none
   */
  public java.util.List<UploadMetadata> getUploadMetadata() {
    return uploadMetadata;
  }

  /**
   * Output only. Upload metadata of the quoted message.
   * @param uploadMetadata uploadMetadata or {@code null} for none
   */
  public QuotedMessageMetadata setUploadMetadata(java.util.List<UploadMetadata> uploadMetadata) {
    this.uploadMetadata = uploadMetadata;
    return this;
  }

  @Override
  public QuotedMessageMetadata set(String fieldName, Object value) {
    return (QuotedMessageMetadata) super.set(fieldName, value);
  }

  @Override
  public QuotedMessageMetadata clone() {
    return (QuotedMessageMetadata) super.clone();
  }

}
