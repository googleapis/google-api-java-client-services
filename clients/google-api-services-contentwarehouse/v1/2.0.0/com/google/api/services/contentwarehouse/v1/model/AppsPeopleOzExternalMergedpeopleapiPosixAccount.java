/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Custom field that represents POSIX account information. Description of the field family: go/fbs-
 * posix. If account has non-empty Username or Uid we will enforce global uniqueness of
 * (AccountNamespace, CustomerKey, SystemId, Uid) and (AccountNamespace, CustomerKey, SystemId,
 * Username) tuples to ensure there are no duplicates.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AppsPeopleOzExternalMergedpeopleapiPosixAccount extends com.google.api.client.json.GenericJson {

  /**
   * The user visible value is used to distinguish identical posix account fields with different
   * customer key values.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String accountId;

  /**
   * Value indicates the uniqueness namespace that applies to the POSIX information. The value is
   * included in all POSIX account uniqueness indices. The indexing prevents two accounts within the
   * same customer from having the same username. Namespacing allows Windows and Linux users to
   * share the same username.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String accountNamespace;

  /**
   * Value indicates whether the POSIX information is associated with a non-human entity and the
   * validation logic to apply during PosixAccount mutation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String accountType;

  /**
   * The customer associated with the POSIX identity. If the user is already associated with a G
   * Suite Customer, this field has the same value as
   * http://google3/ccc/hosted/policies/settings/dthree_customer_info.proto
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long customerKey;

  /**
   * The value is automatically set to a SHA-256 fingerprint of the POSIX account. A fingerprint
   * should uniquely identify a POSIX account entry.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String fingerprint;

  /**
   * The GECOS (user information) entry for this account.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String gecos;

  /**
   * The default group ID.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.math.BigInteger gid;

  /**
   * The path to the home directory for this account.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String homeDirectory;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AppsPeopleOzExternalMergedpeopleapiPersonFieldMetadata metadata;

  /**
   * Value indicates whether to use Linux or Windows specific validation logic during PosixAccount
   * mutation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String operatingSystemType;

  /**
   * The path to the login shell for this account.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String shell;

  /**
   * System identifier for which account Username or Uid apply to. If not specified on mutate by a
   * caller it will default to empty value if either Username or Uid are being set. SystemId does
   * require to have a value (even an empty one) because it is included into null-filtered Spanner
   * index used to enforce uniqueness on Username and Uid fields.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String systemId;

  /**
   * The user ID.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.math.BigInteger uid;

  /**
   * The username of the account.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String username;

  /**
   * The user visible value is used to distinguish identical posix account fields with different
   * customer key values.
   * @return value or {@code null} for none
   */
  public java.lang.String getAccountId() {
    return accountId;
  }

  /**
   * The user visible value is used to distinguish identical posix account fields with different
   * customer key values.
   * @param accountId accountId or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPosixAccount setAccountId(java.lang.String accountId) {
    this.accountId = accountId;
    return this;
  }

  /**
   * Value indicates the uniqueness namespace that applies to the POSIX information. The value is
   * included in all POSIX account uniqueness indices. The indexing prevents two accounts within the
   * same customer from having the same username. Namespacing allows Windows and Linux users to
   * share the same username.
   * @return value or {@code null} for none
   */
  public java.lang.String getAccountNamespace() {
    return accountNamespace;
  }

  /**
   * Value indicates the uniqueness namespace that applies to the POSIX information. The value is
   * included in all POSIX account uniqueness indices. The indexing prevents two accounts within the
   * same customer from having the same username. Namespacing allows Windows and Linux users to
   * share the same username.
   * @param accountNamespace accountNamespace or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPosixAccount setAccountNamespace(java.lang.String accountNamespace) {
    this.accountNamespace = accountNamespace;
    return this;
  }

  /**
   * Value indicates whether the POSIX information is associated with a non-human entity and the
   * validation logic to apply during PosixAccount mutation.
   * @return value or {@code null} for none
   */
  public java.lang.String getAccountType() {
    return accountType;
  }

  /**
   * Value indicates whether the POSIX information is associated with a non-human entity and the
   * validation logic to apply during PosixAccount mutation.
   * @param accountType accountType or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPosixAccount setAccountType(java.lang.String accountType) {
    this.accountType = accountType;
    return this;
  }

  /**
   * The customer associated with the POSIX identity. If the user is already associated with a G
   * Suite Customer, this field has the same value as
   * http://google3/ccc/hosted/policies/settings/dthree_customer_info.proto
   * @return value or {@code null} for none
   */
  public java.lang.Long getCustomerKey() {
    return customerKey;
  }

  /**
   * The customer associated with the POSIX identity. If the user is already associated with a G
   * Suite Customer, this field has the same value as
   * http://google3/ccc/hosted/policies/settings/dthree_customer_info.proto
   * @param customerKey customerKey or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPosixAccount setCustomerKey(java.lang.Long customerKey) {
    this.customerKey = customerKey;
    return this;
  }

  /**
   * The value is automatically set to a SHA-256 fingerprint of the POSIX account. A fingerprint
   * should uniquely identify a POSIX account entry.
   * @return value or {@code null} for none
   */
  public java.lang.String getFingerprint() {
    return fingerprint;
  }

  /**
   * The value is automatically set to a SHA-256 fingerprint of the POSIX account. A fingerprint
   * should uniquely identify a POSIX account entry.
   * @param fingerprint fingerprint or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPosixAccount setFingerprint(java.lang.String fingerprint) {
    this.fingerprint = fingerprint;
    return this;
  }

  /**
   * The GECOS (user information) entry for this account.
   * @return value or {@code null} for none
   */
  public java.lang.String getGecos() {
    return gecos;
  }

  /**
   * The GECOS (user information) entry for this account.
   * @param gecos gecos or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPosixAccount setGecos(java.lang.String gecos) {
    this.gecos = gecos;
    return this;
  }

  /**
   * The default group ID.
   * @return value or {@code null} for none
   */
  public java.math.BigInteger getGid() {
    return gid;
  }

  /**
   * The default group ID.
   * @param gid gid or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPosixAccount setGid(java.math.BigInteger gid) {
    this.gid = gid;
    return this;
  }

  /**
   * The path to the home directory for this account.
   * @return value or {@code null} for none
   */
  public java.lang.String getHomeDirectory() {
    return homeDirectory;
  }

  /**
   * The path to the home directory for this account.
   * @param homeDirectory homeDirectory or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPosixAccount setHomeDirectory(java.lang.String homeDirectory) {
    this.homeDirectory = homeDirectory;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPersonFieldMetadata getMetadata() {
    return metadata;
  }

  /**
   * @param metadata metadata or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPosixAccount setMetadata(AppsPeopleOzExternalMergedpeopleapiPersonFieldMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

  /**
   * Value indicates whether to use Linux or Windows specific validation logic during PosixAccount
   * mutation.
   * @return value or {@code null} for none
   */
  public java.lang.String getOperatingSystemType() {
    return operatingSystemType;
  }

  /**
   * Value indicates whether to use Linux or Windows specific validation logic during PosixAccount
   * mutation.
   * @param operatingSystemType operatingSystemType or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPosixAccount setOperatingSystemType(java.lang.String operatingSystemType) {
    this.operatingSystemType = operatingSystemType;
    return this;
  }

  /**
   * The path to the login shell for this account.
   * @return value or {@code null} for none
   */
  public java.lang.String getShell() {
    return shell;
  }

  /**
   * The path to the login shell for this account.
   * @param shell shell or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPosixAccount setShell(java.lang.String shell) {
    this.shell = shell;
    return this;
  }

  /**
   * System identifier for which account Username or Uid apply to. If not specified on mutate by a
   * caller it will default to empty value if either Username or Uid are being set. SystemId does
   * require to have a value (even an empty one) because it is included into null-filtered Spanner
   * index used to enforce uniqueness on Username and Uid fields.
   * @return value or {@code null} for none
   */
  public java.lang.String getSystemId() {
    return systemId;
  }

  /**
   * System identifier for which account Username or Uid apply to. If not specified on mutate by a
   * caller it will default to empty value if either Username or Uid are being set. SystemId does
   * require to have a value (even an empty one) because it is included into null-filtered Spanner
   * index used to enforce uniqueness on Username and Uid fields.
   * @param systemId systemId or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPosixAccount setSystemId(java.lang.String systemId) {
    this.systemId = systemId;
    return this;
  }

  /**
   * The user ID.
   * @return value or {@code null} for none
   */
  public java.math.BigInteger getUid() {
    return uid;
  }

  /**
   * The user ID.
   * @param uid uid or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPosixAccount setUid(java.math.BigInteger uid) {
    this.uid = uid;
    return this;
  }

  /**
   * The username of the account.
   * @return value or {@code null} for none
   */
  public java.lang.String getUsername() {
    return username;
  }

  /**
   * The username of the account.
   * @param username username or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPosixAccount setUsername(java.lang.String username) {
    this.username = username;
    return this;
  }

  @Override
  public AppsPeopleOzExternalMergedpeopleapiPosixAccount set(String fieldName, Object value) {
    return (AppsPeopleOzExternalMergedpeopleapiPosixAccount) super.set(fieldName, value);
  }

  @Override
  public AppsPeopleOzExternalMergedpeopleapiPosixAccount clone() {
    return (AppsPeopleOzExternalMergedpeopleapiPosixAccount) super.clone();
  }

}
