/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Accumulated coverage data for an url using a constant half-life time. Next tag: 28
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class IndexingSignalAggregatorAgeWeightedCoverageData extends com.google.api.client.json.GenericJson {

  /**
   * Weighted averged timestamps of the decayed chances.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double averageChanceTime;

  /**
   * Numbers below are all total in the decayed manner. To get rate of impression/clicks, divide by
   * chances.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double chances;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double clicksBad;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double clicksGood;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double clicksImage;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double clicksTotal;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double clicksUnclassified;

  /**
   * Epoch seconds at which this weighted coverage data was calculated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long coverageTimestamp;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double ctrWeightedImpressions;

  /**
   * Dwells from KnowledgePanel and WebAnswers.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double dwells;

  /**
   * Epoch seconds at which this url first gets coverage in BASE.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long firstBaseCoverageTimestamp;

  /**
   * The pagerank when the url was serving for the first time.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer firstCoveragePagerankNs;

  /**
   * Epoch seconds at which this url first gets coverage data.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long firstCoverageTimestamp;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long firstseen;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double impressions;

  /**
   * Interval Data to track the average time between clicks_total, clicks_good, and
   * ctr_weighted_impression.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private IndexingSignalAggregatorAdaptiveIntervalData intervalData;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer language;

  /**
   * Indicates the date when this document received the last KnowledgePanel or WebAnswer dwell.
   * Note: The date is identified in terms of number of days since Epoch.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer lastDwellDateInDays;

  /**
   * Indicates the date when this document received the last good click. Note: The date is
   * identified in terms of number of days since Epoch.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer lastGoodClickDateInDays;

  /**
   * Indicates the date when this document received the last impression. Note: The date is
   * identified in terms of number of days since Epoch.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer lastImpressionDateInDays;

  /**
   * Indicates the date when this document received the last LocalUniversal dwell. Note: The date is
   * identified in terms of number of days since Epoch.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer lastLuDwellDateInDays;

  /**
   * Indicates the date when this document received the last pseudo-impression. I.e., when it was
   * retrieved as a result but GWS would not show it because of the document's age in the index.
   * Note: The date is identified in terms of number of days since Epoch.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer lastPseudoImpressionsDateInDays;

  /**
   * Dwells from LocalUniversal.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double luDwells;

  /**
   * Repid in Alexandria pipeline.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String repid;

  /**
   * Total number of chances on this urls (not decayed).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long totalChances;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String url;

  /**
   * Temporary variable, only used during mapreduce.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long urlfp;

  /**
   * Weighted averged timestamps of the decayed chances.
   * @return value or {@code null} for none
   */
  public java.lang.Double getAverageChanceTime() {
    return averageChanceTime;
  }

  /**
   * Weighted averged timestamps of the decayed chances.
   * @param averageChanceTime averageChanceTime or {@code null} for none
   */
  public IndexingSignalAggregatorAgeWeightedCoverageData setAverageChanceTime(java.lang.Double averageChanceTime) {
    this.averageChanceTime = averageChanceTime;
    return this;
  }

  /**
   * Numbers below are all total in the decayed manner. To get rate of impression/clicks, divide by
   * chances.
   * @return value or {@code null} for none
   */
  public java.lang.Double getChances() {
    return chances;
  }

  /**
   * Numbers below are all total in the decayed manner. To get rate of impression/clicks, divide by
   * chances.
   * @param chances chances or {@code null} for none
   */
  public IndexingSignalAggregatorAgeWeightedCoverageData setChances(java.lang.Double chances) {
    this.chances = chances;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Double getClicksBad() {
    return clicksBad;
  }

  /**
   * @param clicksBad clicksBad or {@code null} for none
   */
  public IndexingSignalAggregatorAgeWeightedCoverageData setClicksBad(java.lang.Double clicksBad) {
    this.clicksBad = clicksBad;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Double getClicksGood() {
    return clicksGood;
  }

  /**
   * @param clicksGood clicksGood or {@code null} for none
   */
  public IndexingSignalAggregatorAgeWeightedCoverageData setClicksGood(java.lang.Double clicksGood) {
    this.clicksGood = clicksGood;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Double getClicksImage() {
    return clicksImage;
  }

  /**
   * @param clicksImage clicksImage or {@code null} for none
   */
  public IndexingSignalAggregatorAgeWeightedCoverageData setClicksImage(java.lang.Double clicksImage) {
    this.clicksImage = clicksImage;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Double getClicksTotal() {
    return clicksTotal;
  }

  /**
   * @param clicksTotal clicksTotal or {@code null} for none
   */
  public IndexingSignalAggregatorAgeWeightedCoverageData setClicksTotal(java.lang.Double clicksTotal) {
    this.clicksTotal = clicksTotal;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Double getClicksUnclassified() {
    return clicksUnclassified;
  }

  /**
   * @param clicksUnclassified clicksUnclassified or {@code null} for none
   */
  public IndexingSignalAggregatorAgeWeightedCoverageData setClicksUnclassified(java.lang.Double clicksUnclassified) {
    this.clicksUnclassified = clicksUnclassified;
    return this;
  }

  /**
   * Epoch seconds at which this weighted coverage data was calculated.
   * @return value or {@code null} for none
   */
  public java.lang.Long getCoverageTimestamp() {
    return coverageTimestamp;
  }

  /**
   * Epoch seconds at which this weighted coverage data was calculated.
   * @param coverageTimestamp coverageTimestamp or {@code null} for none
   */
  public IndexingSignalAggregatorAgeWeightedCoverageData setCoverageTimestamp(java.lang.Long coverageTimestamp) {
    this.coverageTimestamp = coverageTimestamp;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Double getCtrWeightedImpressions() {
    return ctrWeightedImpressions;
  }

  /**
   * @param ctrWeightedImpressions ctrWeightedImpressions or {@code null} for none
   */
  public IndexingSignalAggregatorAgeWeightedCoverageData setCtrWeightedImpressions(java.lang.Double ctrWeightedImpressions) {
    this.ctrWeightedImpressions = ctrWeightedImpressions;
    return this;
  }

  /**
   * Dwells from KnowledgePanel and WebAnswers.
   * @return value or {@code null} for none
   */
  public java.lang.Double getDwells() {
    return dwells;
  }

  /**
   * Dwells from KnowledgePanel and WebAnswers.
   * @param dwells dwells or {@code null} for none
   */
  public IndexingSignalAggregatorAgeWeightedCoverageData setDwells(java.lang.Double dwells) {
    this.dwells = dwells;
    return this;
  }

  /**
   * Epoch seconds at which this url first gets coverage in BASE.
   * @return value or {@code null} for none
   */
  public java.lang.Long getFirstBaseCoverageTimestamp() {
    return firstBaseCoverageTimestamp;
  }

  /**
   * Epoch seconds at which this url first gets coverage in BASE.
   * @param firstBaseCoverageTimestamp firstBaseCoverageTimestamp or {@code null} for none
   */
  public IndexingSignalAggregatorAgeWeightedCoverageData setFirstBaseCoverageTimestamp(java.lang.Long firstBaseCoverageTimestamp) {
    this.firstBaseCoverageTimestamp = firstBaseCoverageTimestamp;
    return this;
  }

  /**
   * The pagerank when the url was serving for the first time.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getFirstCoveragePagerankNs() {
    return firstCoveragePagerankNs;
  }

  /**
   * The pagerank when the url was serving for the first time.
   * @param firstCoveragePagerankNs firstCoveragePagerankNs or {@code null} for none
   */
  public IndexingSignalAggregatorAgeWeightedCoverageData setFirstCoveragePagerankNs(java.lang.Integer firstCoveragePagerankNs) {
    this.firstCoveragePagerankNs = firstCoveragePagerankNs;
    return this;
  }

  /**
   * Epoch seconds at which this url first gets coverage data.
   * @return value or {@code null} for none
   */
  public java.lang.Long getFirstCoverageTimestamp() {
    return firstCoverageTimestamp;
  }

  /**
   * Epoch seconds at which this url first gets coverage data.
   * @param firstCoverageTimestamp firstCoverageTimestamp or {@code null} for none
   */
  public IndexingSignalAggregatorAgeWeightedCoverageData setFirstCoverageTimestamp(java.lang.Long firstCoverageTimestamp) {
    this.firstCoverageTimestamp = firstCoverageTimestamp;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getFirstseen() {
    return firstseen;
  }

  /**
   * @param firstseen firstseen or {@code null} for none
   */
  public IndexingSignalAggregatorAgeWeightedCoverageData setFirstseen(java.lang.Long firstseen) {
    this.firstseen = firstseen;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Double getImpressions() {
    return impressions;
  }

  /**
   * @param impressions impressions or {@code null} for none
   */
  public IndexingSignalAggregatorAgeWeightedCoverageData setImpressions(java.lang.Double impressions) {
    this.impressions = impressions;
    return this;
  }

  /**
   * Interval Data to track the average time between clicks_total, clicks_good, and
   * ctr_weighted_impression.
   * @return value or {@code null} for none
   */
  public IndexingSignalAggregatorAdaptiveIntervalData getIntervalData() {
    return intervalData;
  }

  /**
   * Interval Data to track the average time between clicks_total, clicks_good, and
   * ctr_weighted_impression.
   * @param intervalData intervalData or {@code null} for none
   */
  public IndexingSignalAggregatorAgeWeightedCoverageData setIntervalData(IndexingSignalAggregatorAdaptiveIntervalData intervalData) {
    this.intervalData = intervalData;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getLanguage() {
    return language;
  }

  /**
   * @param language language or {@code null} for none
   */
  public IndexingSignalAggregatorAgeWeightedCoverageData setLanguage(java.lang.Integer language) {
    this.language = language;
    return this;
  }

  /**
   * Indicates the date when this document received the last KnowledgePanel or WebAnswer dwell.
   * Note: The date is identified in terms of number of days since Epoch.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getLastDwellDateInDays() {
    return lastDwellDateInDays;
  }

  /**
   * Indicates the date when this document received the last KnowledgePanel or WebAnswer dwell.
   * Note: The date is identified in terms of number of days since Epoch.
   * @param lastDwellDateInDays lastDwellDateInDays or {@code null} for none
   */
  public IndexingSignalAggregatorAgeWeightedCoverageData setLastDwellDateInDays(java.lang.Integer lastDwellDateInDays) {
    this.lastDwellDateInDays = lastDwellDateInDays;
    return this;
  }

  /**
   * Indicates the date when this document received the last good click. Note: The date is
   * identified in terms of number of days since Epoch.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getLastGoodClickDateInDays() {
    return lastGoodClickDateInDays;
  }

  /**
   * Indicates the date when this document received the last good click. Note: The date is
   * identified in terms of number of days since Epoch.
   * @param lastGoodClickDateInDays lastGoodClickDateInDays or {@code null} for none
   */
  public IndexingSignalAggregatorAgeWeightedCoverageData setLastGoodClickDateInDays(java.lang.Integer lastGoodClickDateInDays) {
    this.lastGoodClickDateInDays = lastGoodClickDateInDays;
    return this;
  }

  /**
   * Indicates the date when this document received the last impression. Note: The date is
   * identified in terms of number of days since Epoch.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getLastImpressionDateInDays() {
    return lastImpressionDateInDays;
  }

  /**
   * Indicates the date when this document received the last impression. Note: The date is
   * identified in terms of number of days since Epoch.
   * @param lastImpressionDateInDays lastImpressionDateInDays or {@code null} for none
   */
  public IndexingSignalAggregatorAgeWeightedCoverageData setLastImpressionDateInDays(java.lang.Integer lastImpressionDateInDays) {
    this.lastImpressionDateInDays = lastImpressionDateInDays;
    return this;
  }

  /**
   * Indicates the date when this document received the last LocalUniversal dwell. Note: The date is
   * identified in terms of number of days since Epoch.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getLastLuDwellDateInDays() {
    return lastLuDwellDateInDays;
  }

  /**
   * Indicates the date when this document received the last LocalUniversal dwell. Note: The date is
   * identified in terms of number of days since Epoch.
   * @param lastLuDwellDateInDays lastLuDwellDateInDays or {@code null} for none
   */
  public IndexingSignalAggregatorAgeWeightedCoverageData setLastLuDwellDateInDays(java.lang.Integer lastLuDwellDateInDays) {
    this.lastLuDwellDateInDays = lastLuDwellDateInDays;
    return this;
  }

  /**
   * Indicates the date when this document received the last pseudo-impression. I.e., when it was
   * retrieved as a result but GWS would not show it because of the document's age in the index.
   * Note: The date is identified in terms of number of days since Epoch.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getLastPseudoImpressionsDateInDays() {
    return lastPseudoImpressionsDateInDays;
  }

  /**
   * Indicates the date when this document received the last pseudo-impression. I.e., when it was
   * retrieved as a result but GWS would not show it because of the document's age in the index.
   * Note: The date is identified in terms of number of days since Epoch.
   * @param lastPseudoImpressionsDateInDays lastPseudoImpressionsDateInDays or {@code null} for none
   */
  public IndexingSignalAggregatorAgeWeightedCoverageData setLastPseudoImpressionsDateInDays(java.lang.Integer lastPseudoImpressionsDateInDays) {
    this.lastPseudoImpressionsDateInDays = lastPseudoImpressionsDateInDays;
    return this;
  }

  /**
   * Dwells from LocalUniversal.
   * @return value or {@code null} for none
   */
  public java.lang.Double getLuDwells() {
    return luDwells;
  }

  /**
   * Dwells from LocalUniversal.
   * @param luDwells luDwells or {@code null} for none
   */
  public IndexingSignalAggregatorAgeWeightedCoverageData setLuDwells(java.lang.Double luDwells) {
    this.luDwells = luDwells;
    return this;
  }

  /**
   * Repid in Alexandria pipeline.
   * @see #decodeRepid()
   * @return value or {@code null} for none
   */
  public java.lang.String getRepid() {
    return repid;
  }

  /**
   * Repid in Alexandria pipeline.
   * @see #getRepid()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeRepid() {
    return com.google.api.client.util.Base64.decodeBase64(repid);
  }

  /**
   * Repid in Alexandria pipeline.
   * @see #encodeRepid()
   * @param repid repid or {@code null} for none
   */
  public IndexingSignalAggregatorAgeWeightedCoverageData setRepid(java.lang.String repid) {
    this.repid = repid;
    return this;
  }

  /**
   * Repid in Alexandria pipeline.
   * @see #setRepid()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public IndexingSignalAggregatorAgeWeightedCoverageData encodeRepid(byte[] repid) {
    this.repid = com.google.api.client.util.Base64.encodeBase64URLSafeString(repid);
    return this;
  }

  /**
   * Total number of chances on this urls (not decayed).
   * @return value or {@code null} for none
   */
  public java.lang.Long getTotalChances() {
    return totalChances;
  }

  /**
   * Total number of chances on this urls (not decayed).
   * @param totalChances totalChances or {@code null} for none
   */
  public IndexingSignalAggregatorAgeWeightedCoverageData setTotalChances(java.lang.Long totalChances) {
    this.totalChances = totalChances;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getUrl() {
    return url;
  }

  /**
   * @param url url or {@code null} for none
   */
  public IndexingSignalAggregatorAgeWeightedCoverageData setUrl(java.lang.String url) {
    this.url = url;
    return this;
  }

  /**
   * Temporary variable, only used during mapreduce.
   * @return value or {@code null} for none
   */
  public java.lang.Long getUrlfp() {
    return urlfp;
  }

  /**
   * Temporary variable, only used during mapreduce.
   * @param urlfp urlfp or {@code null} for none
   */
  public IndexingSignalAggregatorAgeWeightedCoverageData setUrlfp(java.lang.Long urlfp) {
    this.urlfp = urlfp;
    return this;
  }

  @Override
  public IndexingSignalAggregatorAgeWeightedCoverageData set(String fieldName, Object value) {
    return (IndexingSignalAggregatorAgeWeightedCoverageData) super.set(fieldName, value);
  }

  @Override
  public IndexingSignalAggregatorAgeWeightedCoverageData clone() {
    return (IndexingSignalAggregatorAgeWeightedCoverageData) super.clone();
  }

}
