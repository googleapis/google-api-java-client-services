/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.beyondcorp.v1.model;

/**
 * Message describing ClientConnectorService object.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the BeyondCorp API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ClientConnectorService extends com.google.api.client.json.GenericJson {

  /**
   * Output only. [Output only] Create time stamp.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Optional. User-provided name. The display name should follow certain format. * Must be 6 to 30
   * characters in length. * Can only contain lowercase letters, numbers, and hyphens. * Must start
   * with a letter.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Required. The details of the egress settings.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Egress egress;

  /**
   * Required. The details of the ingress settings.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Ingress ingress;

  /**
   * Required. Name of resource. The name is ignored during creation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. The operational state of the ClientConnectorService.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Output only. [Output only] Update time stamp.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Output only. [Output only] Create time stamp.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. [Output only] Create time stamp.
   * @param createTime createTime or {@code null} for none
   */
  public ClientConnectorService setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Optional. User-provided name. The display name should follow certain format. * Must be 6 to 30
   * characters in length. * Can only contain lowercase letters, numbers, and hyphens. * Must start
   * with a letter.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Optional. User-provided name. The display name should follow certain format. * Must be 6 to 30
   * characters in length. * Can only contain lowercase letters, numbers, and hyphens. * Must start
   * with a letter.
   * @param displayName displayName or {@code null} for none
   */
  public ClientConnectorService setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Required. The details of the egress settings.
   * @return value or {@code null} for none
   */
  public Egress getEgress() {
    return egress;
  }

  /**
   * Required. The details of the egress settings.
   * @param egress egress or {@code null} for none
   */
  public ClientConnectorService setEgress(Egress egress) {
    this.egress = egress;
    return this;
  }

  /**
   * Required. The details of the ingress settings.
   * @return value or {@code null} for none
   */
  public Ingress getIngress() {
    return ingress;
  }

  /**
   * Required. The details of the ingress settings.
   * @param ingress ingress or {@code null} for none
   */
  public ClientConnectorService setIngress(Ingress ingress) {
    this.ingress = ingress;
    return this;
  }

  /**
   * Required. Name of resource. The name is ignored during creation.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Required. Name of resource. The name is ignored during creation.
   * @param name name or {@code null} for none
   */
  public ClientConnectorService setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. The operational state of the ClientConnectorService.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. The operational state of the ClientConnectorService.
   * @param state state or {@code null} for none
   */
  public ClientConnectorService setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Output only. [Output only] Update time stamp.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. [Output only] Update time stamp.
   * @param updateTime updateTime or {@code null} for none
   */
  public ClientConnectorService setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public ClientConnectorService set(String fieldName, Object value) {
    return (ClientConnectorService) super.set(fieldName, value);
  }

  @Override
  public ClientConnectorService clone() {
    return (ClientConnectorService) super.clone();
  }

}
