/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.firebasedataconnect.v1beta.model;

/**
 * Settings for PostgreSQL data source.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Firebase Data Connect API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class PostgreSql extends com.google.api.client.json.GenericJson {

  /**
   * Cloud SQL configurations.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private CloudSqlInstance cloudSql;

  /**
   * Required. Name of the PostgreSQL database.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String database;

  /**
   * Optional. Configure how to perform Postgresql schema migration.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String schemaMigration;

  /**
   * Optional. Configure how much Postgresql schema validation to perform.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String schemaValidation;

  /**
   * No Postgres data source is linked. If set, don't allow `database` and `schema_validation` to be
   * configured.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean unlinked;

  /**
   * Cloud SQL configurations.
   * @return value or {@code null} for none
   */
  public CloudSqlInstance getCloudSql() {
    return cloudSql;
  }

  /**
   * Cloud SQL configurations.
   * @param cloudSql cloudSql or {@code null} for none
   */
  public PostgreSql setCloudSql(CloudSqlInstance cloudSql) {
    this.cloudSql = cloudSql;
    return this;
  }

  /**
   * Required. Name of the PostgreSQL database.
   * @return value or {@code null} for none
   */
  public java.lang.String getDatabase() {
    return database;
  }

  /**
   * Required. Name of the PostgreSQL database.
   * @param database database or {@code null} for none
   */
  public PostgreSql setDatabase(java.lang.String database) {
    this.database = database;
    return this;
  }

  /**
   * Optional. Configure how to perform Postgresql schema migration.
   * @return value or {@code null} for none
   */
  public java.lang.String getSchemaMigration() {
    return schemaMigration;
  }

  /**
   * Optional. Configure how to perform Postgresql schema migration.
   * @param schemaMigration schemaMigration or {@code null} for none
   */
  public PostgreSql setSchemaMigration(java.lang.String schemaMigration) {
    this.schemaMigration = schemaMigration;
    return this;
  }

  /**
   * Optional. Configure how much Postgresql schema validation to perform.
   * @return value or {@code null} for none
   */
  public java.lang.String getSchemaValidation() {
    return schemaValidation;
  }

  /**
   * Optional. Configure how much Postgresql schema validation to perform.
   * @param schemaValidation schemaValidation or {@code null} for none
   */
  public PostgreSql setSchemaValidation(java.lang.String schemaValidation) {
    this.schemaValidation = schemaValidation;
    return this;
  }

  /**
   * No Postgres data source is linked. If set, don't allow `database` and `schema_validation` to be
   * configured.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getUnlinked() {
    return unlinked;
  }

  /**
   * No Postgres data source is linked. If set, don't allow `database` and `schema_validation` to be
   * configured.
   * @param unlinked unlinked or {@code null} for none
   */
  public PostgreSql setUnlinked(java.lang.Boolean unlinked) {
    this.unlinked = unlinked;
    return this;
  }

  @Override
  public PostgreSql set(String fieldName, Object value) {
    return (PostgreSql) super.set(fieldName, value);
  }

  @Override
  public PostgreSql clone() {
    return (PostgreSql) super.clone();
  }

}
