/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Contains anchor level features that apply to all anchor types. Next id: 18.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class VideoContentSearchAnchorCommonFeatureSet extends com.google.api.client.json.GenericJson {

  /**
   * QBST distance between the anchor and the top navboost query of the video if exists, or the
   * video title otherwise.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float anchorQbstDistance;

  /**
   * Features needed for Bleurt inference.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private VideoContentSearchBleurtFeatures bleurtFeatures;

  /**
   * The Bleurt inference score generated using the bleurt_features.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float bleurtScore;

  /**
   * Descartes similarity score between video title and anchor label.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float descartesScoreWithTitle;

  /**
   * The predicted descriptiveness and usefulness rating scores generated by the Unified Dolphin
   * model. Rating template:
   * experimental/video/video_anchors_oneside_without_thumbnail/template.jhtml
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float dolphinDescriptivenessScore;

  /**
   * If the dolphin model is an ensemble model, this contains the scores associated to each
   * individual ensemble model.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<VideoContentSearchDolphinEnsembleScore> dolphinEnsembleScore;

  /**
   * The features used to generate the Dolphin score.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private VideoContentSearchDolphinFeatures dolphinFeatures;

  /**
   * The score generated by the Dolphin callout model.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float dolphinScore;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float dolphinUsefulnessScore;

  /**
   * A phrase embedding for the anchor label. The model used to generate the embedding can be found
   * in VideoAnchorSets: video_score_info.common_features.label_phrase_embedding_model
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.Float> labelPhraseEmbedding;

  /**
   * The predicted descriptiveness of the anchor using the MUM unified scoring model.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float mumDescriptivenessScore;

  /**
   * The predicted usefulness of the anchor using the MUM unified scoring model.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float mumUsefulnessScore;

  /**
   * A score that is correlated with retention probability of the interval associated with this
   * anchor (start time to end time). Retention probability of an interval is 1 - (probability the
   * user does not watch the interval all the way through, given they started watching it). This
   * score may be predicted by a model, or calculated from actual retention data.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float retentionScore;

  /**
   * A saft document generated from the anchor label.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private NlpSaftDocument saftDocument;

  /**
   * For annotating labels and their timing and context info. For example, this is used for anchor
   * labels within a passage.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<VideoContentSearchCaptionLabelFeatures> timedLabelFeatures;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<VideoContentSearchAnchorCommonFeatureSetLabelSpanTimestamp> timestamp;

  /**
   * Babel similarity between the anchor and the video title.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float titleAnchorBabelMatchScore;

  /**
   * QBST distance between the anchor and the top navboost query of the video if exists, or the
   * video title otherwise.
   * @return value or {@code null} for none
   */
  public java.lang.Float getAnchorQbstDistance() {
    return anchorQbstDistance;
  }

  /**
   * QBST distance between the anchor and the top navboost query of the video if exists, or the
   * video title otherwise.
   * @param anchorQbstDistance anchorQbstDistance or {@code null} for none
   */
  public VideoContentSearchAnchorCommonFeatureSet setAnchorQbstDistance(java.lang.Float anchorQbstDistance) {
    this.anchorQbstDistance = anchorQbstDistance;
    return this;
  }

  /**
   * Features needed for Bleurt inference.
   * @return value or {@code null} for none
   */
  public VideoContentSearchBleurtFeatures getBleurtFeatures() {
    return bleurtFeatures;
  }

  /**
   * Features needed for Bleurt inference.
   * @param bleurtFeatures bleurtFeatures or {@code null} for none
   */
  public VideoContentSearchAnchorCommonFeatureSet setBleurtFeatures(VideoContentSearchBleurtFeatures bleurtFeatures) {
    this.bleurtFeatures = bleurtFeatures;
    return this;
  }

  /**
   * The Bleurt inference score generated using the bleurt_features.
   * @return value or {@code null} for none
   */
  public java.lang.Float getBleurtScore() {
    return bleurtScore;
  }

  /**
   * The Bleurt inference score generated using the bleurt_features.
   * @param bleurtScore bleurtScore or {@code null} for none
   */
  public VideoContentSearchAnchorCommonFeatureSet setBleurtScore(java.lang.Float bleurtScore) {
    this.bleurtScore = bleurtScore;
    return this;
  }

  /**
   * Descartes similarity score between video title and anchor label.
   * @return value or {@code null} for none
   */
  public java.lang.Float getDescartesScoreWithTitle() {
    return descartesScoreWithTitle;
  }

  /**
   * Descartes similarity score between video title and anchor label.
   * @param descartesScoreWithTitle descartesScoreWithTitle or {@code null} for none
   */
  public VideoContentSearchAnchorCommonFeatureSet setDescartesScoreWithTitle(java.lang.Float descartesScoreWithTitle) {
    this.descartesScoreWithTitle = descartesScoreWithTitle;
    return this;
  }

  /**
   * The predicted descriptiveness and usefulness rating scores generated by the Unified Dolphin
   * model. Rating template:
   * experimental/video/video_anchors_oneside_without_thumbnail/template.jhtml
   * @return value or {@code null} for none
   */
  public java.lang.Float getDolphinDescriptivenessScore() {
    return dolphinDescriptivenessScore;
  }

  /**
   * The predicted descriptiveness and usefulness rating scores generated by the Unified Dolphin
   * model. Rating template:
   * experimental/video/video_anchors_oneside_without_thumbnail/template.jhtml
   * @param dolphinDescriptivenessScore dolphinDescriptivenessScore or {@code null} for none
   */
  public VideoContentSearchAnchorCommonFeatureSet setDolphinDescriptivenessScore(java.lang.Float dolphinDescriptivenessScore) {
    this.dolphinDescriptivenessScore = dolphinDescriptivenessScore;
    return this;
  }

  /**
   * If the dolphin model is an ensemble model, this contains the scores associated to each
   * individual ensemble model.
   * @return value or {@code null} for none
   */
  public java.util.List<VideoContentSearchDolphinEnsembleScore> getDolphinEnsembleScore() {
    return dolphinEnsembleScore;
  }

  /**
   * If the dolphin model is an ensemble model, this contains the scores associated to each
   * individual ensemble model.
   * @param dolphinEnsembleScore dolphinEnsembleScore or {@code null} for none
   */
  public VideoContentSearchAnchorCommonFeatureSet setDolphinEnsembleScore(java.util.List<VideoContentSearchDolphinEnsembleScore> dolphinEnsembleScore) {
    this.dolphinEnsembleScore = dolphinEnsembleScore;
    return this;
  }

  /**
   * The features used to generate the Dolphin score.
   * @return value or {@code null} for none
   */
  public VideoContentSearchDolphinFeatures getDolphinFeatures() {
    return dolphinFeatures;
  }

  /**
   * The features used to generate the Dolphin score.
   * @param dolphinFeatures dolphinFeatures or {@code null} for none
   */
  public VideoContentSearchAnchorCommonFeatureSet setDolphinFeatures(VideoContentSearchDolphinFeatures dolphinFeatures) {
    this.dolphinFeatures = dolphinFeatures;
    return this;
  }

  /**
   * The score generated by the Dolphin callout model.
   * @return value or {@code null} for none
   */
  public java.lang.Float getDolphinScore() {
    return dolphinScore;
  }

  /**
   * The score generated by the Dolphin callout model.
   * @param dolphinScore dolphinScore or {@code null} for none
   */
  public VideoContentSearchAnchorCommonFeatureSet setDolphinScore(java.lang.Float dolphinScore) {
    this.dolphinScore = dolphinScore;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Float getDolphinUsefulnessScore() {
    return dolphinUsefulnessScore;
  }

  /**
   * @param dolphinUsefulnessScore dolphinUsefulnessScore or {@code null} for none
   */
  public VideoContentSearchAnchorCommonFeatureSet setDolphinUsefulnessScore(java.lang.Float dolphinUsefulnessScore) {
    this.dolphinUsefulnessScore = dolphinUsefulnessScore;
    return this;
  }

  /**
   * A phrase embedding for the anchor label. The model used to generate the embedding can be found
   * in VideoAnchorSets: video_score_info.common_features.label_phrase_embedding_model
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Float> getLabelPhraseEmbedding() {
    return labelPhraseEmbedding;
  }

  /**
   * A phrase embedding for the anchor label. The model used to generate the embedding can be found
   * in VideoAnchorSets: video_score_info.common_features.label_phrase_embedding_model
   * @param labelPhraseEmbedding labelPhraseEmbedding or {@code null} for none
   */
  public VideoContentSearchAnchorCommonFeatureSet setLabelPhraseEmbedding(java.util.List<java.lang.Float> labelPhraseEmbedding) {
    this.labelPhraseEmbedding = labelPhraseEmbedding;
    return this;
  }

  /**
   * The predicted descriptiveness of the anchor using the MUM unified scoring model.
   * @return value or {@code null} for none
   */
  public java.lang.Float getMumDescriptivenessScore() {
    return mumDescriptivenessScore;
  }

  /**
   * The predicted descriptiveness of the anchor using the MUM unified scoring model.
   * @param mumDescriptivenessScore mumDescriptivenessScore or {@code null} for none
   */
  public VideoContentSearchAnchorCommonFeatureSet setMumDescriptivenessScore(java.lang.Float mumDescriptivenessScore) {
    this.mumDescriptivenessScore = mumDescriptivenessScore;
    return this;
  }

  /**
   * The predicted usefulness of the anchor using the MUM unified scoring model.
   * @return value or {@code null} for none
   */
  public java.lang.Float getMumUsefulnessScore() {
    return mumUsefulnessScore;
  }

  /**
   * The predicted usefulness of the anchor using the MUM unified scoring model.
   * @param mumUsefulnessScore mumUsefulnessScore or {@code null} for none
   */
  public VideoContentSearchAnchorCommonFeatureSet setMumUsefulnessScore(java.lang.Float mumUsefulnessScore) {
    this.mumUsefulnessScore = mumUsefulnessScore;
    return this;
  }

  /**
   * A score that is correlated with retention probability of the interval associated with this
   * anchor (start time to end time). Retention probability of an interval is 1 - (probability the
   * user does not watch the interval all the way through, given they started watching it). This
   * score may be predicted by a model, or calculated from actual retention data.
   * @return value or {@code null} for none
   */
  public java.lang.Float getRetentionScore() {
    return retentionScore;
  }

  /**
   * A score that is correlated with retention probability of the interval associated with this
   * anchor (start time to end time). Retention probability of an interval is 1 - (probability the
   * user does not watch the interval all the way through, given they started watching it). This
   * score may be predicted by a model, or calculated from actual retention data.
   * @param retentionScore retentionScore or {@code null} for none
   */
  public VideoContentSearchAnchorCommonFeatureSet setRetentionScore(java.lang.Float retentionScore) {
    this.retentionScore = retentionScore;
    return this;
  }

  /**
   * A saft document generated from the anchor label.
   * @return value or {@code null} for none
   */
  public NlpSaftDocument getSaftDocument() {
    return saftDocument;
  }

  /**
   * A saft document generated from the anchor label.
   * @param saftDocument saftDocument or {@code null} for none
   */
  public VideoContentSearchAnchorCommonFeatureSet setSaftDocument(NlpSaftDocument saftDocument) {
    this.saftDocument = saftDocument;
    return this;
  }

  /**
   * For annotating labels and their timing and context info. For example, this is used for anchor
   * labels within a passage.
   * @return value or {@code null} for none
   */
  public java.util.List<VideoContentSearchCaptionLabelFeatures> getTimedLabelFeatures() {
    return timedLabelFeatures;
  }

  /**
   * For annotating labels and their timing and context info. For example, this is used for anchor
   * labels within a passage.
   * @param timedLabelFeatures timedLabelFeatures or {@code null} for none
   */
  public VideoContentSearchAnchorCommonFeatureSet setTimedLabelFeatures(java.util.List<VideoContentSearchCaptionLabelFeatures> timedLabelFeatures) {
    this.timedLabelFeatures = timedLabelFeatures;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<VideoContentSearchAnchorCommonFeatureSetLabelSpanTimestamp> getTimestamp() {
    return timestamp;
  }

  /**
   * @param timestamp timestamp or {@code null} for none
   */
  public VideoContentSearchAnchorCommonFeatureSet setTimestamp(java.util.List<VideoContentSearchAnchorCommonFeatureSetLabelSpanTimestamp> timestamp) {
    this.timestamp = timestamp;
    return this;
  }

  /**
   * Babel similarity between the anchor and the video title.
   * @return value or {@code null} for none
   */
  public java.lang.Float getTitleAnchorBabelMatchScore() {
    return titleAnchorBabelMatchScore;
  }

  /**
   * Babel similarity between the anchor and the video title.
   * @param titleAnchorBabelMatchScore titleAnchorBabelMatchScore or {@code null} for none
   */
  public VideoContentSearchAnchorCommonFeatureSet setTitleAnchorBabelMatchScore(java.lang.Float titleAnchorBabelMatchScore) {
    this.titleAnchorBabelMatchScore = titleAnchorBabelMatchScore;
    return this;
  }

  @Override
  public VideoContentSearchAnchorCommonFeatureSet set(String fieldName, Object value) {
    return (VideoContentSearchAnchorCommonFeatureSet) super.set(fieldName, value);
  }

  @Override
  public VideoContentSearchAnchorCommonFeatureSet clone() {
    return (VideoContentSearchAnchorCommonFeatureSet) super.clone();
  }

}
