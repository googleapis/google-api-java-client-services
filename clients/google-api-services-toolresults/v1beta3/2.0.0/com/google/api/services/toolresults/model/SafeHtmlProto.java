/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.toolresults.model;

/**
 * IMPORTANT: It is unsafe to accept this message from an untrusted source, since it's trivial for
 * an attacker to forge serialized messages that don't fulfill the type's safety contract -- for
 * example, it could contain attacker controlled script. A system which receives a SafeHtmlProto
 * implicitly trusts the producer of the SafeHtmlProto. So, it's generally safe to return this
 * message in RPC responses, but generally unsafe to accept it in RPC requests.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Tool Results API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class SafeHtmlProto extends com.google.api.client.json.GenericJson {

  /**
   * IMPORTANT: Never set or read this field, even from tests, it is private. See documentation at
   * the top of .proto file for programming language packages with which to create or read this
   * message.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String privateDoNotAccessOrElseSafeHtmlWrappedValue;

  /**
   * IMPORTANT: Never set or read this field, even from tests, it is private. See documentation at
   * the top of .proto file for programming language packages with which to create or read this
   * message.
   * @return value or {@code null} for none
   */
  public java.lang.String getPrivateDoNotAccessOrElseSafeHtmlWrappedValue() {
    return privateDoNotAccessOrElseSafeHtmlWrappedValue;
  }

  /**
   * IMPORTANT: Never set or read this field, even from tests, it is private. See documentation at
   * the top of .proto file for programming language packages with which to create or read this
   * message.
   * @param privateDoNotAccessOrElseSafeHtmlWrappedValue privateDoNotAccessOrElseSafeHtmlWrappedValue or {@code null} for none
   */
  public SafeHtmlProto setPrivateDoNotAccessOrElseSafeHtmlWrappedValue(java.lang.String privateDoNotAccessOrElseSafeHtmlWrappedValue) {
    this.privateDoNotAccessOrElseSafeHtmlWrappedValue = privateDoNotAccessOrElseSafeHtmlWrappedValue;
    return this;
  }

  @Override
  public SafeHtmlProto set(String fieldName, Object value) {
    return (SafeHtmlProto) super.set(fieldName, value);
  }

  @Override
  public SafeHtmlProto clone() {
    return (SafeHtmlProto) super.clone();
  }

}
