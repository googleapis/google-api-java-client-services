/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.serviceusage.v1beta1.model;

/**
 * Describes settings to use when generating API methods that use the long-running operation
 * pattern. All default values below are from those used in the client library generators (e.g.
 * [Java](https://github.com/googleapis/gapic-generator-java/blob/04c2faa191a9b5a10b92392fe8482279c4
 * 404803/src/main/java/com/google/api/generator/gapic/composer/common/RetrySettingsComposer.java)).
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Service Usage API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class LongRunning extends com.google.api.client.json.GenericJson {

  /**
   * Initial delay after which the first poll request will be made. Default value: 5 seconds.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String initialPollDelay;

  /**
   * Maximum time between two subsequent poll requests. Default value: 45 seconds.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String maxPollDelay;

  /**
   * Multiplier to gradually increase delay between subsequent polls until it reaches
   * max_poll_delay. Default value: 1.5.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float pollDelayMultiplier;

  /**
   * Total polling timeout. Default value: 5 minutes.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String totalPollTimeout;

  /**
   * Initial delay after which the first poll request will be made. Default value: 5 seconds.
   * @return value or {@code null} for none
   */
  public String getInitialPollDelay() {
    return initialPollDelay;
  }

  /**
   * Initial delay after which the first poll request will be made. Default value: 5 seconds.
   * @param initialPollDelay initialPollDelay or {@code null} for none
   */
  public LongRunning setInitialPollDelay(String initialPollDelay) {
    this.initialPollDelay = initialPollDelay;
    return this;
  }

  /**
   * Maximum time between two subsequent poll requests. Default value: 45 seconds.
   * @return value or {@code null} for none
   */
  public String getMaxPollDelay() {
    return maxPollDelay;
  }

  /**
   * Maximum time between two subsequent poll requests. Default value: 45 seconds.
   * @param maxPollDelay maxPollDelay or {@code null} for none
   */
  public LongRunning setMaxPollDelay(String maxPollDelay) {
    this.maxPollDelay = maxPollDelay;
    return this;
  }

  /**
   * Multiplier to gradually increase delay between subsequent polls until it reaches
   * max_poll_delay. Default value: 1.5.
   * @return value or {@code null} for none
   */
  public java.lang.Float getPollDelayMultiplier() {
    return pollDelayMultiplier;
  }

  /**
   * Multiplier to gradually increase delay between subsequent polls until it reaches
   * max_poll_delay. Default value: 1.5.
   * @param pollDelayMultiplier pollDelayMultiplier or {@code null} for none
   */
  public LongRunning setPollDelayMultiplier(java.lang.Float pollDelayMultiplier) {
    this.pollDelayMultiplier = pollDelayMultiplier;
    return this;
  }

  /**
   * Total polling timeout. Default value: 5 minutes.
   * @return value or {@code null} for none
   */
  public String getTotalPollTimeout() {
    return totalPollTimeout;
  }

  /**
   * Total polling timeout. Default value: 5 minutes.
   * @param totalPollTimeout totalPollTimeout or {@code null} for none
   */
  public LongRunning setTotalPollTimeout(String totalPollTimeout) {
    this.totalPollTimeout = totalPollTimeout;
    return this;
  }

  @Override
  public LongRunning set(String fieldName, Object value) {
    return (LongRunning) super.set(fieldName, value);
  }

  @Override
  public LongRunning clone() {
    return (LongRunning) super.clone();
  }

}
