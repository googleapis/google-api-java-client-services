/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.monitoring.v1.model;

/**
 * Represents a Metrics Scope (https://cloud.google.com/monitoring/settings#concept-scope) in Cloud
 * Monitoring, which specifies one or more Google projects and zero or more AWS accounts to monitor
 * together.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Monitoring API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class MetricsScope extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The time when this Metrics Scope was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Output only. The list of projects monitored by this Metrics Scope.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<MonitoredProject> monitoredProjects;

  /**
   * Immutable. The resource name of the Monitoring Metrics Scope. On input, the resource name can
   * be specified with the scoping project ID or number. On output, the resource name is specified
   * with the scoping project number. Example:
   * locations/global/metricsScopes/{SCOPING_PROJECT_ID_OR_NUMBER}
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. The time when this Metrics Scope record was last updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Output only. The time when this Metrics Scope was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The time when this Metrics Scope was created.
   * @param createTime createTime or {@code null} for none
   */
  public MetricsScope setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Output only. The list of projects monitored by this Metrics Scope.
   * @return value or {@code null} for none
   */
  public java.util.List<MonitoredProject> getMonitoredProjects() {
    return monitoredProjects;
  }

  /**
   * Output only. The list of projects monitored by this Metrics Scope.
   * @param monitoredProjects monitoredProjects or {@code null} for none
   */
  public MetricsScope setMonitoredProjects(java.util.List<MonitoredProject> monitoredProjects) {
    this.monitoredProjects = monitoredProjects;
    return this;
  }

  /**
   * Immutable. The resource name of the Monitoring Metrics Scope. On input, the resource name can
   * be specified with the scoping project ID or number. On output, the resource name is specified
   * with the scoping project number. Example:
   * locations/global/metricsScopes/{SCOPING_PROJECT_ID_OR_NUMBER}
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Immutable. The resource name of the Monitoring Metrics Scope. On input, the resource name can
   * be specified with the scoping project ID or number. On output, the resource name is specified
   * with the scoping project number. Example:
   * locations/global/metricsScopes/{SCOPING_PROJECT_ID_OR_NUMBER}
   * @param name name or {@code null} for none
   */
  public MetricsScope setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. The time when this Metrics Scope record was last updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. The time when this Metrics Scope record was last updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public MetricsScope setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public MetricsScope set(String fieldName, Object value) {
    return (MetricsScope) super.set(fieldName, value);
  }

  @Override
  public MetricsScope clone() {
    return (MetricsScope) super.clone();
  }

}
