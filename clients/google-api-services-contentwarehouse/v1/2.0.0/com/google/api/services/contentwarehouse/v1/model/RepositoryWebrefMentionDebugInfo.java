/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Model definition for RepositoryWebrefMentionDebugInfo.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class RepositoryWebrefMentionDebugInfo extends com.google.api.client.json.GenericJson {

  /**
   * A clean version of text. This is mostly used for compatibility with other Goldmine annotators.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String cleanText;

  /**
   * Optional debug information.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> infoString;

  /**
   * A snippet of the parsed text (html tags removed) in the page around this mention. Useful for
   * human evaluation of the quality of the annotations. Outputted by WebrefAnnotator if
   * --webref_output_mention_snippet_size is set to a value greater than 0.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String snippet;

  /**
   * Original UTF-8 document text occurring in the range [begin, end).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String text;

  /**
   * A clean version of text. This is mostly used for compatibility with other Goldmine annotators.
   * @return value or {@code null} for none
   */
  public java.lang.String getCleanText() {
    return cleanText;
  }

  /**
   * A clean version of text. This is mostly used for compatibility with other Goldmine annotators.
   * @param cleanText cleanText or {@code null} for none
   */
  public RepositoryWebrefMentionDebugInfo setCleanText(java.lang.String cleanText) {
    this.cleanText = cleanText;
    return this;
  }

  /**
   * Optional debug information.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getInfoString() {
    return infoString;
  }

  /**
   * Optional debug information.
   * @param infoString infoString or {@code null} for none
   */
  public RepositoryWebrefMentionDebugInfo setInfoString(java.util.List<java.lang.String> infoString) {
    this.infoString = infoString;
    return this;
  }

  /**
   * A snippet of the parsed text (html tags removed) in the page around this mention. Useful for
   * human evaluation of the quality of the annotations. Outputted by WebrefAnnotator if
   * --webref_output_mention_snippet_size is set to a value greater than 0.
   * @return value or {@code null} for none
   */
  public java.lang.String getSnippet() {
    return snippet;
  }

  /**
   * A snippet of the parsed text (html tags removed) in the page around this mention. Useful for
   * human evaluation of the quality of the annotations. Outputted by WebrefAnnotator if
   * --webref_output_mention_snippet_size is set to a value greater than 0.
   * @param snippet snippet or {@code null} for none
   */
  public RepositoryWebrefMentionDebugInfo setSnippet(java.lang.String snippet) {
    this.snippet = snippet;
    return this;
  }

  /**
   * Original UTF-8 document text occurring in the range [begin, end).
   * @return value or {@code null} for none
   */
  public java.lang.String getText() {
    return text;
  }

  /**
   * Original UTF-8 document text occurring in the range [begin, end).
   * @param text text or {@code null} for none
   */
  public RepositoryWebrefMentionDebugInfo setText(java.lang.String text) {
    this.text = text;
    return this;
  }

  @Override
  public RepositoryWebrefMentionDebugInfo set(String fieldName, Object value) {
    return (RepositoryWebrefMentionDebugInfo) super.set(fieldName, value);
  }

  @Override
  public RepositoryWebrefMentionDebugInfo clone() {
    return (RepositoryWebrefMentionDebugInfo) super.clone();
  }

}
