/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.networkconnectivity.v1.model;

/**
 * A route defines a path from VM instances within a spoke to a specific destination resource. Only
 * VPC spokes have routes.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Network Connectivity API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Route extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The time the route was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * An optional description of the route.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * The destination IP address range.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String ipCidrRange;

  /**
   * Optional labels in key-value pair format. For more information about labels, see [Requirements
   * for labels](https://cloud.google.com/resource-manager/docs/creating-managing-
   * labels#requirements).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Output only. The origin location of the route. Uses the following form:
   * "projects/{project}/locations/{location}" Example: projects/1234/locations/us-central1
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String location;

  /**
   * Immutable. The name of the route. Route names must be unique. Route names use the following
   * form: `projects/{project_number}/locations/global/hubs/{hub}/routeTables/{route_table_id}/route
   * s/{route_id}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Immutable. The next-hop VLAN attachment for packets on this route.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private NextHopInterconnectAttachment nextHopInterconnectAttachment;

  /**
   * Immutable. The next-hop Router appliance instance for packets on this route.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private NextHopRouterApplianceInstance nextHopRouterApplianceInstance;

  /**
   * Immutable. The destination VPC network for packets on this route.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private NextHopVpcNetwork nextHopVpcNetwork;

  /**
   * Immutable. The next-hop VPN tunnel for packets on this route.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private NextHopVPNTunnel nextHopVpnTunnel;

  /**
   * Output only. The priority of this route. Priority is used to break ties in cases where a
   * destination matches more than one route. In these cases the route with the lowest-numbered
   * priority value wins.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long priority;

  /**
   * Immutable. The spoke that this route leads to. Example:
   * projects/12345/locations/global/spokes/SPOKE
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String spoke;

  /**
   * Output only. The current lifecycle state of the route.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Output only. The route's type. Its type is determined by the properties of its IP address
   * range.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * Output only. The Google-generated UUID for the route. This value is unique across all Network
   * Connectivity Center route resources. If a route is deleted and another with the same name is
   * created, the new route is assigned a different `uid`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String uid;

  /**
   * Output only. The time the route was last updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Output only. The time the route was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The time the route was created.
   * @param createTime createTime or {@code null} for none
   */
  public Route setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * An optional description of the route.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * An optional description of the route.
   * @param description description or {@code null} for none
   */
  public Route setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * The destination IP address range.
   * @return value or {@code null} for none
   */
  public java.lang.String getIpCidrRange() {
    return ipCidrRange;
  }

  /**
   * The destination IP address range.
   * @param ipCidrRange ipCidrRange or {@code null} for none
   */
  public Route setIpCidrRange(java.lang.String ipCidrRange) {
    this.ipCidrRange = ipCidrRange;
    return this;
  }

  /**
   * Optional labels in key-value pair format. For more information about labels, see [Requirements
   * for labels](https://cloud.google.com/resource-manager/docs/creating-managing-
   * labels#requirements).
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Optional labels in key-value pair format. For more information about labels, see [Requirements
   * for labels](https://cloud.google.com/resource-manager/docs/creating-managing-
   * labels#requirements).
   * @param labels labels or {@code null} for none
   */
  public Route setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Output only. The origin location of the route. Uses the following form:
   * "projects/{project}/locations/{location}" Example: projects/1234/locations/us-central1
   * @return value or {@code null} for none
   */
  public java.lang.String getLocation() {
    return location;
  }

  /**
   * Output only. The origin location of the route. Uses the following form:
   * "projects/{project}/locations/{location}" Example: projects/1234/locations/us-central1
   * @param location location or {@code null} for none
   */
  public Route setLocation(java.lang.String location) {
    this.location = location;
    return this;
  }

  /**
   * Immutable. The name of the route. Route names must be unique. Route names use the following
   * form: `projects/{project_number}/locations/global/hubs/{hub}/routeTables/{route_table_id}/route
   * s/{route_id}`
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Immutable. The name of the route. Route names must be unique. Route names use the following
   * form: `projects/{project_number}/locations/global/hubs/{hub}/routeTables/{route_table_id}/route
   * s/{route_id}`
   * @param name name or {@code null} for none
   */
  public Route setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Immutable. The next-hop VLAN attachment for packets on this route.
   * @return value or {@code null} for none
   */
  public NextHopInterconnectAttachment getNextHopInterconnectAttachment() {
    return nextHopInterconnectAttachment;
  }

  /**
   * Immutable. The next-hop VLAN attachment for packets on this route.
   * @param nextHopInterconnectAttachment nextHopInterconnectAttachment or {@code null} for none
   */
  public Route setNextHopInterconnectAttachment(NextHopInterconnectAttachment nextHopInterconnectAttachment) {
    this.nextHopInterconnectAttachment = nextHopInterconnectAttachment;
    return this;
  }

  /**
   * Immutable. The next-hop Router appliance instance for packets on this route.
   * @return value or {@code null} for none
   */
  public NextHopRouterApplianceInstance getNextHopRouterApplianceInstance() {
    return nextHopRouterApplianceInstance;
  }

  /**
   * Immutable. The next-hop Router appliance instance for packets on this route.
   * @param nextHopRouterApplianceInstance nextHopRouterApplianceInstance or {@code null} for none
   */
  public Route setNextHopRouterApplianceInstance(NextHopRouterApplianceInstance nextHopRouterApplianceInstance) {
    this.nextHopRouterApplianceInstance = nextHopRouterApplianceInstance;
    return this;
  }

  /**
   * Immutable. The destination VPC network for packets on this route.
   * @return value or {@code null} for none
   */
  public NextHopVpcNetwork getNextHopVpcNetwork() {
    return nextHopVpcNetwork;
  }

  /**
   * Immutable. The destination VPC network for packets on this route.
   * @param nextHopVpcNetwork nextHopVpcNetwork or {@code null} for none
   */
  public Route setNextHopVpcNetwork(NextHopVpcNetwork nextHopVpcNetwork) {
    this.nextHopVpcNetwork = nextHopVpcNetwork;
    return this;
  }

  /**
   * Immutable. The next-hop VPN tunnel for packets on this route.
   * @return value or {@code null} for none
   */
  public NextHopVPNTunnel getNextHopVpnTunnel() {
    return nextHopVpnTunnel;
  }

  /**
   * Immutable. The next-hop VPN tunnel for packets on this route.
   * @param nextHopVpnTunnel nextHopVpnTunnel or {@code null} for none
   */
  public Route setNextHopVpnTunnel(NextHopVPNTunnel nextHopVpnTunnel) {
    this.nextHopVpnTunnel = nextHopVpnTunnel;
    return this;
  }

  /**
   * Output only. The priority of this route. Priority is used to break ties in cases where a
   * destination matches more than one route. In these cases the route with the lowest-numbered
   * priority value wins.
   * @return value or {@code null} for none
   */
  public java.lang.Long getPriority() {
    return priority;
  }

  /**
   * Output only. The priority of this route. Priority is used to break ties in cases where a
   * destination matches more than one route. In these cases the route with the lowest-numbered
   * priority value wins.
   * @param priority priority or {@code null} for none
   */
  public Route setPriority(java.lang.Long priority) {
    this.priority = priority;
    return this;
  }

  /**
   * Immutable. The spoke that this route leads to. Example:
   * projects/12345/locations/global/spokes/SPOKE
   * @return value or {@code null} for none
   */
  public java.lang.String getSpoke() {
    return spoke;
  }

  /**
   * Immutable. The spoke that this route leads to. Example:
   * projects/12345/locations/global/spokes/SPOKE
   * @param spoke spoke or {@code null} for none
   */
  public Route setSpoke(java.lang.String spoke) {
    this.spoke = spoke;
    return this;
  }

  /**
   * Output only. The current lifecycle state of the route.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. The current lifecycle state of the route.
   * @param state state or {@code null} for none
   */
  public Route setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Output only. The route's type. Its type is determined by the properties of its IP address
   * range.
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * Output only. The route's type. Its type is determined by the properties of its IP address
   * range.
   * @param type type or {@code null} for none
   */
  public Route setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  /**
   * Output only. The Google-generated UUID for the route. This value is unique across all Network
   * Connectivity Center route resources. If a route is deleted and another with the same name is
   * created, the new route is assigned a different `uid`.
   * @return value or {@code null} for none
   */
  public java.lang.String getUid() {
    return uid;
  }

  /**
   * Output only. The Google-generated UUID for the route. This value is unique across all Network
   * Connectivity Center route resources. If a route is deleted and another with the same name is
   * created, the new route is assigned a different `uid`.
   * @param uid uid or {@code null} for none
   */
  public Route setUid(java.lang.String uid) {
    this.uid = uid;
    return this;
  }

  /**
   * Output only. The time the route was last updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. The time the route was last updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public Route setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public Route set(String fieldName, Object value) {
    return (Route) super.set(fieldName, value);
  }

  @Override
  public Route clone() {
    return (Route) super.clone();
  }

}
