/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.sts.v1.model;

/**
 * Request message for ExchangeOauthToken
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Security Token Service API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleIdentityStsV1ExchangeOauthTokenRequest extends com.google.api.client.json.GenericJson {

  /**
   * Optional. The client identifier for the OAuth 2.0 client that requested the provided token. It
   * is REQUIRED when the [client] (https://www.rfc-editor.org/rfc/rfc6749#section-1.1) is not
   * authenticating with the authorization server, i.e. when authentication method is [client
   * authentication] (https://www.rfc-editor.org/rfc/rfc6749#section-3.2.1).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String clientId;

  /**
   * Optional. The authorization code that was previously from workforce identity federation's
   * `authorize` endpoint. Required if the flow is authorization code flow, i.e. if grant_type is
   * 'authorization_code'
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String code;

  /**
   * Optional. The code verifier for the PKCE request, Google Cloud CLI originally generates it
   * before the authorization request. PKCE is used to protect authorization code from interception
   * attacks. See https://www.rfc-editor.org/rfc/rfc7636#section-1.1 and https://www.rfc-
   * editor.org/rfc/rfc7636#section-3. It is required when the flow is authorization code flow, i.e.
   * if grant_type is 'authorization_code'
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String codeVerifier;

  /**
   * Required. The grant types are as follows: - 'authorization_code' : an authorization code flow,
   * i.e. exchange of authorization code for the Oauth access token - 'refresh_token' : a refresh
   * token flow, i.e. obtain a new access token by providing the refresh token. See https://www.rfc-
   * editor.org/rfc/rfc6749#section-6
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String grantType;

  /**
   * Optional. redirect_url is required when the flow is authorization code flow i.e. if grant_type
   * is `authorization_code` See https://www.rfc-editor.org/rfc/rfc6749#section-4.1.3
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String redirectUri;

  /**
   * Optional. The Refresh token is the credential that is used to obtain a new access token when
   * the current access token becomes invalid or expires. Required when using refresh token flow,
   * i.e. if `grant_type` is 'refresh_token' See https://www.rfc-editor.org/rfc/rfc6749#section-1.5
   * and https://www.rfc-editor.org/rfc/rfc6749#section-6
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String refreshToken;

  /**
   * Optional. An optional list of scopes that are requested for the token to be returned. See
   * https://www.rfc-editor.org/rfc/rfc6749#section-3.3 Must be a list of space-delimited, case-
   * sensitive strings. Note: Currently, the scopes in the request are not supported
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String scope;

  /**
   * Optional. The client identifier for the OAuth 2.0 client that requested the provided token. It
   * is REQUIRED when the [client] (https://www.rfc-editor.org/rfc/rfc6749#section-1.1) is not
   * authenticating with the authorization server, i.e. when authentication method is [client
   * authentication] (https://www.rfc-editor.org/rfc/rfc6749#section-3.2.1).
   * @return value or {@code null} for none
   */
  public java.lang.String getClientId() {
    return clientId;
  }

  /**
   * Optional. The client identifier for the OAuth 2.0 client that requested the provided token. It
   * is REQUIRED when the [client] (https://www.rfc-editor.org/rfc/rfc6749#section-1.1) is not
   * authenticating with the authorization server, i.e. when authentication method is [client
   * authentication] (https://www.rfc-editor.org/rfc/rfc6749#section-3.2.1).
   * @param clientId clientId or {@code null} for none
   */
  public GoogleIdentityStsV1ExchangeOauthTokenRequest setClientId(java.lang.String clientId) {
    this.clientId = clientId;
    return this;
  }

  /**
   * Optional. The authorization code that was previously from workforce identity federation's
   * `authorize` endpoint. Required if the flow is authorization code flow, i.e. if grant_type is
   * 'authorization_code'
   * @return value or {@code null} for none
   */
  public java.lang.String getCode() {
    return code;
  }

  /**
   * Optional. The authorization code that was previously from workforce identity federation's
   * `authorize` endpoint. Required if the flow is authorization code flow, i.e. if grant_type is
   * 'authorization_code'
   * @param code code or {@code null} for none
   */
  public GoogleIdentityStsV1ExchangeOauthTokenRequest setCode(java.lang.String code) {
    this.code = code;
    return this;
  }

  /**
   * Optional. The code verifier for the PKCE request, Google Cloud CLI originally generates it
   * before the authorization request. PKCE is used to protect authorization code from interception
   * attacks. See https://www.rfc-editor.org/rfc/rfc7636#section-1.1 and https://www.rfc-
   * editor.org/rfc/rfc7636#section-3. It is required when the flow is authorization code flow, i.e.
   * if grant_type is 'authorization_code'
   * @return value or {@code null} for none
   */
  public java.lang.String getCodeVerifier() {
    return codeVerifier;
  }

  /**
   * Optional. The code verifier for the PKCE request, Google Cloud CLI originally generates it
   * before the authorization request. PKCE is used to protect authorization code from interception
   * attacks. See https://www.rfc-editor.org/rfc/rfc7636#section-1.1 and https://www.rfc-
   * editor.org/rfc/rfc7636#section-3. It is required when the flow is authorization code flow, i.e.
   * if grant_type is 'authorization_code'
   * @param codeVerifier codeVerifier or {@code null} for none
   */
  public GoogleIdentityStsV1ExchangeOauthTokenRequest setCodeVerifier(java.lang.String codeVerifier) {
    this.codeVerifier = codeVerifier;
    return this;
  }

  /**
   * Required. The grant types are as follows: - 'authorization_code' : an authorization code flow,
   * i.e. exchange of authorization code for the Oauth access token - 'refresh_token' : a refresh
   * token flow, i.e. obtain a new access token by providing the refresh token. See https://www.rfc-
   * editor.org/rfc/rfc6749#section-6
   * @return value or {@code null} for none
   */
  public java.lang.String getGrantType() {
    return grantType;
  }

  /**
   * Required. The grant types are as follows: - 'authorization_code' : an authorization code flow,
   * i.e. exchange of authorization code for the Oauth access token - 'refresh_token' : a refresh
   * token flow, i.e. obtain a new access token by providing the refresh token. See https://www.rfc-
   * editor.org/rfc/rfc6749#section-6
   * @param grantType grantType or {@code null} for none
   */
  public GoogleIdentityStsV1ExchangeOauthTokenRequest setGrantType(java.lang.String grantType) {
    this.grantType = grantType;
    return this;
  }

  /**
   * Optional. redirect_url is required when the flow is authorization code flow i.e. if grant_type
   * is `authorization_code` See https://www.rfc-editor.org/rfc/rfc6749#section-4.1.3
   * @return value or {@code null} for none
   */
  public java.lang.String getRedirectUri() {
    return redirectUri;
  }

  /**
   * Optional. redirect_url is required when the flow is authorization code flow i.e. if grant_type
   * is `authorization_code` See https://www.rfc-editor.org/rfc/rfc6749#section-4.1.3
   * @param redirectUri redirectUri or {@code null} for none
   */
  public GoogleIdentityStsV1ExchangeOauthTokenRequest setRedirectUri(java.lang.String redirectUri) {
    this.redirectUri = redirectUri;
    return this;
  }

  /**
   * Optional. The Refresh token is the credential that is used to obtain a new access token when
   * the current access token becomes invalid or expires. Required when using refresh token flow,
   * i.e. if `grant_type` is 'refresh_token' See https://www.rfc-editor.org/rfc/rfc6749#section-1.5
   * and https://www.rfc-editor.org/rfc/rfc6749#section-6
   * @return value or {@code null} for none
   */
  public java.lang.String getRefreshToken() {
    return refreshToken;
  }

  /**
   * Optional. The Refresh token is the credential that is used to obtain a new access token when
   * the current access token becomes invalid or expires. Required when using refresh token flow,
   * i.e. if `grant_type` is 'refresh_token' See https://www.rfc-editor.org/rfc/rfc6749#section-1.5
   * and https://www.rfc-editor.org/rfc/rfc6749#section-6
   * @param refreshToken refreshToken or {@code null} for none
   */
  public GoogleIdentityStsV1ExchangeOauthTokenRequest setRefreshToken(java.lang.String refreshToken) {
    this.refreshToken = refreshToken;
    return this;
  }

  /**
   * Optional. An optional list of scopes that are requested for the token to be returned. See
   * https://www.rfc-editor.org/rfc/rfc6749#section-3.3 Must be a list of space-delimited, case-
   * sensitive strings. Note: Currently, the scopes in the request are not supported
   * @return value or {@code null} for none
   */
  public java.lang.String getScope() {
    return scope;
  }

  /**
   * Optional. An optional list of scopes that are requested for the token to be returned. See
   * https://www.rfc-editor.org/rfc/rfc6749#section-3.3 Must be a list of space-delimited, case-
   * sensitive strings. Note: Currently, the scopes in the request are not supported
   * @param scope scope or {@code null} for none
   */
  public GoogleIdentityStsV1ExchangeOauthTokenRequest setScope(java.lang.String scope) {
    this.scope = scope;
    return this;
  }

  @Override
  public GoogleIdentityStsV1ExchangeOauthTokenRequest set(String fieldName, Object value) {
    return (GoogleIdentityStsV1ExchangeOauthTokenRequest) super.set(fieldName, value);
  }

  @Override
  public GoogleIdentityStsV1ExchangeOauthTokenRequest clone() {
    return (GoogleIdentityStsV1ExchangeOauthTokenRequest) super.clone();
  }

}
