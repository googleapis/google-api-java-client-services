/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Model definition for AppsPeopleOzExternalMergedpeopleapiIdentityInfo.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AppsPeopleOzExternalMergedpeopleapiIdentityInfo extends com.google.api.client.json.GenericJson {

  /**
   * Original lookup token from the request that resulted in this person or one of its containers.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> originalLookupToken;

  /**
   * Any former IDs this person may have had, in the case that their ID may have changed. Populated
   * only for sync requests. Examples of such changes include adding an edge to a contact that links
   * to a profile. The ID will change from being contact-oriented to being profile-oriented. To be
   * used to clear out old versions of a person.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> previousPersonId;

  /**
   * A list of sources contributing to the merged person, including profiles (with gaia-id),
   * contacts and synthetic-contacts.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AppsPeopleOzExternalMergedpeopleapiSourceIdentity> sourceIds;

  /**
   * Original lookup token from the request that resulted in this person or one of its containers.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getOriginalLookupToken() {
    return originalLookupToken;
  }

  /**
   * Original lookup token from the request that resulted in this person or one of its containers.
   * @param originalLookupToken originalLookupToken or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiIdentityInfo setOriginalLookupToken(java.util.List<java.lang.String> originalLookupToken) {
    this.originalLookupToken = originalLookupToken;
    return this;
  }

  /**
   * Any former IDs this person may have had, in the case that their ID may have changed. Populated
   * only for sync requests. Examples of such changes include adding an edge to a contact that links
   * to a profile. The ID will change from being contact-oriented to being profile-oriented. To be
   * used to clear out old versions of a person.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getPreviousPersonId() {
    return previousPersonId;
  }

  /**
   * Any former IDs this person may have had, in the case that their ID may have changed. Populated
   * only for sync requests. Examples of such changes include adding an edge to a contact that links
   * to a profile. The ID will change from being contact-oriented to being profile-oriented. To be
   * used to clear out old versions of a person.
   * @param previousPersonId previousPersonId or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiIdentityInfo setPreviousPersonId(java.util.List<java.lang.String> previousPersonId) {
    this.previousPersonId = previousPersonId;
    return this;
  }

  /**
   * A list of sources contributing to the merged person, including profiles (with gaia-id),
   * contacts and synthetic-contacts.
   * @return value or {@code null} for none
   */
  public java.util.List<AppsPeopleOzExternalMergedpeopleapiSourceIdentity> getSourceIds() {
    return sourceIds;
  }

  /**
   * A list of sources contributing to the merged person, including profiles (with gaia-id),
   * contacts and synthetic-contacts.
   * @param sourceIds sourceIds or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiIdentityInfo setSourceIds(java.util.List<AppsPeopleOzExternalMergedpeopleapiSourceIdentity> sourceIds) {
    this.sourceIds = sourceIds;
    return this;
  }

  @Override
  public AppsPeopleOzExternalMergedpeopleapiIdentityInfo set(String fieldName, Object value) {
    return (AppsPeopleOzExternalMergedpeopleapiIdentityInfo) super.set(fieldName, value);
  }

  @Override
  public AppsPeopleOzExternalMergedpeopleapiIdentityInfo clone() {
    return (AppsPeopleOzExternalMergedpeopleapiIdentityInfo) super.clone();
  }

}
