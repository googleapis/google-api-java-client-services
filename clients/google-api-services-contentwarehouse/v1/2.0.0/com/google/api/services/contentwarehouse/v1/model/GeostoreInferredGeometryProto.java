/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * The inferred geometry of a feature contains all the features which, together, define the geometry
 * of a feature. This happens by: 1. Taking the union of all polygons of features referenced in
 * "includes_geometry_of". 2. Subtract the geometries of all the features referenced in
 * "excludes_geometry_of". See: go/inferred-geometry for more information.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GeostoreInferredGeometryProto extends com.google.api.client.json.GenericJson {

  /**
   * Features whose geometry depends on this feature's geometry.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GeostoreFeatureIdProto> definesGeometryFor;

  static {
    // hack to force ProGuard to consider GeostoreFeatureIdProto used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(GeostoreFeatureIdProto.class);
  }

  /**
   * Features whose geometry to exclude while inferring geometry.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GeostoreFeatureIdProto> excludesGeometryOf;

  static {
    // hack to force ProGuard to consider GeostoreFeatureIdProto used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(GeostoreFeatureIdProto.class);
  }

  /**
   * Features whose geometry to include while inferring geometry.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GeostoreFeatureIdProto> includesGeometryOf;

  static {
    // hack to force ProGuard to consider GeostoreFeatureIdProto used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(GeostoreFeatureIdProto.class);
  }

  /**
   * Features whose geometry depends on this feature's geometry.
   * @return value or {@code null} for none
   */
  public java.util.List<GeostoreFeatureIdProto> getDefinesGeometryFor() {
    return definesGeometryFor;
  }

  /**
   * Features whose geometry depends on this feature's geometry.
   * @param definesGeometryFor definesGeometryFor or {@code null} for none
   */
  public GeostoreInferredGeometryProto setDefinesGeometryFor(java.util.List<GeostoreFeatureIdProto> definesGeometryFor) {
    this.definesGeometryFor = definesGeometryFor;
    return this;
  }

  /**
   * Features whose geometry to exclude while inferring geometry.
   * @return value or {@code null} for none
   */
  public java.util.List<GeostoreFeatureIdProto> getExcludesGeometryOf() {
    return excludesGeometryOf;
  }

  /**
   * Features whose geometry to exclude while inferring geometry.
   * @param excludesGeometryOf excludesGeometryOf or {@code null} for none
   */
  public GeostoreInferredGeometryProto setExcludesGeometryOf(java.util.List<GeostoreFeatureIdProto> excludesGeometryOf) {
    this.excludesGeometryOf = excludesGeometryOf;
    return this;
  }

  /**
   * Features whose geometry to include while inferring geometry.
   * @return value or {@code null} for none
   */
  public java.util.List<GeostoreFeatureIdProto> getIncludesGeometryOf() {
    return includesGeometryOf;
  }

  /**
   * Features whose geometry to include while inferring geometry.
   * @param includesGeometryOf includesGeometryOf or {@code null} for none
   */
  public GeostoreInferredGeometryProto setIncludesGeometryOf(java.util.List<GeostoreFeatureIdProto> includesGeometryOf) {
    this.includesGeometryOf = includesGeometryOf;
    return this;
  }

  @Override
  public GeostoreInferredGeometryProto set(String fieldName, Object value) {
    return (GeostoreInferredGeometryProto) super.set(fieldName, value);
  }

  @Override
  public GeostoreInferredGeometryProto clone() {
    return (GeostoreInferredGeometryProto) super.clone();
  }

}
