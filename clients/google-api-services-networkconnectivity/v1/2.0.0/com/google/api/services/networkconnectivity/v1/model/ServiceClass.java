/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.networkconnectivity.v1.model;

/**
 * The ServiceClass resource.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Network Connectivity API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ServiceClass extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Time when the ServiceClass was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * A description of this resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Optional. The etag is computed by the server, and may be sent on update and delete requests to
   * ensure the client has an up-to-date value before proceeding.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String etag;

  /**
   * User-defined labels.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Immutable. The name of a ServiceClass resource. Format:
   * projects/{project}/locations/{location}/serviceClasses/{service_class} See:
   * https://google.aip.dev/122#fields-representing-resource-names
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. The generated service class name. Use this name to refer to the Service class in
   * Service Connection Maps and Service Connection Policies.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String serviceClass;

  /**
   * Output only. Time when the ServiceClass was updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Output only. Time when the ServiceClass was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. Time when the ServiceClass was created.
   * @param createTime createTime or {@code null} for none
   */
  public ServiceClass setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * A description of this resource.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * A description of this resource.
   * @param description description or {@code null} for none
   */
  public ServiceClass setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Optional. The etag is computed by the server, and may be sent on update and delete requests to
   * ensure the client has an up-to-date value before proceeding.
   * @return value or {@code null} for none
   */
  public java.lang.String getEtag() {
    return etag;
  }

  /**
   * Optional. The etag is computed by the server, and may be sent on update and delete requests to
   * ensure the client has an up-to-date value before proceeding.
   * @param etag etag or {@code null} for none
   */
  public ServiceClass setEtag(java.lang.String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * User-defined labels.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * User-defined labels.
   * @param labels labels or {@code null} for none
   */
  public ServiceClass setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Immutable. The name of a ServiceClass resource. Format:
   * projects/{project}/locations/{location}/serviceClasses/{service_class} See:
   * https://google.aip.dev/122#fields-representing-resource-names
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Immutable. The name of a ServiceClass resource. Format:
   * projects/{project}/locations/{location}/serviceClasses/{service_class} See:
   * https://google.aip.dev/122#fields-representing-resource-names
   * @param name name or {@code null} for none
   */
  public ServiceClass setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. The generated service class name. Use this name to refer to the Service class in
   * Service Connection Maps and Service Connection Policies.
   * @return value or {@code null} for none
   */
  public java.lang.String getServiceClass() {
    return serviceClass;
  }

  /**
   * Output only. The generated service class name. Use this name to refer to the Service class in
   * Service Connection Maps and Service Connection Policies.
   * @param serviceClass serviceClass or {@code null} for none
   */
  public ServiceClass setServiceClass(java.lang.String serviceClass) {
    this.serviceClass = serviceClass;
    return this;
  }

  /**
   * Output only. Time when the ServiceClass was updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. Time when the ServiceClass was updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public ServiceClass setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public ServiceClass set(String fieldName, Object value) {
    return (ServiceClass) super.set(fieldName, value);
  }

  @Override
  public ServiceClass clone() {
    return (ServiceClass) super.clone();
  }

}
