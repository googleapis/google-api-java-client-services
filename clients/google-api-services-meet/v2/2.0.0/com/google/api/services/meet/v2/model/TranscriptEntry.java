/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.meet.v2.model;

/**
 * Single entry for one userâ€™s speech during a transcript session.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Meet API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class TranscriptEntry extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Timestamp when the transcript entry ended.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String endTime;

  /**
   * Output only. Language of spoken text, such as "en-US". IETF BCP 47 syntax
   * (https://tools.ietf.org/html/bcp47)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String languageCode;

  /**
   * Output only. Resource name of the entry. Format:
   * "conferenceRecords/{conference_record}/transcripts/{transcript}/entries/{entry}"
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. Refers to the participant who speaks.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String participant;

  /**
   * Output only. Timestamp when the transcript entry started.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String startTime;

  /**
   * Output only. The transcribed text of the participant's voice, at maximum 10K words. Note that
   * the limit is subject to change.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String text;

  /**
   * Output only. Timestamp when the transcript entry ended.
   * @return value or {@code null} for none
   */
  public String getEndTime() {
    return endTime;
  }

  /**
   * Output only. Timestamp when the transcript entry ended.
   * @param endTime endTime or {@code null} for none
   */
  public TranscriptEntry setEndTime(String endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Output only. Language of spoken text, such as "en-US". IETF BCP 47 syntax
   * (https://tools.ietf.org/html/bcp47)
   * @return value or {@code null} for none
   */
  public java.lang.String getLanguageCode() {
    return languageCode;
  }

  /**
   * Output only. Language of spoken text, such as "en-US". IETF BCP 47 syntax
   * (https://tools.ietf.org/html/bcp47)
   * @param languageCode languageCode or {@code null} for none
   */
  public TranscriptEntry setLanguageCode(java.lang.String languageCode) {
    this.languageCode = languageCode;
    return this;
  }

  /**
   * Output only. Resource name of the entry. Format:
   * "conferenceRecords/{conference_record}/transcripts/{transcript}/entries/{entry}"
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. Resource name of the entry. Format:
   * "conferenceRecords/{conference_record}/transcripts/{transcript}/entries/{entry}"
   * @param name name or {@code null} for none
   */
  public TranscriptEntry setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. Refers to the participant who speaks.
   * @return value or {@code null} for none
   */
  public java.lang.String getParticipant() {
    return participant;
  }

  /**
   * Output only. Refers to the participant who speaks.
   * @param participant participant or {@code null} for none
   */
  public TranscriptEntry setParticipant(java.lang.String participant) {
    this.participant = participant;
    return this;
  }

  /**
   * Output only. Timestamp when the transcript entry started.
   * @return value or {@code null} for none
   */
  public String getStartTime() {
    return startTime;
  }

  /**
   * Output only. Timestamp when the transcript entry started.
   * @param startTime startTime or {@code null} for none
   */
  public TranscriptEntry setStartTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Output only. The transcribed text of the participant's voice, at maximum 10K words. Note that
   * the limit is subject to change.
   * @return value or {@code null} for none
   */
  public java.lang.String getText() {
    return text;
  }

  /**
   * Output only. The transcribed text of the participant's voice, at maximum 10K words. Note that
   * the limit is subject to change.
   * @param text text or {@code null} for none
   */
  public TranscriptEntry setText(java.lang.String text) {
    this.text = text;
    return this;
  }

  @Override
  public TranscriptEntry set(String fieldName, Object value) {
    return (TranscriptEntry) super.set(fieldName, value);
  }

  @Override
  public TranscriptEntry clone() {
    return (TranscriptEntry) super.clone();
  }

}
