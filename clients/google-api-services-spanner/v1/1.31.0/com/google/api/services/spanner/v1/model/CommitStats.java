/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.spanner.v1.model;

/**
 * Additional statistics about a commit.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Spanner API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class CommitStats extends com.google.api.client.json.GenericJson {

  /**
   * The total number of mutations for the transaction. Knowing the `mutation_count` value can help
   * you maximize the number of mutations in a transaction and minimize the number of API round
   * trips. You can also monitor this value to prevent transactions from exceeding the system [limit
   * ](http://cloud.google.com/spanner/quotas#limits_for_creating_reading_updating_and_deleting_data
   * ). If the number of mutations exceeds the limit, the server returns [INVALID_ARGUMENT](http://c
   * loud.google.com/spanner/docs/reference/rest/v1/Code#ENUM_VALUES.INVALID_ARGUMENT).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long mutationCount;

  /**
   * The total number of mutations for the transaction. Knowing the `mutation_count` value can help
   * you maximize the number of mutations in a transaction and minimize the number of API round
   * trips. You can also monitor this value to prevent transactions from exceeding the system [limit
   * ](http://cloud.google.com/spanner/quotas#limits_for_creating_reading_updating_and_deleting_data
   * ). If the number of mutations exceeds the limit, the server returns [INVALID_ARGUMENT](http://c
   * loud.google.com/spanner/docs/reference/rest/v1/Code#ENUM_VALUES.INVALID_ARGUMENT).
   * @return value or {@code null} for none
   */
  public java.lang.Long getMutationCount() {
    return mutationCount;
  }

  /**
   * The total number of mutations for the transaction. Knowing the `mutation_count` value can help
   * you maximize the number of mutations in a transaction and minimize the number of API round
   * trips. You can also monitor this value to prevent transactions from exceeding the system [limit
   * ](http://cloud.google.com/spanner/quotas#limits_for_creating_reading_updating_and_deleting_data
   * ). If the number of mutations exceeds the limit, the server returns [INVALID_ARGUMENT](http://c
   * loud.google.com/spanner/docs/reference/rest/v1/Code#ENUM_VALUES.INVALID_ARGUMENT).
   * @param mutationCount mutationCount or {@code null} for none
   */
  public CommitStats setMutationCount(java.lang.Long mutationCount) {
    this.mutationCount = mutationCount;
    return this;
  }

  @Override
  public CommitStats set(String fieldName, Object value) {
    return (CommitStats) super.set(fieldName, value);
  }

  @Override
  public CommitStats clone() {
    return (CommitStats) super.clone();
  }

}
