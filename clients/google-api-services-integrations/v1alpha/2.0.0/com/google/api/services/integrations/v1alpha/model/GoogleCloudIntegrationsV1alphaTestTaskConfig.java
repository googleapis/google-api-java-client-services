/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.integrations.v1alpha.model;

/**
 * The task mock configuration details and assertions for functional tests. Next available id: 5
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Application Integration API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudIntegrationsV1alphaTestTaskConfig extends com.google.api.client.json.GenericJson {

  /**
   * Optional. List of conditions or expressions which should be evaluated to true unless there is a
   * bug/problem in the integration. These are evaluated one the task execution is completed as per
   * the mock strategy in test case
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudIntegrationsV1alphaAssertion> assertions;

  static {
    // hack to force ProGuard to consider GoogleCloudIntegrationsV1alphaAssertion used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(GoogleCloudIntegrationsV1alphaAssertion.class);
  }

  /**
   * Optional. Defines how to mock the given task during test execution
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudIntegrationsV1alphaMockConfig mockConfig;

  /**
   * Required. This defines in the test case, the task name in integration which will be mocked by
   * this test task config
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String task;

  /**
   * Required. This defines in the test case, the task in integration which will be mocked by this
   * test task config
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String taskNumber;

  /**
   * Optional. List of conditions or expressions which should be evaluated to true unless there is a
   * bug/problem in the integration. These are evaluated one the task execution is completed as per
   * the mock strategy in test case
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudIntegrationsV1alphaAssertion> getAssertions() {
    return assertions;
  }

  /**
   * Optional. List of conditions or expressions which should be evaluated to true unless there is a
   * bug/problem in the integration. These are evaluated one the task execution is completed as per
   * the mock strategy in test case
   * @param assertions assertions or {@code null} for none
   */
  public GoogleCloudIntegrationsV1alphaTestTaskConfig setAssertions(java.util.List<GoogleCloudIntegrationsV1alphaAssertion> assertions) {
    this.assertions = assertions;
    return this;
  }

  /**
   * Optional. Defines how to mock the given task during test execution
   * @return value or {@code null} for none
   */
  public GoogleCloudIntegrationsV1alphaMockConfig getMockConfig() {
    return mockConfig;
  }

  /**
   * Optional. Defines how to mock the given task during test execution
   * @param mockConfig mockConfig or {@code null} for none
   */
  public GoogleCloudIntegrationsV1alphaTestTaskConfig setMockConfig(GoogleCloudIntegrationsV1alphaMockConfig mockConfig) {
    this.mockConfig = mockConfig;
    return this;
  }

  /**
   * Required. This defines in the test case, the task name in integration which will be mocked by
   * this test task config
   * @return value or {@code null} for none
   */
  public java.lang.String getTask() {
    return task;
  }

  /**
   * Required. This defines in the test case, the task name in integration which will be mocked by
   * this test task config
   * @param task task or {@code null} for none
   */
  public GoogleCloudIntegrationsV1alphaTestTaskConfig setTask(java.lang.String task) {
    this.task = task;
    return this;
  }

  /**
   * Required. This defines in the test case, the task in integration which will be mocked by this
   * test task config
   * @return value or {@code null} for none
   */
  public java.lang.String getTaskNumber() {
    return taskNumber;
  }

  /**
   * Required. This defines in the test case, the task in integration which will be mocked by this
   * test task config
   * @param taskNumber taskNumber or {@code null} for none
   */
  public GoogleCloudIntegrationsV1alphaTestTaskConfig setTaskNumber(java.lang.String taskNumber) {
    this.taskNumber = taskNumber;
    return this;
  }

  @Override
  public GoogleCloudIntegrationsV1alphaTestTaskConfig set(String fieldName, Object value) {
    return (GoogleCloudIntegrationsV1alphaTestTaskConfig) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudIntegrationsV1alphaTestTaskConfig clone() {
    return (GoogleCloudIntegrationsV1alphaTestTaskConfig) super.clone();
  }

}
