/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.batch.v1.model;

/**
 * TODO(b/182501497) The message needs to be redefined when the Agent API server updates data in
 * storage per the backend design.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Batch API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AgentTask extends com.google.api.client.json.GenericJson {

  /**
   * The intended state of the task.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String intendedState;

  /**
   * The highest barrier reached by all tasks in the task's TaskGroup.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long reachedBarrier;

  /**
   * Task Spec.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private TaskSpec spec;

  /**
   * Task status.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private TaskStatus status;

  /**
   * Task name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String task;

  /**
   * TaskSource represents the source of the task.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String taskSource;

  /**
   * The intended state of the task.
   * @return value or {@code null} for none
   */
  public java.lang.String getIntendedState() {
    return intendedState;
  }

  /**
   * The intended state of the task.
   * @param intendedState intendedState or {@code null} for none
   */
  public AgentTask setIntendedState(java.lang.String intendedState) {
    this.intendedState = intendedState;
    return this;
  }

  /**
   * The highest barrier reached by all tasks in the task's TaskGroup.
   * @return value or {@code null} for none
   */
  public java.lang.Long getReachedBarrier() {
    return reachedBarrier;
  }

  /**
   * The highest barrier reached by all tasks in the task's TaskGroup.
   * @param reachedBarrier reachedBarrier or {@code null} for none
   */
  public AgentTask setReachedBarrier(java.lang.Long reachedBarrier) {
    this.reachedBarrier = reachedBarrier;
    return this;
  }

  /**
   * Task Spec.
   * @return value or {@code null} for none
   */
  public TaskSpec getSpec() {
    return spec;
  }

  /**
   * Task Spec.
   * @param spec spec or {@code null} for none
   */
  public AgentTask setSpec(TaskSpec spec) {
    this.spec = spec;
    return this;
  }

  /**
   * Task status.
   * @return value or {@code null} for none
   */
  public TaskStatus getStatus() {
    return status;
  }

  /**
   * Task status.
   * @param status status or {@code null} for none
   */
  public AgentTask setStatus(TaskStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Task name.
   * @return value or {@code null} for none
   */
  public java.lang.String getTask() {
    return task;
  }

  /**
   * Task name.
   * @param task task or {@code null} for none
   */
  public AgentTask setTask(java.lang.String task) {
    this.task = task;
    return this;
  }

  /**
   * TaskSource represents the source of the task.
   * @return value or {@code null} for none
   */
  public java.lang.String getTaskSource() {
    return taskSource;
  }

  /**
   * TaskSource represents the source of the task.
   * @param taskSource taskSource or {@code null} for none
   */
  public AgentTask setTaskSource(java.lang.String taskSource) {
    this.taskSource = taskSource;
    return this;
  }

  @Override
  public AgentTask set(String fieldName, Object value) {
    return (AgentTask) super.set(fieldName, value);
  }

  @Override
  public AgentTask clone() {
    return (AgentTask) super.clone();
  }

}
