/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Proto message to store quantized dense feature data.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class DrishtiQuantizedByteDenseFeatureData extends com.google.api.client.json.GenericJson {

  /**
   * If extra is present it must be of the same length as value.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<DrishtiFeatureExtra> extra;

  static {
    // hack to force ProGuard to consider DrishtiFeatureExtra used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(DrishtiFeatureExtra.class);
  }

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DrishtiFeatureExtra generalExtra;

  /**
   * Quantized values for the feature.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String value;

  /**
   * If extra is present it must be of the same length as value.
   * @return value or {@code null} for none
   */
  public java.util.List<DrishtiFeatureExtra> getExtra() {
    return extra;
  }

  /**
   * If extra is present it must be of the same length as value.
   * @param extra extra or {@code null} for none
   */
  public DrishtiQuantizedByteDenseFeatureData setExtra(java.util.List<DrishtiFeatureExtra> extra) {
    this.extra = extra;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public DrishtiFeatureExtra getGeneralExtra() {
    return generalExtra;
  }

  /**
   * @param generalExtra generalExtra or {@code null} for none
   */
  public DrishtiQuantizedByteDenseFeatureData setGeneralExtra(DrishtiFeatureExtra generalExtra) {
    this.generalExtra = generalExtra;
    return this;
  }

  /**
   * Quantized values for the feature.
   * @see #decodeValue()
   * @return value or {@code null} for none
   */
  public java.lang.String getValue() {
    return value;
  }

  /**
   * Quantized values for the feature.
   * @see #getValue()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeValue() {
    return com.google.api.client.util.Base64.decodeBase64(value);
  }

  /**
   * Quantized values for the feature.
   * @see #encodeValue()
   * @param value value or {@code null} for none
   */
  public DrishtiQuantizedByteDenseFeatureData setValue(java.lang.String value) {
    this.value = value;
    return this;
  }

  /**
   * Quantized values for the feature.
   * @see #setValue()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public DrishtiQuantizedByteDenseFeatureData encodeValue(byte[] value) {
    this.value = com.google.api.client.util.Base64.encodeBase64URLSafeString(value);
    return this;
  }

  @Override
  public DrishtiQuantizedByteDenseFeatureData set(String fieldName, Object value) {
    return (DrishtiQuantizedByteDenseFeatureData) super.set(fieldName, value);
  }

  @Override
  public DrishtiQuantizedByteDenseFeatureData clone() {
    return (DrishtiQuantizedByteDenseFeatureData) super.clone();
  }

}
