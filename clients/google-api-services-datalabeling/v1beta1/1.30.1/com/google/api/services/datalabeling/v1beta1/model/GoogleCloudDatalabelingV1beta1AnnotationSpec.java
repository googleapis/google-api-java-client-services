/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.datalabeling.v1beta1.model;

/**
 * Container of information related to one possible annotation that can be used in a labeling task.
 * For example, an image classification task where images are labeled as `dog` or `cat` must
 * reference an AnnotationSpec for `dog` and an AnnotationSpec for `cat`.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Data Labeling API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDatalabelingV1beta1AnnotationSpec extends com.google.api.client.json.GenericJson {

  /**
   * Optional. User-provided description of the annotation specification. The description can be up
   * to 10,000 characters long.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Required. The display name of the AnnotationSpec. Maximum of 64 characters.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Output only. This is the integer index of the AnnotationSpec. The index for the whole
   * AnnotationSpecSet is sequential starting from 0. For example, an AnnotationSpecSet with classes
   * `dog` and `cat`, might contain one AnnotationSpec with `{ display_name: "dog", index: 0 }` and
   * one AnnotationSpec with `{ display_name: "cat", index: 1 }`. This is especially useful for
   * model training as it encodes the string labels into numeric values.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer index;

  /**
   * Optional. User-provided description of the annotation specification. The description can be up
   * to 10,000 characters long.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Optional. User-provided description of the annotation specification. The description can be up
   * to 10,000 characters long.
   * @param description description or {@code null} for none
   */
  public GoogleCloudDatalabelingV1beta1AnnotationSpec setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Required. The display name of the AnnotationSpec. Maximum of 64 characters.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Required. The display name of the AnnotationSpec. Maximum of 64 characters.
   * @param displayName displayName or {@code null} for none
   */
  public GoogleCloudDatalabelingV1beta1AnnotationSpec setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Output only. This is the integer index of the AnnotationSpec. The index for the whole
   * AnnotationSpecSet is sequential starting from 0. For example, an AnnotationSpecSet with classes
   * `dog` and `cat`, might contain one AnnotationSpec with `{ display_name: "dog", index: 0 }` and
   * one AnnotationSpec with `{ display_name: "cat", index: 1 }`. This is especially useful for
   * model training as it encodes the string labels into numeric values.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getIndex() {
    return index;
  }

  /**
   * Output only. This is the integer index of the AnnotationSpec. The index for the whole
   * AnnotationSpecSet is sequential starting from 0. For example, an AnnotationSpecSet with classes
   * `dog` and `cat`, might contain one AnnotationSpec with `{ display_name: "dog", index: 0 }` and
   * one AnnotationSpec with `{ display_name: "cat", index: 1 }`. This is especially useful for
   * model training as it encodes the string labels into numeric values.
   * @param index index or {@code null} for none
   */
  public GoogleCloudDatalabelingV1beta1AnnotationSpec setIndex(java.lang.Integer index) {
    this.index = index;
    return this;
  }

  @Override
  public GoogleCloudDatalabelingV1beta1AnnotationSpec set(String fieldName, Object value) {
    return (GoogleCloudDatalabelingV1beta1AnnotationSpec) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDatalabelingV1beta1AnnotationSpec clone() {
    return (GoogleCloudDatalabelingV1beta1AnnotationSpec) super.clone();
  }

}
