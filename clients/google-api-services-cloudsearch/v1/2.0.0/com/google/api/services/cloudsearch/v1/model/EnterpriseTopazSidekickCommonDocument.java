/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudsearch.v1.model;

/**
 * Representation of a document. NEXT_TAG: 15
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Search API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class EnterpriseTopazSidekickCommonDocument extends com.google.api.client.json.GenericJson {

  /**
   * Access type, i.e., whether the user has access to the document or not.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String accessType;

  /**
   * Information for debugging.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private EnterpriseTopazSidekickCommonDebugInfo debugInfo;

  /**
   * Document id.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String documentId;

  /**
   * Drive document metadata.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private EnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata driveDocumentMetadata;

  /**
   * Generic Drive-based url in the format of drive.google.com/open to be used for deeplink
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String genericUrl;

  /**
   * Justification on why the document is selected.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private EnterpriseTopazSidekickCommonDocumentJustification justification;

  /**
   * MIME type
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String mimeType;

  /**
   * Document provenance.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String provenance;

  /**
   * Justification of why this document is being returned.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String reason;

  /**
   * A sampling of the text from the document.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String snippet;

  /**
   * Thumbnail URL.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String thumbnailUrl;

  /**
   * Title of the document.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String title;

  /**
   * Type of the document.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * Absolute URL of the document.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String url;

  /**
   * Access type, i.e., whether the user has access to the document or not.
   * @return value or {@code null} for none
   */
  public java.lang.String getAccessType() {
    return accessType;
  }

  /**
   * Access type, i.e., whether the user has access to the document or not.
   * @param accessType accessType or {@code null} for none
   */
  public EnterpriseTopazSidekickCommonDocument setAccessType(java.lang.String accessType) {
    this.accessType = accessType;
    return this;
  }

  /**
   * Information for debugging.
   * @return value or {@code null} for none
   */
  public EnterpriseTopazSidekickCommonDebugInfo getDebugInfo() {
    return debugInfo;
  }

  /**
   * Information for debugging.
   * @param debugInfo debugInfo or {@code null} for none
   */
  public EnterpriseTopazSidekickCommonDocument setDebugInfo(EnterpriseTopazSidekickCommonDebugInfo debugInfo) {
    this.debugInfo = debugInfo;
    return this;
  }

  /**
   * Document id.
   * @return value or {@code null} for none
   */
  public java.lang.String getDocumentId() {
    return documentId;
  }

  /**
   * Document id.
   * @param documentId documentId or {@code null} for none
   */
  public EnterpriseTopazSidekickCommonDocument setDocumentId(java.lang.String documentId) {
    this.documentId = documentId;
    return this;
  }

  /**
   * Drive document metadata.
   * @return value or {@code null} for none
   */
  public EnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata getDriveDocumentMetadata() {
    return driveDocumentMetadata;
  }

  /**
   * Drive document metadata.
   * @param driveDocumentMetadata driveDocumentMetadata or {@code null} for none
   */
  public EnterpriseTopazSidekickCommonDocument setDriveDocumentMetadata(EnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata driveDocumentMetadata) {
    this.driveDocumentMetadata = driveDocumentMetadata;
    return this;
  }

  /**
   * Generic Drive-based url in the format of drive.google.com/open to be used for deeplink
   * @return value or {@code null} for none
   */
  public java.lang.String getGenericUrl() {
    return genericUrl;
  }

  /**
   * Generic Drive-based url in the format of drive.google.com/open to be used for deeplink
   * @param genericUrl genericUrl or {@code null} for none
   */
  public EnterpriseTopazSidekickCommonDocument setGenericUrl(java.lang.String genericUrl) {
    this.genericUrl = genericUrl;
    return this;
  }

  /**
   * Justification on why the document is selected.
   * @return value or {@code null} for none
   */
  public EnterpriseTopazSidekickCommonDocumentJustification getJustification() {
    return justification;
  }

  /**
   * Justification on why the document is selected.
   * @param justification justification or {@code null} for none
   */
  public EnterpriseTopazSidekickCommonDocument setJustification(EnterpriseTopazSidekickCommonDocumentJustification justification) {
    this.justification = justification;
    return this;
  }

  /**
   * MIME type
   * @return value or {@code null} for none
   */
  public java.lang.String getMimeType() {
    return mimeType;
  }

  /**
   * MIME type
   * @param mimeType mimeType or {@code null} for none
   */
  public EnterpriseTopazSidekickCommonDocument setMimeType(java.lang.String mimeType) {
    this.mimeType = mimeType;
    return this;
  }

  /**
   * Document provenance.
   * @return value or {@code null} for none
   */
  public java.lang.String getProvenance() {
    return provenance;
  }

  /**
   * Document provenance.
   * @param provenance provenance or {@code null} for none
   */
  public EnterpriseTopazSidekickCommonDocument setProvenance(java.lang.String provenance) {
    this.provenance = provenance;
    return this;
  }

  /**
   * Justification of why this document is being returned.
   * @return value or {@code null} for none
   */
  public java.lang.String getReason() {
    return reason;
  }

  /**
   * Justification of why this document is being returned.
   * @param reason reason or {@code null} for none
   */
  public EnterpriseTopazSidekickCommonDocument setReason(java.lang.String reason) {
    this.reason = reason;
    return this;
  }

  /**
   * A sampling of the text from the document.
   * @return value or {@code null} for none
   */
  public java.lang.String getSnippet() {
    return snippet;
  }

  /**
   * A sampling of the text from the document.
   * @param snippet snippet or {@code null} for none
   */
  public EnterpriseTopazSidekickCommonDocument setSnippet(java.lang.String snippet) {
    this.snippet = snippet;
    return this;
  }

  /**
   * Thumbnail URL.
   * @return value or {@code null} for none
   */
  public java.lang.String getThumbnailUrl() {
    return thumbnailUrl;
  }

  /**
   * Thumbnail URL.
   * @param thumbnailUrl thumbnailUrl or {@code null} for none
   */
  public EnterpriseTopazSidekickCommonDocument setThumbnailUrl(java.lang.String thumbnailUrl) {
    this.thumbnailUrl = thumbnailUrl;
    return this;
  }

  /**
   * Title of the document.
   * @return value or {@code null} for none
   */
  public java.lang.String getTitle() {
    return title;
  }

  /**
   * Title of the document.
   * @param title title or {@code null} for none
   */
  public EnterpriseTopazSidekickCommonDocument setTitle(java.lang.String title) {
    this.title = title;
    return this;
  }

  /**
   * Type of the document.
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * Type of the document.
   * @param type type or {@code null} for none
   */
  public EnterpriseTopazSidekickCommonDocument setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  /**
   * Absolute URL of the document.
   * @return value or {@code null} for none
   */
  public java.lang.String getUrl() {
    return url;
  }

  /**
   * Absolute URL of the document.
   * @param url url or {@code null} for none
   */
  public EnterpriseTopazSidekickCommonDocument setUrl(java.lang.String url) {
    this.url = url;
    return this;
  }

  @Override
  public EnterpriseTopazSidekickCommonDocument set(String fieldName, Object value) {
    return (EnterpriseTopazSidekickCommonDocument) super.set(fieldName, value);
  }

  @Override
  public EnterpriseTopazSidekickCommonDocument clone() {
    return (EnterpriseTopazSidekickCommonDocument) super.clone();
  }

}
