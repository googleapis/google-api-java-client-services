{
  "discoveryVersion": "v1",
  "version_module": true,
  "schemas": {
    "GoogleCloudPrivatecatalogproducerV1beta1Version": {
      "description": "The producer representation of a version, which is a child resource under a\n`Product` with asset data.",
      "type": "object",
      "properties": {
        "updateTime": {
          "description": "Output only. The time when the version was last updated.",
          "format": "google-datetime",
          "type": "string"
        },
        "name": {
          "description": "Required. The resource name of the version, in the format\n`catalogs/{catalog_id}/products/{product_id}/versions/a-z*[a-z0-9]'.\n\nA unique identifier for the version under a product, which can't\nbe changed after the version is created. The final segment of the name must\nbetween 1 and 63 characters in length.",
          "type": "string"
        },
        "originalAsset": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "The user-supplied asset payload. The maximum size of the payload is 2MB.\nThe JSON schema of the payload is defined as:\n\n```\ntype: object\nproperties:\n  mainTemplate:\n    type: string\n    description: The file name of the main template and name prefix of\n    schema file. The content of the main template should be set in the\n    imports list. The schema file name is expected to be\n    \u003cmainTemplate\u003e.schema in the imports list. required: true\n  imports:\n    type: array\n    description: Import template and schema file contents. Required to have\n    both \u003cmainTemplate\u003e and \u003cmainTemplate\u003e.schema files. required: true\n    minItems: 2\n    items:\n      type: object\n      properties:\n        name:\n          type: string\n        content:\n          type: string\n```",
          "type": "object"
        },
        "description": {
          "description": "The user-supplied description of the version. Maximum of 256 characters.",
          "type": "string"
        },
        "asset": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Output only. The asset which has been validated and is ready to be\nprovisioned. See Version.original_asset for the schema.",
          "type": "object"
        },
        "createTime": {
          "description": "Output only. The time when the version was created.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "GoogleCloudPrivatecatalogproducerV1beta1Version"
    },
    "GoogleCloudPrivatecatalogproducerV1beta1ListCatalogsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "A pagination token returned from a previous call to ListCatalogs\nthat indicates where the listing should continue from.\nThis field is optional.",
          "type": "string"
        },
        "catalogs": {
          "description": "The `Catalogs` returned from the list call.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudPrivatecatalogproducerV1beta1Catalog"
          }
        }
      },
      "id": "GoogleCloudPrivatecatalogproducerV1beta1ListCatalogsResponse",
      "type": "object"
    },
    "GoogleRpcStatus": {
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
          "type": "array",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          }
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GoogleRpcStatus",
      "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). The error model is designed to be:\n\n- Simple to use and understand for most users\n- Flexible enough to meet unexpected needs\n\n# Overview\n\nThe `Status` message contains three pieces of data: error code, error\nmessage, and error details. The error code should be an enum value of\ngoogle.rpc.Code, but it may accept additional error codes if needed.  The\nerror message should be a developer-facing English message that helps\ndevelopers *understand* and *resolve* the error. If a localized user-facing\nerror message is needed, put the localized message in the error details or\nlocalize it in the client. The optional error details may contain arbitrary\ninformation about the error. There is a predefined set of error detail types\nin the package `google.rpc` that can be used for common error conditions.\n\n# Language mapping\n\nThe `Status` message is the logical representation of the error model, but it\nis not necessarily the actual wire format. When the `Status` message is\nexposed in different client libraries and different wire protocols, it can be\nmapped differently. For example, it will likely be mapped to some exceptions\nin Java, but more likely mapped to some error codes in C.\n\n# Other uses\n\nThe error model and the `Status` message can be used in a variety of\nenvironments, either with or without APIs, to provide a\nconsistent developer experience across different environments.\n\nExample uses of this error model include:\n\n- Partial errors. If a service needs to return partial errors to the client,\n    it may embed the `Status` in the normal response to indicate the partial\n    errors.\n\n- Workflow errors. A typical workflow has multiple steps. Each step may\n    have a `Status` message for error reporting.\n\n- Batch operations. If a client uses batch request and batch response, the\n    `Status` message should be used directly inside batch response, one for\n    each error sub-response.\n\n- Asynchronous operations. If an API call embeds asynchronous operation\n    results in its response, the status of those operations should be\n    represented directly using the `Status` message.\n\n- Logging. If some API errors are stored in logs, the message `Status` could\n    be used directly after any stripping needed for security/privacy reasons.",
      "type": "object"
    },
    "GoogleCloudPrivatecatalogproducerV1beta1CopyProductRequest": {
      "type": "object",
      "properties": {
        "destinationProductName": {
          "description": "The resource name of the destination product that is copied to.",
          "type": "string"
        }
      },
      "id": "GoogleCloudPrivatecatalogproducerV1beta1CopyProductRequest"
    },
    "GoogleCloudPrivatecatalogproducerV1beta1CreateAssociationRequest": {
      "type": "object",
      "properties": {
        "association": {
          "$ref": "GoogleCloudPrivatecatalogproducerV1beta1Association",
          "description": "The user-supplied `Association` that is going to be created.\n\nIf the `resource` field is set, the\n`privatecatalogproducer.catalogTargets.associate` permission is checked on\nthe target resource."
        }
      },
      "id": "GoogleCloudPrivatecatalogproducerV1beta1CreateAssociationRequest"
    },
    "GoogleLongrunningOperation": {
      "properties": {
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
          "type": "boolean"
        },
        "response": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.",
          "type": "object"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should have the format of `operations/some/unique/name`.",
          "type": "string"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "GoogleRpcStatus"
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
          "type": "object"
        }
      },
      "id": "GoogleLongrunningOperation",
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
      "type": "object"
    },
    "GoogleIamV1AuditLogConfig": {
      "properties": {
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of\npermission.\nFollows the same format of Binding.members.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "logType": {
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ],
          "description": "The log type that this config enables.",
          "type": "string"
        }
      },
      "id": "GoogleIamV1AuditLogConfig",
      "description": "Provides the configuration for logging a type of permissions.\nExample:\n\n    {\n      \"audit_log_configs\": [\n        {\n          \"log_type\": \"DATA_READ\",\n          \"exempted_members\": [\n            \"user:foo@gmail.com\"\n          ]\n        },\n        {\n          \"log_type\": \"DATA_WRITE\",\n        }\n      ]\n    }\n\nThis enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting\nfoo@gmail.com from DATA_READ logging.",
      "type": "object"
    },
    "GoogleTypeExpr": {
      "properties": {
        "title": {
          "description": "An optional title for the expression, i.e. a short string describing\nits purpose. This can be used e.g. in UIs which allow to enter the\nexpression.",
          "type": "string"
        },
        "location": {
          "description": "An optional string indicating the location of the expression for error\nreporting, e.g. a file name and a position in the file.",
          "type": "string"
        },
        "description": {
          "description": "An optional description of the expression. This is a longer text which\ndescribes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "expression": {
          "description": "Textual representation of an expression in\nCommon Expression Language syntax.\n\nThe application context of the containing message determines which\nwell-known feature set of CEL is supported.",
          "type": "string"
        }
      },
      "id": "GoogleTypeExpr",
      "description": "Represents an expression text. Example:\n\n    title: \"User account presence\"\n    description: \"Determines whether the request has a user account\"\n    expression: \"size(request.user) \u003e 0\"",
      "type": "object"
    },
    "GoogleLongrunningListOperationsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleLongrunningOperation"
          }
        }
      },
      "id": "GoogleLongrunningListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "type": "object"
    },
    "GoogleCloudPrivatecatalogproducerV1beta1ListProductsResponse": {
      "type": "object",
      "properties": {
        "products": {
          "description": "The `Product` returned from the list call.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudPrivatecatalogproducerV1beta1Product"
          }
        },
        "nextPageToken": {
          "description": "A pagination token returned from a previous call to ListProducts\nthat indicates where the listing should continue from.\nThis field is optional.",
          "type": "string"
        }
      },
      "id": "GoogleCloudPrivatecatalogproducerV1beta1ListProductsResponse"
    },
    "GoogleIamV1TestIamPermissionsResponse": {
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is\nallowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "GoogleIamV1TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object"
    },
    "GoogleCloudPrivatecatalogproducerV1beta1ListAssociationsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A pagination token returned from a previous call to\n`ListAssociations` that indicates where the listing should continue from.\nThis field is optional.",
          "type": "string"
        },
        "associations": {
          "description": "The returned `Association` resources from the list call.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudPrivatecatalogproducerV1beta1Association"
          }
        }
      },
      "id": "GoogleCloudPrivatecatalogproducerV1beta1ListAssociationsResponse"
    },
    "GoogleCloudPrivatecatalogproducerV1beta1Association": {
      "properties": {
        "name": {
          "description": "Output only. The resource name of the catalog association, in the format\n`catalogs/{catalog_id}/associations/{association_id}'.\n\nA unique identifier for the catalog association, which is\ngenerated by catalog service.",
          "type": "string"
        },
        "createTime": {
          "description": "The creation time of the association.",
          "format": "google-datetime",
          "type": "string"
        },
        "resource": {
          "description": "Required. The user-supplied fully qualified name of the `Resource`\nassociated to the `Catalog`. It supports `Organization`, `Folder`,\nand `Project`. Values are of the form\n\n* `//cloudresourcemanager.googleapis.com/projects/{product_number}`\n* `//cloudresourcemanager.googleapis.com/folders/{folder_id}`\n* `//cloudresourcemanager.googleapis.com/organizations/{organization_id}`",
          "type": "string"
        }
      },
      "id": "GoogleCloudPrivatecatalogproducerV1beta1Association",
      "description": "An association tuple that pairs a `Catalog` to a resource\nthat can use the `Catalog`. After association, a\ngoogle.cloud.privatecatalog.v1beta1.Catalog becomes available to\nconsumers under specified Association.resource and all of its child\nnodes.\nUsers who have the `cloudprivatecatalog.targets.get` permission on any of\nthe resource nodes can access the catalog and child products under the node.\n\nFor example, suppose the cloud resource hierarchy is as follows:\n\n* organizations/example.com\n  * folders/team\n    * projects/test\n\nAfter creating an association with `organizations/example.com`, the catalog\n`catalogs/1`  is accessible from the following paths:\n\n* organizations/example.com\n* folders/team\n* projects/test\n\nUsers can access them by\ngoogle.cloud.v1beta1.PrivateCatalog.SearchCatalogs action.",
      "type": "object"
    },
    "GoogleLongrunningCancelOperationRequest": {
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "properties": {},
      "id": "GoogleLongrunningCancelOperationRequest"
    },
    "GoogleCloudPrivatecatalogproducerV1beta1Product": {
      "description": "The producer representation of a product which is a child resource of\n`Catalog` with display metadata and a list of `Version` resources.",
      "type": "object",
      "properties": {
        "assetType": {
          "description": "Required. The type of the product asset, which cannot be changed after the\nproduct is created. It supports the values\n`google.deploymentmanager.Template` and\n`google.cloudprivatecatalog.ListingOnly`. Other values will be\nrejected by the server. Read only after creation.\n\nThe following fields or resource types have different validation rules\nunder each `asset_type` values:\n\n* Product.display_metadata has different validation schema for each\nasset type value. See its comment for details.\n* Version resource isn't allowed to be added under the\n`google.cloudprivatecatalog.ListingOnly` type.",
          "type": "string"
        },
        "displayMetadata": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "The user-supplied display metadata to describe the product.\nThe JSON schema of the metadata differs by Product.asset_type.\nWhen the type is `google.deploymentmanager.Template`, the schema is as\nfollows:\n\n```\n\"$schema\": http://json-schema.org/draft-04/schema#\ntype: object\nproperties:\n  name:\n    type: string\n    minLength: 1\n    maxLength: 64\n  description:\n    type: string\n    minLength: 1\n    maxLength: 2048\n  tagline:\n    type: string\n    minLength: 1\n    maxLength: 100\n  support_info:\n    type: string\n    minLength: 1\n    maxLength: 2048\n  creator:\n    type: string\n    minLength: 1\n    maxLength: 100\n  documentation:\n    type: array\n    items:\n      type: object\n      properties:\n        url:\n          type: string\n          pattern:\n          \"^(https?)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]\"\n        title:\n          type: string\n          minLength: 1\n          maxLength: 64\n        description:\n          type: string\n          minLength: 1\n          maxLength: 2048\nrequired:\n- name\n- description\nadditionalProperties: false\n\n```\n\nWhen the asset type is `google.cloudprivatecatalog.ListingOnly`, the schema\nis as follows:\n\n```\n\"$schema\": http://json-schema.org/draft-04/schema#\ntype: object\nproperties:\n  name:\n    type: string\n    minLength: 1\n    maxLength: 64\n  description:\n    type: string\n    minLength: 1\n    maxLength: 2048\n  tagline:\n    type: string\n    minLength: 1\n    maxLength: 100\n  support_info:\n    type: string\n    minLength: 1\n    maxLength: 2048\n  creator:\n    type: string\n    minLength: 1\n    maxLength: 100\n  documentation:\n    type: array\n    items:\n      type: object\n      properties:\n        url:\n          type: string\n          pattern:\n          \"^(https?)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]\"\n        title:\n          type: string\n          minLength: 1\n          maxLength: 64\n        description:\n          type: string\n          minLength: 1\n          maxLength: 2048\n  signup_url:\n    type: string\n    pattern:\n    \"^(https?)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]\"\nrequired:\n- name\n- description\n- signup_url\nadditionalProperties: false\n```",
          "type": "object"
        },
        "iconUri": {
          "description": "Output only. The public accessible URI of the icon uploaded by\nPrivateCatalogProducer.UploadIcon.\n\nIf no icon is uploaded, it will be the default icon's URI.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The time when the product was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. The time when the product was last updated.",
          "format": "google-datetime",
          "type": "string"
        },
        "name": {
          "description": "Required. The resource name of the product in the format\n`catalogs/{catalog_id}/products/a-z*[a-z0-9]'.\n\nA unique identifier for the product under a catalog, which cannot\nbe changed after the product is created. The final\nsegment of the name must between 1 and 256 characters in length.",
          "type": "string"
        }
      },
      "id": "GoogleCloudPrivatecatalogproducerV1beta1Product"
    },
    "GoogleProtobufEmpty": {
      "properties": {},
      "id": "GoogleProtobufEmpty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object"
    },
    "GoogleIamV1Binding": {
      "description": "Associates `members` with a `role`.",
      "type": "object",
      "properties": {
        "condition": {
          "$ref": "GoogleTypeExpr",
          "description": "Unimplemented. The condition that is associated with this binding.\nNOTE: an unsatisfied condition will not allow user access via current\nbinding. Different bindings, including their conditions, are examined\nindependently."
        },
        "members": {
          "description": "Specifies the identities requesting access for a Cloud Platform resource.\n`members` can have the following values:\n\n* `allUsers`: A special identifier that represents anyone who is\n   on the internet; with or without a Google account.\n\n* `allAuthenticatedUsers`: A special identifier that represents anyone\n   who is authenticated with a Google account or a service account.\n\n* `user:{emailid}`: An email address that represents a specific Google\n   account. For example, `alice@gmail.com` .\n\n\n* `serviceAccount:{emailid}`: An email address that represents a service\n   account. For example, `my-other-app@appspot.gserviceaccount.com`.\n\n* `group:{emailid}`: An email address that represents a Google group.\n   For example, `admins@example.com`.\n\n\n* `domain:{domain}`: The G Suite domain (primary) that represents all the\n   users of that domain. For example, `google.com` or `example.com`.\n\n",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "role": {
          "description": "Role that is assigned to `members`.\nFor example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
          "type": "string"
        }
      },
      "id": "GoogleIamV1Binding"
    },
    "GoogleIamV1TestIamPermissionsRequest": {
      "description": "Request message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with\nwildcards (such as '*' or 'storage.*') are not allowed. For more\ninformation see\n[IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "GoogleIamV1TestIamPermissionsRequest"
    },
    "GoogleIamV1SetIamPolicyRequest": {
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object",
      "properties": {
        "policy": {
          "$ref": "GoogleIamV1Policy",
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of\nthe policy is limited to a few 10s of KB. An empty policy is a\nvalid policy but certain Cloud Platform services (such as Projects)\nmight reject them."
        },
        "updateMask": {
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only\nthe fields in the mask will be modified. If no mask is provided, the\nfollowing default mask is used:\npaths: \"bindings, etag\"\nThis field is only used by Cloud IAM.",
          "format": "google-fieldmask",
          "type": "string"
        }
      },
      "id": "GoogleIamV1SetIamPolicyRequest"
    },
    "GoogleCloudPrivatecatalogproducerV1beta1ListVersionsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "A pagination token returned from a previous call to ListProducts\nthat indicates where the listing should continue from.\nThis field is optional.",
          "type": "string"
        },
        "versions": {
          "description": "The `VersiVersionon` returned from the list call.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudPrivatecatalogproducerV1beta1Version"
          }
        }
      },
      "id": "GoogleCloudPrivatecatalogproducerV1beta1ListVersionsResponse",
      "type": "object"
    },
    "GoogleCloudPrivatecatalogproducerV1beta1UndeleteCatalogRequest": {
      "type": "object",
      "properties": {},
      "id": "GoogleCloudPrivatecatalogproducerV1beta1UndeleteCatalogRequest"
    },
    "GoogleIamV1Policy": {
      "description": "Defines an Identity and Access Management (IAM) policy. It is used to\nspecify access control policies for Cloud Platform resources.\n\n\nA `Policy` consists of a list of `bindings`. A `binding` binds a list of\n`members` to a `role`, where the members can be user accounts, Google groups,\nGoogle domains, and service accounts. A `role` is a named list of permissions\ndefined by IAM.\n\n**JSON Example**\n\n    {\n      \"bindings\": [\n        {\n          \"role\": \"roles/owner\",\n          \"members\": [\n            \"user:mike@example.com\",\n            \"group:admins@example.com\",\n            \"domain:google.com\",\n            \"serviceAccount:my-other-app@appspot.gserviceaccount.com\"\n          ]\n        },\n        {\n          \"role\": \"roles/viewer\",\n          \"members\": [\"user:sean@example.com\"]\n        }\n      ]\n    }\n\n**YAML Example**\n\n    bindings:\n    - members:\n      - user:mike@example.com\n      - group:admins@example.com\n      - domain:google.com\n      - serviceAccount:my-other-app@appspot.gserviceaccount.com\n      role: roles/owner\n    - members:\n      - user:sean@example.com\n      role: roles/viewer\n\n\nFor a description of IAM and its features, see the\n[IAM developer's guide](https://cloud.google.com/iam/docs).",
      "type": "object",
      "properties": {
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help\nprevent simultaneous updates of a policy from overwriting each other.\nIt is strongly suggested that systems make use of the `etag` in the\nread-modify-write cycle to perform policy updates in order to avoid race\nconditions: An `etag` is returned in the response to `getIamPolicy`, and\nsystems are expected to put that etag in the request to `setIamPolicy` to\nensure that their change will be applied to the same version of the policy.\n\nIf no `etag` is provided in the call to `setIamPolicy`, then the existing\npolicy is overwritten blindly.",
          "format": "byte",
          "type": "string"
        },
        "version": {
          "description": "Deprecated.",
          "format": "int32",
          "type": "integer"
        },
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "type": "array",
          "items": {
            "$ref": "GoogleIamV1AuditConfig"
          }
        },
        "bindings": {
          "description": "Associates a list of `members` to a `role`.\n`bindings` with no members will result in an error.",
          "type": "array",
          "items": {
            "$ref": "GoogleIamV1Binding"
          }
        }
      },
      "id": "GoogleIamV1Policy"
    },
    "GoogleCloudPrivatecatalogproducerV1beta1UploadIconRequest": {
      "type": "object",
      "properties": {
        "icon": {
          "description": "The raw icon bytes user-supplied to be uploaded to the product. The format\nof the icon can only be PNG or JPEG. The minimum allowed dimensions are\n130x130 pixels and the maximum dimensions are 10000x10000 pixels.\nRequired.",
          "format": "byte",
          "type": "string"
        }
      },
      "id": "GoogleCloudPrivatecatalogproducerV1beta1UploadIconRequest"
    },
    "GoogleCloudPrivatecatalogproducerV1beta1Catalog": {
      "description": "The producer representation of a catalog which is a curated collection of\nsolutions that can be managed, controlled, and shared by cloud admins.",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Required. The user-supplied descriptive name of the catalog as it appears\nin UIs. Maximum 256 characters in length.",
          "type": "string"
        },
        "description": {
          "description": "Required. The user-supplied description of the catalog. Maximum of 512\ncharacters.",
          "type": "string"
        },
        "parent": {
          "description": "Required. The parent resource name of the catalog, which can't be changed\nafter a catalog is created. It can only be an organization. Values are of\nthe form `//cloudresourcemanager.googleapis.com/organizations/\u003cid\u003e`.\nMaximum 256 characters in length.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The time when the catalog was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. The time when the catalog was last updated.",
          "format": "google-datetime",
          "type": "string"
        },
        "name": {
          "description": "Output only. The resource name of the catalog, in the format\n`catalogs/{catalog_id}'.\n\nA unique identifier for the catalog, which is generated\nby catalog service.",
          "type": "string"
        }
      },
      "id": "GoogleCloudPrivatecatalogproducerV1beta1Catalog"
    },
    "GoogleIamV1AuditConfig": {
      "description": "Specifies the audit configuration for a service.\nThe configuration determines which permission types are logged, and what\nidentities, if any, are exempted from logging.\nAn AuditConfig must have one or more AuditLogConfigs.\n\nIf there are AuditConfigs for both `allServices` and a specific service,\nthe union of the two AuditConfigs is used for that service: the log_types\nspecified in each AuditConfig are enabled, and the exempted_members in each\nAuditLogConfig are exempted.\n\nExample Policy with multiple AuditConfigs:\n\n    {\n      \"audit_configs\": [\n        {\n          \"service\": \"allServices\"\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n              \"exempted_members\": [\n                \"user:foo@gmail.com\"\n              ]\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n            },\n            {\n              \"log_type\": \"ADMIN_READ\",\n            }\n          ]\n        },\n        {\n          \"service\": \"fooservice.googleapis.com\"\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n              \"exempted_members\": [\n                \"user:bar@gmail.com\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n\nFor fooservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ\nlogging. It also exempts foo@gmail.com from DATA_READ logging, and\nbar@gmail.com from DATA_WRITE logging.",
      "type": "object",
      "properties": {
        "service": {
          "description": "Specifies a service that will be enabled for audit logging.\nFor example, `storage.googleapis.com`, `cloudsql.googleapis.com`.\n`allServices` is a special value that covers all services.",
          "type": "string"
        },
        "auditLogConfigs": {
          "description": "The configuration for logging of each type of permission.",
          "type": "array",
          "items": {
            "$ref": "GoogleIamV1AuditLogConfig"
          }
        }
      },
      "id": "GoogleIamV1AuditConfig"
    }
  },
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "protocol": "rest",
  "canonicalName": "Cloud PrivateCatalog Producer",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "rootUrl": "https://cloudprivatecatalogproducer.googleapis.com/",
  "ownerDomain": "google.com",
  "name": "cloudprivatecatalogproducer",
  "batchPath": "batch",
  "fullyEncodeReservedExpansion": true,
  "title": "Cloud Private Catalog Producer API",
  "ownerName": "Google",
  "resources": {
    "catalogs": {
      "resources": {
        "associations": {
          "methods": {
            "create": {
              "path": "v1beta1/{+parent}/associations",
              "id": "cloudprivatecatalogproducer.catalogs.associations.create",
              "request": {
                "$ref": "GoogleCloudPrivatecatalogproducerV1beta1CreateAssociationRequest"
              },
              "description": "Creates an Association instance under a given Catalog.",
              "response": {
                "$ref": "GoogleCloudPrivatecatalogproducerV1beta1Association"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "parent": {
                  "description": "The `Catalog` resource's name.",
                  "required": true,
                  "type": "string",
                  "pattern": "^catalogs/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v1beta1/catalogs/{catalogsId}/associations"
            },
            "delete": {
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "DELETE",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "pattern": "^catalogs/[^/]+/associations/[^/]+$",
                  "location": "path",
                  "description": "The resource name of the `Association` to delete.",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v1beta1/catalogs/{catalogsId}/associations/{associationsId}",
              "path": "v1beta1/{+name}",
              "id": "cloudprivatecatalogproducer.catalogs.associations.delete",
              "description": "Deletes the given Association."
            },
            "get": {
              "httpMethod": "GET",
              "response": {
                "$ref": "GoogleCloudPrivatecatalogproducerV1beta1Association"
              },
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "pattern": "^catalogs/[^/]+/associations/[^/]+$",
                  "location": "path",
                  "description": "The resource name of the `Association` to retrieve.",
                  "required": true,
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1beta1/catalogs/{catalogsId}/associations/{associationsId}",
              "id": "cloudprivatecatalogproducer.catalogs.associations.get",
              "path": "v1beta1/{+name}",
              "description": "Returns the requested Association resource."
            },
            "list": {
              "response": {
                "$ref": "GoogleCloudPrivatecatalogproducerV1beta1ListAssociationsResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "parent": {
                  "pattern": "^catalogs/[^/]+$",
                  "location": "path",
                  "description": "The resource name of the `Catalog` whose `Associations` are\nbeing retrieved. In the format `catalogs/\u003ccatalog\u003e`.",
                  "required": true,
                  "type": "string"
                },
                "pageToken": {
                  "description": "A pagination token returned from the previous call to\n`ListAssociations`.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "location": "query",
                  "description": "The maximum number of catalog associations to return.",
                  "format": "int32",
                  "type": "integer"
                }
              },
              "flatPath": "v1beta1/catalogs/{catalogsId}/associations",
              "path": "v1beta1/{+parent}/associations",
              "id": "cloudprivatecatalogproducer.catalogs.associations.list",
              "description": "Lists all Association resources under a catalog."
            }
          }
        },
        "products": {
          "resources": {
            "icons": {
              "methods": {
                "upload": {
                  "description": "Creates an Icon instance under a given Product.\nIf Product only has a default icon, a new Icon\ninstance is created and associated with the given Product.\nIf Product already has a non-default icon, the action creates\na new Icon instance, associates the newly created\nIcon with the given Product and deletes the old icon.",
                  "request": {
                    "$ref": "GoogleCloudPrivatecatalogproducerV1beta1UploadIconRequest"
                  },
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "parameterOrder": [
                    "product"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "product": {
                      "pattern": "^catalogs/[^/]+/products/[^/]+$",
                      "location": "path",
                      "description": "The resource name of the product.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta1/catalogs/{catalogsId}/products/{productsId}/icons:upload",
                  "path": "v1beta1/{+product}/icons:upload",
                  "id": "cloudprivatecatalogproducer.catalogs.products.icons.upload"
                }
              }
            },
            "versions": {
              "methods": {
                "create": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameters": {
                    "parent": {
                      "pattern": "^catalogs/[^/]+/products/[^/]+$",
                      "location": "path",
                      "description": "The product name of the new version's parent.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta1/catalogs/{catalogsId}/products/{productsId}/versions",
                  "id": "cloudprivatecatalogproducer.catalogs.products.versions.create",
                  "path": "v1beta1/{+parent}/versions",
                  "description": "Creates a Version instance under a given Product.",
                  "request": {
                    "$ref": "GoogleCloudPrivatecatalogproducerV1beta1Version"
                  }
                },
                "delete": {
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "description": "The resource name of the version.",
                      "required": true,
                      "type": "string",
                      "pattern": "^catalogs/[^/]+/products/[^/]+/versions/[^/]+$",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1beta1/catalogs/{catalogsId}/products/{productsId}/versions/{versionsId}",
                  "path": "v1beta1/{+name}",
                  "id": "cloudprivatecatalogproducer.catalogs.products.versions.delete",
                  "description": "Hard deletes a Version."
                },
                "list": {
                  "description": "Lists Version resources that the producer has access to, within the\nscope of the parent Product.",
                  "response": {
                    "$ref": "GoogleCloudPrivatecatalogproducerV1beta1ListVersionsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "description": "A pagination token returned from a previous call to ListVersions\nthat indicates where this listing should continue from.\nThis field is optional.",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The maximum number of versions to return.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^catalogs/[^/]+/products/[^/]+$",
                      "location": "path",
                      "description": "The resource name of the parent resource.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "flatPath": "v1beta1/catalogs/{catalogsId}/products/{productsId}/versions",
                  "path": "v1beta1/{+parent}/versions",
                  "id": "cloudprivatecatalogproducer.catalogs.products.versions.list"
                },
                "get": {
                  "response": {
                    "$ref": "GoogleCloudPrivatecatalogproducerV1beta1Version"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "description": "The resource name of the version.",
                      "required": true,
                      "type": "string",
                      "pattern": "^catalogs/[^/]+/products/[^/]+/versions/[^/]+$",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1beta1/catalogs/{catalogsId}/products/{productsId}/versions/{versionsId}",
                  "path": "v1beta1/{+name}",
                  "id": "cloudprivatecatalogproducer.catalogs.products.versions.get",
                  "description": "Returns the requested Version resource."
                },
                "patch": {
                  "response": {
                    "$ref": "GoogleCloudPrivatecatalogproducerV1beta1Version"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "updateMask": {
                      "description": "Field mask that controls which fields of the version should be updated.",
                      "format": "google-fieldmask",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "pattern": "^catalogs/[^/]+/products/[^/]+/versions/[^/]+$",
                      "location": "path",
                      "description": "Required. The resource name of the version, in the format\n`catalogs/{catalog_id}/products/{product_id}/versions/a-z*[a-z0-9]'.\n\nA unique identifier for the version under a product, which can't\nbe changed after the version is created. The final segment of the name must\nbetween 1 and 63 characters in length.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "flatPath": "v1beta1/catalogs/{catalogsId}/products/{productsId}/versions/{versionsId}",
                  "path": "v1beta1/{+name}",
                  "id": "cloudprivatecatalogproducer.catalogs.products.versions.patch",
                  "request": {
                    "$ref": "GoogleCloudPrivatecatalogproducerV1beta1Version"
                  },
                  "description": "Updates a specific Version resource."
                }
              }
            }
          },
          "methods": {
            "create": {
              "response": {
                "$ref": "GoogleCloudPrivatecatalogproducerV1beta1Product"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "parent": {
                  "description": "The catalog name of the new product's parent.",
                  "required": true,
                  "type": "string",
                  "pattern": "^catalogs/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v1beta1/catalogs/{catalogsId}/products",
              "path": "v1beta1/{+parent}/products",
              "id": "cloudprivatecatalogproducer.catalogs.products.create",
              "request": {
                "$ref": "GoogleCloudPrivatecatalogproducerV1beta1Product"
              },
              "description": "Creates a Product instance under a given Catalog."
            },
            "patch": {
              "response": {
                "$ref": "GoogleCloudPrivatecatalogproducerV1beta1Product"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PATCH",
              "parameters": {
                "name": {
                  "description": "Required. The resource name of the product in the format\n`catalogs/{catalog_id}/products/a-z*[a-z0-9]'.\n\nA unique identifier for the product under a catalog, which cannot\nbe changed after the product is created. The final\nsegment of the name must between 1 and 256 characters in length.",
                  "required": true,
                  "type": "string",
                  "pattern": "^catalogs/[^/]+/products/[^/]+$",
                  "location": "path"
                },
                "updateMask": {
                  "location": "query",
                  "description": "Field mask that controls which fields of the product should be updated.",
                  "format": "google-fieldmask",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1beta1/catalogs/{catalogsId}/products/{productsId}",
              "path": "v1beta1/{+name}",
              "id": "cloudprivatecatalogproducer.catalogs.products.patch",
              "description": "Updates a specific Product resource.",
              "request": {
                "$ref": "GoogleCloudPrivatecatalogproducerV1beta1Product"
              }
            },
            "copy": {
              "path": "v1beta1/{+name}:copy",
              "id": "cloudprivatecatalogproducer.catalogs.products.copy",
              "request": {
                "$ref": "GoogleCloudPrivatecatalogproducerV1beta1CopyProductRequest"
              },
              "description": "Copies a Product under another Catalog.",
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "pattern": "^catalogs/[^/]+/products/[^/]+$",
                  "location": "path",
                  "description": "The resource name of the current product that is copied from.",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v1beta1/catalogs/{catalogsId}/products/{productsId}:copy"
            },
            "get": {
              "id": "cloudprivatecatalogproducer.catalogs.products.get",
              "path": "v1beta1/{+name}",
              "description": "Returns the requested Product resource.",
              "httpMethod": "GET",
              "response": {
                "$ref": "GoogleCloudPrivatecatalogproducerV1beta1Product"
              },
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "description": "The resource name of the product.",
                  "required": true,
                  "type": "string",
                  "pattern": "^catalogs/[^/]+/products/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1beta1/catalogs/{catalogsId}/products/{productsId}"
            },
            "delete": {
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "DELETE",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "pattern": "^catalogs/[^/]+/products/[^/]+$",
                  "location": "path",
                  "description": "The resource name of the product.",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v1beta1/catalogs/{catalogsId}/products/{productsId}",
              "path": "v1beta1/{+name}",
              "id": "cloudprivatecatalogproducer.catalogs.products.delete",
              "description": "Hard deletes a Product."
            },
            "list": {
              "response": {
                "$ref": "GoogleCloudPrivatecatalogproducerV1beta1ListProductsResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "parent": {
                  "pattern": "^catalogs/[^/]+$",
                  "location": "path",
                  "description": "The resource name of the parent resource.",
                  "required": true,
                  "type": "string"
                },
                "filter": {
                  "description": "A filter expression used to restrict the returned results based\nupon properties of the product.",
                  "type": "string",
                  "location": "query"
                },
                "pageToken": {
                  "description": "A pagination token returned from a previous call to ListProducts\nthat indicates where this listing should continue from.\nThis field is optional.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "location": "query",
                  "description": "The maximum number of products to return.",
                  "format": "int32",
                  "type": "integer"
                }
              },
              "flatPath": "v1beta1/catalogs/{catalogsId}/products",
              "path": "v1beta1/{+parent}/products",
              "id": "cloudprivatecatalogproducer.catalogs.products.list",
              "description": "Lists Product resources that the producer has access to, within the\nscope of the parent catalog."
            }
          }
        }
      },
      "methods": {
        "testIamPermissions": {
          "request": {
            "$ref": "GoogleIamV1TestIamPermissionsRequest"
          },
          "description": "Tests the IAM permissions for the specified Catalog.",
          "response": {
            "$ref": "GoogleIamV1TestIamPermissionsResponse"
          },
          "parameterOrder": [
            "resource"
          ],
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "resource": {
              "pattern": "^catalogs/[^/]+$",
              "location": "path",
              "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
              "required": true,
              "type": "string"
            }
          },
          "flatPath": "v1beta1/catalogs/{catalogsId}:testIamPermissions",
          "path": "v1beta1/{+resource}:testIamPermissions",
          "id": "cloudprivatecatalogproducer.catalogs.testIamPermissions"
        },
        "delete": {
          "response": {
            "$ref": "GoogleCloudPrivatecatalogproducerV1beta1Catalog"
          },
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "DELETE",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "name": {
              "description": "The resource name of the catalog.",
              "required": true,
              "type": "string",
              "pattern": "^catalogs/[^/]+$",
              "location": "path"
            },
            "force": {
              "location": "query",
              "description": "Forces deletion of the `Catalog` and its `Association` resources.\nIf the `Catalog` is still associated with other resources and\nforce is not set to true, then the operation fails.",
              "type": "boolean"
            }
          },
          "flatPath": "v1beta1/catalogs/{catalogsId}",
          "path": "v1beta1/{+name}",
          "id": "cloudprivatecatalogproducer.catalogs.delete",
          "description": "Soft deletes an existing Catalog and all resources under it.\nThe catalog can only be deleted if there is no associations under it or\nDeleteCatalogRequest.force is true. The delete operation\ncan be recovered by the PrivateCatalogProducer.UndeleteCatalog\nmethod."
        },
        "list": {
          "response": {
            "$ref": "GoogleCloudPrivatecatalogproducerV1beta1ListCatalogsResponse"
          },
          "parameterOrder": [],
          "httpMethod": "GET",
          "parameters": {
            "pageToken": {
              "location": "query",
              "description": "A pagination token returned from a previous call to ListCatalogs\nthat indicates where this listing should continue from.\nThis field is optional.",
              "type": "string"
            },
            "pageSize": {
              "location": "query",
              "description": "The maximum number of catalogs to return.",
              "format": "int32",
              "type": "integer"
            },
            "parent": {
              "description": "The resource name of the parent resource.",
              "type": "string",
              "location": "query"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v1beta1/catalogs",
          "path": "v1beta1/catalogs",
          "id": "cloudprivatecatalogproducer.catalogs.list",
          "description": "Lists Catalog resources that the producer has access to, within the\nscope of the parent resource."
        },
        "setIamPolicy": {
          "request": {
            "$ref": "GoogleIamV1SetIamPolicyRequest"
          },
          "description": "Sets the IAM policy for the specified Catalog.",
          "response": {
            "$ref": "GoogleIamV1Policy"
          },
          "parameterOrder": [
            "resource"
          ],
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "resource": {
              "description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.",
              "required": true,
              "type": "string",
              "pattern": "^catalogs/[^/]+$",
              "location": "path"
            }
          },
          "flatPath": "v1beta1/catalogs/{catalogsId}:setIamPolicy",
          "path": "v1beta1/{+resource}:setIamPolicy",
          "id": "cloudprivatecatalogproducer.catalogs.setIamPolicy"
        },
        "create": {
          "response": {
            "$ref": "GoogleLongrunningOperation"
          },
          "parameterOrder": [],
          "httpMethod": "POST",
          "parameters": {},
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v1beta1/catalogs",
          "path": "v1beta1/catalogs",
          "id": "cloudprivatecatalogproducer.catalogs.create",
          "description": "Creates a new Catalog resource.",
          "request": {
            "$ref": "GoogleCloudPrivatecatalogproducerV1beta1Catalog"
          }
        },
        "getIamPolicy": {
          "httpMethod": "GET",
          "response": {
            "$ref": "GoogleIamV1Policy"
          },
          "parameterOrder": [
            "resource"
          ],
          "parameters": {
            "resource": {
              "pattern": "^catalogs/[^/]+$",
              "location": "path",
              "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.",
              "required": true,
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v1beta1/catalogs/{catalogsId}:getIamPolicy",
          "id": "cloudprivatecatalogproducer.catalogs.getIamPolicy",
          "path": "v1beta1/{+resource}:getIamPolicy",
          "description": "Gets IAM policy for the specified Catalog."
        },
        "patch": {
          "httpMethod": "PATCH",
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "GoogleCloudPrivatecatalogproducerV1beta1Catalog"
          },
          "parameters": {
            "name": {
              "description": "Output only. The resource name of the catalog, in the format\n`catalogs/{catalog_id}'.\n\nA unique identifier for the catalog, which is generated\nby catalog service.",
              "required": true,
              "type": "string",
              "pattern": "^catalogs/[^/]+$",
              "location": "path"
            },
            "updateMask": {
              "location": "query",
              "description": "Field mask that controls which fields of the catalog should be updated.",
              "format": "google-fieldmask",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v1beta1/catalogs/{catalogsId}",
          "id": "cloudprivatecatalogproducer.catalogs.patch",
          "path": "v1beta1/{+name}",
          "description": "Updates a specific Catalog resource.",
          "request": {
            "$ref": "GoogleCloudPrivatecatalogproducerV1beta1Catalog"
          }
        },
        "undelete": {
          "path": "v1beta1/{+name}:undelete",
          "id": "cloudprivatecatalogproducer.catalogs.undelete",
          "description": "Undeletes a deleted Catalog and all resources under it.",
          "request": {
            "$ref": "GoogleCloudPrivatecatalogproducerV1beta1UndeleteCatalogRequest"
          },
          "response": {
            "$ref": "GoogleCloudPrivatecatalogproducerV1beta1Catalog"
          },
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "POST",
          "parameters": {
            "name": {
              "pattern": "^catalogs/[^/]+$",
              "location": "path",
              "description": "The resource name of the catalog.",
              "required": true,
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v1beta1/catalogs/{catalogsId}:undelete"
        },
        "get": {
          "response": {
            "$ref": "GoogleCloudPrivatecatalogproducerV1beta1Catalog"
          },
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "name": {
              "pattern": "^catalogs/[^/]+$",
              "location": "path",
              "description": "The resource name of the catalog.",
              "required": true,
              "type": "string"
            }
          },
          "flatPath": "v1beta1/catalogs/{catalogsId}",
          "path": "v1beta1/{+name}",
          "id": "cloudprivatecatalogproducer.catalogs.get",
          "description": "Returns the requested Catalog resource."
        }
      }
    },
    "operations": {
      "methods": {
        "cancel": {
          "httpMethod": "POST",
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "GoogleProtobufEmpty"
          },
          "parameters": {
            "name": {
              "description": "The name of the operation resource to be cancelled.",
              "required": true,
              "type": "string",
              "pattern": "^operations/[^/]+$",
              "location": "path"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v1beta1/operations/{operationsId}:cancel",
          "id": "cloudprivatecatalogproducer.operations.cancel",
          "path": "v1beta1/{+name}:cancel",
          "description": "Starts asynchronous cancellation on a long-running operation.  The server\nmakes a best effort to cancel the operation, but success is not\nguaranteed.  If the server doesn't support this method, it returns\n`google.rpc.Code.UNIMPLEMENTED`.  Clients can use\nOperations.GetOperation or\nother methods to check whether the cancellation succeeded or whether the\noperation completed despite cancellation. On successful cancellation,\nthe operation is not deleted; instead, it becomes an operation with\nan Operation.error value with a google.rpc.Status.code of 1,\ncorresponding to `Code.CANCELLED`.",
          "request": {
            "$ref": "GoogleLongrunningCancelOperationRequest"
          }
        },
        "delete": {
          "path": "v1beta1/{+name}",
          "id": "cloudprivatecatalogproducer.operations.delete",
          "description": "Deletes a long-running operation. This method indicates that the client is\nno longer interested in the operation result. It does not cancel the\noperation. If the server doesn't support this method, it returns\n`google.rpc.Code.UNIMPLEMENTED`.",
          "response": {
            "$ref": "GoogleProtobufEmpty"
          },
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "DELETE",
          "parameters": {
            "name": {
              "pattern": "^operations/[^/]+$",
              "location": "path",
              "description": "The name of the operation resource to be deleted.",
              "required": true,
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v1beta1/operations/{operationsId}"
        },
        "list": {
          "response": {
            "$ref": "GoogleLongrunningListOperationsResponse"
          },
          "parameterOrder": [],
          "httpMethod": "GET",
          "parameters": {
            "filter": {
              "location": "query",
              "description": "The standard list filter.",
              "type": "string"
            },
            "name": {
              "description": "The name of the operation's parent resource.",
              "type": "string",
              "location": "query"
            },
            "pageToken": {
              "description": "The standard list page token.",
              "type": "string",
              "location": "query"
            },
            "pageSize": {
              "location": "query",
              "description": "The standard list page size.",
              "format": "int32",
              "type": "integer"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v1beta1/operations",
          "path": "v1beta1/operations",
          "id": "cloudprivatecatalogproducer.operations.list",
          "description": "Lists operations that match the specified filter in the request. If the\nserver doesn't support this method, it returns `UNIMPLEMENTED`.\n\nNOTE: the `name` binding allows API services to override the binding\nto use different resource name schemes, such as `users/*/operations`. To\noverride the binding, API services can add a binding such as\n`\"/v1/{name=users/*}/operations\"` to their service configuration.\nFor backwards compatibility, the default name includes the operations\ncollection id, however overriding users must ensure the name binding\nis the parent resource, without the operations collection id."
        },
        "get": {
          "response": {
            "$ref": "GoogleLongrunningOperation"
          },
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "name": {
              "pattern": "^operations/[^/]+$",
              "location": "path",
              "description": "The name of the operation resource.",
              "required": true,
              "type": "string"
            }
          },
          "flatPath": "v1beta1/operations/{operationsId}",
          "path": "v1beta1/{+name}",
          "id": "cloudprivatecatalogproducer.operations.get",
          "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice."
        }
      }
    }
  },
  "parameters": {
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string"
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "description": "Data format for response.",
      "default": "json"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true"
    }
  },
  "version": "v1beta1",
  "baseUrl": "https://cloudprivatecatalogproducer.googleapis.com/",
  "servicePath": "",
  "kind": "discovery#restDescription",
  "description": "Enables cloud users to manage and share enterprise catalogs intheir organizations.",
  "basePath": "",
  "id": "cloudprivatecatalogproducer:v1beta1",
  "documentationLink": "https://sites.google.com/corp/google.com/cloudprivatecatalog",
  "revision": "20190309"
}
