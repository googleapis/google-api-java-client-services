/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.tagmanager.model;

/**
 * A history event that represents a comment or status change in the proposal.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Tag Manager API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class WorkspaceProposalHistory extends com.google.api.client.json.GenericJson {

  /**
   * A user or reviewer comment.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private WorkspaceProposalHistoryComment comment;

  /**
   * The party responsible for the change in history.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private WorkspaceProposalUser createdBy;

  /**
   * When this history event was added to the workspace proposal.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Timestamp createdTimestamp;

  /**
   * A change in the proposal's status.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private WorkspaceProposalHistoryStatusChange statusChange;

  /**
   * The history type distinguishing between comments and status changes.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * A user or reviewer comment.
   * @return value or {@code null} for none
   */
  public WorkspaceProposalHistoryComment getComment() {
    return comment;
  }

  /**
   * A user or reviewer comment.
   * @param comment comment or {@code null} for none
   */
  public WorkspaceProposalHistory setComment(WorkspaceProposalHistoryComment comment) {
    this.comment = comment;
    return this;
  }

  /**
   * The party responsible for the change in history.
   * @return value or {@code null} for none
   */
  public WorkspaceProposalUser getCreatedBy() {
    return createdBy;
  }

  /**
   * The party responsible for the change in history.
   * @param createdBy createdBy or {@code null} for none
   */
  public WorkspaceProposalHistory setCreatedBy(WorkspaceProposalUser createdBy) {
    this.createdBy = createdBy;
    return this;
  }

  /**
   * When this history event was added to the workspace proposal.
   * @return value or {@code null} for none
   */
  public Timestamp getCreatedTimestamp() {
    return createdTimestamp;
  }

  /**
   * When this history event was added to the workspace proposal.
   * @param createdTimestamp createdTimestamp or {@code null} for none
   */
  public WorkspaceProposalHistory setCreatedTimestamp(Timestamp createdTimestamp) {
    this.createdTimestamp = createdTimestamp;
    return this;
  }

  /**
   * A change in the proposal's status.
   * @return value or {@code null} for none
   */
  public WorkspaceProposalHistoryStatusChange getStatusChange() {
    return statusChange;
  }

  /**
   * A change in the proposal's status.
   * @param statusChange statusChange or {@code null} for none
   */
  public WorkspaceProposalHistory setStatusChange(WorkspaceProposalHistoryStatusChange statusChange) {
    this.statusChange = statusChange;
    return this;
  }

  /**
   * The history type distinguishing between comments and status changes.
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * The history type distinguishing between comments and status changes.
   * @param type type or {@code null} for none
   */
  public WorkspaceProposalHistory setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  @Override
  public WorkspaceProposalHistory set(String fieldName, Object value) {
    return (WorkspaceProposalHistory) super.set(fieldName, value);
  }

  @Override
  public WorkspaceProposalHistory clone() {
    return (WorkspaceProposalHistory) super.clone();
  }

}
