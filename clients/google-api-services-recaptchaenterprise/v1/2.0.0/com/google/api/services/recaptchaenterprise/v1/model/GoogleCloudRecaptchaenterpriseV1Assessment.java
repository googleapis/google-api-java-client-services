/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.recaptchaenterprise.v1.model;

/**
 * A reCAPTCHA Enterprise assessment resource.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the reCAPTCHA Enterprise API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudRecaptchaenterpriseV1Assessment extends com.google.api.client.json.GenericJson {

  /**
   * Assessment returned by account defender when a hashed_account_id is provided.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudRecaptchaenterpriseV1AccountDefenderAssessment accountDefenderAssessment;

  /**
   * Account verification information for identity verification. The assessment event must include a
   * token and site key to use this feature.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudRecaptchaenterpriseV1AccountVerificationInfo accountVerification;

  /**
   * The event being assessed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudRecaptchaenterpriseV1Event event;

  /**
   * Output only. The resource name for the Assessment in the format
   * "projects/{project}/assessments/{assessment}".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * The private password leak verification field contains the parameters that are used to to check
   * for leaks privately without sharing user credentials.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudRecaptchaenterpriseV1PrivatePasswordLeakVerification privatePasswordLeakVerification;

  /**
   * Output only. The risk analysis result for the event being assessed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudRecaptchaenterpriseV1RiskAnalysis riskAnalysis;

  /**
   * Output only. Properties of the provided event token.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudRecaptchaenterpriseV1TokenProperties tokenProperties;

  /**
   * Assessment returned by account defender when a hashed_account_id is provided.
   * @return value or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1AccountDefenderAssessment getAccountDefenderAssessment() {
    return accountDefenderAssessment;
  }

  /**
   * Assessment returned by account defender when a hashed_account_id is provided.
   * @param accountDefenderAssessment accountDefenderAssessment or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1Assessment setAccountDefenderAssessment(GoogleCloudRecaptchaenterpriseV1AccountDefenderAssessment accountDefenderAssessment) {
    this.accountDefenderAssessment = accountDefenderAssessment;
    return this;
  }

  /**
   * Account verification information for identity verification. The assessment event must include a
   * token and site key to use this feature.
   * @return value or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1AccountVerificationInfo getAccountVerification() {
    return accountVerification;
  }

  /**
   * Account verification information for identity verification. The assessment event must include a
   * token and site key to use this feature.
   * @param accountVerification accountVerification or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1Assessment setAccountVerification(GoogleCloudRecaptchaenterpriseV1AccountVerificationInfo accountVerification) {
    this.accountVerification = accountVerification;
    return this;
  }

  /**
   * The event being assessed.
   * @return value or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1Event getEvent() {
    return event;
  }

  /**
   * The event being assessed.
   * @param event event or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1Assessment setEvent(GoogleCloudRecaptchaenterpriseV1Event event) {
    this.event = event;
    return this;
  }

  /**
   * Output only. The resource name for the Assessment in the format
   * "projects/{project}/assessments/{assessment}".
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. The resource name for the Assessment in the format
   * "projects/{project}/assessments/{assessment}".
   * @param name name or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1Assessment setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * The private password leak verification field contains the parameters that are used to to check
   * for leaks privately without sharing user credentials.
   * @return value or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1PrivatePasswordLeakVerification getPrivatePasswordLeakVerification() {
    return privatePasswordLeakVerification;
  }

  /**
   * The private password leak verification field contains the parameters that are used to to check
   * for leaks privately without sharing user credentials.
   * @param privatePasswordLeakVerification privatePasswordLeakVerification or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1Assessment setPrivatePasswordLeakVerification(GoogleCloudRecaptchaenterpriseV1PrivatePasswordLeakVerification privatePasswordLeakVerification) {
    this.privatePasswordLeakVerification = privatePasswordLeakVerification;
    return this;
  }

  /**
   * Output only. The risk analysis result for the event being assessed.
   * @return value or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1RiskAnalysis getRiskAnalysis() {
    return riskAnalysis;
  }

  /**
   * Output only. The risk analysis result for the event being assessed.
   * @param riskAnalysis riskAnalysis or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1Assessment setRiskAnalysis(GoogleCloudRecaptchaenterpriseV1RiskAnalysis riskAnalysis) {
    this.riskAnalysis = riskAnalysis;
    return this;
  }

  /**
   * Output only. Properties of the provided event token.
   * @return value or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1TokenProperties getTokenProperties() {
    return tokenProperties;
  }

  /**
   * Output only. Properties of the provided event token.
   * @param tokenProperties tokenProperties or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1Assessment setTokenProperties(GoogleCloudRecaptchaenterpriseV1TokenProperties tokenProperties) {
    this.tokenProperties = tokenProperties;
    return this;
  }

  @Override
  public GoogleCloudRecaptchaenterpriseV1Assessment set(String fieldName, Object value) {
    return (GoogleCloudRecaptchaenterpriseV1Assessment) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudRecaptchaenterpriseV1Assessment clone() {
    return (GoogleCloudRecaptchaenterpriseV1Assessment) super.clone();
  }

}
