/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.osconfig.v1beta.model;

/**
 * Zypper patching is performed by running `zypper patch`. See also
 * https://en.opensuse.org/SDB:Zypper_manual.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the OS Config API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ZypperSettings extends com.google.api.client.json.GenericJson {

  /**
   * Install only patches with these categories. Common categories include security, recommended,
   * and feature.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> categories;

  /**
   * List of patches to exclude from update.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> excludes;

  /**
   * An exclusive list of patches to be updated. These are the only patches that will be installed
   * using 'zypper patch patch:' command. This field must not be used with any other patch
   * configuration fields.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> exclusivePatches;

  /**
   * Install only patches with these severities. Common severities include critical, important,
   * moderate, and low.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> severities;

  /**
   * Adds the `--with-optional` flag to `zypper patch`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean withOptional;

  /**
   * Adds the `--with-update` flag, to `zypper patch`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean withUpdate;

  /**
   * Install only patches with these categories. Common categories include security, recommended,
   * and feature.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getCategories() {
    return categories;
  }

  /**
   * Install only patches with these categories. Common categories include security, recommended,
   * and feature.
   * @param categories categories or {@code null} for none
   */
  public ZypperSettings setCategories(java.util.List<java.lang.String> categories) {
    this.categories = categories;
    return this;
  }

  /**
   * List of patches to exclude from update.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getExcludes() {
    return excludes;
  }

  /**
   * List of patches to exclude from update.
   * @param excludes excludes or {@code null} for none
   */
  public ZypperSettings setExcludes(java.util.List<java.lang.String> excludes) {
    this.excludes = excludes;
    return this;
  }

  /**
   * An exclusive list of patches to be updated. These are the only patches that will be installed
   * using 'zypper patch patch:' command. This field must not be used with any other patch
   * configuration fields.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getExclusivePatches() {
    return exclusivePatches;
  }

  /**
   * An exclusive list of patches to be updated. These are the only patches that will be installed
   * using 'zypper patch patch:' command. This field must not be used with any other patch
   * configuration fields.
   * @param exclusivePatches exclusivePatches or {@code null} for none
   */
  public ZypperSettings setExclusivePatches(java.util.List<java.lang.String> exclusivePatches) {
    this.exclusivePatches = exclusivePatches;
    return this;
  }

  /**
   * Install only patches with these severities. Common severities include critical, important,
   * moderate, and low.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getSeverities() {
    return severities;
  }

  /**
   * Install only patches with these severities. Common severities include critical, important,
   * moderate, and low.
   * @param severities severities or {@code null} for none
   */
  public ZypperSettings setSeverities(java.util.List<java.lang.String> severities) {
    this.severities = severities;
    return this;
  }

  /**
   * Adds the `--with-optional` flag to `zypper patch`.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getWithOptional() {
    return withOptional;
  }

  /**
   * Adds the `--with-optional` flag to `zypper patch`.
   * @param withOptional withOptional or {@code null} for none
   */
  public ZypperSettings setWithOptional(java.lang.Boolean withOptional) {
    this.withOptional = withOptional;
    return this;
  }

  /**
   * Adds the `--with-update` flag, to `zypper patch`.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getWithUpdate() {
    return withUpdate;
  }

  /**
   * Adds the `--with-update` flag, to `zypper patch`.
   * @param withUpdate withUpdate or {@code null} for none
   */
  public ZypperSettings setWithUpdate(java.lang.Boolean withUpdate) {
    this.withUpdate = withUpdate;
    return this;
  }

  @Override
  public ZypperSettings set(String fieldName, Object value) {
    return (ZypperSettings) super.set(fieldName, value);
  }

  @Override
  public ZypperSettings clone() {
    return (ZypperSettings) super.clone();
  }

}
