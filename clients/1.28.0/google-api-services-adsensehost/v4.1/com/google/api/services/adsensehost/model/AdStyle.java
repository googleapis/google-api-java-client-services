/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.adsensehost.model;

/**
 * Model definition for AdStyle.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the AdSense Host API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AdStyle extends com.google.api.client.json.GenericJson {

  /**
   * The colors included in the style. These are represented as six hexadecimal characters, similar
   * to HTML color codes, but without the leading hash.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Colors colors;

  /**
   * The style of the corners in the ad (deprecated: never populated, ignored).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String corners;

  /**
   * The font which is included in the style.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Font font;

  /**
   * Kind this is, in this case adsensehost#adStyle.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String kind;

  /**
   * The colors included in the style. These are represented as six hexadecimal characters, similar
   * to HTML color codes, but without the leading hash.
   * @return value or {@code null} for none
   */
  public Colors getColors() {
    return colors;
  }

  /**
   * The colors included in the style. These are represented as six hexadecimal characters, similar
   * to HTML color codes, but without the leading hash.
   * @param colors colors or {@code null} for none
   */
  public AdStyle setColors(Colors colors) {
    this.colors = colors;
    return this;
  }

  /**
   * The style of the corners in the ad (deprecated: never populated, ignored).
   * @return value or {@code null} for none
   */
  public java.lang.String getCorners() {
    return corners;
  }

  /**
   * The style of the corners in the ad (deprecated: never populated, ignored).
   * @param corners corners or {@code null} for none
   */
  public AdStyle setCorners(java.lang.String corners) {
    this.corners = corners;
    return this;
  }

  /**
   * The font which is included in the style.
   * @return value or {@code null} for none
   */
  public Font getFont() {
    return font;
  }

  /**
   * The font which is included in the style.
   * @param font font or {@code null} for none
   */
  public AdStyle setFont(Font font) {
    this.font = font;
    return this;
  }

  /**
   * Kind this is, in this case adsensehost#adStyle.
   * @return value or {@code null} for none
   */
  public java.lang.String getKind() {
    return kind;
  }

  /**
   * Kind this is, in this case adsensehost#adStyle.
   * @param kind kind or {@code null} for none
   */
  public AdStyle setKind(java.lang.String kind) {
    this.kind = kind;
    return this;
  }

  @Override
  public AdStyle set(String fieldName, Object value) {
    return (AdStyle) super.set(fieldName, value);
  }

  @Override
  public AdStyle clone() {
    return (AdStyle) super.clone();
  }

  /**
   * The colors included in the style. These are represented as six hexadecimal characters, similar to
   * HTML color codes, but without the leading hash.
   */
  public static final class Colors extends com.google.api.client.json.GenericJson {

    /**
     * The color of the ad background.
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.String background;

    /**
     * The color of the ad border.
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.String border;

    /**
     * The color of the ad text.
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.String text;

    /**
     * The color of the ad title.
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.String title;

    /**
     * The color of the ad url.
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.String url;

    /**
     * The color of the ad background.
     * @return value or {@code null} for none
     */
    public java.lang.String getBackground() {
      return background;
    }

    /**
     * The color of the ad background.
     * @param background background or {@code null} for none
     */
    public Colors setBackground(java.lang.String background) {
      this.background = background;
      return this;
    }

    /**
     * The color of the ad border.
     * @return value or {@code null} for none
     */
    public java.lang.String getBorder() {
      return border;
    }

    /**
     * The color of the ad border.
     * @param border border or {@code null} for none
     */
    public Colors setBorder(java.lang.String border) {
      this.border = border;
      return this;
    }

    /**
     * The color of the ad text.
     * @return value or {@code null} for none
     */
    public java.lang.String getText() {
      return text;
    }

    /**
     * The color of the ad text.
     * @param text text or {@code null} for none
     */
    public Colors setText(java.lang.String text) {
      this.text = text;
      return this;
    }

    /**
     * The color of the ad title.
     * @return value or {@code null} for none
     */
    public java.lang.String getTitle() {
      return title;
    }

    /**
     * The color of the ad title.
     * @param title title or {@code null} for none
     */
    public Colors setTitle(java.lang.String title) {
      this.title = title;
      return this;
    }

    /**
     * The color of the ad url.
     * @return value or {@code null} for none
     */
    public java.lang.String getUrl() {
      return url;
    }

    /**
     * The color of the ad url.
     * @param url url or {@code null} for none
     */
    public Colors setUrl(java.lang.String url) {
      this.url = url;
      return this;
    }

    @Override
    public Colors set(String fieldName, Object value) {
      return (Colors) super.set(fieldName, value);
    }

    @Override
    public Colors clone() {
      return (Colors) super.clone();
    }

  }

  /**
   * The font which is included in the style.
   */
  public static final class Font extends com.google.api.client.json.GenericJson {

    /**
     * The family of the font. Possible values are: ACCOUNT_DEFAULT_FAMILY, ADSENSE_DEFAULT_FAMILY,
     * ARIAL, TIMES and VERDANA.
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.String family;

    /**
     * The size of the font. Possible values are: ACCOUNT_DEFAULT_SIZE, ADSENSE_DEFAULT_SIZE, SMALL,
     * MEDIUM and LARGE.
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.String size;

    /**
     * The family of the font. Possible values are: ACCOUNT_DEFAULT_FAMILY, ADSENSE_DEFAULT_FAMILY,
     * ARIAL, TIMES and VERDANA.
     * @return value or {@code null} for none
     */
    public java.lang.String getFamily() {
      return family;
    }

    /**
     * The family of the font. Possible values are: ACCOUNT_DEFAULT_FAMILY, ADSENSE_DEFAULT_FAMILY,
     * ARIAL, TIMES and VERDANA.
     * @param family family or {@code null} for none
     */
    public Font setFamily(java.lang.String family) {
      this.family = family;
      return this;
    }

    /**
     * The size of the font. Possible values are: ACCOUNT_DEFAULT_SIZE, ADSENSE_DEFAULT_SIZE, SMALL,
     * MEDIUM and LARGE.
     * @return value or {@code null} for none
     */
    public java.lang.String getSize() {
      return size;
    }

    /**
     * The size of the font. Possible values are: ACCOUNT_DEFAULT_SIZE, ADSENSE_DEFAULT_SIZE, SMALL,
     * MEDIUM and LARGE.
     * @param size size or {@code null} for none
     */
    public Font setSize(java.lang.String size) {
      this.size = size;
      return this;
    }

    @Override
    public Font set(String fieldName, Object value) {
      return (Font) super.set(fieldName, value);
    }

    @Override
    public Font clone() {
      return (Font) super.clone();
    }

  }

}
