/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.workstations.v1beta.model;

/**
 * A runtime using a Compute Engine instance.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Workstations API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GceInstance extends com.google.api.client.json.GenericJson {

  /**
   * A list of the type and count of accelerator cards attached to the instance.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Accelerator> accelerators;

  static {
    // hack to force ProGuard to consider Accelerator used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(Accelerator.class);
  }

  /**
   * The size of the boot disk for the VM in gigabytes (GB). The minimum boot disk size is `30` GB.
   * Defaults to `50` GB.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer bootDiskSizeGb;

  /**
   * A set of Compute Engine Confidential VM instance options.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GceConfidentialInstanceConfig confidentialInstanceConfig;

  /**
   * When set to true, disables public IP addresses for VMs. If you disable public IP addresses, you
   * must set up Private Google Access or Cloud NAT on your network. If you use Private Google
   * Access and you use `private.googleapis.com` or `restricted.googleapis.com` for Container
   * Registry and Artifact Registry, make sure that you set up DNS records for domains `*.gcr.io`
   * and `*.pkg.dev`. Defaults to false (VMs have public IP addresses).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean disablePublicIpAddresses;

  /**
   * The type of machine to use for VM instances—for example, `e2-standard-4`. For more information
   * about machine types that Cloud Workstations supports, see the list of [available machine
   * types](https://cloud.google.com/workstations/docs/available-machine-types).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String machineType;

  /**
   * The number of VMs that the system should keep idle so that new workstations can be started
   * quickly for new users. Defaults to `0` in the API.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer poolSize;

  /**
   * Output only. Number of instances currently available in the pool for faster workstation
   * startup.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer pooledInstances;

  /**
   * The email address of the service account for Cloud Workstations VMs created with this
   * configuration. When specified, be sure that the service account has `logginglogEntries.create`
   * permission on the project so it can write logs out to Cloud Logging. If using a custom
   * container image, the service account must have permissions to pull the specified image. If you
   * as the administrator want to be able to `ssh` into the underlying VM, you need to set this
   * value to a service account for which you have the `iam.serviceAccounts.actAs` permission.
   * Conversely, if you don't want anyone to be able to `ssh` into the underlying VM, use a service
   * account where no one has that permission. If not set, VMs run with a service account provided
   * by the Cloud Workstations service, and the image must be publicly accessible.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String serviceAccount;

  /**
   * A set of Compute Engine Shielded instance options.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GceShieldedInstanceConfig shieldedInstanceConfig;

  /**
   * Network tags to add to the Compute Engine machines backing the workstations. This option
   * applies [network tags](https://cloud.google.com/vpc/docs/add-remove-network-tags) to VMs
   * created with this configuration. These network tags enable the creation of [firewall
   * rules](https://cloud.google.com/workstations/docs/configure-firewall-rules).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> tags;

  /**
   * A list of the type and count of accelerator cards attached to the instance.
   * @return value or {@code null} for none
   */
  public java.util.List<Accelerator> getAccelerators() {
    return accelerators;
  }

  /**
   * A list of the type and count of accelerator cards attached to the instance.
   * @param accelerators accelerators or {@code null} for none
   */
  public GceInstance setAccelerators(java.util.List<Accelerator> accelerators) {
    this.accelerators = accelerators;
    return this;
  }

  /**
   * The size of the boot disk for the VM in gigabytes (GB). The minimum boot disk size is `30` GB.
   * Defaults to `50` GB.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getBootDiskSizeGb() {
    return bootDiskSizeGb;
  }

  /**
   * The size of the boot disk for the VM in gigabytes (GB). The minimum boot disk size is `30` GB.
   * Defaults to `50` GB.
   * @param bootDiskSizeGb bootDiskSizeGb or {@code null} for none
   */
  public GceInstance setBootDiskSizeGb(java.lang.Integer bootDiskSizeGb) {
    this.bootDiskSizeGb = bootDiskSizeGb;
    return this;
  }

  /**
   * A set of Compute Engine Confidential VM instance options.
   * @return value or {@code null} for none
   */
  public GceConfidentialInstanceConfig getConfidentialInstanceConfig() {
    return confidentialInstanceConfig;
  }

  /**
   * A set of Compute Engine Confidential VM instance options.
   * @param confidentialInstanceConfig confidentialInstanceConfig or {@code null} for none
   */
  public GceInstance setConfidentialInstanceConfig(GceConfidentialInstanceConfig confidentialInstanceConfig) {
    this.confidentialInstanceConfig = confidentialInstanceConfig;
    return this;
  }

  /**
   * When set to true, disables public IP addresses for VMs. If you disable public IP addresses, you
   * must set up Private Google Access or Cloud NAT on your network. If you use Private Google
   * Access and you use `private.googleapis.com` or `restricted.googleapis.com` for Container
   * Registry and Artifact Registry, make sure that you set up DNS records for domains `*.gcr.io`
   * and `*.pkg.dev`. Defaults to false (VMs have public IP addresses).
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getDisablePublicIpAddresses() {
    return disablePublicIpAddresses;
  }

  /**
   * When set to true, disables public IP addresses for VMs. If you disable public IP addresses, you
   * must set up Private Google Access or Cloud NAT on your network. If you use Private Google
   * Access and you use `private.googleapis.com` or `restricted.googleapis.com` for Container
   * Registry and Artifact Registry, make sure that you set up DNS records for domains `*.gcr.io`
   * and `*.pkg.dev`. Defaults to false (VMs have public IP addresses).
   * @param disablePublicIpAddresses disablePublicIpAddresses or {@code null} for none
   */
  public GceInstance setDisablePublicIpAddresses(java.lang.Boolean disablePublicIpAddresses) {
    this.disablePublicIpAddresses = disablePublicIpAddresses;
    return this;
  }

  /**
   * The type of machine to use for VM instances—for example, `e2-standard-4`. For more information
   * about machine types that Cloud Workstations supports, see the list of [available machine
   * types](https://cloud.google.com/workstations/docs/available-machine-types).
   * @return value or {@code null} for none
   */
  public java.lang.String getMachineType() {
    return machineType;
  }

  /**
   * The type of machine to use for VM instances—for example, `e2-standard-4`. For more information
   * about machine types that Cloud Workstations supports, see the list of [available machine
   * types](https://cloud.google.com/workstations/docs/available-machine-types).
   * @param machineType machineType or {@code null} for none
   */
  public GceInstance setMachineType(java.lang.String machineType) {
    this.machineType = machineType;
    return this;
  }

  /**
   * The number of VMs that the system should keep idle so that new workstations can be started
   * quickly for new users. Defaults to `0` in the API.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getPoolSize() {
    return poolSize;
  }

  /**
   * The number of VMs that the system should keep idle so that new workstations can be started
   * quickly for new users. Defaults to `0` in the API.
   * @param poolSize poolSize or {@code null} for none
   */
  public GceInstance setPoolSize(java.lang.Integer poolSize) {
    this.poolSize = poolSize;
    return this;
  }

  /**
   * Output only. Number of instances currently available in the pool for faster workstation
   * startup.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getPooledInstances() {
    return pooledInstances;
  }

  /**
   * Output only. Number of instances currently available in the pool for faster workstation
   * startup.
   * @param pooledInstances pooledInstances or {@code null} for none
   */
  public GceInstance setPooledInstances(java.lang.Integer pooledInstances) {
    this.pooledInstances = pooledInstances;
    return this;
  }

  /**
   * The email address of the service account for Cloud Workstations VMs created with this
   * configuration. When specified, be sure that the service account has `logginglogEntries.create`
   * permission on the project so it can write logs out to Cloud Logging. If using a custom
   * container image, the service account must have permissions to pull the specified image. If you
   * as the administrator want to be able to `ssh` into the underlying VM, you need to set this
   * value to a service account for which you have the `iam.serviceAccounts.actAs` permission.
   * Conversely, if you don't want anyone to be able to `ssh` into the underlying VM, use a service
   * account where no one has that permission. If not set, VMs run with a service account provided
   * by the Cloud Workstations service, and the image must be publicly accessible.
   * @return value or {@code null} for none
   */
  public java.lang.String getServiceAccount() {
    return serviceAccount;
  }

  /**
   * The email address of the service account for Cloud Workstations VMs created with this
   * configuration. When specified, be sure that the service account has `logginglogEntries.create`
   * permission on the project so it can write logs out to Cloud Logging. If using a custom
   * container image, the service account must have permissions to pull the specified image. If you
   * as the administrator want to be able to `ssh` into the underlying VM, you need to set this
   * value to a service account for which you have the `iam.serviceAccounts.actAs` permission.
   * Conversely, if you don't want anyone to be able to `ssh` into the underlying VM, use a service
   * account where no one has that permission. If not set, VMs run with a service account provided
   * by the Cloud Workstations service, and the image must be publicly accessible.
   * @param serviceAccount serviceAccount or {@code null} for none
   */
  public GceInstance setServiceAccount(java.lang.String serviceAccount) {
    this.serviceAccount = serviceAccount;
    return this;
  }

  /**
   * A set of Compute Engine Shielded instance options.
   * @return value or {@code null} for none
   */
  public GceShieldedInstanceConfig getShieldedInstanceConfig() {
    return shieldedInstanceConfig;
  }

  /**
   * A set of Compute Engine Shielded instance options.
   * @param shieldedInstanceConfig shieldedInstanceConfig or {@code null} for none
   */
  public GceInstance setShieldedInstanceConfig(GceShieldedInstanceConfig shieldedInstanceConfig) {
    this.shieldedInstanceConfig = shieldedInstanceConfig;
    return this;
  }

  /**
   * Network tags to add to the Compute Engine machines backing the workstations. This option
   * applies [network tags](https://cloud.google.com/vpc/docs/add-remove-network-tags) to VMs
   * created with this configuration. These network tags enable the creation of [firewall
   * rules](https://cloud.google.com/workstations/docs/configure-firewall-rules).
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getTags() {
    return tags;
  }

  /**
   * Network tags to add to the Compute Engine machines backing the workstations. This option
   * applies [network tags](https://cloud.google.com/vpc/docs/add-remove-network-tags) to VMs
   * created with this configuration. These network tags enable the creation of [firewall
   * rules](https://cloud.google.com/workstations/docs/configure-firewall-rules).
   * @param tags tags or {@code null} for none
   */
  public GceInstance setTags(java.util.List<java.lang.String> tags) {
    this.tags = tags;
    return this;
  }

  @Override
  public GceInstance set(String fieldName, Object value) {
    return (GceInstance) super.set(fieldName, value);
  }

  @Override
  public GceInstance clone() {
    return (GceInstance) super.clone();
  }

}
