/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * The style customizations for the 3p agent.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AssistantApiCoreTypesCloudProviderInfoAgentStyle extends com.google.api.client.json.GenericJson {

  /**
   * The background color of the agent. Used if no background image is specified for the given
   * display orientation, or if the provided background image does not fit.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiCoreTypesGovernedColor backgroundColor;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String headerTheme;

  /**
   * URL for the background image of the agent on landscape display.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String landscapeBackgroundImageUrl;

  /**
   * URL for the image containing the 3p logo. This can include logomark and logotype, or logotype
   * only. If present, this can be used in place of the square logo contained in the top level
   * logo_url field in CloudProviderInfo. See go/cards-logo-customization for details on applying
   * this logo.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String logoUrl;

  /**
   * The color of the mask to apply to the background. See go/aog-cards-background-mask for details
   * on applying this mask.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiCoreTypesGovernedColor maskColor;

  /**
   * URL for the background image of the agent on portrait display.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String portraitBackgroundImageUrl;

  /**
   * The primary color of the agent. Used by the client to style the header and suggestion chips.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiCoreTypesGovernedColor primaryColor;

  /**
   * The background color of the agent. Used if no background image is specified for the given
   * display orientation, or if the provided background image does not fit.
   * @return value or {@code null} for none
   */
  public AssistantApiCoreTypesGovernedColor getBackgroundColor() {
    return backgroundColor;
  }

  /**
   * The background color of the agent. Used if no background image is specified for the given
   * display orientation, or if the provided background image does not fit.
   * @param backgroundColor backgroundColor or {@code null} for none
   */
  public AssistantApiCoreTypesCloudProviderInfoAgentStyle setBackgroundColor(AssistantApiCoreTypesGovernedColor backgroundColor) {
    this.backgroundColor = backgroundColor;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getHeaderTheme() {
    return headerTheme;
  }

  /**
   * @param headerTheme headerTheme or {@code null} for none
   */
  public AssistantApiCoreTypesCloudProviderInfoAgentStyle setHeaderTheme(java.lang.String headerTheme) {
    this.headerTheme = headerTheme;
    return this;
  }

  /**
   * URL for the background image of the agent on landscape display.
   * @return value or {@code null} for none
   */
  public java.lang.String getLandscapeBackgroundImageUrl() {
    return landscapeBackgroundImageUrl;
  }

  /**
   * URL for the background image of the agent on landscape display.
   * @param landscapeBackgroundImageUrl landscapeBackgroundImageUrl or {@code null} for none
   */
  public AssistantApiCoreTypesCloudProviderInfoAgentStyle setLandscapeBackgroundImageUrl(java.lang.String landscapeBackgroundImageUrl) {
    this.landscapeBackgroundImageUrl = landscapeBackgroundImageUrl;
    return this;
  }

  /**
   * URL for the image containing the 3p logo. This can include logomark and logotype, or logotype
   * only. If present, this can be used in place of the square logo contained in the top level
   * logo_url field in CloudProviderInfo. See go/cards-logo-customization for details on applying
   * this logo.
   * @return value or {@code null} for none
   */
  public java.lang.String getLogoUrl() {
    return logoUrl;
  }

  /**
   * URL for the image containing the 3p logo. This can include logomark and logotype, or logotype
   * only. If present, this can be used in place of the square logo contained in the top level
   * logo_url field in CloudProviderInfo. See go/cards-logo-customization for details on applying
   * this logo.
   * @param logoUrl logoUrl or {@code null} for none
   */
  public AssistantApiCoreTypesCloudProviderInfoAgentStyle setLogoUrl(java.lang.String logoUrl) {
    this.logoUrl = logoUrl;
    return this;
  }

  /**
   * The color of the mask to apply to the background. See go/aog-cards-background-mask for details
   * on applying this mask.
   * @return value or {@code null} for none
   */
  public AssistantApiCoreTypesGovernedColor getMaskColor() {
    return maskColor;
  }

  /**
   * The color of the mask to apply to the background. See go/aog-cards-background-mask for details
   * on applying this mask.
   * @param maskColor maskColor or {@code null} for none
   */
  public AssistantApiCoreTypesCloudProviderInfoAgentStyle setMaskColor(AssistantApiCoreTypesGovernedColor maskColor) {
    this.maskColor = maskColor;
    return this;
  }

  /**
   * URL for the background image of the agent on portrait display.
   * @return value or {@code null} for none
   */
  public java.lang.String getPortraitBackgroundImageUrl() {
    return portraitBackgroundImageUrl;
  }

  /**
   * URL for the background image of the agent on portrait display.
   * @param portraitBackgroundImageUrl portraitBackgroundImageUrl or {@code null} for none
   */
  public AssistantApiCoreTypesCloudProviderInfoAgentStyle setPortraitBackgroundImageUrl(java.lang.String portraitBackgroundImageUrl) {
    this.portraitBackgroundImageUrl = portraitBackgroundImageUrl;
    return this;
  }

  /**
   * The primary color of the agent. Used by the client to style the header and suggestion chips.
   * @return value or {@code null} for none
   */
  public AssistantApiCoreTypesGovernedColor getPrimaryColor() {
    return primaryColor;
  }

  /**
   * The primary color of the agent. Used by the client to style the header and suggestion chips.
   * @param primaryColor primaryColor or {@code null} for none
   */
  public AssistantApiCoreTypesCloudProviderInfoAgentStyle setPrimaryColor(AssistantApiCoreTypesGovernedColor primaryColor) {
    this.primaryColor = primaryColor;
    return this;
  }

  @Override
  public AssistantApiCoreTypesCloudProviderInfoAgentStyle set(String fieldName, Object value) {
    return (AssistantApiCoreTypesCloudProviderInfoAgentStyle) super.set(fieldName, value);
  }

  @Override
  public AssistantApiCoreTypesCloudProviderInfoAgentStyle clone() {
    return (AssistantApiCoreTypesCloudProviderInfoAgentStyle) super.clone();
  }

}
