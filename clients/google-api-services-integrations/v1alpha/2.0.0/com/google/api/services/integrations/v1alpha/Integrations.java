/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.integrations.v1alpha;

/**
 * Service definition for Integrations (v1alpha).
 *
 * <p>
 * 
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/application-integration" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link IntegrationsRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Integrations extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        (com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1))) ||
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION >= 2,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "2.0.0 of the Application Integration API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://integrations.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://integrations.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Integrations(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Integrations(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Callback collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Integrations integrations = new Integrations(...);}
   *   {@code Integrations.Callback.List request = integrations.callback().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Callback callback() {
    return new Callback();
  }

  /**
   * The "callback" collection of methods.
   */
  public class Callback {

    /**
     * Receives the auth code and auth config id to combine that with the client id and secret to
     * retrieve access tokens from the token endpoint. Returns either a success or error message when
     * it's done.
     *
     * Create a request for the method "callback.generateToken".
     *
     * This request holds the parameters needed by the integrations server.  After setting any optional
     * parameters, call the {@link GenerateToken#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public GenerateToken generateToken() throws java.io.IOException {
      GenerateToken result = new GenerateToken();
      initialize(result);
      return result;
    }

    public class GenerateToken extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaGenerateTokenResponse> {

      private static final String REST_PATH = "v1alpha/callback:generateToken";

      /**
       * Receives the auth code and auth config id to combine that with the client id and secret to
       * retrieve access tokens from the token endpoint. Returns either a success or error message when
       * it's done.
       *
       * Create a request for the method "callback.generateToken".
       *
       * This request holds the parameters needed by the the integrations server.  After setting any
       * optional parameters, call the {@link GenerateToken#execute()} method to invoke the remote
       * operation. <p> {@link GenerateToken#initialize(com.google.api.client.googleapis.services.Abstra
       * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
       * the constructor. </p>
       *
       * @since 1.13
       */
      protected GenerateToken() {
        super(Integrations.this, "GET", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaGenerateTokenResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GenerateToken set$Xgafv(java.lang.String $Xgafv) {
        return (GenerateToken) super.set$Xgafv($Xgafv);
      }

      @Override
      public GenerateToken setAccessToken(java.lang.String accessToken) {
        return (GenerateToken) super.setAccessToken(accessToken);
      }

      @Override
      public GenerateToken setAlt(java.lang.String alt) {
        return (GenerateToken) super.setAlt(alt);
      }

      @Override
      public GenerateToken setCallback(java.lang.String callback) {
        return (GenerateToken) super.setCallback(callback);
      }

      @Override
      public GenerateToken setFields(java.lang.String fields) {
        return (GenerateToken) super.setFields(fields);
      }

      @Override
      public GenerateToken setKey(java.lang.String key) {
        return (GenerateToken) super.setKey(key);
      }

      @Override
      public GenerateToken setOauthToken(java.lang.String oauthToken) {
        return (GenerateToken) super.setOauthToken(oauthToken);
      }

      @Override
      public GenerateToken setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GenerateToken) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GenerateToken setQuotaUser(java.lang.String quotaUser) {
        return (GenerateToken) super.setQuotaUser(quotaUser);
      }

      @Override
      public GenerateToken setUploadType(java.lang.String uploadType) {
        return (GenerateToken) super.setUploadType(uploadType);
      }

      @Override
      public GenerateToken setUploadProtocol(java.lang.String uploadProtocol) {
        return (GenerateToken) super.setUploadProtocol(uploadProtocol);
      }

      /** The auth code for the given request */
      @com.google.api.client.util.Key
      private java.lang.String code;

      /** The auth code for the given request
       */
      public java.lang.String getCode() {
        return code;
      }

      /** The auth code for the given request */
      public GenerateToken setCode(java.lang.String code) {
        this.code = code;
        return this;
      }

      /** The gcp project id of the request */
      @com.google.api.client.util.Key
      private java.lang.String gcpProjectId;

      /** The gcp project id of the request
       */
      public java.lang.String getGcpProjectId() {
        return gcpProjectId;
      }

      /** The gcp project id of the request */
      public GenerateToken setGcpProjectId(java.lang.String gcpProjectId) {
        this.gcpProjectId = gcpProjectId;
        return this;
      }

      /** Which product sends the request */
      @com.google.api.client.util.Key
      private java.lang.String product;

      /** Which product sends the request
       */
      public java.lang.String getProduct() {
        return product;
      }

      /** Which product sends the request */
      public GenerateToken setProduct(java.lang.String product) {
        this.product = product;
        return this;
      }

      /** Redirect uri of the auth code request */
      @com.google.api.client.util.Key
      private java.lang.String redirectUri;

      /** Redirect uri of the auth code request
       */
      public java.lang.String getRedirectUri() {
        return redirectUri;
      }

      /** Redirect uri of the auth code request */
      public GenerateToken setRedirectUri(java.lang.String redirectUri) {
        this.redirectUri = redirectUri;
        return this;
      }

      /** The auth config id for the given request */
      @com.google.api.client.util.Key
      private java.lang.String state;

      /** The auth config id for the given request
       */
      public java.lang.String getState() {
        return state;
      }

      /** The auth config id for the given request */
      public GenerateToken setState(java.lang.String state) {
        this.state = state;
        return this;
      }

      @Override
      public GenerateToken set(String parameterName, Object value) {
        return (GenerateToken) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the ConnectorPlatformRegions collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Integrations integrations = new Integrations(...);}
   *   {@code Integrations.ConnectorPlatformRegions.List request = integrations.connectorPlatformRegions().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public ConnectorPlatformRegions connectorPlatformRegions() {
    return new ConnectorPlatformRegions();
  }

  /**
   * The "connectorPlatformRegions" collection of methods.
   */
  public class ConnectorPlatformRegions {

    /**
     * Enumerates the regions for which Connector Platform is provisioned.
     *
     * Create a request for the method "connectorPlatformRegions.enumerate".
     *
     * This request holds the parameters needed by the integrations server.  After setting any optional
     * parameters, call the {@link Enumerate#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public Enumerate enumerate() throws java.io.IOException {
      Enumerate result = new Enumerate();
      initialize(result);
      return result;
    }

    public class Enumerate extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaEnumerateConnectorPlatformRegionsResponse> {

      private static final String REST_PATH = "v1alpha/connectorPlatformRegions:enumerate";

      /**
       * Enumerates the regions for which Connector Platform is provisioned.
       *
       * Create a request for the method "connectorPlatformRegions.enumerate".
       *
       * This request holds the parameters needed by the the integrations server.  After setting any
       * optional parameters, call the {@link Enumerate#execute()} method to invoke the remote
       * operation. <p> {@link
       * Enumerate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected Enumerate() {
        super(Integrations.this, "GET", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaEnumerateConnectorPlatformRegionsResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Enumerate set$Xgafv(java.lang.String $Xgafv) {
        return (Enumerate) super.set$Xgafv($Xgafv);
      }

      @Override
      public Enumerate setAccessToken(java.lang.String accessToken) {
        return (Enumerate) super.setAccessToken(accessToken);
      }

      @Override
      public Enumerate setAlt(java.lang.String alt) {
        return (Enumerate) super.setAlt(alt);
      }

      @Override
      public Enumerate setCallback(java.lang.String callback) {
        return (Enumerate) super.setCallback(callback);
      }

      @Override
      public Enumerate setFields(java.lang.String fields) {
        return (Enumerate) super.setFields(fields);
      }

      @Override
      public Enumerate setKey(java.lang.String key) {
        return (Enumerate) super.setKey(key);
      }

      @Override
      public Enumerate setOauthToken(java.lang.String oauthToken) {
        return (Enumerate) super.setOauthToken(oauthToken);
      }

      @Override
      public Enumerate setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Enumerate) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Enumerate setQuotaUser(java.lang.String quotaUser) {
        return (Enumerate) super.setQuotaUser(quotaUser);
      }

      @Override
      public Enumerate setUploadType(java.lang.String uploadType) {
        return (Enumerate) super.setUploadType(uploadType);
      }

      @Override
      public Enumerate setUploadProtocol(java.lang.String uploadProtocol) {
        return (Enumerate) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public Enumerate set(String parameterName, Object value) {
        return (Enumerate) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Integrations integrations = new Integrations(...);}
   *   {@code Integrations.Projects.List request = integrations.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the Locations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Integrations integrations = new Integrations(...);}
     *   {@code Integrations.Locations.List request = integrations.locations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Locations locations() {
      return new Locations();
    }

    /**
     * The "locations" collection of methods.
     */
    public class Locations {

      /**
       * This is a UI only method and will be moved away. Returns a list of common tasks.
       *
       * Create a request for the method "locations.listTaskEntities".
       *
       * This request holds the parameters needed by the integrations server.  After setting any optional
       * parameters, call the {@link ListTaskEntities#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The location resource of the request. This is not going to be used but preserve the field
       *        for future.
       * @return the request
       */
      public ListTaskEntities listTaskEntities(java.lang.String parent) throws java.io.IOException {
        ListTaskEntities result = new ListTaskEntities(parent);
        initialize(result);
        return result;
      }

      public class ListTaskEntities extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaListTaskEntitiesResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}:listTaskEntities";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

        /**
         * This is a UI only method and will be moved away. Returns a list of common tasks.
         *
         * Create a request for the method "locations.listTaskEntities".
         *
         * This request holds the parameters needed by the the integrations server.  After setting any
         * optional parameters, call the {@link ListTaskEntities#execute()} method to invoke the remote
         * operation. <p> {@link ListTaskEntities#initialize(com.google.api.client.googleapis.services.Abs
         * tractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param parent Required. The location resource of the request. This is not going to be used but preserve the field
       *        for future.
         * @since 1.13
         */
        protected ListTaskEntities(java.lang.String parent) {
          super(Integrations.this, "GET", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaListTaskEntitiesResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public ListTaskEntities set$Xgafv(java.lang.String $Xgafv) {
          return (ListTaskEntities) super.set$Xgafv($Xgafv);
        }

        @Override
        public ListTaskEntities setAccessToken(java.lang.String accessToken) {
          return (ListTaskEntities) super.setAccessToken(accessToken);
        }

        @Override
        public ListTaskEntities setAlt(java.lang.String alt) {
          return (ListTaskEntities) super.setAlt(alt);
        }

        @Override
        public ListTaskEntities setCallback(java.lang.String callback) {
          return (ListTaskEntities) super.setCallback(callback);
        }

        @Override
        public ListTaskEntities setFields(java.lang.String fields) {
          return (ListTaskEntities) super.setFields(fields);
        }

        @Override
        public ListTaskEntities setKey(java.lang.String key) {
          return (ListTaskEntities) super.setKey(key);
        }

        @Override
        public ListTaskEntities setOauthToken(java.lang.String oauthToken) {
          return (ListTaskEntities) super.setOauthToken(oauthToken);
        }

        @Override
        public ListTaskEntities setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (ListTaskEntities) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public ListTaskEntities setQuotaUser(java.lang.String quotaUser) {
          return (ListTaskEntities) super.setQuotaUser(quotaUser);
        }

        @Override
        public ListTaskEntities setUploadType(java.lang.String uploadType) {
          return (ListTaskEntities) super.setUploadType(uploadType);
        }

        @Override
        public ListTaskEntities setUploadProtocol(java.lang.String uploadProtocol) {
          return (ListTaskEntities) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The location resource of the request. This is not going to be used but preserve
         * the field for future.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The location resource of the request. This is not going to be used but preserve the field
       for future.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The location resource of the request. This is not going to be used but preserve
         * the field for future.
         */
        public ListTaskEntities setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public ListTaskEntities set(String parameterName, Object value) {
          return (ListTaskEntities) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the AppsScriptProjects collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Integrations integrations = new Integrations(...);}
       *   {@code Integrations.AppsScriptProjects.List request = integrations.appsScriptProjects().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public AppsScriptProjects appsScriptProjects() {
        return new AppsScriptProjects();
      }

      /**
       * The "appsScriptProjects" collection of methods.
       */
      public class AppsScriptProjects {

        /**
         * Creates an Apps Script project.
         *
         * Create a request for the method "appsScriptProjects.create".
         *
         * This request holds the parameters needed by the integrations server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The project that the executed integration belongs to.
         * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaCreateAppsScriptProjectRequest}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaCreateAppsScriptProjectRequest content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaCreateAppsScriptProjectResponse> {

          private static final String REST_PATH = "v1alpha/{+parent}/appsScriptProjects";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates an Apps Script project.
           *
           * Create a request for the method "appsScriptProjects.create".
           *
           * This request holds the parameters needed by the the integrations server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The project that the executed integration belongs to.
           * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaCreateAppsScriptProjectRequest}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaCreateAppsScriptProjectRequest content) {
            super(Integrations.this, "POST", REST_PATH, content, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaCreateAppsScriptProjectResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The project that the executed integration belongs to. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The project that the executed integration belongs to.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The project that the executed integration belongs to. */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Links a existing Apps Script project.
         *
         * Create a request for the method "appsScriptProjects.link".
         *
         * This request holds the parameters needed by the integrations server.  After setting any optional
         * parameters, call the {@link Link#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The project that the executed integration belongs to.
         * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaLinkAppsScriptProjectRequest}
         * @return the request
         */
        public Link link(java.lang.String parent, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaLinkAppsScriptProjectRequest content) throws java.io.IOException {
          Link result = new Link(parent, content);
          initialize(result);
          return result;
        }

        public class Link extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaLinkAppsScriptProjectResponse> {

          private static final String REST_PATH = "v1alpha/{+parent}/appsScriptProjects:link";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Links a existing Apps Script project.
           *
           * Create a request for the method "appsScriptProjects.link".
           *
           * This request holds the parameters needed by the the integrations server.  After setting any
           * optional parameters, call the {@link Link#execute()} method to invoke the remote operation. <p>
           * {@link Link#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The project that the executed integration belongs to.
           * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaLinkAppsScriptProjectRequest}
           * @since 1.13
           */
          protected Link(java.lang.String parent, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaLinkAppsScriptProjectRequest content) {
            super(Integrations.this, "POST", REST_PATH, content, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaLinkAppsScriptProjectResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Link set$Xgafv(java.lang.String $Xgafv) {
            return (Link) super.set$Xgafv($Xgafv);
          }

          @Override
          public Link setAccessToken(java.lang.String accessToken) {
            return (Link) super.setAccessToken(accessToken);
          }

          @Override
          public Link setAlt(java.lang.String alt) {
            return (Link) super.setAlt(alt);
          }

          @Override
          public Link setCallback(java.lang.String callback) {
            return (Link) super.setCallback(callback);
          }

          @Override
          public Link setFields(java.lang.String fields) {
            return (Link) super.setFields(fields);
          }

          @Override
          public Link setKey(java.lang.String key) {
            return (Link) super.setKey(key);
          }

          @Override
          public Link setOauthToken(java.lang.String oauthToken) {
            return (Link) super.setOauthToken(oauthToken);
          }

          @Override
          public Link setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Link) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Link setQuotaUser(java.lang.String quotaUser) {
            return (Link) super.setQuotaUser(quotaUser);
          }

          @Override
          public Link setUploadType(java.lang.String uploadType) {
            return (Link) super.setUploadType(uploadType);
          }

          @Override
          public Link setUploadProtocol(java.lang.String uploadProtocol) {
            return (Link) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The project that the executed integration belongs to. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The project that the executed integration belongs to.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The project that the executed integration belongs to. */
          public Link setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Link set(String parameterName, Object value) {
            return (Link) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the AuthConfigs collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Integrations integrations = new Integrations(...);}
       *   {@code Integrations.AuthConfigs.List request = integrations.authConfigs().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public AuthConfigs authConfigs() {
        return new AuthConfigs();
      }

      /**
       * The "authConfigs" collection of methods.
       */
      public class AuthConfigs {

        /**
         * Creates an auth config record. Fetch corresponding credentials for specific auth types, e.g.
         * access token for OAuth 2.0, JWT token for JWT. Encrypt the auth config with Cloud KMS and store
         * the encrypted credentials in Spanner. Returns the encrypted auth config.
         *
         * Create a request for the method "authConfigs.create".
         *
         * This request holds the parameters needed by the integrations server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. "projects/{project}/locations/{location}" format.
         * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaAuthConfig}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaAuthConfig content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaAuthConfig> {

          private static final String REST_PATH = "v1alpha/{+parent}/authConfigs";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates an auth config record. Fetch corresponding credentials for specific auth types, e.g.
           * access token for OAuth 2.0, JWT token for JWT. Encrypt the auth config with Cloud KMS and store
           * the encrypted credentials in Spanner. Returns the encrypted auth config.
           *
           * Create a request for the method "authConfigs.create".
           *
           * This request holds the parameters needed by the the integrations server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. "projects/{project}/locations/{location}" format.
           * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaAuthConfig}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaAuthConfig content) {
            super(Integrations.this, "POST", REST_PATH, content, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaAuthConfig.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. "projects/{project}/locations/{location}" format. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. "projects/{project}/locations/{location}" format.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. "projects/{project}/locations/{location}" format. */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * The ssl certificate encoded in PEM format. This string must include the begin header
           * and end footer lines. For example, -----BEGIN CERTIFICATE-----
           * MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV
           * BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw
           * MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET
           * MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA
           * vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1
           * JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB
           * xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P
           * AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB
           * Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey
           * Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW
           * JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr
           * 5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H
           * wQW6M0H7Zt8claGRla4fKkg= -----END CERTIFICATE-----
           */
          @com.google.api.client.util.Key("clientCertificate.encryptedPrivateKey")
          private java.lang.String clientCertificateEncryptedPrivateKey;

          /** The ssl certificate encoded in PEM format. This string must include the begin header and end footer
         lines. For example, -----BEGIN CERTIFICATE-----
         MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV
         BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw
         MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET
         MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA
         vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1
         JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB
         xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P
         AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB
         Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey
         Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW
         JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr
         5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H wQW6M0H7Zt8claGRla4fKkg= -----END
         CERTIFICATE-----
           */
          public java.lang.String getClientCertificateEncryptedPrivateKey() {
            return clientCertificateEncryptedPrivateKey;
          }

          /**
           * The ssl certificate encoded in PEM format. This string must include the begin header
           * and end footer lines. For example, -----BEGIN CERTIFICATE-----
           * MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV
           * BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw
           * MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET
           * MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA
           * vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1
           * JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB
           * xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P
           * AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB
           * Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey
           * Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW
           * JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr
           * 5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H
           * wQW6M0H7Zt8claGRla4fKkg= -----END CERTIFICATE-----
           */
          public Create setClientCertificateEncryptedPrivateKey(java.lang.String clientCertificateEncryptedPrivateKey) {
            this.clientCertificateEncryptedPrivateKey = clientCertificateEncryptedPrivateKey;
            return this;
          }

          /**
           * 'passphrase' should be left unset if private key is not encrypted. Note that
           * 'passphrase' is not the password for web server, but an extra layer of security to
           * protected private key.
           */
          @com.google.api.client.util.Key("clientCertificate.passphrase")
          private java.lang.String clientCertificatePassphrase;

          /**' passphrase' should be left unset if private key is not encrypted. Note that 'passphrase' is not
        ' the password for web server, but an extra layer of security to protected private key.
        '

           */
          public java.lang.String getClientCertificatePassphrase() {
            return clientCertificatePassphrase;
          }

          /**
           * 'passphrase' should be left unset if private key is not encrypted. Note that
           * 'passphrase' is not the password for web server, but an extra layer of security to
           * protected private key.
           */
          public Create setClientCertificatePassphrase(java.lang.String clientCertificatePassphrase) {
            this.clientCertificatePassphrase = clientCertificatePassphrase;
            return this;
          }

          /**
           * The ssl certificate encoded in PEM format. This string must include the begin header
           * and end footer lines. For example, -----BEGIN CERTIFICATE-----
           * MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV
           * BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw
           * MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET
           * MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA
           * vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1
           * JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB
           * xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P
           * AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB
           * Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey
           * Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW
           * JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr
           * 5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H
           * wQW6M0H7Zt8claGRla4fKkg= -----END CERTIFICATE-----
           */
          @com.google.api.client.util.Key("clientCertificate.sslCertificate")
          private java.lang.String clientCertificateSslCertificate;

          /** The ssl certificate encoded in PEM format. This string must include the begin header and end footer
         lines. For example, -----BEGIN CERTIFICATE-----
         MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV
         BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw
         MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET
         MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA
         vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1
         JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB
         xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P
         AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB
         Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey
         Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW
         JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr
         5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H wQW6M0H7Zt8claGRla4fKkg= -----END
         CERTIFICATE-----
           */
          public java.lang.String getClientCertificateSslCertificate() {
            return clientCertificateSslCertificate;
          }

          /**
           * The ssl certificate encoded in PEM format. This string must include the begin header
           * and end footer lines. For example, -----BEGIN CERTIFICATE-----
           * MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV
           * BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw
           * MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET
           * MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA
           * vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1
           * JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB
           * xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P
           * AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB
           * Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey
           * Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW
           * JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr
           * 5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H
           * wQW6M0H7Zt8claGRla4fKkg= -----END CERTIFICATE-----
           */
          public Create setClientCertificateSslCertificate(java.lang.String clientCertificateSslCertificate) {
            this.clientCertificateSslCertificate = clientCertificateSslCertificate;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes an auth config.
         *
         * Create a request for the method "authConfigs.delete".
         *
         * This request holds the parameters needed by the integrations server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name that is associated with the AuthConfig.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v1alpha/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/authConfigs/[^/]+$");

          /**
           * Deletes an auth config.
           *
           * Create a request for the method "authConfigs.delete".
           *
           * This request holds the parameters needed by the the integrations server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name that is associated with the AuthConfig.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Integrations.this, "DELETE", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/authConfigs/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The name that is associated with the AuthConfig. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name that is associated with the AuthConfig.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The name that is associated with the AuthConfig. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/authConfigs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a complete auth config. If the auth config doesn't exist, Code.NOT_FOUND exception will be
         * thrown. Returns the decrypted auth config.
         *
         * Create a request for the method "authConfigs.get".
         *
         * This request holds the parameters needed by the integrations server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name that is associated with the AuthConfig.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaAuthConfig> {

          private static final String REST_PATH = "v1alpha/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/authConfigs/[^/]+$");

          /**
           * Gets a complete auth config. If the auth config doesn't exist, Code.NOT_FOUND exception will be
           * thrown. Returns the decrypted auth config.
           *
           * Create a request for the method "authConfigs.get".
           *
           * This request holds the parameters needed by the the integrations server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name that is associated with the AuthConfig.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Integrations.this, "GET", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaAuthConfig.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/authConfigs/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The name that is associated with the AuthConfig. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name that is associated with the AuthConfig.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The name that is associated with the AuthConfig. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/authConfigs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists all auth configs that match the filter. Restrict to auth configs belong to the current
         * client only.
         *
         * Create a request for the method "authConfigs.list".
         *
         * This request holds the parameters needed by the integrations server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The client, which owns this collection of AuthConfigs.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaListAuthConfigsResponse> {

          private static final String REST_PATH = "v1alpha/{+parent}/authConfigs";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists all auth configs that match the filter. Restrict to auth configs belong to the current
           * client only.
           *
           * Create a request for the method "authConfigs.list".
           *
           * This request holds the parameters needed by the the integrations server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The client, which owns this collection of AuthConfigs.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Integrations.this, "GET", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaListAuthConfigsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The client, which owns this collection of AuthConfigs. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The client, which owns this collection of AuthConfigs.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The client, which owns this collection of AuthConfigs. */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Filtering as supported in https://developers.google.com/authorized-
           * buyers/apis/guides/v2/list-filters.
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Filtering as supported in https://developers.google.com/authorized-buyers/apis/guides/v2/list-
         filters.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * Filtering as supported in https://developers.google.com/authorized-
           * buyers/apis/guides/v2/list-filters.
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** The size of entries in the response. If unspecified, defaults to 100. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The size of entries in the response. If unspecified, defaults to 100.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The size of entries in the response. If unspecified, defaults to 100. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The token returned in the previous response. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The token returned in the previous response.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The token returned in the previous response. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          /**
           * The mask which specifies fields that need to be returned in the AuthConfig's response.
           */
          @com.google.api.client.util.Key
          private String readMask;

          /** The mask which specifies fields that need to be returned in the AuthConfig's response.
           */
          public String getReadMask() {
            return readMask;
          }

          /**
           * The mask which specifies fields that need to be returned in the AuthConfig's response.
           */
          public List setReadMask(String readMask) {
            this.readMask = readMask;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates an auth config. If credential is updated, fetch the encrypted auth config from Spanner,
         * decrypt with Cloud KMS key, update the credential fields, re-encrypt with Cloud KMS key and
         * update the Spanner record. For other fields, directly update the Spanner record. Returns the
         * encrypted auth config.
         *
         * Create a request for the method "authConfigs.patch".
         *
         * This request holds the parameters needed by the integrations server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Resource name of the SFDC instance projects/{project}/locations/{location}/authConfigs/{authConfig}.
         * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaAuthConfig}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaAuthConfig content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaAuthConfig> {

          private static final String REST_PATH = "v1alpha/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/authConfigs/[^/]+$");

          /**
           * Updates an auth config. If credential is updated, fetch the encrypted auth config from Spanner,
           * decrypt with Cloud KMS key, update the credential fields, re-encrypt with Cloud KMS key and
           * update the Spanner record. For other fields, directly update the Spanner record. Returns the
           * encrypted auth config.
           *
           * Create a request for the method "authConfigs.patch".
           *
           * This request holds the parameters needed by the the integrations server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Resource name of the SFDC instance projects/{project}/locations/{location}/authConfigs/{authConfig}.
           * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaAuthConfig}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaAuthConfig content) {
            super(Integrations.this, "PATCH", REST_PATH, content, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaAuthConfig.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/authConfigs/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Resource name of the SFDC instance
           * projects/{project}/locations/{location}/authConfigs/{authConfig}.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Resource name of the SFDC instance
         projects/{project}/locations/{location}/authConfigs/{authConfig}.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Resource name of the SFDC instance
           * projects/{project}/locations/{location}/authConfigs/{authConfig}.
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/authConfigs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * The ssl certificate encoded in PEM format. This string must include the begin header
           * and end footer lines. For example, -----BEGIN CERTIFICATE-----
           * MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV
           * BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw
           * MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET
           * MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA
           * vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1
           * JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB
           * xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P
           * AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB
           * Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey
           * Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW
           * JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr
           * 5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H
           * wQW6M0H7Zt8claGRla4fKkg= -----END CERTIFICATE-----
           */
          @com.google.api.client.util.Key("clientCertificate.encryptedPrivateKey")
          private java.lang.String clientCertificateEncryptedPrivateKey;

          /** The ssl certificate encoded in PEM format. This string must include the begin header and end footer
         lines. For example, -----BEGIN CERTIFICATE-----
         MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV
         BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw
         MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET
         MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA
         vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1
         JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB
         xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P
         AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB
         Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey
         Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW
         JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr
         5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H wQW6M0H7Zt8claGRla4fKkg= -----END
         CERTIFICATE-----
           */
          public java.lang.String getClientCertificateEncryptedPrivateKey() {
            return clientCertificateEncryptedPrivateKey;
          }

          /**
           * The ssl certificate encoded in PEM format. This string must include the begin header
           * and end footer lines. For example, -----BEGIN CERTIFICATE-----
           * MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV
           * BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw
           * MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET
           * MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA
           * vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1
           * JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB
           * xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P
           * AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB
           * Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey
           * Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW
           * JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr
           * 5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H
           * wQW6M0H7Zt8claGRla4fKkg= -----END CERTIFICATE-----
           */
          public Patch setClientCertificateEncryptedPrivateKey(java.lang.String clientCertificateEncryptedPrivateKey) {
            this.clientCertificateEncryptedPrivateKey = clientCertificateEncryptedPrivateKey;
            return this;
          }

          /**
           * 'passphrase' should be left unset if private key is not encrypted. Note that
           * 'passphrase' is not the password for web server, but an extra layer of security to
           * protected private key.
           */
          @com.google.api.client.util.Key("clientCertificate.passphrase")
          private java.lang.String clientCertificatePassphrase;

          /**' passphrase' should be left unset if private key is not encrypted. Note that 'passphrase' is not
        ' the password for web server, but an extra layer of security to protected private key.
        '

           */
          public java.lang.String getClientCertificatePassphrase() {
            return clientCertificatePassphrase;
          }

          /**
           * 'passphrase' should be left unset if private key is not encrypted. Note that
           * 'passphrase' is not the password for web server, but an extra layer of security to
           * protected private key.
           */
          public Patch setClientCertificatePassphrase(java.lang.String clientCertificatePassphrase) {
            this.clientCertificatePassphrase = clientCertificatePassphrase;
            return this;
          }

          /**
           * The ssl certificate encoded in PEM format. This string must include the begin header
           * and end footer lines. For example, -----BEGIN CERTIFICATE-----
           * MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV
           * BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw
           * MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET
           * MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA
           * vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1
           * JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB
           * xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P
           * AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB
           * Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey
           * Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW
           * JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr
           * 5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H
           * wQW6M0H7Zt8claGRla4fKkg= -----END CERTIFICATE-----
           */
          @com.google.api.client.util.Key("clientCertificate.sslCertificate")
          private java.lang.String clientCertificateSslCertificate;

          /** The ssl certificate encoded in PEM format. This string must include the begin header and end footer
         lines. For example, -----BEGIN CERTIFICATE-----
         MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV
         BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw
         MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET
         MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA
         vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1
         JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB
         xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P
         AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB
         Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey
         Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW
         JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr
         5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H wQW6M0H7Zt8claGRla4fKkg= -----END
         CERTIFICATE-----
           */
          public java.lang.String getClientCertificateSslCertificate() {
            return clientCertificateSslCertificate;
          }

          /**
           * The ssl certificate encoded in PEM format. This string must include the begin header
           * and end footer lines. For example, -----BEGIN CERTIFICATE-----
           * MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV
           * BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw
           * MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET
           * MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA
           * vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1
           * JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB
           * xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P
           * AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB
           * Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey
           * Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW
           * JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr
           * 5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H
           * wQW6M0H7Zt8claGRla4fKkg= -----END CERTIFICATE-----
           */
          public Patch setClientCertificateSslCertificate(java.lang.String clientCertificateSslCertificate) {
            this.clientCertificateSslCertificate = clientCertificateSslCertificate;
            return this;
          }

          /**
           * Field mask specifying the fields in the above AuthConfig that have been modified and
           * need to be updated.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Field mask specifying the fields in the above AuthConfig that have been modified and need to be
         updated.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Field mask specifying the fields in the above AuthConfig that have been modified and
           * need to be updated.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Certificates collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Integrations integrations = new Integrations(...);}
       *   {@code Integrations.Certificates.List request = integrations.certificates().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Certificates certificates() {
        return new Certificates();
      }

      /**
       * The "certificates" collection of methods.
       */
      public class Certificates {

        /**
         * Get a certificates in the specified project.
         *
         * Create a request for the method "certificates.get".
         *
         * This request holds the parameters needed by the integrations server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The certificate to retrieve. Format:
         *        projects/{project}/locations/{location}/certificates/{certificate}
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaCertificate> {

          private static final String REST_PATH = "v1alpha/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/certificates/[^/]+$");

          /**
           * Get a certificates in the specified project.
           *
           * Create a request for the method "certificates.get".
           *
           * This request holds the parameters needed by the the integrations server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The certificate to retrieve. Format:
         *        projects/{project}/locations/{location}/certificates/{certificate}
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Integrations.this, "GET", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaCertificate.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/certificates/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The certificate to retrieve. Format:
           * projects/{project}/locations/{location}/certificates/{certificate}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The certificate to retrieve. Format:
         projects/{project}/locations/{location}/certificates/{certificate}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The certificate to retrieve. Format:
           * projects/{project}/locations/{location}/certificates/{certificate}
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/certificates/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Connections collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Integrations integrations = new Integrations(...);}
       *   {@code Integrations.Connections.List request = integrations.connections().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Connections connections() {
        return new Connections();
      }

      /**
       * The "connections" collection of methods.
       */
      public class Connections {

        /**
         * Lists the available entities and actions associated with a Connection.
         *
         * Create a request for the method "connections.getConnectionSchemaMetadata".
         *
         * This request holds the parameters needed by the integrations server.  After setting any optional
         * parameters, call the {@link GetConnectionSchemaMetadata#execute()} method to invoke the remote
         * operation.
         *
         * @param name Required. ConnectionSchemaMetadata name. Format:
         *        projects/{project}/locations/{location}/connections/{connection}/connectionSchemaMetadata
         * @return the request
         */
        public GetConnectionSchemaMetadata getConnectionSchemaMetadata(java.lang.String name) throws java.io.IOException {
          GetConnectionSchemaMetadata result = new GetConnectionSchemaMetadata(name);
          initialize(result);
          return result;
        }

        public class GetConnectionSchemaMetadata extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaConnectionSchemaMetadata> {

          private static final String REST_PATH = "v1alpha/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/connections/[^/]+/connectionSchemaMetadata$");

          /**
           * Lists the available entities and actions associated with a Connection.
           *
           * Create a request for the method "connections.getConnectionSchemaMetadata".
           *
           * This request holds the parameters needed by the the integrations server.  After setting any
           * optional parameters, call the {@link GetConnectionSchemaMetadata#execute()} method to invoke
           * the remote operation. <p> {@link GetConnectionSchemaMetadata#initialize(com.google.api.client.g
           * oogleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
           * immediately after invoking the constructor. </p>
           *
           * @param name Required. ConnectionSchemaMetadata name. Format:
         *        projects/{project}/locations/{location}/connections/{connection}/connectionSchemaMetadata
           * @since 1.13
           */
          protected GetConnectionSchemaMetadata(java.lang.String name) {
            super(Integrations.this, "GET", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaConnectionSchemaMetadata.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/connections/[^/]+/connectionSchemaMetadata$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetConnectionSchemaMetadata set$Xgafv(java.lang.String $Xgafv) {
            return (GetConnectionSchemaMetadata) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetConnectionSchemaMetadata setAccessToken(java.lang.String accessToken) {
            return (GetConnectionSchemaMetadata) super.setAccessToken(accessToken);
          }

          @Override
          public GetConnectionSchemaMetadata setAlt(java.lang.String alt) {
            return (GetConnectionSchemaMetadata) super.setAlt(alt);
          }

          @Override
          public GetConnectionSchemaMetadata setCallback(java.lang.String callback) {
            return (GetConnectionSchemaMetadata) super.setCallback(callback);
          }

          @Override
          public GetConnectionSchemaMetadata setFields(java.lang.String fields) {
            return (GetConnectionSchemaMetadata) super.setFields(fields);
          }

          @Override
          public GetConnectionSchemaMetadata setKey(java.lang.String key) {
            return (GetConnectionSchemaMetadata) super.setKey(key);
          }

          @Override
          public GetConnectionSchemaMetadata setOauthToken(java.lang.String oauthToken) {
            return (GetConnectionSchemaMetadata) super.setOauthToken(oauthToken);
          }

          @Override
          public GetConnectionSchemaMetadata setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetConnectionSchemaMetadata) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetConnectionSchemaMetadata setQuotaUser(java.lang.String quotaUser) {
            return (GetConnectionSchemaMetadata) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetConnectionSchemaMetadata setUploadType(java.lang.String uploadType) {
            return (GetConnectionSchemaMetadata) super.setUploadType(uploadType);
          }

          @Override
          public GetConnectionSchemaMetadata setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetConnectionSchemaMetadata) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. ConnectionSchemaMetadata name. Format: projects/{project}/locations/{location
           * }/connections/{connection}/connectionSchemaMetadata
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. ConnectionSchemaMetadata name. Format:
         projects/{project}/locations/{location}/connections/{connection}/connectionSchemaMetadata
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. ConnectionSchemaMetadata name. Format: projects/{project}/locations/{location
           * }/connections/{connection}/connectionSchemaMetadata
           */
          public GetConnectionSchemaMetadata setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/connections/[^/]+/connectionSchemaMetadata$");
            }
            this.name = name;
            return this;
          }

          @Override
          public GetConnectionSchemaMetadata set(String parameterName, Object value) {
            return (GetConnectionSchemaMetadata) super.set(parameterName, value);
          }
        }
        /**
         * Lists Connections in a given project and location.
         *
         * Create a request for the method "connections.list".
         *
         * This request holds the parameters needed by the integrations server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Parent resource of the Connection, of the form: `projects/locations`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaListConnectionsResponse> {

          private static final String REST_PATH = "v1alpha/{+parent}/connections";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists Connections in a given project and location.
           *
           * Create a request for the method "connections.list".
           *
           * This request holds the parameters needed by the the integrations server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Parent resource of the Connection, of the form: `projects/locations`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Integrations.this, "GET", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaListConnectionsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Parent resource of the Connection, of the form: `projects/locations` */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Parent resource of the Connection, of the form: `projects/locations`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. Parent resource of the Connection, of the form: `projects/locations` */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Filter. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Filter.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** Filter. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** Order by parameters. */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Order by parameters.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /** Order by parameters. */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /** Page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** Page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** Page token. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** Page token. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the RuntimeActionSchemas collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Integrations integrations = new Integrations(...);}
         *   {@code Integrations.RuntimeActionSchemas.List request = integrations.runtimeActionSchemas().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public RuntimeActionSchemas runtimeActionSchemas() {
          return new RuntimeActionSchemas();
        }

        /**
         * The "runtimeActionSchemas" collection of methods.
         */
        public class RuntimeActionSchemas {

          /**
           * Lists the JSON schemas for the inputs and outputs of actions, filtered by action name.
           *
           * Create a request for the method "runtimeActionSchemas.list".
           *
           * This request holds the parameters needed by the integrations server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Parent resource of RuntimeActionSchema. Format:
           *        projects/{project}/locations/{location}/connections/{connection}
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaListRuntimeActionSchemasResponse> {

            private static final String REST_PATH = "v1alpha/{+parent}/runtimeActionSchemas";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/connections/[^/]+$");

            /**
             * Lists the JSON schemas for the inputs and outputs of actions, filtered by action name.
             *
             * Create a request for the method "runtimeActionSchemas.list".
             *
             * This request holds the parameters needed by the the integrations server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Parent resource of RuntimeActionSchema. Format:
           *        projects/{project}/locations/{location}/connections/{connection}
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Integrations.this, "GET", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaListRuntimeActionSchemasResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/connections/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Parent resource of RuntimeActionSchema. Format:
             * projects/{project}/locations/{location}/connections/{connection}
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent resource of RuntimeActionSchema. Format:
           projects/{project}/locations/{location}/connections/{connection}
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Parent resource of RuntimeActionSchema. Format:
             * projects/{project}/locations/{location}/connections/{connection}
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/connections/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /** Filter. Only the action field with literal equality operator is supported. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Filter. Only the action field with literal equality operator is supported.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** Filter. Only the action field with literal equality operator is supported. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** Page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** Page size. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** Page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** Page token. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the RuntimeEntitySchemas collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Integrations integrations = new Integrations(...);}
         *   {@code Integrations.RuntimeEntitySchemas.List request = integrations.runtimeEntitySchemas().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public RuntimeEntitySchemas runtimeEntitySchemas() {
          return new RuntimeEntitySchemas();
        }

        /**
         * The "runtimeEntitySchemas" collection of methods.
         */
        public class RuntimeEntitySchemas {

          /**
           * Lists the JSON schemas for the properties of runtime entities, filtered by entity name.
           *
           * Create a request for the method "runtimeEntitySchemas.list".
           *
           * This request holds the parameters needed by the integrations server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Parent resource of RuntimeEntitySchema. Format:
           *        projects/{project}/locations/{location}/connections/{connection}
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaListRuntimeEntitySchemasResponse> {

            private static final String REST_PATH = "v1alpha/{+parent}/runtimeEntitySchemas";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/connections/[^/]+$");

            /**
             * Lists the JSON schemas for the properties of runtime entities, filtered by entity name.
             *
             * Create a request for the method "runtimeEntitySchemas.list".
             *
             * This request holds the parameters needed by the the integrations server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Parent resource of RuntimeEntitySchema. Format:
           *        projects/{project}/locations/{location}/connections/{connection}
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Integrations.this, "GET", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaListRuntimeEntitySchemasResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/connections/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Parent resource of RuntimeEntitySchema. Format:
             * projects/{project}/locations/{location}/connections/{connection}
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent resource of RuntimeEntitySchema. Format:
           projects/{project}/locations/{location}/connections/{connection}
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Parent resource of RuntimeEntitySchema. Format:
             * projects/{project}/locations/{location}/connections/{connection}
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/connections/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /** Filter. Only the entity field with literal equality operator is supported. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Filter. Only the entity field with literal equality operator is supported.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** Filter. Only the entity field with literal equality operator is supported. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** Page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** Page size. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** Page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** Page token. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the IntegrationsOperations collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Integrations integrations = new Integrations(...);}
       *   {@code Integrations.IntegrationsOperations.List request = integrations.integrations().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public IntegrationsOperations integrations() {
        return new IntegrationsOperations();
      }

      /**
       * The "integrations" collection of methods.
       */
      public class IntegrationsOperations {

        /**
         * Executes integrations synchronously by passing the trigger id in the request body. The request is
         * not returned until the requested executions are either fulfilled or experienced an error. If the
         * integration name is not specified (passing `-`), all of the associated integration under the
         * given trigger_id will be executed. Otherwise only the specified integration for the given
         * `trigger_id` is executed. This is helpful for execution the integration from UI.
         *
         * Create a request for the method "integrations.execute".
         *
         * This request holds the parameters needed by the integrations server.  After setting any optional
         * parameters, call the {@link Execute#execute()} method to invoke the remote operation.
         *
         * @param name Required. The integration resource name.
         * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaExecuteIntegrationsRequest}
         * @return the request
         */
        public Execute execute(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaExecuteIntegrationsRequest content) throws java.io.IOException {
          Execute result = new Execute(name, content);
          initialize(result);
          return result;
        }

        public class Execute extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaExecuteIntegrationsResponse> {

          private static final String REST_PATH = "v1alpha/{+name}:execute";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/integrations/[^/]+$");

          /**
           * Executes integrations synchronously by passing the trigger id in the request body. The request
           * is not returned until the requested executions are either fulfilled or experienced an error. If
           * the integration name is not specified (passing `-`), all of the associated integration under
           * the given trigger_id will be executed. Otherwise only the specified integration for the given
           * `trigger_id` is executed. This is helpful for execution the integration from UI.
           *
           * Create a request for the method "integrations.execute".
           *
           * This request holds the parameters needed by the the integrations server.  After setting any
           * optional parameters, call the {@link Execute#execute()} method to invoke the remote operation.
           * <p> {@link
           * Execute#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The integration resource name.
           * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaExecuteIntegrationsRequest}
           * @since 1.13
           */
          protected Execute(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaExecuteIntegrationsRequest content) {
            super(Integrations.this, "POST", REST_PATH, content, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaExecuteIntegrationsResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/integrations/[^/]+$");
            }
          }

          @Override
          public Execute set$Xgafv(java.lang.String $Xgafv) {
            return (Execute) super.set$Xgafv($Xgafv);
          }

          @Override
          public Execute setAccessToken(java.lang.String accessToken) {
            return (Execute) super.setAccessToken(accessToken);
          }

          @Override
          public Execute setAlt(java.lang.String alt) {
            return (Execute) super.setAlt(alt);
          }

          @Override
          public Execute setCallback(java.lang.String callback) {
            return (Execute) super.setCallback(callback);
          }

          @Override
          public Execute setFields(java.lang.String fields) {
            return (Execute) super.setFields(fields);
          }

          @Override
          public Execute setKey(java.lang.String key) {
            return (Execute) super.setKey(key);
          }

          @Override
          public Execute setOauthToken(java.lang.String oauthToken) {
            return (Execute) super.setOauthToken(oauthToken);
          }

          @Override
          public Execute setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Execute) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Execute setQuotaUser(java.lang.String quotaUser) {
            return (Execute) super.setQuotaUser(quotaUser);
          }

          @Override
          public Execute setUploadType(java.lang.String uploadType) {
            return (Execute) super.setUploadType(uploadType);
          }

          @Override
          public Execute setUploadProtocol(java.lang.String uploadProtocol) {
            return (Execute) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The integration resource name. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The integration resource name.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The integration resource name. */
          public Execute setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/integrations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Execute set(String parameterName, Object value) {
            return (Execute) super.set(parameterName, value);
          }
        }
        /**
         * Returns the list of all integrations in the specified project.
         *
         * Create a request for the method "integrations.list".
         *
         * This request holds the parameters needed by the integrations server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Project and location from which the integrations should be listed. Format:
         *        projects/{project}
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaListIntegrationsResponse> {

          private static final String REST_PATH = "v1alpha/{+parent}/integrations";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Returns the list of all integrations in the specified project.
           *
           * Create a request for the method "integrations.list".
           *
           * This request holds the parameters needed by the the integrations server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Project and location from which the integrations should be listed. Format:
         *        projects/{project}
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Integrations.this, "GET", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaListIntegrationsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Project and location from which the integrations should be listed. Format:
           * projects/{project}
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Project and location from which the integrations should be listed. Format:
         projects/{project}
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Project and location from which the integrations should be listed. Format:
           * projects/{project}
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Filter on fields of IntegrationVersion. Fields can be compared with literal values by
           * use of ":" (containment), "=" (equality), ">" (greater), "<" (less than), >=" (greater
           * than or equal to), "<=" (less than or equal to), and "!=" (inequality) operators.
           * Negation, conjunction, and disjunction are written using NOT, AND, and OR keywords. For
           * example, organization_id=\"1\" AND state=ACTIVE AND description:"test". Filtering
           * cannot be performed on repeated fields like `task_config`.
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Filter on fields of IntegrationVersion. Fields can be compared with literal values by use of ":"
         (containment), "=" (equality), ">" (greater), "<" (less than), >=" (greater than or equal to), "<="
         (less than or equal to), and "!=" (inequality) operators. Negation, conjunction, and disjunction
         are written using NOT, AND, and OR keywords. For example, organization_id=\"1\" AND state=ACTIVE
         AND description:"test". Filtering cannot be performed on repeated fields like `task_config`.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * Filter on fields of IntegrationVersion. Fields can be compared with literal values by
           * use of ":" (containment), "=" (equality), ">" (greater), "<" (less than), >=" (greater
           * than or equal to), "<=" (less than or equal to), and "!=" (inequality) operators.
           * Negation, conjunction, and disjunction are written using NOT, AND, and OR keywords. For
           * example, organization_id=\"1\" AND state=ACTIVE AND description:"test". Filtering
           * cannot be performed on repeated fields like `task_config`.
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * The results would be returned in order you specified here. Supported sort keys are:
           * Descending sort order by "last_modified_time", "created_time", "snapshot_number".
           * Ascending sort order by the integration name.
           */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** The results would be returned in order you specified here. Supported sort keys are: Descending sort
         order by "last_modified_time", "created_time", "snapshot_number". Ascending sort order by the
         integration name.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /**
           * The results would be returned in order you specified here. Supported sort keys are:
           * Descending sort order by "last_modified_time", "created_time", "snapshot_number".
           * Ascending sort order by the integration name.
           */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /** The page size for the resquest. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The page size for the resquest.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The page size for the resquest. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The page token for the resquest. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The page token for the resquest.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The page token for the resquest. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Schedules an integration for execution by passing the trigger id and the scheduled time in the
         * request body.
         *
         * Create a request for the method "integrations.schedule".
         *
         * This request holds the parameters needed by the integrations server.  After setting any optional
         * parameters, call the {@link Schedule#execute()} method to invoke the remote operation.
         *
         * @param name The integration resource name.
         * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaScheduleIntegrationsRequest}
         * @return the request
         */
        public Schedule schedule(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaScheduleIntegrationsRequest content) throws java.io.IOException {
          Schedule result = new Schedule(name, content);
          initialize(result);
          return result;
        }

        public class Schedule extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaScheduleIntegrationsResponse> {

          private static final String REST_PATH = "v1alpha/{+name}:schedule";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/integrations/[^/]+$");

          /**
           * Schedules an integration for execution by passing the trigger id and the scheduled time in the
           * request body.
           *
           * Create a request for the method "integrations.schedule".
           *
           * This request holds the parameters needed by the the integrations server.  After setting any
           * optional parameters, call the {@link Schedule#execute()} method to invoke the remote operation.
           * <p> {@link
           * Schedule#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The integration resource name.
           * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaScheduleIntegrationsRequest}
           * @since 1.13
           */
          protected Schedule(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaScheduleIntegrationsRequest content) {
            super(Integrations.this, "POST", REST_PATH, content, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaScheduleIntegrationsResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/integrations/[^/]+$");
            }
          }

          @Override
          public Schedule set$Xgafv(java.lang.String $Xgafv) {
            return (Schedule) super.set$Xgafv($Xgafv);
          }

          @Override
          public Schedule setAccessToken(java.lang.String accessToken) {
            return (Schedule) super.setAccessToken(accessToken);
          }

          @Override
          public Schedule setAlt(java.lang.String alt) {
            return (Schedule) super.setAlt(alt);
          }

          @Override
          public Schedule setCallback(java.lang.String callback) {
            return (Schedule) super.setCallback(callback);
          }

          @Override
          public Schedule setFields(java.lang.String fields) {
            return (Schedule) super.setFields(fields);
          }

          @Override
          public Schedule setKey(java.lang.String key) {
            return (Schedule) super.setKey(key);
          }

          @Override
          public Schedule setOauthToken(java.lang.String oauthToken) {
            return (Schedule) super.setOauthToken(oauthToken);
          }

          @Override
          public Schedule setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Schedule) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Schedule setQuotaUser(java.lang.String quotaUser) {
            return (Schedule) super.setQuotaUser(quotaUser);
          }

          @Override
          public Schedule setUploadType(java.lang.String uploadType) {
            return (Schedule) super.setUploadType(uploadType);
          }

          @Override
          public Schedule setUploadProtocol(java.lang.String uploadProtocol) {
            return (Schedule) super.setUploadProtocol(uploadProtocol);
          }

          /** The integration resource name. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The integration resource name.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The integration resource name. */
          public Schedule setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/integrations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Schedule set(String parameterName, Object value) {
            return (Schedule) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Executions collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Integrations integrations = new Integrations(...);}
         *   {@code Integrations.Executions.List request = integrations.executions().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Executions executions() {
          return new Executions();
        }

        /**
         * The "executions" collection of methods.
         */
        public class Executions {

          /**
           * Lists the results of all the integration executions. The response includes the same information
           * as the [execution log](https://cloud.google.com/application-integration/docs/viewing-logs) in the
           * Integration UI.
           *
           * Create a request for the method "executions.list".
           *
           * This request holds the parameters needed by the integrations server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The parent resource name of the integration execution.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaListExecutionsResponse> {

            private static final String REST_PATH = "v1alpha/{+parent}/executions";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/integrations/[^/]+$");

            /**
             * Lists the results of all the integration executions. The response includes the same information
             * as the [execution log](https://cloud.google.com/application-integration/docs/viewing-logs) in
             * the Integration UI.
             *
             * Create a request for the method "executions.list".
             *
             * This request holds the parameters needed by the the integrations server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The parent resource name of the integration execution.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Integrations.this, "GET", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaListExecutionsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/integrations/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The parent resource name of the integration execution. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The parent resource name of the integration execution.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. The parent resource name of the integration execution. */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/integrations/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Optional. Standard filter field, we support filtering on all fields in
             * EventExecutionParamIndexes table. All fields support for EQUALS, in additional:
             * CreateTimestamp support for LESS_THAN, GREATER_THAN ParameterKey, ParameterValue,
             * ParameterType support for HAS For example: "parameter_value" HAS \"parameter1\" Also
             * supports operators like AND, OR, NOT For example, trigger_id=\"id1\" AND
             * event_execution_state=\"FAILED\"
             */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Optional. Standard filter field, we support filtering on all fields in EventExecutionParamIndexes
           table. All fields support for EQUALS, in additional: CreateTimestamp support for LESS_THAN,
           GREATER_THAN ParameterKey, ParameterValue, ParameterType support for HAS For example:
           "parameter_value" HAS \"parameter1\" Also supports operators like AND, OR, NOT For example,
           trigger_id=\"id1\" AND event_execution_state=\"FAILED\"
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /**
             * Optional. Standard filter field, we support filtering on all fields in
             * EventExecutionParamIndexes table. All fields support for EQUALS, in additional:
             * CreateTimestamp support for LESS_THAN, GREATER_THAN ParameterKey, ParameterValue,
             * ParameterType support for HAS For example: "parameter_value" HAS \"parameter1\" Also
             * supports operators like AND, OR, NOT For example, trigger_id=\"id1\" AND
             * event_execution_state=\"FAILED\"
             */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** Optional user-provided custom filter. */
            @com.google.api.client.util.Key("filterParams.customFilter")
            private java.lang.String filterParamsCustomFilter;

            /** Optional user-provided custom filter.
             */
            public java.lang.String getFilterParamsCustomFilter() {
              return filterParamsCustomFilter;
            }

            /** Optional user-provided custom filter. */
            public List setFilterParamsCustomFilter(java.lang.String filterParamsCustomFilter) {
              this.filterParamsCustomFilter = filterParamsCustomFilter;
              return this;
            }

            /** End timestamp. */
            @com.google.api.client.util.Key("filterParams.endTime")
            private java.lang.Long filterParamsEndTime;

            /** End timestamp.
             */
            public java.lang.Long getFilterParamsEndTime() {
              return filterParamsEndTime;
            }

            /** End timestamp. */
            public List setFilterParamsEndTime(java.lang.Long filterParamsEndTime) {
              this.filterParamsEndTime = filterParamsEndTime;
              return this;
            }

            /** List of possible event statuses. */
            @com.google.api.client.util.Key("filterParams.eventStatuses")
            private java.util.List<java.lang.String> filterParamsEventStatuses;

            /** List of possible event statuses.
             */
            public java.util.List<java.lang.String> getFilterParamsEventStatuses() {
              return filterParamsEventStatuses;
            }

            /** List of possible event statuses. */
            public List setFilterParamsEventStatuses(java.util.List<java.lang.String> filterParamsEventStatuses) {
              this.filterParamsEventStatuses = filterParamsEventStatuses;
              return this;
            }

            /** Execution id. */
            @com.google.api.client.util.Key("filterParams.executionId")
            private java.lang.String filterParamsExecutionId;

            /** Execution id.
             */
            public java.lang.String getFilterParamsExecutionId() {
              return filterParamsExecutionId;
            }

            /** Execution id. */
            public List setFilterParamsExecutionId(java.lang.String filterParamsExecutionId) {
              this.filterParamsExecutionId = filterParamsExecutionId;
              return this;
            }

            /** Param key. DEPRECATED. User parameter_pair_key instead. */
            @com.google.api.client.util.Key("filterParams.parameterKey")
            private java.lang.String filterParamsParameterKey;

            /** Param key. DEPRECATED. User parameter_pair_key instead.
             */
            public java.lang.String getFilterParamsParameterKey() {
              return filterParamsParameterKey;
            }

            /** Param key. DEPRECATED. User parameter_pair_key instead. */
            public List setFilterParamsParameterKey(java.lang.String filterParamsParameterKey) {
              this.filterParamsParameterKey = filterParamsParameterKey;
              return this;
            }

            /** Param key in the key value pair filter. */
            @com.google.api.client.util.Key("filterParams.parameterPairKey")
            private java.lang.String filterParamsParameterPairKey;

            /** Param key in the key value pair filter.
             */
            public java.lang.String getFilterParamsParameterPairKey() {
              return filterParamsParameterPairKey;
            }

            /** Param key in the key value pair filter. */
            public List setFilterParamsParameterPairKey(java.lang.String filterParamsParameterPairKey) {
              this.filterParamsParameterPairKey = filterParamsParameterPairKey;
              return this;
            }

            /** Param value in the key value pair filter. */
            @com.google.api.client.util.Key("filterParams.parameterPairValue")
            private java.lang.String filterParamsParameterPairValue;

            /** Param value in the key value pair filter.
             */
            public java.lang.String getFilterParamsParameterPairValue() {
              return filterParamsParameterPairValue;
            }

            /** Param value in the key value pair filter. */
            public List setFilterParamsParameterPairValue(java.lang.String filterParamsParameterPairValue) {
              this.filterParamsParameterPairValue = filterParamsParameterPairValue;
              return this;
            }

            /** Param type. */
            @com.google.api.client.util.Key("filterParams.parameterType")
            private java.lang.String filterParamsParameterType;

            /** Param type.
             */
            public java.lang.String getFilterParamsParameterType() {
              return filterParamsParameterType;
            }

            /** Param type. */
            public List setFilterParamsParameterType(java.lang.String filterParamsParameterType) {
              this.filterParamsParameterType = filterParamsParameterType;
              return this;
            }

            /** Param value. DEPRECATED. User parameter_pair_value instead. */
            @com.google.api.client.util.Key("filterParams.parameterValue")
            private java.lang.String filterParamsParameterValue;

            /** Param value. DEPRECATED. User parameter_pair_value instead.
             */
            public java.lang.String getFilterParamsParameterValue() {
              return filterParamsParameterValue;
            }

            /** Param value. DEPRECATED. User parameter_pair_value instead. */
            public List setFilterParamsParameterValue(java.lang.String filterParamsParameterValue) {
              this.filterParamsParameterValue = filterParamsParameterValue;
              return this;
            }

            /** Start timestamp. */
            @com.google.api.client.util.Key("filterParams.startTime")
            private java.lang.Long filterParamsStartTime;

            /** Start timestamp.
             */
            public java.lang.Long getFilterParamsStartTime() {
              return filterParamsStartTime;
            }

            /** Start timestamp. */
            public List setFilterParamsStartTime(java.lang.Long filterParamsStartTime) {
              this.filterParamsStartTime = filterParamsStartTime;
              return this;
            }

            /** List of possible task statuses. */
            @com.google.api.client.util.Key("filterParams.taskStatuses")
            private java.util.List<java.lang.String> filterParamsTaskStatuses;

            /** List of possible task statuses.
             */
            public java.util.List<java.lang.String> getFilterParamsTaskStatuses() {
              return filterParamsTaskStatuses;
            }

            /** List of possible task statuses. */
            public List setFilterParamsTaskStatuses(java.util.List<java.lang.String> filterParamsTaskStatuses) {
              this.filterParamsTaskStatuses = filterParamsTaskStatuses;
              return this;
            }

            /** Workflow name. */
            @com.google.api.client.util.Key("filterParams.workflowName")
            private java.lang.String filterParamsWorkflowName;

            /** Workflow name.
             */
            public java.lang.String getFilterParamsWorkflowName() {
              return filterParamsWorkflowName;
            }

            /** Workflow name. */
            public List setFilterParamsWorkflowName(java.lang.String filterParamsWorkflowName) {
              this.filterParamsWorkflowName = filterParamsWorkflowName;
              return this;
            }

            /**
             * Optional. The results would be returned in order you specified here. Currently
             * supporting "last_modified_time" and "create_time".
             */
            @com.google.api.client.util.Key
            private java.lang.String orderBy;

            /** Optional. The results would be returned in order you specified here. Currently supporting
           "last_modified_time" and "create_time".
             */
            public java.lang.String getOrderBy() {
              return orderBy;
            }

            /**
             * Optional. The results would be returned in order you specified here. Currently
             * supporting "last_modified_time" and "create_time".
             */
            public List setOrderBy(java.lang.String orderBy) {
              this.orderBy = orderBy;
              return this;
            }

            /** Optional. The size of entries in the response. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. The size of entries in the response.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** Optional. The size of entries in the response. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** Optional. The token returned in the previous response. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. The token returned in the previous response.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** Optional. The token returned in the previous response. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            /**
             * Optional. View mask for the response data. If set, only the field specified will be
             * returned as part of the result. If not set, all fields in event execution info will
             * be filled and returned.
             */
            @com.google.api.client.util.Key
            private String readMask;

            /** Optional. View mask for the response data. If set, only the field specified will be returned as
           part of the result. If not set, all fields in event execution info will be filled and returned.
             */
            public String getReadMask() {
              return readMask;
            }

            /**
             * Optional. View mask for the response data. If set, only the field specified will be
             * returned as part of the result. If not set, all fields in event execution info will
             * be filled and returned.
             */
            public List setReadMask(String readMask) {
              this.readMask = readMask;
              return this;
            }

            /**
             * Optional. If true, the service will use the most recent acl information to list event
             * execution infos and renew the acl cache. Note that fetching the most recent acl is
             * synchronous, so it will increase RPC call latency.
             */
            @com.google.api.client.util.Key
            private java.lang.Boolean refreshAcl;

            /** Optional. If true, the service will use the most recent acl information to list event execution
           infos and renew the acl cache. Note that fetching the most recent acl is synchronous, so it will
           increase RPC call latency.
             */
            public java.lang.Boolean getRefreshAcl() {
              return refreshAcl;
            }

            /**
             * Optional. If true, the service will use the most recent acl information to list event
             * execution infos and renew the acl cache. Note that fetching the most recent acl is
             * synchronous, so it will increase RPC call latency.
             */
            public List setRefreshAcl(java.lang.Boolean refreshAcl) {
              this.refreshAcl = refreshAcl;
              return this;
            }

            /**
             * Optional. If true, the service will truncate the params to only keep the first 1000
             * characters of string params and empty the executions in order to make response
             * smaller. Only works for UI and when the params fields are not filtered out.
             */
            @com.google.api.client.util.Key
            private java.lang.Boolean truncateParams;

            /** Optional. If true, the service will truncate the params to only keep the first 1000 characters of
           string params and empty the executions in order to make response smaller. Only works for UI and
           when the params fields are not filtered out.
             */
            public java.lang.Boolean getTruncateParams() {
              return truncateParams;
            }

            /**
             * Optional. If true, the service will truncate the params to only keep the first 1000
             * characters of string params and empty the executions in order to make response
             * smaller. Only works for UI and when the params fields are not filtered out.
             */
            public List setTruncateParams(java.lang.Boolean truncateParams) {
              this.truncateParams = truncateParams;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the Versions collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Integrations integrations = new Integrations(...);}
         *   {@code Integrations.Versions.List request = integrations.versions().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Versions versions() {
          return new Versions();
        }

        /**
         * The "versions" collection of methods.
         */
        public class Versions {

          /**
           * Soft-deletes the integration. Changes the status of the integration to ARCHIVED. If the
           * integration being ARCHIVED is tagged as "HEAD", the tag is removed from this snapshot and set to
           * the previous non-ARCHIVED snapshot. The PUBLISH_REQUESTED, DUE_FOR_DELETION tags are removed too.
           * This RPC throws an exception if the version being archived is DRAFT, and if the `locked_by` user
           * is not the same as the user performing the Archive. Audit fields updated include
           * last_modified_timestamp, last_modified_by. Any existing lock is released when Archiving a
           * integration. Currently, there is no unarchive mechanism.
           *
           * Create a request for the method "versions.archive".
           *
           * This request holds the parameters needed by the integrations server.  After setting any optional
           * parameters, call the {@link Archive#execute()} method to invoke the remote operation.
           *
           * @param name Required. The version to archive. Format:
           *        projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
           * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaArchiveIntegrationVersionRequest}
           * @return the request
           */
          public Archive archive(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaArchiveIntegrationVersionRequest content) throws java.io.IOException {
            Archive result = new Archive(name, content);
            initialize(result);
            return result;
          }

          public class Archive extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaArchiveIntegrationVersionResponse> {

            private static final String REST_PATH = "v1alpha/{+name}:archive";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/integrations/[^/]+/versions/[^/]+$");

            /**
             * Soft-deletes the integration. Changes the status of the integration to ARCHIVED. If the
             * integration being ARCHIVED is tagged as "HEAD", the tag is removed from this snapshot and set
             * to the previous non-ARCHIVED snapshot. The PUBLISH_REQUESTED, DUE_FOR_DELETION tags are removed
             * too. This RPC throws an exception if the version being archived is DRAFT, and if the
             * `locked_by` user is not the same as the user performing the Archive. Audit fields updated
             * include last_modified_timestamp, last_modified_by. Any existing lock is released when Archiving
             * a integration. Currently, there is no unarchive mechanism.
             *
             * Create a request for the method "versions.archive".
             *
             * This request holds the parameters needed by the the integrations server.  After setting any
             * optional parameters, call the {@link Archive#execute()} method to invoke the remote operation.
             * <p> {@link
             * Archive#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The version to archive. Format:
           *        projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
             * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaArchiveIntegrationVersionRequest}
             * @since 1.13
             */
            protected Archive(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaArchiveIntegrationVersionRequest content) {
              super(Integrations.this, "POST", REST_PATH, content, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaArchiveIntegrationVersionResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/integrations/[^/]+/versions/[^/]+$");
              }
            }

            @Override
            public Archive set$Xgafv(java.lang.String $Xgafv) {
              return (Archive) super.set$Xgafv($Xgafv);
            }

            @Override
            public Archive setAccessToken(java.lang.String accessToken) {
              return (Archive) super.setAccessToken(accessToken);
            }

            @Override
            public Archive setAlt(java.lang.String alt) {
              return (Archive) super.setAlt(alt);
            }

            @Override
            public Archive setCallback(java.lang.String callback) {
              return (Archive) super.setCallback(callback);
            }

            @Override
            public Archive setFields(java.lang.String fields) {
              return (Archive) super.setFields(fields);
            }

            @Override
            public Archive setKey(java.lang.String key) {
              return (Archive) super.setKey(key);
            }

            @Override
            public Archive setOauthToken(java.lang.String oauthToken) {
              return (Archive) super.setOauthToken(oauthToken);
            }

            @Override
            public Archive setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Archive) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Archive setQuotaUser(java.lang.String quotaUser) {
              return (Archive) super.setQuotaUser(quotaUser);
            }

            @Override
            public Archive setUploadType(java.lang.String uploadType) {
              return (Archive) super.setUploadType(uploadType);
            }

            @Override
            public Archive setUploadProtocol(java.lang.String uploadProtocol) {
              return (Archive) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The version to archive. Format:
             * projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The version to archive. Format:
           projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The version to archive. Format:
             * projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
             */
            public Archive setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/integrations/[^/]+/versions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Archive set(String parameterName, Object value) {
              return (Archive) super.set(parameterName, value);
            }
          }
          /**
           * Create a integration with a draft version in the specified project.
           *
           * Create a request for the method "versions.create".
           *
           * This request holds the parameters needed by the integrations server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The parent resource where this version will be created. Format:
           *        projects/{project}/locations/{location}/integrations/{integration}
           * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaIntegrationVersion}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaIntegrationVersion content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaIntegrationVersion> {

            private static final String REST_PATH = "v1alpha/{+parent}/versions";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/integrations/[^/]+$");

            /**
             * Create a integration with a draft version in the specified project.
             *
             * Create a request for the method "versions.create".
             *
             * This request holds the parameters needed by the the integrations server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The parent resource where this version will be created. Format:
           *        projects/{project}/locations/{location}/integrations/{integration}
             * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaIntegrationVersion}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaIntegrationVersion content) {
              super(Integrations.this, "POST", REST_PATH, content, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaIntegrationVersion.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/integrations/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The parent resource where this version will be created. Format:
             * projects/{project}/locations/{location}/integrations/{integration}
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The parent resource where this version will be created. Format:
           projects/{project}/locations/{location}/integrations/{integration}
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The parent resource where this version will be created. Format:
             * projects/{project}/locations/{location}/integrations/{integration}
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/integrations/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Set this flag to true, if draft version is to be created for a brand new integration.
             * False, if the request is for an existing integration. For backward compatibility
             * reasons, even if this flag is set to `false` and no existing integration is found, a
             * new draft integration will still be created.
             */
            @com.google.api.client.util.Key
            private java.lang.Boolean newIntegration;

            /** Set this flag to true, if draft version is to be created for a brand new integration. False, if the
           request is for an existing integration. For backward compatibility reasons, even if this flag is
           set to `false` and no existing integration is found, a new draft integration will still be created.
             */
            public java.lang.Boolean getNewIntegration() {
              return newIntegration;
            }

            /**
             * Set this flag to true, if draft version is to be created for a brand new integration.
             * False, if the request is for an existing integration. For backward compatibility
             * reasons, even if this flag is set to `false` and no existing integration is found, a
             * new draft integration will still be created.
             */
            public Create setNewIntegration(java.lang.Boolean newIntegration) {
              this.newIntegration = newIntegration;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Sets the status of the ACTIVE integration to SNAPSHOT with a new tag "PREVIOUSLY_PUBLISHED" after
           * validating it. The "HEAD" and "PUBLISH_REQUESTED" tags do not change. This RPC throws an
           * exception if the version being snapshot is not ACTIVE. Audit fields added include action,
           * action_by, action_timestamp.
           *
           * Create a request for the method "versions.deactivate".
           *
           * This request holds the parameters needed by the integrations server.  After setting any optional
           * parameters, call the {@link Deactivate#execute()} method to invoke the remote operation.
           *
           * @param name Required. The version to deactivate. Format:
           *        projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
           * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaDeactivateIntegrationVersionRequest}
           * @return the request
           */
          public Deactivate deactivate(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaDeactivateIntegrationVersionRequest content) throws java.io.IOException {
            Deactivate result = new Deactivate(name, content);
            initialize(result);
            return result;
          }

          public class Deactivate extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaDeactivateIntegrationVersionResponse> {

            private static final String REST_PATH = "v1alpha/{+name}:deactivate";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/integrations/[^/]+/versions/[^/]+$");

            /**
             * Sets the status of the ACTIVE integration to SNAPSHOT with a new tag "PREVIOUSLY_PUBLISHED"
             * after validating it. The "HEAD" and "PUBLISH_REQUESTED" tags do not change. This RPC throws an
             * exception if the version being snapshot is not ACTIVE. Audit fields added include action,
             * action_by, action_timestamp.
             *
             * Create a request for the method "versions.deactivate".
             *
             * This request holds the parameters needed by the the integrations server.  After setting any
             * optional parameters, call the {@link Deactivate#execute()} method to invoke the remote
             * operation. <p> {@link
             * Deactivate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The version to deactivate. Format:
           *        projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
             * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaDeactivateIntegrationVersionRequest}
             * @since 1.13
             */
            protected Deactivate(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaDeactivateIntegrationVersionRequest content) {
              super(Integrations.this, "POST", REST_PATH, content, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaDeactivateIntegrationVersionResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/integrations/[^/]+/versions/[^/]+$");
              }
            }

            @Override
            public Deactivate set$Xgafv(java.lang.String $Xgafv) {
              return (Deactivate) super.set$Xgafv($Xgafv);
            }

            @Override
            public Deactivate setAccessToken(java.lang.String accessToken) {
              return (Deactivate) super.setAccessToken(accessToken);
            }

            @Override
            public Deactivate setAlt(java.lang.String alt) {
              return (Deactivate) super.setAlt(alt);
            }

            @Override
            public Deactivate setCallback(java.lang.String callback) {
              return (Deactivate) super.setCallback(callback);
            }

            @Override
            public Deactivate setFields(java.lang.String fields) {
              return (Deactivate) super.setFields(fields);
            }

            @Override
            public Deactivate setKey(java.lang.String key) {
              return (Deactivate) super.setKey(key);
            }

            @Override
            public Deactivate setOauthToken(java.lang.String oauthToken) {
              return (Deactivate) super.setOauthToken(oauthToken);
            }

            @Override
            public Deactivate setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Deactivate) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Deactivate setQuotaUser(java.lang.String quotaUser) {
              return (Deactivate) super.setQuotaUser(quotaUser);
            }

            @Override
            public Deactivate setUploadType(java.lang.String uploadType) {
              return (Deactivate) super.setUploadType(uploadType);
            }

            @Override
            public Deactivate setUploadProtocol(java.lang.String uploadProtocol) {
              return (Deactivate) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The version to deactivate. Format:
             * projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The version to deactivate. Format:
           projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The version to deactivate. Format:
             * projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
             */
            public Deactivate setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/integrations/[^/]+/versions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Deactivate set(String parameterName, Object value) {
              return (Deactivate) super.set(parameterName, value);
            }
          }
          /**
           * Get a integration in the specified project.
           *
           * Create a request for the method "versions.get".
           *
           * This request holds the parameters needed by the integrations server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The version to retrieve. Format:
           *        projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaIntegrationVersion> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/integrations/[^/]+/versions/[^/]+$");

            /**
             * Get a integration in the specified project.
             *
             * Create a request for the method "versions.get".
             *
             * This request holds the parameters needed by the the integrations server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The version to retrieve. Format:
           *        projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Integrations.this, "GET", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaIntegrationVersion.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/integrations/[^/]+/versions/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The version to retrieve. Format:
             * projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The version to retrieve. Format:
           projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The version to retrieve. Format:
             * projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/integrations/[^/]+/versions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Returns the list of all integration versions in the specified project.
           *
           * Create a request for the method "versions.list".
           *
           * This request holds the parameters needed by the integrations server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The parent resource where this version will be created. Format:
           *        projects/{project}/locations/{location}/integrations/{integration} Specifically, when
           *        parent equals: 1. projects//locations//integrations/, Meaning: "List versions (with
           *        filter) for a particular integration". 2. projects//locations//integrations/- Meaning:
           *        "List versions (with filter) for a client within a particular region". 3.
           *        projects//locations/-/integrations/- Meaning: "List versions (with filter) for a client".
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaListIntegrationVersionsResponse> {

            private static final String REST_PATH = "v1alpha/{+parent}/versions";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/integrations/[^/]+$");

            /**
             * Returns the list of all integration versions in the specified project.
             *
             * Create a request for the method "versions.list".
             *
             * This request holds the parameters needed by the the integrations server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The parent resource where this version will be created. Format:
           *        projects/{project}/locations/{location}/integrations/{integration} Specifically, when
           *        parent equals: 1. projects//locations//integrations/, Meaning: "List versions (with
           *        filter) for a particular integration". 2. projects//locations//integrations/- Meaning:
           *        "List versions (with filter) for a client within a particular region". 3.
           *        projects//locations/-/integrations/- Meaning: "List versions (with filter) for a client".
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Integrations.this, "GET", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaListIntegrationVersionsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/integrations/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The parent resource where this version will be created. Format:
             * projects/{project}/locations/{location}/integrations/{integration} Specifically, when
             * parent equals: 1. projects//locations//integrations/, Meaning: "List versions (with
             * filter) for a particular integration". 2. projects//locations//integrations/-
             * Meaning: "List versions (with filter) for a client within a particular region". 3.
             * projects//locations/-/integrations/- Meaning: "List versions (with filter) for a
             * client".
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The parent resource where this version will be created. Format:
           projects/{project}/locations/{location}/integrations/{integration} Specifically, when parent
           equals: 1. projects//locations//integrations/, Meaning: "List versions (with filter) for a
           particular integration". 2. projects//locations//integrations/- Meaning: "List versions (with
           filter) for a client within a particular region". 3. projects//locations/-/integrations/- Meaning:
           "List versions (with filter) for a client".
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The parent resource where this version will be created. Format:
             * projects/{project}/locations/{location}/integrations/{integration} Specifically, when
             * parent equals: 1. projects//locations//integrations/, Meaning: "List versions (with
             * filter) for a particular integration". 2. projects//locations//integrations/-
             * Meaning: "List versions (with filter) for a client within a particular region". 3.
             * projects//locations/-/integrations/- Meaning: "List versions (with filter) for a
             * client".
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/integrations/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /** The field mask which specifies the particular data to be returned. */
            @com.google.api.client.util.Key
            private String fieldMask;

            /** The field mask which specifies the particular data to be returned.
             */
            public String getFieldMask() {
              return fieldMask;
            }

            /** The field mask which specifies the particular data to be returned. */
            public List setFieldMask(String fieldMask) {
              this.fieldMask = fieldMask;
              return this;
            }

            /**
             * Filter on fields of IntegrationVersion. Fields can be compared with literal values by
             * use of ":" (containment), "=" (equality), ">" (greater), "<" (less than), >="
             * (greater than or equal to), "<=" (less than or equal to), and "!=" (inequality)
             * operators. Negation, conjunction, and disjunction are written using NOT, AND, and OR
             * keywords. For example, organization_id=\"1\" AND state=ACTIVE AND description:"test".
             * Filtering cannot be performed on repeated fields like `task_config`.
             */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Filter on fields of IntegrationVersion. Fields can be compared with literal values by use of ":"
           (containment), "=" (equality), ">" (greater), "<" (less than), >=" (greater than or equal to), "<="
           (less than or equal to), and "!=" (inequality) operators. Negation, conjunction, and disjunction
           are written using NOT, AND, and OR keywords. For example, organization_id=\"1\" AND state=ACTIVE
           AND description:"test". Filtering cannot be performed on repeated fields like `task_config`.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /**
             * Filter on fields of IntegrationVersion. Fields can be compared with literal values by
             * use of ":" (containment), "=" (equality), ">" (greater), "<" (less than), >="
             * (greater than or equal to), "<=" (less than or equal to), and "!=" (inequality)
             * operators. Negation, conjunction, and disjunction are written using NOT, AND, and OR
             * keywords. For example, organization_id=\"1\" AND state=ACTIVE AND description:"test".
             * Filtering cannot be performed on repeated fields like `task_config`.
             */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /**
             * The results would be returned in order you specified here. Currently supported sort
             * keys are: Descending sort order for "last_modified_time", "created_time",
             * "snapshot_number" Ascending sort order for "name".
             */
            @com.google.api.client.util.Key
            private java.lang.String orderBy;

            /** The results would be returned in order you specified here. Currently supported sort keys are:
           Descending sort order for "last_modified_time", "created_time", "snapshot_number" Ascending sort
           order for "name".
             */
            public java.lang.String getOrderBy() {
              return orderBy;
            }

            /**
             * The results would be returned in order you specified here. Currently supported sort
             * keys are: Descending sort order for "last_modified_time", "created_time",
             * "snapshot_number" Ascending sort order for "name".
             */
            public List setOrderBy(java.lang.String orderBy) {
              this.orderBy = orderBy;
              return this;
            }

            /**
             * The maximum number of versions to return. The service may return fewer than this
             * value. If unspecified, at most 50 versions will be returned. The maximum value is
             * 1000; values above 1000 will be coerced to 1000.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The maximum number of versions to return. The service may return fewer than this value. If
           unspecified, at most 50 versions will be returned. The maximum value is 1000; values above 1000
           will be coerced to 1000.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * The maximum number of versions to return. The service may return fewer than this
             * value. If unspecified, at most 50 versions will be returned. The maximum value is
             * 1000; values above 1000 will be coerced to 1000.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * A page token, received from a previous `ListIntegrationVersions` call. Provide this
             * to retrieve the subsequent page. When paginating, all other parameters provided to
             * `ListIntegrationVersions` must match the call that provided the page token.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** A page token, received from a previous `ListIntegrationVersions` call. Provide this to retrieve the
           subsequent page. When paginating, all other parameters provided to `ListIntegrationVersions` must
           match the call that provided the page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * A page token, received from a previous `ListIntegrationVersions` call. Provide this
             * to retrieve the subsequent page. When paginating, all other parameters provided to
             * `ListIntegrationVersions` must match the call that provided the page token.
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Update a integration with a draft version in the specified project.
           *
           * Create a request for the method "versions.patch".
           *
           * This request holds the parameters needed by the integrations server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Output only. Auto-generated primary key.
           * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaIntegrationVersion}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaIntegrationVersion content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaIntegrationVersion> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/integrations/[^/]+/versions/[^/]+$");

            /**
             * Update a integration with a draft version in the specified project.
             *
             * Create a request for the method "versions.patch".
             *
             * This request holds the parameters needed by the the integrations server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Output only. Auto-generated primary key.
             * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaIntegrationVersion}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaIntegrationVersion content) {
              super(Integrations.this, "PATCH", REST_PATH, content, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaIntegrationVersion.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/integrations/[^/]+/versions/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /** Output only. Auto-generated primary key. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Output only. Auto-generated primary key.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Output only. Auto-generated primary key. */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/integrations/[^/]+/versions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Field mask specifying the fields in the above integration that have been modified and
             * need to be updated.
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Field mask specifying the fields in the above integration that have been modified and need to be
           updated.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * Field mask specifying the fields in the above integration that have been modified and
             * need to be updated.
             */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }
          /**
           * This RPC throws an exception if the integration is in ARCHIVED or ACTIVE state. This RPC throws
           * an exception if the version being published is DRAFT, and if the `locked_by` user is not the same
           * as the user performing the Publish. Audit fields updated include last_published_timestamp,
           * last_published_by, last_modified_timestamp, last_modified_by. Any existing lock is on this
           * integration is released.
           *
           * Create a request for the method "versions.publish".
           *
           * This request holds the parameters needed by the integrations server.  After setting any optional
           * parameters, call the {@link Publish#execute()} method to invoke the remote operation.
           *
           * @param name Required. The version to publish. Format:
           *        projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
           * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaPublishIntegrationVersionRequest}
           * @return the request
           */
          public Publish publish(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaPublishIntegrationVersionRequest content) throws java.io.IOException {
            Publish result = new Publish(name, content);
            initialize(result);
            return result;
          }

          public class Publish extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaPublishIntegrationVersionResponse> {

            private static final String REST_PATH = "v1alpha/{+name}:publish";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/integrations/[^/]+/versions/[^/]+$");

            /**
             * This RPC throws an exception if the integration is in ARCHIVED or ACTIVE state. This RPC throws
             * an exception if the version being published is DRAFT, and if the `locked_by` user is not the
             * same as the user performing the Publish. Audit fields updated include last_published_timestamp,
             * last_published_by, last_modified_timestamp, last_modified_by. Any existing lock is on this
             * integration is released.
             *
             * Create a request for the method "versions.publish".
             *
             * This request holds the parameters needed by the the integrations server.  After setting any
             * optional parameters, call the {@link Publish#execute()} method to invoke the remote operation.
             * <p> {@link
             * Publish#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The version to publish. Format:
           *        projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
             * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaPublishIntegrationVersionRequest}
             * @since 1.13
             */
            protected Publish(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaPublishIntegrationVersionRequest content) {
              super(Integrations.this, "POST", REST_PATH, content, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaPublishIntegrationVersionResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/integrations/[^/]+/versions/[^/]+$");
              }
            }

            @Override
            public Publish set$Xgafv(java.lang.String $Xgafv) {
              return (Publish) super.set$Xgafv($Xgafv);
            }

            @Override
            public Publish setAccessToken(java.lang.String accessToken) {
              return (Publish) super.setAccessToken(accessToken);
            }

            @Override
            public Publish setAlt(java.lang.String alt) {
              return (Publish) super.setAlt(alt);
            }

            @Override
            public Publish setCallback(java.lang.String callback) {
              return (Publish) super.setCallback(callback);
            }

            @Override
            public Publish setFields(java.lang.String fields) {
              return (Publish) super.setFields(fields);
            }

            @Override
            public Publish setKey(java.lang.String key) {
              return (Publish) super.setKey(key);
            }

            @Override
            public Publish setOauthToken(java.lang.String oauthToken) {
              return (Publish) super.setOauthToken(oauthToken);
            }

            @Override
            public Publish setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Publish) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Publish setQuotaUser(java.lang.String quotaUser) {
              return (Publish) super.setQuotaUser(quotaUser);
            }

            @Override
            public Publish setUploadType(java.lang.String uploadType) {
              return (Publish) super.setUploadType(uploadType);
            }

            @Override
            public Publish setUploadProtocol(java.lang.String uploadProtocol) {
              return (Publish) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The version to publish. Format:
             * projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The version to publish. Format:
           projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The version to publish. Format:
             * projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
             */
            public Publish setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/integrations/[^/]+/versions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Publish set(String parameterName, Object value) {
              return (Publish) super.set(parameterName, value);
            }
          }
          /**
           * Clears the `locked_by` and `locked_at_timestamp`in the DRAFT version of this integration. It then
           * performs the same action as the CreateDraftIntegrationVersion (i.e., copies the DRAFT version of
           * the integration as a SNAPSHOT and then creates a new DRAFT version with the `locked_by` set to
           * the `user_taking_over` and the `locked_at_timestamp` set to the current timestamp). Both the
           * `locked_by` and `user_taking_over` are notified via email about the takeover. This RPC throws an
           * exception if the integration is not in DRAFT status or if the `locked_by` and
           * `locked_at_timestamp` fields are not set.The TakeoverEdit lock is treated the same as an edit of
           * the integration, and hence shares ACLs with edit. Audit fields updated include
           * last_modified_timestamp, last_modified_by.
           *
           * Create a request for the method "versions.takeoverEditLock".
           *
           * This request holds the parameters needed by the integrations server.  After setting any optional
           * parameters, call the {@link TakeoverEditLock#execute()} method to invoke the remote operation.
           *
           * @param integrationVersion Required. The version to take over edit lock. Format:
           *        projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
           * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaTakeoverEditLockRequest}
           * @return the request
           */
          public TakeoverEditLock takeoverEditLock(java.lang.String integrationVersion, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaTakeoverEditLockRequest content) throws java.io.IOException {
            TakeoverEditLock result = new TakeoverEditLock(integrationVersion, content);
            initialize(result);
            return result;
          }

          public class TakeoverEditLock extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaTakeoverEditLockResponse> {

            private static final String REST_PATH = "v1alpha/{+integrationVersion}:takeoverEditLock";

            private final java.util.regex.Pattern INTEGRATION_VERSION_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/integrations/[^/]+/versions/[^/]+$");

            /**
             * Clears the `locked_by` and `locked_at_timestamp`in the DRAFT version of this integration. It
             * then performs the same action as the CreateDraftIntegrationVersion (i.e., copies the DRAFT
             * version of the integration as a SNAPSHOT and then creates a new DRAFT version with the
             * `locked_by` set to the `user_taking_over` and the `locked_at_timestamp` set to the current
             * timestamp). Both the `locked_by` and `user_taking_over` are notified via email about the
             * takeover. This RPC throws an exception if the integration is not in DRAFT status or if the
             * `locked_by` and `locked_at_timestamp` fields are not set.The TakeoverEdit lock is treated the
             * same as an edit of the integration, and hence shares ACLs with edit. Audit fields updated
             * include last_modified_timestamp, last_modified_by.
             *
             * Create a request for the method "versions.takeoverEditLock".
             *
             * This request holds the parameters needed by the the integrations server.  After setting any
             * optional parameters, call the {@link TakeoverEditLock#execute()} method to invoke the remote
             * operation. <p> {@link TakeoverEditLock#initialize(com.google.api.client.googleapis.services.Abs
             * tractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param integrationVersion Required. The version to take over edit lock. Format:
           *        projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
             * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaTakeoverEditLockRequest}
             * @since 1.13
             */
            protected TakeoverEditLock(java.lang.String integrationVersion, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaTakeoverEditLockRequest content) {
              super(Integrations.this, "POST", REST_PATH, content, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaTakeoverEditLockResponse.class);
              this.integrationVersion = com.google.api.client.util.Preconditions.checkNotNull(integrationVersion, "Required parameter integrationVersion must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(INTEGRATION_VERSION_PATTERN.matcher(integrationVersion).matches(),
                    "Parameter integrationVersion must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/integrations/[^/]+/versions/[^/]+$");
              }
            }

            @Override
            public TakeoverEditLock set$Xgafv(java.lang.String $Xgafv) {
              return (TakeoverEditLock) super.set$Xgafv($Xgafv);
            }

            @Override
            public TakeoverEditLock setAccessToken(java.lang.String accessToken) {
              return (TakeoverEditLock) super.setAccessToken(accessToken);
            }

            @Override
            public TakeoverEditLock setAlt(java.lang.String alt) {
              return (TakeoverEditLock) super.setAlt(alt);
            }

            @Override
            public TakeoverEditLock setCallback(java.lang.String callback) {
              return (TakeoverEditLock) super.setCallback(callback);
            }

            @Override
            public TakeoverEditLock setFields(java.lang.String fields) {
              return (TakeoverEditLock) super.setFields(fields);
            }

            @Override
            public TakeoverEditLock setKey(java.lang.String key) {
              return (TakeoverEditLock) super.setKey(key);
            }

            @Override
            public TakeoverEditLock setOauthToken(java.lang.String oauthToken) {
              return (TakeoverEditLock) super.setOauthToken(oauthToken);
            }

            @Override
            public TakeoverEditLock setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (TakeoverEditLock) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public TakeoverEditLock setQuotaUser(java.lang.String quotaUser) {
              return (TakeoverEditLock) super.setQuotaUser(quotaUser);
            }

            @Override
            public TakeoverEditLock setUploadType(java.lang.String uploadType) {
              return (TakeoverEditLock) super.setUploadType(uploadType);
            }

            @Override
            public TakeoverEditLock setUploadProtocol(java.lang.String uploadProtocol) {
              return (TakeoverEditLock) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The version to take over edit lock. Format:
             * projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
             */
            @com.google.api.client.util.Key
            private java.lang.String integrationVersion;

            /** Required. The version to take over edit lock. Format:
           projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
             */
            public java.lang.String getIntegrationVersion() {
              return integrationVersion;
            }

            /**
             * Required. The version to take over edit lock. Format:
             * projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
             */
            public TakeoverEditLock setIntegrationVersion(java.lang.String integrationVersion) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(INTEGRATION_VERSION_PATTERN.matcher(integrationVersion).matches(),
                    "Parameter integrationVersion must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/integrations/[^/]+/versions/[^/]+$");
              }
              this.integrationVersion = integrationVersion;
              return this;
            }

            @Override
            public TakeoverEditLock set(String parameterName, Object value) {
              return (TakeoverEditLock) super.set(parameterName, value);
            }
          }
          /**
           * Validates the given integration. If the id doesn't exist, a NotFoundException is thrown. If
           * validation fails a CanonicalCodeException is thrown. If there was no failure an empty response is
           * returned.
           *
           * Create a request for the method "versions.validate".
           *
           * This request holds the parameters needed by the integrations server.  After setting any optional
           * parameters, call the {@link Validate#execute()} method to invoke the remote operation.
           *
           * @param name Required. The version to validate. Format:
           *        projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
           * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaValidateIntegrationVersionRequest}
           * @return the request
           */
          public Validate validate(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaValidateIntegrationVersionRequest content) throws java.io.IOException {
            Validate result = new Validate(name, content);
            initialize(result);
            return result;
          }

          public class Validate extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaValidateIntegrationVersionResponse> {

            private static final String REST_PATH = "v1alpha/{+name}:validate";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/integrations/[^/]+/versions/[^/]+$");

            /**
             * Validates the given integration. If the id doesn't exist, a NotFoundException is thrown. If
             * validation fails a CanonicalCodeException is thrown. If there was no failure an empty response
             * is returned.
             *
             * Create a request for the method "versions.validate".
             *
             * This request holds the parameters needed by the the integrations server.  After setting any
             * optional parameters, call the {@link Validate#execute()} method to invoke the remote operation.
             * <p> {@link
             * Validate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The version to validate. Format:
           *        projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
             * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaValidateIntegrationVersionRequest}
             * @since 1.13
             */
            protected Validate(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaValidateIntegrationVersionRequest content) {
              super(Integrations.this, "POST", REST_PATH, content, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaValidateIntegrationVersionResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/integrations/[^/]+/versions/[^/]+$");
              }
            }

            @Override
            public Validate set$Xgafv(java.lang.String $Xgafv) {
              return (Validate) super.set$Xgafv($Xgafv);
            }

            @Override
            public Validate setAccessToken(java.lang.String accessToken) {
              return (Validate) super.setAccessToken(accessToken);
            }

            @Override
            public Validate setAlt(java.lang.String alt) {
              return (Validate) super.setAlt(alt);
            }

            @Override
            public Validate setCallback(java.lang.String callback) {
              return (Validate) super.setCallback(callback);
            }

            @Override
            public Validate setFields(java.lang.String fields) {
              return (Validate) super.setFields(fields);
            }

            @Override
            public Validate setKey(java.lang.String key) {
              return (Validate) super.setKey(key);
            }

            @Override
            public Validate setOauthToken(java.lang.String oauthToken) {
              return (Validate) super.setOauthToken(oauthToken);
            }

            @Override
            public Validate setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Validate) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Validate setQuotaUser(java.lang.String quotaUser) {
              return (Validate) super.setQuotaUser(quotaUser);
            }

            @Override
            public Validate setUploadType(java.lang.String uploadType) {
              return (Validate) super.setUploadType(uploadType);
            }

            @Override
            public Validate setUploadProtocol(java.lang.String uploadProtocol) {
              return (Validate) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The version to validate. Format:
             * projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The version to validate. Format:
           projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The version to validate. Format:
             * projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
             */
            public Validate setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/integrations/[^/]+/versions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Validate set(String parameterName, Object value) {
              return (Validate) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the Products collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Integrations integrations = new Integrations(...);}
       *   {@code Integrations.Products.List request = integrations.products().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Products products() {
        return new Products();
      }

      /**
       * The "products" collection of methods.
       */
      public class Products {

        /**
         * PROTECT WITH A VISIBILITY LABEL. THIS METHOD WILL BE MOVED TO A SEPARATE SERVICE. Create a
         * bundle.
         *
         * Create a request for the method "products.createBundle".
         *
         * This request holds the parameters needed by the integrations server.  After setting any optional
         * parameters, call the {@link CreateBundle#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The location resource of the request.
         * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaCreateBundleRequest}
         * @return the request
         */
        public CreateBundle createBundle(java.lang.String parent, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaCreateBundleRequest content) throws java.io.IOException {
          CreateBundle result = new CreateBundle(parent, content);
          initialize(result);
          return result;
        }

        public class CreateBundle extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaCreateBundleResponse> {

          private static final String REST_PATH = "v1alpha/{+parent}:createBundle";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+$");

          /**
           * PROTECT WITH A VISIBILITY LABEL. THIS METHOD WILL BE MOVED TO A SEPARATE SERVICE. Create a
           * bundle.
           *
           * Create a request for the method "products.createBundle".
           *
           * This request holds the parameters needed by the the integrations server.  After setting any
           * optional parameters, call the {@link CreateBundle#execute()} method to invoke the remote
           * operation. <p> {@link
           * CreateBundle#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The location resource of the request.
           * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaCreateBundleRequest}
           * @since 1.13
           */
          protected CreateBundle(java.lang.String parent, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaCreateBundleRequest content) {
            super(Integrations.this, "POST", REST_PATH, content, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaCreateBundleResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/products/[^/]+$");
            }
          }

          @Override
          public CreateBundle set$Xgafv(java.lang.String $Xgafv) {
            return (CreateBundle) super.set$Xgafv($Xgafv);
          }

          @Override
          public CreateBundle setAccessToken(java.lang.String accessToken) {
            return (CreateBundle) super.setAccessToken(accessToken);
          }

          @Override
          public CreateBundle setAlt(java.lang.String alt) {
            return (CreateBundle) super.setAlt(alt);
          }

          @Override
          public CreateBundle setCallback(java.lang.String callback) {
            return (CreateBundle) super.setCallback(callback);
          }

          @Override
          public CreateBundle setFields(java.lang.String fields) {
            return (CreateBundle) super.setFields(fields);
          }

          @Override
          public CreateBundle setKey(java.lang.String key) {
            return (CreateBundle) super.setKey(key);
          }

          @Override
          public CreateBundle setOauthToken(java.lang.String oauthToken) {
            return (CreateBundle) super.setOauthToken(oauthToken);
          }

          @Override
          public CreateBundle setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (CreateBundle) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public CreateBundle setQuotaUser(java.lang.String quotaUser) {
            return (CreateBundle) super.setQuotaUser(quotaUser);
          }

          @Override
          public CreateBundle setUploadType(java.lang.String uploadType) {
            return (CreateBundle) super.setUploadType(uploadType);
          }

          @Override
          public CreateBundle setUploadProtocol(java.lang.String uploadProtocol) {
            return (CreateBundle) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The location resource of the request. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The location resource of the request.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The location resource of the request. */
          public CreateBundle setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/products/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public CreateBundle set(String parameterName, Object value) {
            return (CreateBundle) super.set(parameterName, value);
          }
        }
        /**
         * This is a UI only method and will be moved away. Returns a list of common tasks.
         *
         * Create a request for the method "products.listTaskEntities".
         *
         * This request holds the parameters needed by the integrations server.  After setting any optional
         * parameters, call the {@link ListTaskEntities#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The location resource of the request. This is not going to be used but preserve the field
         *        for future.
         * @return the request
         */
        public ListTaskEntities listTaskEntities(java.lang.String parent) throws java.io.IOException {
          ListTaskEntities result = new ListTaskEntities(parent);
          initialize(result);
          return result;
        }

        public class ListTaskEntities extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaListTaskEntitiesResponse> {

          private static final String REST_PATH = "v1alpha/{+parent}:listTaskEntities";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+$");

          /**
           * This is a UI only method and will be moved away. Returns a list of common tasks.
           *
           * Create a request for the method "products.listTaskEntities".
           *
           * This request holds the parameters needed by the the integrations server.  After setting any
           * optional parameters, call the {@link ListTaskEntities#execute()} method to invoke the remote
           * operation. <p> {@link ListTaskEntities#initialize(com.google.api.client.googleapis.services.Abs
           * tractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param parent Required. The location resource of the request. This is not going to be used but preserve the field
         *        for future.
           * @since 1.13
           */
          protected ListTaskEntities(java.lang.String parent) {
            super(Integrations.this, "GET", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaListTaskEntitiesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/products/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public ListTaskEntities set$Xgafv(java.lang.String $Xgafv) {
            return (ListTaskEntities) super.set$Xgafv($Xgafv);
          }

          @Override
          public ListTaskEntities setAccessToken(java.lang.String accessToken) {
            return (ListTaskEntities) super.setAccessToken(accessToken);
          }

          @Override
          public ListTaskEntities setAlt(java.lang.String alt) {
            return (ListTaskEntities) super.setAlt(alt);
          }

          @Override
          public ListTaskEntities setCallback(java.lang.String callback) {
            return (ListTaskEntities) super.setCallback(callback);
          }

          @Override
          public ListTaskEntities setFields(java.lang.String fields) {
            return (ListTaskEntities) super.setFields(fields);
          }

          @Override
          public ListTaskEntities setKey(java.lang.String key) {
            return (ListTaskEntities) super.setKey(key);
          }

          @Override
          public ListTaskEntities setOauthToken(java.lang.String oauthToken) {
            return (ListTaskEntities) super.setOauthToken(oauthToken);
          }

          @Override
          public ListTaskEntities setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (ListTaskEntities) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public ListTaskEntities setQuotaUser(java.lang.String quotaUser) {
            return (ListTaskEntities) super.setQuotaUser(quotaUser);
          }

          @Override
          public ListTaskEntities setUploadType(java.lang.String uploadType) {
            return (ListTaskEntities) super.setUploadType(uploadType);
          }

          @Override
          public ListTaskEntities setUploadProtocol(java.lang.String uploadProtocol) {
            return (ListTaskEntities) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The location resource of the request. This is not going to be used but
           * preserve the field for future.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The location resource of the request. This is not going to be used but preserve the field
         for future.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The location resource of the request. This is not going to be used but
           * preserve the field for future.
           */
          public ListTaskEntities setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/products/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public ListTaskEntities set(String parameterName, Object value) {
            return (ListTaskEntities) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the AuthConfigs collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Integrations integrations = new Integrations(...);}
         *   {@code Integrations.AuthConfigs.List request = integrations.authConfigs().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public AuthConfigs authConfigs() {
          return new AuthConfigs();
        }

        /**
         * The "authConfigs" collection of methods.
         */
        public class AuthConfigs {

          /**
           * Creates an auth config record. Fetch corresponding credentials for specific auth types, e.g.
           * access token for OAuth 2.0, JWT token for JWT. Encrypt the auth config with Cloud KMS and store
           * the encrypted credentials in Spanner. Returns the encrypted auth config.
           *
           * Create a request for the method "authConfigs.create".
           *
           * This request holds the parameters needed by the integrations server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. "projects/{project}/locations/{location}" format.
           * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaAuthConfig}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaAuthConfig content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaAuthConfig> {

            private static final String REST_PATH = "v1alpha/{+parent}/authConfigs";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+$");

            /**
             * Creates an auth config record. Fetch corresponding credentials for specific auth types, e.g.
             * access token for OAuth 2.0, JWT token for JWT. Encrypt the auth config with Cloud KMS and store
             * the encrypted credentials in Spanner. Returns the encrypted auth config.
             *
             * Create a request for the method "authConfigs.create".
             *
             * This request holds the parameters needed by the the integrations server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. "projects/{project}/locations/{location}" format.
             * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaAuthConfig}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaAuthConfig content) {
              super(Integrations.this, "POST", REST_PATH, content, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaAuthConfig.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/products/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. "projects/{project}/locations/{location}" format. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. "projects/{project}/locations/{location}" format.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. "projects/{project}/locations/{location}" format. */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/products/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * The ssl certificate encoded in PEM format. This string must include the begin header
             * and end footer lines. For example, -----BEGIN CERTIFICATE-----
             * MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV
             * BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw
             * MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET
             * MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA
             * vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1
             * JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB
             * xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P
             * AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB
             * Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey
             * Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW
             * JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr
             * 5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H
             * wQW6M0H7Zt8claGRla4fKkg= -----END CERTIFICATE-----
             */
            @com.google.api.client.util.Key("clientCertificate.encryptedPrivateKey")
            private java.lang.String clientCertificateEncryptedPrivateKey;

            /** The ssl certificate encoded in PEM format. This string must include the begin header and end footer
           lines. For example, -----BEGIN CERTIFICATE-----
           MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV
           BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw
           MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET
           MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA
           vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1
           JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB
           xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P
           AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB
           Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey
           Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW
           JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr
           5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H wQW6M0H7Zt8claGRla4fKkg= -----END
           CERTIFICATE-----
             */
            public java.lang.String getClientCertificateEncryptedPrivateKey() {
              return clientCertificateEncryptedPrivateKey;
            }

            /**
             * The ssl certificate encoded in PEM format. This string must include the begin header
             * and end footer lines. For example, -----BEGIN CERTIFICATE-----
             * MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV
             * BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw
             * MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET
             * MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA
             * vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1
             * JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB
             * xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P
             * AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB
             * Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey
             * Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW
             * JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr
             * 5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H
             * wQW6M0H7Zt8claGRla4fKkg= -----END CERTIFICATE-----
             */
            public Create setClientCertificateEncryptedPrivateKey(java.lang.String clientCertificateEncryptedPrivateKey) {
              this.clientCertificateEncryptedPrivateKey = clientCertificateEncryptedPrivateKey;
              return this;
            }

            /**
             * 'passphrase' should be left unset if private key is not encrypted. Note that
             * 'passphrase' is not the password for web server, but an extra layer of security to
             * protected private key.
             */
            @com.google.api.client.util.Key("clientCertificate.passphrase")
            private java.lang.String clientCertificatePassphrase;

            /**' passphrase' should be left unset if private key is not encrypted. Note that 'passphrase' is not
          ' the password for web server, but an extra layer of security to protected private key.
          '

             */
            public java.lang.String getClientCertificatePassphrase() {
              return clientCertificatePassphrase;
            }

            /**
             * 'passphrase' should be left unset if private key is not encrypted. Note that
             * 'passphrase' is not the password for web server, but an extra layer of security to
             * protected private key.
             */
            public Create setClientCertificatePassphrase(java.lang.String clientCertificatePassphrase) {
              this.clientCertificatePassphrase = clientCertificatePassphrase;
              return this;
            }

            /**
             * The ssl certificate encoded in PEM format. This string must include the begin header
             * and end footer lines. For example, -----BEGIN CERTIFICATE-----
             * MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV
             * BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw
             * MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET
             * MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA
             * vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1
             * JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB
             * xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P
             * AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB
             * Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey
             * Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW
             * JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr
             * 5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H
             * wQW6M0H7Zt8claGRla4fKkg= -----END CERTIFICATE-----
             */
            @com.google.api.client.util.Key("clientCertificate.sslCertificate")
            private java.lang.String clientCertificateSslCertificate;

            /** The ssl certificate encoded in PEM format. This string must include the begin header and end footer
           lines. For example, -----BEGIN CERTIFICATE-----
           MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV
           BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw
           MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET
           MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA
           vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1
           JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB
           xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P
           AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB
           Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey
           Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW
           JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr
           5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H wQW6M0H7Zt8claGRla4fKkg= -----END
           CERTIFICATE-----
             */
            public java.lang.String getClientCertificateSslCertificate() {
              return clientCertificateSslCertificate;
            }

            /**
             * The ssl certificate encoded in PEM format. This string must include the begin header
             * and end footer lines. For example, -----BEGIN CERTIFICATE-----
             * MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV
             * BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw
             * MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET
             * MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA
             * vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1
             * JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB
             * xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P
             * AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB
             * Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey
             * Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW
             * JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr
             * 5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H
             * wQW6M0H7Zt8claGRla4fKkg= -----END CERTIFICATE-----
             */
            public Create setClientCertificateSslCertificate(java.lang.String clientCertificateSslCertificate) {
              this.clientCertificateSslCertificate = clientCertificateSslCertificate;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes an auth config.
           *
           * Create a request for the method "authConfigs.delete".
           *
           * This request holds the parameters needed by the integrations server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name that is associated with the AuthConfig.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+/authConfigs/[^/]+$");

            /**
             * Deletes an auth config.
             *
             * Create a request for the method "authConfigs.delete".
             *
             * This request holds the parameters needed by the the integrations server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name that is associated with the AuthConfig.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Integrations.this, "DELETE", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/products/[^/]+/authConfigs/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The name that is associated with the AuthConfig. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name that is associated with the AuthConfig.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. The name that is associated with the AuthConfig. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/products/[^/]+/authConfigs/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets a complete auth config. If the auth config doesn't exist, Code.NOT_FOUND exception will be
           * thrown. Returns the decrypted auth config.
           *
           * Create a request for the method "authConfigs.get".
           *
           * This request holds the parameters needed by the integrations server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name that is associated with the AuthConfig.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaAuthConfig> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+/authConfigs/[^/]+$");

            /**
             * Gets a complete auth config. If the auth config doesn't exist, Code.NOT_FOUND exception will be
             * thrown. Returns the decrypted auth config.
             *
             * Create a request for the method "authConfigs.get".
             *
             * This request holds the parameters needed by the the integrations server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name that is associated with the AuthConfig.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Integrations.this, "GET", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaAuthConfig.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/products/[^/]+/authConfigs/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The name that is associated with the AuthConfig. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name that is associated with the AuthConfig.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. The name that is associated with the AuthConfig. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/products/[^/]+/authConfigs/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists all auth configs that match the filter. Restrict to auth configs belong to the current
           * client only.
           *
           * Create a request for the method "authConfigs.list".
           *
           * This request holds the parameters needed by the integrations server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The client, which owns this collection of AuthConfigs.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaListAuthConfigsResponse> {

            private static final String REST_PATH = "v1alpha/{+parent}/authConfigs";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+$");

            /**
             * Lists all auth configs that match the filter. Restrict to auth configs belong to the current
             * client only.
             *
             * Create a request for the method "authConfigs.list".
             *
             * This request holds the parameters needed by the the integrations server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The client, which owns this collection of AuthConfigs.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Integrations.this, "GET", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaListAuthConfigsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/products/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The client, which owns this collection of AuthConfigs. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The client, which owns this collection of AuthConfigs.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. The client, which owns this collection of AuthConfigs. */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/products/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Filtering as supported in https://developers.google.com/authorized-
             * buyers/apis/guides/v2/list-filters.
             */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Filtering as supported in https://developers.google.com/authorized-buyers/apis/guides/v2/list-
           filters.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /**
             * Filtering as supported in https://developers.google.com/authorized-
             * buyers/apis/guides/v2/list-filters.
             */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** The size of entries in the response. If unspecified, defaults to 100. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The size of entries in the response. If unspecified, defaults to 100.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The size of entries in the response. If unspecified, defaults to 100. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The token returned in the previous response. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The token returned in the previous response.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The token returned in the previous response. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            /**
             * The mask which specifies fields that need to be returned in the AuthConfig's
             * response.
             */
            @com.google.api.client.util.Key
            private String readMask;

            /** The mask which specifies fields that need to be returned in the AuthConfig's response.
             */
            public String getReadMask() {
              return readMask;
            }

            /**
             * The mask which specifies fields that need to be returned in the AuthConfig's
             * response.
             */
            public List setReadMask(String readMask) {
              this.readMask = readMask;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates an auth config. If credential is updated, fetch the encrypted auth config from Spanner,
           * decrypt with Cloud KMS key, update the credential fields, re-encrypt with Cloud KMS key and
           * update the Spanner record. For other fields, directly update the Spanner record. Returns the
           * encrypted auth config.
           *
           * Create a request for the method "authConfigs.patch".
           *
           * This request holds the parameters needed by the integrations server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Resource name of the SFDC instance projects/{project}/locations/{location}/authConfigs/{authConfig}.
           * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaAuthConfig}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaAuthConfig content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaAuthConfig> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+/authConfigs/[^/]+$");

            /**
             * Updates an auth config. If credential is updated, fetch the encrypted auth config from Spanner,
             * decrypt with Cloud KMS key, update the credential fields, re-encrypt with Cloud KMS key and
             * update the Spanner record. For other fields, directly update the Spanner record. Returns the
             * encrypted auth config.
             *
             * Create a request for the method "authConfigs.patch".
             *
             * This request holds the parameters needed by the the integrations server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Resource name of the SFDC instance projects/{project}/locations/{location}/authConfigs/{authConfig}.
             * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaAuthConfig}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaAuthConfig content) {
              super(Integrations.this, "PATCH", REST_PATH, content, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaAuthConfig.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/products/[^/]+/authConfigs/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Resource name of the SFDC instance
             * projects/{project}/locations/{location}/authConfigs/{authConfig}.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Resource name of the SFDC instance
           projects/{project}/locations/{location}/authConfigs/{authConfig}.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Resource name of the SFDC instance
             * projects/{project}/locations/{location}/authConfigs/{authConfig}.
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/products/[^/]+/authConfigs/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * The ssl certificate encoded in PEM format. This string must include the begin header
             * and end footer lines. For example, -----BEGIN CERTIFICATE-----
             * MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV
             * BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw
             * MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET
             * MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA
             * vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1
             * JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB
             * xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P
             * AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB
             * Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey
             * Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW
             * JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr
             * 5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H
             * wQW6M0H7Zt8claGRla4fKkg= -----END CERTIFICATE-----
             */
            @com.google.api.client.util.Key("clientCertificate.encryptedPrivateKey")
            private java.lang.String clientCertificateEncryptedPrivateKey;

            /** The ssl certificate encoded in PEM format. This string must include the begin header and end footer
           lines. For example, -----BEGIN CERTIFICATE-----
           MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV
           BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw
           MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET
           MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA
           vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1
           JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB
           xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P
           AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB
           Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey
           Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW
           JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr
           5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H wQW6M0H7Zt8claGRla4fKkg= -----END
           CERTIFICATE-----
             */
            public java.lang.String getClientCertificateEncryptedPrivateKey() {
              return clientCertificateEncryptedPrivateKey;
            }

            /**
             * The ssl certificate encoded in PEM format. This string must include the begin header
             * and end footer lines. For example, -----BEGIN CERTIFICATE-----
             * MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV
             * BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw
             * MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET
             * MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA
             * vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1
             * JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB
             * xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P
             * AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB
             * Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey
             * Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW
             * JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr
             * 5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H
             * wQW6M0H7Zt8claGRla4fKkg= -----END CERTIFICATE-----
             */
            public Patch setClientCertificateEncryptedPrivateKey(java.lang.String clientCertificateEncryptedPrivateKey) {
              this.clientCertificateEncryptedPrivateKey = clientCertificateEncryptedPrivateKey;
              return this;
            }

            /**
             * 'passphrase' should be left unset if private key is not encrypted. Note that
             * 'passphrase' is not the password for web server, but an extra layer of security to
             * protected private key.
             */
            @com.google.api.client.util.Key("clientCertificate.passphrase")
            private java.lang.String clientCertificatePassphrase;

            /**' passphrase' should be left unset if private key is not encrypted. Note that 'passphrase' is not
          ' the password for web server, but an extra layer of security to protected private key.
          '

             */
            public java.lang.String getClientCertificatePassphrase() {
              return clientCertificatePassphrase;
            }

            /**
             * 'passphrase' should be left unset if private key is not encrypted. Note that
             * 'passphrase' is not the password for web server, but an extra layer of security to
             * protected private key.
             */
            public Patch setClientCertificatePassphrase(java.lang.String clientCertificatePassphrase) {
              this.clientCertificatePassphrase = clientCertificatePassphrase;
              return this;
            }

            /**
             * The ssl certificate encoded in PEM format. This string must include the begin header
             * and end footer lines. For example, -----BEGIN CERTIFICATE-----
             * MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV
             * BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw
             * MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET
             * MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA
             * vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1
             * JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB
             * xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P
             * AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB
             * Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey
             * Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW
             * JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr
             * 5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H
             * wQW6M0H7Zt8claGRla4fKkg= -----END CERTIFICATE-----
             */
            @com.google.api.client.util.Key("clientCertificate.sslCertificate")
            private java.lang.String clientCertificateSslCertificate;

            /** The ssl certificate encoded in PEM format. This string must include the begin header and end footer
           lines. For example, -----BEGIN CERTIFICATE-----
           MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV
           BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw
           MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET
           MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA
           vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1
           JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB
           xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P
           AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB
           Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey
           Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW
           JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr
           5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H wQW6M0H7Zt8claGRla4fKkg= -----END
           CERTIFICATE-----
             */
            public java.lang.String getClientCertificateSslCertificate() {
              return clientCertificateSslCertificate;
            }

            /**
             * The ssl certificate encoded in PEM format. This string must include the begin header
             * and end footer lines. For example, -----BEGIN CERTIFICATE-----
             * MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV
             * BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw
             * MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET
             * MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA
             * vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1
             * JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB
             * xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P
             * AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB
             * Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey
             * Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW
             * JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr
             * 5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H
             * wQW6M0H7Zt8claGRla4fKkg= -----END CERTIFICATE-----
             */
            public Patch setClientCertificateSslCertificate(java.lang.String clientCertificateSslCertificate) {
              this.clientCertificateSslCertificate = clientCertificateSslCertificate;
              return this;
            }

            /**
             * Field mask specifying the fields in the above AuthConfig that have been modified and
             * need to be updated.
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Field mask specifying the fields in the above AuthConfig that have been modified and need to be
           updated.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * Field mask specifying the fields in the above AuthConfig that have been modified and
             * need to be updated.
             */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the Certificates collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Integrations integrations = new Integrations(...);}
         *   {@code Integrations.Certificates.List request = integrations.certificates().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Certificates certificates() {
          return new Certificates();
        }

        /**
         * The "certificates" collection of methods.
         */
        public class Certificates {

          /**
           * Creates a new certificate. The certificate will be registered to the trawler service and will be
           * encrypted using cloud KMS and stored in Spanner Returns the certificate.
           *
           * Create a request for the method "certificates.create".
           *
           * This request holds the parameters needed by the integrations server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. "projects/{project}/locations/{location}" format.
           * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaCertificate}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaCertificate content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaCertificate> {

            private static final String REST_PATH = "v1alpha/{+parent}/certificates";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+$");

            /**
             * Creates a new certificate. The certificate will be registered to the trawler service and will
             * be encrypted using cloud KMS and stored in Spanner Returns the certificate.
             *
             * Create a request for the method "certificates.create".
             *
             * This request holds the parameters needed by the the integrations server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. "projects/{project}/locations/{location}" format.
             * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaCertificate}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaCertificate content) {
              super(Integrations.this, "POST", REST_PATH, content, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaCertificate.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/products/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. "projects/{project}/locations/{location}" format. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. "projects/{project}/locations/{location}" format.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. "projects/{project}/locations/{location}" format. */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/products/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Delete a certificate
           *
           * Create a request for the method "certificates.delete".
           *
           * This request holds the parameters needed by the integrations server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name that is associated with the Certificate.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+/certificates/[^/]+$");

            /**
             * Delete a certificate
             *
             * Create a request for the method "certificates.delete".
             *
             * This request holds the parameters needed by the the integrations server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name that is associated with the Certificate.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Integrations.this, "DELETE", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/products/[^/]+/certificates/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The name that is associated with the Certificate. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name that is associated with the Certificate.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. The name that is associated with the Certificate. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/products/[^/]+/certificates/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Get a certificates in the specified project.
           *
           * Create a request for the method "certificates.get".
           *
           * This request holds the parameters needed by the integrations server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The certificate to retrieve. Format:
           *        projects/{project}/locations/{location}/certificates/{certificate}
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaCertificate> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+/certificates/[^/]+$");

            /**
             * Get a certificates in the specified project.
             *
             * Create a request for the method "certificates.get".
             *
             * This request holds the parameters needed by the the integrations server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The certificate to retrieve. Format:
           *        projects/{project}/locations/{location}/certificates/{certificate}
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Integrations.this, "GET", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaCertificate.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/products/[^/]+/certificates/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The certificate to retrieve. Format:
             * projects/{project}/locations/{location}/certificates/{certificate}
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The certificate to retrieve. Format:
           projects/{project}/locations/{location}/certificates/{certificate}
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The certificate to retrieve. Format:
             * projects/{project}/locations/{location}/certificates/{certificate}
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/products/[^/]+/certificates/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * List all the certificates that match the filter. Restrict to certificate of current client only.
           *
           * Create a request for the method "certificates.list".
           *
           * This request holds the parameters needed by the integrations server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The client, which owns this collection of Certificates.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaListCertificatesResponse> {

            private static final String REST_PATH = "v1alpha/{+parent}/certificates";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+$");

            /**
             * List all the certificates that match the filter. Restrict to certificate of current client
             * only.
             *
             * Create a request for the method "certificates.list".
             *
             * This request holds the parameters needed by the the integrations server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The client, which owns this collection of Certificates.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Integrations.this, "GET", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaListCertificatesResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/products/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The client, which owns this collection of Certificates. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The client, which owns this collection of Certificates.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. The client, which owns this collection of Certificates. */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/products/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Filtering as supported in https://developers.google.com/authorized-
             * buyers/apis/guides/v2/list-filters.
             */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Filtering as supported in https://developers.google.com/authorized-buyers/apis/guides/v2/list-
           filters.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /**
             * Filtering as supported in https://developers.google.com/authorized-
             * buyers/apis/guides/v2/list-filters.
             */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** The size of entries in the response. If unspecified, defaults to 100. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The size of entries in the response. If unspecified, defaults to 100.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The size of entries in the response. If unspecified, defaults to 100. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The token returned in the previous response. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The token returned in the previous response.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The token returned in the previous response. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            /**
             * The mask which specifies fields that need to be returned in the Certificate's
             * response.
             */
            @com.google.api.client.util.Key
            private String readMask;

            /** The mask which specifies fields that need to be returned in the Certificate's response.
             */
            public String getReadMask() {
              return readMask;
            }

            /**
             * The mask which specifies fields that need to be returned in the Certificate's
             * response.
             */
            public List setReadMask(String readMask) {
              this.readMask = readMask;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates the certificate by id. If new certificate file is updated, it will register with the
           * trawler service, re-encrypt with cloud KMS and update the Spanner record. Other fields will
           * directly update the Spanner record. Returns the Certificate.
           *
           * Create a request for the method "certificates.patch".
           *
           * This request holds the parameters needed by the integrations server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Output only. Auto generated primary key
           * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaCertificate}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaCertificate content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaCertificate> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+/certificates/[^/]+$");

            /**
             * Updates the certificate by id. If new certificate file is updated, it will register with the
             * trawler service, re-encrypt with cloud KMS and update the Spanner record. Other fields will
             * directly update the Spanner record. Returns the Certificate.
             *
             * Create a request for the method "certificates.patch".
             *
             * This request holds the parameters needed by the the integrations server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Output only. Auto generated primary key
             * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaCertificate}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaCertificate content) {
              super(Integrations.this, "PATCH", REST_PATH, content, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaCertificate.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/products/[^/]+/certificates/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /** Output only. Auto generated primary key */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Output only. Auto generated primary key
             */
            public java.lang.String getName() {
              return name;
            }

            /** Output only. Auto generated primary key */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/products/[^/]+/certificates/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Field mask specifying the fields in the above Certificate that have been modified and
             * need to be updated.
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Field mask specifying the fields in the above Certificate that have been modified and need to be
           updated.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * Field mask specifying the fields in the above Certificate that have been modified and
             * need to be updated.
             */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the IntegrationsOperations collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Integrations integrations = new Integrations(...);}
         *   {@code Integrations.IntegrationsOperations.List request = integrations.integrations().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public IntegrationsOperations integrations() {
          return new IntegrationsOperations();
        }

        /**
         * The "integrations" collection of methods.
         */
        public class IntegrationsOperations {

          /**
           * PROTECT WITH A VISIBILITY LABEL. THIS METHOD WILL BE MOVED TO A SEPARATE SERVICE. Soft-deletes
           * the bundle.
           *
           * Create a request for the method "integrations.archiveBundle".
           *
           * This request holds the parameters needed by the integrations server.  After setting any optional
           * parameters, call the {@link ArchiveBundle#execute()} method to invoke the remote operation.
           *
           * @param name Required. The bundle to archive. Format:
           *        projects/{project}/locations/{location}/integrations/{integration}
           * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaArchiveBundleRequest}
           * @return the request
           */
          public ArchiveBundle archiveBundle(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaArchiveBundleRequest content) throws java.io.IOException {
            ArchiveBundle result = new ArchiveBundle(name, content);
            initialize(result);
            return result;
          }

          public class ArchiveBundle extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaArchiveBundleResponse> {

            private static final String REST_PATH = "v1alpha/{+name}:archiveBundle";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+$");

            /**
             * PROTECT WITH A VISIBILITY LABEL. THIS METHOD WILL BE MOVED TO A SEPARATE SERVICE. Soft-deletes
             * the bundle.
             *
             * Create a request for the method "integrations.archiveBundle".
             *
             * This request holds the parameters needed by the the integrations server.  After setting any
             * optional parameters, call the {@link ArchiveBundle#execute()} method to invoke the remote
             * operation. <p> {@link ArchiveBundle#initialize(com.google.api.client.googleapis.services.Abstra
             * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
             * the constructor. </p>
             *
             * @param name Required. The bundle to archive. Format:
           *        projects/{project}/locations/{location}/integrations/{integration}
             * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaArchiveBundleRequest}
             * @since 1.13
             */
            protected ArchiveBundle(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaArchiveBundleRequest content) {
              super(Integrations.this, "POST", REST_PATH, content, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaArchiveBundleResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+$");
              }
            }

            @Override
            public ArchiveBundle set$Xgafv(java.lang.String $Xgafv) {
              return (ArchiveBundle) super.set$Xgafv($Xgafv);
            }

            @Override
            public ArchiveBundle setAccessToken(java.lang.String accessToken) {
              return (ArchiveBundle) super.setAccessToken(accessToken);
            }

            @Override
            public ArchiveBundle setAlt(java.lang.String alt) {
              return (ArchiveBundle) super.setAlt(alt);
            }

            @Override
            public ArchiveBundle setCallback(java.lang.String callback) {
              return (ArchiveBundle) super.setCallback(callback);
            }

            @Override
            public ArchiveBundle setFields(java.lang.String fields) {
              return (ArchiveBundle) super.setFields(fields);
            }

            @Override
            public ArchiveBundle setKey(java.lang.String key) {
              return (ArchiveBundle) super.setKey(key);
            }

            @Override
            public ArchiveBundle setOauthToken(java.lang.String oauthToken) {
              return (ArchiveBundle) super.setOauthToken(oauthToken);
            }

            @Override
            public ArchiveBundle setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (ArchiveBundle) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public ArchiveBundle setQuotaUser(java.lang.String quotaUser) {
              return (ArchiveBundle) super.setQuotaUser(quotaUser);
            }

            @Override
            public ArchiveBundle setUploadType(java.lang.String uploadType) {
              return (ArchiveBundle) super.setUploadType(uploadType);
            }

            @Override
            public ArchiveBundle setUploadProtocol(java.lang.String uploadProtocol) {
              return (ArchiveBundle) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The bundle to archive. Format:
             * projects/{project}/locations/{location}/integrations/{integration}
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The bundle to archive. Format:
           projects/{project}/locations/{location}/integrations/{integration}
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The bundle to archive. Format:
             * projects/{project}/locations/{location}/integrations/{integration}
             */
            public ArchiveBundle setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public ArchiveBundle set(String parameterName, Object value) {
              return (ArchiveBundle) super.set(parameterName, value);
            }
          }
          /**
           * Executes integrations synchronously by passing the trigger id in the request body. The request is
           * not returned until the requested executions are either fulfilled or experienced an error. If the
           * integration name is not specified (passing `-`), all of the associated integration under the
           * given trigger_id will be executed. Otherwise only the specified integration for the given
           * `trigger_id` is executed. This is helpful for execution the integration from UI.
           *
           * Create a request for the method "integrations.execute".
           *
           * This request holds the parameters needed by the integrations server.  After setting any optional
           * parameters, call the {@link Execute#execute()} method to invoke the remote operation.
           *
           * @param name Required. The integration resource name.
           * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaExecuteIntegrationsRequest}
           * @return the request
           */
          public Execute execute(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaExecuteIntegrationsRequest content) throws java.io.IOException {
            Execute result = new Execute(name, content);
            initialize(result);
            return result;
          }

          public class Execute extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaExecuteIntegrationsResponse> {

            private static final String REST_PATH = "v1alpha/{+name}:execute";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+$");

            /**
             * Executes integrations synchronously by passing the trigger id in the request body. The request
             * is not returned until the requested executions are either fulfilled or experienced an error. If
             * the integration name is not specified (passing `-`), all of the associated integration under
             * the given trigger_id will be executed. Otherwise only the specified integration for the given
             * `trigger_id` is executed. This is helpful for execution the integration from UI.
             *
             * Create a request for the method "integrations.execute".
             *
             * This request holds the parameters needed by the the integrations server.  After setting any
             * optional parameters, call the {@link Execute#execute()} method to invoke the remote operation.
             * <p> {@link
             * Execute#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The integration resource name.
             * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaExecuteIntegrationsRequest}
             * @since 1.13
             */
            protected Execute(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaExecuteIntegrationsRequest content) {
              super(Integrations.this, "POST", REST_PATH, content, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaExecuteIntegrationsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+$");
              }
            }

            @Override
            public Execute set$Xgafv(java.lang.String $Xgafv) {
              return (Execute) super.set$Xgafv($Xgafv);
            }

            @Override
            public Execute setAccessToken(java.lang.String accessToken) {
              return (Execute) super.setAccessToken(accessToken);
            }

            @Override
            public Execute setAlt(java.lang.String alt) {
              return (Execute) super.setAlt(alt);
            }

            @Override
            public Execute setCallback(java.lang.String callback) {
              return (Execute) super.setCallback(callback);
            }

            @Override
            public Execute setFields(java.lang.String fields) {
              return (Execute) super.setFields(fields);
            }

            @Override
            public Execute setKey(java.lang.String key) {
              return (Execute) super.setKey(key);
            }

            @Override
            public Execute setOauthToken(java.lang.String oauthToken) {
              return (Execute) super.setOauthToken(oauthToken);
            }

            @Override
            public Execute setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Execute) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Execute setQuotaUser(java.lang.String quotaUser) {
              return (Execute) super.setQuotaUser(quotaUser);
            }

            @Override
            public Execute setUploadType(java.lang.String uploadType) {
              return (Execute) super.setUploadType(uploadType);
            }

            @Override
            public Execute setUploadProtocol(java.lang.String uploadProtocol) {
              return (Execute) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The integration resource name. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The integration resource name.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. The integration resource name. */
            public Execute setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Execute set(String parameterName, Object value) {
              return (Execute) super.set(parameterName, value);
            }
          }
          /**
           * Returns the list of all integrations in the specified project.
           *
           * Create a request for the method "integrations.list".
           *
           * This request holds the parameters needed by the integrations server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Project and location from which the integrations should be listed. Format:
           *        projects/{project}
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaListIntegrationsResponse> {

            private static final String REST_PATH = "v1alpha/{+parent}/integrations";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+$");

            /**
             * Returns the list of all integrations in the specified project.
             *
             * Create a request for the method "integrations.list".
             *
             * This request holds the parameters needed by the the integrations server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Project and location from which the integrations should be listed. Format:
           *        projects/{project}
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Integrations.this, "GET", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaListIntegrationsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/products/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Project and location from which the integrations should be listed. Format:
             * projects/{project}
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Project and location from which the integrations should be listed. Format:
           projects/{project}
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Project and location from which the integrations should be listed. Format:
             * projects/{project}
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/products/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Filter on fields of IntegrationVersion. Fields can be compared with literal values by
             * use of ":" (containment), "=" (equality), ">" (greater), "<" (less than), >="
             * (greater than or equal to), "<=" (less than or equal to), and "!=" (inequality)
             * operators. Negation, conjunction, and disjunction are written using NOT, AND, and OR
             * keywords. For example, organization_id=\"1\" AND state=ACTIVE AND description:"test".
             * Filtering cannot be performed on repeated fields like `task_config`.
             */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Filter on fields of IntegrationVersion. Fields can be compared with literal values by use of ":"
           (containment), "=" (equality), ">" (greater), "<" (less than), >=" (greater than or equal to), "<="
           (less than or equal to), and "!=" (inequality) operators. Negation, conjunction, and disjunction
           are written using NOT, AND, and OR keywords. For example, organization_id=\"1\" AND state=ACTIVE
           AND description:"test". Filtering cannot be performed on repeated fields like `task_config`.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /**
             * Filter on fields of IntegrationVersion. Fields can be compared with literal values by
             * use of ":" (containment), "=" (equality), ">" (greater), "<" (less than), >="
             * (greater than or equal to), "<=" (less than or equal to), and "!=" (inequality)
             * operators. Negation, conjunction, and disjunction are written using NOT, AND, and OR
             * keywords. For example, organization_id=\"1\" AND state=ACTIVE AND description:"test".
             * Filtering cannot be performed on repeated fields like `task_config`.
             */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /**
             * The results would be returned in order you specified here. Supported sort keys are:
             * Descending sort order by "last_modified_time", "created_time", "snapshot_number".
             * Ascending sort order by the integration name.
             */
            @com.google.api.client.util.Key
            private java.lang.String orderBy;

            /** The results would be returned in order you specified here. Supported sort keys are: Descending sort
           order by "last_modified_time", "created_time", "snapshot_number". Ascending sort order by the
           integration name.
             */
            public java.lang.String getOrderBy() {
              return orderBy;
            }

            /**
             * The results would be returned in order you specified here. Supported sort keys are:
             * Descending sort order by "last_modified_time", "created_time", "snapshot_number".
             * Ascending sort order by the integration name.
             */
            public List setOrderBy(java.lang.String orderBy) {
              this.orderBy = orderBy;
              return this;
            }

            /** The page size for the resquest. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The page size for the resquest.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The page size for the resquest. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The page token for the resquest. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The page token for the resquest.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The page token for the resquest. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Schedules an integration for execution by passing the trigger id and the scheduled time in the
           * request body.
           *
           * Create a request for the method "integrations.schedule".
           *
           * This request holds the parameters needed by the integrations server.  After setting any optional
           * parameters, call the {@link Schedule#execute()} method to invoke the remote operation.
           *
           * @param name The integration resource name.
           * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaScheduleIntegrationsRequest}
           * @return the request
           */
          public Schedule schedule(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaScheduleIntegrationsRequest content) throws java.io.IOException {
            Schedule result = new Schedule(name, content);
            initialize(result);
            return result;
          }

          public class Schedule extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaScheduleIntegrationsResponse> {

            private static final String REST_PATH = "v1alpha/{+name}:schedule";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+$");

            /**
             * Schedules an integration for execution by passing the trigger id and the scheduled time in the
             * request body.
             *
             * Create a request for the method "integrations.schedule".
             *
             * This request holds the parameters needed by the the integrations server.  After setting any
             * optional parameters, call the {@link Schedule#execute()} method to invoke the remote operation.
             * <p> {@link
             * Schedule#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The integration resource name.
             * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaScheduleIntegrationsRequest}
             * @since 1.13
             */
            protected Schedule(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaScheduleIntegrationsRequest content) {
              super(Integrations.this, "POST", REST_PATH, content, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaScheduleIntegrationsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+$");
              }
            }

            @Override
            public Schedule set$Xgafv(java.lang.String $Xgafv) {
              return (Schedule) super.set$Xgafv($Xgafv);
            }

            @Override
            public Schedule setAccessToken(java.lang.String accessToken) {
              return (Schedule) super.setAccessToken(accessToken);
            }

            @Override
            public Schedule setAlt(java.lang.String alt) {
              return (Schedule) super.setAlt(alt);
            }

            @Override
            public Schedule setCallback(java.lang.String callback) {
              return (Schedule) super.setCallback(callback);
            }

            @Override
            public Schedule setFields(java.lang.String fields) {
              return (Schedule) super.setFields(fields);
            }

            @Override
            public Schedule setKey(java.lang.String key) {
              return (Schedule) super.setKey(key);
            }

            @Override
            public Schedule setOauthToken(java.lang.String oauthToken) {
              return (Schedule) super.setOauthToken(oauthToken);
            }

            @Override
            public Schedule setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Schedule) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Schedule setQuotaUser(java.lang.String quotaUser) {
              return (Schedule) super.setQuotaUser(quotaUser);
            }

            @Override
            public Schedule setUploadType(java.lang.String uploadType) {
              return (Schedule) super.setUploadType(uploadType);
            }

            @Override
            public Schedule setUploadProtocol(java.lang.String uploadProtocol) {
              return (Schedule) super.setUploadProtocol(uploadProtocol);
            }

            /** The integration resource name. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The integration resource name.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The integration resource name. */
            public Schedule setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Schedule set(String parameterName, Object value) {
              return (Schedule) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the Executions collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Integrations integrations = new Integrations(...);}
           *   {@code Integrations.Executions.List request = integrations.executions().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Executions executions() {
            return new Executions();
          }

          /**
           * The "executions" collection of methods.
           */
          public class Executions {

            /**
             * Cancellation of an execution
             *
             * Create a request for the method "executions.cancel".
             *
             * This request holds the parameters needed by the integrations server.  After setting any optional
             * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
             *
             * @param name Required. The execution resource name. Format: projects/{gcp_project_id}/locations/{location}/produc
             *        ts/{product}/integrations/{integration_id}/executions/{execution_id}
             * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaCancelExecutionRequest}
             * @return the request
             */
            public Cancel cancel(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaCancelExecutionRequest content) throws java.io.IOException {
              Cancel result = new Cancel(name, content);
              initialize(result);
              return result;
            }

            public class Cancel extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaCancelExecutionResponse> {

              private static final String REST_PATH = "v1alpha/{+name}:cancel";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/executions/[^/]+$");

              /**
               * Cancellation of an execution
               *
               * Create a request for the method "executions.cancel".
               *
               * This request holds the parameters needed by the the integrations server.  After setting any
               * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
               * <p> {@link
               * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The execution resource name. Format: projects/{gcp_project_id}/locations/{location}/produc
             *        ts/{product}/integrations/{integration_id}/executions/{execution_id}
               * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaCancelExecutionRequest}
               * @since 1.13
               */
              protected Cancel(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaCancelExecutionRequest content) {
                super(Integrations.this, "POST", REST_PATH, content, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaCancelExecutionResponse.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/executions/[^/]+$");
                }
              }

              @Override
              public Cancel set$Xgafv(java.lang.String $Xgafv) {
                return (Cancel) super.set$Xgafv($Xgafv);
              }

              @Override
              public Cancel setAccessToken(java.lang.String accessToken) {
                return (Cancel) super.setAccessToken(accessToken);
              }

              @Override
              public Cancel setAlt(java.lang.String alt) {
                return (Cancel) super.setAlt(alt);
              }

              @Override
              public Cancel setCallback(java.lang.String callback) {
                return (Cancel) super.setCallback(callback);
              }

              @Override
              public Cancel setFields(java.lang.String fields) {
                return (Cancel) super.setFields(fields);
              }

              @Override
              public Cancel setKey(java.lang.String key) {
                return (Cancel) super.setKey(key);
              }

              @Override
              public Cancel setOauthToken(java.lang.String oauthToken) {
                return (Cancel) super.setOauthToken(oauthToken);
              }

              @Override
              public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Cancel) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Cancel setQuotaUser(java.lang.String quotaUser) {
                return (Cancel) super.setQuotaUser(quotaUser);
              }

              @Override
              public Cancel setUploadType(java.lang.String uploadType) {
                return (Cancel) super.setUploadType(uploadType);
              }

              @Override
              public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
                return (Cancel) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The execution resource name. Format: projects/{gcp_project_id}/locations/
               * {location}/products/{product}/integrations/{integration_id}/executions/{execution_i
               * d}
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The execution resource name. Format: projects/{gcp_project_id}/locations/{location}/produ
             cts/{product}/integrations/{integration_id}/executions/{execution_id}
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The execution resource name. Format: projects/{gcp_project_id}/locations/
               * {location}/products/{product}/integrations/{integration_id}/executions/{execution_i
               * d}
               */
              public Cancel setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/executions/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Cancel set(String parameterName, Object value) {
                return (Cancel) super.set(parameterName, value);
              }
            }
            /**
             * Get an execution in the specified project.
             *
             * Create a request for the method "executions.get".
             *
             * This request holds the parameters needed by the integrations server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name Required. The execution resource name. Format: projects/{gcp_project_id}/locations/{location}/produc
             *        ts/{product}/integrations/{integration_id}/executions/{execution_id}
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaExecution> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/executions/[^/]+$");

              /**
               * Get an execution in the specified project.
               *
               * Create a request for the method "executions.get".
               *
               * This request holds the parameters needed by the the integrations server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The execution resource name. Format: projects/{gcp_project_id}/locations/{location}/produc
             *        ts/{product}/integrations/{integration_id}/executions/{execution_id}
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(Integrations.this, "GET", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaExecution.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/executions/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The execution resource name. Format: projects/{gcp_project_id}/locations/
               * {location}/products/{product}/integrations/{integration_id}/executions/{execution_i
               * d}
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The execution resource name. Format: projects/{gcp_project_id}/locations/{location}/produ
             cts/{product}/integrations/{integration_id}/executions/{execution_id}
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The execution resource name. Format: projects/{gcp_project_id}/locations/
               * {location}/products/{product}/integrations/{integration_id}/executions/{execution_i
               * d}
               */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/executions/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Lists the results of all the integration executions. The response includes the same information
             * as the [execution log](https://cloud.google.com/application-integration/docs/viewing-logs) in the
             * Integration UI.
             *
             * Create a request for the method "executions.list".
             *
             * This request holds the parameters needed by the integrations server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The parent resource name of the integration execution.
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaListExecutionsResponse> {

              private static final String REST_PATH = "v1alpha/{+parent}/executions";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+$");

              /**
               * Lists the results of all the integration executions. The response includes the same information
               * as the [execution log](https://cloud.google.com/application-integration/docs/viewing-logs) in
               * the Integration UI.
               *
               * Create a request for the method "executions.list".
               *
               * This request holds the parameters needed by the the integrations server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The parent resource name of the integration execution.
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(Integrations.this, "GET", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaListExecutionsResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The parent resource name of the integration execution. */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The parent resource name of the integration execution.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /** Required. The parent resource name of the integration execution. */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Optional. Standard filter field, we support filtering on all fields in
               * EventExecutionParamIndexes table. All fields support for EQUALS, in additional:
               * CreateTimestamp support for LESS_THAN, GREATER_THAN ParameterKey, ParameterValue,
               * ParameterType support for HAS For example: "parameter_value" HAS \"parameter1\"
               * Also supports operators like AND, OR, NOT For example, trigger_id=\"id1\" AND
               * event_execution_state=\"FAILED\"
               */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** Optional. Standard filter field, we support filtering on all fields in EventExecutionParamIndexes
             table. All fields support for EQUALS, in additional: CreateTimestamp support for LESS_THAN,
             GREATER_THAN ParameterKey, ParameterValue, ParameterType support for HAS For example:
             "parameter_value" HAS \"parameter1\" Also supports operators like AND, OR, NOT For example,
             trigger_id=\"id1\" AND event_execution_state=\"FAILED\"
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /**
               * Optional. Standard filter field, we support filtering on all fields in
               * EventExecutionParamIndexes table. All fields support for EQUALS, in additional:
               * CreateTimestamp support for LESS_THAN, GREATER_THAN ParameterKey, ParameterValue,
               * ParameterType support for HAS For example: "parameter_value" HAS \"parameter1\"
               * Also supports operators like AND, OR, NOT For example, trigger_id=\"id1\" AND
               * event_execution_state=\"FAILED\"
               */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /** Optional user-provided custom filter. */
              @com.google.api.client.util.Key("filterParams.customFilter")
              private java.lang.String filterParamsCustomFilter;

              /** Optional user-provided custom filter.
               */
              public java.lang.String getFilterParamsCustomFilter() {
                return filterParamsCustomFilter;
              }

              /** Optional user-provided custom filter. */
              public List setFilterParamsCustomFilter(java.lang.String filterParamsCustomFilter) {
                this.filterParamsCustomFilter = filterParamsCustomFilter;
                return this;
              }

              /** End timestamp. */
              @com.google.api.client.util.Key("filterParams.endTime")
              private java.lang.Long filterParamsEndTime;

              /** End timestamp.
               */
              public java.lang.Long getFilterParamsEndTime() {
                return filterParamsEndTime;
              }

              /** End timestamp. */
              public List setFilterParamsEndTime(java.lang.Long filterParamsEndTime) {
                this.filterParamsEndTime = filterParamsEndTime;
                return this;
              }

              /** List of possible event statuses. */
              @com.google.api.client.util.Key("filterParams.eventStatuses")
              private java.util.List<java.lang.String> filterParamsEventStatuses;

              /** List of possible event statuses.
               */
              public java.util.List<java.lang.String> getFilterParamsEventStatuses() {
                return filterParamsEventStatuses;
              }

              /** List of possible event statuses. */
              public List setFilterParamsEventStatuses(java.util.List<java.lang.String> filterParamsEventStatuses) {
                this.filterParamsEventStatuses = filterParamsEventStatuses;
                return this;
              }

              /** Execution id. */
              @com.google.api.client.util.Key("filterParams.executionId")
              private java.lang.String filterParamsExecutionId;

              /** Execution id.
               */
              public java.lang.String getFilterParamsExecutionId() {
                return filterParamsExecutionId;
              }

              /** Execution id. */
              public List setFilterParamsExecutionId(java.lang.String filterParamsExecutionId) {
                this.filterParamsExecutionId = filterParamsExecutionId;
                return this;
              }

              /** Param key. DEPRECATED. User parameter_pair_key instead. */
              @com.google.api.client.util.Key("filterParams.parameterKey")
              private java.lang.String filterParamsParameterKey;

              /** Param key. DEPRECATED. User parameter_pair_key instead.
               */
              public java.lang.String getFilterParamsParameterKey() {
                return filterParamsParameterKey;
              }

              /** Param key. DEPRECATED. User parameter_pair_key instead. */
              public List setFilterParamsParameterKey(java.lang.String filterParamsParameterKey) {
                this.filterParamsParameterKey = filterParamsParameterKey;
                return this;
              }

              /** Param key in the key value pair filter. */
              @com.google.api.client.util.Key("filterParams.parameterPairKey")
              private java.lang.String filterParamsParameterPairKey;

              /** Param key in the key value pair filter.
               */
              public java.lang.String getFilterParamsParameterPairKey() {
                return filterParamsParameterPairKey;
              }

              /** Param key in the key value pair filter. */
              public List setFilterParamsParameterPairKey(java.lang.String filterParamsParameterPairKey) {
                this.filterParamsParameterPairKey = filterParamsParameterPairKey;
                return this;
              }

              /** Param value in the key value pair filter. */
              @com.google.api.client.util.Key("filterParams.parameterPairValue")
              private java.lang.String filterParamsParameterPairValue;

              /** Param value in the key value pair filter.
               */
              public java.lang.String getFilterParamsParameterPairValue() {
                return filterParamsParameterPairValue;
              }

              /** Param value in the key value pair filter. */
              public List setFilterParamsParameterPairValue(java.lang.String filterParamsParameterPairValue) {
                this.filterParamsParameterPairValue = filterParamsParameterPairValue;
                return this;
              }

              /** Param type. */
              @com.google.api.client.util.Key("filterParams.parameterType")
              private java.lang.String filterParamsParameterType;

              /** Param type.
               */
              public java.lang.String getFilterParamsParameterType() {
                return filterParamsParameterType;
              }

              /** Param type. */
              public List setFilterParamsParameterType(java.lang.String filterParamsParameterType) {
                this.filterParamsParameterType = filterParamsParameterType;
                return this;
              }

              /** Param value. DEPRECATED. User parameter_pair_value instead. */
              @com.google.api.client.util.Key("filterParams.parameterValue")
              private java.lang.String filterParamsParameterValue;

              /** Param value. DEPRECATED. User parameter_pair_value instead.
               */
              public java.lang.String getFilterParamsParameterValue() {
                return filterParamsParameterValue;
              }

              /** Param value. DEPRECATED. User parameter_pair_value instead. */
              public List setFilterParamsParameterValue(java.lang.String filterParamsParameterValue) {
                this.filterParamsParameterValue = filterParamsParameterValue;
                return this;
              }

              /** Start timestamp. */
              @com.google.api.client.util.Key("filterParams.startTime")
              private java.lang.Long filterParamsStartTime;

              /** Start timestamp.
               */
              public java.lang.Long getFilterParamsStartTime() {
                return filterParamsStartTime;
              }

              /** Start timestamp. */
              public List setFilterParamsStartTime(java.lang.Long filterParamsStartTime) {
                this.filterParamsStartTime = filterParamsStartTime;
                return this;
              }

              /** List of possible task statuses. */
              @com.google.api.client.util.Key("filterParams.taskStatuses")
              private java.util.List<java.lang.String> filterParamsTaskStatuses;

              /** List of possible task statuses.
               */
              public java.util.List<java.lang.String> getFilterParamsTaskStatuses() {
                return filterParamsTaskStatuses;
              }

              /** List of possible task statuses. */
              public List setFilterParamsTaskStatuses(java.util.List<java.lang.String> filterParamsTaskStatuses) {
                this.filterParamsTaskStatuses = filterParamsTaskStatuses;
                return this;
              }

              /** Workflow name. */
              @com.google.api.client.util.Key("filterParams.workflowName")
              private java.lang.String filterParamsWorkflowName;

              /** Workflow name.
               */
              public java.lang.String getFilterParamsWorkflowName() {
                return filterParamsWorkflowName;
              }

              /** Workflow name. */
              public List setFilterParamsWorkflowName(java.lang.String filterParamsWorkflowName) {
                this.filterParamsWorkflowName = filterParamsWorkflowName;
                return this;
              }

              /**
               * Optional. The results would be returned in order you specified here. Currently
               * supporting "last_modified_time" and "create_time".
               */
              @com.google.api.client.util.Key
              private java.lang.String orderBy;

              /** Optional. The results would be returned in order you specified here. Currently supporting
             "last_modified_time" and "create_time".
               */
              public java.lang.String getOrderBy() {
                return orderBy;
              }

              /**
               * Optional. The results would be returned in order you specified here. Currently
               * supporting "last_modified_time" and "create_time".
               */
              public List setOrderBy(java.lang.String orderBy) {
                this.orderBy = orderBy;
                return this;
              }

              /** Optional. The size of entries in the response. */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** Optional. The size of entries in the response.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /** Optional. The size of entries in the response. */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /** Optional. The token returned in the previous response. */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** Optional. The token returned in the previous response.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /** Optional. The token returned in the previous response. */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              /**
               * Optional. View mask for the response data. If set, only the field specified will be
               * returned as part of the result. If not set, all fields in event execution info will
               * be filled and returned.
               */
              @com.google.api.client.util.Key
              private String readMask;

              /** Optional. View mask for the response data. If set, only the field specified will be returned as
             part of the result. If not set, all fields in event execution info will be filled and returned.
               */
              public String getReadMask() {
                return readMask;
              }

              /**
               * Optional. View mask for the response data. If set, only the field specified will be
               * returned as part of the result. If not set, all fields in event execution info will
               * be filled and returned.
               */
              public List setReadMask(String readMask) {
                this.readMask = readMask;
                return this;
              }

              /**
               * Optional. If true, the service will use the most recent acl information to list
               * event execution infos and renew the acl cache. Note that fetching the most recent
               * acl is synchronous, so it will increase RPC call latency.
               */
              @com.google.api.client.util.Key
              private java.lang.Boolean refreshAcl;

              /** Optional. If true, the service will use the most recent acl information to list event execution
             infos and renew the acl cache. Note that fetching the most recent acl is synchronous, so it will
             increase RPC call latency.
               */
              public java.lang.Boolean getRefreshAcl() {
                return refreshAcl;
              }

              /**
               * Optional. If true, the service will use the most recent acl information to list
               * event execution infos and renew the acl cache. Note that fetching the most recent
               * acl is synchronous, so it will increase RPC call latency.
               */
              public List setRefreshAcl(java.lang.Boolean refreshAcl) {
                this.refreshAcl = refreshAcl;
                return this;
              }

              /**
               * Optional. If true, the service will truncate the params to only keep the first 1000
               * characters of string params and empty the executions in order to make response
               * smaller. Only works for UI and when the params fields are not filtered out.
               */
              @com.google.api.client.util.Key
              private java.lang.Boolean truncateParams;

              /** Optional. If true, the service will truncate the params to only keep the first 1000 characters of
             string params and empty the executions in order to make response smaller. Only works for UI and
             when the params fields are not filtered out.
               */
              public java.lang.Boolean getTruncateParams() {
                return truncateParams;
              }

              /**
               * Optional. If true, the service will truncate the params to only keep the first 1000
               * characters of string params and empty the executions in order to make response
               * smaller. Only works for UI and when the params fields are not filtered out.
               */
              public List setTruncateParams(java.lang.Boolean truncateParams) {
                this.truncateParams = truncateParams;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }

            /**
             * An accessor for creating requests from the Suspensions collection.
             *
             * <p>The typical use is:</p>
             * <pre>
             *   {@code Integrations integrations = new Integrations(...);}
             *   {@code Integrations.Suspensions.List request = integrations.suspensions().list(parameters ...)}
             * </pre>
             *
             * @return the resource collection
             */
            public Suspensions suspensions() {
              return new Suspensions();
            }

            /**
             * The "suspensions" collection of methods.
             */
            public class Suspensions {

              /**
               * * Lifts suspension for advanced suspension task. Fetch corresponding suspension with provided
               * suspension Id, resolve suspension, and set up suspension result for the Suspension Task.
               *
               * Create a request for the method "suspensions.lift".
               *
               * This request holds the parameters needed by the integrations server.  After setting any optional
               * parameters, call the {@link Lift#execute()} method to invoke the remote operation.
               *
               * @param name Required. The resource that the suspension belongs to. "projects/{project}/locations/{location}/prod
               *        ucts/{product}/integrations/{integration}/executions/{execution}/suspensions/{suspenion}"
               *        format.
               * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaLiftSuspensionRequest}
               * @return the request
               */
              public Lift lift(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaLiftSuspensionRequest content) throws java.io.IOException {
                Lift result = new Lift(name, content);
                initialize(result);
                return result;
              }

              public class Lift extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaLiftSuspensionResponse> {

                private static final String REST_PATH = "v1alpha/{+name}:lift";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/executions/[^/]+/suspensions/[^/]+$");

                /**
                 * * Lifts suspension for advanced suspension task. Fetch corresponding suspension with provided
                 * suspension Id, resolve suspension, and set up suspension result for the Suspension Task.
                 *
                 * Create a request for the method "suspensions.lift".
                 *
                 * This request holds the parameters needed by the the integrations server.  After setting any
                 * optional parameters, call the {@link Lift#execute()} method to invoke the remote operation. <p>
                 * {@link Lift#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name Required. The resource that the suspension belongs to. "projects/{project}/locations/{location}/prod
               *        ucts/{product}/integrations/{integration}/executions/{execution}/suspensions/{suspenion}"
               *        format.
                 * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaLiftSuspensionRequest}
                 * @since 1.13
                 */
                protected Lift(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaLiftSuspensionRequest content) {
                  super(Integrations.this, "POST", REST_PATH, content, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaLiftSuspensionResponse.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/executions/[^/]+/suspensions/[^/]+$");
                  }
                }

                @Override
                public Lift set$Xgafv(java.lang.String $Xgafv) {
                  return (Lift) super.set$Xgafv($Xgafv);
                }

                @Override
                public Lift setAccessToken(java.lang.String accessToken) {
                  return (Lift) super.setAccessToken(accessToken);
                }

                @Override
                public Lift setAlt(java.lang.String alt) {
                  return (Lift) super.setAlt(alt);
                }

                @Override
                public Lift setCallback(java.lang.String callback) {
                  return (Lift) super.setCallback(callback);
                }

                @Override
                public Lift setFields(java.lang.String fields) {
                  return (Lift) super.setFields(fields);
                }

                @Override
                public Lift setKey(java.lang.String key) {
                  return (Lift) super.setKey(key);
                }

                @Override
                public Lift setOauthToken(java.lang.String oauthToken) {
                  return (Lift) super.setOauthToken(oauthToken);
                }

                @Override
                public Lift setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Lift) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Lift setQuotaUser(java.lang.String quotaUser) {
                  return (Lift) super.setQuotaUser(quotaUser);
                }

                @Override
                public Lift setUploadType(java.lang.String uploadType) {
                  return (Lift) super.setUploadType(uploadType);
                }

                @Override
                public Lift setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Lift) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The resource that the suspension belongs to. "projects/{project}/locati
                 * ons/{location}/products/{product}/integrations/{integration}/executions/{executio
                 * n}/suspensions/{suspenion}" format.
                 */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** Required. The resource that the suspension belongs to. "projects/{project}/locations/{location}/pro
               ducts/{product}/integrations/{integration}/executions/{execution}/suspensions/{suspenion}" format.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /**
                 * Required. The resource that the suspension belongs to. "projects/{project}/locati
                 * ons/{location}/products/{product}/integrations/{integration}/executions/{executio
                 * n}/suspensions/{suspenion}" format.
                 */
                public Lift setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/executions/[^/]+/suspensions/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                @Override
                public Lift set(String parameterName, Object value) {
                  return (Lift) super.set(parameterName, value);
                }
              }
              /**
               * * Lists suspensions associated with a specific execution. Only those with permissions to resolve
               * the relevant suspensions will be able to view them.
               *
               * Create a request for the method "suspensions.list".
               *
               * This request holds the parameters needed by the integrations server.  After setting any optional
               * parameters, call the {@link List#execute()} method to invoke the remote operation.
               *
               * @param parent Required. projects/{gcp_project_id}/locations/{location}/products/{product}/integrations/{integratio
               *        n_name}/executions/{execution_name}
               * @return the request
               */
              public List list(java.lang.String parent) throws java.io.IOException {
                List result = new List(parent);
                initialize(result);
                return result;
              }

              public class List extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaListSuspensionsResponse> {

                private static final String REST_PATH = "v1alpha/{+parent}/suspensions";

                private final java.util.regex.Pattern PARENT_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/executions/[^/]+$");

                /**
                 * * Lists suspensions associated with a specific execution. Only those with permissions to
                 * resolve the relevant suspensions will be able to view them.
                 *
                 * Create a request for the method "suspensions.list".
                 *
                 * This request holds the parameters needed by the the integrations server.  After setting any
                 * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
                 * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param parent Required. projects/{gcp_project_id}/locations/{location}/products/{product}/integrations/{integratio
               *        n_name}/executions/{execution_name}
                 * @since 1.13
                 */
                protected List(java.lang.String parent) {
                  super(Integrations.this, "GET", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaListSuspensionsResponse.class);
                  this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/executions/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public List set$Xgafv(java.lang.String $Xgafv) {
                  return (List) super.set$Xgafv($Xgafv);
                }

                @Override
                public List setAccessToken(java.lang.String accessToken) {
                  return (List) super.setAccessToken(accessToken);
                }

                @Override
                public List setAlt(java.lang.String alt) {
                  return (List) super.setAlt(alt);
                }

                @Override
                public List setCallback(java.lang.String callback) {
                  return (List) super.setCallback(callback);
                }

                @Override
                public List setFields(java.lang.String fields) {
                  return (List) super.setFields(fields);
                }

                @Override
                public List setKey(java.lang.String key) {
                  return (List) super.setKey(key);
                }

                @Override
                public List setOauthToken(java.lang.String oauthToken) {
                  return (List) super.setOauthToken(oauthToken);
                }

                @Override
                public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (List) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public List setQuotaUser(java.lang.String quotaUser) {
                  return (List) super.setQuotaUser(quotaUser);
                }

                @Override
                public List setUploadType(java.lang.String uploadType) {
                  return (List) super.setUploadType(uploadType);
                }

                @Override
                public List setUploadProtocol(java.lang.String uploadProtocol) {
                  return (List) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. projects/{gcp_project_id}/locations/{location}/products/{product}/integ
                 * rations/{integration_name}/executions/{execution_name}
                 */
                @com.google.api.client.util.Key
                private java.lang.String parent;

                /** Required. projects/{gcp_project_id}/locations/{location}/products/{product}/integrations/{integrati
               on_name}/executions/{execution_name}
                 */
                public java.lang.String getParent() {
                  return parent;
                }

                /**
                 * Required. projects/{gcp_project_id}/locations/{location}/products/{product}/integ
                 * rations/{integration_name}/executions/{execution_name}
                 */
                public List setParent(java.lang.String parent) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/executions/[^/]+$");
                  }
                  this.parent = parent;
                  return this;
                }

                /** Standard filter field. */
                @com.google.api.client.util.Key
                private java.lang.String filter;

                /** Standard filter field.
                 */
                public java.lang.String getFilter() {
                  return filter;
                }

                /** Standard filter field. */
                public List setFilter(java.lang.String filter) {
                  this.filter = filter;
                  return this;
                }

                /** Field name to order by. */
                @com.google.api.client.util.Key
                private java.lang.String orderBy;

                /** Field name to order by.
                 */
                public java.lang.String getOrderBy() {
                  return orderBy;
                }

                /** Field name to order by. */
                public List setOrderBy(java.lang.String orderBy) {
                  this.orderBy = orderBy;
                  return this;
                }

                /** Maximum number of entries in the response. */
                @com.google.api.client.util.Key
                private java.lang.Integer pageSize;

                /** Maximum number of entries in the response.
                 */
                public java.lang.Integer getPageSize() {
                  return pageSize;
                }

                /** Maximum number of entries in the response. */
                public List setPageSize(java.lang.Integer pageSize) {
                  this.pageSize = pageSize;
                  return this;
                }

                /** Token to retrieve a specific page. */
                @com.google.api.client.util.Key
                private java.lang.String pageToken;

                /** Token to retrieve a specific page.
                 */
                public java.lang.String getPageToken() {
                  return pageToken;
                }

                /** Token to retrieve a specific page. */
                public List setPageToken(java.lang.String pageToken) {
                  this.pageToken = pageToken;
                  return this;
                }

                @Override
                public List set(String parameterName, Object value) {
                  return (List) super.set(parameterName, value);
                }
              }
              /**
               * * Resolves (lifts/rejects) any number of suspensions. If the integration is already running, only
               * the status of the suspension is updated. Otherwise, the suspended integration will begin
               * execution again.
               *
               * Create a request for the method "suspensions.resolve".
               *
               * This request holds the parameters needed by the integrations server.  After setting any optional
               * parameters, call the {@link Resolve#execute()} method to invoke the remote operation.
               *
               * @param name Required. projects/{gcp_project_id}/locations/{location}/products/{product}/integrations/{integratio
               *        n_name}/executions/{execution_name}/suspensions/{suspension_id}
               * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaResolveSuspensionRequest}
               * @return the request
               */
              public Resolve resolve(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaResolveSuspensionRequest content) throws java.io.IOException {
                Resolve result = new Resolve(name, content);
                initialize(result);
                return result;
              }

              public class Resolve extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaResolveSuspensionResponse> {

                private static final String REST_PATH = "v1alpha/{+name}:resolve";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/executions/[^/]+/suspensions/[^/]+$");

                /**
                 * * Resolves (lifts/rejects) any number of suspensions. If the integration is already running,
                 * only the status of the suspension is updated. Otherwise, the suspended integration will begin
                 * execution again.
                 *
                 * Create a request for the method "suspensions.resolve".
                 *
                 * This request holds the parameters needed by the the integrations server.  After setting any
                 * optional parameters, call the {@link Resolve#execute()} method to invoke the remote operation.
                 * <p> {@link
                 * Resolve#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                 * be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name Required. projects/{gcp_project_id}/locations/{location}/products/{product}/integrations/{integratio
               *        n_name}/executions/{execution_name}/suspensions/{suspension_id}
                 * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaResolveSuspensionRequest}
                 * @since 1.13
                 */
                protected Resolve(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaResolveSuspensionRequest content) {
                  super(Integrations.this, "POST", REST_PATH, content, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaResolveSuspensionResponse.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/executions/[^/]+/suspensions/[^/]+$");
                  }
                }

                @Override
                public Resolve set$Xgafv(java.lang.String $Xgafv) {
                  return (Resolve) super.set$Xgafv($Xgafv);
                }

                @Override
                public Resolve setAccessToken(java.lang.String accessToken) {
                  return (Resolve) super.setAccessToken(accessToken);
                }

                @Override
                public Resolve setAlt(java.lang.String alt) {
                  return (Resolve) super.setAlt(alt);
                }

                @Override
                public Resolve setCallback(java.lang.String callback) {
                  return (Resolve) super.setCallback(callback);
                }

                @Override
                public Resolve setFields(java.lang.String fields) {
                  return (Resolve) super.setFields(fields);
                }

                @Override
                public Resolve setKey(java.lang.String key) {
                  return (Resolve) super.setKey(key);
                }

                @Override
                public Resolve setOauthToken(java.lang.String oauthToken) {
                  return (Resolve) super.setOauthToken(oauthToken);
                }

                @Override
                public Resolve setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Resolve) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Resolve setQuotaUser(java.lang.String quotaUser) {
                  return (Resolve) super.setQuotaUser(quotaUser);
                }

                @Override
                public Resolve setUploadType(java.lang.String uploadType) {
                  return (Resolve) super.setUploadType(uploadType);
                }

                @Override
                public Resolve setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Resolve) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. projects/{gcp_project_id}/locations/{location}/products/{product}/integ
                 * rations/{integration_name}/executions/{execution_name}/suspensions/{suspension_id
                 * }
                 */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** Required. projects/{gcp_project_id}/locations/{location}/products/{product}/integrations/{integrati
               on_name}/executions/{execution_name}/suspensions/{suspension_id}
                 */
                public java.lang.String getName() {
                  return name;
                }

                /**
                 * Required. projects/{gcp_project_id}/locations/{location}/products/{product}/integ
                 * rations/{integration_name}/executions/{execution_name}/suspensions/{suspension_id
                 * }
                 */
                public Resolve setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/executions/[^/]+/suspensions/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                @Override
                public Resolve set(String parameterName, Object value) {
                  return (Resolve) super.set(parameterName, value);
                }
              }

            }
          }
          /**
           * An accessor for creating requests from the Executionsnapshots collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Integrations integrations = new Integrations(...);}
           *   {@code Integrations.Executionsnapshots.List request = integrations.executionsnapshots().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Executionsnapshots executionsnapshots() {
            return new Executionsnapshots();
          }

          /**
           * The "executionsnapshots" collection of methods.
           */
          public class Executionsnapshots {

            /**
             * Lists the snapshots of a given integration executions. This RPC is not being used.
             *
             * Create a request for the method "executionsnapshots.list".
             *
             * This request holds the parameters needed by the integrations server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The parent resource name of the integration execution.
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaListExecutionSnapshotsResponse> {

              private static final String REST_PATH = "v1alpha/{+parent}/executionsnapshots";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+$");

              /**
               * Lists the snapshots of a given integration executions. This RPC is not being used.
               *
               * Create a request for the method "executionsnapshots.list".
               *
               * This request holds the parameters needed by the the integrations server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The parent resource name of the integration execution.
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(Integrations.this, "GET", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaListExecutionSnapshotsResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The parent resource name of the integration execution. */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The parent resource name of the integration execution.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /** Required. The parent resource name of the integration execution. */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /** Currently supports filter by `execution_info_id` or `execution_snapshot_id`. */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** Currently supports filter by `execution_info_id` or `execution_snapshot_id`.
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /** Currently supports filter by `execution_info_id` or `execution_snapshot_id`. */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /** Number of entries to be returned in a page. */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** Number of entries to be returned in a page.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /** Number of entries to be returned in a page. */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /** The token used to retrieve the next page results. */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** The token used to retrieve the next page results.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /** The token used to retrieve the next page results. */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              /**
               * View mask for the response data. If set, only the field specified will be returned
               * as part of the result. If not set, all fields in event execution snapshot will be
               * filled and returned.
               */
              @com.google.api.client.util.Key
              private String readMask;

              /** View mask for the response data. If set, only the field specified will be returned as part of the
             result. If not set, all fields in event execution snapshot will be filled and returned.
               */
              public String getReadMask() {
                return readMask;
              }

              /**
               * View mask for the response data. If set, only the field specified will be returned
               * as part of the result. If not set, all fields in event execution snapshot will be
               * filled and returned.
               */
              public List setReadMask(String readMask) {
                this.readMask = readMask;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }

          }
          /**
           * An accessor for creating requests from the Versions collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Integrations integrations = new Integrations(...);}
           *   {@code Integrations.Versions.List request = integrations.versions().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Versions versions() {
            return new Versions();
          }

          /**
           * The "versions" collection of methods.
           */
          public class Versions {

            /**
             * Soft-deletes the integration. Changes the status of the integration to ARCHIVED. If the
             * integration being ARCHIVED is tagged as "HEAD", the tag is removed from this snapshot and set to
             * the previous non-ARCHIVED snapshot. The PUBLISH_REQUESTED, DUE_FOR_DELETION tags are removed too.
             * This RPC throws an exception if the version being archived is DRAFT, and if the `locked_by` user
             * is not the same as the user performing the Archive. Audit fields updated include
             * last_modified_timestamp, last_modified_by. Any existing lock is released when Archiving a
             * integration. Currently, there is no unarchive mechanism.
             *
             * Create a request for the method "versions.archive".
             *
             * This request holds the parameters needed by the integrations server.  After setting any optional
             * parameters, call the {@link Archive#execute()} method to invoke the remote operation.
             *
             * @param name Required. The version to archive. Format:
             *        projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
             * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaArchiveIntegrationVersionRequest}
             * @return the request
             */
            public Archive archive(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaArchiveIntegrationVersionRequest content) throws java.io.IOException {
              Archive result = new Archive(name, content);
              initialize(result);
              return result;
            }

            public class Archive extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaArchiveIntegrationVersionResponse> {

              private static final String REST_PATH = "v1alpha/{+name}:archive";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/versions/[^/]+$");

              /**
               * Soft-deletes the integration. Changes the status of the integration to ARCHIVED. If the
               * integration being ARCHIVED is tagged as "HEAD", the tag is removed from this snapshot and set
               * to the previous non-ARCHIVED snapshot. The PUBLISH_REQUESTED, DUE_FOR_DELETION tags are removed
               * too. This RPC throws an exception if the version being archived is DRAFT, and if the
               * `locked_by` user is not the same as the user performing the Archive. Audit fields updated
               * include last_modified_timestamp, last_modified_by. Any existing lock is released when Archiving
               * a integration. Currently, there is no unarchive mechanism.
               *
               * Create a request for the method "versions.archive".
               *
               * This request holds the parameters needed by the the integrations server.  After setting any
               * optional parameters, call the {@link Archive#execute()} method to invoke the remote operation.
               * <p> {@link
               * Archive#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The version to archive. Format:
             *        projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
               * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaArchiveIntegrationVersionRequest}
               * @since 1.13
               */
              protected Archive(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaArchiveIntegrationVersionRequest content) {
                super(Integrations.this, "POST", REST_PATH, content, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaArchiveIntegrationVersionResponse.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/versions/[^/]+$");
                }
              }

              @Override
              public Archive set$Xgafv(java.lang.String $Xgafv) {
                return (Archive) super.set$Xgafv($Xgafv);
              }

              @Override
              public Archive setAccessToken(java.lang.String accessToken) {
                return (Archive) super.setAccessToken(accessToken);
              }

              @Override
              public Archive setAlt(java.lang.String alt) {
                return (Archive) super.setAlt(alt);
              }

              @Override
              public Archive setCallback(java.lang.String callback) {
                return (Archive) super.setCallback(callback);
              }

              @Override
              public Archive setFields(java.lang.String fields) {
                return (Archive) super.setFields(fields);
              }

              @Override
              public Archive setKey(java.lang.String key) {
                return (Archive) super.setKey(key);
              }

              @Override
              public Archive setOauthToken(java.lang.String oauthToken) {
                return (Archive) super.setOauthToken(oauthToken);
              }

              @Override
              public Archive setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Archive) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Archive setQuotaUser(java.lang.String quotaUser) {
                return (Archive) super.setQuotaUser(quotaUser);
              }

              @Override
              public Archive setUploadType(java.lang.String uploadType) {
                return (Archive) super.setUploadType(uploadType);
              }

              @Override
              public Archive setUploadProtocol(java.lang.String uploadProtocol) {
                return (Archive) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The version to archive. Format: projects/{project}/locations/{location}/i
               * ntegrations/{integration}/versions/{version}
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The version to archive. Format:
             projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The version to archive. Format: projects/{project}/locations/{location}/i
               * ntegrations/{integration}/versions/{version}
               */
              public Archive setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/versions/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Archive set(String parameterName, Object value) {
                return (Archive) super.set(parameterName, value);
              }
            }
            /**
             * Create a integration with a draft version in the specified project.
             *
             * Create a request for the method "versions.create".
             *
             * This request holds the parameters needed by the integrations server.  After setting any optional
             * parameters, call the {@link Create#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The parent resource where this version will be created. Format:
             *        projects/{project}/locations/{location}/integrations/{integration}
             * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaIntegrationVersion}
             * @return the request
             */
            public Create create(java.lang.String parent, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaIntegrationVersion content) throws java.io.IOException {
              Create result = new Create(parent, content);
              initialize(result);
              return result;
            }

            public class Create extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaIntegrationVersion> {

              private static final String REST_PATH = "v1alpha/{+parent}/versions";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+$");

              /**
               * Create a integration with a draft version in the specified project.
               *
               * Create a request for the method "versions.create".
               *
               * This request holds the parameters needed by the the integrations server.  After setting any
               * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
               * <p> {@link
               * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The parent resource where this version will be created. Format:
             *        projects/{project}/locations/{location}/integrations/{integration}
               * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaIntegrationVersion}
               * @since 1.13
               */
              protected Create(java.lang.String parent, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaIntegrationVersion content) {
                super(Integrations.this, "POST", REST_PATH, content, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaIntegrationVersion.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+$");
                }
              }

              @Override
              public Create set$Xgafv(java.lang.String $Xgafv) {
                return (Create) super.set$Xgafv($Xgafv);
              }

              @Override
              public Create setAccessToken(java.lang.String accessToken) {
                return (Create) super.setAccessToken(accessToken);
              }

              @Override
              public Create setAlt(java.lang.String alt) {
                return (Create) super.setAlt(alt);
              }

              @Override
              public Create setCallback(java.lang.String callback) {
                return (Create) super.setCallback(callback);
              }

              @Override
              public Create setFields(java.lang.String fields) {
                return (Create) super.setFields(fields);
              }

              @Override
              public Create setKey(java.lang.String key) {
                return (Create) super.setKey(key);
              }

              @Override
              public Create setOauthToken(java.lang.String oauthToken) {
                return (Create) super.setOauthToken(oauthToken);
              }

              @Override
              public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Create) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Create setQuotaUser(java.lang.String quotaUser) {
                return (Create) super.setQuotaUser(quotaUser);
              }

              @Override
              public Create setUploadType(java.lang.String uploadType) {
                return (Create) super.setUploadType(uploadType);
              }

              @Override
              public Create setUploadProtocol(java.lang.String uploadProtocol) {
                return (Create) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The parent resource where this version will be created. Format:
               * projects/{project}/locations/{location}/integrations/{integration}
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The parent resource where this version will be created. Format:
             projects/{project}/locations/{location}/integrations/{integration}
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The parent resource where this version will be created. Format:
               * projects/{project}/locations/{location}/integrations/{integration}
               */
              public Create setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Set this flag to true, if draft version is to be created for a brand new
               * integration. False, if the request is for an existing integration. For backward
               * compatibility reasons, even if this flag is set to `false` and no existing
               * integration is found, a new draft integration will still be created.
               */
              @com.google.api.client.util.Key
              private java.lang.Boolean newIntegration;

              /** Set this flag to true, if draft version is to be created for a brand new integration. False, if the
             request is for an existing integration. For backward compatibility reasons, even if this flag is
             set to `false` and no existing integration is found, a new draft integration will still be created.
               */
              public java.lang.Boolean getNewIntegration() {
                return newIntegration;
              }

              /**
               * Set this flag to true, if draft version is to be created for a brand new
               * integration. False, if the request is for an existing integration. For backward
               * compatibility reasons, even if this flag is set to `false` and no existing
               * integration is found, a new draft integration will still be created.
               */
              public Create setNewIntegration(java.lang.Boolean newIntegration) {
                this.newIntegration = newIntegration;
                return this;
              }

              @Override
              public Create set(String parameterName, Object value) {
                return (Create) super.set(parameterName, value);
              }
            }
            /**
             * Sets the status of the ACTIVE integration to SNAPSHOT with a new tag "PREVIOUSLY_PUBLISHED" after
             * validating it. The "HEAD" and "PUBLISH_REQUESTED" tags do not change. This RPC throws an
             * exception if the version being snapshot is not ACTIVE. Audit fields added include action,
             * action_by, action_timestamp.
             *
             * Create a request for the method "versions.deactivate".
             *
             * This request holds the parameters needed by the integrations server.  After setting any optional
             * parameters, call the {@link Deactivate#execute()} method to invoke the remote operation.
             *
             * @param name Required. The version to deactivate. Format:
             *        projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
             * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaDeactivateIntegrationVersionRequest}
             * @return the request
             */
            public Deactivate deactivate(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaDeactivateIntegrationVersionRequest content) throws java.io.IOException {
              Deactivate result = new Deactivate(name, content);
              initialize(result);
              return result;
            }

            public class Deactivate extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaDeactivateIntegrationVersionResponse> {

              private static final String REST_PATH = "v1alpha/{+name}:deactivate";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/versions/[^/]+$");

              /**
               * Sets the status of the ACTIVE integration to SNAPSHOT with a new tag "PREVIOUSLY_PUBLISHED"
               * after validating it. The "HEAD" and "PUBLISH_REQUESTED" tags do not change. This RPC throws an
               * exception if the version being snapshot is not ACTIVE. Audit fields added include action,
               * action_by, action_timestamp.
               *
               * Create a request for the method "versions.deactivate".
               *
               * This request holds the parameters needed by the the integrations server.  After setting any
               * optional parameters, call the {@link Deactivate#execute()} method to invoke the remote
               * operation. <p> {@link
               * Deactivate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The version to deactivate. Format:
             *        projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
               * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaDeactivateIntegrationVersionRequest}
               * @since 1.13
               */
              protected Deactivate(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaDeactivateIntegrationVersionRequest content) {
                super(Integrations.this, "POST", REST_PATH, content, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaDeactivateIntegrationVersionResponse.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/versions/[^/]+$");
                }
              }

              @Override
              public Deactivate set$Xgafv(java.lang.String $Xgafv) {
                return (Deactivate) super.set$Xgafv($Xgafv);
              }

              @Override
              public Deactivate setAccessToken(java.lang.String accessToken) {
                return (Deactivate) super.setAccessToken(accessToken);
              }

              @Override
              public Deactivate setAlt(java.lang.String alt) {
                return (Deactivate) super.setAlt(alt);
              }

              @Override
              public Deactivate setCallback(java.lang.String callback) {
                return (Deactivate) super.setCallback(callback);
              }

              @Override
              public Deactivate setFields(java.lang.String fields) {
                return (Deactivate) super.setFields(fields);
              }

              @Override
              public Deactivate setKey(java.lang.String key) {
                return (Deactivate) super.setKey(key);
              }

              @Override
              public Deactivate setOauthToken(java.lang.String oauthToken) {
                return (Deactivate) super.setOauthToken(oauthToken);
              }

              @Override
              public Deactivate setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Deactivate) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Deactivate setQuotaUser(java.lang.String quotaUser) {
                return (Deactivate) super.setQuotaUser(quotaUser);
              }

              @Override
              public Deactivate setUploadType(java.lang.String uploadType) {
                return (Deactivate) super.setUploadType(uploadType);
              }

              @Override
              public Deactivate setUploadProtocol(java.lang.String uploadProtocol) {
                return (Deactivate) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The version to deactivate. Format: projects/{project}/locations/{location
               * }/integrations/{integration}/versions/{version}
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The version to deactivate. Format:
             projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The version to deactivate. Format: projects/{project}/locations/{location
               * }/integrations/{integration}/versions/{version}
               */
              public Deactivate setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/versions/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Deactivate set(String parameterName, Object value) {
                return (Deactivate) super.set(parameterName, value);
              }
            }
            /**
             * Downloads an integration. Retrieves the `IntegrationVersion` for a given `integration_id` and
             * returns the response as a string.
             *
             * Create a request for the method "versions.download".
             *
             * This request holds the parameters needed by the integrations server.  After setting any optional
             * parameters, call the {@link Download#execute()} method to invoke the remote operation.
             *
             * @param name Required. The version to download. Format:
             *        projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
             * @return the request
             */
            public Download download(java.lang.String name) throws java.io.IOException {
              Download result = new Download(name);
              initialize(result);
              return result;
            }

            public class Download extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaDownloadIntegrationVersionResponse> {

              private static final String REST_PATH = "v1alpha/{+name}:download";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/versions/[^/]+$");

              /**
               * Downloads an integration. Retrieves the `IntegrationVersion` for a given `integration_id` and
               * returns the response as a string.
               *
               * Create a request for the method "versions.download".
               *
               * This request holds the parameters needed by the the integrations server.  After setting any
               * optional parameters, call the {@link Download#execute()} method to invoke the remote operation.
               * <p> {@link
               * Download#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The version to download. Format:
             *        projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
               * @since 1.13
               */
              protected Download(java.lang.String name) {
                super(Integrations.this, "GET", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaDownloadIntegrationVersionResponse.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/versions/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Download set$Xgafv(java.lang.String $Xgafv) {
                return (Download) super.set$Xgafv($Xgafv);
              }

              @Override
              public Download setAccessToken(java.lang.String accessToken) {
                return (Download) super.setAccessToken(accessToken);
              }

              @Override
              public Download setAlt(java.lang.String alt) {
                return (Download) super.setAlt(alt);
              }

              @Override
              public Download setCallback(java.lang.String callback) {
                return (Download) super.setCallback(callback);
              }

              @Override
              public Download setFields(java.lang.String fields) {
                return (Download) super.setFields(fields);
              }

              @Override
              public Download setKey(java.lang.String key) {
                return (Download) super.setKey(key);
              }

              @Override
              public Download setOauthToken(java.lang.String oauthToken) {
                return (Download) super.setOauthToken(oauthToken);
              }

              @Override
              public Download setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Download) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Download setQuotaUser(java.lang.String quotaUser) {
                return (Download) super.setQuotaUser(quotaUser);
              }

              @Override
              public Download setUploadType(java.lang.String uploadType) {
                return (Download) super.setUploadType(uploadType);
              }

              @Override
              public Download setUploadProtocol(java.lang.String uploadProtocol) {
                return (Download) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The version to download. Format: projects/{project}/locations/{location}/
               * integrations/{integration}/versions/{version}
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The version to download. Format:
             projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The version to download. Format: projects/{project}/locations/{location}/
               * integrations/{integration}/versions/{version}
               */
              public Download setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/versions/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /** File format for download request. */
              @com.google.api.client.util.Key
              private java.lang.String fileFormat;

              /** File format for download request.
               */
              public java.lang.String getFileFormat() {
                return fileFormat;
              }

              /** File format for download request. */
              public Download setFileFormat(java.lang.String fileFormat) {
                this.fileFormat = fileFormat;
                return this;
              }

              @Override
              public Download set(String parameterName, Object value) {
                return (Download) super.set(parameterName, value);
              }
            }
            /**
             * Get a integration in the specified project.
             *
             * Create a request for the method "versions.get".
             *
             * This request holds the parameters needed by the integrations server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name Required. The version to retrieve. Format:
             *        projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaIntegrationVersion> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/versions/[^/]+$");

              /**
               * Get a integration in the specified project.
               *
               * Create a request for the method "versions.get".
               *
               * This request holds the parameters needed by the the integrations server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The version to retrieve. Format:
             *        projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(Integrations.this, "GET", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaIntegrationVersion.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/versions/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The version to retrieve. Format: projects/{project}/locations/{location}/
               * integrations/{integration}/versions/{version}
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The version to retrieve. Format:
             projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The version to retrieve. Format: projects/{project}/locations/{location}/
               * integrations/{integration}/versions/{version}
               */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/versions/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * PROTECT WITH A VISIBILITY LABEL. THIS METHOD WILL BE MOVED TO A SEPARATE SERVICE. RPC to get
             * details of the Bundle
             *
             * Create a request for the method "versions.getBundle".
             *
             * This request holds the parameters needed by the integrations server.  After setting any optional
             * parameters, call the {@link GetBundle#execute()} method to invoke the remote operation.
             *
             * @param name Required. The bundle name.
             * @return the request
             */
            public GetBundle getBundle(java.lang.String name) throws java.io.IOException {
              GetBundle result = new GetBundle(name);
              initialize(result);
              return result;
            }

            public class GetBundle extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaGetBundleResponse> {

              private static final String REST_PATH = "v1alpha/{+name}:getBundle";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/versions/[^/]+$");

              /**
               * PROTECT WITH A VISIBILITY LABEL. THIS METHOD WILL BE MOVED TO A SEPARATE SERVICE. RPC to get
               * details of the Bundle
               *
               * Create a request for the method "versions.getBundle".
               *
               * This request holds the parameters needed by the the integrations server.  After setting any
               * optional parameters, call the {@link GetBundle#execute()} method to invoke the remote
               * operation. <p> {@link
               * GetBundle#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The bundle name.
               * @since 1.13
               */
              protected GetBundle(java.lang.String name) {
                super(Integrations.this, "GET", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaGetBundleResponse.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/versions/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public GetBundle set$Xgafv(java.lang.String $Xgafv) {
                return (GetBundle) super.set$Xgafv($Xgafv);
              }

              @Override
              public GetBundle setAccessToken(java.lang.String accessToken) {
                return (GetBundle) super.setAccessToken(accessToken);
              }

              @Override
              public GetBundle setAlt(java.lang.String alt) {
                return (GetBundle) super.setAlt(alt);
              }

              @Override
              public GetBundle setCallback(java.lang.String callback) {
                return (GetBundle) super.setCallback(callback);
              }

              @Override
              public GetBundle setFields(java.lang.String fields) {
                return (GetBundle) super.setFields(fields);
              }

              @Override
              public GetBundle setKey(java.lang.String key) {
                return (GetBundle) super.setKey(key);
              }

              @Override
              public GetBundle setOauthToken(java.lang.String oauthToken) {
                return (GetBundle) super.setOauthToken(oauthToken);
              }

              @Override
              public GetBundle setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (GetBundle) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public GetBundle setQuotaUser(java.lang.String quotaUser) {
                return (GetBundle) super.setQuotaUser(quotaUser);
              }

              @Override
              public GetBundle setUploadType(java.lang.String uploadType) {
                return (GetBundle) super.setUploadType(uploadType);
              }

              @Override
              public GetBundle setUploadProtocol(java.lang.String uploadProtocol) {
                return (GetBundle) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The bundle name. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The bundle name.
               */
              public java.lang.String getName() {
                return name;
              }

              /** Required. The bundle name. */
              public GetBundle setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/versions/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public GetBundle set(String parameterName, Object value) {
                return (GetBundle) super.set(parameterName, value);
              }
            }
            /**
             * Returns the list of all integration versions in the specified project.
             *
             * Create a request for the method "versions.list".
             *
             * This request holds the parameters needed by the integrations server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The parent resource where this version will be created. Format:
             *        projects/{project}/locations/{location}/integrations/{integration} Specifically, when
             *        parent equals: 1. projects//locations//integrations/, Meaning: "List versions (with
             *        filter) for a particular integration". 2. projects//locations//integrations/- Meaning:
             *        "List versions (with filter) for a client within a particular region". 3.
             *        projects//locations/-/integrations/- Meaning: "List versions (with filter) for a client".
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaListIntegrationVersionsResponse> {

              private static final String REST_PATH = "v1alpha/{+parent}/versions";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+$");

              /**
               * Returns the list of all integration versions in the specified project.
               *
               * Create a request for the method "versions.list".
               *
               * This request holds the parameters needed by the the integrations server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The parent resource where this version will be created. Format:
             *        projects/{project}/locations/{location}/integrations/{integration} Specifically, when
             *        parent equals: 1. projects//locations//integrations/, Meaning: "List versions (with
             *        filter) for a particular integration". 2. projects//locations//integrations/- Meaning:
             *        "List versions (with filter) for a client within a particular region". 3.
             *        projects//locations/-/integrations/- Meaning: "List versions (with filter) for a client".
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(Integrations.this, "GET", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaListIntegrationVersionsResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The parent resource where this version will be created. Format:
               * projects/{project}/locations/{location}/integrations/{integration} Specifically,
               * when parent equals: 1. projects//locations//integrations/, Meaning: "List versions
               * (with filter) for a particular integration". 2. projects//locations//integrations/-
               * Meaning: "List versions (with filter) for a client within a particular region". 3.
               * projects//locations/-/integrations/- Meaning: "List versions (with filter) for a
               * client".
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The parent resource where this version will be created. Format:
             projects/{project}/locations/{location}/integrations/{integration} Specifically, when parent
             equals: 1. projects//locations//integrations/, Meaning: "List versions (with filter) for a
             particular integration". 2. projects//locations//integrations/- Meaning: "List versions (with
             filter) for a client within a particular region". 3. projects//locations/-/integrations/- Meaning:
             "List versions (with filter) for a client".
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The parent resource where this version will be created. Format:
               * projects/{project}/locations/{location}/integrations/{integration} Specifically,
               * when parent equals: 1. projects//locations//integrations/, Meaning: "List versions
               * (with filter) for a particular integration". 2. projects//locations//integrations/-
               * Meaning: "List versions (with filter) for a client within a particular region". 3.
               * projects//locations/-/integrations/- Meaning: "List versions (with filter) for a
               * client".
               */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /** The field mask which specifies the particular data to be returned. */
              @com.google.api.client.util.Key
              private String fieldMask;

              /** The field mask which specifies the particular data to be returned.
               */
              public String getFieldMask() {
                return fieldMask;
              }

              /** The field mask which specifies the particular data to be returned. */
              public List setFieldMask(String fieldMask) {
                this.fieldMask = fieldMask;
                return this;
              }

              /**
               * Filter on fields of IntegrationVersion. Fields can be compared with literal values
               * by use of ":" (containment), "=" (equality), ">" (greater), "<" (less than), >="
               * (greater than or equal to), "<=" (less than or equal to), and "!=" (inequality)
               * operators. Negation, conjunction, and disjunction are written using NOT, AND, and
               * OR keywords. For example, organization_id=\"1\" AND state=ACTIVE AND
               * description:"test". Filtering cannot be performed on repeated fields like
               * `task_config`.
               */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** Filter on fields of IntegrationVersion. Fields can be compared with literal values by use of ":"
             (containment), "=" (equality), ">" (greater), "<" (less than), >=" (greater than or equal to), "<="
             (less than or equal to), and "!=" (inequality) operators. Negation, conjunction, and disjunction
             are written using NOT, AND, and OR keywords. For example, organization_id=\"1\" AND state=ACTIVE
             AND description:"test". Filtering cannot be performed on repeated fields like `task_config`.
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /**
               * Filter on fields of IntegrationVersion. Fields can be compared with literal values
               * by use of ":" (containment), "=" (equality), ">" (greater), "<" (less than), >="
               * (greater than or equal to), "<=" (less than or equal to), and "!=" (inequality)
               * operators. Negation, conjunction, and disjunction are written using NOT, AND, and
               * OR keywords. For example, organization_id=\"1\" AND state=ACTIVE AND
               * description:"test". Filtering cannot be performed on repeated fields like
               * `task_config`.
               */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /**
               * The results would be returned in order you specified here. Currently supported sort
               * keys are: Descending sort order for "last_modified_time", "created_time",
               * "snapshot_number" Ascending sort order for "name".
               */
              @com.google.api.client.util.Key
              private java.lang.String orderBy;

              /** The results would be returned in order you specified here. Currently supported sort keys are:
             Descending sort order for "last_modified_time", "created_time", "snapshot_number" Ascending sort
             order for "name".
               */
              public java.lang.String getOrderBy() {
                return orderBy;
              }

              /**
               * The results would be returned in order you specified here. Currently supported sort
               * keys are: Descending sort order for "last_modified_time", "created_time",
               * "snapshot_number" Ascending sort order for "name".
               */
              public List setOrderBy(java.lang.String orderBy) {
                this.orderBy = orderBy;
                return this;
              }

              /**
               * The maximum number of versions to return. The service may return fewer than this
               * value. If unspecified, at most 50 versions will be returned. The maximum value is
               * 1000; values above 1000 will be coerced to 1000.
               */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** The maximum number of versions to return. The service may return fewer than this value. If
             unspecified, at most 50 versions will be returned. The maximum value is 1000; values above 1000
             will be coerced to 1000.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /**
               * The maximum number of versions to return. The service may return fewer than this
               * value. If unspecified, at most 50 versions will be returned. The maximum value is
               * 1000; values above 1000 will be coerced to 1000.
               */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /**
               * A page token, received from a previous `ListIntegrationVersions` call. Provide this
               * to retrieve the subsequent page. When paginating, all other parameters provided to
               * `ListIntegrationVersions` must match the call that provided the page token.
               */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** A page token, received from a previous `ListIntegrationVersions` call. Provide this to retrieve the
             subsequent page. When paginating, all other parameters provided to `ListIntegrationVersions` must
             match the call that provided the page token.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /**
               * A page token, received from a previous `ListIntegrationVersions` call. Provide this
               * to retrieve the subsequent page. When paginating, all other parameters provided to
               * `ListIntegrationVersions` must match the call that provided the page token.
               */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }
            /**
             * Update a integration with a draft version in the specified project.
             *
             * Create a request for the method "versions.patch".
             *
             * This request holds the parameters needed by the integrations server.  After setting any optional
             * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             *
             * @param name Output only. Auto-generated primary key.
             * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaIntegrationVersion}
             * @return the request
             */
            public Patch patch(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaIntegrationVersion content) throws java.io.IOException {
              Patch result = new Patch(name, content);
              initialize(result);
              return result;
            }

            public class Patch extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaIntegrationVersion> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/versions/[^/]+$");

              /**
               * Update a integration with a draft version in the specified project.
               *
               * Create a request for the method "versions.patch".
               *
               * This request holds the parameters needed by the the integrations server.  After setting any
               * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
               * <p> {@link
               * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Output only. Auto-generated primary key.
               * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaIntegrationVersion}
               * @since 1.13
               */
              protected Patch(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaIntegrationVersion content) {
                super(Integrations.this, "PATCH", REST_PATH, content, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaIntegrationVersion.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/versions/[^/]+$");
                }
              }

              @Override
              public Patch set$Xgafv(java.lang.String $Xgafv) {
                return (Patch) super.set$Xgafv($Xgafv);
              }

              @Override
              public Patch setAccessToken(java.lang.String accessToken) {
                return (Patch) super.setAccessToken(accessToken);
              }

              @Override
              public Patch setAlt(java.lang.String alt) {
                return (Patch) super.setAlt(alt);
              }

              @Override
              public Patch setCallback(java.lang.String callback) {
                return (Patch) super.setCallback(callback);
              }

              @Override
              public Patch setFields(java.lang.String fields) {
                return (Patch) super.setFields(fields);
              }

              @Override
              public Patch setKey(java.lang.String key) {
                return (Patch) super.setKey(key);
              }

              @Override
              public Patch setOauthToken(java.lang.String oauthToken) {
                return (Patch) super.setOauthToken(oauthToken);
              }

              @Override
              public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Patch) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Patch setQuotaUser(java.lang.String quotaUser) {
                return (Patch) super.setQuotaUser(quotaUser);
              }

              @Override
              public Patch setUploadType(java.lang.String uploadType) {
                return (Patch) super.setUploadType(uploadType);
              }

              @Override
              public Patch setUploadProtocol(java.lang.String uploadProtocol) {
                return (Patch) super.setUploadProtocol(uploadProtocol);
              }

              /** Output only. Auto-generated primary key. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Output only. Auto-generated primary key.
               */
              public java.lang.String getName() {
                return name;
              }

              /** Output only. Auto-generated primary key. */
              public Patch setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/versions/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * Field mask specifying the fields in the above integration that have been modified
               * and need to be updated.
               */
              @com.google.api.client.util.Key
              private String updateMask;

              /** Field mask specifying the fields in the above integration that have been modified and need to be
             updated.
               */
              public String getUpdateMask() {
                return updateMask;
              }

              /**
               * Field mask specifying the fields in the above integration that have been modified
               * and need to be updated.
               */
              public Patch setUpdateMask(String updateMask) {
                this.updateMask = updateMask;
                return this;
              }

              @Override
              public Patch set(String parameterName, Object value) {
                return (Patch) super.set(parameterName, value);
              }
            }
            /**
             * This RPC throws an exception if the integration is in ARCHIVED or ACTIVE state. This RPC throws
             * an exception if the version being published is DRAFT, and if the `locked_by` user is not the same
             * as the user performing the Publish. Audit fields updated include last_published_timestamp,
             * last_published_by, last_modified_timestamp, last_modified_by. Any existing lock is on this
             * integration is released.
             *
             * Create a request for the method "versions.publish".
             *
             * This request holds the parameters needed by the integrations server.  After setting any optional
             * parameters, call the {@link Publish#execute()} method to invoke the remote operation.
             *
             * @param name Required. The version to publish. Format:
             *        projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
             * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaPublishIntegrationVersionRequest}
             * @return the request
             */
            public Publish publish(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaPublishIntegrationVersionRequest content) throws java.io.IOException {
              Publish result = new Publish(name, content);
              initialize(result);
              return result;
            }

            public class Publish extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaPublishIntegrationVersionResponse> {

              private static final String REST_PATH = "v1alpha/{+name}:publish";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/versions/[^/]+$");

              /**
               * This RPC throws an exception if the integration is in ARCHIVED or ACTIVE state. This RPC throws
               * an exception if the version being published is DRAFT, and if the `locked_by` user is not the
               * same as the user performing the Publish. Audit fields updated include last_published_timestamp,
               * last_published_by, last_modified_timestamp, last_modified_by. Any existing lock is on this
               * integration is released.
               *
               * Create a request for the method "versions.publish".
               *
               * This request holds the parameters needed by the the integrations server.  After setting any
               * optional parameters, call the {@link Publish#execute()} method to invoke the remote operation.
               * <p> {@link
               * Publish#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The version to publish. Format:
             *        projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
               * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaPublishIntegrationVersionRequest}
               * @since 1.13
               */
              protected Publish(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaPublishIntegrationVersionRequest content) {
                super(Integrations.this, "POST", REST_PATH, content, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaPublishIntegrationVersionResponse.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/versions/[^/]+$");
                }
              }

              @Override
              public Publish set$Xgafv(java.lang.String $Xgafv) {
                return (Publish) super.set$Xgafv($Xgafv);
              }

              @Override
              public Publish setAccessToken(java.lang.String accessToken) {
                return (Publish) super.setAccessToken(accessToken);
              }

              @Override
              public Publish setAlt(java.lang.String alt) {
                return (Publish) super.setAlt(alt);
              }

              @Override
              public Publish setCallback(java.lang.String callback) {
                return (Publish) super.setCallback(callback);
              }

              @Override
              public Publish setFields(java.lang.String fields) {
                return (Publish) super.setFields(fields);
              }

              @Override
              public Publish setKey(java.lang.String key) {
                return (Publish) super.setKey(key);
              }

              @Override
              public Publish setOauthToken(java.lang.String oauthToken) {
                return (Publish) super.setOauthToken(oauthToken);
              }

              @Override
              public Publish setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Publish) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Publish setQuotaUser(java.lang.String quotaUser) {
                return (Publish) super.setQuotaUser(quotaUser);
              }

              @Override
              public Publish setUploadType(java.lang.String uploadType) {
                return (Publish) super.setUploadType(uploadType);
              }

              @Override
              public Publish setUploadProtocol(java.lang.String uploadProtocol) {
                return (Publish) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The version to publish. Format: projects/{project}/locations/{location}/i
               * ntegrations/{integration}/versions/{version}
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The version to publish. Format:
             projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The version to publish. Format: projects/{project}/locations/{location}/i
               * ntegrations/{integration}/versions/{version}
               */
              public Publish setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/versions/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Publish set(String parameterName, Object value) {
                return (Publish) super.set(parameterName, value);
              }
            }
            /**
             * Clears the `locked_by` and `locked_at_timestamp`in the DRAFT version of this integration. It then
             * performs the same action as the CreateDraftIntegrationVersion (i.e., copies the DRAFT version of
             * the integration as a SNAPSHOT and then creates a new DRAFT version with the `locked_by` set to
             * the `user_taking_over` and the `locked_at_timestamp` set to the current timestamp). Both the
             * `locked_by` and `user_taking_over` are notified via email about the takeover. This RPC throws an
             * exception if the integration is not in DRAFT status or if the `locked_by` and
             * `locked_at_timestamp` fields are not set.The TakeoverEdit lock is treated the same as an edit of
             * the integration, and hence shares ACLs with edit. Audit fields updated include
             * last_modified_timestamp, last_modified_by.
             *
             * Create a request for the method "versions.takeoverEditLock".
             *
             * This request holds the parameters needed by the integrations server.  After setting any optional
             * parameters, call the {@link TakeoverEditLock#execute()} method to invoke the remote operation.
             *
             * @param integrationVersion Required. The version to take over edit lock. Format:
             *        projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
             * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaTakeoverEditLockRequest}
             * @return the request
             */
            public TakeoverEditLock takeoverEditLock(java.lang.String integrationVersion, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaTakeoverEditLockRequest content) throws java.io.IOException {
              TakeoverEditLock result = new TakeoverEditLock(integrationVersion, content);
              initialize(result);
              return result;
            }

            public class TakeoverEditLock extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaTakeoverEditLockResponse> {

              private static final String REST_PATH = "v1alpha/{+integrationVersion}:takeoverEditLock";

              private final java.util.regex.Pattern INTEGRATION_VERSION_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/versions/[^/]+$");

              /**
               * Clears the `locked_by` and `locked_at_timestamp`in the DRAFT version of this integration. It
               * then performs the same action as the CreateDraftIntegrationVersion (i.e., copies the DRAFT
               * version of the integration as a SNAPSHOT and then creates a new DRAFT version with the
               * `locked_by` set to the `user_taking_over` and the `locked_at_timestamp` set to the current
               * timestamp). Both the `locked_by` and `user_taking_over` are notified via email about the
               * takeover. This RPC throws an exception if the integration is not in DRAFT status or if the
               * `locked_by` and `locked_at_timestamp` fields are not set.The TakeoverEdit lock is treated the
               * same as an edit of the integration, and hence shares ACLs with edit. Audit fields updated
               * include last_modified_timestamp, last_modified_by.
               *
               * Create a request for the method "versions.takeoverEditLock".
               *
               * This request holds the parameters needed by the the integrations server.  After setting any
               * optional parameters, call the {@link TakeoverEditLock#execute()} method to invoke the remote
               * operation. <p> {@link TakeoverEditLock#initialize(com.google.api.client.googleapis.services.Abs
               * tractGoogleClientRequest)} must be called to initialize this instance immediately after
               * invoking the constructor. </p>
               *
               * @param integrationVersion Required. The version to take over edit lock. Format:
             *        projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
               * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaTakeoverEditLockRequest}
               * @since 1.13
               */
              protected TakeoverEditLock(java.lang.String integrationVersion, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaTakeoverEditLockRequest content) {
                super(Integrations.this, "POST", REST_PATH, content, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaTakeoverEditLockResponse.class);
                this.integrationVersion = com.google.api.client.util.Preconditions.checkNotNull(integrationVersion, "Required parameter integrationVersion must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(INTEGRATION_VERSION_PATTERN.matcher(integrationVersion).matches(),
                      "Parameter integrationVersion must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/versions/[^/]+$");
                }
              }

              @Override
              public TakeoverEditLock set$Xgafv(java.lang.String $Xgafv) {
                return (TakeoverEditLock) super.set$Xgafv($Xgafv);
              }

              @Override
              public TakeoverEditLock setAccessToken(java.lang.String accessToken) {
                return (TakeoverEditLock) super.setAccessToken(accessToken);
              }

              @Override
              public TakeoverEditLock setAlt(java.lang.String alt) {
                return (TakeoverEditLock) super.setAlt(alt);
              }

              @Override
              public TakeoverEditLock setCallback(java.lang.String callback) {
                return (TakeoverEditLock) super.setCallback(callback);
              }

              @Override
              public TakeoverEditLock setFields(java.lang.String fields) {
                return (TakeoverEditLock) super.setFields(fields);
              }

              @Override
              public TakeoverEditLock setKey(java.lang.String key) {
                return (TakeoverEditLock) super.setKey(key);
              }

              @Override
              public TakeoverEditLock setOauthToken(java.lang.String oauthToken) {
                return (TakeoverEditLock) super.setOauthToken(oauthToken);
              }

              @Override
              public TakeoverEditLock setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (TakeoverEditLock) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public TakeoverEditLock setQuotaUser(java.lang.String quotaUser) {
                return (TakeoverEditLock) super.setQuotaUser(quotaUser);
              }

              @Override
              public TakeoverEditLock setUploadType(java.lang.String uploadType) {
                return (TakeoverEditLock) super.setUploadType(uploadType);
              }

              @Override
              public TakeoverEditLock setUploadProtocol(java.lang.String uploadProtocol) {
                return (TakeoverEditLock) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The version to take over edit lock. Format: projects/{project}/locations/
               * {location}/integrations/{integration}/versions/{version}
               */
              @com.google.api.client.util.Key
              private java.lang.String integrationVersion;

              /** Required. The version to take over edit lock. Format:
             projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
               */
              public java.lang.String getIntegrationVersion() {
                return integrationVersion;
              }

              /**
               * Required. The version to take over edit lock. Format: projects/{project}/locations/
               * {location}/integrations/{integration}/versions/{version}
               */
              public TakeoverEditLock setIntegrationVersion(java.lang.String integrationVersion) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(INTEGRATION_VERSION_PATTERN.matcher(integrationVersion).matches(),
                      "Parameter integrationVersion must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/versions/[^/]+$");
                }
                this.integrationVersion = integrationVersion;
                return this;
              }

              @Override
              public TakeoverEditLock set(String parameterName, Object value) {
                return (TakeoverEditLock) super.set(parameterName, value);
              }
            }
            /**
             * THIS METHOD WILL BE MOVED TO A SEPARATE SERVICE. RPC to update the Bundle
             *
             * Create a request for the method "versions.updateBundle".
             *
             * This request holds the parameters needed by the integrations server.  After setting any optional
             * parameters, call the {@link UpdateBundle#execute()} method to invoke the remote operation.
             *
             * @param name Required. Bundle name
             * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaUpdateBundleRequest}
             * @return the request
             */
            public UpdateBundle updateBundle(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaUpdateBundleRequest content) throws java.io.IOException {
              UpdateBundle result = new UpdateBundle(name, content);
              initialize(result);
              return result;
            }

            public class UpdateBundle extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaUpdateBundleResponse> {

              private static final String REST_PATH = "v1alpha/{+name}:updateBundle";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/versions/[^/]+$");

              /**
               * THIS METHOD WILL BE MOVED TO A SEPARATE SERVICE. RPC to update the Bundle
               *
               * Create a request for the method "versions.updateBundle".
               *
               * This request holds the parameters needed by the the integrations server.  After setting any
               * optional parameters, call the {@link UpdateBundle#execute()} method to invoke the remote
               * operation. <p> {@link
               * UpdateBundle#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. Bundle name
               * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaUpdateBundleRequest}
               * @since 1.13
               */
              protected UpdateBundle(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaUpdateBundleRequest content) {
                super(Integrations.this, "PATCH", REST_PATH, content, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaUpdateBundleResponse.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/versions/[^/]+$");
                }
              }

              @Override
              public UpdateBundle set$Xgafv(java.lang.String $Xgafv) {
                return (UpdateBundle) super.set$Xgafv($Xgafv);
              }

              @Override
              public UpdateBundle setAccessToken(java.lang.String accessToken) {
                return (UpdateBundle) super.setAccessToken(accessToken);
              }

              @Override
              public UpdateBundle setAlt(java.lang.String alt) {
                return (UpdateBundle) super.setAlt(alt);
              }

              @Override
              public UpdateBundle setCallback(java.lang.String callback) {
                return (UpdateBundle) super.setCallback(callback);
              }

              @Override
              public UpdateBundle setFields(java.lang.String fields) {
                return (UpdateBundle) super.setFields(fields);
              }

              @Override
              public UpdateBundle setKey(java.lang.String key) {
                return (UpdateBundle) super.setKey(key);
              }

              @Override
              public UpdateBundle setOauthToken(java.lang.String oauthToken) {
                return (UpdateBundle) super.setOauthToken(oauthToken);
              }

              @Override
              public UpdateBundle setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (UpdateBundle) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public UpdateBundle setQuotaUser(java.lang.String quotaUser) {
                return (UpdateBundle) super.setQuotaUser(quotaUser);
              }

              @Override
              public UpdateBundle setUploadType(java.lang.String uploadType) {
                return (UpdateBundle) super.setUploadType(uploadType);
              }

              @Override
              public UpdateBundle setUploadProtocol(java.lang.String uploadProtocol) {
                return (UpdateBundle) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. Bundle name */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. Bundle name
               */
              public java.lang.String getName() {
                return name;
              }

              /** Required. Bundle name */
              public UpdateBundle setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/versions/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public UpdateBundle set(String parameterName, Object value) {
                return (UpdateBundle) super.set(parameterName, value);
              }
            }
            /**
             * Uploads an integration. The content can be a previously downloaded integration. Performs the same
             * function as CreateDraftIntegrationVersion, but accepts input in a string format, which holds the
             * complete representation of the IntegrationVersion content.
             *
             * Create a request for the method "versions.upload".
             *
             * This request holds the parameters needed by the integrations server.  After setting any optional
             * parameters, call the {@link Upload#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The version to upload. Format:
             *        projects/{project}/locations/{location}/integrations/{integration}
             * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaUploadIntegrationVersionRequest}
             * @return the request
             */
            public Upload upload(java.lang.String parent, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaUploadIntegrationVersionRequest content) throws java.io.IOException {
              Upload result = new Upload(parent, content);
              initialize(result);
              return result;
            }

            public class Upload extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaUploadIntegrationVersionResponse> {

              private static final String REST_PATH = "v1alpha/{+parent}/versions:upload";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+$");

              /**
               * Uploads an integration. The content can be a previously downloaded integration. Performs the
               * same function as CreateDraftIntegrationVersion, but accepts input in a string format, which
               * holds the complete representation of the IntegrationVersion content.
               *
               * Create a request for the method "versions.upload".
               *
               * This request holds the parameters needed by the the integrations server.  After setting any
               * optional parameters, call the {@link Upload#execute()} method to invoke the remote operation.
               * <p> {@link
               * Upload#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The version to upload. Format:
             *        projects/{project}/locations/{location}/integrations/{integration}
               * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaUploadIntegrationVersionRequest}
               * @since 1.13
               */
              protected Upload(java.lang.String parent, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaUploadIntegrationVersionRequest content) {
                super(Integrations.this, "POST", REST_PATH, content, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaUploadIntegrationVersionResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+$");
                }
              }

              @Override
              public Upload set$Xgafv(java.lang.String $Xgafv) {
                return (Upload) super.set$Xgafv($Xgafv);
              }

              @Override
              public Upload setAccessToken(java.lang.String accessToken) {
                return (Upload) super.setAccessToken(accessToken);
              }

              @Override
              public Upload setAlt(java.lang.String alt) {
                return (Upload) super.setAlt(alt);
              }

              @Override
              public Upload setCallback(java.lang.String callback) {
                return (Upload) super.setCallback(callback);
              }

              @Override
              public Upload setFields(java.lang.String fields) {
                return (Upload) super.setFields(fields);
              }

              @Override
              public Upload setKey(java.lang.String key) {
                return (Upload) super.setKey(key);
              }

              @Override
              public Upload setOauthToken(java.lang.String oauthToken) {
                return (Upload) super.setOauthToken(oauthToken);
              }

              @Override
              public Upload setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Upload) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Upload setQuotaUser(java.lang.String quotaUser) {
                return (Upload) super.setQuotaUser(quotaUser);
              }

              @Override
              public Upload setUploadType(java.lang.String uploadType) {
                return (Upload) super.setUploadType(uploadType);
              }

              @Override
              public Upload setUploadProtocol(java.lang.String uploadProtocol) {
                return (Upload) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The version to upload. Format:
               * projects/{project}/locations/{location}/integrations/{integration}
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The version to upload. Format:
             projects/{project}/locations/{location}/integrations/{integration}
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The version to upload. Format:
               * projects/{project}/locations/{location}/integrations/{integration}
               */
              public Upload setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public Upload set(String parameterName, Object value) {
                return (Upload) super.set(parameterName, value);
              }
            }
            /**
             * Validates the given integration. If the id doesn't exist, a NotFoundException is thrown. If
             * validation fails a CanonicalCodeException is thrown. If there was no failure an empty response is
             * returned.
             *
             * Create a request for the method "versions.validate".
             *
             * This request holds the parameters needed by the integrations server.  After setting any optional
             * parameters, call the {@link Validate#execute()} method to invoke the remote operation.
             *
             * @param name Required. The version to validate. Format:
             *        projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
             * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaValidateIntegrationVersionRequest}
             * @return the request
             */
            public Validate validate(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaValidateIntegrationVersionRequest content) throws java.io.IOException {
              Validate result = new Validate(name, content);
              initialize(result);
              return result;
            }

            public class Validate extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaValidateIntegrationVersionResponse> {

              private static final String REST_PATH = "v1alpha/{+name}:validate";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/versions/[^/]+$");

              /**
               * Validates the given integration. If the id doesn't exist, a NotFoundException is thrown. If
               * validation fails a CanonicalCodeException is thrown. If there was no failure an empty response
               * is returned.
               *
               * Create a request for the method "versions.validate".
               *
               * This request holds the parameters needed by the the integrations server.  After setting any
               * optional parameters, call the {@link Validate#execute()} method to invoke the remote operation.
               * <p> {@link
               * Validate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The version to validate. Format:
             *        projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
               * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaValidateIntegrationVersionRequest}
               * @since 1.13
               */
              protected Validate(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaValidateIntegrationVersionRequest content) {
                super(Integrations.this, "POST", REST_PATH, content, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaValidateIntegrationVersionResponse.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/versions/[^/]+$");
                }
              }

              @Override
              public Validate set$Xgafv(java.lang.String $Xgafv) {
                return (Validate) super.set$Xgafv($Xgafv);
              }

              @Override
              public Validate setAccessToken(java.lang.String accessToken) {
                return (Validate) super.setAccessToken(accessToken);
              }

              @Override
              public Validate setAlt(java.lang.String alt) {
                return (Validate) super.setAlt(alt);
              }

              @Override
              public Validate setCallback(java.lang.String callback) {
                return (Validate) super.setCallback(callback);
              }

              @Override
              public Validate setFields(java.lang.String fields) {
                return (Validate) super.setFields(fields);
              }

              @Override
              public Validate setKey(java.lang.String key) {
                return (Validate) super.setKey(key);
              }

              @Override
              public Validate setOauthToken(java.lang.String oauthToken) {
                return (Validate) super.setOauthToken(oauthToken);
              }

              @Override
              public Validate setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Validate) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Validate setQuotaUser(java.lang.String quotaUser) {
                return (Validate) super.setQuotaUser(quotaUser);
              }

              @Override
              public Validate setUploadType(java.lang.String uploadType) {
                return (Validate) super.setUploadType(uploadType);
              }

              @Override
              public Validate setUploadProtocol(java.lang.String uploadProtocol) {
                return (Validate) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The version to validate. Format: projects/{project}/locations/{location}/
               * integrations/{integration}/versions/{version}
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The version to validate. Format:
             projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The version to validate. Format: projects/{project}/locations/{location}/
               * integrations/{integration}/versions/{version}
               */
              public Validate setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/versions/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Validate set(String parameterName, Object value) {
                return (Validate) super.set(parameterName, value);
              }
            }

          }
        }
        /**
         * An accessor for creating requests from the Integrationtemplates collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Integrations integrations = new Integrations(...);}
         *   {@code Integrations.Integrationtemplates.List request = integrations.integrationtemplates().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Integrationtemplates integrationtemplates() {
          return new Integrationtemplates();
        }

        /**
         * The "integrationtemplates" collection of methods.
         */
        public class Integrationtemplates {

          /**
           * An accessor for creating requests from the Versions collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Integrations integrations = new Integrations(...);}
           *   {@code Integrations.Versions.List request = integrations.versions().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Versions versions() {
            return new Versions();
          }

          /**
           * The "versions" collection of methods.
           */
          public class Versions {

            /**
             * Creates an IntegrationTemplateVersion.
             *
             * Create a request for the method "versions.create".
             *
             * This request holds the parameters needed by the integrations server.  After setting any optional
             * parameters, call the {@link Create#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The parent resource where this TemplateVersion will be created. Format:
             *        projects/{project}/location/{location}/product/{product}/integrationtemplates/{integration
             *        template}
             * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaIntegrationTemplateVersion}
             * @return the request
             */
            public Create create(java.lang.String parent, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaIntegrationTemplateVersion content) throws java.io.IOException {
              Create result = new Create(parent, content);
              initialize(result);
              return result;
            }

            public class Create extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaIntegrationTemplateVersion> {

              private static final String REST_PATH = "v1alpha/{+parent}/versions";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+/integrationtemplates/[^/]+$");

              /**
               * Creates an IntegrationTemplateVersion.
               *
               * Create a request for the method "versions.create".
               *
               * This request holds the parameters needed by the the integrations server.  After setting any
               * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
               * <p> {@link
               * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The parent resource where this TemplateVersion will be created. Format:
             *        projects/{project}/location/{location}/product/{product}/integrationtemplates/{integration
             *        template}
               * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaIntegrationTemplateVersion}
               * @since 1.13
               */
              protected Create(java.lang.String parent, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaIntegrationTemplateVersion content) {
                super(Integrations.this, "POST", REST_PATH, content, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaIntegrationTemplateVersion.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrationtemplates/[^/]+$");
                }
              }

              @Override
              public Create set$Xgafv(java.lang.String $Xgafv) {
                return (Create) super.set$Xgafv($Xgafv);
              }

              @Override
              public Create setAccessToken(java.lang.String accessToken) {
                return (Create) super.setAccessToken(accessToken);
              }

              @Override
              public Create setAlt(java.lang.String alt) {
                return (Create) super.setAlt(alt);
              }

              @Override
              public Create setCallback(java.lang.String callback) {
                return (Create) super.setCallback(callback);
              }

              @Override
              public Create setFields(java.lang.String fields) {
                return (Create) super.setFields(fields);
              }

              @Override
              public Create setKey(java.lang.String key) {
                return (Create) super.setKey(key);
              }

              @Override
              public Create setOauthToken(java.lang.String oauthToken) {
                return (Create) super.setOauthToken(oauthToken);
              }

              @Override
              public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Create) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Create setQuotaUser(java.lang.String quotaUser) {
                return (Create) super.setQuotaUser(quotaUser);
              }

              @Override
              public Create setUploadType(java.lang.String uploadType) {
                return (Create) super.setUploadType(uploadType);
              }

              @Override
              public Create setUploadProtocol(java.lang.String uploadProtocol) {
                return (Create) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The parent resource where this TemplateVersion will be created. Format: p
               * rojects/{project}/location/{location}/product/{product}/integrationtemplates/{integ
               * rationtemplate}
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The parent resource where this TemplateVersion will be created. Format:
             projects/{project}/location/{location}/product/{product}/integrationtemplates/{integrationtemplate}
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The parent resource where this TemplateVersion will be created. Format: p
               * rojects/{project}/location/{location}/product/{product}/integrationtemplates/{integ
               * rationtemplate}
               */
              public Create setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrationtemplates/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public Create set(String parameterName, Object value) {
                return (Create) super.set(parameterName, value);
              }
            }
            /**
             * Returns an IntegrationTemplateVersion in the specified project.
             *
             * Create a request for the method "versions.get".
             *
             * This request holds the parameters needed by the integrations server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name Required. The TemplateVersion to retrieve. Format: projects/{project}/locations/{location}/products/
             *        {product}/integrationtemplates/{integrationtemplate}/versions/{version}
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaIntegrationTemplateVersion> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+/integrationtemplates/[^/]+/versions/[^/]+$");

              /**
               * Returns an IntegrationTemplateVersion in the specified project.
               *
               * Create a request for the method "versions.get".
               *
               * This request holds the parameters needed by the the integrations server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The TemplateVersion to retrieve. Format: projects/{project}/locations/{location}/products/
             *        {product}/integrationtemplates/{integrationtemplate}/versions/{version}
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(Integrations.this, "GET", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaIntegrationTemplateVersion.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrationtemplates/[^/]+/versions/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The TemplateVersion to retrieve. Format: projects/{project}/locations/{lo
               * cation}/products/{product}/integrationtemplates/{integrationtemplate}/versions/{ver
               * sion}
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The TemplateVersion to retrieve. Format: projects/{project}/locations/{location}/products
             /{product}/integrationtemplates/{integrationtemplate}/versions/{version}
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The TemplateVersion to retrieve. Format: projects/{project}/locations/{lo
               * cation}/products/{product}/integrationtemplates/{integrationtemplate}/versions/{ver
               * sion}
               */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrationtemplates/[^/]+/versions/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Returns the list of all IntegrationTemplateVersions in the specified project.
             *
             * Create a request for the method "versions.list".
             *
             * This request holds the parameters needed by the integrations server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. Format:
             *        projects/{project}/location/{location}/product/{product}/integrationtemplates/{integration
             *        template}
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaListIntegrationTemplateVersionsResponse> {

              private static final String REST_PATH = "v1alpha/{+parent}/versions";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+/integrationtemplates/[^/]+$");

              /**
               * Returns the list of all IntegrationTemplateVersions in the specified project.
               *
               * Create a request for the method "versions.list".
               *
               * This request holds the parameters needed by the the integrations server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. Format:
             *        projects/{project}/location/{location}/product/{product}/integrationtemplates/{integration
             *        template}
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(Integrations.this, "GET", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaListIntegrationTemplateVersionsResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrationtemplates/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. Format: projects/{project}/location/{location}/product/{product}/integrat
               * iontemplates/{integrationtemplate}
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. Format:
             projects/{project}/location/{location}/product/{product}/integrationtemplates/{integrationtemplate}
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. Format: projects/{project}/location/{location}/product/{product}/integrat
               * iontemplates/{integrationtemplate}
               */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/integrationtemplates/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /** Filter syntax: defined in the EBNF grammar. */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** Filter syntax: defined in the EBNF grammar.
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /** Filter syntax: defined in the EBNF grammar. */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /**
               * The maximum number of IntegrationTemplateVersions to return. The service may return
               * fewer than this value. If unspecified, at most 50 versions will be returned. The
               * maximum value is 1000; values above 1000 will be coerced to 1000.
               */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** The maximum number of IntegrationTemplateVersions to return. The service may return fewer than this
             value. If unspecified, at most 50 versions will be returned. The maximum value is 1000; values
             above 1000 will be coerced to 1000.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /**
               * The maximum number of IntegrationTemplateVersions to return. The service may return
               * fewer than this value. If unspecified, at most 50 versions will be returned. The
               * maximum value is 1000; values above 1000 will be coerced to 1000.
               */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /**
               * A page token, received from a previous `ListIntegrationTemplateVersions` call.
               * Provide this to retrieve the subsequent page. When paginating, all other parameters
               * provided to `ListIntegrationTemplateVersions` must match the call that provided the
               * page token.
               */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** A page token, received from a previous `ListIntegrationTemplateVersions` call. Provide this to
             retrieve the subsequent page. When paginating, all other parameters provided to
             `ListIntegrationTemplateVersions` must match the call that provided the page token.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /**
               * A page token, received from a previous `ListIntegrationTemplateVersions` call.
               * Provide this to retrieve the subsequent page. When paginating, all other parameters
               * provided to `ListIntegrationTemplateVersions` must match the call that provided the
               * page token.
               */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }

          }
        }
        /**
         * An accessor for creating requests from the SfdcInstances collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Integrations integrations = new Integrations(...);}
         *   {@code Integrations.SfdcInstances.List request = integrations.sfdcInstances().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public SfdcInstances sfdcInstances() {
          return new SfdcInstances();
        }

        /**
         * The "sfdcInstances" collection of methods.
         */
        public class SfdcInstances {

          /**
           * Creates an sfdc instance record. Store the sfdc instance in Spanner. Returns the sfdc instance.
           *
           * Create a request for the method "sfdcInstances.create".
           *
           * This request holds the parameters needed by the integrations server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. "projects/{project}/locations/{location}" format.
           * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcInstance}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcInstance content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcInstance> {

            private static final String REST_PATH = "v1alpha/{+parent}/sfdcInstances";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+$");

            /**
             * Creates an sfdc instance record. Store the sfdc instance in Spanner. Returns the sfdc instance.
             *
             * Create a request for the method "sfdcInstances.create".
             *
             * This request holds the parameters needed by the the integrations server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. "projects/{project}/locations/{location}" format.
             * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcInstance}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcInstance content) {
              super(Integrations.this, "POST", REST_PATH, content, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcInstance.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/products/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. "projects/{project}/locations/{location}" format. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. "projects/{project}/locations/{location}" format.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. "projects/{project}/locations/{location}" format. */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/products/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes an sfdc instance.
           *
           * Create a request for the method "sfdcInstances.delete".
           *
           * This request holds the parameters needed by the integrations server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name that is associated with the SfdcInstance.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+/sfdcInstances/[^/]+$");

            /**
             * Deletes an sfdc instance.
             *
             * Create a request for the method "sfdcInstances.delete".
             *
             * This request holds the parameters needed by the the integrations server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name that is associated with the SfdcInstance.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Integrations.this, "DELETE", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/products/[^/]+/sfdcInstances/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The name that is associated with the SfdcInstance. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name that is associated with the SfdcInstance.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. The name that is associated with the SfdcInstance. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/products/[^/]+/sfdcInstances/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets an sfdc instance. If the instance doesn't exist, Code.NOT_FOUND exception will be thrown.
           *
           * Create a request for the method "sfdcInstances.get".
           *
           * This request holds the parameters needed by the integrations server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name that is associated with the SfdcInstance.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcInstance> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+/sfdcInstances/[^/]+$");

            /**
             * Gets an sfdc instance. If the instance doesn't exist, Code.NOT_FOUND exception will be thrown.
             *
             * Create a request for the method "sfdcInstances.get".
             *
             * This request holds the parameters needed by the the integrations server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name that is associated with the SfdcInstance.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Integrations.this, "GET", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcInstance.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/products/[^/]+/sfdcInstances/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The name that is associated with the SfdcInstance. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name that is associated with the SfdcInstance.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. The name that is associated with the SfdcInstance. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/products/[^/]+/sfdcInstances/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists all sfdc instances that match the filter. Restrict to sfdc instances belonging to the
           * current client only.
           *
           * Create a request for the method "sfdcInstances.list".
           *
           * This request holds the parameters needed by the integrations server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The client, which owns this collection of SfdcInstances.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaListSfdcInstancesResponse> {

            private static final String REST_PATH = "v1alpha/{+parent}/sfdcInstances";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+$");

            /**
             * Lists all sfdc instances that match the filter. Restrict to sfdc instances belonging to the
             * current client only.
             *
             * Create a request for the method "sfdcInstances.list".
             *
             * This request holds the parameters needed by the the integrations server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The client, which owns this collection of SfdcInstances.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Integrations.this, "GET", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaListSfdcInstancesResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/products/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The client, which owns this collection of SfdcInstances. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The client, which owns this collection of SfdcInstances.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. The client, which owns this collection of SfdcInstances. */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/products/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Filtering as supported in https://developers.google.com/authorized-
             * buyers/apis/guides/v2/list-filters.
             */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Filtering as supported in https://developers.google.com/authorized-buyers/apis/guides/v2/list-
           filters.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /**
             * Filtering as supported in https://developers.google.com/authorized-
             * buyers/apis/guides/v2/list-filters.
             */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** The size of entries in the response. If unspecified, defaults to 100. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The size of entries in the response. If unspecified, defaults to 100.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The size of entries in the response. If unspecified, defaults to 100. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The token returned in the previous response. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The token returned in the previous response.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The token returned in the previous response. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            /**
             * The mask which specifies fields that need to be returned in the SfdcInstance's
             * response.
             */
            @com.google.api.client.util.Key
            private String readMask;

            /** The mask which specifies fields that need to be returned in the SfdcInstance's response.
             */
            public String getReadMask() {
              return readMask;
            }

            /**
             * The mask which specifies fields that need to be returned in the SfdcInstance's
             * response.
             */
            public List setReadMask(String readMask) {
              this.readMask = readMask;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates an sfdc instance. Updates the sfdc instance in spanner. Returns the sfdc instance.
           *
           * Create a request for the method "sfdcInstances.patch".
           *
           * This request holds the parameters needed by the integrations server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Resource name of the SFDC instance
           *        projects/{project}/locations/{location}/sfdcInstances/{sfdcInstance}.
           * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcInstance}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcInstance content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcInstance> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+/sfdcInstances/[^/]+$");

            /**
             * Updates an sfdc instance. Updates the sfdc instance in spanner. Returns the sfdc instance.
             *
             * Create a request for the method "sfdcInstances.patch".
             *
             * This request holds the parameters needed by the the integrations server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Resource name of the SFDC instance
           *        projects/{project}/locations/{location}/sfdcInstances/{sfdcInstance}.
             * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcInstance}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcInstance content) {
              super(Integrations.this, "PATCH", REST_PATH, content, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcInstance.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/products/[^/]+/sfdcInstances/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Resource name of the SFDC instance
             * projects/{project}/locations/{location}/sfdcInstances/{sfdcInstance}.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Resource name of the SFDC instance
           projects/{project}/locations/{location}/sfdcInstances/{sfdcInstance}.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Resource name of the SFDC instance
             * projects/{project}/locations/{location}/sfdcInstances/{sfdcInstance}.
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/products/[^/]+/sfdcInstances/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Field mask specifying the fields in the above SfdcInstance that have been modified
             * and need to be updated.
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Field mask specifying the fields in the above SfdcInstance that have been modified and need to be
           updated.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * Field mask specifying the fields in the above SfdcInstance that have been modified
             * and need to be updated.
             */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the SfdcChannels collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Integrations integrations = new Integrations(...);}
           *   {@code Integrations.SfdcChannels.List request = integrations.sfdcChannels().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public SfdcChannels sfdcChannels() {
            return new SfdcChannels();
          }

          /**
           * The "sfdcChannels" collection of methods.
           */
          public class SfdcChannels {

            /**
             * Creates an sfdc channel record. Store the sfdc channel in Spanner. Returns the sfdc channel.
             *
             * Create a request for the method "sfdcChannels.create".
             *
             * This request holds the parameters needed by the integrations server.  After setting any optional
             * parameters, call the {@link Create#execute()} method to invoke the remote operation.
             *
             * @param parent Required. "projects/{project}/locations/{location}" format.
             * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcChannel}
             * @return the request
             */
            public Create create(java.lang.String parent, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcChannel content) throws java.io.IOException {
              Create result = new Create(parent, content);
              initialize(result);
              return result;
            }

            public class Create extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcChannel> {

              private static final String REST_PATH = "v1alpha/{+parent}/sfdcChannels";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+/sfdcInstances/[^/]+$");

              /**
               * Creates an sfdc channel record. Store the sfdc channel in Spanner. Returns the sfdc channel.
               *
               * Create a request for the method "sfdcChannels.create".
               *
               * This request holds the parameters needed by the the integrations server.  After setting any
               * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
               * <p> {@link
               * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. "projects/{project}/locations/{location}" format.
               * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcChannel}
               * @since 1.13
               */
              protected Create(java.lang.String parent, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcChannel content) {
                super(Integrations.this, "POST", REST_PATH, content, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcChannel.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/sfdcInstances/[^/]+$");
                }
              }

              @Override
              public Create set$Xgafv(java.lang.String $Xgafv) {
                return (Create) super.set$Xgafv($Xgafv);
              }

              @Override
              public Create setAccessToken(java.lang.String accessToken) {
                return (Create) super.setAccessToken(accessToken);
              }

              @Override
              public Create setAlt(java.lang.String alt) {
                return (Create) super.setAlt(alt);
              }

              @Override
              public Create setCallback(java.lang.String callback) {
                return (Create) super.setCallback(callback);
              }

              @Override
              public Create setFields(java.lang.String fields) {
                return (Create) super.setFields(fields);
              }

              @Override
              public Create setKey(java.lang.String key) {
                return (Create) super.setKey(key);
              }

              @Override
              public Create setOauthToken(java.lang.String oauthToken) {
                return (Create) super.setOauthToken(oauthToken);
              }

              @Override
              public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Create) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Create setQuotaUser(java.lang.String quotaUser) {
                return (Create) super.setQuotaUser(quotaUser);
              }

              @Override
              public Create setUploadType(java.lang.String uploadType) {
                return (Create) super.setUploadType(uploadType);
              }

              @Override
              public Create setUploadProtocol(java.lang.String uploadProtocol) {
                return (Create) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. "projects/{project}/locations/{location}" format. */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. "projects/{project}/locations/{location}" format.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /** Required. "projects/{project}/locations/{location}" format. */
              public Create setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/sfdcInstances/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public Create set(String parameterName, Object value) {
                return (Create) super.set(parameterName, value);
              }
            }
            /**
             * Deletes an sfdc channel.
             *
             * Create a request for the method "sfdcChannels.delete".
             *
             * This request holds the parameters needed by the integrations server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param name Required. The name that is associated with the SfdcChannel.
             * @return the request
             */
            public Delete delete(java.lang.String name) throws java.io.IOException {
              Delete result = new Delete(name);
              initialize(result);
              return result;
            }

            public class Delete extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleProtobufEmpty> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+/sfdcInstances/[^/]+/sfdcChannels/[^/]+$");

              /**
               * Deletes an sfdc channel.
               *
               * Create a request for the method "sfdcChannels.delete".
               *
               * This request holds the parameters needed by the the integrations server.  After setting any
               * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               * <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name that is associated with the SfdcChannel.
               * @since 1.13
               */
              protected Delete(java.lang.String name) {
                super(Integrations.this, "DELETE", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleProtobufEmpty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/sfdcInstances/[^/]+/sfdcChannels/[^/]+$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The name that is associated with the SfdcChannel. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name that is associated with the SfdcChannel.
               */
              public java.lang.String getName() {
                return name;
              }

              /** Required. The name that is associated with the SfdcChannel. */
              public Delete setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/sfdcInstances/[^/]+/sfdcChannels/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * Gets an sfdc channel. If the channel doesn't exist, Code.NOT_FOUND exception will be thrown.
             *
             * Create a request for the method "sfdcChannels.get".
             *
             * This request holds the parameters needed by the integrations server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name Required. The name that is associated with the SfdcChannel.
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcChannel> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+/sfdcInstances/[^/]+/sfdcChannels/[^/]+$");

              /**
               * Gets an sfdc channel. If the channel doesn't exist, Code.NOT_FOUND exception will be thrown.
               *
               * Create a request for the method "sfdcChannels.get".
               *
               * This request holds the parameters needed by the the integrations server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name that is associated with the SfdcChannel.
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(Integrations.this, "GET", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcChannel.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/sfdcInstances/[^/]+/sfdcChannels/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The name that is associated with the SfdcChannel. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name that is associated with the SfdcChannel.
               */
              public java.lang.String getName() {
                return name;
              }

              /** Required. The name that is associated with the SfdcChannel. */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/sfdcInstances/[^/]+/sfdcChannels/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Lists all sfdc channels that match the filter. Restrict to sfdc channels belonging to the current
             * client only.
             *
             * Create a request for the method "sfdcChannels.list".
             *
             * This request holds the parameters needed by the integrations server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The client, which owns this collection of SfdcChannels.
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaListSfdcChannelsResponse> {

              private static final String REST_PATH = "v1alpha/{+parent}/sfdcChannels";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+/sfdcInstances/[^/]+$");

              /**
               * Lists all sfdc channels that match the filter. Restrict to sfdc channels belonging to the
               * current client only.
               *
               * Create a request for the method "sfdcChannels.list".
               *
               * This request holds the parameters needed by the the integrations server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The client, which owns this collection of SfdcChannels.
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(Integrations.this, "GET", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaListSfdcChannelsResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/sfdcInstances/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The client, which owns this collection of SfdcChannels. */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The client, which owns this collection of SfdcChannels.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /** Required. The client, which owns this collection of SfdcChannels. */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/sfdcInstances/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Filtering as supported in https://developers.google.com/authorized-
               * buyers/apis/guides/v2/list-filters.
               */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** Filtering as supported in https://developers.google.com/authorized-buyers/apis/guides/v2/list-
             filters.
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /**
               * Filtering as supported in https://developers.google.com/authorized-
               * buyers/apis/guides/v2/list-filters.
               */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /** The size of entries in the response. If unspecified, defaults to 100. */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** The size of entries in the response. If unspecified, defaults to 100.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /** The size of entries in the response. If unspecified, defaults to 100. */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /** The token returned in the previous response. */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** The token returned in the previous response.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /** The token returned in the previous response. */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              /**
               * The mask which specifies fields that need to be returned in the SfdcChannel's
               * response.
               */
              @com.google.api.client.util.Key
              private String readMask;

              /** The mask which specifies fields that need to be returned in the SfdcChannel's response.
               */
              public String getReadMask() {
                return readMask;
              }

              /**
               * The mask which specifies fields that need to be returned in the SfdcChannel's
               * response.
               */
              public List setReadMask(String readMask) {
                this.readMask = readMask;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }
            /**
             * Updates an sfdc channel. Updates the sfdc channel in spanner. Returns the sfdc channel.
             *
             * Create a request for the method "sfdcChannels.patch".
             *
             * This request holds the parameters needed by the integrations server.  After setting any optional
             * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             *
             * @param name Resource name of the SFDC channel
             *        projects/{project}/locations/{location}/sfdcInstances/{sfdc_instance}/sfdcChannels/{sfdc_c
             *        hannel}.
             * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcChannel}
             * @return the request
             */
            public Patch patch(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcChannel content) throws java.io.IOException {
              Patch result = new Patch(name, content);
              initialize(result);
              return result;
            }

            public class Patch extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcChannel> {

              private static final String REST_PATH = "v1alpha/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/products/[^/]+/sfdcInstances/[^/]+/sfdcChannels/[^/]+$");

              /**
               * Updates an sfdc channel. Updates the sfdc channel in spanner. Returns the sfdc channel.
               *
               * Create a request for the method "sfdcChannels.patch".
               *
               * This request holds the parameters needed by the the integrations server.  After setting any
               * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
               * <p> {@link
               * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Resource name of the SFDC channel
             *        projects/{project}/locations/{location}/sfdcInstances/{sfdc_instance}/sfdcChannels/{sfdc_c
             *        hannel}.
               * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcChannel}
               * @since 1.13
               */
              protected Patch(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcChannel content) {
                super(Integrations.this, "PATCH", REST_PATH, content, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcChannel.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/sfdcInstances/[^/]+/sfdcChannels/[^/]+$");
                }
              }

              @Override
              public Patch set$Xgafv(java.lang.String $Xgafv) {
                return (Patch) super.set$Xgafv($Xgafv);
              }

              @Override
              public Patch setAccessToken(java.lang.String accessToken) {
                return (Patch) super.setAccessToken(accessToken);
              }

              @Override
              public Patch setAlt(java.lang.String alt) {
                return (Patch) super.setAlt(alt);
              }

              @Override
              public Patch setCallback(java.lang.String callback) {
                return (Patch) super.setCallback(callback);
              }

              @Override
              public Patch setFields(java.lang.String fields) {
                return (Patch) super.setFields(fields);
              }

              @Override
              public Patch setKey(java.lang.String key) {
                return (Patch) super.setKey(key);
              }

              @Override
              public Patch setOauthToken(java.lang.String oauthToken) {
                return (Patch) super.setOauthToken(oauthToken);
              }

              @Override
              public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Patch) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Patch setQuotaUser(java.lang.String quotaUser) {
                return (Patch) super.setQuotaUser(quotaUser);
              }

              @Override
              public Patch setUploadType(java.lang.String uploadType) {
                return (Patch) super.setUploadType(uploadType);
              }

              @Override
              public Patch setUploadProtocol(java.lang.String uploadProtocol) {
                return (Patch) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Resource name of the SFDC channel projects/{project}/locations/{location}/sfdcInsta
               * nces/{sfdc_instance}/sfdcChannels/{sfdc_channel}.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Resource name of the SFDC channel
             projects/{project}/locations/{location}/sfdcInstances/{sfdc_instance}/sfdcChannels/{sfdc_channel}.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Resource name of the SFDC channel projects/{project}/locations/{location}/sfdcInsta
               * nces/{sfdc_instance}/sfdcChannels/{sfdc_channel}.
               */
              public Patch setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/products/[^/]+/sfdcInstances/[^/]+/sfdcChannels/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * Field mask specifying the fields in the above SfdcChannel that have been modified
               * and need to be updated.
               */
              @com.google.api.client.util.Key
              private String updateMask;

              /** Field mask specifying the fields in the above SfdcChannel that have been modified and need to be
             updated.
               */
              public String getUpdateMask() {
                return updateMask;
              }

              /**
               * Field mask specifying the fields in the above SfdcChannel that have been modified
               * and need to be updated.
               */
              public Patch setUpdateMask(String updateMask) {
                this.updateMask = updateMask;
                return this;
              }

              @Override
              public Patch set(String parameterName, Object value) {
                return (Patch) super.set(parameterName, value);
              }
            }

          }
        }
      }
      /**
       * An accessor for creating requests from the SfdcInstances collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Integrations integrations = new Integrations(...);}
       *   {@code Integrations.SfdcInstances.List request = integrations.sfdcInstances().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public SfdcInstances sfdcInstances() {
        return new SfdcInstances();
      }

      /**
       * The "sfdcInstances" collection of methods.
       */
      public class SfdcInstances {

        /**
         * Creates an sfdc instance record. Store the sfdc instance in Spanner. Returns the sfdc instance.
         *
         * Create a request for the method "sfdcInstances.create".
         *
         * This request holds the parameters needed by the integrations server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. "projects/{project}/locations/{location}" format.
         * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcInstance}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcInstance content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcInstance> {

          private static final String REST_PATH = "v1alpha/{+parent}/sfdcInstances";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates an sfdc instance record. Store the sfdc instance in Spanner. Returns the sfdc instance.
           *
           * Create a request for the method "sfdcInstances.create".
           *
           * This request holds the parameters needed by the the integrations server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. "projects/{project}/locations/{location}" format.
           * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcInstance}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcInstance content) {
            super(Integrations.this, "POST", REST_PATH, content, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcInstance.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. "projects/{project}/locations/{location}" format. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. "projects/{project}/locations/{location}" format.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. "projects/{project}/locations/{location}" format. */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes an sfdc instance.
         *
         * Create a request for the method "sfdcInstances.delete".
         *
         * This request holds the parameters needed by the integrations server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name that is associated with the SfdcInstance.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v1alpha/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sfdcInstances/[^/]+$");

          /**
           * Deletes an sfdc instance.
           *
           * Create a request for the method "sfdcInstances.delete".
           *
           * This request holds the parameters needed by the the integrations server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name that is associated with the SfdcInstance.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Integrations.this, "DELETE", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/sfdcInstances/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The name that is associated with the SfdcInstance. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name that is associated with the SfdcInstance.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The name that is associated with the SfdcInstance. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/sfdcInstances/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets an sfdc instance. If the instance doesn't exist, Code.NOT_FOUND exception will be thrown.
         *
         * Create a request for the method "sfdcInstances.get".
         *
         * This request holds the parameters needed by the integrations server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name that is associated with the SfdcInstance.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcInstance> {

          private static final String REST_PATH = "v1alpha/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sfdcInstances/[^/]+$");

          /**
           * Gets an sfdc instance. If the instance doesn't exist, Code.NOT_FOUND exception will be thrown.
           *
           * Create a request for the method "sfdcInstances.get".
           *
           * This request holds the parameters needed by the the integrations server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name that is associated with the SfdcInstance.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Integrations.this, "GET", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcInstance.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/sfdcInstances/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The name that is associated with the SfdcInstance. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name that is associated with the SfdcInstance.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The name that is associated with the SfdcInstance. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/sfdcInstances/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists all sfdc instances that match the filter. Restrict to sfdc instances belonging to the
         * current client only.
         *
         * Create a request for the method "sfdcInstances.list".
         *
         * This request holds the parameters needed by the integrations server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The client, which owns this collection of SfdcInstances.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaListSfdcInstancesResponse> {

          private static final String REST_PATH = "v1alpha/{+parent}/sfdcInstances";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists all sfdc instances that match the filter. Restrict to sfdc instances belonging to the
           * current client only.
           *
           * Create a request for the method "sfdcInstances.list".
           *
           * This request holds the parameters needed by the the integrations server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The client, which owns this collection of SfdcInstances.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Integrations.this, "GET", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaListSfdcInstancesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The client, which owns this collection of SfdcInstances. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The client, which owns this collection of SfdcInstances.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The client, which owns this collection of SfdcInstances. */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Filtering as supported in https://developers.google.com/authorized-
           * buyers/apis/guides/v2/list-filters.
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Filtering as supported in https://developers.google.com/authorized-buyers/apis/guides/v2/list-
         filters.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * Filtering as supported in https://developers.google.com/authorized-
           * buyers/apis/guides/v2/list-filters.
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** The size of entries in the response. If unspecified, defaults to 100. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The size of entries in the response. If unspecified, defaults to 100.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The size of entries in the response. If unspecified, defaults to 100. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The token returned in the previous response. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The token returned in the previous response.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The token returned in the previous response. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          /**
           * The mask which specifies fields that need to be returned in the SfdcInstance's
           * response.
           */
          @com.google.api.client.util.Key
          private String readMask;

          /** The mask which specifies fields that need to be returned in the SfdcInstance's response.
           */
          public String getReadMask() {
            return readMask;
          }

          /**
           * The mask which specifies fields that need to be returned in the SfdcInstance's
           * response.
           */
          public List setReadMask(String readMask) {
            this.readMask = readMask;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates an sfdc instance. Updates the sfdc instance in spanner. Returns the sfdc instance.
         *
         * Create a request for the method "sfdcInstances.patch".
         *
         * This request holds the parameters needed by the integrations server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Resource name of the SFDC instance
         *        projects/{project}/locations/{location}/sfdcInstances/{sfdcInstance}.
         * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcInstance}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcInstance content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcInstance> {

          private static final String REST_PATH = "v1alpha/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sfdcInstances/[^/]+$");

          /**
           * Updates an sfdc instance. Updates the sfdc instance in spanner. Returns the sfdc instance.
           *
           * Create a request for the method "sfdcInstances.patch".
           *
           * This request holds the parameters needed by the the integrations server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Resource name of the SFDC instance
         *        projects/{project}/locations/{location}/sfdcInstances/{sfdcInstance}.
           * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcInstance}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcInstance content) {
            super(Integrations.this, "PATCH", REST_PATH, content, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcInstance.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/sfdcInstances/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Resource name of the SFDC instance
           * projects/{project}/locations/{location}/sfdcInstances/{sfdcInstance}.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Resource name of the SFDC instance
         projects/{project}/locations/{location}/sfdcInstances/{sfdcInstance}.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Resource name of the SFDC instance
           * projects/{project}/locations/{location}/sfdcInstances/{sfdcInstance}.
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/sfdcInstances/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Field mask specifying the fields in the above SfdcInstance that have been modified and
           * need to be updated.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Field mask specifying the fields in the above SfdcInstance that have been modified and need to be
         updated.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Field mask specifying the fields in the above SfdcInstance that have been modified and
           * need to be updated.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the SfdcChannels collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Integrations integrations = new Integrations(...);}
         *   {@code Integrations.SfdcChannels.List request = integrations.sfdcChannels().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public SfdcChannels sfdcChannels() {
          return new SfdcChannels();
        }

        /**
         * The "sfdcChannels" collection of methods.
         */
        public class SfdcChannels {

          /**
           * Creates an sfdc channel record. Store the sfdc channel in Spanner. Returns the sfdc channel.
           *
           * Create a request for the method "sfdcChannels.create".
           *
           * This request holds the parameters needed by the integrations server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. "projects/{project}/locations/{location}" format.
           * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcChannel}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcChannel content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcChannel> {

            private static final String REST_PATH = "v1alpha/{+parent}/sfdcChannels";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sfdcInstances/[^/]+$");

            /**
             * Creates an sfdc channel record. Store the sfdc channel in Spanner. Returns the sfdc channel.
             *
             * Create a request for the method "sfdcChannels.create".
             *
             * This request holds the parameters needed by the the integrations server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. "projects/{project}/locations/{location}" format.
             * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcChannel}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcChannel content) {
              super(Integrations.this, "POST", REST_PATH, content, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcChannel.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sfdcInstances/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. "projects/{project}/locations/{location}" format. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. "projects/{project}/locations/{location}" format.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. "projects/{project}/locations/{location}" format. */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sfdcInstances/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes an sfdc channel.
           *
           * Create a request for the method "sfdcChannels.delete".
           *
           * This request holds the parameters needed by the integrations server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name that is associated with the SfdcChannel.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sfdcInstances/[^/]+/sfdcChannels/[^/]+$");

            /**
             * Deletes an sfdc channel.
             *
             * Create a request for the method "sfdcChannels.delete".
             *
             * This request holds the parameters needed by the the integrations server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name that is associated with the SfdcChannel.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Integrations.this, "DELETE", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sfdcInstances/[^/]+/sfdcChannels/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The name that is associated with the SfdcChannel. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name that is associated with the SfdcChannel.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. The name that is associated with the SfdcChannel. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sfdcInstances/[^/]+/sfdcChannels/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets an sfdc channel. If the channel doesn't exist, Code.NOT_FOUND exception will be thrown.
           *
           * Create a request for the method "sfdcChannels.get".
           *
           * This request holds the parameters needed by the integrations server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name that is associated with the SfdcChannel.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcChannel> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sfdcInstances/[^/]+/sfdcChannels/[^/]+$");

            /**
             * Gets an sfdc channel. If the channel doesn't exist, Code.NOT_FOUND exception will be thrown.
             *
             * Create a request for the method "sfdcChannels.get".
             *
             * This request holds the parameters needed by the the integrations server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name that is associated with the SfdcChannel.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Integrations.this, "GET", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcChannel.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sfdcInstances/[^/]+/sfdcChannels/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The name that is associated with the SfdcChannel. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name that is associated with the SfdcChannel.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. The name that is associated with the SfdcChannel. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sfdcInstances/[^/]+/sfdcChannels/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists all sfdc channels that match the filter. Restrict to sfdc channels belonging to the current
           * client only.
           *
           * Create a request for the method "sfdcChannels.list".
           *
           * This request holds the parameters needed by the integrations server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The client, which owns this collection of SfdcChannels.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaListSfdcChannelsResponse> {

            private static final String REST_PATH = "v1alpha/{+parent}/sfdcChannels";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sfdcInstances/[^/]+$");

            /**
             * Lists all sfdc channels that match the filter. Restrict to sfdc channels belonging to the
             * current client only.
             *
             * Create a request for the method "sfdcChannels.list".
             *
             * This request holds the parameters needed by the the integrations server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The client, which owns this collection of SfdcChannels.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Integrations.this, "GET", REST_PATH, null, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaListSfdcChannelsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sfdcInstances/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The client, which owns this collection of SfdcChannels. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The client, which owns this collection of SfdcChannels.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. The client, which owns this collection of SfdcChannels. */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sfdcInstances/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Filtering as supported in https://developers.google.com/authorized-
             * buyers/apis/guides/v2/list-filters.
             */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Filtering as supported in https://developers.google.com/authorized-buyers/apis/guides/v2/list-
           filters.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /**
             * Filtering as supported in https://developers.google.com/authorized-
             * buyers/apis/guides/v2/list-filters.
             */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** The size of entries in the response. If unspecified, defaults to 100. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The size of entries in the response. If unspecified, defaults to 100.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The size of entries in the response. If unspecified, defaults to 100. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The token returned in the previous response. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The token returned in the previous response.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The token returned in the previous response. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            /**
             * The mask which specifies fields that need to be returned in the SfdcChannel's
             * response.
             */
            @com.google.api.client.util.Key
            private String readMask;

            /** The mask which specifies fields that need to be returned in the SfdcChannel's response.
             */
            public String getReadMask() {
              return readMask;
            }

            /**
             * The mask which specifies fields that need to be returned in the SfdcChannel's
             * response.
             */
            public List setReadMask(String readMask) {
              this.readMask = readMask;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates an sfdc channel. Updates the sfdc channel in spanner. Returns the sfdc channel.
           *
           * Create a request for the method "sfdcChannels.patch".
           *
           * This request holds the parameters needed by the integrations server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Resource name of the SFDC channel
           *        projects/{project}/locations/{location}/sfdcInstances/{sfdc_instance}/sfdcChannels/{sfdc_c
           *        hannel}.
           * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcChannel}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcChannel content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends IntegrationsRequest<com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcChannel> {

            private static final String REST_PATH = "v1alpha/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sfdcInstances/[^/]+/sfdcChannels/[^/]+$");

            /**
             * Updates an sfdc channel. Updates the sfdc channel in spanner. Returns the sfdc channel.
             *
             * Create a request for the method "sfdcChannels.patch".
             *
             * This request holds the parameters needed by the the integrations server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Resource name of the SFDC channel
           *        projects/{project}/locations/{location}/sfdcInstances/{sfdc_instance}/sfdcChannels/{sfdc_c
           *        hannel}.
             * @param content the {@link com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcChannel}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcChannel content) {
              super(Integrations.this, "PATCH", REST_PATH, content, com.google.api.services.integrations.v1alpha.model.GoogleCloudIntegrationsV1alphaSfdcChannel.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sfdcInstances/[^/]+/sfdcChannels/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Resource name of the SFDC channel projects/{project}/locations/{location}/sfdcInstanc
             * es/{sfdc_instance}/sfdcChannels/{sfdc_channel}.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Resource name of the SFDC channel
           projects/{project}/locations/{location}/sfdcInstances/{sfdc_instance}/sfdcChannels/{sfdc_channel}.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Resource name of the SFDC channel projects/{project}/locations/{location}/sfdcInstanc
             * es/{sfdc_instance}/sfdcChannels/{sfdc_channel}.
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sfdcInstances/[^/]+/sfdcChannels/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Field mask specifying the fields in the above SfdcChannel that have been modified and
             * need to be updated.
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Field mask specifying the fields in the above SfdcChannel that have been modified and need to be
           updated.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * Field mask specifying the fields in the above SfdcChannel that have been modified and
             * need to be updated.
             */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }

        }
      }
    }
  }

  /**
   * Builder for {@link Integrations}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link Integrations}. */
    @Override
    public Integrations build() {
      return new Integrations(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link IntegrationsRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setIntegrationsRequestInitializer(
        IntegrationsRequestInitializer integrationsRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(integrationsRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
