/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.analyticsadmin.v1alpha.model;

/**
 * Expresses dimension or metric filters. The fields in the same expression need to be either all
 * dimensions or all metrics.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Analytics Admin API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleAnalyticsAdminV1alphaAccessFilterExpression extends com.google.api.client.json.GenericJson {

  /**
   * A primitive filter. In the same FilterExpression, all of the filter's field names need to be
   * either all dimensions or all metrics.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleAnalyticsAdminV1alphaAccessFilter accessFilter;

  /**
   * Each of the FilterExpressions in the and_group has an AND relationship.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleAnalyticsAdminV1alphaAccessFilterExpressionList andGroup;

  /**
   * The FilterExpression is NOT of not_expression.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleAnalyticsAdminV1alphaAccessFilterExpression notExpression;

  /**
   * Each of the FilterExpressions in the or_group has an OR relationship.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleAnalyticsAdminV1alphaAccessFilterExpressionList orGroup;

  /**
   * A primitive filter. In the same FilterExpression, all of the filter's field names need to be
   * either all dimensions or all metrics.
   * @return value or {@code null} for none
   */
  public GoogleAnalyticsAdminV1alphaAccessFilter getAccessFilter() {
    return accessFilter;
  }

  /**
   * A primitive filter. In the same FilterExpression, all of the filter's field names need to be
   * either all dimensions or all metrics.
   * @param accessFilter accessFilter or {@code null} for none
   */
  public GoogleAnalyticsAdminV1alphaAccessFilterExpression setAccessFilter(GoogleAnalyticsAdminV1alphaAccessFilter accessFilter) {
    this.accessFilter = accessFilter;
    return this;
  }

  /**
   * Each of the FilterExpressions in the and_group has an AND relationship.
   * @return value or {@code null} for none
   */
  public GoogleAnalyticsAdminV1alphaAccessFilterExpressionList getAndGroup() {
    return andGroup;
  }

  /**
   * Each of the FilterExpressions in the and_group has an AND relationship.
   * @param andGroup andGroup or {@code null} for none
   */
  public GoogleAnalyticsAdminV1alphaAccessFilterExpression setAndGroup(GoogleAnalyticsAdminV1alphaAccessFilterExpressionList andGroup) {
    this.andGroup = andGroup;
    return this;
  }

  /**
   * The FilterExpression is NOT of not_expression.
   * @return value or {@code null} for none
   */
  public GoogleAnalyticsAdminV1alphaAccessFilterExpression getNotExpression() {
    return notExpression;
  }

  /**
   * The FilterExpression is NOT of not_expression.
   * @param notExpression notExpression or {@code null} for none
   */
  public GoogleAnalyticsAdminV1alphaAccessFilterExpression setNotExpression(GoogleAnalyticsAdminV1alphaAccessFilterExpression notExpression) {
    this.notExpression = notExpression;
    return this;
  }

  /**
   * Each of the FilterExpressions in the or_group has an OR relationship.
   * @return value or {@code null} for none
   */
  public GoogleAnalyticsAdminV1alphaAccessFilterExpressionList getOrGroup() {
    return orGroup;
  }

  /**
   * Each of the FilterExpressions in the or_group has an OR relationship.
   * @param orGroup orGroup or {@code null} for none
   */
  public GoogleAnalyticsAdminV1alphaAccessFilterExpression setOrGroup(GoogleAnalyticsAdminV1alphaAccessFilterExpressionList orGroup) {
    this.orGroup = orGroup;
    return this;
  }

  @Override
  public GoogleAnalyticsAdminV1alphaAccessFilterExpression set(String fieldName, Object value) {
    return (GoogleAnalyticsAdminV1alphaAccessFilterExpression) super.set(fieldName, value);
  }

  @Override
  public GoogleAnalyticsAdminV1alphaAccessFilterExpression clone() {
    return (GoogleAnalyticsAdminV1alphaAccessFilterExpression) super.clone();
  }

}
