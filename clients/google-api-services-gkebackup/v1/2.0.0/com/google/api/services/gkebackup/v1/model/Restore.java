/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.gkebackup.v1.model;

/**
 * Represents both a request to Restore some portion of a Backup into a target GKE cluster and a
 * record of the restore operation itself.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Backup for GKE API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Restore extends com.google.api.client.json.GenericJson {

  /**
   * Required. Immutable. A reference to the Backup used as the source from which this Restore will
   * restore. Note that this Backup must be a sub-resource of the RestorePlan's backup_plan. Format:
   * `projects/locations/backupPlans/backups`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String backup;

  /**
   * Output only. The target cluster into which this Restore will restore data. Valid formats: -
   * `projects/locations/clusters` - `projects/zones/clusters` Inherited from parent RestorePlan's
   * cluster value.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String cluster;

  /**
   * Output only. Timestamp of when the restore operation completed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String completeTime;

  /**
   * Output only. The timestamp when this Restore resource was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * User specified descriptive string for this Restore.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Output only. `etag` is used for optimistic concurrency control as a way to help prevent
   * simultaneous updates of a restore from overwriting each other. It is strongly suggested that
   * systems make use of the `etag` in the read-modify-write cycle to perform restore updates in
   * order to avoid race conditions: An `etag` is returned in the response to `GetRestore`, and
   * systems are expected to put that etag in the request to `UpdateRestore` or `DeleteRestore` to
   * ensure that their change will be applied to the same version of the resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String etag;

  /**
   * Optional. Immutable. Filters resources for `Restore`. If not specified, the scope of the
   * restore will remain the same as defined in the `RestorePlan`. If this is specified and no
   * resources are matched by the `inclusion_filters` or everyting is excluded by the
   * `exclusion_filters`, nothing will be restored. This filter can only be specified if the value
   * of namespaced_resource_restore_mode is set to `MERGE_SKIP_ON_CONFLICT`,
   * `MERGE_REPLACE_VOLUME_ON_CONFLICT` or `MERGE_REPLACE_ON_CONFLICT`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Filter filter;

  /**
   * A set of custom labels supplied by user.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Output only. The full name of the Restore resource. Format:
   * `projects/locations/restorePlans/restores`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. Number of resources excluded during the restore execution.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer resourcesExcludedCount;

  /**
   * Output only. Number of resources that failed to be restored during the restore execution.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer resourcesFailedCount;

  /**
   * Output only. Number of resources restored during the restore execution.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer resourcesRestoredCount;

  /**
   * Output only. Configuration of the Restore. Inherited from parent RestorePlan's restore_config.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private RestoreConfig restoreConfig;

  /**
   * Output only. The current state of the Restore.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Output only. Human-readable description of why the Restore is in its current state. This field
   * is only meant for human readability and should not be used programmatically as this field is
   * not guaranteed to be consistent.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String stateReason;

  /**
   * Output only. Server generated global unique identifier of
   * [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) format.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String uid;

  /**
   * Output only. The timestamp when this Restore resource was last updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Optional. Immutable. Overrides the volume data restore policies selected in the Restore Config
   * for override-scoped resources.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<VolumeDataRestorePolicyOverride> volumeDataRestorePolicyOverrides;

  /**
   * Output only. Number of volumes restored during the restore execution.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer volumesRestoredCount;

  /**
   * Required. Immutable. A reference to the Backup used as the source from which this Restore will
   * restore. Note that this Backup must be a sub-resource of the RestorePlan's backup_plan. Format:
   * `projects/locations/backupPlans/backups`.
   * @return value or {@code null} for none
   */
  public java.lang.String getBackup() {
    return backup;
  }

  /**
   * Required. Immutable. A reference to the Backup used as the source from which this Restore will
   * restore. Note that this Backup must be a sub-resource of the RestorePlan's backup_plan. Format:
   * `projects/locations/backupPlans/backups`.
   * @param backup backup or {@code null} for none
   */
  public Restore setBackup(java.lang.String backup) {
    this.backup = backup;
    return this;
  }

  /**
   * Output only. The target cluster into which this Restore will restore data. Valid formats: -
   * `projects/locations/clusters` - `projects/zones/clusters` Inherited from parent RestorePlan's
   * cluster value.
   * @return value or {@code null} for none
   */
  public java.lang.String getCluster() {
    return cluster;
  }

  /**
   * Output only. The target cluster into which this Restore will restore data. Valid formats: -
   * `projects/locations/clusters` - `projects/zones/clusters` Inherited from parent RestorePlan's
   * cluster value.
   * @param cluster cluster or {@code null} for none
   */
  public Restore setCluster(java.lang.String cluster) {
    this.cluster = cluster;
    return this;
  }

  /**
   * Output only. Timestamp of when the restore operation completed.
   * @return value or {@code null} for none
   */
  public String getCompleteTime() {
    return completeTime;
  }

  /**
   * Output only. Timestamp of when the restore operation completed.
   * @param completeTime completeTime or {@code null} for none
   */
  public Restore setCompleteTime(String completeTime) {
    this.completeTime = completeTime;
    return this;
  }

  /**
   * Output only. The timestamp when this Restore resource was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The timestamp when this Restore resource was created.
   * @param createTime createTime or {@code null} for none
   */
  public Restore setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * User specified descriptive string for this Restore.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * User specified descriptive string for this Restore.
   * @param description description or {@code null} for none
   */
  public Restore setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Output only. `etag` is used for optimistic concurrency control as a way to help prevent
   * simultaneous updates of a restore from overwriting each other. It is strongly suggested that
   * systems make use of the `etag` in the read-modify-write cycle to perform restore updates in
   * order to avoid race conditions: An `etag` is returned in the response to `GetRestore`, and
   * systems are expected to put that etag in the request to `UpdateRestore` or `DeleteRestore` to
   * ensure that their change will be applied to the same version of the resource.
   * @return value or {@code null} for none
   */
  public java.lang.String getEtag() {
    return etag;
  }

  /**
   * Output only. `etag` is used for optimistic concurrency control as a way to help prevent
   * simultaneous updates of a restore from overwriting each other. It is strongly suggested that
   * systems make use of the `etag` in the read-modify-write cycle to perform restore updates in
   * order to avoid race conditions: An `etag` is returned in the response to `GetRestore`, and
   * systems are expected to put that etag in the request to `UpdateRestore` or `DeleteRestore` to
   * ensure that their change will be applied to the same version of the resource.
   * @param etag etag or {@code null} for none
   */
  public Restore setEtag(java.lang.String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * Optional. Immutable. Filters resources for `Restore`. If not specified, the scope of the
   * restore will remain the same as defined in the `RestorePlan`. If this is specified and no
   * resources are matched by the `inclusion_filters` or everyting is excluded by the
   * `exclusion_filters`, nothing will be restored. This filter can only be specified if the value
   * of namespaced_resource_restore_mode is set to `MERGE_SKIP_ON_CONFLICT`,
   * `MERGE_REPLACE_VOLUME_ON_CONFLICT` or `MERGE_REPLACE_ON_CONFLICT`.
   * @return value or {@code null} for none
   */
  public Filter getFilter() {
    return filter;
  }

  /**
   * Optional. Immutable. Filters resources for `Restore`. If not specified, the scope of the
   * restore will remain the same as defined in the `RestorePlan`. If this is specified and no
   * resources are matched by the `inclusion_filters` or everyting is excluded by the
   * `exclusion_filters`, nothing will be restored. This filter can only be specified if the value
   * of namespaced_resource_restore_mode is set to `MERGE_SKIP_ON_CONFLICT`,
   * `MERGE_REPLACE_VOLUME_ON_CONFLICT` or `MERGE_REPLACE_ON_CONFLICT`.
   * @param filter filter or {@code null} for none
   */
  public Restore setFilter(Filter filter) {
    this.filter = filter;
    return this;
  }

  /**
   * A set of custom labels supplied by user.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * A set of custom labels supplied by user.
   * @param labels labels or {@code null} for none
   */
  public Restore setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Output only. The full name of the Restore resource. Format:
   * `projects/locations/restorePlans/restores`
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. The full name of the Restore resource. Format:
   * `projects/locations/restorePlans/restores`
   * @param name name or {@code null} for none
   */
  public Restore setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. Number of resources excluded during the restore execution.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getResourcesExcludedCount() {
    return resourcesExcludedCount;
  }

  /**
   * Output only. Number of resources excluded during the restore execution.
   * @param resourcesExcludedCount resourcesExcludedCount or {@code null} for none
   */
  public Restore setResourcesExcludedCount(java.lang.Integer resourcesExcludedCount) {
    this.resourcesExcludedCount = resourcesExcludedCount;
    return this;
  }

  /**
   * Output only. Number of resources that failed to be restored during the restore execution.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getResourcesFailedCount() {
    return resourcesFailedCount;
  }

  /**
   * Output only. Number of resources that failed to be restored during the restore execution.
   * @param resourcesFailedCount resourcesFailedCount or {@code null} for none
   */
  public Restore setResourcesFailedCount(java.lang.Integer resourcesFailedCount) {
    this.resourcesFailedCount = resourcesFailedCount;
    return this;
  }

  /**
   * Output only. Number of resources restored during the restore execution.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getResourcesRestoredCount() {
    return resourcesRestoredCount;
  }

  /**
   * Output only. Number of resources restored during the restore execution.
   * @param resourcesRestoredCount resourcesRestoredCount or {@code null} for none
   */
  public Restore setResourcesRestoredCount(java.lang.Integer resourcesRestoredCount) {
    this.resourcesRestoredCount = resourcesRestoredCount;
    return this;
  }

  /**
   * Output only. Configuration of the Restore. Inherited from parent RestorePlan's restore_config.
   * @return value or {@code null} for none
   */
  public RestoreConfig getRestoreConfig() {
    return restoreConfig;
  }

  /**
   * Output only. Configuration of the Restore. Inherited from parent RestorePlan's restore_config.
   * @param restoreConfig restoreConfig or {@code null} for none
   */
  public Restore setRestoreConfig(RestoreConfig restoreConfig) {
    this.restoreConfig = restoreConfig;
    return this;
  }

  /**
   * Output only. The current state of the Restore.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. The current state of the Restore.
   * @param state state or {@code null} for none
   */
  public Restore setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Output only. Human-readable description of why the Restore is in its current state. This field
   * is only meant for human readability and should not be used programmatically as this field is
   * not guaranteed to be consistent.
   * @return value or {@code null} for none
   */
  public java.lang.String getStateReason() {
    return stateReason;
  }

  /**
   * Output only. Human-readable description of why the Restore is in its current state. This field
   * is only meant for human readability and should not be used programmatically as this field is
   * not guaranteed to be consistent.
   * @param stateReason stateReason or {@code null} for none
   */
  public Restore setStateReason(java.lang.String stateReason) {
    this.stateReason = stateReason;
    return this;
  }

  /**
   * Output only. Server generated global unique identifier of
   * [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) format.
   * @return value or {@code null} for none
   */
  public java.lang.String getUid() {
    return uid;
  }

  /**
   * Output only. Server generated global unique identifier of
   * [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) format.
   * @param uid uid or {@code null} for none
   */
  public Restore setUid(java.lang.String uid) {
    this.uid = uid;
    return this;
  }

  /**
   * Output only. The timestamp when this Restore resource was last updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. The timestamp when this Restore resource was last updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public Restore setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  /**
   * Optional. Immutable. Overrides the volume data restore policies selected in the Restore Config
   * for override-scoped resources.
   * @return value or {@code null} for none
   */
  public java.util.List<VolumeDataRestorePolicyOverride> getVolumeDataRestorePolicyOverrides() {
    return volumeDataRestorePolicyOverrides;
  }

  /**
   * Optional. Immutable. Overrides the volume data restore policies selected in the Restore Config
   * for override-scoped resources.
   * @param volumeDataRestorePolicyOverrides volumeDataRestorePolicyOverrides or {@code null} for none
   */
  public Restore setVolumeDataRestorePolicyOverrides(java.util.List<VolumeDataRestorePolicyOverride> volumeDataRestorePolicyOverrides) {
    this.volumeDataRestorePolicyOverrides = volumeDataRestorePolicyOverrides;
    return this;
  }

  /**
   * Output only. Number of volumes restored during the restore execution.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getVolumesRestoredCount() {
    return volumesRestoredCount;
  }

  /**
   * Output only. Number of volumes restored during the restore execution.
   * @param volumesRestoredCount volumesRestoredCount or {@code null} for none
   */
  public Restore setVolumesRestoredCount(java.lang.Integer volumesRestoredCount) {
    this.volumesRestoredCount = volumesRestoredCount;
    return this;
  }

  @Override
  public Restore set(String fieldName, Object value) {
    return (Restore) super.set(fieldName, value);
  }

  @Override
  public Restore clone() {
    return (Restore) super.clone();
  }

}
