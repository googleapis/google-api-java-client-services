/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.serviceusage.v1beta1.model;

/**
 * A quota bucket is a quota provisioning unit for a specific set of dimensions.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Service Usage API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class QuotaBucket extends com.google.api.client.json.GenericJson {

  /**
   * Admin override on this quota bucket.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private QuotaOverride adminOverride;

  /**
   * Consumer override on this quota bucket.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private QuotaOverride consumerOverride;

  /**
   * The default limit of this quota bucket, as specified by the service configuration.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long defaultLimit;

  /**
   * The dimensions of this quota bucket. If this map is empty, this is the global bucket, which is
   * the default quota value applied to all requests that do not have a more specific override. If
   * this map is nonempty, the default limit, effective limit, and quota overrides apply only to
   * requests that have the dimensions given in the map. For example, if the map has key "region"
   * and value "us-east-1", then the specified effective limit is only effective in that region, and
   * the specified overrides apply only in that region.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> dimensions;

  /**
   * The effective limit of this quota bucket. Equal to default_limit if there are no overrides.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long effectiveLimit;

  /**
   * Producer override on this quota bucket.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private QuotaOverride producerOverride;

  /**
   * Admin override on this quota bucket.
   * @return value or {@code null} for none
   */
  public QuotaOverride getAdminOverride() {
    return adminOverride;
  }

  /**
   * Admin override on this quota bucket.
   * @param adminOverride adminOverride or {@code null} for none
   */
  public QuotaBucket setAdminOverride(QuotaOverride adminOverride) {
    this.adminOverride = adminOverride;
    return this;
  }

  /**
   * Consumer override on this quota bucket.
   * @return value or {@code null} for none
   */
  public QuotaOverride getConsumerOverride() {
    return consumerOverride;
  }

  /**
   * Consumer override on this quota bucket.
   * @param consumerOverride consumerOverride or {@code null} for none
   */
  public QuotaBucket setConsumerOverride(QuotaOverride consumerOverride) {
    this.consumerOverride = consumerOverride;
    return this;
  }

  /**
   * The default limit of this quota bucket, as specified by the service configuration.
   * @return value or {@code null} for none
   */
  public java.lang.Long getDefaultLimit() {
    return defaultLimit;
  }

  /**
   * The default limit of this quota bucket, as specified by the service configuration.
   * @param defaultLimit defaultLimit or {@code null} for none
   */
  public QuotaBucket setDefaultLimit(java.lang.Long defaultLimit) {
    this.defaultLimit = defaultLimit;
    return this;
  }

  /**
   * The dimensions of this quota bucket. If this map is empty, this is the global bucket, which is
   * the default quota value applied to all requests that do not have a more specific override. If
   * this map is nonempty, the default limit, effective limit, and quota overrides apply only to
   * requests that have the dimensions given in the map. For example, if the map has key "region"
   * and value "us-east-1", then the specified effective limit is only effective in that region, and
   * the specified overrides apply only in that region.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getDimensions() {
    return dimensions;
  }

  /**
   * The dimensions of this quota bucket. If this map is empty, this is the global bucket, which is
   * the default quota value applied to all requests that do not have a more specific override. If
   * this map is nonempty, the default limit, effective limit, and quota overrides apply only to
   * requests that have the dimensions given in the map. For example, if the map has key "region"
   * and value "us-east-1", then the specified effective limit is only effective in that region, and
   * the specified overrides apply only in that region.
   * @param dimensions dimensions or {@code null} for none
   */
  public QuotaBucket setDimensions(java.util.Map<String, java.lang.String> dimensions) {
    this.dimensions = dimensions;
    return this;
  }

  /**
   * The effective limit of this quota bucket. Equal to default_limit if there are no overrides.
   * @return value or {@code null} for none
   */
  public java.lang.Long getEffectiveLimit() {
    return effectiveLimit;
  }

  /**
   * The effective limit of this quota bucket. Equal to default_limit if there are no overrides.
   * @param effectiveLimit effectiveLimit or {@code null} for none
   */
  public QuotaBucket setEffectiveLimit(java.lang.Long effectiveLimit) {
    this.effectiveLimit = effectiveLimit;
    return this;
  }

  /**
   * Producer override on this quota bucket.
   * @return value or {@code null} for none
   */
  public QuotaOverride getProducerOverride() {
    return producerOverride;
  }

  /**
   * Producer override on this quota bucket.
   * @param producerOverride producerOverride or {@code null} for none
   */
  public QuotaBucket setProducerOverride(QuotaOverride producerOverride) {
    this.producerOverride = producerOverride;
    return this;
  }

  @Override
  public QuotaBucket set(String fieldName, Object value) {
    return (QuotaBucket) super.set(fieldName, value);
  }

  @Override
  public QuotaBucket clone() {
    return (QuotaBucket) super.clone();
  }

}
