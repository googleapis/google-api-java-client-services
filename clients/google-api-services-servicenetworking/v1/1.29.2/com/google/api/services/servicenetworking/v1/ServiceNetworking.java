/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.servicenetworking.v1;

/**
 * Service definition for ServiceNetworking (v1).
 *
 * <p>
 * Provides automatic management of network configurations necessary for certain services.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/service-infrastructure/docs/service-networking/getting-started" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link ServiceNetworkingRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class ServiceNetworking extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.29.2 of the Service Networking API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://servicenetworking.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public ServiceNetworking(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  ServiceNetworking(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Operations collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ServiceNetworking servicenetworking = new ServiceNetworking(...);}
   *   {@code ServiceNetworking.Operations.List request = servicenetworking.operations().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Operations operations() {
    return new Operations();
  }

  /**
   * The "operations" collection of methods.
   */
  public class Operations {

    /**
     * Starts asynchronous cancellation on a long-running operation.  The server makes a best effort to
     * cancel the operation, but success is not guaranteed.  If the server doesn't support this method,
     * it returns `google.rpc.Code.UNIMPLEMENTED`.  Clients can use Operations.GetOperation or other
     * methods to check whether the cancellation succeeded or whether the operation completed despite
     * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
     * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
     * `Code.CANCELLED`.
     *
     * Create a request for the method "operations.cancel".
     *
     * This request holds the parameters needed by the servicenetworking server.  After setting any
     * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
     *
     * @param name The name of the operation resource to be cancelled.
     * @param content the {@link com.google.api.services.servicenetworking.v1.model.CancelOperationRequest}
     * @return the request
     */
    public Cancel cancel(java.lang.String name, com.google.api.services.servicenetworking.v1.model.CancelOperationRequest content) throws java.io.IOException {
      Cancel result = new Cancel(name, content);
      initialize(result);
      return result;
    }

    public class Cancel extends ServiceNetworkingRequest<com.google.api.services.servicenetworking.v1.model.Empty> {

      private static final String REST_PATH = "v1/{+name}:cancel";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^operations/.+$");

      /**
       * Starts asynchronous cancellation on a long-running operation.  The server makes a best effort
       * to cancel the operation, but success is not guaranteed.  If the server doesn't support this
       * method, it returns `google.rpc.Code.UNIMPLEMENTED`.  Clients can use Operations.GetOperation or
       * other methods to check whether the cancellation succeeded or whether the operation completed
       * despite cancellation. On successful cancellation, the operation is not deleted; instead, it
       * becomes an operation with an Operation.error value with a google.rpc.Status.code of 1,
       * corresponding to `Code.CANCELLED`.
       *
       * Create a request for the method "operations.cancel".
       *
       * This request holds the parameters needed by the the servicenetworking server.  After setting
       * any optional parameters, call the {@link Cancel#execute()} method to invoke the remote
       * operation. <p> {@link
       * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name The name of the operation resource to be cancelled.
       * @param content the {@link com.google.api.services.servicenetworking.v1.model.CancelOperationRequest}
       * @since 1.13
       */
      protected Cancel(java.lang.String name, com.google.api.services.servicenetworking.v1.model.CancelOperationRequest content) {
        super(ServiceNetworking.this, "POST", REST_PATH, content, com.google.api.services.servicenetworking.v1.model.Empty.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^operations/.+$");
        }
      }

      @Override
      public Cancel set$Xgafv(java.lang.String $Xgafv) {
        return (Cancel) super.set$Xgafv($Xgafv);
      }

      @Override
      public Cancel setAccessToken(java.lang.String accessToken) {
        return (Cancel) super.setAccessToken(accessToken);
      }

      @Override
      public Cancel setAlt(java.lang.String alt) {
        return (Cancel) super.setAlt(alt);
      }

      @Override
      public Cancel setCallback(java.lang.String callback) {
        return (Cancel) super.setCallback(callback);
      }

      @Override
      public Cancel setFields(java.lang.String fields) {
        return (Cancel) super.setFields(fields);
      }

      @Override
      public Cancel setKey(java.lang.String key) {
        return (Cancel) super.setKey(key);
      }

      @Override
      public Cancel setOauthToken(java.lang.String oauthToken) {
        return (Cancel) super.setOauthToken(oauthToken);
      }

      @Override
      public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Cancel) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Cancel setQuotaUser(java.lang.String quotaUser) {
        return (Cancel) super.setQuotaUser(quotaUser);
      }

      @Override
      public Cancel setUploadType(java.lang.String uploadType) {
        return (Cancel) super.setUploadType(uploadType);
      }

      @Override
      public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
        return (Cancel) super.setUploadProtocol(uploadProtocol);
      }

      /** The name of the operation resource to be cancelled. */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** The name of the operation resource to be cancelled.
       */
      public java.lang.String getName() {
        return name;
      }

      /** The name of the operation resource to be cancelled. */
      public Cancel setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^operations/.+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Cancel set(String parameterName, Object value) {
        return (Cancel) super.set(parameterName, value);
      }
    }
    /**
     * Deletes a long-running operation. This method indicates that the client is no longer interested
     * in the operation result. It does not cancel the operation. If the server doesn't support this
     * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
     *
     * Create a request for the method "operations.delete".
     *
     * This request holds the parameters needed by the servicenetworking server.  After setting any
     * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param name The name of the operation resource to be deleted.
     * @return the request
     */
    public Delete delete(java.lang.String name) throws java.io.IOException {
      Delete result = new Delete(name);
      initialize(result);
      return result;
    }

    public class Delete extends ServiceNetworkingRequest<com.google.api.services.servicenetworking.v1.model.Empty> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^operations/.+$");

      /**
       * Deletes a long-running operation. This method indicates that the client is no longer interested
       * in the operation result. It does not cancel the operation. If the server doesn't support this
       * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
       *
       * Create a request for the method "operations.delete".
       *
       * This request holds the parameters needed by the the servicenetworking server.  After setting
       * any optional parameters, call the {@link Delete#execute()} method to invoke the remote
       * operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name The name of the operation resource to be deleted.
       * @since 1.13
       */
      protected Delete(java.lang.String name) {
        super(ServiceNetworking.this, "DELETE", REST_PATH, null, com.google.api.services.servicenetworking.v1.model.Empty.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^operations/.+$");
        }
      }

      @Override
      public Delete set$Xgafv(java.lang.String $Xgafv) {
        return (Delete) super.set$Xgafv($Xgafv);
      }

      @Override
      public Delete setAccessToken(java.lang.String accessToken) {
        return (Delete) super.setAccessToken(accessToken);
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setCallback(java.lang.String callback) {
        return (Delete) super.setCallback(callback);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUploadType(java.lang.String uploadType) {
        return (Delete) super.setUploadType(uploadType);
      }

      @Override
      public Delete setUploadProtocol(java.lang.String uploadProtocol) {
        return (Delete) super.setUploadProtocol(uploadProtocol);
      }

      /** The name of the operation resource to be deleted. */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** The name of the operation resource to be deleted.
       */
      public java.lang.String getName() {
        return name;
      }

      /** The name of the operation resource to be deleted. */
      public Delete setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^operations/.+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Gets the latest state of a long-running operation.  Clients can use this method to poll the
     * operation result at intervals as recommended by the API service.
     *
     * Create a request for the method "operations.get".
     *
     * This request holds the parameters needed by the servicenetworking server.  After setting any
     * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param name The name of the operation resource.
     * @return the request
     */
    public Get get(java.lang.String name) throws java.io.IOException {
      Get result = new Get(name);
      initialize(result);
      return result;
    }

    public class Get extends ServiceNetworkingRequest<com.google.api.services.servicenetworking.v1.model.Operation> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^operations/[^/]+$");

      /**
       * Gets the latest state of a long-running operation.  Clients can use this method to poll the
       * operation result at intervals as recommended by the API service.
       *
       * Create a request for the method "operations.get".
       *
       * This request holds the parameters needed by the the servicenetworking server.  After setting
       * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       * <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name The name of the operation resource.
       * @since 1.13
       */
      protected Get(java.lang.String name) {
        super(ServiceNetworking.this, "GET", REST_PATH, null, com.google.api.services.servicenetworking.v1.model.Operation.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^operations/[^/]+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /** The name of the operation resource. */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** The name of the operation resource.
       */
      public java.lang.String getName() {
        return name;
      }

      /** The name of the operation resource. */
      public Get setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^operations/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Lists operations that match the specified filter in the request. If the server doesn't support
     * this method, it returns `UNIMPLEMENTED`.
     *
     * NOTE: the `name` binding allows API services to override the binding to use different resource
     * name schemes, such as `users/operations`. To override the binding, API services can add a binding
     * such as `"/v1/{name=users}/operations"` to their service configuration. For backwards
     * compatibility, the default name includes the operations collection id, however overriding users
     * must ensure the name binding is the parent resource, without the operations collection id.
     *
     * Create a request for the method "operations.list".
     *
     * This request holds the parameters needed by the servicenetworking server.  After setting any
     * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param name The name of the operation's parent resource.
     * @return the request
     */
    public List list(java.lang.String name) throws java.io.IOException {
      List result = new List(name);
      initialize(result);
      return result;
    }

    public class List extends ServiceNetworkingRequest<com.google.api.services.servicenetworking.v1.model.ListOperationsResponse> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^operations$");

      /**
       * Lists operations that match the specified filter in the request. If the server doesn't support
       * this method, it returns `UNIMPLEMENTED`.
       *
       * NOTE: the `name` binding allows API services to override the binding to use different resource
       * name schemes, such as `users/operations`. To override the binding, API services can add a
       * binding such as `"/v1/{name=users}/operations"` to their service configuration. For backwards
       * compatibility, the default name includes the operations collection id, however overriding users
       * must ensure the name binding is the parent resource, without the operations collection id.
       *
       * Create a request for the method "operations.list".
       *
       * This request holds the parameters needed by the the servicenetworking server.  After setting
       * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       * <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name The name of the operation's parent resource.
       * @since 1.13
       */
      protected List(java.lang.String name) {
        super(ServiceNetworking.this, "GET", REST_PATH, null, com.google.api.services.servicenetworking.v1.model.ListOperationsResponse.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^operations$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /** The name of the operation's parent resource. */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** The name of the operation's parent resource.
       */
      public java.lang.String getName() {
        return name;
      }

      /** The name of the operation's parent resource. */
      public List setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^operations$");
        }
        this.name = name;
        return this;
      }

      /** The standard list filter. */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** The standard list filter.
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /** The standard list filter. */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /** The standard list page size. */
      @com.google.api.client.util.Key
      private java.lang.Integer pageSize;

      /** The standard list page size.
       */
      public java.lang.Integer getPageSize() {
        return pageSize;
      }

      /** The standard list page size. */
      public List setPageSize(java.lang.Integer pageSize) {
        this.pageSize = pageSize;
        return this;
      }

      /** The standard list page token. */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** The standard list page token.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /** The standard list page token. */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Services collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ServiceNetworking servicenetworking = new ServiceNetworking(...);}
   *   {@code ServiceNetworking.Services.List request = servicenetworking.services().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Services services() {
    return new Services();
  }

  /**
   * The "services" collection of methods.
   */
  public class Services {

    /**
     * For service producers, provisions a new subnet in a peered service's shared VPC network in the
     * requested region and with the requested size that's expressed as a CIDR range (number of leading
     * bits of ipV4 network mask). The method checks against the assigned allocated ranges to find a
     * non-conflicting IP address range. The method will reuse a subnet if subsequent calls contain the
     * same subnet name, region, and prefix length. This method will make producer's tenant project to
     * be a shared VPC service project as needed. The response from the `get` operation will be of type
     * `Subnetwork` if the operation successfully completes.
     *
     * Create a request for the method "services.addSubnetwork".
     *
     * This request holds the parameters needed by the servicenetworking server.  After setting any
     * optional parameters, call the {@link AddSubnetwork#execute()} method to invoke the remote
     * operation.
     *
     * @param parent Required. A tenant project in the service producer organization, in the
    following format:
     *        services/{service}/{collection-id}/{resource-id}.
    {collection-id} is the cloud resource
     *        collection type that represents the
    tenant project. Only `projects` are supported.
     *        {resource-id} is the tenant project numeric id, such as
    `123456`. {service} the name of
     *        the peering service, such as
    `service-peering.example.com`. This service must already be
     *        enabled in the service consumer's project.
     * @param content the {@link com.google.api.services.servicenetworking.v1.model.AddSubnetworkRequest}
     * @return the request
     */
    public AddSubnetwork addSubnetwork(java.lang.String parent, com.google.api.services.servicenetworking.v1.model.AddSubnetworkRequest content) throws java.io.IOException {
      AddSubnetwork result = new AddSubnetwork(parent, content);
      initialize(result);
      return result;
    }

    public class AddSubnetwork extends ServiceNetworkingRequest<com.google.api.services.servicenetworking.v1.model.Operation> {

      private static final String REST_PATH = "v1/{+parent}:addSubnetwork";

      private final java.util.regex.Pattern PARENT_PATTERN =
          java.util.regex.Pattern.compile("^services/[^/]+/[^/]+/[^/]+$");

      /**
       * For service producers, provisions a new subnet in a peered service's shared VPC network in the
       * requested region and with the requested size that's expressed as a CIDR range (number of
       * leading bits of ipV4 network mask). The method checks against the assigned allocated ranges to
       * find a non-conflicting IP address range. The method will reuse a subnet if subsequent calls
       * contain the same subnet name, region, and prefix length. This method will make producer's
       * tenant project to be a shared VPC service project as needed. The response from the `get`
       * operation will be of type `Subnetwork` if the operation successfully completes.
       *
       * Create a request for the method "services.addSubnetwork".
       *
       * This request holds the parameters needed by the the servicenetworking server.  After setting
       * any optional parameters, call the {@link AddSubnetwork#execute()} method to invoke the remote
       * operation. <p> {@link AddSubnetwork#initialize(com.google.api.client.googleapis.services.Abstra
       * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
       * the constructor. </p>
       *
       * @param parent Required. A tenant project in the service producer organization, in the
    following format:
     *        services/{service}/{collection-id}/{resource-id}.
    {collection-id} is the cloud resource
     *        collection type that represents the
    tenant project. Only `projects` are supported.
     *        {resource-id} is the tenant project numeric id, such as
    `123456`. {service} the name of
     *        the peering service, such as
    `service-peering.example.com`. This service must already be
     *        enabled in the service consumer's project.
       * @param content the {@link com.google.api.services.servicenetworking.v1.model.AddSubnetworkRequest}
       * @since 1.13
       */
      protected AddSubnetwork(java.lang.String parent, com.google.api.services.servicenetworking.v1.model.AddSubnetworkRequest content) {
        super(ServiceNetworking.this, "POST", REST_PATH, content, com.google.api.services.servicenetworking.v1.model.Operation.class);
        this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^services/[^/]+/[^/]+/[^/]+$");
        }
      }

      @Override
      public AddSubnetwork set$Xgafv(java.lang.String $Xgafv) {
        return (AddSubnetwork) super.set$Xgafv($Xgafv);
      }

      @Override
      public AddSubnetwork setAccessToken(java.lang.String accessToken) {
        return (AddSubnetwork) super.setAccessToken(accessToken);
      }

      @Override
      public AddSubnetwork setAlt(java.lang.String alt) {
        return (AddSubnetwork) super.setAlt(alt);
      }

      @Override
      public AddSubnetwork setCallback(java.lang.String callback) {
        return (AddSubnetwork) super.setCallback(callback);
      }

      @Override
      public AddSubnetwork setFields(java.lang.String fields) {
        return (AddSubnetwork) super.setFields(fields);
      }

      @Override
      public AddSubnetwork setKey(java.lang.String key) {
        return (AddSubnetwork) super.setKey(key);
      }

      @Override
      public AddSubnetwork setOauthToken(java.lang.String oauthToken) {
        return (AddSubnetwork) super.setOauthToken(oauthToken);
      }

      @Override
      public AddSubnetwork setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AddSubnetwork) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AddSubnetwork setQuotaUser(java.lang.String quotaUser) {
        return (AddSubnetwork) super.setQuotaUser(quotaUser);
      }

      @Override
      public AddSubnetwork setUploadType(java.lang.String uploadType) {
        return (AddSubnetwork) super.setUploadType(uploadType);
      }

      @Override
      public AddSubnetwork setUploadProtocol(java.lang.String uploadProtocol) {
        return (AddSubnetwork) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. A tenant project in the service producer organization, in the following format:
       * services/{service}/{collection-id}/{resource-id}. {collection-id} is the cloud resource
       * collection type that represents the tenant project. Only `projects` are supported.
       * {resource-id} is the tenant project numeric id, such as `123456`. {service} the name of the
       * peering service, such as `service-peering.example.com`. This service must already be
       * enabled in the service consumer's project.
       */
      @com.google.api.client.util.Key
      private java.lang.String parent;

      /** Required. A tenant project in the service producer organization, in the following format:
     services/{service}/{collection-id}/{resource-id}. {collection-id} is the cloud resource collection
     type that represents the tenant project. Only `projects` are supported. {resource-id} is the tenant
     project numeric id, such as `123456`. {service} the name of the peering service, such as `service-
     peering.example.com`. This service must already be enabled in the service consumer's project.
       */
      public java.lang.String getParent() {
        return parent;
      }

      /**
       * Required. A tenant project in the service producer organization, in the following format:
       * services/{service}/{collection-id}/{resource-id}. {collection-id} is the cloud resource
       * collection type that represents the tenant project. Only `projects` are supported.
       * {resource-id} is the tenant project numeric id, such as `123456`. {service} the name of the
       * peering service, such as `service-peering.example.com`. This service must already be
       * enabled in the service consumer's project.
       */
      public AddSubnetwork setParent(java.lang.String parent) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^services/[^/]+/[^/]+/[^/]+$");
        }
        this.parent = parent;
        return this;
      }

      @Override
      public AddSubnetwork set(String parameterName, Object value) {
        return (AddSubnetwork) super.set(parameterName, value);
      }
    }
    /**
     * Service producers can use this method to find a currently unused range within consumer allocated
     * ranges.   This returned range is not reserved, and not guaranteed to remain unused. It will
     * validate previously provided allocated ranges, find non-conflicting sub-range of requested size
     * (expressed in number of leading bits of ipv4 network mask, as in CIDR range notation). Operation
     *
     * Create a request for the method "services.searchRange".
     *
     * This request holds the parameters needed by the servicenetworking server.  After setting any
     * optional parameters, call the {@link SearchRange#execute()} method to invoke the remote
     * operation.
     *
     * @param parent Required. This is in a form services/{service}.
    {service} the name of the private access management
     *        service, for example
    'service-peering.example.com'.
     * @param content the {@link com.google.api.services.servicenetworking.v1.model.SearchRangeRequest}
     * @return the request
     */
    public SearchRange searchRange(java.lang.String parent, com.google.api.services.servicenetworking.v1.model.SearchRangeRequest content) throws java.io.IOException {
      SearchRange result = new SearchRange(parent, content);
      initialize(result);
      return result;
    }

    public class SearchRange extends ServiceNetworkingRequest<com.google.api.services.servicenetworking.v1.model.Operation> {

      private static final String REST_PATH = "v1/{+parent}:searchRange";

      private final java.util.regex.Pattern PARENT_PATTERN =
          java.util.regex.Pattern.compile("^services/[^/]+$");

      /**
       * Service producers can use this method to find a currently unused range within consumer
       * allocated ranges.   This returned range is not reserved, and not guaranteed to remain unused.
       * It will validate previously provided allocated ranges, find non-conflicting sub-range of
       * requested size (expressed in number of leading bits of ipv4 network mask, as in CIDR range
       * notation). Operation
       *
       * Create a request for the method "services.searchRange".
       *
       * This request holds the parameters needed by the the servicenetworking server.  After setting
       * any optional parameters, call the {@link SearchRange#execute()} method to invoke the remote
       * operation. <p> {@link
       * SearchRange#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param parent Required. This is in a form services/{service}.
    {service} the name of the private access management
     *        service, for example
    'service-peering.example.com'.
       * @param content the {@link com.google.api.services.servicenetworking.v1.model.SearchRangeRequest}
       * @since 1.13
       */
      protected SearchRange(java.lang.String parent, com.google.api.services.servicenetworking.v1.model.SearchRangeRequest content) {
        super(ServiceNetworking.this, "POST", REST_PATH, content, com.google.api.services.servicenetworking.v1.model.Operation.class);
        this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^services/[^/]+$");
        }
      }

      @Override
      public SearchRange set$Xgafv(java.lang.String $Xgafv) {
        return (SearchRange) super.set$Xgafv($Xgafv);
      }

      @Override
      public SearchRange setAccessToken(java.lang.String accessToken) {
        return (SearchRange) super.setAccessToken(accessToken);
      }

      @Override
      public SearchRange setAlt(java.lang.String alt) {
        return (SearchRange) super.setAlt(alt);
      }

      @Override
      public SearchRange setCallback(java.lang.String callback) {
        return (SearchRange) super.setCallback(callback);
      }

      @Override
      public SearchRange setFields(java.lang.String fields) {
        return (SearchRange) super.setFields(fields);
      }

      @Override
      public SearchRange setKey(java.lang.String key) {
        return (SearchRange) super.setKey(key);
      }

      @Override
      public SearchRange setOauthToken(java.lang.String oauthToken) {
        return (SearchRange) super.setOauthToken(oauthToken);
      }

      @Override
      public SearchRange setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SearchRange) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SearchRange setQuotaUser(java.lang.String quotaUser) {
        return (SearchRange) super.setQuotaUser(quotaUser);
      }

      @Override
      public SearchRange setUploadType(java.lang.String uploadType) {
        return (SearchRange) super.setUploadType(uploadType);
      }

      @Override
      public SearchRange setUploadProtocol(java.lang.String uploadProtocol) {
        return (SearchRange) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. This is in a form services/{service}. {service} the name of the private access
       * management service, for example 'service-peering.example.com'.
       */
      @com.google.api.client.util.Key
      private java.lang.String parent;

      /** Required. This is in a form services/{service}. {service} the name of the private access management
     service, for example 'service-peering.example.com'.
       */
      public java.lang.String getParent() {
        return parent;
      }

      /**
       * Required. This is in a form services/{service}. {service} the name of the private access
       * management service, for example 'service-peering.example.com'.
       */
      public SearchRange setParent(java.lang.String parent) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^services/[^/]+$");
        }
        this.parent = parent;
        return this;
      }

      @Override
      public SearchRange set(String parameterName, Object value) {
        return (SearchRange) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the Connections collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code ServiceNetworking servicenetworking = new ServiceNetworking(...);}
     *   {@code ServiceNetworking.Connections.List request = servicenetworking.connections().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Connections connections() {
      return new Connections();
    }

    /**
     * The "connections" collection of methods.
     */
    public class Connections {

      /**
       * Creates a private connection that establishes a VPC Network Peering connection to a VPC network
       * in the service producer's organization. The administrator of the service consumer's VPC network
       * invokes this method. The administrator must assign one or more allocated IP ranges for
       * provisioning subnetworks in the service producer's VPC network. This connection is used for all
       * supported services in the service producer's organization, so it only needs to be invoked once.
       * The response from the `get` operation will be of type `Connection` if the operation successfully
       * completes.
       *
       * Create a request for the method "connections.create".
       *
       * This request holds the parameters needed by the servicenetworking server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent The service that is managing peering connectivity for a service producer's
      organization. For Google
       *        services that support this functionality, this
      value is
       *        `services/servicenetworking.googleapis.com`.
       * @param content the {@link com.google.api.services.servicenetworking.v1.model.Connection}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.servicenetworking.v1.model.Connection content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends ServiceNetworkingRequest<com.google.api.services.servicenetworking.v1.model.Operation> {

        private static final String REST_PATH = "v1/{+parent}/connections";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^services/[^/]+$");

        /**
         * Creates a private connection that establishes a VPC Network Peering connection to a VPC network
         * in the service producer's organization. The administrator of the service consumer's VPC network
         * invokes this method. The administrator must assign one or more allocated IP ranges for
         * provisioning subnetworks in the service producer's VPC network. This connection is used for all
         * supported services in the service producer's organization, so it only needs to be invoked once.
         * The response from the `get` operation will be of type `Connection` if the operation
         * successfully completes.
         *
         * Create a request for the method "connections.create".
         *
         * This request holds the parameters needed by the the servicenetworking server.  After setting
         * any optional parameters, call the {@link Create#execute()} method to invoke the remote
         * operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The service that is managing peering connectivity for a service producer's
      organization. For Google
       *        services that support this functionality, this
      value is
       *        `services/servicenetworking.googleapis.com`.
         * @param content the {@link com.google.api.services.servicenetworking.v1.model.Connection}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.servicenetworking.v1.model.Connection content) {
          super(ServiceNetworking.this, "POST", REST_PATH, content, com.google.api.services.servicenetworking.v1.model.Operation.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^services/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The service that is managing peering connectivity for a service producer's organization.
         * For Google services that support this functionality, this value is
         * `services/servicenetworking.googleapis.com`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The service that is managing peering connectivity for a service producer's organization. For Google
       services that support this functionality, this value is
       `services/servicenetworking.googleapis.com`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * The service that is managing peering connectivity for a service producer's organization.
         * For Google services that support this functionality, this value is
         * `services/servicenetworking.googleapis.com`.
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^services/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * List the private connections that are configured in a service consumer's VPC network.
       *
       * Create a request for the method "connections.list".
       *
       * This request holds the parameters needed by the servicenetworking server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent The service that is managing peering connectivity for a service producer's
      organization. For Google
       *        services that support this functionality, this
      value is
       *        `services/servicenetworking.googleapis.com`.
      If you specify `services/-` as the parameter
       *        value, all configured peering
      services are listed.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ServiceNetworkingRequest<com.google.api.services.servicenetworking.v1.model.ListConnectionsResponse> {

        private static final String REST_PATH = "v1/{+parent}/connections";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^services/[^/]+$");

        /**
         * List the private connections that are configured in a service consumer's VPC network.
         *
         * Create a request for the method "connections.list".
         *
         * This request holds the parameters needed by the the servicenetworking server.  After setting
         * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         * <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The service that is managing peering connectivity for a service producer's
      organization. For Google
       *        services that support this functionality, this
      value is
       *        `services/servicenetworking.googleapis.com`.
      If you specify `services/-` as the parameter
       *        value, all configured peering
      services are listed.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(ServiceNetworking.this, "GET", REST_PATH, null, com.google.api.services.servicenetworking.v1.model.ListConnectionsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^services/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The service that is managing peering connectivity for a service producer's organization.
         * For Google services that support this functionality, this value is
         * `services/servicenetworking.googleapis.com`. If you specify `services/-` as the parameter
         * value, all configured peering services are listed.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The service that is managing peering connectivity for a service producer's organization. For Google
       services that support this functionality, this value is
       `services/servicenetworking.googleapis.com`. If you specify `services/-` as the parameter value,
       all configured peering services are listed.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * The service that is managing peering connectivity for a service producer's organization.
         * For Google services that support this functionality, this value is
         * `services/servicenetworking.googleapis.com`. If you specify `services/-` as the parameter
         * value, all configured peering services are listed.
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^services/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * The name of service consumer's VPC network that's connected with service producer network
         * through a private connection. The network name must be in the following format:
         * `projects/{project}/global/networks/{network}`. {project} is a project number, such as in
         * `12345` that includes the VPC service consumer's VPC network. {network} is the name of
         * the service consumer's VPC network.
         */
        @com.google.api.client.util.Key
        private java.lang.String network;

        /** The name of service consumer's VPC network that's connected with service producer network through a
       private connection. The network name must be in the following format:
       `projects/{project}/global/networks/{network}`. {project} is a project number, such as in `12345`
       that includes the VPC service consumer's VPC network. {network} is the name of the service
       consumer's VPC network.
         */
        public java.lang.String getNetwork() {
          return network;
        }

        /**
         * The name of service consumer's VPC network that's connected with service producer network
         * through a private connection. The network name must be in the following format:
         * `projects/{project}/global/networks/{network}`. {project} is a project number, such as in
         * `12345` that includes the VPC service consumer's VPC network. {network} is the name of
         * the service consumer's VPC network.
         */
        public List setNetwork(java.lang.String network) {
          this.network = network;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates the allocated ranges that are assigned to a connection. The response from the `get`
       * operation will be of type `Connection` if the operation successfully completes.
       *
       * Create a request for the method "connections.patch".
       *
       * This request holds the parameters needed by the servicenetworking server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name The private service connection that connects to a service producer
      organization. The name includes
       *        both the private service name and the VPC
      network peering name in the format of
       *        `services/{peering_service_name}/connections/{vpc_peering_name}`. For
      Google services that
       *        support this functionality, this is
      `services/servicenetworking.googleapis.com/connections
       *        /servicenetworking-googleapis-com`.
       * @param content the {@link com.google.api.services.servicenetworking.v1.model.Connection}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.servicenetworking.v1.model.Connection content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends ServiceNetworkingRequest<com.google.api.services.servicenetworking.v1.model.Operation> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^services/[^/]+/connections/[^/]+$");

        /**
         * Updates the allocated ranges that are assigned to a connection. The response from the `get`
         * operation will be of type `Connection` if the operation successfully completes.
         *
         * Create a request for the method "connections.patch".
         *
         * This request holds the parameters needed by the the servicenetworking server.  After setting
         * any optional parameters, call the {@link Patch#execute()} method to invoke the remote
         * operation. <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The private service connection that connects to a service producer
      organization. The name includes
       *        both the private service name and the VPC
      network peering name in the format of
       *        `services/{peering_service_name}/connections/{vpc_peering_name}`. For
      Google services that
       *        support this functionality, this is
      `services/servicenetworking.googleapis.com/connections
       *        /servicenetworking-googleapis-com`.
         * @param content the {@link com.google.api.services.servicenetworking.v1.model.Connection}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.servicenetworking.v1.model.Connection content) {
          super(ServiceNetworking.this, "PATCH", REST_PATH, content, com.google.api.services.servicenetworking.v1.model.Operation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^services/[^/]+/connections/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The private service connection that connects to a service producer organization. The name
         * includes both the private service name and the VPC network peering name in the format of
         * `services/{peering_service_name}/connections/{vpc_peering_name}`. For Google services
         * that support this functionality, this is
         * `services/servicenetworking.googleapis.com/connections/servicenetworking-googleapis-com`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The private service connection that connects to a service producer organization. The name includes
       both the private service name and the VPC network peering name in the format of
       `services/{peering_service_name}/connections/{vpc_peering_name}`. For Google services that support
       this functionality, this is `services/servicenetworking.googleapis.com/connections
       /servicenetworking-googleapis-com`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * The private service connection that connects to a service producer organization. The name
         * includes both the private service name and the VPC network peering name in the format of
         * `services/{peering_service_name}/connections/{vpc_peering_name}`. For Google services
         * that support this functionality, this is
         * `services/servicenetworking.googleapis.com/connections/servicenetworking-googleapis-com`.
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^services/[^/]+/connections/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * If a previously defined allocated range is removed, force flag must be set to true.
         */
        @com.google.api.client.util.Key
        private java.lang.Boolean force;

        /** If a previously defined allocated range is removed, force flag must be set to true.
         */
        public java.lang.Boolean getForce() {
          return force;
        }

        /**
         * If a previously defined allocated range is removed, force flag must be set to true.
         */
        public Patch setForce(java.lang.Boolean force) {
          this.force = force;
          return this;
        }

        /**
         * The update mask. If this is omitted, it defaults to "*". You can only update the listed
         * peering ranges.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** The update mask. If this is omitted, it defaults to "*". You can only update the listed peering
       ranges.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * The update mask. If this is omitted, it defaults to "*". You can only update the listed
         * peering ranges.
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * Builder for {@link ServiceNetworking}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link ServiceNetworking}. */
    @Override
    public ServiceNetworking build() {
      return new ServiceNetworking(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link ServiceNetworkingRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setServiceNetworkingRequestInitializer(
        ServiceNetworkingRequestInitializer servicenetworkingRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(servicenetworkingRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
