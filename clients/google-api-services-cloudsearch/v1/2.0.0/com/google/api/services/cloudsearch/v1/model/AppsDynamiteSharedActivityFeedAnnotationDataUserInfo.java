/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudsearch.v1.model;

/**
 * UserId of the AF item updater to show and the updater count to show.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Search API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AppsDynamiteSharedActivityFeedAnnotationDataUserInfo extends com.google.api.client.json.GenericJson {

  /**
   * Describes how updater_count_to_show should be used.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String updaterCountDisplayType;

  /**
   * The number of updaters for clients to show, currently set to the total number of updaters minus
   * the one set in updater_to_show.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer updaterCountToShow;

  /**
   * The updater for clients to show.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AppsDynamiteUserId updaterToShow;

  /**
   * Describes how updater_count_to_show should be used.
   * @return value or {@code null} for none
   */
  public java.lang.String getUpdaterCountDisplayType() {
    return updaterCountDisplayType;
  }

  /**
   * Describes how updater_count_to_show should be used.
   * @param updaterCountDisplayType updaterCountDisplayType or {@code null} for none
   */
  public AppsDynamiteSharedActivityFeedAnnotationDataUserInfo setUpdaterCountDisplayType(java.lang.String updaterCountDisplayType) {
    this.updaterCountDisplayType = updaterCountDisplayType;
    return this;
  }

  /**
   * The number of updaters for clients to show, currently set to the total number of updaters minus
   * the one set in updater_to_show.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getUpdaterCountToShow() {
    return updaterCountToShow;
  }

  /**
   * The number of updaters for clients to show, currently set to the total number of updaters minus
   * the one set in updater_to_show.
   * @param updaterCountToShow updaterCountToShow or {@code null} for none
   */
  public AppsDynamiteSharedActivityFeedAnnotationDataUserInfo setUpdaterCountToShow(java.lang.Integer updaterCountToShow) {
    this.updaterCountToShow = updaterCountToShow;
    return this;
  }

  /**
   * The updater for clients to show.
   * @return value or {@code null} for none
   */
  public AppsDynamiteUserId getUpdaterToShow() {
    return updaterToShow;
  }

  /**
   * The updater for clients to show.
   * @param updaterToShow updaterToShow or {@code null} for none
   */
  public AppsDynamiteSharedActivityFeedAnnotationDataUserInfo setUpdaterToShow(AppsDynamiteUserId updaterToShow) {
    this.updaterToShow = updaterToShow;
    return this;
  }

  @Override
  public AppsDynamiteSharedActivityFeedAnnotationDataUserInfo set(String fieldName, Object value) {
    return (AppsDynamiteSharedActivityFeedAnnotationDataUserInfo) super.set(fieldName, value);
  }

  @Override
  public AppsDynamiteSharedActivityFeedAnnotationDataUserInfo clone() {
    return (AppsDynamiteSharedActivityFeedAnnotationDataUserInfo) super.clone();
  }

}
