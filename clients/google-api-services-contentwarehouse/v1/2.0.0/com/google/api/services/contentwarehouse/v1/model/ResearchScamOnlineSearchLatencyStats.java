/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Structure to hold the response time for a node. Last used: 3
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ResearchScamOnlineSearchLatencyStats extends com.google.api.client.json.GenericJson {

  /**
   * An estimate of the CPU time used for this query on the machine associated with task_id, from
   * when the query was received to when the response was ready to send, in seconds. Caveats: 1.
   * Does not account for CPU time spent serializing, deserializing, compressing or decompressing
   * protos within Stubby. 2. Does not account for cleanup time after response has been sent.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double cpuTime;

  /**
   * Task number associated with response time measurements.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer taskId;

  /**
   * Wall time taken on the machine associated with task_id from when the query was received to when
   * the response was ready to send, in seconds. This time excludes the time spent sending the
   * response and the time to perform cleanup operations after the response is sent.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double wallTime;

  /**
   * An estimate of the CPU time used for this query on the machine associated with task_id, from
   * when the query was received to when the response was ready to send, in seconds. Caveats: 1.
   * Does not account for CPU time spent serializing, deserializing, compressing or decompressing
   * protos within Stubby. 2. Does not account for cleanup time after response has been sent.
   * @return value or {@code null} for none
   */
  public java.lang.Double getCpuTime() {
    return cpuTime;
  }

  /**
   * An estimate of the CPU time used for this query on the machine associated with task_id, from
   * when the query was received to when the response was ready to send, in seconds. Caveats: 1.
   * Does not account for CPU time spent serializing, deserializing, compressing or decompressing
   * protos within Stubby. 2. Does not account for cleanup time after response has been sent.
   * @param cpuTime cpuTime or {@code null} for none
   */
  public ResearchScamOnlineSearchLatencyStats setCpuTime(java.lang.Double cpuTime) {
    this.cpuTime = cpuTime;
    return this;
  }

  /**
   * Task number associated with response time measurements.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getTaskId() {
    return taskId;
  }

  /**
   * Task number associated with response time measurements.
   * @param taskId taskId or {@code null} for none
   */
  public ResearchScamOnlineSearchLatencyStats setTaskId(java.lang.Integer taskId) {
    this.taskId = taskId;
    return this;
  }

  /**
   * Wall time taken on the machine associated with task_id from when the query was received to when
   * the response was ready to send, in seconds. This time excludes the time spent sending the
   * response and the time to perform cleanup operations after the response is sent.
   * @return value or {@code null} for none
   */
  public java.lang.Double getWallTime() {
    return wallTime;
  }

  /**
   * Wall time taken on the machine associated with task_id from when the query was received to when
   * the response was ready to send, in seconds. This time excludes the time spent sending the
   * response and the time to perform cleanup operations after the response is sent.
   * @param wallTime wallTime or {@code null} for none
   */
  public ResearchScamOnlineSearchLatencyStats setWallTime(java.lang.Double wallTime) {
    this.wallTime = wallTime;
    return this;
  }

  @Override
  public ResearchScamOnlineSearchLatencyStats set(String fieldName, Object value) {
    return (ResearchScamOnlineSearchLatencyStats) super.set(fieldName, value);
  }

  @Override
  public ResearchScamOnlineSearchLatencyStats clone() {
    return (ResearchScamOnlineSearchLatencyStats) super.clone();
  }

}
