/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.vmwareengine.v1.model;

/**
 * Network configuration in the consumer project with which the peering has to be done.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the VMware Engine API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class NetworkConfig extends com.google.api.client.json.GenericJson {

  /**
   * Output only. DNS Server IP of the Private Cloud. All DNS queries can be forwarded to this
   * address for name resolution of Private Cloud's management entities like vCenter, NSX-T Manager
   * and ESXi hosts.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String dnsServerIp;

  /**
   * Required. Management CIDR used by VMware management appliances.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String managementCidr;

  /**
   * Output only. The IP address layout version of the management IP address range. Possible
   * versions include: * `managementIpAddressLayoutVersion=1`: Indicates the legacy IP address
   * layout used by some existing private clouds. This is no longer supported for new private clouds
   * as it does not support all features. * `managementIpAddressLayoutVersion=2`: Indicates the
   * latest IP address layout used by all newly created private clouds. This version supports all
   * current features.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer managementIpAddressLayoutVersion;

  /**
   * Optional. The relative resource name of the VMware Engine network attached to the private
   * cloud. Specify the name in the following form:
   * `projects/{project}/locations/{location}/vmwareEngineNetworks/{vmware_engine_network_id}` where
   * `{project}` can either be a project number or a project ID.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String vmwareEngineNetwork;

  /**
   * Output only. The canonical name of the VMware Engine network in the form: `projects/{project_nu
   * mber}/locations/{location}/vmwareEngineNetworks/{vmware_engine_network_id}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String vmwareEngineNetworkCanonical;

  /**
   * Output only. DNS Server IP of the Private Cloud. All DNS queries can be forwarded to this
   * address for name resolution of Private Cloud's management entities like vCenter, NSX-T Manager
   * and ESXi hosts.
   * @return value or {@code null} for none
   */
  public java.lang.String getDnsServerIp() {
    return dnsServerIp;
  }

  /**
   * Output only. DNS Server IP of the Private Cloud. All DNS queries can be forwarded to this
   * address for name resolution of Private Cloud's management entities like vCenter, NSX-T Manager
   * and ESXi hosts.
   * @param dnsServerIp dnsServerIp or {@code null} for none
   */
  public NetworkConfig setDnsServerIp(java.lang.String dnsServerIp) {
    this.dnsServerIp = dnsServerIp;
    return this;
  }

  /**
   * Required. Management CIDR used by VMware management appliances.
   * @return value or {@code null} for none
   */
  public java.lang.String getManagementCidr() {
    return managementCidr;
  }

  /**
   * Required. Management CIDR used by VMware management appliances.
   * @param managementCidr managementCidr or {@code null} for none
   */
  public NetworkConfig setManagementCidr(java.lang.String managementCidr) {
    this.managementCidr = managementCidr;
    return this;
  }

  /**
   * Output only. The IP address layout version of the management IP address range. Possible
   * versions include: * `managementIpAddressLayoutVersion=1`: Indicates the legacy IP address
   * layout used by some existing private clouds. This is no longer supported for new private clouds
   * as it does not support all features. * `managementIpAddressLayoutVersion=2`: Indicates the
   * latest IP address layout used by all newly created private clouds. This version supports all
   * current features.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getManagementIpAddressLayoutVersion() {
    return managementIpAddressLayoutVersion;
  }

  /**
   * Output only. The IP address layout version of the management IP address range. Possible
   * versions include: * `managementIpAddressLayoutVersion=1`: Indicates the legacy IP address
   * layout used by some existing private clouds. This is no longer supported for new private clouds
   * as it does not support all features. * `managementIpAddressLayoutVersion=2`: Indicates the
   * latest IP address layout used by all newly created private clouds. This version supports all
   * current features.
   * @param managementIpAddressLayoutVersion managementIpAddressLayoutVersion or {@code null} for none
   */
  public NetworkConfig setManagementIpAddressLayoutVersion(java.lang.Integer managementIpAddressLayoutVersion) {
    this.managementIpAddressLayoutVersion = managementIpAddressLayoutVersion;
    return this;
  }

  /**
   * Optional. The relative resource name of the VMware Engine network attached to the private
   * cloud. Specify the name in the following form:
   * `projects/{project}/locations/{location}/vmwareEngineNetworks/{vmware_engine_network_id}` where
   * `{project}` can either be a project number or a project ID.
   * @return value or {@code null} for none
   */
  public java.lang.String getVmwareEngineNetwork() {
    return vmwareEngineNetwork;
  }

  /**
   * Optional. The relative resource name of the VMware Engine network attached to the private
   * cloud. Specify the name in the following form:
   * `projects/{project}/locations/{location}/vmwareEngineNetworks/{vmware_engine_network_id}` where
   * `{project}` can either be a project number or a project ID.
   * @param vmwareEngineNetwork vmwareEngineNetwork or {@code null} for none
   */
  public NetworkConfig setVmwareEngineNetwork(java.lang.String vmwareEngineNetwork) {
    this.vmwareEngineNetwork = vmwareEngineNetwork;
    return this;
  }

  /**
   * Output only. The canonical name of the VMware Engine network in the form: `projects/{project_nu
   * mber}/locations/{location}/vmwareEngineNetworks/{vmware_engine_network_id}`
   * @return value or {@code null} for none
   */
  public java.lang.String getVmwareEngineNetworkCanonical() {
    return vmwareEngineNetworkCanonical;
  }

  /**
   * Output only. The canonical name of the VMware Engine network in the form: `projects/{project_nu
   * mber}/locations/{location}/vmwareEngineNetworks/{vmware_engine_network_id}`
   * @param vmwareEngineNetworkCanonical vmwareEngineNetworkCanonical or {@code null} for none
   */
  public NetworkConfig setVmwareEngineNetworkCanonical(java.lang.String vmwareEngineNetworkCanonical) {
    this.vmwareEngineNetworkCanonical = vmwareEngineNetworkCanonical;
    return this;
  }

  @Override
  public NetworkConfig set(String fieldName, Object value) {
    return (NetworkConfig) super.set(fieldName, value);
  }

  @Override
  public NetworkConfig clone() {
    return (NetworkConfig) super.clone();
  }

}
