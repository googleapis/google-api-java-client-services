/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.androidmanagement.v1.model;

/**
 * A system freeze period. When a device’s clock is within the freeze period, all incoming system
 * updates (including security patches) are blocked and won’t be installed. When a device is outside
 * the freeze period, normal update behavior applies. Leap years are ignored in freeze period
 * calculations, in particular: * If Feb. 29th is set as the start or end date of a freeze period,
 * the freeze period will start or end on Feb. 28th instead. * When a device’s system clock reads
 * Feb. 29th, it’s treated as Feb. 28th. * When calculating the number of days in a freeze period or
 * the time between two freeze periods, Feb. 29th is ignored and not counted as a day.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Android Management API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class FreezePeriod extends com.google.api.client.json.GenericJson {

  /**
   * The end date (inclusive) of the freeze period. Must be no later than 90 days from the start
   * date. If the end date is earlier than the start date, the freeze period is considered wrapping
   * year-end. Note: year must not be set. For example, {"month": 1,"date": 30}.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Date endDate;

  /**
   * The start date (inclusive) of the freeze period. Note: year must not be set. For example,
   * {"month": 1,"date": 30}.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Date startDate;

  /**
   * The end date (inclusive) of the freeze period. Must be no later than 90 days from the start
   * date. If the end date is earlier than the start date, the freeze period is considered wrapping
   * year-end. Note: year must not be set. For example, {"month": 1,"date": 30}.
   * @return value or {@code null} for none
   */
  public Date getEndDate() {
    return endDate;
  }

  /**
   * The end date (inclusive) of the freeze period. Must be no later than 90 days from the start
   * date. If the end date is earlier than the start date, the freeze period is considered wrapping
   * year-end. Note: year must not be set. For example, {"month": 1,"date": 30}.
   * @param endDate endDate or {@code null} for none
   */
  public FreezePeriod setEndDate(Date endDate) {
    this.endDate = endDate;
    return this;
  }

  /**
   * The start date (inclusive) of the freeze period. Note: year must not be set. For example,
   * {"month": 1,"date": 30}.
   * @return value or {@code null} for none
   */
  public Date getStartDate() {
    return startDate;
  }

  /**
   * The start date (inclusive) of the freeze period. Note: year must not be set. For example,
   * {"month": 1,"date": 30}.
   * @param startDate startDate or {@code null} for none
   */
  public FreezePeriod setStartDate(Date startDate) {
    this.startDate = startDate;
    return this;
  }

  @Override
  public FreezePeriod set(String fieldName, Object value) {
    return (FreezePeriod) super.set(fieldName, value);
  }

  @Override
  public FreezePeriod clone() {
    return (FreezePeriod) super.clone();
  }

}
