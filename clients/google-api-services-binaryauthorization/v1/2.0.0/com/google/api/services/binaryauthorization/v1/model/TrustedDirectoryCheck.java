/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.binaryauthorization.v1.model;

/**
 * A trusted directory check, which rejects images that do not come from the set of user-configured
 * trusted directories.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Binary Authorization API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class TrustedDirectoryCheck extends com.google.api.client.json.GenericJson {

  /**
   * Required. List of trusted directory patterns. A pattern is in the form
   * "registry/path/to/directory". The registry domain part is defined as two or more dot-separated
   * words, e.g., `us.pkg.dev`, or `gcr.io`. Additionally, `*` can be used in three ways as
   * wildcards: 1. leading `*` to match varying prefixes in registry subdomain (useful for location
   * prefixes); 2. trailing `*` after registry/ to match varying endings; 3. trailing `**` after
   * registry/ to match "/" as well. For example: -- `gcr.io/my-project/my-repo` is valid to match a
   * single directory -- `*-docker.pkg.dev/my-project/my-repo` or `*.gcr.io/my-project` are valid to
   * match varying prefixes -- `gcr.io/my-project` will match all direct directories in `my-project`
   * -- `gcr.io/my-project*` would match all directories in `my-project` -- `gcr.i*` is not allowed
   * since the registry is not completely specified -- `sub*domain.gcr.io/nginx` is not valid
   * because only leading `*` or trailing `*` are allowed. -- `*pkg.dev/my-project/my-repo` is not
   * valid because leading `*` can only match subdomain -- `**-docker.pkg.dev` is not valid because
   * one leading `*` is allowed, and that it cannot match `/`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> trustedDirPatterns;

  /**
   * Required. List of trusted directory patterns. A pattern is in the form
   * "registry/path/to/directory". The registry domain part is defined as two or more dot-separated
   * words, e.g., `us.pkg.dev`, or `gcr.io`. Additionally, `*` can be used in three ways as
   * wildcards: 1. leading `*` to match varying prefixes in registry subdomain (useful for location
   * prefixes); 2. trailing `*` after registry/ to match varying endings; 3. trailing `**` after
   * registry/ to match "/" as well. For example: -- `gcr.io/my-project/my-repo` is valid to match a
   * single directory -- `*-docker.pkg.dev/my-project/my-repo` or `*.gcr.io/my-project` are valid to
   * match varying prefixes -- `gcr.io/my-project` will match all direct directories in `my-project`
   * -- `gcr.io/my-project*` would match all directories in `my-project` -- `gcr.i*` is not allowed
   * since the registry is not completely specified -- `sub*domain.gcr.io/nginx` is not valid
   * because only leading `*` or trailing `*` are allowed. -- `*pkg.dev/my-project/my-repo` is not
   * valid because leading `*` can only match subdomain -- `**-docker.pkg.dev` is not valid because
   * one leading `*` is allowed, and that it cannot match `/`
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getTrustedDirPatterns() {
    return trustedDirPatterns;
  }

  /**
   * Required. List of trusted directory patterns. A pattern is in the form
   * "registry/path/to/directory". The registry domain part is defined as two or more dot-separated
   * words, e.g., `us.pkg.dev`, or `gcr.io`. Additionally, `*` can be used in three ways as
   * wildcards: 1. leading `*` to match varying prefixes in registry subdomain (useful for location
   * prefixes); 2. trailing `*` after registry/ to match varying endings; 3. trailing `**` after
   * registry/ to match "/" as well. For example: -- `gcr.io/my-project/my-repo` is valid to match a
   * single directory -- `*-docker.pkg.dev/my-project/my-repo` or `*.gcr.io/my-project` are valid to
   * match varying prefixes -- `gcr.io/my-project` will match all direct directories in `my-project`
   * -- `gcr.io/my-project*` would match all directories in `my-project` -- `gcr.i*` is not allowed
   * since the registry is not completely specified -- `sub*domain.gcr.io/nginx` is not valid
   * because only leading `*` or trailing `*` are allowed. -- `*pkg.dev/my-project/my-repo` is not
   * valid because leading `*` can only match subdomain -- `**-docker.pkg.dev` is not valid because
   * one leading `*` is allowed, and that it cannot match `/`
   * @param trustedDirPatterns trustedDirPatterns or {@code null} for none
   */
  public TrustedDirectoryCheck setTrustedDirPatterns(java.util.List<java.lang.String> trustedDirPatterns) {
    this.trustedDirPatterns = trustedDirPatterns;
    return this;
  }

  @Override
  public TrustedDirectoryCheck set(String fieldName, Object value) {
    return (TrustedDirectoryCheck) super.set(fieldName, value);
  }

  @Override
  public TrustedDirectoryCheck clone() {
    return (TrustedDirectoryCheck) super.clone();
  }

}
