/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.chromemanagement.v1.model;

/**
 * Response containing counts for devices that need attention.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Chrome Management API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleChromeManagementV1CountChromeDevicesThatNeedAttentionResponse extends com.google.api.client.json.GenericJson {

  /**
   * Number of ChromeOS devices have not synced policies in the past 28 days.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long noRecentPolicySyncCount;

  /**
   * Number of ChromeOS devices that have not seen any user activity in the past 28 days.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long noRecentUserActivityCount;

  /**
   * Number of devices whose OS version is not compliant.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long osVersionNotCompliantCount;

  /**
   * Number of devices that are pending an OS update.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long pendingUpdate;

  /**
   * Number of devices that are unable to apply a policy due to an OS version mismatch.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long unsupportedPolicyCount;

  /**
   * Number of ChromeOS devices have not synced policies in the past 28 days.
   * @return value or {@code null} for none
   */
  public java.lang.Long getNoRecentPolicySyncCount() {
    return noRecentPolicySyncCount;
  }

  /**
   * Number of ChromeOS devices have not synced policies in the past 28 days.
   * @param noRecentPolicySyncCount noRecentPolicySyncCount or {@code null} for none
   */
  public GoogleChromeManagementV1CountChromeDevicesThatNeedAttentionResponse setNoRecentPolicySyncCount(java.lang.Long noRecentPolicySyncCount) {
    this.noRecentPolicySyncCount = noRecentPolicySyncCount;
    return this;
  }

  /**
   * Number of ChromeOS devices that have not seen any user activity in the past 28 days.
   * @return value or {@code null} for none
   */
  public java.lang.Long getNoRecentUserActivityCount() {
    return noRecentUserActivityCount;
  }

  /**
   * Number of ChromeOS devices that have not seen any user activity in the past 28 days.
   * @param noRecentUserActivityCount noRecentUserActivityCount or {@code null} for none
   */
  public GoogleChromeManagementV1CountChromeDevicesThatNeedAttentionResponse setNoRecentUserActivityCount(java.lang.Long noRecentUserActivityCount) {
    this.noRecentUserActivityCount = noRecentUserActivityCount;
    return this;
  }

  /**
   * Number of devices whose OS version is not compliant.
   * @return value or {@code null} for none
   */
  public java.lang.Long getOsVersionNotCompliantCount() {
    return osVersionNotCompliantCount;
  }

  /**
   * Number of devices whose OS version is not compliant.
   * @param osVersionNotCompliantCount osVersionNotCompliantCount or {@code null} for none
   */
  public GoogleChromeManagementV1CountChromeDevicesThatNeedAttentionResponse setOsVersionNotCompliantCount(java.lang.Long osVersionNotCompliantCount) {
    this.osVersionNotCompliantCount = osVersionNotCompliantCount;
    return this;
  }

  /**
   * Number of devices that are pending an OS update.
   * @return value or {@code null} for none
   */
  public java.lang.Long getPendingUpdate() {
    return pendingUpdate;
  }

  /**
   * Number of devices that are pending an OS update.
   * @param pendingUpdate pendingUpdate or {@code null} for none
   */
  public GoogleChromeManagementV1CountChromeDevicesThatNeedAttentionResponse setPendingUpdate(java.lang.Long pendingUpdate) {
    this.pendingUpdate = pendingUpdate;
    return this;
  }

  /**
   * Number of devices that are unable to apply a policy due to an OS version mismatch.
   * @return value or {@code null} for none
   */
  public java.lang.Long getUnsupportedPolicyCount() {
    return unsupportedPolicyCount;
  }

  /**
   * Number of devices that are unable to apply a policy due to an OS version mismatch.
   * @param unsupportedPolicyCount unsupportedPolicyCount or {@code null} for none
   */
  public GoogleChromeManagementV1CountChromeDevicesThatNeedAttentionResponse setUnsupportedPolicyCount(java.lang.Long unsupportedPolicyCount) {
    this.unsupportedPolicyCount = unsupportedPolicyCount;
    return this;
  }

  @Override
  public GoogleChromeManagementV1CountChromeDevicesThatNeedAttentionResponse set(String fieldName, Object value) {
    return (GoogleChromeManagementV1CountChromeDevicesThatNeedAttentionResponse) super.set(fieldName, value);
  }

  @Override
  public GoogleChromeManagementV1CountChromeDevicesThatNeedAttentionResponse clone() {
    return (GoogleChromeManagementV1CountChromeDevicesThatNeedAttentionResponse) super.clone();
  }

}
