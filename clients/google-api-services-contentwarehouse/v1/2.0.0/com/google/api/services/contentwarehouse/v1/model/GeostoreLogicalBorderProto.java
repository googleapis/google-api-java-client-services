/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * A logical border is a grouping of border features, which together model a divide between two
 * regions. The borders within this grouping share common attributes, such as the regions they
 * divide, and may represent a conceptual group of borders, of which may be wholly disputed, wholly
 * undisputed, or a mixture of disputed and undisputed. Note that any borders within this group may
 * be part of multiple logical borders. A logical border is required to have a name describing what
 * the grouping represents (e.g. "US - Mexico Border", "Kosovo - Serbia Border (Disputed)").
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GeostoreLogicalBorderProto extends com.google.api.client.json.GenericJson {

  /**
   * All the border segments which make up this logical border. Border segments must be TYPE_BORDER
   * features which have the same left/right features. This is a many-to-many bidirectional
   * relationship, so any border segment within this list might be part of another logical border.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GeostoreFeatureIdProto> borderSegment;

  static {
    // hack to force ProGuard to consider GeostoreFeatureIdProto used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(GeostoreFeatureIdProto.class);
  }

  /**
   * The logical border status identifies its legal status. This is similar to the BorderStatus
   * present within border segments, but applies to the group as a whole.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String status;

  /**
   * All the border segments which make up this logical border. Border segments must be TYPE_BORDER
   * features which have the same left/right features. This is a many-to-many bidirectional
   * relationship, so any border segment within this list might be part of another logical border.
   * @return value or {@code null} for none
   */
  public java.util.List<GeostoreFeatureIdProto> getBorderSegment() {
    return borderSegment;
  }

  /**
   * All the border segments which make up this logical border. Border segments must be TYPE_BORDER
   * features which have the same left/right features. This is a many-to-many bidirectional
   * relationship, so any border segment within this list might be part of another logical border.
   * @param borderSegment borderSegment or {@code null} for none
   */
  public GeostoreLogicalBorderProto setBorderSegment(java.util.List<GeostoreFeatureIdProto> borderSegment) {
    this.borderSegment = borderSegment;
    return this;
  }

  /**
   * The logical border status identifies its legal status. This is similar to the BorderStatus
   * present within border segments, but applies to the group as a whole.
   * @return value or {@code null} for none
   */
  public java.lang.String getStatus() {
    return status;
  }

  /**
   * The logical border status identifies its legal status. This is similar to the BorderStatus
   * present within border segments, but applies to the group as a whole.
   * @param status status or {@code null} for none
   */
  public GeostoreLogicalBorderProto setStatus(java.lang.String status) {
    this.status = status;
    return this;
  }

  @Override
  public GeostoreLogicalBorderProto set(String fieldName, Object value) {
    return (GeostoreLogicalBorderProto) super.set(fieldName, value);
  }

  @Override
  public GeostoreLogicalBorderProto clone() {
    return (GeostoreLogicalBorderProto) super.clone();
  }

}
