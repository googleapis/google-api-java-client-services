/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.compute.model;

/**
 * Model definition for LocalDisk.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Compute Engine API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class LocalDisk extends com.google.api.client.json.GenericJson {

  /**
   * Specifies the number of such disks.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer diskCount;

  /**
   * Specifies the size of the disk in base-2 GB.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer diskSizeGb;

  /**
   * Specifies the desired disk type on the node. This disk type must be a local storage type (e.g.:
   * local-ssd). Note that for nodeTemplates, this should be the name of the disk type and not its
   * URL.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String diskType;

  /**
   * Specifies the number of such disks.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getDiskCount() {
    return diskCount;
  }

  /**
   * Specifies the number of such disks.
   * @param diskCount diskCount or {@code null} for none
   */
  public LocalDisk setDiskCount(java.lang.Integer diskCount) {
    this.diskCount = diskCount;
    return this;
  }

  /**
   * Specifies the size of the disk in base-2 GB.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getDiskSizeGb() {
    return diskSizeGb;
  }

  /**
   * Specifies the size of the disk in base-2 GB.
   * @param diskSizeGb diskSizeGb or {@code null} for none
   */
  public LocalDisk setDiskSizeGb(java.lang.Integer diskSizeGb) {
    this.diskSizeGb = diskSizeGb;
    return this;
  }

  /**
   * Specifies the desired disk type on the node. This disk type must be a local storage type (e.g.:
   * local-ssd). Note that for nodeTemplates, this should be the name of the disk type and not its
   * URL.
   * @return value or {@code null} for none
   */
  public java.lang.String getDiskType() {
    return diskType;
  }

  /**
   * Specifies the desired disk type on the node. This disk type must be a local storage type (e.g.:
   * local-ssd). Note that for nodeTemplates, this should be the name of the disk type and not its
   * URL.
   * @param diskType diskType or {@code null} for none
   */
  public LocalDisk setDiskType(java.lang.String diskType) {
    this.diskType = diskType;
    return this;
  }

  @Override
  public LocalDisk set(String fieldName, Object value) {
    return (LocalDisk) super.set(fieldName, value);
  }

  @Override
  public LocalDisk clone() {
    return (LocalDisk) super.clone();
  }

}
