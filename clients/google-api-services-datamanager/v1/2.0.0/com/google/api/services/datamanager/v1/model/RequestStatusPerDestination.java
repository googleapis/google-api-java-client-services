/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.datamanager.v1.model;

/**
 * A request status per destination.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Data Manager API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class RequestStatusPerDestination extends com.google.api.client.json.GenericJson {

  /**
   * The status of the ingest audience members request.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private IngestAudienceMembersStatus audienceMembersIngestionStatus;

  /**
   * The status of the remove audience members request.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private RemoveAudienceMembersStatus audienceMembersRemovalStatus;

  /**
   * A destination within a DM API request.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Destination destination;

  /**
   * An error info error containing the error reason and error counts related to the upload.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ErrorInfo errorInfo;

  /**
   * The status of the ingest events request.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private IngestEventsStatus eventsIngestionStatus;

  /**
   * The request status of the destination.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String requestStatus;

  /**
   * A warning info containing the warning reason and warning counts related to the upload.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private WarningInfo warningInfo;

  /**
   * The status of the ingest audience members request.
   * @return value or {@code null} for none
   */
  public IngestAudienceMembersStatus getAudienceMembersIngestionStatus() {
    return audienceMembersIngestionStatus;
  }

  /**
   * The status of the ingest audience members request.
   * @param audienceMembersIngestionStatus audienceMembersIngestionStatus or {@code null} for none
   */
  public RequestStatusPerDestination setAudienceMembersIngestionStatus(IngestAudienceMembersStatus audienceMembersIngestionStatus) {
    this.audienceMembersIngestionStatus = audienceMembersIngestionStatus;
    return this;
  }

  /**
   * The status of the remove audience members request.
   * @return value or {@code null} for none
   */
  public RemoveAudienceMembersStatus getAudienceMembersRemovalStatus() {
    return audienceMembersRemovalStatus;
  }

  /**
   * The status of the remove audience members request.
   * @param audienceMembersRemovalStatus audienceMembersRemovalStatus or {@code null} for none
   */
  public RequestStatusPerDestination setAudienceMembersRemovalStatus(RemoveAudienceMembersStatus audienceMembersRemovalStatus) {
    this.audienceMembersRemovalStatus = audienceMembersRemovalStatus;
    return this;
  }

  /**
   * A destination within a DM API request.
   * @return value or {@code null} for none
   */
  public Destination getDestination() {
    return destination;
  }

  /**
   * A destination within a DM API request.
   * @param destination destination or {@code null} for none
   */
  public RequestStatusPerDestination setDestination(Destination destination) {
    this.destination = destination;
    return this;
  }

  /**
   * An error info error containing the error reason and error counts related to the upload.
   * @return value or {@code null} for none
   */
  public ErrorInfo getErrorInfo() {
    return errorInfo;
  }

  /**
   * An error info error containing the error reason and error counts related to the upload.
   * @param errorInfo errorInfo or {@code null} for none
   */
  public RequestStatusPerDestination setErrorInfo(ErrorInfo errorInfo) {
    this.errorInfo = errorInfo;
    return this;
  }

  /**
   * The status of the ingest events request.
   * @return value or {@code null} for none
   */
  public IngestEventsStatus getEventsIngestionStatus() {
    return eventsIngestionStatus;
  }

  /**
   * The status of the ingest events request.
   * @param eventsIngestionStatus eventsIngestionStatus or {@code null} for none
   */
  public RequestStatusPerDestination setEventsIngestionStatus(IngestEventsStatus eventsIngestionStatus) {
    this.eventsIngestionStatus = eventsIngestionStatus;
    return this;
  }

  /**
   * The request status of the destination.
   * @return value or {@code null} for none
   */
  public java.lang.String getRequestStatus() {
    return requestStatus;
  }

  /**
   * The request status of the destination.
   * @param requestStatus requestStatus or {@code null} for none
   */
  public RequestStatusPerDestination setRequestStatus(java.lang.String requestStatus) {
    this.requestStatus = requestStatus;
    return this;
  }

  /**
   * A warning info containing the warning reason and warning counts related to the upload.
   * @return value or {@code null} for none
   */
  public WarningInfo getWarningInfo() {
    return warningInfo;
  }

  /**
   * A warning info containing the warning reason and warning counts related to the upload.
   * @param warningInfo warningInfo or {@code null} for none
   */
  public RequestStatusPerDestination setWarningInfo(WarningInfo warningInfo) {
    this.warningInfo = warningInfo;
    return this;
  }

  @Override
  public RequestStatusPerDestination set(String fieldName, Object value) {
    return (RequestStatusPerDestination) super.set(fieldName, value);
  }

  @Override
  public RequestStatusPerDestination clone() {
    return (RequestStatusPerDestination) super.clone();
  }

}
