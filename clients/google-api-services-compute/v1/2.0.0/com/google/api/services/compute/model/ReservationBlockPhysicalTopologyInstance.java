/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.compute.model;

/**
 * The instances information for a given Block
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Compute Engine API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ReservationBlockPhysicalTopologyInstance extends com.google.api.client.json.GenericJson {

  /**
   * The InstanceId of the instance
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.math.BigInteger instanceId;

  /**
   * The PhysicalHostTopology of instances within a Block resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ReservationBlockPhysicalTopologyInstancePhysicalHostTopology physicalHostTopology;

  /**
   * Project where the instance lives
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.math.BigInteger projectId;

  /**
   * The InstanceId of the instance
   * @return value or {@code null} for none
   */
  public java.math.BigInteger getInstanceId() {
    return instanceId;
  }

  /**
   * The InstanceId of the instance
   * @param instanceId instanceId or {@code null} for none
   */
  public ReservationBlockPhysicalTopologyInstance setInstanceId(java.math.BigInteger instanceId) {
    this.instanceId = instanceId;
    return this;
  }

  /**
   * The PhysicalHostTopology of instances within a Block resource.
   * @return value or {@code null} for none
   */
  public ReservationBlockPhysicalTopologyInstancePhysicalHostTopology getPhysicalHostTopology() {
    return physicalHostTopology;
  }

  /**
   * The PhysicalHostTopology of instances within a Block resource.
   * @param physicalHostTopology physicalHostTopology or {@code null} for none
   */
  public ReservationBlockPhysicalTopologyInstance setPhysicalHostTopology(ReservationBlockPhysicalTopologyInstancePhysicalHostTopology physicalHostTopology) {
    this.physicalHostTopology = physicalHostTopology;
    return this;
  }

  /**
   * Project where the instance lives
   * @return value or {@code null} for none
   */
  public java.math.BigInteger getProjectId() {
    return projectId;
  }

  /**
   * Project where the instance lives
   * @param projectId projectId or {@code null} for none
   */
  public ReservationBlockPhysicalTopologyInstance setProjectId(java.math.BigInteger projectId) {
    this.projectId = projectId;
    return this;
  }

  @Override
  public ReservationBlockPhysicalTopologyInstance set(String fieldName, Object value) {
    return (ReservationBlockPhysicalTopologyInstance) super.set(fieldName, value);
  }

  @Override
  public ReservationBlockPhysicalTopologyInstance clone() {
    return (ReservationBlockPhysicalTopologyInstance) super.clone();
  }

}
