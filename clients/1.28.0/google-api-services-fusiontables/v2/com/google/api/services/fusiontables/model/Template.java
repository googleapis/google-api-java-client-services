/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.fusiontables.model;

/**
 * Represents the contents of InfoWindow templates.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Fusion Tables API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Template extends com.google.api.client.json.GenericJson {

  /**
   * List of columns from which the template is to be automatically constructed. Only one of body or
   * automaticColumns can be specified.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> automaticColumnNames;

  /**
   * Body of the template. It contains HTML with {column_name} to insert values from a particular
   * column. The body is sanitized to remove certain tags, e.g., script. Only one of body or
   * automaticColumns can be specified.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String body;

  /**
   * The kind of item this is. For a template, this is always fusiontables#template.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String kind;

  /**
   * Optional name assigned to a template.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Identifier for the table for which the template is defined.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String tableId;

  /**
   * Identifier for the template, unique within the context of a particular table.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer templateId;

  /**
   * List of columns from which the template is to be automatically constructed. Only one of body or
   * automaticColumns can be specified.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getAutomaticColumnNames() {
    return automaticColumnNames;
  }

  /**
   * List of columns from which the template is to be automatically constructed. Only one of body or
   * automaticColumns can be specified.
   * @param automaticColumnNames automaticColumnNames or {@code null} for none
   */
  public Template setAutomaticColumnNames(java.util.List<java.lang.String> automaticColumnNames) {
    this.automaticColumnNames = automaticColumnNames;
    return this;
  }

  /**
   * Body of the template. It contains HTML with {column_name} to insert values from a particular
   * column. The body is sanitized to remove certain tags, e.g., script. Only one of body or
   * automaticColumns can be specified.
   * @return value or {@code null} for none
   */
  public java.lang.String getBody() {
    return body;
  }

  /**
   * Body of the template. It contains HTML with {column_name} to insert values from a particular
   * column. The body is sanitized to remove certain tags, e.g., script. Only one of body or
   * automaticColumns can be specified.
   * @param body body or {@code null} for none
   */
  public Template setBody(java.lang.String body) {
    this.body = body;
    return this;
  }

  /**
   * The kind of item this is. For a template, this is always fusiontables#template.
   * @return value or {@code null} for none
   */
  public java.lang.String getKind() {
    return kind;
  }

  /**
   * The kind of item this is. For a template, this is always fusiontables#template.
   * @param kind kind or {@code null} for none
   */
  public Template setKind(java.lang.String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * Optional name assigned to a template.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Optional name assigned to a template.
   * @param name name or {@code null} for none
   */
  public Template setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Identifier for the table for which the template is defined.
   * @return value or {@code null} for none
   */
  public java.lang.String getTableId() {
    return tableId;
  }

  /**
   * Identifier for the table for which the template is defined.
   * @param tableId tableId or {@code null} for none
   */
  public Template setTableId(java.lang.String tableId) {
    this.tableId = tableId;
    return this;
  }

  /**
   * Identifier for the template, unique within the context of a particular table.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getTemplateId() {
    return templateId;
  }

  /**
   * Identifier for the template, unique within the context of a particular table.
   * @param templateId templateId or {@code null} for none
   */
  public Template setTemplateId(java.lang.Integer templateId) {
    this.templateId = templateId;
    return this;
  }

  @Override
  public Template set(String fieldName, Object value) {
    return (Template) super.set(fieldName, value);
  }

  @Override
  public Template clone() {
    return (Template) super.clone();
  }

}
