/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * An AttachmentProto contains structured data of a client-specified type. An attachment is uniquely
 * identified by the combination of its attachment_id and client_name_space fields.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GeostoreAttachmentsAttachmentProto extends com.google.api.client.json.GenericJson {

  /**
   * attachment_id distinguishes messages of the same type_id associated with the same feature. It
   * can not be set to 0x0.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.math.BigInteger attachmentId;

  /**
   * This field specifies a namespace identifier that can be used to track the sources of
   * attachments in a human friendly format. Name spaces must be at most 64 characters long and must
   * be composed entirely of alphanumeric characters, hyphens, and underscores. No other characters
   * are allowed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String clientNameSpace;

  /**
   * comment is a human-readable string that is logged whenever this attachment is processed by the
   * framework.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String comment;

  /**
   * messages contains the structured data for this attachment. It should contain a single message
   * with a type ID matching the value of the type_id field below.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Proto2BridgeMessageSet messages;

  /**
   * type_id determines the type of the actual attachment that should be set in the messages
   * MessageSet. It can not be set to 0x0.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.math.BigInteger typeId;

  /**
   * attachment_id distinguishes messages of the same type_id associated with the same feature. It
   * can not be set to 0x0.
   * @return value or {@code null} for none
   */
  public java.math.BigInteger getAttachmentId() {
    return attachmentId;
  }

  /**
   * attachment_id distinguishes messages of the same type_id associated with the same feature. It
   * can not be set to 0x0.
   * @param attachmentId attachmentId or {@code null} for none
   */
  public GeostoreAttachmentsAttachmentProto setAttachmentId(java.math.BigInteger attachmentId) {
    this.attachmentId = attachmentId;
    return this;
  }

  /**
   * This field specifies a namespace identifier that can be used to track the sources of
   * attachments in a human friendly format. Name spaces must be at most 64 characters long and must
   * be composed entirely of alphanumeric characters, hyphens, and underscores. No other characters
   * are allowed.
   * @return value or {@code null} for none
   */
  public java.lang.String getClientNameSpace() {
    return clientNameSpace;
  }

  /**
   * This field specifies a namespace identifier that can be used to track the sources of
   * attachments in a human friendly format. Name spaces must be at most 64 characters long and must
   * be composed entirely of alphanumeric characters, hyphens, and underscores. No other characters
   * are allowed.
   * @param clientNameSpace clientNameSpace or {@code null} for none
   */
  public GeostoreAttachmentsAttachmentProto setClientNameSpace(java.lang.String clientNameSpace) {
    this.clientNameSpace = clientNameSpace;
    return this;
  }

  /**
   * comment is a human-readable string that is logged whenever this attachment is processed by the
   * framework.
   * @return value or {@code null} for none
   */
  public java.lang.String getComment() {
    return comment;
  }

  /**
   * comment is a human-readable string that is logged whenever this attachment is processed by the
   * framework.
   * @param comment comment or {@code null} for none
   */
  public GeostoreAttachmentsAttachmentProto setComment(java.lang.String comment) {
    this.comment = comment;
    return this;
  }

  /**
   * messages contains the structured data for this attachment. It should contain a single message
   * with a type ID matching the value of the type_id field below.
   * @return value or {@code null} for none
   */
  public Proto2BridgeMessageSet getMessages() {
    return messages;
  }

  /**
   * messages contains the structured data for this attachment. It should contain a single message
   * with a type ID matching the value of the type_id field below.
   * @param messages messages or {@code null} for none
   */
  public GeostoreAttachmentsAttachmentProto setMessages(Proto2BridgeMessageSet messages) {
    this.messages = messages;
    return this;
  }

  /**
   * type_id determines the type of the actual attachment that should be set in the messages
   * MessageSet. It can not be set to 0x0.
   * @return value or {@code null} for none
   */
  public java.math.BigInteger getTypeId() {
    return typeId;
  }

  /**
   * type_id determines the type of the actual attachment that should be set in the messages
   * MessageSet. It can not be set to 0x0.
   * @param typeId typeId or {@code null} for none
   */
  public GeostoreAttachmentsAttachmentProto setTypeId(java.math.BigInteger typeId) {
    this.typeId = typeId;
    return this;
  }

  @Override
  public GeostoreAttachmentsAttachmentProto set(String fieldName, Object value) {
    return (GeostoreAttachmentsAttachmentProto) super.set(fieldName, value);
  }

  @Override
  public GeostoreAttachmentsAttachmentProto clone() {
    return (GeostoreAttachmentsAttachmentProto) super.clone();
  }

}
