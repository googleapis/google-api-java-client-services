/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dialogflow.v3beta1.model;

/**
 * Integration settings for a Git service hosted on Cloud Run.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Dialogflow API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettingsGitConnectionSettings extends com.google.api.client.json.GenericJson {

  /**
   * The name of the SecretManager secret version resource storing the git access token. Format:
   * `projects/{project}/secrets/{secret}/versions/{version}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String accessTokenSecret;

  /**
   * Optional. List of branches configured for the repository.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> branches;

  /**
   * Required. Display name for the repository
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Required. Git server reporitory URI.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String repositoryUri;

  /**
   * Required. Default branch of the repository.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String trackingBranch;

  /**
   * The name of the SecretManager secret version resource storing the git access token. Format:
   * `projects/{project}/secrets/{secret}/versions/{version}`
   * @return value or {@code null} for none
   */
  public java.lang.String getAccessTokenSecret() {
    return accessTokenSecret;
  }

  /**
   * The name of the SecretManager secret version resource storing the git access token. Format:
   * `projects/{project}/secrets/{secret}/versions/{version}`
   * @param accessTokenSecret accessTokenSecret or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettingsGitConnectionSettings setAccessTokenSecret(java.lang.String accessTokenSecret) {
    this.accessTokenSecret = accessTokenSecret;
    return this;
  }

  /**
   * Optional. List of branches configured for the repository.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getBranches() {
    return branches;
  }

  /**
   * Optional. List of branches configured for the repository.
   * @param branches branches or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettingsGitConnectionSettings setBranches(java.util.List<java.lang.String> branches) {
    this.branches = branches;
    return this;
  }

  /**
   * Required. Display name for the repository
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Required. Display name for the repository
   * @param displayName displayName or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettingsGitConnectionSettings setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Required. Git server reporitory URI.
   * @return value or {@code null} for none
   */
  public java.lang.String getRepositoryUri() {
    return repositoryUri;
  }

  /**
   * Required. Git server reporitory URI.
   * @param repositoryUri repositoryUri or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettingsGitConnectionSettings setRepositoryUri(java.lang.String repositoryUri) {
    this.repositoryUri = repositoryUri;
    return this;
  }

  /**
   * Required. Default branch of the repository.
   * @return value or {@code null} for none
   */
  public java.lang.String getTrackingBranch() {
    return trackingBranch;
  }

  /**
   * Required. Default branch of the repository.
   * @param trackingBranch trackingBranch or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettingsGitConnectionSettings setTrackingBranch(java.lang.String trackingBranch) {
    this.trackingBranch = trackingBranch;
    return this;
  }

  @Override
  public GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettingsGitConnectionSettings set(String fieldName, Object value) {
    return (GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettingsGitConnectionSettings) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettingsGitConnectionSettings clone() {
    return (GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettingsGitConnectionSettings) super.clone();
  }

}
