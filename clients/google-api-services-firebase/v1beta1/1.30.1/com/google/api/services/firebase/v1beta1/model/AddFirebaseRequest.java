/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.firebase.v1beta1.model;

/**
 * All fields are required.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Firebase Management API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AddFirebaseRequest extends com.google.api.client.json.GenericJson {

  /**
   * Deprecated. Instead, to set a Project's default GCP resource location, call
   * [`FinalizeDefaultLocation`](../projects.defaultLocation/finalize) after you add Firebase
   * resources to the GCP `Project`. The ID of the Project's default GCP resource location. The
   * location must be one of the available [GCP resource
   * locations](https://firebase.google.com/docs/projects/locations).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String locationId;

  /**
   * Deprecated. Instead, to link a Project with a Google Analytics account, call
   * [`AddGoogleAnalytics`](../../v1beta1/projects/addGoogleAnalytics) after you add Firebase
   * resources to the GCP `Project`. The region code (CLDR) that the account will use for Google
   * Analytics data For example: US, GB, or DE In Java, use
   * `com.google.i18n.identifiers.RegionCode`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String regionCode;

  /**
   * Deprecated. Instead, to link a Project with a Google Analytics account, call
   * [`AddGoogleAnalytics`](../../v1beta1/projects/addGoogleAnalytics) after you add Firebase
   * resources to the GCP `Project`. The time zone that the account will use for Google Analytics
   * data. For example: America/Los_Angeles or Africa/Abidjan
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String timeZone;

  /**
   * Deprecated. Instead, to set a Project's default GCP resource location, call
   * [`FinalizeDefaultLocation`](../projects.defaultLocation/finalize) after you add Firebase
   * resources to the GCP `Project`. The ID of the Project's default GCP resource location. The
   * location must be one of the available [GCP resource
   * locations](https://firebase.google.com/docs/projects/locations).
   * @return value or {@code null} for none
   */
  public java.lang.String getLocationId() {
    return locationId;
  }

  /**
   * Deprecated. Instead, to set a Project's default GCP resource location, call
   * [`FinalizeDefaultLocation`](../projects.defaultLocation/finalize) after you add Firebase
   * resources to the GCP `Project`. The ID of the Project's default GCP resource location. The
   * location must be one of the available [GCP resource
   * locations](https://firebase.google.com/docs/projects/locations).
   * @param locationId locationId or {@code null} for none
   */
  public AddFirebaseRequest setLocationId(java.lang.String locationId) {
    this.locationId = locationId;
    return this;
  }

  /**
   * Deprecated. Instead, to link a Project with a Google Analytics account, call
   * [`AddGoogleAnalytics`](../../v1beta1/projects/addGoogleAnalytics) after you add Firebase
   * resources to the GCP `Project`. The region code (CLDR) that the account will use for Google
   * Analytics data For example: US, GB, or DE In Java, use
   * `com.google.i18n.identifiers.RegionCode`.
   * @return value or {@code null} for none
   */
  public java.lang.String getRegionCode() {
    return regionCode;
  }

  /**
   * Deprecated. Instead, to link a Project with a Google Analytics account, call
   * [`AddGoogleAnalytics`](../../v1beta1/projects/addGoogleAnalytics) after you add Firebase
   * resources to the GCP `Project`. The region code (CLDR) that the account will use for Google
   * Analytics data For example: US, GB, or DE In Java, use
   * `com.google.i18n.identifiers.RegionCode`.
   * @param regionCode regionCode or {@code null} for none
   */
  public AddFirebaseRequest setRegionCode(java.lang.String regionCode) {
    this.regionCode = regionCode;
    return this;
  }

  /**
   * Deprecated. Instead, to link a Project with a Google Analytics account, call
   * [`AddGoogleAnalytics`](../../v1beta1/projects/addGoogleAnalytics) after you add Firebase
   * resources to the GCP `Project`. The time zone that the account will use for Google Analytics
   * data. For example: America/Los_Angeles or Africa/Abidjan
   * @return value or {@code null} for none
   */
  public java.lang.String getTimeZone() {
    return timeZone;
  }

  /**
   * Deprecated. Instead, to link a Project with a Google Analytics account, call
   * [`AddGoogleAnalytics`](../../v1beta1/projects/addGoogleAnalytics) after you add Firebase
   * resources to the GCP `Project`. The time zone that the account will use for Google Analytics
   * data. For example: America/Los_Angeles or Africa/Abidjan
   * @param timeZone timeZone or {@code null} for none
   */
  public AddFirebaseRequest setTimeZone(java.lang.String timeZone) {
    this.timeZone = timeZone;
    return this;
  }

  @Override
  public AddFirebaseRequest set(String fieldName, Object value) {
    return (AddFirebaseRequest) super.set(fieldName, value);
  }

  @Override
  public AddFirebaseRequest clone() {
    return (AddFirebaseRequest) super.clone();
  }

}
