/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.surveys.model;

/**
 * Specifications for the target audience of a survey run through the API.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Surveys API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class SurveyAudience extends com.google.api.client.json.GenericJson {

  /**
   * Optional list of age buckets to target. Supported age buckets are: ['18-24', '25-34', '35-44',
   * '45-54', '55-64', '65+']
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> ages;

  /**
   * Required country code that surveys should be targeted to. Accepts standard ISO 3166-1 2
   * character language codes. For instance, 'US' for the United States, and 'GB' for the United
   * Kingdom.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String country;

  /**
   * Country subdivision (states/provinces/etc) that surveys should be targeted to. For all
   * countries except GB, ISO-3166-2 subdivision code is required (eg. 'US-OH' for Ohio, United
   * States). For GB, NUTS 1 statistical region codes for the United Kingdom is required (eg. 'UK-
   * UKC' for North East England).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String countrySubdivision;

  /**
   * Optional gender to target.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String gender;

  /**
   * Language code that surveys should be targeted to. For instance, 'en-US'. Surveys may target
   * bilingual users by specifying a list of language codes (for example, 'de' and 'en-US'). In that
   * case, all languages will be used for targeting users but the survey content (which is
   * displayed) must match the first language listed. Accepts standard BCP47 language codes. See
   * specification.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> languages;

  /**
   * Online population source where the respondents are sampled from.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String populationSource;

  /**
   * Optional list of age buckets to target. Supported age buckets are: ['18-24', '25-34', '35-44',
   * '45-54', '55-64', '65+']
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getAges() {
    return ages;
  }

  /**
   * Optional list of age buckets to target. Supported age buckets are: ['18-24', '25-34', '35-44',
   * '45-54', '55-64', '65+']
   * @param ages ages or {@code null} for none
   */
  public SurveyAudience setAges(java.util.List<java.lang.String> ages) {
    this.ages = ages;
    return this;
  }

  /**
   * Required country code that surveys should be targeted to. Accepts standard ISO 3166-1 2
   * character language codes. For instance, 'US' for the United States, and 'GB' for the United
   * Kingdom.
   * @return value or {@code null} for none
   */
  public java.lang.String getCountry() {
    return country;
  }

  /**
   * Required country code that surveys should be targeted to. Accepts standard ISO 3166-1 2
   * character language codes. For instance, 'US' for the United States, and 'GB' for the United
   * Kingdom.
   * @param country country or {@code null} for none
   */
  public SurveyAudience setCountry(java.lang.String country) {
    this.country = country;
    return this;
  }

  /**
   * Country subdivision (states/provinces/etc) that surveys should be targeted to. For all
   * countries except GB, ISO-3166-2 subdivision code is required (eg. 'US-OH' for Ohio, United
   * States). For GB, NUTS 1 statistical region codes for the United Kingdom is required (eg. 'UK-
   * UKC' for North East England).
   * @return value or {@code null} for none
   */
  public java.lang.String getCountrySubdivision() {
    return countrySubdivision;
  }

  /**
   * Country subdivision (states/provinces/etc) that surveys should be targeted to. For all
   * countries except GB, ISO-3166-2 subdivision code is required (eg. 'US-OH' for Ohio, United
   * States). For GB, NUTS 1 statistical region codes for the United Kingdom is required (eg. 'UK-
   * UKC' for North East England).
   * @param countrySubdivision countrySubdivision or {@code null} for none
   */
  public SurveyAudience setCountrySubdivision(java.lang.String countrySubdivision) {
    this.countrySubdivision = countrySubdivision;
    return this;
  }

  /**
   * Optional gender to target.
   * @return value or {@code null} for none
   */
  public java.lang.String getGender() {
    return gender;
  }

  /**
   * Optional gender to target.
   * @param gender gender or {@code null} for none
   */
  public SurveyAudience setGender(java.lang.String gender) {
    this.gender = gender;
    return this;
  }

  /**
   * Language code that surveys should be targeted to. For instance, 'en-US'. Surveys may target
   * bilingual users by specifying a list of language codes (for example, 'de' and 'en-US'). In that
   * case, all languages will be used for targeting users but the survey content (which is
   * displayed) must match the first language listed. Accepts standard BCP47 language codes. See
   * specification.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getLanguages() {
    return languages;
  }

  /**
   * Language code that surveys should be targeted to. For instance, 'en-US'. Surveys may target
   * bilingual users by specifying a list of language codes (for example, 'de' and 'en-US'). In that
   * case, all languages will be used for targeting users but the survey content (which is
   * displayed) must match the first language listed. Accepts standard BCP47 language codes. See
   * specification.
   * @param languages languages or {@code null} for none
   */
  public SurveyAudience setLanguages(java.util.List<java.lang.String> languages) {
    this.languages = languages;
    return this;
  }

  /**
   * Online population source where the respondents are sampled from.
   * @return value or {@code null} for none
   */
  public java.lang.String getPopulationSource() {
    return populationSource;
  }

  /**
   * Online population source where the respondents are sampled from.
   * @param populationSource populationSource or {@code null} for none
   */
  public SurveyAudience setPopulationSource(java.lang.String populationSource) {
    this.populationSource = populationSource;
    return this;
  }

  @Override
  public SurveyAudience set(String fieldName, Object value) {
    return (SurveyAudience) super.set(fieldName, value);
  }

  @Override
  public SurveyAudience clone() {
    return (SurveyAudience) super.clone();
  }

}
