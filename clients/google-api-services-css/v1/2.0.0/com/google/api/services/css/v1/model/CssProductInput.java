/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.css.v1.model;

/**
 * This resource represents input data you submit for a CSS Product, not the processed CSS Product
 * that you see in CSS Center, in Shopping Ads, or across Google surfaces.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the CSS API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class CssProductInput extends com.google.api.client.json.GenericJson {

  /**
   * A list of CSS Product attributes.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Attributes attributes;

  /**
   * Required. The two-letter [ISO 639-1](http://en.wikipedia.org/wiki/ISO_639-1) language code for
   * the CSS Product.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String contentLanguage;

  /**
   * A list of custom (CSS-provided) attributes. It can also be used for submitting any attribute of
   * the feed specification in its generic form (for example: `{ "name": "size type", "value":
   * "regular" }`). This is useful for submitting attributes not explicitly exposed by the API, such
   * as additional attributes used for Buy on Google.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<CustomAttribute> customAttributes;

  /**
   * Required. The [feed label](https://developers.google.com/shopping-content/guides/products/feed-
   * labels) for the CSS Product. Feed Label is synonymous to "target country" and hence should
   * always be a valid region code. For example: 'DE' for Germany, 'FR' for France.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String feedLabel;

  /**
   * Output only. The name of the processed CSS Product. Format:
   * `accounts/{account}/cssProducts/{css_product}` "
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String finalName;

  /**
   * DEPRECATED. Use expiration_date instead. Represents the existing version (freshness) of the CSS
   * Product, which can be used to preserve the right order when multiple updates are done at the
   * same time. This field must not be set to the future time. If set, the update is prevented if a
   * newer version of the item already exists in our system (that is the last update time of the
   * existing CSS products is later than the freshness time set in the update). If the update
   * happens, the last update time is then set to this freshness time. If not set, the update will
   * not be prevented and the last update time will default to when this request was received by the
   * CSS API. If the operation is prevented, the aborted exception will be thrown.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String freshnessTime;

  /**
   * The name of the CSS Product input. Format:
   * `accounts/{account}/cssProductInputs/{css_product_input}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Required. Your unique identifier for the CSS Product. This is the same for the CSS Product
   * input and processed CSS Product. We only allow ids with alphanumerics, underscores and dashes.
   * See the [products feed specification](https://support.google.com/merchants/answer/188494#id)
   * for details.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String rawProvidedId;

  /**
   * A list of CSS Product attributes.
   * @return value or {@code null} for none
   */
  public Attributes getAttributes() {
    return attributes;
  }

  /**
   * A list of CSS Product attributes.
   * @param attributes attributes or {@code null} for none
   */
  public CssProductInput setAttributes(Attributes attributes) {
    this.attributes = attributes;
    return this;
  }

  /**
   * Required. The two-letter [ISO 639-1](http://en.wikipedia.org/wiki/ISO_639-1) language code for
   * the CSS Product.
   * @return value or {@code null} for none
   */
  public java.lang.String getContentLanguage() {
    return contentLanguage;
  }

  /**
   * Required. The two-letter [ISO 639-1](http://en.wikipedia.org/wiki/ISO_639-1) language code for
   * the CSS Product.
   * @param contentLanguage contentLanguage or {@code null} for none
   */
  public CssProductInput setContentLanguage(java.lang.String contentLanguage) {
    this.contentLanguage = contentLanguage;
    return this;
  }

  /**
   * A list of custom (CSS-provided) attributes. It can also be used for submitting any attribute of
   * the feed specification in its generic form (for example: `{ "name": "size type", "value":
   * "regular" }`). This is useful for submitting attributes not explicitly exposed by the API, such
   * as additional attributes used for Buy on Google.
   * @return value or {@code null} for none
   */
  public java.util.List<CustomAttribute> getCustomAttributes() {
    return customAttributes;
  }

  /**
   * A list of custom (CSS-provided) attributes. It can also be used for submitting any attribute of
   * the feed specification in its generic form (for example: `{ "name": "size type", "value":
   * "regular" }`). This is useful for submitting attributes not explicitly exposed by the API, such
   * as additional attributes used for Buy on Google.
   * @param customAttributes customAttributes or {@code null} for none
   */
  public CssProductInput setCustomAttributes(java.util.List<CustomAttribute> customAttributes) {
    this.customAttributes = customAttributes;
    return this;
  }

  /**
   * Required. The [feed label](https://developers.google.com/shopping-content/guides/products/feed-
   * labels) for the CSS Product. Feed Label is synonymous to "target country" and hence should
   * always be a valid region code. For example: 'DE' for Germany, 'FR' for France.
   * @return value or {@code null} for none
   */
  public java.lang.String getFeedLabel() {
    return feedLabel;
  }

  /**
   * Required. The [feed label](https://developers.google.com/shopping-content/guides/products/feed-
   * labels) for the CSS Product. Feed Label is synonymous to "target country" and hence should
   * always be a valid region code. For example: 'DE' for Germany, 'FR' for France.
   * @param feedLabel feedLabel or {@code null} for none
   */
  public CssProductInput setFeedLabel(java.lang.String feedLabel) {
    this.feedLabel = feedLabel;
    return this;
  }

  /**
   * Output only. The name of the processed CSS Product. Format:
   * `accounts/{account}/cssProducts/{css_product}` "
   * @return value or {@code null} for none
   */
  public java.lang.String getFinalName() {
    return finalName;
  }

  /**
   * Output only. The name of the processed CSS Product. Format:
   * `accounts/{account}/cssProducts/{css_product}` "
   * @param finalName finalName or {@code null} for none
   */
  public CssProductInput setFinalName(java.lang.String finalName) {
    this.finalName = finalName;
    return this;
  }

  /**
   * DEPRECATED. Use expiration_date instead. Represents the existing version (freshness) of the CSS
   * Product, which can be used to preserve the right order when multiple updates are done at the
   * same time. This field must not be set to the future time. If set, the update is prevented if a
   * newer version of the item already exists in our system (that is the last update time of the
   * existing CSS products is later than the freshness time set in the update). If the update
   * happens, the last update time is then set to this freshness time. If not set, the update will
   * not be prevented and the last update time will default to when this request was received by the
   * CSS API. If the operation is prevented, the aborted exception will be thrown.
   * @return value or {@code null} for none
   */
  public String getFreshnessTime() {
    return freshnessTime;
  }

  /**
   * DEPRECATED. Use expiration_date instead. Represents the existing version (freshness) of the CSS
   * Product, which can be used to preserve the right order when multiple updates are done at the
   * same time. This field must not be set to the future time. If set, the update is prevented if a
   * newer version of the item already exists in our system (that is the last update time of the
   * existing CSS products is later than the freshness time set in the update). If the update
   * happens, the last update time is then set to this freshness time. If not set, the update will
   * not be prevented and the last update time will default to when this request was received by the
   * CSS API. If the operation is prevented, the aborted exception will be thrown.
   * @param freshnessTime freshnessTime or {@code null} for none
   */
  public CssProductInput setFreshnessTime(String freshnessTime) {
    this.freshnessTime = freshnessTime;
    return this;
  }

  /**
   * The name of the CSS Product input. Format:
   * `accounts/{account}/cssProductInputs/{css_product_input}`
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * The name of the CSS Product input. Format:
   * `accounts/{account}/cssProductInputs/{css_product_input}`
   * @param name name or {@code null} for none
   */
  public CssProductInput setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Required. Your unique identifier for the CSS Product. This is the same for the CSS Product
   * input and processed CSS Product. We only allow ids with alphanumerics, underscores and dashes.
   * See the [products feed specification](https://support.google.com/merchants/answer/188494#id)
   * for details.
   * @return value or {@code null} for none
   */
  public java.lang.String getRawProvidedId() {
    return rawProvidedId;
  }

  /**
   * Required. Your unique identifier for the CSS Product. This is the same for the CSS Product
   * input and processed CSS Product. We only allow ids with alphanumerics, underscores and dashes.
   * See the [products feed specification](https://support.google.com/merchants/answer/188494#id)
   * for details.
   * @param rawProvidedId rawProvidedId or {@code null} for none
   */
  public CssProductInput setRawProvidedId(java.lang.String rawProvidedId) {
    this.rawProvidedId = rawProvidedId;
    return this;
  }

  @Override
  public CssProductInput set(String fieldName, Object value) {
    return (CssProductInput) super.set(fieldName, value);
  }

  @Override
  public CssProductInput clone() {
    return (CssProductInput) super.clone();
  }

}
