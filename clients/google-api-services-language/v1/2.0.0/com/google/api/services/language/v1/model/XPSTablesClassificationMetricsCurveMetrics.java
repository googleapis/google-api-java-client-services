/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.language.v1.model;

/**
 * Metrics curve data point for a single value.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Natural Language API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class XPSTablesClassificationMetricsCurveMetrics extends com.google.api.client.json.GenericJson {

  /**
   * The area under the precision-recall curve.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double aucPr;

  /**
   * The area under receiver operating characteristic curve.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double aucRoc;

  /**
   * Metrics that have confidence thresholds. Precision-recall curve and ROC curve can be derived
   * from them.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<XPSTablesConfidenceMetricsEntry> confidenceMetricsEntries;

  /**
   * The Log loss metric.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double logLoss;

  /**
   * The position threshold value used to compute the metrics.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer positionThreshold;

  /**
   * The CATEGORY row value (for ARRAY unnested) the curve metrics are for.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String value;

  /**
   * The area under the precision-recall curve.
   * @return value or {@code null} for none
   */
  public java.lang.Double getAucPr() {
    return aucPr;
  }

  /**
   * The area under the precision-recall curve.
   * @param aucPr aucPr or {@code null} for none
   */
  public XPSTablesClassificationMetricsCurveMetrics setAucPr(java.lang.Double aucPr) {
    this.aucPr = aucPr;
    return this;
  }

  /**
   * The area under receiver operating characteristic curve.
   * @return value or {@code null} for none
   */
  public java.lang.Double getAucRoc() {
    return aucRoc;
  }

  /**
   * The area under receiver operating characteristic curve.
   * @param aucRoc aucRoc or {@code null} for none
   */
  public XPSTablesClassificationMetricsCurveMetrics setAucRoc(java.lang.Double aucRoc) {
    this.aucRoc = aucRoc;
    return this;
  }

  /**
   * Metrics that have confidence thresholds. Precision-recall curve and ROC curve can be derived
   * from them.
   * @return value or {@code null} for none
   */
  public java.util.List<XPSTablesConfidenceMetricsEntry> getConfidenceMetricsEntries() {
    return confidenceMetricsEntries;
  }

  /**
   * Metrics that have confidence thresholds. Precision-recall curve and ROC curve can be derived
   * from them.
   * @param confidenceMetricsEntries confidenceMetricsEntries or {@code null} for none
   */
  public XPSTablesClassificationMetricsCurveMetrics setConfidenceMetricsEntries(java.util.List<XPSTablesConfidenceMetricsEntry> confidenceMetricsEntries) {
    this.confidenceMetricsEntries = confidenceMetricsEntries;
    return this;
  }

  /**
   * The Log loss metric.
   * @return value or {@code null} for none
   */
  public java.lang.Double getLogLoss() {
    return logLoss;
  }

  /**
   * The Log loss metric.
   * @param logLoss logLoss or {@code null} for none
   */
  public XPSTablesClassificationMetricsCurveMetrics setLogLoss(java.lang.Double logLoss) {
    this.logLoss = logLoss;
    return this;
  }

  /**
   * The position threshold value used to compute the metrics.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getPositionThreshold() {
    return positionThreshold;
  }

  /**
   * The position threshold value used to compute the metrics.
   * @param positionThreshold positionThreshold or {@code null} for none
   */
  public XPSTablesClassificationMetricsCurveMetrics setPositionThreshold(java.lang.Integer positionThreshold) {
    this.positionThreshold = positionThreshold;
    return this;
  }

  /**
   * The CATEGORY row value (for ARRAY unnested) the curve metrics are for.
   * @return value or {@code null} for none
   */
  public java.lang.String getValue() {
    return value;
  }

  /**
   * The CATEGORY row value (for ARRAY unnested) the curve metrics are for.
   * @param value value or {@code null} for none
   */
  public XPSTablesClassificationMetricsCurveMetrics setValue(java.lang.String value) {
    this.value = value;
    return this;
  }

  @Override
  public XPSTablesClassificationMetricsCurveMetrics set(String fieldName, Object value) {
    return (XPSTablesClassificationMetricsCurveMetrics) super.set(fieldName, value);
  }

  @Override
  public XPSTablesClassificationMetricsCurveMetrics clone() {
    return (XPSTablesClassificationMetricsCurveMetrics) super.clone();
  }

}
