/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.integrations.v1.model;

/**
 * The AuthConfig resource use to hold channels and connection config data.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Application Integration API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudIntegrationsV1alphaAuthConfig extends com.google.api.client.json.GenericJson {

  /**
   * Certificate id for client certificate
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String certificateId;

  /**
   * Output only. The timestamp when the auth config is created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * The creator's email address. Generated based on the End User Credentials/LOAS role of the user
   * making the call.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String creatorEmail;

  /**
   * Credential type of the encrypted credential.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String credentialType;

  /**
   * Raw auth credentials.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudIntegrationsV1alphaCredential decryptedCredential;

  /**
   * A description of the auth config.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * The name of the auth config.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Auth credential encrypted by Cloud KMS. Can be decrypted as Credential with proper KMS key.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String encryptedCredential;

  /**
   * User can define the time to receive notification after which the auth config becomes invalid.
   * Support up to 30 days. Support granularity in hours.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<String> expiryNotificationDuration;

  /**
   * The last modifier's email address. Generated based on the End User Credentials/LOAS role of the
   * user making the call.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String lastModifierEmail;

  /**
   * Resource name of the SFDC instance
   * projects/{project}/locations/{location}/authConfigs/{authConfig}.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * User provided expiry time to override. For the example of Salesforce, username/password
   * credentials can be valid for 6 months depending on the instance settings.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String overrideValidTime;

  /**
   * The reason / details of the current status.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String reason;

  /**
   * The status of the auth config.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Output only. The timestamp when the auth config is modified.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * The time until the auth config is valid. Empty or max value is considered the auth config won't
   * expire.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String validTime;

  /**
   * The visibility of the auth config.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String visibility;

  /**
   * Certificate id for client certificate
   * @return value or {@code null} for none
   */
  public java.lang.String getCertificateId() {
    return certificateId;
  }

  /**
   * Certificate id for client certificate
   * @param certificateId certificateId or {@code null} for none
   */
  public GoogleCloudIntegrationsV1alphaAuthConfig setCertificateId(java.lang.String certificateId) {
    this.certificateId = certificateId;
    return this;
  }

  /**
   * Output only. The timestamp when the auth config is created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The timestamp when the auth config is created.
   * @param createTime createTime or {@code null} for none
   */
  public GoogleCloudIntegrationsV1alphaAuthConfig setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * The creator's email address. Generated based on the End User Credentials/LOAS role of the user
   * making the call.
   * @return value or {@code null} for none
   */
  public java.lang.String getCreatorEmail() {
    return creatorEmail;
  }

  /**
   * The creator's email address. Generated based on the End User Credentials/LOAS role of the user
   * making the call.
   * @param creatorEmail creatorEmail or {@code null} for none
   */
  public GoogleCloudIntegrationsV1alphaAuthConfig setCreatorEmail(java.lang.String creatorEmail) {
    this.creatorEmail = creatorEmail;
    return this;
  }

  /**
   * Credential type of the encrypted credential.
   * @return value or {@code null} for none
   */
  public java.lang.String getCredentialType() {
    return credentialType;
  }

  /**
   * Credential type of the encrypted credential.
   * @param credentialType credentialType or {@code null} for none
   */
  public GoogleCloudIntegrationsV1alphaAuthConfig setCredentialType(java.lang.String credentialType) {
    this.credentialType = credentialType;
    return this;
  }

  /**
   * Raw auth credentials.
   * @return value or {@code null} for none
   */
  public GoogleCloudIntegrationsV1alphaCredential getDecryptedCredential() {
    return decryptedCredential;
  }

  /**
   * Raw auth credentials.
   * @param decryptedCredential decryptedCredential or {@code null} for none
   */
  public GoogleCloudIntegrationsV1alphaAuthConfig setDecryptedCredential(GoogleCloudIntegrationsV1alphaCredential decryptedCredential) {
    this.decryptedCredential = decryptedCredential;
    return this;
  }

  /**
   * A description of the auth config.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * A description of the auth config.
   * @param description description or {@code null} for none
   */
  public GoogleCloudIntegrationsV1alphaAuthConfig setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * The name of the auth config.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * The name of the auth config.
   * @param displayName displayName or {@code null} for none
   */
  public GoogleCloudIntegrationsV1alphaAuthConfig setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Auth credential encrypted by Cloud KMS. Can be decrypted as Credential with proper KMS key.
   * @see #decodeEncryptedCredential()
   * @return value or {@code null} for none
   */
  public java.lang.String getEncryptedCredential() {
    return encryptedCredential;
  }

  /**
   * Auth credential encrypted by Cloud KMS. Can be decrypted as Credential with proper KMS key.
   * @see #getEncryptedCredential()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeEncryptedCredential() {
    return com.google.api.client.util.Base64.decodeBase64(encryptedCredential);
  }

  /**
   * Auth credential encrypted by Cloud KMS. Can be decrypted as Credential with proper KMS key.
   * @see #encodeEncryptedCredential()
   * @param encryptedCredential encryptedCredential or {@code null} for none
   */
  public GoogleCloudIntegrationsV1alphaAuthConfig setEncryptedCredential(java.lang.String encryptedCredential) {
    this.encryptedCredential = encryptedCredential;
    return this;
  }

  /**
   * Auth credential encrypted by Cloud KMS. Can be decrypted as Credential with proper KMS key.
   * @see #setEncryptedCredential()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public GoogleCloudIntegrationsV1alphaAuthConfig encodeEncryptedCredential(byte[] encryptedCredential) {
    this.encryptedCredential = com.google.api.client.util.Base64.encodeBase64URLSafeString(encryptedCredential);
    return this;
  }

  /**
   * User can define the time to receive notification after which the auth config becomes invalid.
   * Support up to 30 days. Support granularity in hours.
   * @return value or {@code null} for none
   */
  public java.util.List<String> getExpiryNotificationDuration() {
    return expiryNotificationDuration;
  }

  /**
   * User can define the time to receive notification after which the auth config becomes invalid.
   * Support up to 30 days. Support granularity in hours.
   * @param expiryNotificationDuration expiryNotificationDuration or {@code null} for none
   */
  public GoogleCloudIntegrationsV1alphaAuthConfig setExpiryNotificationDuration(java.util.List<String> expiryNotificationDuration) {
    this.expiryNotificationDuration = expiryNotificationDuration;
    return this;
  }

  /**
   * The last modifier's email address. Generated based on the End User Credentials/LOAS role of the
   * user making the call.
   * @return value or {@code null} for none
   */
  public java.lang.String getLastModifierEmail() {
    return lastModifierEmail;
  }

  /**
   * The last modifier's email address. Generated based on the End User Credentials/LOAS role of the
   * user making the call.
   * @param lastModifierEmail lastModifierEmail or {@code null} for none
   */
  public GoogleCloudIntegrationsV1alphaAuthConfig setLastModifierEmail(java.lang.String lastModifierEmail) {
    this.lastModifierEmail = lastModifierEmail;
    return this;
  }

  /**
   * Resource name of the SFDC instance
   * projects/{project}/locations/{location}/authConfigs/{authConfig}.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Resource name of the SFDC instance
   * projects/{project}/locations/{location}/authConfigs/{authConfig}.
   * @param name name or {@code null} for none
   */
  public GoogleCloudIntegrationsV1alphaAuthConfig setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * User provided expiry time to override. For the example of Salesforce, username/password
   * credentials can be valid for 6 months depending on the instance settings.
   * @return value or {@code null} for none
   */
  public String getOverrideValidTime() {
    return overrideValidTime;
  }

  /**
   * User provided expiry time to override. For the example of Salesforce, username/password
   * credentials can be valid for 6 months depending on the instance settings.
   * @param overrideValidTime overrideValidTime or {@code null} for none
   */
  public GoogleCloudIntegrationsV1alphaAuthConfig setOverrideValidTime(String overrideValidTime) {
    this.overrideValidTime = overrideValidTime;
    return this;
  }

  /**
   * The reason / details of the current status.
   * @return value or {@code null} for none
   */
  public java.lang.String getReason() {
    return reason;
  }

  /**
   * The reason / details of the current status.
   * @param reason reason or {@code null} for none
   */
  public GoogleCloudIntegrationsV1alphaAuthConfig setReason(java.lang.String reason) {
    this.reason = reason;
    return this;
  }

  /**
   * The status of the auth config.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * The status of the auth config.
   * @param state state or {@code null} for none
   */
  public GoogleCloudIntegrationsV1alphaAuthConfig setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Output only. The timestamp when the auth config is modified.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. The timestamp when the auth config is modified.
   * @param updateTime updateTime or {@code null} for none
   */
  public GoogleCloudIntegrationsV1alphaAuthConfig setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  /**
   * The time until the auth config is valid. Empty or max value is considered the auth config won't
   * expire.
   * @return value or {@code null} for none
   */
  public String getValidTime() {
    return validTime;
  }

  /**
   * The time until the auth config is valid. Empty or max value is considered the auth config won't
   * expire.
   * @param validTime validTime or {@code null} for none
   */
  public GoogleCloudIntegrationsV1alphaAuthConfig setValidTime(String validTime) {
    this.validTime = validTime;
    return this;
  }

  /**
   * The visibility of the auth config.
   * @return value or {@code null} for none
   */
  public java.lang.String getVisibility() {
    return visibility;
  }

  /**
   * The visibility of the auth config.
   * @param visibility visibility or {@code null} for none
   */
  public GoogleCloudIntegrationsV1alphaAuthConfig setVisibility(java.lang.String visibility) {
    this.visibility = visibility;
    return this;
  }

  @Override
  public GoogleCloudIntegrationsV1alphaAuthConfig set(String fieldName, Object value) {
    return (GoogleCloudIntegrationsV1alphaAuthConfig) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudIntegrationsV1alphaAuthConfig clone() {
    return (GoogleCloudIntegrationsV1alphaAuthConfig) super.clone();
  }

}
