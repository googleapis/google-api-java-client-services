/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudbuild.v1.model;

/**
 * GitHubEnterpriseConfig represents a configuration for a GitHub Enterprise server.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Build API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GitHubEnterpriseConfig extends com.google.api.client.json.GenericJson {

  /**
   * Required. The GitHub app id of the Cloud Build app on the GitHub Enterprise server.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long appId;

  /**
   * Output only. Time when the installation was associated with the project.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Name to display for this config.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * The URL of the github enterprise host the configuration is for.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String hostUrl;

  /**
   * Optional. The full resource name for the GitHubEnterpriseConfig For example:
   * "projects/{$project_id}/locations/{$location_id}/githubEnterpriseConfigs/{$config_id}"
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Optional. The network to be used when reaching out to the GitHub Enterprise server. The VPC
   * network must be enabled for private service connection. This should be set if the GitHub
   * Enterprise server is hosted on-premises and not reachable by public internet. If this field is
   * left empty, no network peering will occur and calls to the GitHub Enterprise server will be
   * made over the public internet. Must be in the format
   * `projects/{project}/global/networks/{network}`, where {project} is a project number or id and
   * {network} is the name of a VPC network in the project.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String peeredNetwork;

  /**
   * Names of secrets in Secret Manager.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GitHubEnterpriseSecrets secrets;

  /**
   * Optional. SSL certificate to use for requests to GitHub Enterprise.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String sslCa;

  /**
   * The key that should be attached to webhook calls to the ReceiveWebhook endpoint.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String webhookKey;

  /**
   * Required. The GitHub app id of the Cloud Build app on the GitHub Enterprise server.
   * @return value or {@code null} for none
   */
  public java.lang.Long getAppId() {
    return appId;
  }

  /**
   * Required. The GitHub app id of the Cloud Build app on the GitHub Enterprise server.
   * @param appId appId or {@code null} for none
   */
  public GitHubEnterpriseConfig setAppId(java.lang.Long appId) {
    this.appId = appId;
    return this;
  }

  /**
   * Output only. Time when the installation was associated with the project.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. Time when the installation was associated with the project.
   * @param createTime createTime or {@code null} for none
   */
  public GitHubEnterpriseConfig setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Name to display for this config.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Name to display for this config.
   * @param displayName displayName or {@code null} for none
   */
  public GitHubEnterpriseConfig setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * The URL of the github enterprise host the configuration is for.
   * @return value or {@code null} for none
   */
  public java.lang.String getHostUrl() {
    return hostUrl;
  }

  /**
   * The URL of the github enterprise host the configuration is for.
   * @param hostUrl hostUrl or {@code null} for none
   */
  public GitHubEnterpriseConfig setHostUrl(java.lang.String hostUrl) {
    this.hostUrl = hostUrl;
    return this;
  }

  /**
   * Optional. The full resource name for the GitHubEnterpriseConfig For example:
   * "projects/{$project_id}/locations/{$location_id}/githubEnterpriseConfigs/{$config_id}"
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Optional. The full resource name for the GitHubEnterpriseConfig For example:
   * "projects/{$project_id}/locations/{$location_id}/githubEnterpriseConfigs/{$config_id}"
   * @param name name or {@code null} for none
   */
  public GitHubEnterpriseConfig setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Optional. The network to be used when reaching out to the GitHub Enterprise server. The VPC
   * network must be enabled for private service connection. This should be set if the GitHub
   * Enterprise server is hosted on-premises and not reachable by public internet. If this field is
   * left empty, no network peering will occur and calls to the GitHub Enterprise server will be
   * made over the public internet. Must be in the format
   * `projects/{project}/global/networks/{network}`, where {project} is a project number or id and
   * {network} is the name of a VPC network in the project.
   * @return value or {@code null} for none
   */
  public java.lang.String getPeeredNetwork() {
    return peeredNetwork;
  }

  /**
   * Optional. The network to be used when reaching out to the GitHub Enterprise server. The VPC
   * network must be enabled for private service connection. This should be set if the GitHub
   * Enterprise server is hosted on-premises and not reachable by public internet. If this field is
   * left empty, no network peering will occur and calls to the GitHub Enterprise server will be
   * made over the public internet. Must be in the format
   * `projects/{project}/global/networks/{network}`, where {project} is a project number or id and
   * {network} is the name of a VPC network in the project.
   * @param peeredNetwork peeredNetwork or {@code null} for none
   */
  public GitHubEnterpriseConfig setPeeredNetwork(java.lang.String peeredNetwork) {
    this.peeredNetwork = peeredNetwork;
    return this;
  }

  /**
   * Names of secrets in Secret Manager.
   * @return value or {@code null} for none
   */
  public GitHubEnterpriseSecrets getSecrets() {
    return secrets;
  }

  /**
   * Names of secrets in Secret Manager.
   * @param secrets secrets or {@code null} for none
   */
  public GitHubEnterpriseConfig setSecrets(GitHubEnterpriseSecrets secrets) {
    this.secrets = secrets;
    return this;
  }

  /**
   * Optional. SSL certificate to use for requests to GitHub Enterprise.
   * @return value or {@code null} for none
   */
  public java.lang.String getSslCa() {
    return sslCa;
  }

  /**
   * Optional. SSL certificate to use for requests to GitHub Enterprise.
   * @param sslCa sslCa or {@code null} for none
   */
  public GitHubEnterpriseConfig setSslCa(java.lang.String sslCa) {
    this.sslCa = sslCa;
    return this;
  }

  /**
   * The key that should be attached to webhook calls to the ReceiveWebhook endpoint.
   * @return value or {@code null} for none
   */
  public java.lang.String getWebhookKey() {
    return webhookKey;
  }

  /**
   * The key that should be attached to webhook calls to the ReceiveWebhook endpoint.
   * @param webhookKey webhookKey or {@code null} for none
   */
  public GitHubEnterpriseConfig setWebhookKey(java.lang.String webhookKey) {
    this.webhookKey = webhookKey;
    return this;
  }

  @Override
  public GitHubEnterpriseConfig set(String fieldName, Object value) {
    return (GitHubEnterpriseConfig) super.set(fieldName, value);
  }

  @Override
  public GitHubEnterpriseConfig clone() {
    return (GitHubEnterpriseConfig) super.clone();
  }

}
